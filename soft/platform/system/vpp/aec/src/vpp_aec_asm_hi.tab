		//0x0200		VoC_code_section_1
		//0x0200		Coolsand_AEC
0x5FE9F000,	//0x0200		VoC_push16(RA,DEFAULT)	|	VoC_lw16i_short(REG0,0x0,DEFAULT)
0x1500E142,	//0x0202		VoC_sw16_d(REG0,0x886)(lo)	|	VoC_lw16i_short(REG2,0x14,IN_PARALLEL)
0xF1070886,	//0x0204		VoC_lw16i_short(REG7,0x8,DEFAULT)	|	VoC_sw16_d(REG0,0x886)(hi)
		//0x0205		Coolsand_AEC_L0
0x0886083F,	//0x0206		VoC_mult16_rd(REG7,REG7,0x886)
0x00A40A80,	//0x0208		VoC_lw16i(REG0,0xa4)
0x00040A81,	//0x020a		VoC_lw16i(REG1,0x4)
0x01440A82,	//0x020c		VoC_lw16i(REG2,0x144)
0xC0384079,	//0x020e		VoC_add16_rr(REG0,REG0,REG7,IN_PARALLEL)	|	VoC_add16_rr(REG1,REG1,REG7,DEFAULT)
0x2B80C0BA,	//0x0210		VoC_jal(Coolsand_EchoCancelProcessing)(lo)	|	VoC_add16_rr(REG2,REG2,REG7,DEFAULT)
0xF021021E,	//0x0212		VoC_lw16i_short(REG1,0x1,DEFAULT)	|	VoC_jal(Coolsand_EchoCancelProcessing)(hi)
0x08860709,	//0x0214		VoC_add16_rd(REG1,REG1,0x886)
0x1501F282,	//0x0216		VoC_sw16_d(REG1,0x886)(lo)	|	VoC_lw16i_short(REG2,0x14,DEFAULT)
0x3AA20886,	//0x0218		VoC_bgt16_rd(Coolsand_AEC_L0,REG2,0x886)(lo)	|	VoC_sw16_d(REG1,0x886)(hi)
0xDFA90886,	//0x021a		VoC_pop16(RA,DEFAULT)	|	VoC_bgt16_rd(Coolsand_AEC_L0,REG2,0x886)(hi)
0xE580FFC0,	//0x021c		VoC_return	|	VoC_NOP
		//0x021e		Coolsand_EchoCancelProcessing
0xDFC2DFE9,	//0x021e		VoC_push16(REG2,DEFAULT)	|	VoC_push16(RA,DEFAULT)
0x0A81DFC1,	//0x0220		VoC_lw16i(REG1,0x1e4)(lo)	|	VoC_push16(REG1,DEFAULT)
0x0A8401E4,	//0x0222		VoC_lw16i(REG4,0x3e4)(lo)	|	VoC_lw16i(REG1,0x1e4)(hi)
0x0A8503E4,	//0x0224		VoC_lw16i(REG5,0x3f4)(lo)	|	VoC_lw16i(REG4,0x3e4)(hi)
0x2B8003F4,	//0x0226		VoC_jal(Coolsand_AnalysisProcessing)(lo)	|	VoC_lw16i(REG5,0x3f4)(hi)
0xDF800378,	//0x0228		VoC_pop16(REG0,DEFAULT)	|	VoC_jal(Coolsand_AnalysisProcessing)(hi)
0x02640A81,	//0x022a		VoC_lw16i(REG1,0x264)
0x04040A84,	//0x022c		VoC_lw16i(REG4,0x404)
0x04140A85,	//0x022e		VoC_lw16i(REG5,0x414)
0x03782B80,	//0x0230		VoC_jal(Coolsand_AnalysisProcessing)
0x04441804,	//0x0232		VoC_lw16i_set_inc(REG0,0x444,0x1)
0x048C1805,	//0x0234		VoC_lw16i_set_inc(REG1,0x48c,0x1)
0x04D41806,	//0x0236		VoC_lw16i_set_inc(REG2,0x4d4,0x1)
0x05641807,	//0x0238		VoC_lw16i_set_inc(REG3,0x564,0x1)
0x07461580,	//0x023a		VoC_sw32_d(REG01,0x746)
0x07481581,	//0x023c		VoC_sw32_d(REG23,0x748)
0x061C1804,	//0x023e		VoC_lw16i_set_inc(REG0,0x61c,0x1)
0x06261805,	//0x0240		VoC_lw16i_set_inc(REG1,0x626,0x1)
0x05F41806,	//0x0242		VoC_lw16i_set_inc(REG2,0x5f4,0x1)
0x05FE1807,	//0x0244		VoC_lw16i_set_inc(REG3,0x5fe,0x1)
0x074E1580,	//0x0246		VoC_sw32_d(REG01,0x74e)
0x074A1581,	//0x0248		VoC_sw32_d(REG23,0x74a)
0x04041804,	//0x024a		VoC_lw16i_set_inc(REG0,0x404,0x1)
0x04141805,	//0x024c		VoC_lw16i_set_inc(REG1,0x414,0x1)
0x03E41806,	//0x024e		VoC_lw16i_set_inc(REG2,0x3e4,0x1)
0x03F41807,	//0x0250		VoC_lw16i_set_inc(REG3,0x3f4,0x1)
0x07501580,	//0x0252		VoC_sw32_d(REG01,0x750)
0x06081804,	//0x0254		VoC_lw16i_set_inc(REG0,0x608,0x1)
0x06121805,	//0x0256		VoC_lw16i_set_inc(REG1,0x612,0x1)
0x07521581,	//0x0258		VoC_sw32_d(REG23,0x752)
0x06601806,	//0x025a		VoC_lw16i_set_inc(REG2,0x660,0x1)
0x074C1580,	//0x025c		VoC_sw32_d(REG01,0x74c)
0x07541502,	//0x025e		VoC_sw16_d(REG2,0x754)
0xFFC0F000,	//0x0260		VoC_NOP	|	VoC_lw16i_short(REG0,0x0,DEFAULT)
0x08871500,	//0x0262		VoC_sw16_d(REG0,0x887)
		//0x0264		Coolsand_EchoCancelProcessing_L0
0x040A2B80,	//0x0264		VoC_jal(Coolsand_AdaptiveFilteringAmp)
0x04A72B80,	//0x0266		VoC_jal(Coolsand_UpdateSpkPower)
0x08871407,	//0x0268		VoC_lw16_d(REG7,0x887)
0x03E40A82,	//0x026a		VoC_lw16i(REG2,0x3e4)
0x03F40A83,	//0x026c		VoC_lw16i(REG3,0x3f4)
0xC0FB40BA,	//0x026e		VoC_add16_rr(REG3,REG3,REG7,IN_PARALLEL)	|	VoC_add16_rr(REG2,REG2,REG7,DEFAULT)
0x07211406,	//0x0270		VoC_lw16_d(REG6,0x721)
0xD833D822,	//0x0272		VoC_lw16_p(REG3,REG3,DEFAULT)	|	VoC_lw16_p(REG2,REG2,DEFAULT)
0x04D42B80,	//0x0274		VoC_jal(Coolsand_FilterUpdateCotrol_Int)
0x08871407,	//0x0276		VoC_lw16_d(REG7,0x887)
0x05C42B80,	//0x0278		VoC_jal(Coolsand_UpdateFilterAmp)
0x0709F021,	//0x027a		VoC_add16_rd(REG1,REG1,0x887)(lo)	|	VoC_lw16i_short(REG1,0x1,DEFAULT)
0xF1220887,	//0x027c		VoC_lw16i_short(REG2,0x9,DEFAULT)	|	VoC_add16_rd(REG1,REG1,0x887)(hi)
0x08871501,	//0x027e		VoC_sw16_d(REG1,0x887)
0x02643411,	//0x0280		VoC_bgt16_rr(Coolsand_EchoCancelProcessing_L0,REG2,REG1)
0xF021F000,	//0x0282		VoC_lw16i_short(REG1,0x1,DEFAULT)	|	VoC_lw16i_short(REG0,0x0,DEFAULT)
0x06DF1500,	//0x0284		VoC_sw16_d(REG0,0x6df)
0x06E91501,	//0x0286		VoC_sw16_d(REG1,0x6e9)
0x04041806,	//0x0288		VoC_lw16i_set_inc(REG2,0x404,0x1)
0x04141807,	//0x028a		VoC_lw16i_set_inc(REG3,0x414,0x1)
0x06E90712,	//0x028c		VoC_add16_rd(REG2,REG2,0x6e9)
0x06E9071B,	//0x028e		VoC_add16_rd(REG3,REG3,0x6e9)
0x09E02B80,	//0x0290		VoC_jal(Coolsand_SumInstantPower)
0x1806FF26,	//0x0292		VoC_lw16i_set_inc(REG2,0x3e4,0x1)(lo)	|	VoC_movreg32(RL6,ACC0,DEFAULT)
0x180703E4,	//0x0294		VoC_lw16i_set_inc(REG3,0x3f4,0x1)(lo)	|	VoC_lw16i_set_inc(REG2,0x3e4,0x1)(hi)
0x071203F4,	//0x0296		VoC_add16_rd(REG2,REG2,0x6e9)(lo)	|	VoC_lw16i_set_inc(REG3,0x3f4,0x1)(hi)
0x071B06E9,	//0x0298		VoC_add16_rd(REG3,REG3,0x6e9)(lo)	|	VoC_add16_rd(REG2,REG2,0x6e9)(hi)
0x2B8006E9,	//0x029a		VoC_jal(Coolsand_SumInstantPower)(lo)	|	VoC_add16_rd(REG3,REG3,0x6e9)(hi)
0xFF2709E0,	//0x029c		VoC_movreg32(RL7,ACC0,DEFAULT)	|	VoC_jal(Coolsand_SumInstantPower)(hi)
0x061C1806,	//0x029e		VoC_lw16i_set_inc(REG2,0x61c,0x1)
0x06261807,	//0x02a0		VoC_lw16i_set_inc(REG3,0x626,0x1)
0x06E90712,	//0x02a2		VoC_add16_rd(REG2,REG2,0x6e9)
0x06E9071B,	//0x02a4		VoC_add16_rd(REG3,REG3,0x6e9)
0x09E02B80,	//0x02a6		VoC_jal(Coolsand_SumInstantPower)
0x0ABE1586,	//0x02a8		VoC_sw32_d(RL6,0xabe)
0x0AC01587,	//0x02aa		VoC_sw32_d(RL7,0xac0)
0x0AC21584,	//0x02ac		VoC_sw32_d(ACC0,0xac2)
0x0DA22B80,	//0x02ae		VoC_jal(Coolsand_ControlLogicDTD)
0x0AC41500,	//0x02b0		VoC_sw16_d(REG0,0xac4)
0xF061F040,	//0x02b2		VoC_lw16i_short(REG1,0x3,DEFAULT)	|	VoC_lw16i_short(REG0,0x2,DEFAULT)
0x06DF1500,	//0x02b4		VoC_sw16_d(REG0,0x6df)
0x06E91501,	//0x02b6		VoC_sw16_d(REG1,0x6e9)
0x04041806,	//0x02b8		VoC_lw16i_set_inc(REG2,0x404,0x1)
0x04141807,	//0x02ba		VoC_lw16i_set_inc(REG3,0x414,0x1)
0x06E90712,	//0x02bc		VoC_add16_rd(REG2,REG2,0x6e9)
0x06E9071B,	//0x02be		VoC_add16_rd(REG3,REG3,0x6e9)
0x09E02B80,	//0x02c0		VoC_jal(Coolsand_SumInstantPower)
0x0ABE0926,	//0x02c2		VoC_add32_rd(RL6,ACC0,0xabe)
0x03E41806,	//0x02c4		VoC_lw16i_set_inc(REG2,0x3e4,0x1)
0x03F41807,	//0x02c6		VoC_lw16i_set_inc(REG3,0x3f4,0x1)
0x06E90712,	//0x02c8		VoC_add16_rd(REG2,REG2,0x6e9)
0x06E9071B,	//0x02ca		VoC_add16_rd(REG3,REG3,0x6e9)
0x09E02B80,	//0x02cc		VoC_jal(Coolsand_SumInstantPower)
0x0AC00927,	//0x02ce		VoC_add32_rd(RL7,ACC0,0xac0)
0x061C1806,	//0x02d0		VoC_lw16i_set_inc(REG2,0x61c,0x1)
0x06261807,	//0x02d2		VoC_lw16i_set_inc(REG3,0x626,0x1)
0x06E90712,	//0x02d4		VoC_add16_rd(REG2,REG2,0x6e9)
0x06E9071B,	//0x02d6		VoC_add16_rd(REG3,REG3,0x6e9)
0x09E02B80,	//0x02d8		VoC_jal(Coolsand_SumInstantPower)
0x0AC20924,	//0x02da		VoC_add32_rd(ACC0,ACC0,0xac2)
0xFA0F7A0E,	//0x02dc		VoC_shr32_ri(RL7,0x1,IN_PARALLEL)	|	VoC_shr32_ri(RL6,0x1,DEFAULT)
0xDF46FA0C,	//0x02de		VoC_push32(RL6,DEFAULT)	|	VoC_shr32_ri(ACC0,0x1,DEFAULT)
0xDF44DF47,	//0x02e0		VoC_push32(ACC0,DEFAULT)	|	VoC_push32(RL7,DEFAULT)
0x0DA22B80,	//0x02e2		VoC_jal(Coolsand_ControlLogicDTD)
0x0AC51500,	//0x02e4		VoC_sw16_d(REG0,0xac5)
0x31C0F001,	//0x02e6		VoC_bnez16_r(Coolsand_EchoCancelProcessing_L3,REG0)(lo)	|	VoC_lw16i_short(REG1,0x0,DEFAULT)
0x7C0402ED,	//0x02e8		VoC_bltz32_d(Coolsand_EchoCancelProcessing_L3,0xab4)(lo)	|	VoC_bnez16_r(Coolsand_EchoCancelProcessing_L3,REG0)(hi)
0x15010AB4,	//0x02ea		VoC_sw16_d(REG1,0xac4)(lo)	|	VoC_bltz32_d(Coolsand_EchoCancelProcessing_L3,0xab4)(hi)
0xDF040AC4,	//0x02ec		VoC_pop32(ACC0,DEFAULT)	|	VoC_sw16_d(REG1,0xac4)(hi)
		//0x02ed		Coolsand_EchoCancelProcessing_L3
0xDF06DF07,	//0x02ee		VoC_pop32(RL6,DEFAULT)	|	VoC_pop32(RL7,DEFAULT)
0xDF447F3A,	//0x02f0		VoC_push32(ACC0,IN_PARALLEL)	|	VoC_movreg32(REG45,RL7,DEFAULT)
0xF4397BFA,	//0x02f2		VoC_lw16i_short(FORMAT32,0x7,IN_PARALLEL)	|	VoC_shr32_ri(REG45,0xffffffff,DEFAULT)
0x40331407,	//0x02f4		VoC_lw16_d(REG7,0x4033)
0xF5C2790C,	//0x02f6		VoC_lw16i_short(FORMATX,0xfffffff8,IN_PARALLEL)	|	VoC_shru16_ri(REG4,0x1,DEFAULT)
0xCE6FCD3C,	//0x02f8		VoC_macX_rr(REG5,REG7,DEFAULT)	|	VoC_multf32_rr(ACC0,REG4,REG7,DEFAULT)
0x5F04FFC0,	//0x02fa		VoC_pop32(ACC0,DEFAULT)	|	VoC_NOP
0xFBC7FF27,	//0x02fc		VoC_shr32_ri(RL7,0xfffffff8,DEFAULT)	|	VoC_movreg32(RL7,ACC0,IN_PARALLEL)
0xFFC07A47,	//0x02fe		VoC_NAD(IN_PARALLEL)	|	VoC_shr32_ri(RL7,0x8,DEFAULT)
0x09F42B80,	//0x0300		VoC_jal(Coolsand_ControlLogicMergeChnlEnhancedDTD)
0x0A062B80,	//0x0302		VoC_jal(Coolsand_ControlLogicSingleChnlEnhanced)
0xFFC0F000,	//0x0304		VoC_NOP	|	VoC_lw16i_short(REG0,0x0,DEFAULT)
0x08871500,	//0x0306		VoC_sw16_d(REG0,0x887)
		//0x0308		Coolsand_EchoCancelProcessing_L1
0x08871407,	//0x0308		VoC_lw16_d(REG7,0x887)
0x07CC2B80,	//0x030a		VoC_jal(Coolsand_ComputeNoiseWeight_DeciDirectCTRL)
0x0BC42B80,	//0x030c		VoC_jal(Coolsand_ComputeEchoWeight_DeciDirect_MFCOHFCTRL)
0x08F32B80,	//0x030e		VoC_jal(Coolsand_PostFiltering)
0x0709F021,	//0x0310		VoC_add16_rd(REG1,REG1,0x887)(lo)	|	VoC_lw16i_short(REG1,0x1,DEFAULT)
0xF1220887,	//0x0312		VoC_lw16i_short(REG2,0x9,DEFAULT)	|	VoC_add16_rd(REG1,REG1,0x887)(hi)
0x08871501,	//0x0314		VoC_sw16_d(REG1,0x887)
0x03083411,	//0x0316		VoC_bgt16_rr(Coolsand_EchoCancelProcessing_L1,REG2,REG1)
0x1401F040,	//0x0318		VoC_lw16_d(REG1,0x8e2)(lo)	|	VoC_lw16i_short(REG0,0x2,DEFAULT)
0x140208E2,	//0x031a		VoC_lw16_d(REG2,0x403b)(lo)	|	VoC_lw16_d(REG1,0x8e2)(hi)
0x3182403B,	//0x031c		VoC_bez16_r(Coolsand_EchoCancelProcessing_L2,REG2)(lo)	|	VoC_lw16_d(REG2,0x403b)(hi)
0x3581035A,	//0x031e		VoC_bne16_rr(Coolsand_EchoCancelProcessing_L2,REG0,REG1)(lo)	|	VoC_bez16_r(Coolsand_EchoCancelProcessing_L2,REG2)(hi)
0x0A84035A,	//0x0320		VoC_lw16i(REG4,0x61c)(lo)	|	VoC_bne16_rr(Coolsand_EchoCancelProcessing_L2,REG0,REG1)(hi)
0x0A85061C,	//0x0322		VoC_lw16i(REG5,0x626)(lo)	|	VoC_lw16i(REG4,0x61c)(hi)
0x0A860626,	//0x0324		VoC_lw16i(REG6,0x424)(lo)	|	VoC_lw16i(REG5,0x626)(hi)
0x0A870424,	//0x0326		VoC_lw16i(REG7,0x434)(lo)	|	VoC_lw16i(REG6,0x424)(hi)
0x7F460434,	//0x0328		VoC_lw32z(RL6,DEFAULT)	|	VoC_lw16i(REG7,0x434)(hi)
0x5F43FF47,	//0x032a		VoC_push32(REG67,DEFAULT)	|	VoC_lw32z(RL7,IN_PARALLEL)
0xE853E003,	//0x032c		VoC_loop_i_short(0x2,DEFAULT)	|	VoC_lw16i_short(REG3,0x0,IN_PARALLEL)
0xC19E5840,	//0x032e		VoC_add16_rr(REG6,REG6,REG3,IN_PARALLEL)	|	VoC_lw16_p(REG0,REG4,DEFAULT)
0xC1DF5851,	//0x0330		VoC_add16_rr(REG7,REG7,REG3,IN_PARALLEL)	|	VoC_lw16_p(REG1,REG5,DEFAULT)
0x08742B80,	//0x0332		VoC_jal(Coolsand_CmplxAppxNorm)
0x7B87C9E7,	//0x0334		VoC_shr32_ri(RL7,0xfffffff0,DEFAULT)	|	VoC_add32_rr(RL7,RL7,ACC0,DEFAULT)
0x7A87D860,	//0x0336		VoC_shr32_ri(RL7,0x10,DEFAULT)	|	VoC_lw16_p(REG0,REG6,IN_PARALLEL)
0xFFC0D871,	//0x0338		VoC_NAD	|	VoC_lw16_p(REG1,REG7,IN_PARALLEL)
0x08742B80,	//0x033a		VoC_jal(Coolsand_CmplxAppxNorm)
0xE01349A6,	//0x033c		VoC_lw16i_short(REG3,0x1,IN_PARALLEL)	|	VoC_add32_rr(RL6,RL6,ACC0,DEFAULT)
0xC11C7B86,	//0x033e		VoC_add16_rr(REG4,REG4,REG3,IN_PARALLEL)	|	VoC_shr32_ri(RL6,0xfffffff0,DEFAULT)
		//0x0340		VoC_endloop0
0xC15D7A86,	//0x0340		VoC_add16_rr(REG5,REG5,REG3,IN_PARALLEL)	|	VoC_shr32_ri(RL6,0x10,DEFAULT)
0xFFC07202,	//0x0342		VoC_NAD(IN_PARALLEL)	|	VoC_lw16i_short(REG2,0x10,DEFAULT)
0x07BE2B80,	//0x0344		VoC_jal(Coolsand_MSBPos)
0xF7C67107,	//0x0346		VoC_movreg16(REG6,RL7_LO,IN_PARALLEL)	|	VoC_lw16i_short(REG7,0x8,DEFAULT)
0xE03542FF,	//0x0348		VoC_lw16i_short(REG5,0x3,IN_PARALLEL)	|	VoC_sub16_rr(REG7,REG3,REG7,DEFAULT)
0xF5907E3E,	//0x034a		VoC_lw16i_short(FORMAT16,0xfffffff2,IN_PARALLEL)	|	VoC_shr16_rr(REG6,REG7,DEFAULT)
0xDF00C7AE,	//0x034c		VoC_pop32(REG01,DEFAULT)	|	VoC_multf16_rr(REG6,REG6,REG5,DEFAULT)
0xF00478FE,	//0x034e		VoC_lw16i_short(INC0,0x1,IN_PARALLEL)	|	VoC_shr16_ri(REG6,0xffffffff,DEFAULT)
0xF005780E,	//0x0350		VoC_lw16i_short(INC1,0x1,IN_PARALLEL)	|	VoC_shr16_ri(REG6,0x1,DEFAULT)
0xF5B86846,	//0x0352		VoC_lw16i_short(FORMAT16,0xfffffff7,IN_PARALLEL)	|	VoC_loop_i_short(0x2,DEFAULT)
0x8D8B8D82,	//0x0354		VoC_multf16_rp(REG3,REG6,REG1,DEFAULT)	|	VoC_multf16_rp(REG2,REG6,REG0,DEFAULT)
0xDC82FFC0,	//0x0356		VoC_sw16inc_p(REG2,REG0,DEFAULT)	|	VoC_NOP
		//0x0358		VoC_endloop0
0xFFC05C93,	//0x0358		VoC_NAD(IN_PARALLEL)	|	VoC_sw16inc_p(REG3,REG1,DEFAULT)
		//0x035a		Coolsand_EchoCancelProcessing_L2
0x042B1FBE,	//0x035a		VoC_lw16i_set_inc(REG2,0x42b,0xffffffff)
0x043B1FBF,	//0x035c		VoC_lw16i_set_inc(REG3,0x43b,0xffffffff)
0x042D1804,	//0x035e		VoC_lw16i_set_inc(REG0,0x42d,0x1)
0x043D1805,	//0x0360		VoC_lw16i_set_inc(REG1,0x43d,0x1)
0xE00668E5,	//0x0362		VoC_lw16i_short(REG6,0x0,IN_PARALLEL)	|	VoC_loop_i_short(0x7,DEFAULT)
0x879DD8A4,	//0x0364		VoC_sub16inc_rp(REG5,REG6,REG3,DEFAULT)	|	VoC_lw16inc_p(REG4,REG2,DEFAULT)
0xDC95DC84,	//0x0366		VoC_sw16inc_p(REG5,REG1,DEFAULT)	|	VoC_sw16inc_p(REG4,REG0,DEFAULT)
		//0x0367		VoC_endloop0
0x0A80DF83,	//0x0368		VoC_lw16i(REG0,0x424)(lo)	|	VoC_pop16(REG3,DEFAULT)
0x0A810424,	//0x036a		VoC_lw16i(REG1,0x434)(lo)	|	VoC_lw16i(REG0,0x424)(hi)
0x0A820434,	//0x036c		VoC_lw16i(REG2,0x2e4)(lo)	|	VoC_lw16i(REG1,0x434)(hi)
0x2B8002E4,	//0x036e		VoC_jal(Coolsand_SynthesisProcessing)(lo)	|	VoC_lw16i(REG2,0x2e4)(hi)
0xF02103BC,	//0x0370		VoC_lw16i_short(REG1,0x1,DEFAULT)	|	VoC_jal(Coolsand_SynthesisProcessing)(hi)
0x07210709,	//0x0372		VoC_add16_rd(REG1,REG1,0x721)
0x1501DFA9,	//0x0374		VoC_sw16_d(REG1,0x721)(lo)	|	VoC_pop16(RA,DEFAULT)
0xE5800721,	//0x0376		VoC_return	|	VoC_sw16_d(REG1,0x721)(hi)
		//0x0378		Coolsand_AnalysisProcessing
0x6023DFE9,	//0x0378		VoC_movreg16(REG3,REG1,DEFAULT)	|	VoC_push16(RA,DEFAULT)
0x4072E086,	//0x037a		VoC_add16_rr(REG2,REG1,REG6,DEFAULT)	|	VoC_lw16i_short(REG6,0x8,IN_PARALLEL)
0x2B80E787,	//0x037c		VoC_jal(Coolsand_BackCopyVec)(lo)	|	VoC_lw16i_short(REG7,0x78,IN_PARALLEL)
0xF1070660,	//0x037e		VoC_lw16i_short(REG7,0x8,DEFAULT)	|	VoC_jal(Coolsand_BackCopyVec)(hi)
0xF0056001,	//0x0380		VoC_lw16i_short(INC1,0x1,IN_PARALLEL)	|	VoC_movreg16(REG1,REG0,DEFAULT)
0xF3FE6062,	//0x0382		VoC_lw16i_short(INC2,0xffffffff,IN_PARALLEL)	|	VoC_movreg16(REG2,REG3,DEFAULT)
0x066C2B80,	//0x0384		VoC_jal(Coolsand_FlipVec)
0xF5E86061,	//0x0386		VoC_lw16i_short(FORMAT16,0xfffffffd,IN_PARALLEL)	|	VoC_movreg16(REG1,REG3,DEFAULT)
0x07560A82,	//0x0388		VoC_lw16i(REG2,0x756)
0x03640A83,	//0x038a		VoC_lw16i(REG3,0x364)
0x00800A80,	//0x038c		VoC_lw16i(REG0,0x80)
0x06742B80,	//0x038e		VoC_jal(Coolsand_MulVec)
0x0A87E081,	//0x0390		VoC_lw16i(REG7,0x10)(lo)	|	VoC_movreg16(REG1,REG4,DEFAULT)
0xFFC00010,	//0x0392		VoC_NAD	|	VoC_lw16i(REG7,0x10)(hi)
0x06802B80,	//0x0394		VoC_jal(Coolsand_ClearVec)
0xE1077030,	//0x0396		VoC_lw16i_short(REG7,0x10,IN_PARALLEL)	|	VoC_lw16i_short(INC0,0x1,DEFAULT)
0x03640A81,	//0x0398		VoC_lw16i(REG1,0x364)
0xF0067031,	//0x039a		VoC_lw16i_short(INC2,0x1,IN_PARALLEL)	|	VoC_lw16i_short(INC1,0x1,DEFAULT)
0x03A22C11,	//0x039c		VoC_loop_i(0x1,0x8)
0xF6826080,	//0x039e		VoC_movreg16(REG2,REG4,IN_PARALLEL)	|	VoC_movreg16(REG0,REG4,DEFAULT)
0x06862B80,	//0x03a0		VoC_jal(Coolsand_AddVec)
		//0x03a2		VoC_endloop1
0x60A1FFC0,	//0x03a2		VoC_movreg16(REG1,REG5,DEFAULT)	|	VoC_NAD
0xFFC0E107,	//0x03a4		VoC_NAD	|	VoC_lw16i_short(REG7,0x10,IN_PARALLEL)
0x06802B80,	//0x03a6		VoC_jal(Coolsand_ClearVec)
0xF68060A1,	//0x03a8		VoC_movreg16(REG0,REG4,IN_PARALLEL)	|	VoC_movreg16(REG1,REG5,DEFAULT)
0x2B80DF42,	//0x03aa		VoC_jal(Coolsand_IFFT16)(lo)	|	VoC_push32(REG45,DEFAULT)
0xDF00068C,	//0x03ac		VoC_pop32(REG01,DEFAULT)	|	VoC_jal(Coolsand_IFFT16)(hi)
0xF0097050,	//0x03ae		VoC_lw16i_short(INC1,0x2,IN_PARALLEL)	|	VoC_lw16i_short(INC0,0x2,DEFAULT)
0xD982E908,	//0x03b0		VoC_lw32_p(REG45,REG0,DEFAULT)	|	VoC_loop_i_short(0x8,DEFAULT)
0x78FCD98B,	//0x03b2		VoC_shr16_ri(REG4,0xffffffff,DEFAULT)	|	VoC_lw32_p(REG67,REG1,DEFAULT)
0x78FEF8FD,	//0x03b4		VoC_shr16_ri(REG6,0xffffffff,DEFAULT)	|	VoC_shr16_ri(REG5,0xffffffff,IN_PARALLEL)
0xDDC2F8FF,	//0x03b6		VoC_sw32inc_p(REG45,REG0,DEFAULT)	|	VoC_shr16_ri(REG7,0xffffffff,IN_PARALLEL)
		//0x03b8		VoC_endloop0
0xDFA9DDCB,	//0x03b8		VoC_pop16(RA,DEFAULT)	|	VoC_sw32inc_p(REG67,REG1,DEFAULT)
0xE580FFC0,	//0x03ba		VoC_return	|	VoC_NOP
		//0x03bc		Coolsand_SynthesisProcessing
0xDF415FE9,	//0x03bc		VoC_push32(REG23,IN_PARALLEL)	|	VoC_push16(RA,DEFAULT)
0x2B80DF40,	//0x03be		VoC_jal(Coolsand_IFFT16)(lo)	|	VoC_push32(REG01,DEFAULT)
0xDF00068C,	//0x03c0		VoC_pop32(REG01,DEFAULT)	|	VoC_jal(Coolsand_IFFT16)(hi)
0xF0087F07,	//0x03c2		VoC_lw16i_short(INC0,0x2,IN_PARALLEL)	|	VoC_movreg32(RL7,REG01,DEFAULT)
0xF00A6002,	//0x03c4		VoC_lw16i_short(INC2,0x2,IN_PARALLEL)	|	VoC_movreg16(REG2,REG0,DEFAULT)
0xD9C26905,	//0x03c6		VoC_lw32inc_p(REG45,REG0,IN_PARALLEL)	|	VoC_loop_i_short(0x8,DEFAULT)
0xF8ED78EC,	//0x03c8		VoC_shr16_ri(REG5,0xfffffffd,IN_PARALLEL)	|	VoC_shr16_ri(REG4,0xfffffffd,DEFAULT)
0xDDD2D9C2,	//0x03ca		VoC_sw32inc_p(REG45,REG2,DEFAULT)	|	VoC_lw32inc_p(REG45,REG0,DEFAULT)
		//0x03cb		VoC_endloop0
0xF0097F38,	//0x03cc		VoC_lw16i_short(INC1,0x2,IN_PARALLEL)	|	VoC_movreg32(REG01,RL7,DEFAULT)
0x0364180A,	//0x03ce		VoC_lw16i_set_inc(REG2,0x364,0x2)
0x03D62C11,	//0x03d0		VoC_loop_i(0x1,0x8)
0xE1076001,	//0x03d2		VoC_lw16i_short(REG7,0x10,IN_PARALLEL)	|	VoC_movreg16(REG1,REG0,DEFAULT)
0x079E2B80,	//0x03d4		VoC_jal(Coolsand_CopyVec)
		//0x03d6		VoC_endloop1
0x0A81FFC0,	//0x03d6		VoC_lw16i(REG1,0x364)(lo)	|	VoC_NAD
0x0A820364,	//0x03d8		VoC_lw16i(REG2,0x7d6)(lo)	|	VoC_lw16i(REG1,0x364)(hi)
0x602307D6,	//0x03da		VoC_movreg16(REG3,REG1,DEFAULT)	|	VoC_lw16i(REG2,0x7d6)(hi)
0x0A80F5E8,	//0x03dc		VoC_lw16i(REG0,0x80)(lo)	|	VoC_lw16i_short(FORMAT16,0xfffffffd,IN_PARALLEL)
0xFFC00080,	//0x03de		VoC_NAD	|	VoC_lw16i(REG0,0x80)(hi)
0x06742B80,	//0x03e0		VoC_jal(Coolsand_MulVec)
0xF0065F02,	//0x03e2		VoC_lw16i_short(INC2,0x1,IN_PARALLEL)	|	VoC_pop32(REG45,DEFAULT)
0xF6817031,	//0x03e4		VoC_movreg16(REG1,REG4,IN_PARALLEL)	|	VoC_lw16i_short(INC1,0x1,DEFAULT)
0x1804E082,	//0x03e6		VoC_lw16i_set_inc(REG0,0x364,0x1)(lo)	|	VoC_movreg16(REG2,REG4,DEFAULT)
0x0A870364,	//0x03e8		VoC_lw16i(REG7,0x80)(lo)	|	VoC_lw16i_set_inc(REG0,0x364,0x1)(hi)
0xFFC00080,	//0x03ea		VoC_NAD	|	VoC_lw16i(REG7,0x80)(hi)
0x06862B80,	//0x03ec		VoC_jal(Coolsand_AddVec)
0xF6A26081,	//0x03ee		VoC_movreg16(REG2,REG5,IN_PARALLEL)	|	VoC_movreg16(REG1,REG4,DEFAULT)
0x00080A87,	//0x03f0		VoC_lw16i(REG7,0x8)
0xF00A7051,	//0x03f2		VoC_lw16i_short(INC2,0x2,IN_PARALLEL)	|	VoC_lw16i_short(INC1,0x2,DEFAULT)
0x079E2B80,	//0x03f4		VoC_jal(Coolsand_CopyVec)
0xE0836081,	//0x03f6		VoC_lw16i_short(REG3,0x8,IN_PARALLEL)	|	VoC_movreg16(REG1,REG4,DEFAULT)
0xF6824059,	//0x03f8		VoC_movreg16(REG2,REG4,IN_PARALLEL)	|	VoC_add16_rr(REG1,REG1,REG3,DEFAULT)
0xF00A7051,	//0x03fa		VoC_lw16i_short(INC2,0x2,IN_PARALLEL)	|	VoC_lw16i_short(INC1,0x2,DEFAULT)
0x00780A87,	//0x03fc		VoC_lw16i(REG7,0x78)
0x079E2B80,	//0x03fe		VoC_jal(Coolsand_CopyVec)
0xE7836081,	//0x0400		VoC_lw16i_short(REG3,0x78,IN_PARALLEL)	|	VoC_movreg16(REG1,REG4,DEFAULT)
0xE1074059,	//0x0402		VoC_lw16i_short(REG7,0x10,IN_PARALLEL)	|	VoC_add16_rr(REG1,REG1,REG3,DEFAULT)
0x06802B80,	//0x0404		VoC_jal(Coolsand_ClearVec)
0xFFC0DFA9,	//0x0406		VoC_NOP	|	VoC_pop16(RA,DEFAULT)
0xFFC06580,	//0x0408		VoC_NAD(IN_PARALLEL)	|	VoC_return
		//0x040a		Coolsand_AdaptiveFilteringAmp
0xE0775FE9,	//0x040a		VoC_lw16i_short(REG7,0x7,IN_PARALLEL)	|	VoC_push16(RA,DEFAULT)
0x07461481,	//0x040c		VoC_lw32_d(REG23,0x746)
0xC0FB40BA,	//0x040e		VoC_add16_rr(REG3,REG3,REG7,IN_PARALLEL)	|	VoC_add16_rr(REG2,REG2,REG7,DEFAULT)
0x074C1482,	//0x0410		VoC_lw32_d(REG45,0x74c)
0x5826FF08,	//0x0412		VoC_lw16_p(REG6,REG2,DEFAULT)	|	VoC_movreg32(REG01,REG23,DEFAULT)
0x5837F3FE,	//0x0414		VoC_lw16_p(REG7,REG3,DEFAULT)	|	VoC_lw16i_short(INC2,0xffffffff,IN_PARALLEL)
0x5C46F3FF,	//0x0416		VoC_sw16_p(REG6,REG4,DEFAULT)	|	VoC_lw16i_short(INC3,0xffffffff,IN_PARALLEL)
0x5C57DE10,	//0x0418		VoC_sw16_p(REG7,REG5,DEFAULT)	|	VoC_inc_p(REG2,IN_PARALLEL)
0x77F0DE18,	//0x041a		VoC_lw16i_short(INC0,0xffffffff,DEFAULT)	|	VoC_inc_p(REG3,IN_PARALLEL)
0x1483F3FD,	//0x041c		VoC_lw32_d(REG67,0x752)(lo)	|	VoC_lw16i_short(INC1,0xffffffff,IN_PARALLEL)
0xE8E40752,	//0x041e		VoC_loop_i_short(0x7,DEFAULT)	|	VoC_lw32_d(REG67,0x752)(hi)
0xD8B5D8A4,	//0x0420		VoC_lw16inc_p(REG5,REG3,DEFAULT)	|	VoC_lw16inc_p(REG4,REG2,DEFAULT)
0xDC95DC84,	//0x0422		VoC_sw16inc_p(REG5,REG1,DEFAULT)	|	VoC_sw16inc_p(REG4,REG0,DEFAULT)
		//0x0423		VoC_endloop0
0xD877D866,	//0x0424		VoC_lw16_p(REG7,REG7,DEFAULT)	|	VoC_lw16_p(REG6,REG6,DEFAULT)
0xF00A5C06,	//0x0426		VoC_lw16i_short(INC2,0x2,IN_PARALLEL)	|	VoC_sw16_p(REG6,REG0,DEFAULT)
0xF00B5C17,	//0x0428		VoC_lw16i_short(INC3,0x2,IN_PARALLEL)	|	VoC_sw16_p(REG7,REG1,DEFAULT)
0x07481481,	//0x042a		VoC_lw32_d(REG23,0x748)
0x06301804,	//0x042c		VoC_lw16i_set_inc(REG0,0x630,0x1)
0x06381805,	//0x042e		VoC_lw16i_set_inc(REG1,0x638,0x1)
0xFF426908,	//0x0430		VoC_lw32z(REG45,IN_PARALLEL)	|	VoC_loop_i_short(0x8,DEFAULT)
0xD9DBD9D4,	//0x0432		VoC_lw32inc_p(REG67,REG3,DEFAULT)	|	VoC_lw32inc_p(ACC0,REG2,DEFAULT)
0xFBA37BA4,	//0x0434		VoC_shr32_ri(REG67,0xfffffff4,IN_PARALLEL)	|	VoC_shr32_ri(ACC0,0xfffffff4,DEFAULT)
0xDC89C37F,	//0x0436		VoC_sw16inc_p(ACC0_HI,REG0,DEFAULT)	|	VoC_sub16_rr(REG7,REG5,REG7,DEFAULT)
		//0x0438		VoC_endloop0
0x1581DC97,	//0x0438		VoC_sw32_d(REG23,0x748)(lo)	|	VoC_sw16inc_p(REG7,REG1,DEFAULT)
0x14800748,	//0x043a		VoC_lw32_d(REG01,0x746)(lo)	|	VoC_sw32_d(REG23,0x748)(hi)
0x180A0746,	//0x043c		VoC_lw16i_set_inc(REG2,0x630,0x2)(lo)	|	VoC_lw32_d(REG01,0x746)(hi)
0x180B0630,	//0x043e		VoC_lw16i_set_inc(REG3,0x638,0x2)(lo)	|	VoC_lw16i_set_inc(REG2,0x630,0x2)(hi)
0x0A8E0638,	//0x0440		VoC_lw16i(RL7_LO,0x640)(lo)	|	VoC_lw16i_set_inc(REG3,0x638,0x2)(hi)
0x70500640,	//0x0442		VoC_lw16i_short(INC0,0x2,DEFAULT)	|	VoC_lw16i(RL7_LO,0x640)(hi)
0x59D2F009,	//0x0444		VoC_lw32inc_p(REG45,REG2,DEFAULT)	|	VoC_lw16i_short(INC1,0x2,IN_PARALLEL)
0xFFC0F459,	//0x0446		VoC_NAD	|	VoC_lw16i_short(FORMAT32,0xb,IN_PARALLEL)
0xD9DB688F,	//0x0448		VoC_lw32inc_p(REG67,REG3,IN_PARALLEL)	|	VoC_loop_i_short(0x4,DEFAULT)
0x9B451B04,	//0x044a		VoC_multf32inc_rp(ACC1,REG5,REG0,IN_PARALLEL)	|	VoC_multf32inc_rp(ACC0,REG4,REG0,DEFAULT)
0x070CF004,	//0x044c		VoC_sub16inc_rp(REG4,REG4,REG1,DEFAULT)	|	VoC_lw16i_short(REG4,0x0,DEFAULT)
0x4E34870D,	//0x044e		VoC_mac32_rr(REG6,REG4,DEFAULT)	|	VoC_sub16inc_rp(REG5,REG4,REG1,IN_PARALLEL)
0xD9DBCE3D,	//0x0450		VoC_lw32inc_p(REG67,REG3,DEFAULT)	|	VoC_mac32_rr(REG7,REG5,IN_PARALLEL)
0xF66E61C3,	//0x0452		VoC_movreg16(RL7_LO,REG3,IN_PARALLEL)	|	VoC_movreg16(REG3,RL7_LO,DEFAULT)
0xDDDCD9D2,	//0x0454		VoC_sw32inc_p(ACC0,REG3,DEFAULT)	|	VoC_lw32inc_p(REG45,REG2,DEFAULT)
0x61C3DDDD,	//0x0456		VoC_movreg16(REG3,RL7_LO,DEFAULT)	|	VoC_sw32inc_p(ACC1,REG3,DEFAULT)
		//0x0457		VoC_endloop0
0x1480F66E,	//0x0458		VoC_lw32_d(REG01,0x746)(lo)	|	VoC_movreg16(RL7_LO,REG3,IN_PARALLEL)
0x180A0746,	//0x045a		VoC_lw16i_set_inc(REG2,0x638,0x2)(lo)	|	VoC_lw32_d(REG01,0x746)(hi)
0x180B0638,	//0x045c		VoC_lw16i_set_inc(REG3,0x630,0x2)(lo)	|	VoC_lw16i_set_inc(REG2,0x638,0x2)(hi)
0x0A8E0630,	//0x045e		VoC_lw16i(RL7_LO,0x650)(lo)	|	VoC_lw16i_set_inc(REG3,0x630,0x2)(hi)
0x70500650,	//0x0460		VoC_lw16i_short(INC0,0x2,DEFAULT)	|	VoC_lw16i(RL7_LO,0x650)(hi)
0x59D2F009,	//0x0462		VoC_lw32inc_p(REG45,REG2,DEFAULT)	|	VoC_lw16i_short(INC1,0x2,IN_PARALLEL)
0xFFC0F459,	//0x0464		VoC_NAD	|	VoC_lw16i_short(FORMAT32,0xb,IN_PARALLEL)
0xD9DB688C,	//0x0466		VoC_lw32inc_p(REG67,REG3,IN_PARALLEL)	|	VoC_loop_i_short(0x4,DEFAULT)
0x9B451B04,	//0x0468		VoC_multf32inc_rp(ACC1,REG5,REG0,IN_PARALLEL)	|	VoC_multf32inc_rp(ACC0,REG4,REG0,DEFAULT)
0xD1395131,	//0x046a		VoC_mac32inc_rp(REG7,REG1,IN_PARALLEL)	|	VoC_mac32inc_rp(REG6,REG1,DEFAULT)
0x61C3D9DB,	//0x046c		VoC_movreg16(REG3,RL7_LO,DEFAULT)	|	VoC_lw32inc_p(REG67,REG3,DEFAULT)
0xD9D2F66E,	//0x046e		VoC_lw32inc_p(REG45,REG2,DEFAULT)	|	VoC_movreg16(RL7_LO,REG3,IN_PARALLEL)
0xDDDDDDDC,	//0x0470		VoC_sw32inc_p(ACC1,REG3,DEFAULT)	|	VoC_sw32inc_p(ACC0,REG3,DEFAULT)
		//0x0472		VoC_endloop0
0xF66E61C3,	//0x0472		VoC_movreg16(RL7_LO,REG3,IN_PARALLEL)	|	VoC_movreg16(REG3,RL7_LO,DEFAULT)
0x07461580,	//0x0474		VoC_sw32_d(REG01,0x746)
0x074A1481,	//0x0476		VoC_lw32_d(REG23,0x74a)
0x06401808,	//0x0478		VoC_lw16i_set_inc(REG0,0x640,0x2)
0x06501809,	//0x047a		VoC_lw16i_set_inc(REG1,0x650,0x2)
0xF0077032,	//0x047c		VoC_lw16i_short(INC3,0x1,IN_PARALLEL)	|	VoC_lw16i_short(INC2,0x1,DEFAULT)
0xFF457F44,	//0x047e		VoC_lw32z(ACC1,IN_PARALLEL)	|	VoC_lw32z(ACC0,DEFAULT)
0xE905FFC0,	//0x0480		VoC_loop_i_short(0x8,DEFAULT)	|	VoC_NAD
0xFA5D1304,	//0x0482		VoC_shr32_ri(ACC1,0xb,IN_PARALLEL)	|	VoC_add32inc_rp(ACC0,ACC0,REG0,DEFAULT)
0xFBAC134D,	//0x0484		VoC_shr32_ri(ACC0,0xfffffff5,IN_PARALLEL)	|	VoC_add32inc_rp(ACC1,ACC1,REG1,DEFAULT)
		//0x0486		VoC_endloop0
0xFBAD7A5C,	//0x0486		VoC_shr32_ri(ACC1,0xfffffff5,IN_PARALLEL)	|	VoC_shr32_ri(ACC0,0xb,DEFAULT)
0x0A80F6B8,	//0x0488		VoC_lw16i(REG0,0xa5a)(lo)	|	VoC_lw16i_short(FORMAT16,0xfffffff5,DEFAULT)
0x07000A5A,	//0x048a		VoC_add16_rd(REG0,REG0,0x887)(lo)	|	VoC_lw16i(REG0,0xa5a)(hi)
0x7BA40887,	//0x048c		VoC_shr32_ri(ACC0,0xfffffff4,DEFAULT)	|	VoC_add16_rd(REG0,REG0,0x887)(hi)
0x6126FBFD,	//0x048e		VoC_movreg16(REG6,ACC0_HI,DEFAULT)	|	VoC_shr32_ri(ACC1,0xffffffff,IN_PARALLEL)
0x0D86F767,	//0x0490		VoC_multf16_rp(REG6,REG6,REG0,DEFAULT)	|	VoC_movreg16(REG7,ACC1_HI,IN_PARALLEL)
0x14808DC7,	//0x0492		VoC_lw32_d(REG01,0x74e)(lo)	|	VoC_multf16_rp(REG7,REG7,REG0,IN_PARALLEL)
0x7030074E,	//0x0494		VoC_lw16i_short(INC0,0x1,DEFAULT)	|	VoC_lw32_d(REG01,0x74e)(hi)
0xDCA6F005,	//0x0496		VoC_sw16inc_p(REG6,REG2,DEFAULT)	|	VoC_lw16i_short(INC1,0x1,IN_PARALLEL)
0x1481DCB7,	//0x0498		VoC_lw32_d(REG23,0x750)(lo)	|	VoC_sw16inc_p(REG7,REG3,DEFAULT)
0x15810750,	//0x049a		VoC_sw32_d(REG23,0x74a)(lo)	|	VoC_lw32_d(REG23,0x750)(hi)
0xBAB4074A,	//0x049c		VoC_sub16inc_pr(REG4,REG2,REG6,DEFAULT)	|	VoC_sw32_d(REG23,0x74a)(hi)
0xDC84BAFD,	//0x049e		VoC_sw16inc_p(REG4,REG0,DEFAULT)	|	VoC_sub16inc_pr(REG5,REG3,REG7,DEFAULT)
0x1581DC95,	//0x04a0		VoC_sw32_d(REG23,0x750)(lo)	|	VoC_sw16inc_p(REG5,REG1,DEFAULT)
0xDFA90750,	//0x04a2		VoC_pop16(RA,DEFAULT)	|	VoC_sw32_d(REG23,0x750)(hi)
0x074E1580,	//0x04a4		VoC_sw32_d(REG01,0x74e)
0xDFE9E580,	//0x04a6		VoC_push16(RA,DEFAULT)	|	VoC_return
		//0x04a7		Coolsand_UpdateSpkPower
0xF0057030,	//0x04a8		VoC_lw16i_short(INC1,0x1,IN_PARALLEL)	|	VoC_lw16i_short(INC0,0x1,DEFAULT)
0x07521480,	//0x04aa		VoC_lw32_d(REG01,0x752)
0xF0077032,	//0x04ac		VoC_lw16i_short(INC3,0x1,IN_PARALLEL)	|	VoC_lw16i_short(INC2,0x1,DEFAULT)
0xF4315884,	//0x04ae		VoC_lw16i_short(FORMAT32,0x6,IN_PARALLEL)	|	VoC_lw16inc_p(REG4,REG0,DEFAULT)
0xCD245895,	//0x04b0		VoC_multf32_rr(ACC0,REG4,REG4,IN_PARALLEL)	|	VoC_lw16inc_p(REG5,REG1,DEFAULT)
0x1481CD6D,	//0x04b2		VoC_lw32_d(REG23,0x74c)(lo)	|	VoC_multf32_rr(ACC1,REG5,REG5,DEFAULT)
0xC92C074C,	//0x04b4		VoC_add32_rr(ACC0,ACC0,ACC1,DEFAULT)	|	VoC_lw32_d(REG23,0x74c)(hi)
0xFBD458A4,	//0x04b6		VoC_shr32_ri(ACC0,0xfffffffa,IN_PARALLEL)	|	VoC_lw16inc_p(REG4,REG2,DEFAULT)
0xCD2658B5,	//0x04b8		VoC_multf32_rr(RL6,REG4,REG4,IN_PARALLEL)	|	VoC_lw16inc_p(REG5,REG3,DEFAULT)
0xFA344D6F,	//0x04ba		VoC_shr32_ri(ACC0,0x6,IN_PARALLEL)	|	VoC_multf32_rr(RL7,REG5,REG5,DEFAULT)
0x07521580,	//0x04bc		VoC_sw32_d(REG01,0x752)
0x200AC9BE,	//0x04be		VoC_lw16d_set_inc(REG2,0x754,0x2)(lo)	|	VoC_add32_rr(RL6,RL6,RL7,DEFAULT)
0x15810754,	//0x04c0		VoC_sw32_d(REG23,0x74c)(lo)	|	VoC_lw16d_set_inc(REG2,0x754,0x2)(hi)
0x7BD6074C,	//0x04c2		VoC_shr32_ri(RL6,0xfffffffa,DEFAULT)	|	VoC_sw32_d(REG23,0x74c)(hi)
0x7A36D995,	//0x04c4		VoC_shr32_ri(RL6,0x6,DEFAULT)	|	VoC_lw32_p(ACC1,REG2,IN_PARALLEL)
0xCB34FBFD,	//0x04c6		VoC_sub32_rr(ACC0,ACC0,RL6,DEFAULT)	|	VoC_shr32_ri(ACC1,0xffffffff,IN_PARALLEL)
0xFA0CC92C,	//0x04c8		VoC_shr32_ri(ACC0,0x1,DEFAULT)	|	VoC_add32_rr(ACC0,ACC0,ACC1,DEFAULT)
0xFA14FBF4,	//0x04ca		VoC_shr32_ri(ACC0,0x2,DEFAULT)	|	VoC_shr32_ri(ACC0,0xfffffffe,DEFAULT)
0x04CF33C4,	//0x04cc		VoC_bnltz32_r(Coolsand_UpdateSpkPower100,ACC0)
0xDFA9FF44,	//0x04ce		VoC_pop16(RA,DEFAULT)	|	VoC_lw32z(ACC0,DEFAULT)
		//0x04cf		Coolsand_UpdateSpkPower100
0x1502DDD4,	//0x04d0		VoC_sw16_d(REG2,0x754)(lo)	|	VoC_sw32inc_p(ACC0,REG2,DEFAULT)
0xE5800754,	//0x04d2		VoC_return	|	VoC_sw16_d(REG2,0x754)(hi)
		//0x04d4		Coolsand_FilterUpdateCotrol_Int
0x0A80DFE9,	//0x04d4		VoC_lw16i(REG0,0x61c)(lo)	|	VoC_push16(RA,DEFAULT)
0x0A81061C,	//0x04d6		VoC_lw16i(REG1,0x626)(lo)	|	VoC_lw16i(REG0,0x61c)(hi)
0x60E60626,	//0x04d8		VoC_movreg16(REG6,REG7,DEFAULT)	|	VoC_lw16i(REG1,0x626)(hi)
0xC818DFC6,	//0x04da		VoC_add32_rr(REG01,REG01,REG67,DEFAULT)	|	VoC_push16(REG6,IN_PARALLEL)
0x1884F019,	//0x04dc		VoC_multf32_rp(ACC0,REG2,REG0,DEFAULT)	|	VoC_lw16i_short(FORMAT32,0x0,DEFAULT)
0x501998C5,	//0x04de		VoC_mac32_rp(REG3,REG1,DEFAULT)	|	VoC_multf32_rp(ACC1,REG3,REG0,IN_PARALLEL)
0xFFC0D091,	//0x04e0		VoC_NOP	|	VoC_msu32_rp(REG2,REG1,IN_PARALLEL)
0xFA3D7A3C,	//0x04e2		VoC_shr32_ri(ACC1,0x7,IN_PARALLEL)	|	VoC_shr32_ri(ACC0,0x7,DEFAULT)
0xE0855FC7,	//0x04e4		VoC_lw16i_short(REG5,0x8,IN_PARALLEL)	|	VoC_push16(REG7,DEFAULT)
0xE0047F27,	//0x04e6		VoC_lw16i_short(REG4,0x0,IN_PARALLEL)	|	VoC_movreg32(RL7,ACC0,DEFAULT)
0x04EC33C4,	//0x04e8		VoC_bnltz32_r(Coolsand_FilterUpdateCotrol_Int_InstantCorrI_abs,ACC0)
0xCBE7FF47,	//0x04ea		VoC_sub32_rr(RL7,RL7,ACC0,DEFAULT)	|	VoC_lw32z(RL7,DEFAULT)
		//0x04ec		Coolsand_FilterUpdateCotrol_Int_InstantCorrI_abs
0x04F436BA,	//0x04ec		VoC_bngt32_rr(Coolsand_FilterUpdateCotrol_Int_InstantCorrI,RL7,REG45)
0xFF277F14,	//0x04ee		VoC_movreg32(RL7,ACC0,IN_PARALLEL)	|	VoC_movreg32(ACC0,REG45,DEFAULT)
0x04F43287,	//0x04f0		VoC_bgtz32_r(Coolsand_FilterUpdateCotrol_Int_InstantCorrI,RL7)
0xE0087709,	//0x04f2		VoC_lw16i_short(ACC0_LO,0x0,IN_PARALLEL)	|	VoC_lw16i_short(ACC0_HI,0xfff8,DEFAULT)
		//0x04f4		Coolsand_FilterUpdateCotrol_Int_InstantCorrI
0x33C5FF2E,	//0x04f4		VoC_bnltz32_r(Coolsand_FilterUpdateCotrol_Int_InstantCorrQ_abs,ACC1)(lo)	|	VoC_movreg32(RL6,ACC1,DEFAULT)
0xFF4604FA,	//0x04f6		VoC_lw32z(RL6,DEFAULT)	|	VoC_bnltz32_r(Coolsand_FilterUpdateCotrol_Int_InstantCorrQ_abs,ACC1)(hi)
0xFFC04BAE,	//0x04f8		VoC_NAD(IN_PARALLEL)	|	VoC_sub32_rr(RL6,RL6,ACC1,DEFAULT)
		//0x04fa		Coolsand_FilterUpdateCotrol_Int_InstantCorrQ_abs
0x050236B2,	//0x04fa		VoC_bngt32_rr(Coolsand_FilterUpdateCotrol_Int_InstantCorrQ,RL6,REG45)
0xFF2E7F15,	//0x04fc		VoC_movreg32(RL6,ACC1,IN_PARALLEL)	|	VoC_movreg32(ACC1,REG45,DEFAULT)
0x05023286,	//0x04fe		VoC_bgtz32_r(Coolsand_FilterUpdateCotrol_Int_InstantCorrQ,RL6)
0xE00A770B,	//0x0500		VoC_lw16i_short(ACC1_LO,0x0,IN_PARALLEL)	|	VoC_lw16i_short(ACC1_HI,0xfff8,DEFAULT)
		//0x0502		Coolsand_FilterUpdateCotrol_Int_InstantCorrQ
0x0A84C1FE,	//0x0502		VoC_lw16i(REG4,0x684)(lo)	|	VoC_add16_rr(REG6,REG7,REG7,DEFAULT)
0x0A850684,	//0x0504		VoC_lw16i(REG5,0x696)(lo)	|	VoC_lw16i(REG4,0x684)(hi)
0x41340696,	//0x0506		VoC_add16_rr(REG4,REG4,REG6,DEFAULT)	|	VoC_lw16i(REG5,0x696)(hi)
0x5F41C175,	//0x0508		VoC_push32(REG23,DEFAULT)	|	VoC_add16_rr(REG5,REG5,REG6,IN_PARALLEL)
0x59A7F581,	//0x050a		VoC_lw32_p(RL7,REG4,DEFAULT)	|	VoC_lw16i_short(FORMAT32,0xfffffff0,IN_PARALLEL)
0xD9AEF5FA,	//0x050c		VoC_lw32_p(RL6,REG5,DEFAULT)	|	VoC_lw16i_short(FORMATX,0xffffffff,IN_PARALLEL)
0xDF405FC7,	//0x050e		VoC_push32(REG01,IN_PARALLEL)	|	VoC_push16(REG7,DEFAULT)
0xFF297F20,	//0x0510		VoC_movreg32(REG23,ACC1,IN_PARALLEL)	|	VoC_movreg32(REG01,ACC0,DEFAULT)
0x33C0FF43,	//0x0512		VoC_bnltz32_r(Coolsand_FilterUpdateCotrol_Int_L0,REG01)(lo)	|	VoC_lw32z(REG67,DEFAULT)
0xCAC00516,	//0x0514		VoC_sub32_rr(REG01,REG67,REG01,DEFAULT)	|	VoC_bnltz32_r(Coolsand_FilterUpdateCotrol_Int_L0,REG01)(hi)
		//0x0516		Coolsand_FilterUpdateCotrol_Int_L0
0x051933C1,	//0x0516		VoC_bnltz32_r(Coolsand_FilterUpdateCotrol_Int_L1,REG23)
0xF026CAC9,	//0x0518		VoC_lw16i_short(REG6,0x1,DEFAULT)	|	VoC_sub32_rr(REG23,REG67,REG23,DEFAULT)
		//0x0519		Coolsand_FilterUpdateCotrol_Int_L1
0x051E3603,	//0x051a		VoC_bgt32_rr(Coolsand_FilterUpdateCotrol_Int_L2,REG01,REG67)
0x0532368B,	//0x051c		VoC_bngt32_rr(Coolsand_FilterUpdateCotrol_Int_L3,REG23,REG67)
		//0x051e		Coolsand_FilterUpdateCotrol_Int_L2
0x400E1406,	//0x051e		VoC_lw16_d(REG6,0x400e)
0x400F0836,	//0x0520		VoC_mult16_rd(REG6,REG6,0x400f)
0x4B70CB39,	//0x0522		VoC_sub32_rr(REG01,ACC1,RL6,DEFAULT)	|	VoC_sub32_rr(REG23,ACC0,RL7,DEFAULT)
0x790ACCF4,	//0x0524		VoC_shru16_ri(REG2,0x1,DEFAULT)	|	VoC_multf32_rr(ACC0,REG3,REG6,IN_PARALLEL)
0xCE56CC75,	//0x0526		VoC_macX_rr(REG2,REG6,DEFAULT)	|	VoC_multf32_rr(ACC1,REG1,REG6,IN_PARALLEL)
0xFA7CF908,	//0x0528		VoC_shr32_ri(ACC0,0xf,DEFAULT)	|	VoC_shru16_ri(REG0,0x1,DEFAULT)
0xCE86493C,	//0x052a		VoC_macX_rr(REG0,REG6,IN_PARALLEL)	|	VoC_add32_rr(ACC0,ACC0,RL7,DEFAULT)
0xFA7DFFC0,	//0x052c		VoC_shr32_ri(ACC1,0xf,DEFAULT)	|	VoC_NOP
0xDDA4C975,	//0x052e		VoC_sw32_p(ACC0,REG4,DEFAULT)	|	VoC_add32_rr(ACC1,ACC1,RL6,DEFAULT)
0xFFC05DAD,	//0x0530		VoC_NAD(IN_PARALLEL)	|	VoC_sw32_p(ACC1,REG5,DEFAULT)
		//0x0532		Coolsand_FilterUpdateCotrol_Int_L3
0x400E1406,	//0x0532		VoC_lw16_d(REG6,0x400e)
0xDF875F00,	//0x0534		VoC_pop16(REG7,IN_PARALLEL)	|	VoC_pop32(REG01,DEFAULT)
0xDF42DF01,	//0x0536		VoC_push32(REG45,DEFAULT)	|	VoC_pop32(REG23,DEFAULT)
0x06720A84,	//0x0538		VoC_lw16i(REG4,0x672)
0xF439413C,	//0x053a		VoC_lw16i_short(FORMAT32,0x7,IN_PARALLEL)	|	VoC_add16_rr(REG4,REG4,REG7,DEFAULT)
0xC13C4C94,	//0x053c		VoC_add16_rr(REG4,REG4,REG7,IN_PARALLEL)	|	VoC_multf32_rr(ACC0,REG2,REG2,DEFAULT)
0xD9A5CE1B,	//0x053e		VoC_lw32_p(ACC1,REG4,DEFAULT)	|	VoC_mac32_rr(REG3,REG3,DEFAULT)
0x054C3304,	//0x0540		VoC_bez32_r(Coolsand_FilterUpdateCotrol_Int_SpkDataPower,ACC0)
0xCB29F619,	//0x0542		VoC_sub32_rr(REG23,ACC0,ACC1,DEFAULT)	|	VoC_lw16i_short(FORMAT32,0xfffffff0,DEFAULT)
0xF90A4CF4,	//0x0544		VoC_shru16_ri(REG2,0x1,IN_PARALLEL)	|	VoC_multf32_rr(ACC0,REG3,REG6,DEFAULT)
0xFFC0CE56,	//0x0546		VoC_NOP	|	VoC_macX_rr(REG2,REG6,DEFAULT)
0xC92CFA7C,	//0x0548		VoC_add32_rr(ACC0,ACC0,ACC1,DEFAULT)	|	VoC_shr32_ri(ACC0,0xf,DEFAULT)
0xDDA4FFC0,	//0x054a		VoC_sw32_p(ACC0,REG4,DEFAULT)	|	VoC_NOP
		//0x054c		Coolsand_FilterUpdateCotrol_Int_SpkDataPower
0xD9A4DF02,	//0x054c		VoC_lw32_p(ACC0,REG4,DEFAULT)	|	VoC_pop32(REG45,DEFAULT)
0xDF44DF45,	//0x054e		VoC_push32(ACC0,DEFAULT)	|	VoC_push32(ACC1,DEFAULT)
0xD9ADD9A4,	//0x0550		VoC_lw32_p(ACC1,REG5,DEFAULT)	|	VoC_lw32_p(ACC0,REG4,DEFAULT)
0x07A42B80,	//0x0552		VoC_jal(Coolsand_CmplxAppxNorm_int)
0xFF357A44,	//0x0554		VoC_movreg32(ACC1,RL6,IN_PARALLEL)	|	VoC_shr32_ri(ACC0,0x8,DEFAULT)
0xDF01DF06,	//0x0556		VoC_pop32(REG23,DEFAULT)	|	VoC_pop32(RL6,DEFAULT)
0x05623344,	//0x0558		VoC_bnez32_r(Coolsand_FilterUpdateCotrol_Int_RErrSpkNorm,ACC0)
0x2B80FF3C,	//0x055a		VoC_jal(Coolsand_CmplxAppxNorm_int)(lo)	|	VoC_movreg32(ACC0,RL7,DEFAULT)
0xFA4407A4,	//0x055c		VoC_shr32_ri(ACC0,0x8,DEFAULT)	|	VoC_jal(Coolsand_CmplxAppxNorm_int)(hi)
0x05613344,	//0x055e		VoC_bnez32_r(Coolsand_FilterUpdateCotrol_Int_RErrSpkNorm_100,ACC0)
0xFF0EF048,	//0x0560		VoC_movreg32(RL6,REG23,DEFAULT)	|	VoC_lw16i_short(ACC0_LO,0x2,DEFAULT)
		//0x0561		Coolsand_FilterUpdateCotrol_Int_RErrSpkNorm_100
		//0x0562		Coolsand_FilterUpdateCotrol_Int_RErrSpkNorm
0xFBFEFF31,	//0x0562		VoC_shr32_ri(RL6,0xffffffff,DEFAULT)	|	VoC_movreg32(REG23,RL6,DEFAULT)
0xFA66C98E,	//0x0564		VoC_shr32_ri(RL6,0xc,DEFAULT)	|	VoC_add32_rr(RL6,RL6,REG23,DEFAULT)
0x05693346,	//0x0566		VoC_bnez32_r(Coolsand_FilterUpdateCotrol_Int_SpkSigSmoothPower_r,RL6)
0xF182F02C,	//0x0568		VoC_lw16i_short(REG2,0xc,DEFAULT)	|	VoC_lw16i_short(RL6_LO,0x1,DEFAULT)
		//0x0569		Coolsand_FilterUpdateCotrol_Int_SpkSigSmoothPower_r
0x07BE2B80,	//0x056a		VoC_jal(Coolsand_MSBPos)
0xC2D2F182,	//0x056c		VoC_sub16_rr(REG2,REG3,REG2,DEFAULT)	|	VoC_lw16i_short(REG2,0xc,DEFAULT)
0xFBFCFE94,	//0x056e		VoC_shr32_ri(ACC0,0xffffffff,DEFAULT)	|	VoC_shr32_rr(ACC0,REG2,DEFAULT)
0xDF44D81B,	//0x0570		VoC_push32(ACC0,DEFAULT)	|	VoC_lw16_p(ACC1_HI,REG1,DEFAULT)
0x7A84D809,	//0x0572		VoC_shr32_ri(ACC0,0x10,DEFAULT)	|	VoC_lw16_p(ACC0_HI,REG0,DEFAULT)
0xFFC0FA85,	//0x0574		VoC_NAD	|	VoC_shr32_ri(ACC1,0x10,IN_PARALLEL)
0x07A42B80,	//0x0576		VoC_jal(Coolsand_CmplxAppxNorm_int)
0x06600A80,	//0x0578		VoC_lw16i(REG0,0x660)
0xC030C1FE,	//0x057a		VoC_add16_rr(REG0,REG0,REG6,DEFAULT)	|	VoC_add16_rr(REG6,REG7,REG7,DEFAULT)
0x08000A84,	//0x057c		VoC_lw16i(REG4,0x800)
0x7A66D986,	//0x057e		VoC_shr32_ri(RL6,0xc,DEFAULT)	|	VoC_lw32_p(RL6,REG0,DEFAULT)
0x3616E005,	//0x0580		VoC_bgt32_rr(Coolsand_FilterUpdateCotrol_Int_SpkSigPower_s,REG45,RL6)(lo)	|	VoC_lw16i_short(REG5,0x0,IN_PARALLEL)
0x0A8C0586,	//0x0582		VoC_lw16i(RL6_LO,0x7ff)(lo)	|	VoC_bgt32_rr(Coolsand_FilterUpdateCotrol_Int_SpkSigPower_s,REG45,RL6)(hi)
0xF00D07FF,	//0x0584		VoC_lw16i_short(RL6_HI,0x0,DEFAULT)	|	VoC_lw16i(RL6_LO,0x7ff)(hi)
		//0x0586		Coolsand_FilterUpdateCotrol_Int_SpkSigPower_s
0x05893346,	//0x0586		VoC_bnez32_r(Coolsand_FilterUpdateCotrol_Int_SpkSigPower_s_100,RL6)
0xF182F02C,	//0x0588		VoC_lw16i_short(REG2,0xc,DEFAULT)	|	VoC_lw16i_short(RL6_LO,0x1,DEFAULT)
		//0x0589		Coolsand_FilterUpdateCotrol_Int_SpkSigPower_s_100
0x07BE2B80,	//0x058a		VoC_jal(Coolsand_MSBPos)
0x43DCF187,	//0x058c		VoC_sub16_rr(REG4,REG7,REG3,DEFAULT)	|	VoC_lw16i_short(REG7,0xc,DEFAULT)
0xE434E016,	//0x058e		VoC_and16_rr(REG4,REG6,DEFAULT)	|	VoC_lw16i_short(REG6,0x1,IN_PARALLEL)
0x059B3184,	//0x0590		VoC_bez16_r(Coolsand_FilterUpdateCotrol_Int_SpkPowerFirstBitPos,REG4)
0xC31CF164,	//0x0592		VoC_sub16_rr(REG4,REG4,REG3,DEFAULT)	|	VoC_lw16i_short(REG4,0xb,DEFAULT)
0xC3A4F80C,	//0x0594		VoC_sub16_rr(REG4,REG6,REG4,DEFAULT)	|	VoC_shr16_ri(REG4,0x1,DEFAULT)
0xFF21FEA4,	//0x0596		VoC_movreg32(REG23,ACC0,DEFAULT)	|	VoC_shr32_rr(ACC0,REG4,DEFAULT)
0xC90CFBFC,	//0x0598		VoC_add32_rr(ACC0,ACC0,REG23,DEFAULT)	|	VoC_shr32_ri(ACC0,0xffffffff,DEFAULT)
0xC2FCE5C4,	//0x059a		VoC_sub16_rr(REG4,REG3,REG7,DEFAULT)	|	VoC_jump(Coolsand_FilterUpdateCotrol_Int_SpkPowerFirstBitPos_end)
		//0x059b		Coolsand_FilterUpdateCotrol_Int_SpkPowerFirstBitPos
0xFEA4F80C,	//0x059c		VoC_shr32_rr(ACC0,REG4,DEFAULT)	|	VoC_shr16_ri(REG4,0x1,DEFAULT)
		//0x059e		Coolsand_FilterUpdateCotrol_Int_SpkPowerFirstBitPos_end
0x0A8BF00A,	//0x059e		VoC_lw16i(ACC1_HI,0x10)(lo)	|	VoC_lw16i_short(ACC1_LO,0x0,DEFAULT)
0x362C0010,	//0x05a0		VoC_bgt32_rr(Coolsand_FilterUpdateCotrol_Int_InstantCouplingFactor,ACC1,ACC0)(lo)	|	VoC_lw16i(ACC1_HI,0x10)(hi)
0xF7E805A5,	//0x05a2		VoC_lw16i_short(ACC0_LO,0xffffffff,DEFAULT)	|	VoC_bgt32_rr(Coolsand_FilterUpdateCotrol_Int_InstantCouplingFactor,ACC1,ACC0)(hi)
0xDF87F1E9,	//0x05a4		VoC_pop16(REG7,DEFAULT)	|	VoC_lw16i_short(ACC0_HI,0xf,DEFAULT)
		//0x05a5		Coolsand_FilterUpdateCotrol_Int_InstantCouplingFactor
0x06A80A80,	//0x05a6		VoC_lw16i(REG0,0x6a8)
0xDF864038,	//0x05a8		VoC_pop16(REG6,IN_PARALLEL)	|	VoC_add16_rr(REG0,REG0,REG7,DEFAULT)
0xE0825F05,	//0x05aa		VoC_lw16i_short(REG2,0x8,IN_PARALLEL)	|	VoC_pop32(ACC1,DEFAULT)
0x007F0A85,	//0x05ac		VoC_lw16i(REG5,0x7f)
0x05C13416,	//0x05ae		VoC_bgt16_rr(Coolsand_FilterUpdateCotrol_Int_FrameCnt_end,REG2,REG6)
0x05C1362C,	//0x05b0		VoC_bgt32_rr(Coolsand_FilterUpdateCotrol_Int_FrameCnt_end,ACC1,ACC0)
0xF2A2FF26,	//0x05b2		VoC_lw16i_short(REG2,0x15,DEFAULT)	|	VoC_movreg32(RL6,ACC0,DEFAULT)
0x07BE2B80,	//0x05b4		VoC_jal(Coolsand_MSBPos)
0xC2D3F202,	//0x05b6		VoC_sub16_rr(REG3,REG3,REG2,DEFAULT)	|	VoC_lw16i_short(REG2,0x10,DEFAULT)
0xFA45FE9D,	//0x05b8		VoC_shr32_ri(ACC1,0x8,DEFAULT)	|	VoC_shr32_rr(ACC1,REG3,DEFAULT)
0x0A84E145,	//0x05ba		VoC_lw16i(REG4,0x80)(lo)	|	VoC_movreg16(REG5,ACC1_LO,DEFAULT)
0x34250080,	//0x05bc		VoC_bgt16_rr(Coolsand_FilterUpdateCotrol_Int_FrameCnt_end,REG4,REG5)(lo)	|	VoC_lw16i(REG4,0x80)(hi)
0x0A8505C1,	//0x05be		VoC_lw16i(REG5,0x7f)(lo)	|	VoC_bgt16_rr(Coolsand_FilterUpdateCotrol_Int_FrameCnt_end,REG4,REG5)(hi)
0xDFA9007F,	//0x05c0		VoC_pop16(RA,DEFAULT)	|	VoC_lw16i(REG5,0x7f)(hi)
		//0x05c1		Coolsand_FilterUpdateCotrol_Int_FrameCnt_end
0xE580DC05,	//0x05c2		VoC_return	|	VoC_sw16_p(REG5,REG0,DEFAULT)
		//0x05c4		Coolsand_UpdateFilterAmp
0x0A80DFE9,	//0x05c4		VoC_lw16i(REG0,0x660)(lo)	|	VoC_push16(RA,DEFAULT)
0x40380660,	//0x05c6		VoC_add16_rr(REG0,REG0,REG7,DEFAULT)	|	VoC_lw16i(REG0,0x660)(hi)
0xC038FF44,	//0x05c8		VoC_add16_rr(REG0,REG0,REG7,DEFAULT)	|	VoC_lw32z(ACC0,IN_PARALLEL)
0x400D1409,	//0x05ca		VoC_lw16_d(ACC0_HI,0x400d)
0x78F59102,	//0x05cc		VoC_shr16_ri(REG5,0xfffffffe,DEFAULT)	|	VoC_add32_rp(REG45,ACC0,REG0,DEFAULT)
0x7815FF46,	//0x05ce		VoC_shr16_ri(REG5,0x2,DEFAULT)	|	VoC_lw32z(RL6,IN_PARALLEL)
0x3105E0E2,	//0x05d0		VoC_bgtz16_r(Coolsand_ShrinkBit_abs,REG5)(lo)	|	VoC_lw16i_short(REG2,0xe,IN_PARALLEL)
0xF00305D5,	//0x05d2		VoC_lw16i_short(REG3,0x0,DEFAULT)	|	VoC_bgtz16_r(Coolsand_ShrinkBit_abs,REG5)(hi)
0xE0ACC2ED,	//0x05d4		VoC_movreg16(RL6_LO,REG5,DEFAULT)	|	VoC_sub16_rr(REG5,REG3,REG5,DEFAULT)
		//0x05d5		Coolsand_ShrinkBit_abs
0x07BE2B80,	//0x05d6		VoC_jal(Coolsand_MSBPos)
0x3183F004,	//0x05d8		VoC_bez16_r(Coolsand_ShrinkBit_end,REG3)(lo)	|	VoC_lw16i_short(REG4,0x0,DEFAULT)
0xF02405DF,	//0x05da		VoC_lw16i_short(REG4,0x1,DEFAULT)	|	VoC_bez16_r(Coolsand_ShrinkBit_end,REG3)(hi)
0xFE1CC31B,	//0x05dc		VoC_shr16_rr(REG4,REG3,DEFAULT)	|	VoC_sub16_rr(REG3,REG4,REG3,DEFAULT)
0xE08CE42C,	//0x05de		VoC_movreg16(RL6_LO,REG4,DEFAULT)	|	VoC_and16_rr(REG4,REG5,DEFAULT)
		//0x05df		Coolsand_ShrinkBit_end
0x07BE2B80,	//0x05e0		VoC_jal(Coolsand_MSBPos)
0x06A80A81,	//0x05e2		VoC_lw16i(REG1,0x6a8)
0x061C0A82,	//0x05e4		VoC_lw16i(REG2,0x61c)
0xE0744079,	//0x05e6		VoC_lw16i_short(REG4,0x7,IN_PARALLEL)	|	VoC_add16_rr(REG1,REG1,REG7,DEFAULT)
0xC0BA42E3,	//0x05e8		VoC_add16_rr(REG2,REG2,REG7,IN_PARALLEL)	|	VoC_sub16_rr(REG3,REG3,REG4,DEFAULT)
0xF5E15811,	//0x05ea		VoC_lw16i_short(FORMAT32,0xfffffffc,IN_PARALLEL)	|	VoC_lw16_p(REG1,REG1,DEFAULT)
0xFF447E19,	//0x05ec		VoC_lw32z(ACC0,IN_PARALLEL)	|	VoC_shr16_rr(REG1,REG3,DEFAULT)
0x06260A83,	//0x05ee		VoC_lw16i(REG3,0x626)
0xF8F140FB,	//0x05f0		VoC_shr16_ri(REG1,0xfffffffe,IN_PARALLEL)	|	VoC_add16_rr(REG3,REG3,REG7,DEFAULT)
0xDFA97811,	//0x05f2		VoC_pop16(RA,IN_PARALLEL)	|	VoC_shr16_ri(REG1,0x2,DEFAULT)
0xF8EF1852,	//0x05f4		VoC_shr16_ri(REG7,0xfffffffd,IN_PARALLEL)	|	VoC_multf32_rp(REG45,REG1,REG2,DEFAULT)
0xF6E6508B,	//0x05f6		VoC_movreg16(REG6,REG7,IN_PARALLEL)	|	VoC_msu32_rp(REG1,REG3,DEFAULT)
0x0A5A0A80,	//0x05f8		VoC_lw16i(REG0,0xa5a)
0x08870700,	//0x05fa		VoC_add16_rd(REG0,REG0,0x887)
0xFA547A52,	//0x05fc		VoC_shr32_ri(ACC0,0xa,IN_PARALLEL)	|	VoC_shr32_ri(REG45,0xa,DEFAULT)
0xFBFC7BFA,	//0x05fe		VoC_shr32_ri(ACC0,0xffffffff,IN_PARALLEL)	|	VoC_shr32_ri(REG45,0xffffffff,DEFAULT)
0xFF215800,	//0x0600		VoC_movreg32(REG23,ACC0,IN_PARALLEL)	|	VoC_lw16_p(REG0,REG0,DEFAULT)
0xE0117828,	//0x0602		VoC_lw16i_short(REG1,0x1,IN_PARALLEL)	|	VoC_shr16_ri(REG0,0x5,DEFAULT)
0x060A3401,	//0x0604		VoC_bgt16_rr(Coolsand_UpdateFilterAmp_L1,REG0,REG1)
0x40000A81,	//0x0606		VoC_lw16i(REG1,0x4000)
0x06322B00,	//0x0608		VoC_jump_lg(Coolsand_UpdateFilterAmp_End)
		//0x060a		Coolsand_UpdateFilterAmp_L1
0x3401F041,	//0x060a		VoC_bgt16_rr(Coolsand_UpdateFilterAmp_L2,REG0,REG1)(lo)	|	VoC_lw16i_short(REG1,0x2,DEFAULT)
0x0A810611,	//0x060c		VoC_lw16i(REG1,0x2000)(lo)	|	VoC_bgt16_rr(Coolsand_UpdateFilterAmp_L2,REG0,REG1)(hi)
0x2B002000,	//0x060e		VoC_jump_lg(Coolsand_UpdateFilterAmp_End)(lo)	|	VoC_lw16i(REG1,0x2000)(hi)
0xF0610632,	//0x0610		VoC_lw16i_short(REG1,0x3,DEFAULT)	|	VoC_jump_lg(Coolsand_UpdateFilterAmp_End)(hi)
		//0x0611		Coolsand_UpdateFilterAmp_L2
0x06173401,	//0x0612		VoC_bgt16_rr(Coolsand_UpdateFilterAmp_L3,REG0,REG1)
0x15550A81,	//0x0614		VoC_lw16i(REG1,0x1555)
0xF081E5DC,	//0x0616		VoC_lw16i_short(REG1,0x4,DEFAULT)	|	VoC_jump(Coolsand_UpdateFilterAmp_End)
		//0x0617		Coolsand_UpdateFilterAmp_L3
0x061D3401,	//0x0618		VoC_bgt16_rr(Coolsand_UpdateFilterAmp_L4,REG0,REG1)
0x10000A81,	//0x061a		VoC_lw16i(REG1,0x1000)
0xF0A1E5D6,	//0x061c		VoC_lw16i_short(REG1,0x5,DEFAULT)	|	VoC_jump(Coolsand_UpdateFilterAmp_End)
		//0x061d		Coolsand_UpdateFilterAmp_L4
0x06233401,	//0x061e		VoC_bgt16_rr(Coolsand_UpdateFilterAmp_L5,REG0,REG1)
0x0CCC0A81,	//0x0620		VoC_lw16i(REG1,0xccc)
0xF0C1E5D0,	//0x0622		VoC_lw16i_short(REG1,0x6,DEFAULT)	|	VoC_jump(Coolsand_UpdateFilterAmp_End)
		//0x0623		Coolsand_UpdateFilterAmp_L5
0x06293401,	//0x0624		VoC_bgt16_rr(Coolsand_UpdateFilterAmp_L6,REG0,REG1)
0x0AAA0A81,	//0x0626		VoC_lw16i(REG1,0xaaa)
0xF0E1E5CA,	//0x0628		VoC_lw16i_short(REG1,0x7,DEFAULT)	|	VoC_jump(Coolsand_UpdateFilterAmp_End)
		//0x0629		Coolsand_UpdateFilterAmp_L6
0x06303401,	//0x062a		VoC_bgt16_rr(Coolsand_UpdateFilterAmp_L7,REG0,REG1)
0x09240A81,	//0x062c		VoC_lw16i(REG1,0x924)
0xFFC065C4,	//0x062e		VoC_NAD(IN_PARALLEL)	|	VoC_jump(Coolsand_UpdateFilterAmp_End)
		//0x0630		Coolsand_UpdateFilterAmp_L7
0x08000A81,	//0x0630		VoC_lw16i(REG1,0x800)
		//0x0632		Coolsand_UpdateFilterAmp_End
0xF90A790C,	//0x0632		VoC_shru16_ri(REG2,0x1,IN_PARALLEL)	|	VoC_shru16_ri(REG4,0x1,DEFAULT)
0xF47277F9,	//0x0634		VoC_lw16i_short(FORMATX,0xe,IN_PARALLEL)	|	VoC_lw16i_short(FORMAT32,0xffffffff,DEFAULT)
0xCD4D4CCC,	//0x0636		VoC_multf32_rr(ACC1,REG5,REG1,IN_PARALLEL)	|	VoC_multf32_rr(ACC0,REG3,REG1,DEFAULT)
0xCEA14E51,	//0x0638		VoC_macX_rr(REG4,REG1,IN_PARALLEL)	|	VoC_macX_rr(REG2,REG1,DEFAULT)
0x04441804,	//0x063a		VoC_lw16i_set_inc(REG0,0x444,0x1)
0x048C1805,	//0x063c		VoC_lw16i_set_inc(REG1,0x48c,0x1)
0x7BFAFF2A,	//0x063e		VoC_shr32_ri(REG45,0xffffffff,DEFAULT)	|	VoC_movreg32(REG45,ACC1,DEFAULT)
0x180AFBFC,	//0x0640		VoC_lw16i_set_inc(REG2,0x4d4,0x2)(lo)	|	VoC_shr32_ri(ACC0,0xffffffff,IN_PARALLEL)
0x180B04D4,	//0x0642		VoC_lw16i_set_inc(REG3,0x564,0x2)(lo)	|	VoC_lw16i_set_inc(REG2,0x4d4,0x2)(hi)
0x48180564,	//0x0644		VoC_add32_rr(REG01,REG01,REG67,DEFAULT)	|	VoC_lw16i_set_inc(REG3,0x564,0x2)(hi)
0x4859C859,	//0x0646		VoC_add32_rr(REG23,REG23,REG67,DEFAULT)	|	VoC_add32_rr(REG23,REG23,REG67,IN_PARALLEL)
0x7F23F5E1,	//0x0648		VoC_movreg32(REG67,ACC0,DEFAULT)	|	VoC_lw16i_short(FORMAT32,0xfffffffc,IN_PARALLEL)
0x790CF45A,	//0x064a		VoC_shru16_ri(REG4,0x1,DEFAULT)	|	VoC_lw16i_short(FORMATX,0xb,IN_PARALLEL)
0xE911F90E,	//0x064c		VoC_loop_i_short(0x8,DEFAULT)	|	VoC_shru16_ri(REG6,0x1,IN_PARALLEL)
0x99C51944,	//0x064e		VoC_multf32_rp(ACC1,REG7,REG0,IN_PARALLEL)	|	VoC_multf32_rp(ACC0,REG5,REG0,DEFAULT)
0xD1705060,	//0x0650		VoC_macXinc_rp(REG6,REG0,IN_PARALLEL)	|	VoC_macX_rp(REG4,REG0,DEFAULT)
0xD02950B9,	//0x0652		VoC_mac32_rp(REG5,REG1,IN_PARALLEL)	|	VoC_msu32_rp(REG7,REG1,DEFAULT)
0xD16150F1,	//0x0654		VoC_macXinc_rp(REG4,REG1,IN_PARALLEL)	|	VoC_msuX_rp(REG6,REG1,DEFAULT)
0x7BA4FFC0,	//0x0656		VoC_shr32_ri(ACC0,0xfffffff4,DEFAULT)	|	VoC_NOP
0x7A64FBA5,	//0x0658		VoC_shr32_ri(ACC0,0xc,DEFAULT)	|	VoC_shr32_ri(ACC1,0xfffffff4,IN_PARALLEL)
0x9116FA65,	//0x065a		VoC_add32_rp(RL6,ACC0,REG2,DEFAULT)	|	VoC_shr32_ri(ACC1,0xc,IN_PARALLEL)
0xDDD6915F,	//0x065c		VoC_sw32inc_p(RL6,REG2,DEFAULT)	|	VoC_add32_rp(RL7,ACC1,REG3,DEFAULT)
		//0x065e		VoC_endloop0
0xE580DDDF,	//0x065e		VoC_return	|	VoC_sw32inc_p(RL7,REG3,DEFAULT)
		//0x0660		Coolsand_BackCopyVec
0xF3FA77D1,	//0x0660		VoC_lw16i_short(INC2,0xfffffffe,IN_PARALLEL)	|	VoC_lw16i_short(INC1,0xfffffffe,DEFAULT)
0xC0BA4079,	//0x0662		VoC_add16_rr(REG2,REG2,REG7,IN_PARALLEL)	|	VoC_add16_rr(REG1,REG1,REG7,DEFAULT)
0x5E08F80F,	//0x0664		VoC_inc_p(REG1,DEFAULT)	|	VoC_shr16_ri(REG7,0x1,DEFAULT)
0xD9CCDE10,	//0x0666		VoC_lw32inc_p(ACC0,REG1,DEFAULT)	|	VoC_inc_p(REG2,IN_PARALLEL)
0xD9CCE7C2,	//0x0668		VoC_lw32inc_p(ACC0,REG1,DEFAULT)	|	VoC_loop_r_short(REG7,DEFAULT)
		//0x066a		VoC_endloop0
0xE580DDD4,	//0x066a		VoC_return	|	VoC_sw32inc_p(ACC0,REG2,DEFAULT)
		//0x066c		Coolsand_FlipVec
0xD899C0BA,	//0x066c		VoC_lw16inc_p(ACC0_HI,REG1,DEFAULT)	|	VoC_add16_rr(REG2,REG2,REG7,DEFAULT)
0xDE1067C3,	//0x066e		VoC_inc_p(REG2,IN_PARALLEL)	|	VoC_loop_r_short(REG7,DEFAULT)
0xDCA9D899,	//0x0670		VoC_sw16inc_p(ACC0_HI,REG2,DEFAULT)	|	VoC_lw16inc_p(ACC0_HI,REG1,DEFAULT)
		//0x0671		VoC_endloop0
0xFFC06580,	//0x0672		VoC_NAD(IN_PARALLEL)	|	VoC_return
		//0x0674		Coolsand_MulVec
0xF0067051,	//0x0674		VoC_lw16i_short(INC2,0x1,IN_PARALLEL)	|	VoC_lw16i_short(INC1,0x2,DEFAULT)
0xF8087053,	//0x0676		VoC_shr16_ri(REG0,0x1,IN_PARALLEL)	|	VoC_lw16i_short(INC3,0x2,DEFAULT)
0xD9CB6606,	//0x0678		VoC_lw32inc_p(REG67,REG1,IN_PARALLEL)	|	VoC_loop_r_short(REG0,DEFAULT)
0x8FD78F96,	//0x067a		VoC_multf16inc_rp(REG7,REG7,REG2,DEFAULT)	|	VoC_multf16inc_rp(REG6,REG6,REG2,DEFAULT)
0xD9CBFFC0,	//0x067c		VoC_lw32inc_p(REG67,REG1,DEFAULT)	|	VoC_NOP
		//0x067e		VoC_endloop0
0xE580DDDB,	//0x067e		VoC_return	|	VoC_sw32inc_p(REG67,REG3,DEFAULT)
		//0x0680		Coolsand_ClearVec
0x7F44F051,	//0x0680		VoC_lw32z(ACC0,DEFAULT)	|	VoC_lw16i_short(INC1,0x2,DEFAULT)
0xE7C1F80F,	//0x0682		VoC_loop_r_short(REG7,DEFAULT)	|	VoC_shr16_ri(REG7,0x1,IN_PARALLEL)
		//0x0684		VoC_endloop0
0xE580DDCC,	//0x0684		VoC_return	|	VoC_sw32inc_p(ACC0,REG1,DEFAULT)
		//0x0686		Coolsand_AddVec
0xD88667C4,	//0x0686		VoC_lw16inc_p(REG6,REG0,IN_PARALLEL)	|	VoC_loop_r_short(REG7,DEFAULT)
0xD886838E,	//0x0688		VoC_lw16inc_p(REG6,REG0,DEFAULT)	|	VoC_add16inc_rp(REG6,REG6,REG1,DEFAULT)
		//0x068a		VoC_endloop0
0xE580DCA6,	//0x068a		VoC_return	|	VoC_sw16inc_p(REG6,REG2,DEFAULT)
		//0x068c		Coolsand_IFFT16
0x7050DFE9,	//0x068c		VoC_lw16i_short(INC0,0x2,DEFAULT)	|	VoC_push16(RA,DEFAULT)
0x2B80DF40,	//0x068e		VoC_jal(Coolsand_ReverseIndex)(lo)	|	VoC_push32(REG01,IN_PARALLEL)
0xDF01077F,	//0x0690		VoC_pop32(REG23,DEFAULT)	|	VoC_jal(Coolsand_ReverseIndex)(hi)
0xF0086060,	//0x0692		VoC_lw16i_short(INC0,0x2,IN_PARALLEL)	|	VoC_movreg16(REG0,REG3,DEFAULT)
0xFFC05F41,	//0x0694		VoC_NAD(IN_PARALLEL)	|	VoC_push32(REG23,DEFAULT)
0x077F2B80,	//0x0696		VoC_jal(Coolsand_ReverseIndex)
0xF4795F00,	//0x0698		VoC_lw16i_short(FORMAT32,0xf,IN_PARALLEL)	|	VoC_pop32(REG01,DEFAULT)
0x0888180A,	//0x069a		VoC_lw16i_set_inc(REG2,0x888,0x2)
0x08A8180B,	//0x069c		VoC_lw16i_set_inc(REG3,0x8a8,0x2)
0xF0087051,	//0x069e		VoC_lw16i_short(INC0,0x2,IN_PARALLEL)	|	VoC_lw16i_short(INC1,0x2,DEFAULT)
0x7FFF0A86,	//0x06a0		VoC_lw16i(REG6,0x7fff)
0xDF406912,	//0x06a2		VoC_push32(REG01,IN_PARALLEL)	|	VoC_loop_i_short(0x8,DEFAULT)
0x59CFD9C2,	//0x06a4		VoC_lw32inc_p(RL7,REG1,DEFAULT)	|	VoC_lw32inc_p(REG45,REG0,DEFAULT)
0x61E7CD74,	//0x06a6		VoC_movreg16(REG7,RL7_HI,DEFAULT)	|	VoC_multf32_rr(ACC0,REG5,REG6,IN_PARALLEL)
0x4DF6F7CF,	//0x06a8		VoC_multf32_rr(RL6,REG7,REG6,DEFAULT)	|	VoC_movreg16(RL7_HI,RL7_LO,IN_PARALLEL)
0x7A85F68B,	//0x06aa		VoC_shr32_ri(ACC1,0x10,DEFAULT)	|	VoC_movreg16(ACC1_HI,REG4,IN_PARALLEL)
0x4B65FA87,	//0x06ac		VoC_sub32_rr(ACC1,ACC1,ACC0,DEFAULT)	|	VoC_shr32_ri(RL7,0x10,IN_PARALLEL)
0x4BF7C964,	//0x06ae		VoC_sub32_rr(RL7,RL7,RL6,DEFAULT)	|	VoC_add32_rr(ACC0,ACC1,ACC0,IN_PARALLEL)
0xDDD4C9F6,	//0x06b0		VoC_sw32inc_p(ACC0,REG2,DEFAULT)	|	VoC_add32_rr(RL6,RL7,RL6,IN_PARALLEL)
0xDDDEDDD5,	//0x06b2		VoC_sw32inc_p(RL6,REG3,DEFAULT)	|	VoC_sw32inc_p(ACC1,REG2,DEFAULT)
		//0x06b4		VoC_endloop0
0x1810DDDF,	//0x06b4		VoC_lw16i_set_inc(REG0,0x888,0x4)(lo)	|	VoC_sw32inc_p(RL7,REG3,DEFAULT)
0x18110888,	//0x06b6		VoC_lw16i_set_inc(REG1,0x8a8,0x4)(lo)	|	VoC_lw16i_set_inc(REG0,0x888,0x4)(hi)
0x689908A8,	//0x06b8		VoC_loop_i_short(0x4,DEFAULT)	|	VoC_lw16i_set_inc(REG1,0x8a8,0x4)(hi)
0xDF40F402,	//0x06ba		VoC_push32(REG01,DEFAULT)	|	VoC_lw16i_short(FORMATX,0x0,IN_PARALLEL)
0xEFF259C6,	//0x06bc		VoC_lw16i_short(REG2,0xffffffff,IN_PARALLEL)	|	VoC_lw32inc_p(RL6,REG0,DEFAULT)
0xF90A5982,	//0x06be		VoC_shru16_ri(REG2,0x1,IN_PARALLEL)	|	VoC_lw32_p(REG45,REG0,DEFAULT)
0xFBFA59CF,	//0x06c0		VoC_shr32_ri(REG45,0xffffffff,IN_PARALLEL)	|	VoC_lw32inc_p(RL7,REG1,DEFAULT)
0xF90C598B,	//0x06c2		VoC_shru16_ri(REG4,0x1,IN_PARALLEL)	|	VoC_lw32_p(REG67,REG1,DEFAULT)
0xFBFB4D14,	//0x06c4		VoC_shr32_ri(REG67,0xffffffff,IN_PARALLEL)	|	VoC_multf32_rr(ACC0,REG4,REG2,DEFAULT)
0xF90E4E6A,	//0x06c6		VoC_shru16_ri(REG6,0x1,IN_PARALLEL)	|	VoC_macX_rr(REG5,REG2,DEFAULT)
0x5F00CD95,	//0x06c8		VoC_pop32(REG01,DEFAULT)	|	VoC_multf32_rr(ACC1,REG6,REG2,DEFAULT)
0x4BA4CEBA,	//0x06ca		VoC_sub32_rr(ACC0,RL6,ACC0,DEFAULT)	|	VoC_macX_rr(REG7,REG2,IN_PARALLEL)
0x4BEDC9A6,	//0x06cc		VoC_sub32_rr(ACC1,RL7,ACC1,DEFAULT)	|	VoC_add32_rr(RL6,RL6,ACC0,IN_PARALLEL)
0xDDC6C9EF,	//0x06ce		VoC_sw32inc_p(RL6,REG0,DEFAULT)	|	VoC_add32_rr(RL7,RL7,ACC1,IN_PARALLEL)
0xDDCFDDC4,	//0x06d0		VoC_sw32inc_p(RL7,REG1,DEFAULT)	|	VoC_sw32inc_p(ACC0,REG0,DEFAULT)
		//0x06d2		VoC_endloop0
0x1810DDCD,	//0x06d2		VoC_lw16i_set_inc(REG0,0x88a,0x4)(lo)	|	VoC_sw32inc_p(ACC1,REG1,DEFAULT)
0x1811088A,	//0x06d4		VoC_lw16i_set_inc(REG1,0x8aa,0x4)(lo)	|	VoC_lw16i_set_inc(REG0,0x88a,0x4)(hi)
0x689908AA,	//0x06d6		VoC_loop_i_short(0x4,DEFAULT)	|	VoC_lw16i_set_inc(REG1,0x8aa,0x4)(hi)
0xDF40F402,	//0x06d8		VoC_push32(REG01,DEFAULT)	|	VoC_lw16i_short(FORMATX,0x0,IN_PARALLEL)
0xEFF259C6,	//0x06da		VoC_lw16i_short(REG2,0xffffffff,IN_PARALLEL)	|	VoC_lw32inc_p(RL6,REG0,DEFAULT)
0xF90A5982,	//0x06dc		VoC_shru16_ri(REG2,0x1,IN_PARALLEL)	|	VoC_lw32_p(REG45,REG0,DEFAULT)
0xFBFA59CF,	//0x06de		VoC_shr32_ri(REG45,0xffffffff,IN_PARALLEL)	|	VoC_lw32inc_p(RL7,REG1,DEFAULT)
0xF90C598B,	//0x06e0		VoC_shru16_ri(REG4,0x1,IN_PARALLEL)	|	VoC_lw32_p(REG67,REG1,DEFAULT)
0xFBFB4D14,	//0x06e2		VoC_shr32_ri(REG67,0xffffffff,IN_PARALLEL)	|	VoC_multf32_rr(ACC0,REG4,REG2,DEFAULT)
0xF90E4E6A,	//0x06e4		VoC_shru16_ri(REG6,0x1,IN_PARALLEL)	|	VoC_macX_rr(REG5,REG2,DEFAULT)
0x5F00CD95,	//0x06e6		VoC_pop32(REG01,DEFAULT)	|	VoC_multf32_rr(ACC1,REG6,REG2,DEFAULT)
0x4BE4CEBA,	//0x06e8		VoC_sub32_rr(ACC0,RL7,ACC0,DEFAULT)	|	VoC_macX_rr(REG7,REG2,IN_PARALLEL)
0x49ADC9E7,	//0x06ea		VoC_add32_rr(ACC1,RL6,ACC1,DEFAULT)	|	VoC_add32_rr(RL7,RL7,ACC0,IN_PARALLEL)
0xDDCFCBAE,	//0x06ec		VoC_sw32inc_p(RL7,REG1,DEFAULT)	|	VoC_sub32_rr(RL6,RL6,ACC1,IN_PARALLEL)
0xDDC6DDCC,	//0x06ee		VoC_sw32inc_p(RL6,REG0,DEFAULT)	|	VoC_sw32inc_p(ACC0,REG1,DEFAULT)
		//0x06f0		VoC_endloop0
0x1880DDC5,	//0x06f0		VoC_lw16i_set_inc(REG0,0x888,0x10)(lo)	|	VoC_sw32inc_p(ACC1,REG0,DEFAULT)
0x18810888,	//0x06f2		VoC_lw16i_set_inc(REG1,0x8a8,0x10)(lo)	|	VoC_lw16i_set_inc(REG0,0x888,0x10)(hi)
0x180A08A8,	//0x06f4		VoC_lw16i_set_inc(REG2,0x856,0x2)(lo)	|	VoC_lw16i_set_inc(REG1,0x8a8,0x10)(hi)
0x180B0856,	//0x06f6		VoC_lw16i_set_inc(REG3,0x85e,0x2)(lo)	|	VoC_lw16i_set_inc(REG2,0x856,0x2)(hi)
0xFFC0085E,	//0x06f8		VoC_NAD	|	VoC_lw16i_set_inc(REG3,0x85e,0x2)(hi)
0x07222C09,	//0x06fa		VoC_loop_i(0x1,0x4)
0xE08758A4,	//0x06fc		VoC_lw16i_short(REG7,0x8,IN_PARALLEL)	|	VoC_lw16inc_p(REG4,REG2,DEFAULT)
0xDF40D8B5,	//0x06fe		VoC_push32(REG01,DEFAULT)	|	VoC_lw16inc_p(REG5,REG3,DEFAULT)
0xC1CF41C6,	//0x0700		VoC_add16_rr(REG7,REG7,REG1,IN_PARALLEL)	|	VoC_add16_rr(REG6,REG7,REG0,DEFAULT)
0xDF41685C,	//0x0702		VoC_push32(REG23,IN_PARALLEL)	|	VoC_loop_i_short(0x2,DEFAULT)
0x59BBD9B1,	//0x0704		VoC_lw32_p(REG67,REG7,DEFAULT)	|	VoC_lw32_p(REG23,REG6,DEFAULT)
0x5F43FBF9,	//0x0706		VoC_push32(REG67,DEFAULT)	|	VoC_shr32_ri(REG23,0xffffffff,IN_PARALLEL)
0x790AFBFB,	//0x0708		VoC_shru16_ri(REG2,0x1,DEFAULT)	|	VoC_shr32_ri(REG67,0xffffffff,IN_PARALLEL)
0x4D14F90E,	//0x070a		VoC_multf32_rr(ACC0,REG4,REG2,DEFAULT)	|	VoC_shru16_ri(REG6,0x1,IN_PARALLEL)
0x4E63CD55,	//0x070c		VoC_macX_rr(REG4,REG3,DEFAULT)	|	VoC_multf32_rr(ACC1,REG5,REG2,IN_PARALLEL)
0x4EAECEAB,	//0x070e		VoC_msu32_rr(REG5,REG6,DEFAULT)	|	VoC_macX_rr(REG5,REG3,IN_PARALLEL)
0x4EEFCE26,	//0x0710		VoC_msuX_rr(REG5,REG7,DEFAULT)	|	VoC_mac32_rr(REG4,REG6,IN_PARALLEL)
0xDF03CEA7,	//0x0712		VoC_pop32(REG67,DEFAULT)	|	VoC_macX_rr(REG4,REG7,IN_PARALLEL)
0x91043C26,	//0x0714		VoC_add32_rp(ACC0,ACC0,REG0,IN_PARALLEL)	|	VoC_sub32_pr(RL6,REG0,ACC0,DEFAULT)
0x914D3C6F,	//0x0716		VoC_add32_rp(ACC1,ACC1,REG1,IN_PARALLEL)	|	VoC_sub32_pr(RL7,REG1,ACC1,DEFAULT)
0xE0825DB6,	//0x0718		VoC_lw16i_short(REG2,0x8,IN_PARALLEL)	|	VoC_sw32_p(RL6,REG6,DEFAULT)
0xC0865DC4,	//0x071a		VoC_add16_rr(REG6,REG2,REG0,IN_PARALLEL)	|	VoC_sw32inc_p(ACC0,REG0,DEFAULT)
0xC08F5DCD,	//0x071c		VoC_add16_rr(REG7,REG2,REG1,IN_PARALLEL)	|	VoC_sw32inc_p(ACC1,REG1,DEFAULT)
		//0x071e		VoC_endloop0
0xDF01DDBF,	//0x071e		VoC_pop32(REG23,DEFAULT)	|	VoC_sw32_p(RL7,REG7,DEFAULT)
0xE0255F00,	//0x0720		VoC_lw16i_short(REG5,0x2,IN_PARALLEL)	|	VoC_pop32(REG01,DEFAULT)
		//0x0722		VoC_endloop1
0xC1494140,	//0x0722		VoC_add16_rr(REG1,REG5,REG1,IN_PARALLEL)	|	VoC_add16_rr(REG0,REG5,REG0,DEFAULT)
0x08881808,	//0x0724		VoC_lw16i_set_inc(REG0,0x888,0x2)
0x08A81809,	//0x0726		VoC_lw16i_set_inc(REG1,0x8a8,0x2)
0x08561806,	//0x0728		VoC_lw16i_set_inc(REG2,0x856,0x1)
0x085E1807,	//0x072a		VoC_lw16i_set_inc(REG3,0x85e,0x1)
0x41C6F207,	//0x072c		VoC_add16_rr(REG6,REG7,REG0,DEFAULT)	|	VoC_lw16i_short(REG7,0x10,DEFAULT)
0xE91EC1CF,	//0x072e		VoC_loop_i_short(0x8,DEFAULT)	|	VoC_add16_rr(REG7,REG7,REG1,IN_PARALLEL)
0xD8B5D8A4,	//0x0730		VoC_lw16inc_p(REG5,REG3,DEFAULT)	|	VoC_lw16inc_p(REG4,REG2,DEFAULT)
0xD9B1DF41,	//0x0732		VoC_lw32_p(REG23,REG6,DEFAULT)	|	VoC_push32(REG23,DEFAULT)
0xFBF959BB,	//0x0734		VoC_shr32_ri(REG23,0xffffffff,IN_PARALLEL)	|	VoC_lw32_p(REG67,REG7,DEFAULT)
0xFBFB5F43,	//0x0736		VoC_shr32_ri(REG67,0xffffffff,IN_PARALLEL)	|	VoC_push32(REG67,DEFAULT)
0xF90E790A,	//0x0738		VoC_shru16_ri(REG6,0x1,IN_PARALLEL)	|	VoC_shru16_ri(REG2,0x1,DEFAULT)
0xCD554D14,	//0x073a		VoC_multf32_rr(ACC1,REG5,REG2,IN_PARALLEL)	|	VoC_multf32_rr(ACC0,REG4,REG2,DEFAULT)
0xCEAB4E63,	//0x073c		VoC_macX_rr(REG5,REG3,IN_PARALLEL)	|	VoC_macX_rr(REG4,REG3,DEFAULT)
0xCE264EAE,	//0x073e		VoC_mac32_rr(REG4,REG6,IN_PARALLEL)	|	VoC_msu32_rr(REG5,REG6,DEFAULT)
0xCEA74EEF,	//0x0740		VoC_macX_rr(REG4,REG7,IN_PARALLEL)	|	VoC_msuX_rr(REG5,REG7,DEFAULT)
0x3C26DF03,	//0x0742		VoC_sub32_pr(RL6,REG0,ACC0,DEFAULT)	|	VoC_pop32(REG67,DEFAULT)
0x3C6F9104,	//0x0744		VoC_sub32_pr(RL7,REG1,ACC1,DEFAULT)	|	VoC_add32_rp(ACC0,ACC0,REG0,IN_PARALLEL)
0x5DB6914D,	//0x0746		VoC_sw32_p(RL6,REG6,DEFAULT)	|	VoC_add32_rp(ACC1,ACC1,REG1,IN_PARALLEL)
0x5DC4E104,	//0x0748		VoC_sw32inc_p(ACC0,REG0,DEFAULT)	|	VoC_lw16i_short(REG4,0x10,IN_PARALLEL)
0xDDCDC106,	//0x074a		VoC_sw32inc_p(ACC1,REG1,DEFAULT)	|	VoC_add16_rr(REG6,REG4,REG0,IN_PARALLEL)
0x5DBFDF01,	//0x074c		VoC_sw32_p(RL7,REG7,DEFAULT)	|	VoC_pop32(REG23,DEFAULT)
		//0x074d		VoC_endloop0
0xDF01C10F,	//0x074e		VoC_pop32(REG23,DEFAULT)	|	VoC_add16_rr(REG7,REG4,REG1,IN_PARALLEL)
0x08881808,	//0x0750		VoC_lw16i_set_inc(REG0,0x888,0x2)
0x08A81809,	//0x0752		VoC_lw16i_set_inc(REG1,0x8a8,0x2)
0xF0077032,	//0x0754		VoC_lw16i_short(INC3,0x1,IN_PARALLEL)	|	VoC_lw16i_short(INC2,0x1,DEFAULT)
0x077B2C05,	//0x0756		VoC_loop_i(0x1,0x2)
0x59C5D9C4,	//0x0758		VoC_lw32inc_p(ACC1,REG0,DEFAULT)	|	VoC_lw32inc_p(ACC0,REG0,DEFAULT)
0x691DFF26,	//0x075a		VoC_loop_i_short(0x8,DEFAULT)	|	VoC_movreg32(RL6,ACC0,IN_PARALLEL)
0xF076FF2F,	//0x075c		VoC_lw16i_short(STATUS,0x3,DEFAULT)	|	VoC_movreg32(RL7,ACC1,IN_PARALLEL)
0x6574FAFE,	//0x075e		VoC_xor32_rr(ACC0,RL6,DEFAULT)	|	VoC_shr32_ri(RL6,0x1f,DEFAULT)
0x657DFAFF,	//0x0760		VoC_xor32_rr(ACC1,RL7,DEFAULT)	|	VoC_shr32_ri(RL7,0x1f,IN_PARALLEL)
0x4B7DCB34,	//0x0762		VoC_sub32_rr(ACC1,ACC1,RL7,DEFAULT)	|	VoC_sub32_rr(ACC0,ACC0,RL6,IN_PARALLEL)
0x6574FA24,	//0x0764		VoC_xor32_rr(ACC0,RL6,DEFAULT)	|	VoC_shr32_ri(ACC0,0x4,IN_PARALLEL)
0xE57DFA25,	//0x0766		VoC_xor32_rr(ACC1,RL7,DEFAULT)	|	VoC_shr32_ri(ACC1,0x4,IN_PARALLEL)
0x076C2E80,	//0x0768		VoC_boe0z16_r(Coolsand_IFFT16_L0)
0xFFC07F47,	//0x076a		VoC_NAD(IN_PARALLEL)	|	VoC_lw32z(RL7,DEFAULT)
		//0x076c		Coolsand_IFFT16_L0
0x07702F80,	//0x076c		VoC_boe1z16_r(Coolsand_IFFT16_L1)
0xFFC07F46,	//0x076e		VoC_NAD(IN_PARALLEL)	|	VoC_lw32z(RL6,DEFAULT)
		//0x0770		Coolsand_IFFT16_L1
0xCB344B7D,	//0x0770		VoC_sub32_rr(ACC0,ACC0,RL6,IN_PARALLEL)	|	VoC_sub32_rr(ACC1,ACC1,RL7,DEFAULT)
0xFB857B84,	//0x0772		VoC_shr32_ri(ACC1,0xfffffff0,IN_PARALLEL)	|	VoC_shr32_ri(ACC0,0xfffffff0,DEFAULT)
0x5CA9D9C4,	//0x0774		VoC_sw16inc_p(ACC0_HI,REG2,DEFAULT)	|	VoC_lw32inc_p(ACC0,REG0,DEFAULT)
0xD9C5FF26,	//0x0776		VoC_lw32inc_p(ACC1,REG0,DEFAULT)	|	VoC_movreg32(RL6,ACC0,IN_PARALLEL)
		//0x0778		VoC_endloop0
0xFF2F5CAB,	//0x0778		VoC_movreg32(RL7,ACC1,IN_PARALLEL)	|	VoC_sw16inc_p(ACC1_HI,REG2,DEFAULT)
0xE062E020,	//0x077a		VoC_movreg16(REG2,REG3,DEFAULT)	|	VoC_movreg16(REG0,REG1,DEFAULT)
		//0x077b		VoC_endloop1
0xFFC0DFA9,	//0x077c		VoC_NOP	|	VoC_pop16(RA,DEFAULT)
0xDFC0E580,	//0x077e		VoC_push16(REG0,DEFAULT)	|	VoC_return
		//0x077f		Coolsand_ReverseIndex
0xD9C6D9C7,	//0x0780		VoC_lw32inc_p(RL6,REG0,DEFAULT)	|	VoC_lw32inc_p(RL7,REG0,DEFAULT)
0xD9C4D9C5,	//0x0782		VoC_lw32inc_p(ACC0,REG0,DEFAULT)	|	VoC_lw32inc_p(ACC1,REG0,DEFAULT)
0xD9C2D9C3,	//0x0784		VoC_lw32inc_p(REG45,REG0,DEFAULT)	|	VoC_lw32inc_p(REG67,REG0,DEFAULT)
0xD801D9C1,	//0x0786		VoC_lw16_p(REG1,REG0,DEFAULT)	|	VoC_lw32inc_p(REG23,REG0,DEFAULT)
0x61E6DF80,	//0x0788		VoC_movreg16(REG6,RL7_HI,DEFAULT)	|	VoC_pop16(REG0,DEFAULT)
0x618AF6CF,	//0x078a		VoC_movreg16(ACC1_LO,RL6_LO,DEFAULT)	|	VoC_movreg16(RL7_HI,REG6,IN_PARALLEL)
0x61A2F74C,	//0x078c		VoC_movreg16(REG2,RL6_HI,DEFAULT)	|	VoC_movreg16(RL6_LO,ACC1_LO,IN_PARALLEL)
0x6164F64D,	//0x078e		VoC_movreg16(REG4,ACC1_HI,DEFAULT)	|	VoC_movreg16(RL6_HI,REG2,IN_PARALLEL)
0x6121F68B,	//0x0790		VoC_movreg16(REG1,ACC0_HI,DEFAULT)	|	VoC_movreg16(ACC1_HI,REG4,IN_PARALLEL)
0x60A3F629,	//0x0792		VoC_movreg16(REG3,REG5,DEFAULT)	|	VoC_movreg16(ACC0_HI,REG1,IN_PARALLEL)
0xDDC7F665,	//0x0794		VoC_sw32inc_p(RL7,REG0,DEFAULT)	|	VoC_movreg16(REG5,REG3,IN_PARALLEL)
0xDDC5DDC6,	//0x0796		VoC_sw32inc_p(ACC1,REG0,DEFAULT)	|	VoC_sw32inc_p(RL6,REG0,DEFAULT)
0xDDC3DDC4,	//0x0798		VoC_sw32inc_p(REG67,REG0,DEFAULT)	|	VoC_sw32inc_p(ACC0,REG0,DEFAULT)
0xDDC1DDC2,	//0x079a		VoC_sw32inc_p(REG23,REG0,DEFAULT)	|	VoC_sw32inc_p(REG45,REG0,DEFAULT)
0xE580DC01,	//0x079c		VoC_return	|	VoC_sw16_p(REG1,REG0,DEFAULT)
		//0x079e		Coolsand_CopyVec
0xF80F59CC,	//0x079e		VoC_shr16_ri(REG7,0x1,IN_PARALLEL)	|	VoC_lw32inc_p(ACC0,REG1,DEFAULT)
0xD9CCE7C2,	//0x07a0		VoC_lw32inc_p(ACC0,REG1,DEFAULT)	|	VoC_loop_r_short(REG7,DEFAULT)
		//0x07a2		VoC_endloop0
0xE580DDD4,	//0x07a2		VoC_return	|	VoC_sw32inc_p(ACC0,REG2,DEFAULT)
		//0x07a4		Coolsand_CmplxAppxNorm_int
0xFAFC7F22,	//0x07a4		VoC_shr32_ri(ACC0,0x1f,IN_PARALLEL)	|	VoC_movreg32(REG45,ACC0,DEFAULT)
0xDF466562,	//0x07a6		VoC_push32(RL6,IN_PARALLEL)	|	VoC_xor32_rr(REG45,ACC0,DEFAULT)
0xFAFD7F2E,	//0x07a8		VoC_shr32_ri(ACC1,0x1f,IN_PARALLEL)	|	VoC_movreg32(RL6,ACC1,DEFAULT)
0xCAA4656E,	//0x07aa		VoC_sub32_rr(ACC0,REG45,ACC0,IN_PARALLEL)	|	VoC_xor32_rr(RL6,ACC1,DEFAULT)
0x3625CBAD,	//0x07ac		VoC_bgt32_rr(Coolsand_CmplxAppxNorm_int_300,ACC0,ACC1)(lo)	|	VoC_sub32_rr(ACC1,RL6,ACC1,DEFAULT)
0x7F2C07B2,	//0x07ae		VoC_movreg32(ACC0,ACC1,DEFAULT)	|	VoC_bgt32_rr(Coolsand_CmplxAppxNorm_int_300,ACC0,ACC1)(hi)
0xFFC0FF25,	//0x07b0		VoC_NAD	|	VoC_movreg32(ACC1,ACC0,IN_PARALLEL)
		//0x07b2		Coolsand_CmplxAppxNorm_int_300
0xFF2A7F26,	//0x07b2		VoC_movreg32(REG45,ACC1,IN_PARALLEL)	|	VoC_movreg32(RL6,ACC0,DEFAULT)
0xFBFD7BDC,	//0x07b4		VoC_shr32_ri(ACC1,0xffffffff,IN_PARALLEL)	|	VoC_shr32_ri(ACC0,0xfffffffb,DEFAULT)
0xC9554B34,	//0x07b6		VoC_add32_rr(ACC1,ACC1,REG45,IN_PARALLEL)	|	VoC_sub32_rr(ACC0,ACC0,RL6,DEFAULT)
0xFA1D7A2C,	//0x07b8		VoC_shr32_ri(ACC1,0x3,IN_PARALLEL)	|	VoC_shr32_ri(ACC0,0x5,DEFAULT)
0xDF06492C,	//0x07ba		VoC_pop32(RL6,IN_PARALLEL)	|	VoC_add32_rr(ACC0,ACC0,ACC1,DEFAULT)
0xFFC06580,	//0x07bc		VoC_NAD(IN_PARALLEL)	|	VoC_return
		//0x07be		Coolsand_MSBPos
0xFAFE7F34,	//0x07be		VoC_shr32_ri(RL6,0x1f,IN_PARALLEL)	|	VoC_movreg32(ACC0,RL6,DEFAULT)
0xDF446574,	//0x07c0		VoC_push32(ACC0,IN_PARALLEL)	|	VoC_xor32_rr(ACC0,RL6,DEFAULT)
0xE0034B34,	//0x07c2		VoC_lw16i_short(REG3,0x0,IN_PARALLEL)	|	VoC_sub32_rr(ACC0,ACC0,RL6,DEFAULT)
0xF0076684,	//0x07c4		VoC_lw16i_short(INC3,0x1,IN_PARALLEL)	|	VoC_loop_r_short(REG2,DEFAULT)
0x07CA3304,	//0x07c6		VoC_bez32_r(Coolsand_MSBPos_L0,ACC0)
		//0x07c8		VoC_endloop0
0xFA0C5E18,	//0x07c8		VoC_shr32_ri(ACC0,0x1,IN_PARALLEL)	|	VoC_inc_p(REG3,DEFAULT)
		//0x07ca		Coolsand_MSBPos_L0
0xE580DF04,	//0x07ca		VoC_return	|	VoC_pop32(ACC0,DEFAULT)
		//0x07cc		Coolsand_ComputeNoiseWeight_DeciDirectCTRL
0x0A80DFE9,	//0x07cc		VoC_lw16i(REG0,0x61c)(lo)	|	VoC_push16(RA,DEFAULT)
0x0A81061C,	//0x07ce		VoC_lw16i(REG1,0x626)(lo)	|	VoC_lw16i(REG0,0x61c)(hi)
0x14070626,	//0x07d0		VoC_lw16_d(REG7,0x887)(lo)	|	VoC_lw16i(REG1,0x626)(hi)
0xC0380887,	//0x07d2		VoC_add16_rr(REG0,REG0,REG7,DEFAULT)	|	VoC_lw16_d(REG7,0x887)(hi)
0xD800C079,	//0x07d4		VoC_lw16_p(REG0,REG0,DEFAULT)	|	VoC_add16_rr(REG1,REG1,REG7,DEFAULT)
0xFFC05811,	//0x07d6		VoC_NAD(IN_PARALLEL)	|	VoC_lw16_p(REG1,REG1,DEFAULT)
0x0BBB2B80,	//0x07d8		VoC_jal(Cooland_InstantPower)
0x08871405,	//0x07da		VoC_lw16_d(REG5,0x887)
0x06B20A86,	//0x07dc		VoC_lw16i(REG6,0x6b2)
0x40321407,	//0x07de		VoC_lw16_d(REG7,0x4032)
0xF8FD7F27,	//0x07e0		VoC_shr16_ri(REG5,0xffffffff,IN_PARALLEL)	|	VoC_movreg32(RL7,ACC0,DEFAULT)
0xDFC5C1AE,	//0x07e2		VoC_push16(REG5,DEFAULT)	|	VoC_add16_rr(REG6,REG6,REG5,DEFAULT)
0x0B002B80,	//0x07e4		VoC_jal(Coolsand_SmoothPeakPower)
0x0A80DF87,	//0x07e6		VoC_lw16i(REG0,0x6c4)(lo)	|	VoC_pop16(REG7,DEFAULT)
0x0A8106C4,	//0x07e8		VoC_lw16i(REG1,0x6b2)(lo)	|	VoC_lw16i(REG0,0x6c4)(hi)
0xC03806B2,	//0x07ea		VoC_add16_rr(REG0,REG0,REG7,DEFAULT)	|	VoC_lw16i(REG1,0x6b2)(hi)
0xD984C079,	//0x07ec		VoC_lw32_p(ACC0,REG0,DEFAULT)	|	VoC_add16_rr(REG1,REG1,REG7,DEFAULT)
0xDF40D98D,	//0x07ee		VoC_push32(REG01,DEFAULT)	|	VoC_lw32_p(ACC1,REG1,DEFAULT)
0x0B162B80,	//0x07f0		VoC_jal(Coolsand_InstantSNR)
0x0B4E2B80,	//0x07f2		VoC_jal(Coolsand_OverallNoiseEstwState)
0xF284DF00,	//0x07f4		VoC_lw16i_short(REG4,0x14,DEFAULT)	|	VoC_pop32(REG01,DEFAULT)
0xFBF9D981,	//0x07f6		VoC_shr32_ri(REG23,0xffffffff,DEFAULT)	|	VoC_lw32_p(REG23,REG0,DEFAULT)
0x3341FA21,	//0x07f8		VoC_bnez32_r(Coolsand_ComputeNoiseWeight_DeciDirectCTRL_L0,REG23)(lo)	|	VoC_shr32_ri(REG23,0x4,DEFAULT)
0x702207FE,	//0x07fa		VoC_lw16i_short(REG2,0x1,DEFAULT)	|	VoC_bnez32_r(Coolsand_ComputeNoiseWeight_DeciDirectCTRL_L0,REG23)(hi)
0xFFC0E003,	//0x07fc		VoC_NAD	|	VoC_lw16i_short(REG3,0x0,IN_PARALLEL)
		//0x07fe		Coolsand_ComputeNoiseWeight_DeciDirectCTRL_L0
0x08DC2B80,	//0x07fe		VoC_jal(Coolsand_ShrinkBit)
0xD98B70A4,	//0x0800		VoC_lw32_p(REG67,REG1,IN_PARALLEL)	|	VoC_lw16i_short(REG4,0x5,DEFAULT)
0x7EA3C2E4,	//0x0802		VoC_shr32_rr(REG67,REG4,DEFAULT)	|	VoC_sub16_rr(REG4,REG3,REG4,DEFAULT)
0x7F1EE01E,	//0x0804		VoC_movreg32(RL6,REG67,DEFAULT)	|	VoC_lw16i_short(RL7_LO,0x1,IN_PARALLEL)
0xE4FEE00F,	//0x0806		VoC_and32_rr(RL6,RL7,DEFAULT)	|	VoC_lw16i_short(RL7_HI,0x0,IN_PARALLEL)
0x080C3306,	//0x0808		VoC_bez32_r(Coolsand_ComputeNoiseWeight_DeciDirectCTRL_L1,RL6)
0xFFC048FB,	//0x080a		VoC_NAD(IN_PARALLEL)	|	VoC_add32_rr(REG67,REG67,RL7,DEFAULT)
		//0x080c		Coolsand_ComputeNoiseWeight_DeciDirectCTRL_L1
0xFF277B8B,	//0x080c		VoC_movreg32(RL7,ACC0,IN_PARALLEL)	|	VoC_shr32_ri(REG67,0xfffffff1,DEFAULT)
0x0A82FBE7,	//0x080e		VoC_lw16i(REG2,0x6e0)(lo)	|	VoC_shr32_ri(RL7,0xfffffffc,DEFAULT)
0x071206E0,	//0x0810		VoC_add16_rd(REG2,REG2,0x887)(lo)	|	VoC_lw16i(REG2,0x6e0)(hi)
0xBC7F0887,	//0x0812		VoC_sub32_pr(RL7,REG1,RL7,DEFAULT)	|	VoC_add16_rd(REG2,REG2,0x887)(hi)
0x33C7DC27,	//0x0814		VoC_bnltz32_r(Coolsand_ComputeNoiseWeight_DeciDirectCTRL_L2,RL7)(lo)	|	VoC_sw16_p(REG7,REG2,DEFAULT)
0xFF470818,	//0x0816		VoC_lw32z(RL7,DEFAULT)	|	VoC_bnltz32_r(Coolsand_ComputeNoiseWeight_DeciDirectCTRL_L2,RL7)(hi)
		//0x0818		Coolsand_ComputeNoiseWeight_DeciDirectCTRL_L2
0x08871402,	//0x0818		VoC_lw16_d(REG2,0x887)
0xDF4478FA,	//0x081a		VoC_push32(ACC0,IN_PARALLEL)	|	VoC_shr16_ri(REG2,0xffffffff,DEFAULT)
0x06EA0A83,	//0x081c		VoC_lw16i(REG3,0x6ea)
0x1401C0D3,	//0x081e		VoC_lw16_d(REG1,0x4013)(lo)	|	VoC_add16_rr(REG3,REG3,REG2,DEFAULT)
0x599D4013,	//0x0820		VoC_lw32_p(ACC1,REG3,DEFAULT)	|	VoC_lw16_d(REG1,0x4013)(hi)
0xCBEAFA27,	//0x0822		VoC_sub32_rr(REG45,RL7,ACC1,DEFAULT)	|	VoC_shr32_ri(RL7,0x4,IN_PARALLEL)
0xFF2C7BC2,	//0x0824		VoC_movreg32(ACC0,ACC1,IN_PARALLEL)	|	VoC_shr32_ri(REG45,0xfffffff8,DEFAULT)
0xF4397A3A,	//0x0826		VoC_lw16i_short(FORMAT32,0x7,IN_PARALLEL)	|	VoC_shr32_ri(REG45,0x7,DEFAULT)
0xF5C2790C,	//0x0828		VoC_lw16i_short(FORMATX,0xfffffff8,IN_PARALLEL)	|	VoC_shru16_ri(REG4,0x1,DEFAULT)
0xCE69CE21,	//0x082a		VoC_macX_rr(REG5,REG1,DEFAULT)	|	VoC_mac32_rr(REG4,REG1,DEFAULT)
0xDF06FFC0,	//0x082c		VoC_pop32(RL6,DEFAULT)	|	VoC_NOP
0xE1425F44,	//0x082e		VoC_lw16i_short(REG2,0x14,IN_PARALLEL)	|	VoC_push32(ACC0,DEFAULT)
0x07BE2B80,	//0x0830		VoC_jal(Coolsand_MSBPos)
0x08F60A81,	//0x0832		VoC_lw16i(REG1,0x8f6)
0x08870709,	//0x0834		VoC_add16_rd(REG1,REG1,0x887)
0xE0805F04,	//0x0836		VoC_lw16i_short(REG0,0x8,IN_PARALLEL)	|	VoC_pop32(ACC0,DEFAULT)
0xFE84C2C0,	//0x0838		VoC_shr32_rr(ACC0,REG0,DEFAULT)	|	VoC_sub16_rr(REG0,REG3,REG0,DEFAULT)
0x070E0A80,	//0x083a		VoC_lw16i(REG0,0x70e)
0x08870700,	//0x083c		VoC_add16_rd(REG0,REG0,0x887)
0x5803FB84,	//0x083e		VoC_lw16_p(REG3,REG0,DEFAULT)	|	VoC_shr32_ri(ACC0,0xfffffff0,DEFAULT)
0x7A81E084,	//0x0840		VoC_shr32_ri(REG23,0x10,DEFAULT)	|	VoC_lw16i_short(REG4,0x8,IN_PARALLEL)
0xDFC0DC19,	//0x0842		VoC_push16(REG0,DEFAULT)	|	VoC_sw16_p(ACC0_HI,REG1,IN_PARALLEL)
0xFFC05FC9,	//0x0844		VoC_NAD(IN_PARALLEL)	|	VoC_push16(ACC0_HI,DEFAULT)
0x08DC2B80,	//0x0846		VoC_jal(Coolsand_ShrinkBit)
0xFB445F80,	//0x0848		VoC_shr32_ri(ACC0,0xffffffe8,IN_PARALLEL)	|	VoC_pop16(REG0,DEFAULT)
0xE0127ABC,	//0x084a		VoC_lw16i_short(REG2,0x1,IN_PARALLEL)	|	VoC_shr32_ri(ACC0,0x17,DEFAULT)
0xF8CA6101,	//0x084c		VoC_shr16_ri(REG2,0xfffffff9,IN_PARALLEL)	|	VoC_movreg16(REG1,ACC0_LO,DEFAULT)
0x08523491,	//0x084e		VoC_bngt16_rr(Coolsand_ComputeNoiseWeight_DeciDirectCTRL_L3,REG2,REG1)
0xF5B84608,	//0x0850		VoC_lw16i_short(FORMAT16,0xfffffff7,IN_PARALLEL)	|	VoC_multf16_rr(REG0,REG0,REG1,DEFAULT)
		//0x0852		Coolsand_ComputeNoiseWeight_DeciDirectCTRL_L3
0xF1E2DF81,	//0x0852		VoC_lw16i_short(REG2,0xf,DEFAULT)	|	VoC_pop16(REG1,DEFAULT)
0x600D8008,	//0x0854		VoC_movreg16(RL6_HI,REG0,DEFAULT)	|	VoC_add16_rp(REG0,REG0,REG1,DEFAULT)
0xFA86DFC1,	//0x0856		VoC_shr32_ri(RL6,0x10,DEFAULT)	|	VoC_push16(REG1,IN_PARALLEL)
0x07BE2B80,	//0x0858		VoC_jal(Coolsand_MSBPos)
0xE01271E0,	//0x085a		VoC_lw16i_short(REG2,0x1,IN_PARALLEL)	|	VoC_lw16i_short(REG0,0xf,DEFAULT)
0xF8CA42C3,	//0x085c		VoC_shr16_ri(REG2,0xfffffff9,IN_PARALLEL)	|	VoC_sub16_rr(REG3,REG3,REG0,DEFAULT)
0x40151401,	//0x085e		VoC_lw16_d(REG1,0x4015)
0xDF847E19,	//0x0860		VoC_pop16(REG4,IN_PARALLEL)	|	VoC_shr16_rr(REG1,REG3,DEFAULT)
0x3491F005,	//0x0862		VoC_bngt16_rr(Coolsand_ComputeNoiseWeight_DeciDirectCTRL_L4,REG2,REG1)(lo)	|	VoC_lw16i_short(REG5,0x0,DEFAULT)
0xC28D0866,	//0x0864		VoC_sub16_rr(REG5,REG2,REG1,DEFAULT)	|	VoC_bngt16_rr(Coolsand_ComputeNoiseWeight_DeciDirectCTRL_L4,REG2,REG1)(hi)
		//0x0866		Coolsand_ComputeNoiseWeight_DeciDirectCTRL_L4
0x402C1400,	//0x0866		VoC_lw16_d(REG0,0x402c)
0x08870800,	//0x0868		VoC_mult16_rd(REG0,REG0,0x887)
0x0700FFC0,	//0x086a		VoC_add16_rd(REG0,REG0,0x4016)(lo)	|	VoC_NOP
0x34284016,	//0x086c		VoC_bgt16_rr(Coolsand_ComputeNoiseWeight_DeciDirectCTRL_L5,REG5,REG0)(lo)	|	VoC_add16_rd(REG0,REG0,0x4016)(hi)
0xE0050870,	//0x086e		VoC_movreg16(REG5,REG0,DEFAULT)	|	VoC_bgt16_rr(Coolsand_ComputeNoiseWeight_DeciDirectCTRL_L5,REG5,REG0)(hi)
		//0x0870		Coolsand_ComputeNoiseWeight_DeciDirectCTRL_L5
0xDC45DFA9,	//0x0870		VoC_sw16_p(REG5,REG4,DEFAULT)	|	VoC_pop16(RA,DEFAULT)
0xFFC06580,	//0x0872		VoC_NAD(IN_PARALLEL)	|	VoC_return
		//0x0874		Coolsand_CmplxAppxNorm
0xF8787F01,	//0x0874		VoC_shr16_ri(REG0,0xf,IN_PARALLEL)	|	VoC_movreg32(REG23,REG01,DEFAULT)
0xF8796482,	//0x0876		VoC_shr16_ri(REG1,0xf,IN_PARALLEL)	|	VoC_xor16_rr(REG2,REG0,DEFAULT)
0xC282648B,	//0x0878		VoC_sub16_rr(REG2,REG2,REG0,IN_PARALLEL)	|	VoC_xor16_rr(REG3,REG1,DEFAULT)
0xE1F042CB,	//0x087a		VoC_lw16i_short(REG0,0x1f,IN_PARALLEL)	|	VoC_sub16_rr(REG3,REG3,REG1,DEFAULT)
0x08803413,	//0x087c		VoC_bgt16_rr(Coolsand_CmplxAppxNorm_L0,REG2,REG3)
0xF6436062,	//0x087e		VoC_movreg16(REG3,REG2,IN_PARALLEL)	|	VoC_movreg16(REG2,REG3,DEFAULT)
		//0x0880		Coolsand_CmplxAppxNorm_L0
0xF41A70B9,	//0x0880		VoC_lw16i_short(FORMATX,0x3,IN_PARALLEL)	|	VoC_lw16i_short(FORMAT32,0x5,DEFAULT)
0xE0314C84,	//0x0882		VoC_lw16i_short(REG1,0x3,IN_PARALLEL)	|	VoC_multf32_rr(ACC0,REG2,REG0,DEFAULT)
0xE580CE59,	//0x0884		VoC_return	|	VoC_macX_rr(REG3,REG1,DEFAULT)
		//0x0886		Coolsand_FirstOrderIIRSmooth2
0xFBC2CBE2,	//0x0886		VoC_shr32_ri(REG45,0xfffffff8,DEFAULT)	|	VoC_sub32_rr(REG45,RL7,ACC0,DEFAULT)
0xF90CFA3A,	//0x0888		VoC_shru16_ri(REG4,0x1,DEFAULT)	|	VoC_shr32_ri(REG45,0x7,DEFAULT)
0xCE69CE21,	//0x088a		VoC_macX_rr(REG5,REG1,DEFAULT)	|	VoC_mac32_rr(REG4,REG1,DEFAULT)
0xDFE9E580,	//0x088c		VoC_push16(RA,DEFAULT)	|	VoC_return
		//0x088d		Coolsand_NoisePSDEst
0x00320A87,	//0x088e		VoC_lw16i(REG7,0x32)
0xD98DD984,	//0x0890		VoC_lw32_p(ACC1,REG1,DEFAULT)	|	VoC_lw32_p(ACC0,REG0,DEFAULT)
0x089834BE,	//0x0892		VoC_bngt16_rr(Coolsand_NoisePSDEst_L0,REG7,REG6)
0x2B00FF25,	//0x0894		VoC_jump_lg(Coolsand_NoisePSDEst_Lx)(lo)	|	VoC_movreg32(ACC1,ACC0,DEFAULT)
0xFFC008D4,	//0x0896		VoC_NAD	|	VoC_jump_lg(Coolsand_NoisePSDEst_Lx)(hi)
		//0x0898		Coolsand_NoisePSDEst_L0
0x08A436AC,	//0x0898		VoC_bngt32_rr(Coolsand_NoisePSDEst_L1,ACC1,ACC0)
0x08A03304,	//0x089a		VoC_bez32_r(Coolsand_NoisePSDEst_L1_sub0,ACC0)
0x2B00FF25,	//0x089c		VoC_jump_lg(Coolsand_NoisePSDEst_Lx)(lo)	|	VoC_movreg32(ACC1,ACC0,DEFAULT)
0xFFC008D4,	//0x089e		VoC_NAD	|	VoC_jump_lg(Coolsand_NoisePSDEst_Lx)(hi)
		//0x08a0		Coolsand_NoisePSDEst_L1_sub0
0xE00B702A,	//0x08a0		VoC_lw16i_short(ACC1_HI,0x0,IN_PARALLEL)	|	VoC_lw16i_short(ACC1_LO,0x1,DEFAULT)
0x08D42B00,	//0x08a2		VoC_jump_lg(Coolsand_NoisePSDEst_Lx)
		//0x08a4		Coolsand_NoisePSDEst_L1
0xE00D720C,	//0x08a4		VoC_lw16i_short(RL6_HI,0x0,IN_PARALLEL)	|	VoC_lw16i_short(RL6_LO,0x10,DEFAULT)
0x08AA362E,	//0x08a6		VoC_bgt32_rr(Coolsand_NoisePSDEst_L2,ACC1,RL6)
0xE5CFE087,	//0x08a8		VoC_jump(Coolsand_NoisePSDEst_L4)	|	VoC_movreg16(REG7,REG4,DEFAULT)
		//0x08aa		Coolsand_NoisePSDEst_L2
0xE20C700D,	//0x08aa		VoC_lw16i_short(RL6_LO,0x20,IN_PARALLEL)	|	VoC_lw16i_short(RL6_HI,0x0,DEFAULT)
0x08B036B5,	//0x08ac		VoC_bngt32_rr(Coolsand_NoisePSDEst_L3,RL6,ACC1)
0xE5C9E0A7,	//0x08ae		VoC_jump(Coolsand_NoisePSDEst_L4)	|	VoC_movreg16(REG7,REG5,DEFAULT)
		//0x08b0		Coolsand_NoisePSDEst_L3
0xF853F8B3,	//0x08b0		VoC_shr16_ri(REG3,0xa,DEFAULT)	|	VoC_shr16_ri(REG3,0xfffffff6,DEFAULT)
0x08660A84,	//0x08b2		VoC_lw16i(REG4,0x866)
0xFFC0C11C,	//0x08b4		VoC_NOP	|	VoC_add16_rr(REG4,REG4,REG3,DEFAULT)
0xFFC05847,	//0x08b6		VoC_NAD(IN_PARALLEL)	|	VoC_lw16_p(REG7,REG4,DEFAULT)
		//0x08b8		Coolsand_NoisePSDEst_L4
0xF5A046BB,	//0x08b8		VoC_lw16i_short(FORMAT16,0xfffffff4,IN_PARALLEL)	|	VoC_multf16_rr(REG3,REG2,REG7,DEFAULT)
0x0ABC1404,	//0x08ba		VoC_lw16_d(REG4,0xabc)
0xF8E35F44,	//0x08bc		VoC_shr16_ri(REG3,0xfffffffc,IN_PARALLEL)	|	VoC_push32(ACC0,DEFAULT)
0xDFC17AA1,	//0x08be		VoC_push16(REG1,IN_PARALLEL)	|	VoC_shr32_ri(REG23,0x14,DEFAULT)
0x08DC2B80,	//0x08c0		VoC_jal(Coolsand_ShrinkBit)
0x5F07DF81,	//0x08c2		VoC_pop32(RL7,DEFAULT)	|	VoC_pop16(REG1,DEFAULT)
0x3307F707,	//0x08c4		VoC_bez32_r(Coolsand_NoisePSDEst_Lx,RL7)(lo)	|	VoC_movreg16(REG7,ACC0_LO,IN_PARALLEL)
0x140208D4,	//0x08c6		VoC_lw16_d(REG2,0xabd)(lo)	|	VoC_bez32_r(Coolsand_NoisePSDEst_Lx,RL7)(hi)
0xCBEA0ABD,	//0x08c8		VoC_sub32_rr(REG45,RL7,ACC1,DEFAULT)	|	VoC_lw16_d(REG2,0xabd)(hi)
0xE0F37BC2,	//0x08ca		VoC_lw16i_short(REG3,0xf,IN_PARALLEL)	|	VoC_shr32_ri(REG45,0xfffffff8,DEFAULT)
0xC29B7A3A,	//0x08cc		VoC_sub16_rr(REG3,REG2,REG3,IN_PARALLEL)	|	VoC_shr32_ri(REG45,0x7,DEFAULT)
0x6059F90C,	//0x08ce		VoC_movreg16(FORMAT32,REG2,DEFAULT)	|	VoC_shru16_ri(REG4,0x1,DEFAULT)
0x607ACE27,	//0x08d0		VoC_movreg16(FORMATX,REG3,DEFAULT)	|	VoC_mac32_rr(REG4,REG7,IN_PARALLEL)
0xFFC0CEAF,	//0x08d2		VoC_NAD	|	VoC_macX_rr(REG5,REG7,IN_PARALLEL)
		//0x08d4		Coolsand_NoisePSDEst_Lx
0xE00D708C,	//0x08d4		VoC_lw16i_short(RL6_HI,0x0,IN_PARALLEL)	|	VoC_lw16i_short(RL6_LO,0x4,DEFAULT)
0x08D9362E,	//0x08d6		VoC_bgt32_rr(Coolsand_NoisePSDEst_END,ACC1,RL6)
0xDFA9FF35,	//0x08d8		VoC_pop16(RA,DEFAULT)	|	VoC_movreg32(ACC1,RL6,DEFAULT)
		//0x08d9		Coolsand_NoisePSDEst_END
0xE580DD8D,	//0x08da		VoC_return	|	VoC_sw32_p(ACC1,REG1,DEFAULT)
		//0x08dc		Coolsand_ShrinkBit
0xFAF97F0E,	//0x08dc		VoC_shr32_ri(REG23,0x1f,IN_PARALLEL)	|	VoC_movreg32(RL6,REG23,DEFAULT)
0xF6827F0F,	//0x08de		VoC_movreg16(REG2,REG4,IN_PARALLEL)	|	VoC_movreg32(RL7,REG23,DEFAULT)
0xDF465FE9,	//0x08e0		VoC_push32(RL6,IN_PARALLEL)	|	VoC_push16(RA,DEFAULT)
0x07BE2B80,	//0x08e2		VoC_jal(Coolsand_MSBPos)
0xDF065FA9,	//0x08e4		VoC_pop32(RL6,IN_PARALLEL)	|	VoC_pop16(RA,DEFAULT)
0xE0147F44,	//0x08e6		VoC_lw16i_short(REG4,0x1,IN_PARALLEL)	|	VoC_lw32z(ACC0,DEFAULT)
0x08F23183,	//0x08e8		VoC_bez16_r(Coolsand_ShrinkBit_L0,REG3)
0xE005431A,	//0x08ea		VoC_lw16i_short(REG5,0x0,IN_PARALLEL)	|	VoC_sub16_rr(REG2,REG4,REG3,DEFAULT)
0xFE92657E,	//0x08ec		VoC_shr32_rr(REG45,REG2,IN_PARALLEL)	|	VoC_xor32_rr(RL6,RL7,DEFAULT)
0xE4F2CBBE,	//0x08ee		VoC_and32_rr(REG45,RL6,DEFAULT)	|	VoC_sub32_rr(RL6,RL6,RL7,DEFAULT)
0xCABCE57A,	//0x08f0		VoC_sub32_rr(ACC0,REG45,RL7,DEFAULT)	|	VoC_xor32_rr(REG45,RL7,DEFAULT)
		//0x08f2		Coolsand_ShrinkBit_L0
0xDFE9E580,	//0x08f2		VoC_push16(RA,DEFAULT)	|	VoC_return
		//0x08f3		Coolsand_PostFiltering
0x08871407,	//0x08f4		VoC_lw16_d(REG7,0x887)
0x0A4C0A80,	//0x08f6		VoC_lw16i(REG0,0xa4c)
0x070E0A81,	//0x08f8		VoC_lw16i(REG1,0x70e)
0xC0794038,	//0x08fa		VoC_add16_rr(REG1,REG1,REG7,IN_PARALLEL)	|	VoC_add16_rr(REG0,REG0,REG7,DEFAULT)
0x402C1403,	//0x08fc		VoC_lw16_d(REG3,0x402c)
0xD811D800,	//0x08fe		VoC_lw16_p(REG1,REG1,DEFAULT)	|	VoC_lw16_p(REG0,REG0,DEFAULT)
0xC40844FB,	//0x0900		VoC_mult16_rr(REG0,REG0,REG1,IN_PARALLEL)	|	VoC_mult16_rr(REG3,REG3,REG7,DEFAULT)
0x007F0A84,	//0x0902		VoC_lw16i(REG4,0x7f)
0x4016071B,	//0x0904		VoC_add16_rd(REG3,REG3,0x4016)
0x090934A3,	//0x0906		VoC_bngt16_rr(Coolsand_PostFiltering_L0,REG4,REG3)
0xF8CCE064,	//0x0908		VoC_shr16_ri(REG4,0xfffffff9,DEFAULT)	|	VoC_movreg16(REG4,REG3,DEFAULT)
		//0x0909		Coolsand_PostFiltering_L0
0x090F3484,	//0x090a		VoC_bngt16_rr(Coolsand_PostFiltering_L1,REG0,REG4)
0x401D0809,	//0x090c		VoC_mult16_rd(REG1,REG1,0x401d)
0xF8E1E5C2,	//0x090e		VoC_shr16_ri(REG1,0xfffffffc,DEFAULT)	|	VoC_jump(Coolsand_PostFiltering_L2)
		//0x090f		Coolsand_PostFiltering_L1
		//0x0910		Coolsand_PostFiltering_L2
0x07180A82,	//0x0910		VoC_lw16i(REG2,0x718)
0x0A83C0BA,	//0x0912		VoC_lw16i(REG3,0xa4c)(lo)	|	VoC_add16_rr(REG2,REG2,REG7,DEFAULT)
0x5C210A4C,	//0x0914		VoC_sw16_p(REG1,REG2,DEFAULT)	|	VoC_lw16i(REG3,0xa4c)(hi)
0x0A80C0FB,	//0x0916		VoC_lw16i(REG0,0x61c)(lo)	|	VoC_add16_rr(REG3,REG3,REG7,IN_PARALLEL)
0x0A81061C,	//0x0918		VoC_lw16i(REG1,0x626)(lo)	|	VoC_lw16i(REG0,0x61c)(hi)
0x40380626,	//0x091a		VoC_add16_rr(REG0,REG0,REG7,DEFAULT)	|	VoC_lw16i(REG1,0x626)(hi)
0xF6F8C079,	//0x091c		VoC_lw16i_short(FORMAT16,0xfffffff7,DEFAULT)	|	VoC_add16_rr(REG1,REG1,REG7,IN_PARALLEL)
0xD811D800,	//0x091e		VoC_lw16_p(REG1,REG1,DEFAULT)	|	VoC_lw16_p(REG0,REG0,DEFAULT)
0x8C590C18,	//0x0920		VoC_multf16_rp(REG1,REG1,REG3,IN_PARALLEL)	|	VoC_multf16_rp(REG0,REG0,REG3,DEFAULT)
0xFF07DF40,	//0x0922		VoC_movreg32(RL7,REG01,DEFAULT)	|	VoC_push32(REG01,DEFAULT)
0x08742B80,	//0x0924		VoC_jal(Coolsand_CmplxAppxNorm)
0x6120FB84,	//0x0926		VoC_movreg16(REG0,ACC0_HI,DEFAULT)	|	VoC_shr32_ri(ACC0,0xfffffff0,DEFAULT)
0x4C04F459,	//0x0928		VoC_multf32_rr(ACC0,REG0,REG0,DEFAULT)	|	VoC_lw16i_short(FORMAT32,0xb,IN_PARALLEL)
0x0A81F6E3,	//0x092a		VoC_lw16i(REG1,0x6fc)(lo)	|	VoC_movreg16(REG3,REG7,IN_PARALLEL)
0xF8FB06FC,	//0x092c		VoC_shr16_ri(REG3,0xffffffff,DEFAULT)	|	VoC_lw16i(REG1,0x6fc)(hi)
0x0A82C059,	//0x092e		VoC_lw16i(REG2,0x718)(lo)	|	VoC_add16_rr(REG1,REG1,REG3,DEFAULT)
0xDD8C0718,	//0x0930		VoC_sw32_p(ACC0,REG1,DEFAULT)	|	VoC_lw16i(REG2,0x718)(hi)
0xFF3840BA,	//0x0932		VoC_movreg32(REG01,RL7,IN_PARALLEL)	|	VoC_add16_rr(REG2,REG2,REG7,DEFAULT)
0x0C10F778,	//0x0934		VoC_multf16_rp(REG0,REG0,REG2,DEFAULT)	|	VoC_lw16i_short(FORMAT16,0xfffffffb,DEFAULT)
0xFFC08C51,	//0x0936		VoC_NOP	|	VoC_multf16_rp(REG1,REG1,REG2,IN_PARALLEL)
0x2B80FF07,	//0x0938		VoC_jal(Coolsand_CmplxAppxNorm)(lo)	|	VoC_movreg32(RL7,REG01,DEFAULT)
0xFB840874,	//0x093a		VoC_shr32_ri(ACC0,0xfffffff0,DEFAULT)	|	VoC_jal(Coolsand_CmplxAppxNorm)(hi)
0x070E0A82,	//0x093c		VoC_lw16i(REG2,0x70e)
0xDF0040BA,	//0x093e		VoC_pop32(REG01,IN_PARALLEL)	|	VoC_add16_rr(REG2,REG2,REG7,DEFAULT)
0xF5B85FC9,	//0x0940		VoC_lw16i_short(FORMAT16,0xfffffff7,IN_PARALLEL)	|	VoC_push16(ACC0_HI,DEFAULT)
0x8C510C10,	//0x0942		VoC_multf16_rp(REG1,REG1,REG2,IN_PARALLEL)	|	VoC_multf16_rp(REG0,REG0,REG2,DEFAULT)
0x06EA0A84,	//0x0944		VoC_lw16i(REG4,0x6ea)
0xFFC078FF,	//0x0946		VoC_NAD(IN_PARALLEL)	|	VoC_shr16_ri(REG7,0xffffffff,DEFAULT)
0x08742B80,	//0x0948		VoC_jal(Coolsand_CmplxAppxNorm)
0x08E40A81,	//0x094a		VoC_lw16i(REG1,0x8e4)
0xC0797B84,	//0x094c		VoC_add16_rr(REG1,REG1,REG7,IN_PARALLEL)	|	VoC_shr32_ri(ACC0,0xfffffff0,DEFAULT)
0xF4596120,	//0x094e		VoC_lw16i_short(FORMAT32,0xb,IN_PARALLEL)	|	VoC_movreg16(REG0,ACC0_HI,DEFAULT)
0xC13C4C04,	//0x0950		VoC_add16_rr(REG4,REG4,REG7,IN_PARALLEL)	|	VoC_multf32_rr(ACC0,REG0,REG0,DEFAULT)
0xFF2ED98D,	//0x0952		VoC_movreg32(RL6,ACC1,DEFAULT)	|	VoC_lw32_p(ACC1,REG1,DEFAULT)
0xD9A47F27,	//0x0954		VoC_lw32_p(ACC0,REG4,IN_PARALLEL)	|	VoC_movreg32(RL7,ACC0,DEFAULT)
0xDF475FC4,	//0x0956		VoC_push32(RL7,IN_PARALLEL)	|	VoC_push16(REG4,DEFAULT)
0xF5E27179,	//0x0958		VoC_lw16i_short(FORMATX,0xfffffffc,IN_PARALLEL)	|	VoC_lw16i_short(FORMAT32,0xb,DEFAULT)
0x40321401,	//0x095a		VoC_lw16_d(REG1,0x4032)
0x08862B80,	//0x095c		VoC_jal(Coolsand_FirstOrderIIRSmooth2)
0xDF075F84,	//0x095e		VoC_pop32(RL7,IN_PARALLEL)	|	VoC_pop16(REG4,DEFAULT)
0x5DA4FF35,	//0x0960		VoC_sw32_p(ACC0,REG4,DEFAULT)	|	VoC_movreg32(ACC1,RL6,DEFAULT)
0xFBE5FA25,	//0x0962		VoC_shr32_ri(ACC1,0xfffffffc,DEFAULT)	|	VoC_shr32_ri(ACC1,0x4,IN_PARALLEL)
0x401E5025,	//0x0964		VoC_bgt32_rd(Coolsand_PostFiltering_L3,ACC1,0x401e)
0x401E1485,	//0x0966		VoC_lw32_d(ACC1,0x401e)
		//0x0968		Coolsand_PostFiltering_L3
0x401C1402,	//0x0968		VoC_lw16_d(REG2,0x401c)
0x7BF8FF28,	//0x096a		VoC_shr32_ri(REG01,0xffffffff,DEFAULT)	|	VoC_movreg32(REG01,ACC1,DEFAULT)
0x7908F5C1,	//0x096c		VoC_shru16_ri(REG0,0x1,DEFAULT)	|	VoC_lw16i_short(FORMAT32,0xfffffff8,IN_PARALLEL)
0xCC14F54A,	//0x096e		VoC_multf32_rr(ACC0,REG0,REG2,DEFAULT)	|	VoC_lw16i_short(FORMATX,0xffffffe9,IN_PARALLEL)
0x1406CE4A,	//0x0970		VoC_lw16_d(REG6,0x4016)(lo)	|	VoC_macX_rr(REG1,REG2,DEFAULT)
0xFA444016,	//0x0972		VoC_shr32_ri(ACC0,0x8,DEFAULT)	|	VoC_lw16_d(REG6,0x4016)(hi)
0xE1827F26,	//0x0974		VoC_lw16i_short(REG2,0x18,IN_PARALLEL)	|	VoC_movreg32(RL6,ACC0,DEFAULT)
0x07BE2B80,	//0x0976		VoC_jal(Coolsand_MSBPos)
0xE1817000,	//0x0978		VoC_lw16i_short(REG1,0x18,IN_PARALLEL)	|	VoC_lw16i_short(REG0,0x0,DEFAULT)
0x09903183,	//0x097a		VoC_bez16_r(Coolsand_PostFiltering_L5,REG3)
0xE17442CA,	//0x097c		VoC_lw16i_short(REG4,0x17,IN_PARALLEL)	|	VoC_sub16_rr(REG2,REG3,REG1,DEFAULT)
0x00011602,	//0x097e		VoC_and16_ri(REG2,0x1)
0x098A3182,	//0x0980		VoC_bez16_r(Coolsand_PostFiltering_L4,REG2)
0xE094431A,	//0x0982		VoC_lw16i_short(REG4,0x9,IN_PARALLEL)	|	VoC_sub16_rr(REG2,REG4,REG3,DEFAULT)
0x42A2F80A,	//0x0984		VoC_sub16_rr(REG2,REG2,REG4,DEFAULT)	|	VoC_shr16_ri(REG2,0x1,DEFAULT)
0xFE10E030,	//0x0986		VoC_shr16_rr(REG0,REG2,DEFAULT)	|	VoC_lw16i_short(REG0,0x3,IN_PARALLEL)
0xFFC065C8,	//0x0988		VoC_NAD(IN_PARALLEL)	|	VoC_jump(Coolsand_PostFiltering_L5)
		//0x098a		Coolsand_PostFiltering_L4
0xE0B4425A,	//0x098a		VoC_lw16i_short(REG4,0xb,IN_PARALLEL)	|	VoC_sub16_rr(REG2,REG1,REG3,DEFAULT)
0x42A2F80A,	//0x098c		VoC_sub16_rr(REG2,REG2,REG4,DEFAULT)	|	VoC_shr16_ri(REG2,0x1,DEFAULT)
0xFE10E010,	//0x098e		VoC_shr16_rr(REG0,REG2,DEFAULT)	|	VoC_lw16i_short(REG0,0x1,IN_PARALLEL)
		//0x0990		Coolsand_PostFiltering_L5
0xF4014C34,	//0x0990		VoC_lw16i_short(FORMAT32,0x0,IN_PARALLEL)	|	VoC_multf32_rr(ACC0,REG0,REG6,DEFAULT)
0x04240A82,	//0x0992		VoC_lw16i(REG2,0x424)
0x04340A83,	//0x0994		VoC_lw16i(REG3,0x434)
0x08871407,	//0x0996		VoC_lw16_d(REG7,0x887)
0xC0FB40BA,	//0x0998		VoC_add16_rr(REG3,REG3,REG7,IN_PARALLEL)	|	VoC_add16_rr(REG2,REG2,REG7,DEFAULT)
0xFF3A5F81,	//0x099a		VoC_movreg32(REG45,RL7,IN_PARALLEL)	|	VoC_pop16(REG1,DEFAULT)
0x7805FF45,	//0x099c		VoC_bez32_d(Coolsand_PostFiltering_L8,0x401e)(lo)	|	VoC_lw32z(ACC1,DEFAULT)
0x0A8A401E,	//0x099e		VoC_lw16i(ACC1_LO,0x5b)(lo)	|	VoC_bez32_d(Coolsand_PostFiltering_L8,0x401e)(hi)
0xFFC0005B,	//0x09a0		VoC_NAD	|	VoC_lw16i(ACC1_LO,0x5b)(hi)
		//0x09a2		Coolsand_PostFiltering_L8
0x09A536AC,	//0x09a2		VoC_bngt32_rr(Coolsand_PostFiltering_L6,ACC1,ACC0)
0xFB9CFF2C,	//0x09a4		VoC_shr32_ri(ACC0,0xfffffff3,DEFAULT)	|	VoC_movreg32(ACC0,ACC1,DEFAULT)
		//0x09a5		Coolsand_PostFiltering_L6
0xE0266120,	//0x09a6		VoC_lw16i_short(REG6,0x2,IN_PARALLEL)	|	VoC_movreg16(REG0,ACC0_HI,DEFAULT)
0xF60C78F8,	//0x09a8		VoC_movreg16(RL6_LO,REG0,IN_PARALLEL)	|	VoC_shr16_ri(REG0,0xffffffff,DEFAULT)
0x08E24426,	//0x09aa		VoC_bne16_rd(Coolsand_PostFiltering_L9,REG6,0x8e2)
0x08873906,	//0x09ac		VoC_bgt16_rd(Coolsand_PostFiltering_L7,REG6,0x887)
		//0x09ae		Coolsand_PostFiltering_L9
0x09BC3481,	//0x09ae		VoC_bngt16_rr(Coolsand_PostFiltering_L7,REG0,REG1)
0x09C22B80,	//0x09b0		VoC_jal(Coolsand_Generate)
0xF7847026,	//0x09b2		VoC_movreg16(REG4,RL6_LO,IN_PARALLEL)	|	VoC_lw16i_short(REG6,0x1,DEFAULT)
0xF8F978F8,	//0x09b4		VoC_shr16_ri(REG1,0xffffffff,IN_PARALLEL)	|	VoC_shr16_ri(REG0,0xffffffff,DEFAULT)
0xC2714230,	//0x09b6		VoC_sub16_rr(REG1,REG1,REG6,IN_PARALLEL)	|	VoC_sub16_rr(REG0,REG0,REG6,DEFAULT)
0xC50D4504,	//0x09b8		VoC_mult16_rr(REG5,REG4,REG1,IN_PARALLEL)	|	VoC_mult16_rr(REG4,REG4,REG0,DEFAULT)
0xE5C3FFC0,	//0x09ba		VoC_jump(Coolsand_PostFiltering_End)	|	VoC_NOP
		//0x09bc		Coolsand_PostFiltering_L7
0x09C22B80,	//0x09bc		VoC_jal(Coolsand_Generate)
		//0x09be		Coolsand_PostFiltering_End
0xDC24DFA9,	//0x09be		VoC_sw16_p(REG4,REG2,DEFAULT)	|	VoC_pop16(RA,DEFAULT)
0xE580DC35,	//0x09c0		VoC_return	|	VoC_sw16_p(REG5,REG3,DEFAULT)
		//0x09c2		Coolsand_Generate
0x07221804,	//0x09c2		VoC_lw16i_set_inc(REG0,0x722,0x1)
0x07261805,	//0x09c4		VoC_lw16i_set_inc(REG1,0x726,0x1)
0xE0076884,	//0x09c6		VoC_lw16i_short(REG7,0x0,IN_PARALLEL)	|	VoC_loop_i_short(0x4,DEFAULT)
0xFFC08246,	//0x09c8		VoC_NOP	|	VoC_add16inc_rp(REG6,REG1,REG0,DEFAULT)
		//0x09ca		VoC_endloop0
0x140A81F7,	//0x09ca		VoC_lw16_d(ACC1_LO,0x745)(lo)	|	VoC_add16_rp(REG7,REG7,REG6,DEFAULT)
0x140B0745,	//0x09cc		VoC_lw16_d(ACC1_HI,0x740)(lo)	|	VoC_lw16_d(ACC1_LO,0x745)(hi)
0x1FBC0740,	//0x09ce		VoC_lw16i_set_inc(REG0,0x745,0xffffffff)(lo)	|	VoC_lw16_d(ACC1_HI,0x740)(hi)
0x1FBD0745,	//0x09d0		VoC_lw16i_set_inc(REG1,0x744,0xffffffff)(lo)	|	VoC_lw16i_set_inc(REG0,0x745,0xffffffff)(hi)
0x60E60744,	//0x09d2		VoC_movreg16(REG6,REG7,DEFAULT)	|	VoC_lw16i_set_inc(REG1,0x744,0xffffffff)(hi)
0x1606F87F,	//0x09d4		VoC_and16_ri(REG6,0x1)(lo)	|	VoC_shr16_ri(REG7,0xf,IN_PARALLEL)
0x64BE0001,	//0x09d6		VoC_xor16_rr(REG6,REG7,DEFAULT)	|	VoC_and16_ri(REG6,0x1)(hi)
0x6BE3D898,	//0x09d8		VoC_loop_i_short(0x1f,DEFAULT)	|	VoC_lw16inc_p(ACC0_LO,REG1,IN_PARALLEL)
0xD898C3BE,	//0x09da		VoC_lw16inc_p(ACC0_LO,REG1,DEFAULT)	|	VoC_sub16_rr(REG6,REG6,REG7,IN_PARALLEL)
		//0x09dc		VoC_endloop0
0x5C86DC88,	//0x09dc		VoC_sw16inc_p(REG6,REG0,DEFAULT)	|	VoC_sw16inc_p(ACC0_LO,REG0,DEFAULT)
0xE580FF28,	//0x09de		VoC_return	|	VoC_movreg32(REG01,ACC1,IN_PARALLEL)
		//0x09e0		Coolsand_SumInstantPower
0xD8A0DFE9,	//0x09e0		VoC_lw16inc_p(REG0,REG2,DEFAULT)	|	VoC_push16(RA,DEFAULT)
0x2B80D8B1,	//0x09e2		VoC_jal(Coolsand_InstantPower)(lo)	|	VoC_lw16inc_p(REG1,REG3,DEFAULT)
0xDFA909E8,	//0x09e4		VoC_pop16(RA,DEFAULT)	|	VoC_jal(Coolsand_InstantPower)(hi)
0xE580FFC0,	//0x09e6		VoC_return	|	VoC_NOP
		//0x09e8		Coolsand_InstantPower
0xDF41DFE9,	//0x09e8		VoC_push32(REG23,DEFAULT)	|	VoC_push16(RA,DEFAULT)
0x08742B80,	//0x09ea		VoC_jal(Coolsand_CmplxAppxNorm)
0xFB845FA9,	//0x09ec		VoC_shr32_ri(ACC0,0xfffffff0,IN_PARALLEL)	|	VoC_pop16(RA,DEFAULT)
0xF4396124,	//0x09ee		VoC_lw16i_short(FORMAT32,0x7,IN_PARALLEL)	|	VoC_movreg16(REG4,ACC0_HI,DEFAULT)
0xDF014D24,	//0x09f0		VoC_pop32(REG23,IN_PARALLEL)	|	VoC_multf32_rr(ACC0,REG4,REG4,DEFAULT)
0xFFC06580,	//0x09f2		VoC_NAD(IN_PARALLEL)	|	VoC_return
		//0x09f4		Coolsand_ControlLogicMergeChnlEnhancedDTD
0xDF445FE9,	//0x09f4		VoC_push32(ACC0,IN_PARALLEL)	|	VoC_push16(RA,DEFAULT)
0x0A5E2B80,	//0x09f6		VoC_jal(Coolsand_ControlLogicCalVarSub)
0x1407DF07,	//0x09f8		VoC_lw16_d(REG7,0x402e)(lo)	|	VoC_pop32(RL7,DEFAULT)
0x0A86402E,	//0x09fa		VoC_lw16i(REG6,0xa56)(lo)	|	VoC_lw16_d(REG7,0x402e)(hi)
0xFFC00A56,	//0x09fc		VoC_NAD	|	VoC_lw16i(REG6,0xa56)(hi)
0x0B002B80,	//0x09fe		VoC_jal(Coolsand_SmoothPeakPower)
0x0AA22B80,	//0x0a00		VoC_jal(Coolsand_ControlLogicChnlDecisionEnhanced)
0xFFC0DFA9,	//0x0a02		VoC_NOP	|	VoC_pop16(RA,DEFAULT)
0xFFC06580,	//0x0a04		VoC_NAD(IN_PARALLEL)	|	VoC_return
		//0x0a06		Coolsand_ControlLogicSingleChnlEnhanced
0xE0205FE9,	//0x0a06		VoC_lw16i_short(REG0,0x2,IN_PARALLEL)	|	VoC_push16(RA,DEFAULT)
0x08E327BE,	//0x0a08		VoC_lw16d_set_inc(REG2,0x8e3,0xffffffff)
0x08E04520,	//0x0a0a		VoC_bne16_rd(Coolsand_ControlLogicSingleChnl_L1,REG0,0x8e0)
0x0A551404,	//0x0a0c		VoC_lw16_d(REG4,0xa55)
0x40371405,	//0x0a0e		VoC_lw16_d(REG5,0x4037)
0x0A18342C,	//0x0a10		VoC_bgt16_rr(Coolsand_ControlLogicSingleChnl_L0,REG5,REG4)
0xF6A47041,	//0x0a12		VoC_movreg16(REG4,REG5,IN_PARALLEL)	|	VoC_lw16i_short(REG1,0x2,DEFAULT)
0x40361402,	//0x0a14		VoC_lw16_d(REG2,0x4036)
0x0A562B00,	//0x0a16		VoC_jump_lg(Coolsand_ControlLogicSingleChnl_End)
		//0x0a18		Coolsand_ControlLogicSingleChnl_L0
0xE0017026,	//0x0a18		VoC_lw16i_short(REG1,0x0,IN_PARALLEL)	|	VoC_lw16i_short(REG6,0x1,DEFAULT)
0xC1347002,	//0x0a1a		VoC_add16_rr(REG4,REG4,REG6,IN_PARALLEL)	|	VoC_lw16i_short(REG2,0x0,DEFAULT)
0x0A562B00,	//0x0a1c		VoC_jump_lg(Coolsand_ControlLogicSingleChnl_End)
		//0x0a1e		Coolsand_ControlLogicSingleChnl_L1
0x4518F020,	//0x0a1e		VoC_bne16_rd(Coolsand_ControlLogicSingleChnl_L4,REG0,0x8e0)(lo)	|	VoC_lw16i_short(REG0,0x1,DEFAULT)
0x140408E0,	//0x0a20		VoC_lw16_d(REG4,0xa55)(lo)	|	VoC_bne16_rd(Coolsand_ControlLogicSingleChnl_L4,REG0,0x8e0)(hi)
0x14050A55,	//0x0a22		VoC_lw16_d(REG5,0x4037)(lo)	|	VoC_lw16_d(REG4,0xa55)(hi)
0x34AC4037,	//0x0a24		VoC_bngt16_rr(Coolsand_ControlLogicSingleChnl_L2,REG5,REG4)(lo)	|	VoC_lw16_d(REG5,0x4037)(hi)
0xF0040A28,	//0x0a26		VoC_lw16i_short(REG4,0x0,DEFAULT)	|	VoC_bngt16_rr(Coolsand_ControlLogicSingleChnl_L2,REG5,REG4)(hi)
		//0x0a28		Coolsand_ControlLogicSingleChnl_L2
0x08E36E06,	//0x0a28		VoC_bnez16_d(Coolsand_ControlLogicSingleChnl_L3,0x8e3)
0xE0047021,	//0x0a2a		VoC_lw16i_short(REG4,0x0,IN_PARALLEL)	|	VoC_lw16i_short(REG1,0x1,DEFAULT)
0x0A562B00,	//0x0a2c		VoC_jump_lg(Coolsand_ControlLogicSingleChnl_End)
		//0x0a2e		Coolsand_ControlLogicSingleChnl_L3
0xDE107041,	//0x0a2e		VoC_inc_p(REG2,IN_PARALLEL)	|	VoC_lw16i_short(REG1,0x2,DEFAULT)
0x0A562B00,	//0x0a30		VoC_jump_lg(Coolsand_ControlLogicSingleChnl_End)
		//0x0a32		Coolsand_ControlLogicSingleChnl_L4
0x4518F060,	//0x0a32		VoC_bne16_rd(Coolsand_ControlLogicSingleChnl_L7,REG0,0x8e0)(lo)	|	VoC_lw16i_short(REG0,0x3,DEFAULT)
0x140408E0,	//0x0a34		VoC_lw16_d(REG4,0xa55)(lo)	|	VoC_bne16_rd(Coolsand_ControlLogicSingleChnl_L7,REG0,0x8e0)(hi)
0x14050A55,	//0x0a36		VoC_lw16_d(REG5,0x4037)(lo)	|	VoC_lw16_d(REG4,0xa55)(hi)
0x34AC4037,	//0x0a38		VoC_bngt16_rr(Coolsand_ControlLogicSingleChnl_L5,REG5,REG4)(lo)	|	VoC_lw16_d(REG5,0x4037)(hi)
0xF0040A3C,	//0x0a3a		VoC_lw16i_short(REG4,0x0,DEFAULT)	|	VoC_bngt16_rr(Coolsand_ControlLogicSingleChnl_L5,REG5,REG4)(hi)
		//0x0a3c		Coolsand_ControlLogicSingleChnl_L5
0x08E36E06,	//0x0a3c		VoC_bnez16_d(Coolsand_ControlLogicSingleChnl_L6,0x8e3)
0xE0047061,	//0x0a3e		VoC_lw16i_short(REG4,0x0,IN_PARALLEL)	|	VoC_lw16i_short(REG1,0x3,DEFAULT)
0xFFC065D6,	//0x0a40		VoC_NAD(IN_PARALLEL)	|	VoC_jump(Coolsand_ControlLogicSingleChnl_End)
		//0x0a42		Coolsand_ControlLogicSingleChnl_L6
0xDE107041,	//0x0a42		VoC_inc_p(REG2,IN_PARALLEL)	|	VoC_lw16i_short(REG1,0x2,DEFAULT)
0xFFC065D2,	//0x0a44		VoC_NAD(IN_PARALLEL)	|	VoC_jump(Coolsand_ControlLogicSingleChnl_End)
		//0x0a46		Coolsand_ControlLogicSingleChnl_L7
0x0A551404,	//0x0a46		VoC_lw16_d(REG4,0xa55)
0x40371405,	//0x0a48		VoC_lw16_d(REG5,0x4037)
0x0A4E34AC,	//0x0a4a		VoC_bngt16_rr(Coolsand_ControlLogicSingleChnl_L8,REG5,REG4)
0xFFC07004,	//0x0a4c		VoC_NAD(IN_PARALLEL)	|	VoC_lw16i_short(REG4,0x0,DEFAULT)
		//0x0a4e		Coolsand_ControlLogicSingleChnl_L8
0x08E36E06,	//0x0a4e		VoC_bnez16_d(Coolsand_ControlLogicSingleChnl_L9,0x8e3)
0xE0047001,	//0x0a50		VoC_lw16i_short(REG4,0x0,IN_PARALLEL)	|	VoC_lw16i_short(REG1,0x0,DEFAULT)
0xFFC065C4,	//0x0a52		VoC_NAD(IN_PARALLEL)	|	VoC_jump(Coolsand_ControlLogicSingleChnl_End)
		//0x0a54		Coolsand_ControlLogicSingleChnl_L9
0xDE107041,	//0x0a54		VoC_inc_p(REG2,IN_PARALLEL)	|	VoC_lw16i_short(REG1,0x2,DEFAULT)
		//0x0a56		Coolsand_ControlLogicSingleChnl_End
0x1501DFA9,	//0x0a56		VoC_sw16_d(REG1,0x8e2)(lo)	|	VoC_pop16(RA,DEFAULT)
0x150208E2,	//0x0a58		VoC_sw16_d(REG2,0x8e3)(lo)	|	VoC_sw16_d(REG1,0x8e2)(hi)
0x150408E3,	//0x0a5a		VoC_sw16_d(REG4,0xa55)(lo)	|	VoC_sw16_d(REG2,0x8e3)(hi)
0xE5800A55,	//0x0a5c		VoC_return	|	VoC_sw16_d(REG4,0xa55)(hi)
		//0x0a5e		Coolsand_ControlLogicCalVarSub
0xDF465FE9,	//0x0a5e		VoC_push32(RL6,IN_PARALLEL)	|	VoC_push16(RA,DEFAULT)
0x402E1407,	//0x0a60		VoC_lw16_d(REG7,0x402e)
0x08D00A86,	//0x0a62		VoC_lw16i(REG6,0x8d0)
0x0B002B80,	//0x0a64		VoC_jal(Coolsand_SmoothPeakPower)
0x08D41484,	//0x0a66		VoC_lw32_d(ACC0,0x8d4)
0x08D01485,	//0x0a68		VoC_lw32_d(ACC1,0x8d0)
0x0B162B80,	//0x0a6a		VoC_jal(Coolsand_InstantSNR)
0xE0B27187,	//0x0a6c		VoC_lw16i_short(REG2,0xb,IN_PARALLEL)	|	VoC_lw16i_short(REG7,0xc,DEFAULT)
0x08D00A80,	//0x0a6e		VoC_lw16i(REG0,0x8d0)
0x08D40A81,	//0x0a70		VoC_lw16i(REG1,0x8d4)
0x0ABC1507,	//0x0a72		VoC_sw16_d(REG7,0xabc)
0x0ABD1502,	//0x0a74		VoC_sw16_d(REG2,0xabd)
0x07211406,	//0x0a76		VoC_lw16_d(REG6,0x721)
0x08DA0A87,	//0x0a78		VoC_lw16i(REG7,0x8da)
0x402F1402,	//0x0a7a		VoC_lw16_d(REG2,0x402f)
0x0B282B80,	//0x0a7c		VoC_jal(Coolsand_OverallNoiseEst)
0x1407DF07,	//0x0a7e		VoC_lw16_d(REG7,0x402e)(lo)	|	VoC_pop32(RL7,DEFAULT)
0x0A86402E,	//0x0a80		VoC_lw16i(REG6,0x8c8)(lo)	|	VoC_lw16_d(REG7,0x402e)(hi)
0xFFC008C8,	//0x0a82		VoC_NAD	|	VoC_lw16i(REG6,0x8c8)(hi)
0x0B002B80,	//0x0a84		VoC_jal(Coolsand_SmoothPeakPower)
0x08CC1484,	//0x0a86		VoC_lw32_d(ACC0,0x8cc)
0x08C81485,	//0x0a88		VoC_lw32_d(ACC1,0x8c8)
0x0B162B80,	//0x0a8a		VoC_jal(Coolsand_InstantSNR)
0xE0B27187,	//0x0a8c		VoC_lw16i_short(REG2,0xb,IN_PARALLEL)	|	VoC_lw16i_short(REG7,0xc,DEFAULT)
0x08C80A80,	//0x0a8e		VoC_lw16i(REG0,0x8c8)
0x08CC0A81,	//0x0a90		VoC_lw16i(REG1,0x8cc)
0x0ABC1507,	//0x0a92		VoC_sw16_d(REG7,0xabc)
0x0ABD1502,	//0x0a94		VoC_sw16_d(REG2,0xabd)
0x07211406,	//0x0a96		VoC_lw16_d(REG6,0x721)
0x08D80A87,	//0x0a98		VoC_lw16i(REG7,0x8d8)
0x402F1402,	//0x0a9a		VoC_lw16_d(REG2,0x402f)
0x0B282B80,	//0x0a9c		VoC_jal(Coolsand_OverallNoiseEst)
0xFFC0DFA9,	//0x0a9e		VoC_NOP	|	VoC_pop16(RA,DEFAULT)
0xFFC06580,	//0x0aa0		VoC_NAD(IN_PARALLEL)	|	VoC_return
		//0x0aa2		Coolsand_ControlLogicChnlDecisionEnhanced
0x08CC1483,	//0x0aa2		VoC_lw32_d(REG67,0x8cc)
0xFBFB5FE9,	//0x0aa4		VoC_shr32_ri(REG67,0xffffffff,IN_PARALLEL)	|	VoC_push16(RA,DEFAULT)
0x40301405,	//0x0aa6		VoC_lw16_d(REG5,0x4030)
0xF401790E,	//0x0aa8		VoC_lw16i_short(FORMAT32,0x0,IN_PARALLEL)	|	VoC_shru16_ri(REG6,0x1,DEFAULT)
0xF58A4DAC,	//0x0aaa		VoC_lw16i_short(FORMATX,0xfffffff1,IN_PARALLEL)	|	VoC_multf32_rr(ACC0,REG6,REG5,DEFAULT)
0x1485CE7D,	//0x0aac		VoC_lw32_d(ACC1,0x8c8)(lo)	|	VoC_macX_rr(REG7,REG5,DEFAULT)
0x7BE508C8,	//0x0aae		VoC_shr32_ri(ACC1,0xfffffffc,DEFAULT)	|	VoC_lw32_d(ACC1,0x8c8)(hi)
0x36ACE004,	//0x0ab0		VoC_bngt32_rr(Coolsand_ControlLogicChnlDecisionEnhanced_L0,ACC1,ACC0)(lo)	|	VoC_lw16i_short(REG4,0x0,IN_PARALLEL)
0xF0240AB4,	//0x0ab2		VoC_lw16i_short(REG4,0x1,DEFAULT)	|	VoC_bngt32_rr(Coolsand_ControlLogicChnlDecisionEnhanced_L0,ACC1,ACC0)(hi)
		//0x0ab4		Coolsand_ControlLogicChnlDecisionEnhanced_L0
0x08D41483,	//0x0ab4		VoC_lw32_d(REG67,0x8d4)
0x08DC1504,	//0x0ab6		VoC_sw16_d(REG4,0x8dc)
0x790EFBFB,	//0x0ab8		VoC_shru16_ri(REG6,0x1,DEFAULT)	|	VoC_shr32_ri(REG67,0xffffffff,DEFAULT)
0x4DACF401,	//0x0aba		VoC_multf32_rr(ACC0,REG6,REG5,DEFAULT)	|	VoC_lw16i_short(FORMAT32,0x0,IN_PARALLEL)
0x4E7DF58A,	//0x0abc		VoC_macX_rr(REG7,REG5,DEFAULT)	|	VoC_lw16i_short(FORMATX,0xfffffff1,IN_PARALLEL)
0x1485EFF0,	//0x0abe		VoC_lw32_d(ACC1,0x8d0)(lo)	|	VoC_lw16i_short(REG0,0xffffffff,IN_PARALLEL)
0x148608D0,	//0x0ac0		VoC_lw32_d(RL6,0x8cc)(lo)	|	VoC_lw32_d(ACC1,0x8d0)(hi)
0x7BE508CC,	//0x0ac2		VoC_shr32_ri(ACC1,0xfffffffc,DEFAULT)	|	VoC_lw32_d(RL6,0x8cc)(hi)
0x1483E004,	//0x0ac4		VoC_lw32_d(REG67,0x8cc)(lo)	|	VoC_lw16i_short(REG4,0x0,IN_PARALLEL)
0x36AC08CC,	//0x0ac6		VoC_bngt32_rr(Coolsand_ControlLogicChnlDecisionEnhanced_L1,ACC1,ACC0)(lo)	|	VoC_lw32_d(REG67,0x8cc)(hi)
0x642B0ACE,	//0x0ac8		VoC_bnlt32_rd(Coolsand_ControlLogicChnlDecisionEnhanced_L1,REG67,0x8d0)(lo)	|	VoC_bngt32_rr(Coolsand_ControlLogicChnlDecisionEnhanced_L1,ACC1,ACC0)(hi)
0xF02408D0,	//0x0aca		VoC_lw16i_short(REG4,0x1,DEFAULT)	|	VoC_bnlt32_rd(Coolsand_ControlLogicChnlDecisionEnhanced_L1,REG67,0x8d0)(hi)
0xFFC07FC0,	//0x0acc		VoC_NAD(IN_PARALLEL)	|	VoC_NOP
		//0x0ace		Coolsand_ControlLogicChnlDecisionEnhanced_L1
0x08DE1504,	//0x0ace		VoC_sw16_d(REG4,0x8de)
0x08DE6E16,	//0x0ad0		VoC_bnez16_d(Coolsand_ControlLogicChnlDecisionEnhanced_L2,0x8de)
0x08DC6C14,	//0x0ad2		VoC_bez16_d(Coolsand_ControlLogicChnlDecisionEnhanced_L2,0x8dc)
0x0A561483,	//0x0ad4		VoC_lw32_d(REG67,0xa56)
0x40341405,	//0x0ad6		VoC_lw16_d(REG5,0x4034)
0xF4017BFB,	//0x0ad8		VoC_lw16i_short(FORMAT32,0x0,IN_PARALLEL)	|	VoC_shr32_ri(REG67,0xffffffff,DEFAULT)
0xF58A790E,	//0x0ada		VoC_lw16i_short(FORMATX,0xfffffff1,IN_PARALLEL)	|	VoC_shru16_ri(REG6,0x1,DEFAULT)
0xCE7DCDAC,	//0x0adc		VoC_macX_rr(REG7,REG5,DEFAULT)	|	VoC_multf32_rr(ACC0,REG6,REG5,DEFAULT)
0x08D01485,	//0x0ade		VoC_lw32_d(ACC1,0x8d0)
0x36A5FBE5,	//0x0ae0		VoC_bngt32_rr(Coolsand_ControlLogicChnlDecisionEnhanced_L2,ACC0,ACC1)(lo)	|	VoC_shr32_ri(ACC1,0xfffffffc,DEFAULT)
0xF0200AE6,	//0x0ae2		VoC_lw16i_short(REG0,0x1,DEFAULT)	|	VoC_bngt32_rr(Coolsand_ControlLogicChnlDecisionEnhanced_L2,ACC0,ACC1)(hi)
0xFFC065D8,	//0x0ae4		VoC_NAD(IN_PARALLEL)	|	VoC_jump(Coolsand_ControlLogicChnlDecisionEnhanced_End)
		//0x0ae6		Coolsand_ControlLogicChnlDecisionEnhanced_L2
0x08C87A06,	//0x0ae6		VoC_bnez32_d(Coolsand_ControlLogicChnlDecisionEnhanced_L3,0x8c8)
0x08D07A04,	//0x0ae8		VoC_bnez32_d(Coolsand_ControlLogicChnlDecisionEnhanced_L3,0x8d0)
0xE5D1F060,	//0x0aea		VoC_jump(Coolsand_ControlLogicChnlDecisionEnhanced_End)	|	VoC_lw16i_short(REG0,0x3,DEFAULT)
		//0x0aec		Coolsand_ControlLogicChnlDecisionEnhanced_L3
0x08DE6E0C,	//0x0aec		VoC_bnez16_d(Coolsand_ControlLogicChnlDecisionEnhanced_L4,0x8de)
0x08DC6E0A,	//0x0aee		VoC_bnez16_d(Coolsand_ControlLogicChnlDecisionEnhanced_L4,0x8dc)
0x08C81484,	//0x0af0		VoC_lw32_d(ACC0,0x8c8)
0x08D01485,	//0x0af2		VoC_lw32_d(ACC1,0x8d0)
0x0AF836A5,	//0x0af4		VoC_bngt32_rr(Coolsand_ControlLogicChnlDecisionEnhanced_L4,ACC0,ACC1)
0xE5C5F060,	//0x0af6		VoC_jump(Coolsand_ControlLogicChnlDecisionEnhanced_End)	|	VoC_lw16i_short(REG0,0x3,DEFAULT)
		//0x0af8		Coolsand_ControlLogicChnlDecisionEnhanced_L4
0x6E03F040,	//0x0af8		VoC_bnez16_d(Coolsand_ControlLogicChnlDecisionEnhanced_End,0xac4)(lo)	|	VoC_lw16i_short(REG0,0x2,DEFAULT)
0xF0000AC4,	//0x0afa		VoC_lw16i_short(REG0,0x0,DEFAULT)	|	VoC_bnez16_d(Coolsand_ControlLogicChnlDecisionEnhanced_End,0xac4)(hi)
		//0x0afc		Coolsand_ControlLogicChnlDecisionEnhanced_End
0x1500DFA9,	//0x0afc		VoC_sw16_d(REG0,0x8e0)(lo)	|	VoC_pop16(RA,DEFAULT)
0xE58008E0,	//0x0afe		VoC_return	|	VoC_sw16_d(REG0,0x8e0)(hi)
		//0x0b00		Coolsand_SmoothPeakPower
0xE0085FE9,	//0x0b00		VoC_lw16i_short(ACC0_LO,0x0,IN_PARALLEL)	|	VoC_push16(RA,DEFAULT)
0xE40959B5,	//0x0b02		VoC_lw16i_short(ACC0_HI,0x40,IN_PARALLEL)	|	VoC_lw32_p(ACC1,REG6,DEFAULT)
0x0B0A36BD,	//0x0b04		VoC_bngt32_rr(Coolsand_SmoothPeakPower_L0,RL7,ACC1)
0x0B0A36A7,	//0x0b06		VoC_bngt32_rr(Coolsand_SmoothPeakPower_L0,ACC0,RL7)
0xE5C7FF3C,	//0x0b08		VoC_jump(Coolsand_SmoothPeakPower_L1)	|	VoC_movreg32(ACC0,RL7,DEFAULT)
		//0x0b0a		Coolsand_SmoothPeakPower_L0
0xFF2C60E1,	//0x0b0a		VoC_movreg32(ACC0,ACC1,IN_PARALLEL)	|	VoC_movreg16(REG1,REG7,DEFAULT)
0xF5E27179,	//0x0b0c		VoC_lw16i_short(FORMATX,0xfffffffc,IN_PARALLEL)	|	VoC_lw16i_short(FORMAT32,0xb,DEFAULT)
0x08862B80,	//0x0b0e		VoC_jal(Coolsand_FirstOrderIIRSmooth2)
		//0x0b10		Coolsand_SmoothPeakPower_L1
0x0B1333C4,	//0x0b10		VoC_bnltz32_r(Coolsand_SmoothPeakPower_L2,ACC0)
0xDFA9FF44,	//0x0b12		VoC_pop16(RA,DEFAULT)	|	VoC_lw32z(ACC0,DEFAULT)
		//0x0b13		Coolsand_SmoothPeakPower_L2
0xE580DDB4,	//0x0b14		VoC_return	|	VoC_sw32_p(ACC0,REG6,DEFAULT)
		//0x0b16		Coolsand_InstantSNR
0xFA245FE9,	//0x0b16		VoC_shr32_ri(ACC0,0x4,IN_PARALLEL)	|	VoC_push16(RA,DEFAULT)
0x0B1C3344,	//0x0b18		VoC_bnez32_r(Coolsand_InstantSNR_L0,ACC0)
0xE0097028,	//0x0b1a		VoC_lw16i_short(ACC0_HI,0x0,IN_PARALLEL)	|	VoC_lw16i_short(ACC0_LO,0x1,DEFAULT)
		//0x0b1c		Coolsand_InstantSNR_L0
0xE1427F26,	//0x0b1c		VoC_lw16i_short(REG2,0x14,IN_PARALLEL)	|	VoC_movreg32(RL6,ACC0,DEFAULT)
0x07BE2B80,	//0x0b1e		VoC_jal(Coolsand_MSBPos)
0xC2FBF7E7,	//0x0b20		VoC_sub16_rr(REG3,REG3,REG7,DEFAULT)	|	VoC_lw16i_short(REG7,0xffffffff,DEFAULT)
0xFB45FE9D,	//0x0b22		VoC_shr32_ri(ACC1,0xffffffe8,DEFAULT)	|	VoC_shr32_rr(ACC1,REG3,DEFAULT)
0xDFA97AC5,	//0x0b24		VoC_pop16(RA,IN_PARALLEL)	|	VoC_shr32_ri(ACC1,0x18,DEFAULT)
0xE580E143,	//0x0b26		VoC_return	|	VoC_movreg16(REG3,ACC1_LO,DEFAULT)
		//0x0b28		Coolsand_OverallNoiseEst
0xE105598C,	//0x0b28		VoC_lw16i_short(REG5,0x10,IN_PARALLEL)	|	VoC_lw32_p(ACC0,REG1,DEFAULT)
0xE1045FE9,	//0x0b2a		VoC_lw16i_short(REG4,0x10,IN_PARALLEL)	|	VoC_push16(RA,DEFAULT)
0xDF445FC3,	//0x0b2c		VoC_push32(ACC0,IN_PARALLEL)	|	VoC_push16(REG3,DEFAULT)
0xDF405FC7,	//0x0b2e		VoC_push32(REG01,IN_PARALLEL)	|	VoC_push16(REG7,DEFAULT)
0x088D2B80,	//0x0b30		VoC_jal(Coolsand_NoisePSDEst)
0xDF005F87,	//0x0b32		VoC_pop32(REG01,IN_PARALLEL)	|	VoC_pop16(REG7,DEFAULT)
0xDF045F83,	//0x0b34		VoC_pop32(ACC0,IN_PARALLEL)	|	VoC_pop16(REG3,DEFAULT)
0x3305D985,	//0x0b36		VoC_bez32_r(Coolsand_OverallNoiseEst_L2,ACC1)(lo)	|	VoC_lw32_p(ACC1,REG0,DEFAULT)
0x70250B4B,	//0x0b38		VoC_lw16i_short(REG5,0x1,DEFAULT)	|	VoC_bez32_r(Coolsand_OverallNoiseEst_L2,ACC1)(hi)
0x7006D98D,	//0x0b3a		VoC_lw16i_short(REG6,0x0,DEFAULT)	|	VoC_lw32_p(ACC1,REG1,IN_PARALLEL)
0x37ACE204,	//0x0b3c		VoC_bne32_rr(Coolsand_OverallNoiseEst_L0,ACC1,ACC0)(lo)	|	VoC_lw16i_short(REG4,0x20,IN_PARALLEL)
0x349C0B42,	//0x0b3e		VoC_bngt16_rr(Coolsand_OverallNoiseEst_L0,REG3,REG4)(lo)	|	VoC_bne32_rr(Coolsand_OverallNoiseEst_L0,ACC1,ACC0)(hi)
0x817E0B42,	//0x0b40		VoC_add16_rp(REG6,REG5,REG7,DEFAULT)	|	VoC_bngt16_rr(Coolsand_OverallNoiseEst_L0,REG3,REG4)(hi)
		//0x0b42		Coolsand_OverallNoiseEst_L0
0x0FA00A84,	//0x0b42		VoC_lw16i(REG4,0xfa0)
0xFBFDD98D,	//0x0b44		VoC_shr32_ri(ACC1,0xffffffff,DEFAULT)	|	VoC_lw32_p(ACC1,REG1,DEFAULT)
0x0B4A34B4,	//0x0b46		VoC_bngt16_rr(Coolsand_OverallNoiseEst_L1,REG6,REG4)
0xDD8DF006,	//0x0b48		VoC_sw32_p(ACC1,REG1,DEFAULT)	|	VoC_lw16i_short(REG6,0x0,DEFAULT)
		//0x0b4a		Coolsand_OverallNoiseEst_L1
0xDFA9DC76,	//0x0b4a		VoC_pop16(RA,DEFAULT)	|	VoC_sw16_p(REG6,REG7,DEFAULT)
		//0x0b4b		Coolsand_OverallNoiseEst_L2
0xE580FFC0,	//0x0b4c		VoC_return	|	VoC_NOP
		//0x0b4e		Coolsand_OverallNoiseEstwState
0x08871407,	//0x0b4e		VoC_lw16_d(REG7,0x887)
0xDFE978FF,	//0x0b50		VoC_push16(RA,IN_PARALLEL)	|	VoC_shr16_ri(REG7,0xffffffff,DEFAULT)
0x06B20A80,	//0x0b52		VoC_lw16i(REG0,0x6b2)
0x06C40A81,	//0x0b54		VoC_lw16i(REG1,0x6c4)
0xC0794038,	//0x0b56		VoC_add16_rr(REG1,REG1,REG7,IN_PARALLEL)	|	VoC_add16_rr(REG0,REG0,REG7,DEFAULT)
0xDFC77064,	//0x0b58		VoC_push16(REG7,IN_PARALLEL)	|	VoC_lw16i_short(REG4,0x3,DEFAULT)
0x5F40D98C,	//0x0b5a		VoC_push32(REG01,DEFAULT)	|	VoC_lw32_p(ACC0,REG1,DEFAULT)
0xDF44DFC3,	//0x0b5c		VoC_push32(ACC0,DEFAULT)	|	VoC_push16(REG3,IN_PARALLEL)
0x403B6C04,	//0x0b5e		VoC_bez16_d(Coolsand_OverallNoiseEstwState_L0_subL0,0x403b)
0x08E24504,	//0x0b60		VoC_bne16_rd(Coolsand_OverallNoiseEstwState_L0,REG4,0x8e2)
		//0x0b62		Coolsand_OverallNoiseEstwState_L0_subL0
0xE0B27186,	//0x0b62		VoC_lw16i_short(REG2,0xb,IN_PARALLEL)	|	VoC_lw16i_short(REG6,0xc,DEFAULT)
0xE1057024,	//0x0b64		VoC_lw16i_short(REG5,0x10,IN_PARALLEL)	|	VoC_lw16i_short(REG4,0x1,DEFAULT)
0x0ABC1506,	//0x0b66		VoC_sw16_d(REG6,0xabc)
0x0ABD1502,	//0x0b68		VoC_sw16_d(REG2,0xabd)
0x07211406,	//0x0b6a		VoC_lw16_d(REG6,0x721)
0x40121402,	//0x0b6c		VoC_lw16_d(REG2,0x4012)
0x088D2B80,	//0x0b6e		VoC_jal(Coolsand_NoisePSDEst)
		//0x0b70		Coolsand_OverallNoiseEstwState_L0
0xDF045F83,	//0x0b70		VoC_pop32(ACC0,IN_PARALLEL)	|	VoC_pop16(REG3,DEFAULT)
0xDF84DF00,	//0x0b72		VoC_pop16(REG4,DEFAULT)	|	VoC_pop32(REG01,DEFAULT)
0x08E40A80,	//0x0b74		VoC_lw16i(REG0,0x8e4)
0xD9854020,	//0x0b76		VoC_lw32_p(ACC1,REG0,IN_PARALLEL)	|	VoC_add16_rr(REG0,REG0,REG4,DEFAULT)
0x0A87F80C,	//0x0b78		VoC_lw16i(REG7,0x6d6)(lo)	|	VoC_shr16_ri(REG4,0x1,DEFAULT)
0xC1E706D6,	//0x0b7a		VoC_add16_rr(REG7,REG7,REG4,DEFAULT)	|	VoC_lw16i(REG7,0x6d6)(hi)
0x0B923305,	//0x0b7c		VoC_bez32_r(Coolsand_OverallNoiseEstwState_L3,ACC1)
0xD98D7025,	//0x0b7e		VoC_lw32_p(ACC1,REG1,IN_PARALLEL)	|	VoC_lw16i_short(REG5,0x1,DEFAULT)
0xE1047006,	//0x0b80		VoC_lw16i_short(REG4,0x10,IN_PARALLEL)	|	VoC_lw16i_short(REG6,0x0,DEFAULT)
0x0B8837AC,	//0x0b82		VoC_bne32_rr(Coolsand_OverallNoiseEstwState_L1,ACC1,ACC0)
0x0B88349C,	//0x0b84		VoC_bngt16_rr(Coolsand_OverallNoiseEstwState_L1,REG3,REG4)
0xFFC0017E,	//0x0b86		VoC_NAD(IN_PARALLEL)	|	VoC_add16_rp(REG6,REG5,REG7,DEFAULT)
		//0x0b88		Coolsand_OverallNoiseEstwState_L1
0x1F400A84,	//0x0b88		VoC_lw16i(REG4,0x1f40)
0xFBFDD98D,	//0x0b8a		VoC_shr32_ri(ACC1,0xffffffff,DEFAULT)	|	VoC_lw32_p(ACC1,REG1,DEFAULT)
0x0B9134B4,	//0x0b8c		VoC_bngt16_rr(Coolsand_OverallNoiseEstwState_L2,REG6,REG4)
0xDD8D7006,	//0x0b8e		VoC_sw32_p(ACC1,REG1,IN_PARALLEL)	|	VoC_lw16i_short(REG6,0x0,DEFAULT)
0xDC76DD85,	//0x0b90		VoC_sw16_p(REG6,REG7,DEFAULT)	|	VoC_sw32_p(ACC1,REG0,DEFAULT)
		//0x0b91		Coolsand_OverallNoiseEstwState_L2
		//0x0b92		Coolsand_OverallNoiseEstwState_L3
0x00320A84,	//0x0b92		VoC_lw16i(REG4,0x32)
0x3C1CD98C,	//0x0b94		VoC_bngt16_rd(Coolsand_OverallNoiseEstwState_L4,REG4,0x721)(lo)	|	VoC_lw32_p(ACC0,REG1,DEFAULT)
0xDD840721,	//0x0b96		VoC_sw32_p(ACC0,REG0,DEFAULT)	|	VoC_bngt16_rd(Coolsand_OverallNoiseEstwState_L4,REG4,0x721)(hi)
		//0x0b98		Coolsand_OverallNoiseEstwState_L4
0xE0365984,	//0x0b98		VoC_lw16i_short(REG6,0x3,IN_PARALLEL)	|	VoC_lw32_p(ACC0,REG0,DEFAULT)
0xE0057044,	//0x0b9a		VoC_lw16i_short(REG5,0x0,IN_PARALLEL)	|	VoC_lw16i_short(REG4,0x2,DEFAULT)
0x0BA03344,	//0x0b9c		VoC_bnez32_r(Coolsand_OverallNoiseEstwState_L5,ACC0)
0xFFC05D82,	//0x0b9e		VoC_NAD(IN_PARALLEL)	|	VoC_sw32_p(REG45,REG0,DEFAULT)
		//0x0ba0		Coolsand_OverallNoiseEstwState_L5
0xE0345987,	//0x0ba0		VoC_lw16i_short(REG4,0x3,IN_PARALLEL)	|	VoC_lw32_p(RL7,REG0,DEFAULT)
0xFF3B598D,	//0x0ba2		VoC_movreg32(REG67,RL7,IN_PARALLEL)	|	VoC_lw32_p(ACC1,REG1,DEFAULT)
0x403B6C04,	//0x0ba4		VoC_bez16_d(Coolsand_OverallNoiseEstwState_L7,0x403b)
0x08E24514,	//0x0ba6		VoC_bne16_rd(Coolsand_OverallNoiseEstwState_End,REG4,0x8e2)
		//0x0ba8		Coolsand_OverallNoiseEstwState_L7
0x362BFBFB,	//0x0ba8		VoC_bgt32_rr(Coolsand_OverallNoiseEstwState_L6,ACC1,REG67)(lo)	|	VoC_shr32_ri(REG67,0xffffffff,DEFAULT)
0xFF2F0BAE,	//0x0baa		VoC_movreg32(RL7,ACC1,DEFAULT)	|	VoC_bgt32_rr(Coolsand_OverallNoiseEstwState_L6,ACC1,REG67)(hi)
0xFFC065CC,	//0x0bac		VoC_NAD(IN_PARALLEL)	|	VoC_jump(Coolsand_OverallNoiseEstwState_End)
		//0x0bae		Coolsand_OverallNoiseEstwState_L6
0xE325790E,	//0x0bae		VoC_lw16i_short(REG5,0x32,IN_PARALLEL)	|	VoC_shru16_ri(REG6,0x1,DEFAULT)
0xF4014DAC,	//0x0bb0		VoC_lw16i_short(FORMAT32,0x0,IN_PARALLEL)	|	VoC_multf32_rr(ACC0,REG6,REG5,DEFAULT)
0xF58A4E7D,	//0x0bb2		VoC_lw16i_short(FORMATX,0xfffffff1,IN_PARALLEL)	|	VoC_macX_rr(REG7,REG5,DEFAULT)
0x3625FFC0,	//0x0bb4		VoC_bgt32_rr(Coolsand_OverallNoiseEstwState_End,ACC0,ACC1)(lo)	|	VoC_NOP
0xFF2F0BB8,	//0x0bb6		VoC_movreg32(RL7,ACC1,DEFAULT)	|	VoC_bgt32_rr(Coolsand_OverallNoiseEstwState_End,ACC0,ACC1)(hi)
		//0x0bb8		Coolsand_OverallNoiseEstwState_End
0xDD87DFA9,	//0x0bb8		VoC_sw32_p(RL7,REG0,DEFAULT)	|	VoC_pop16(RA,DEFAULT)
0xDFE9E580,	//0x0bba		VoC_push16(RA,DEFAULT)	|	VoC_return
		//0x0bbb		Cooland_InstantPower
0x08742B80,	//0x0bbc		VoC_jal(Coolsand_CmplxAppxNorm)
0xF4397B84,	//0x0bbe		VoC_lw16i_short(FORMAT32,0x7,IN_PARALLEL)	|	VoC_shr32_ri(ACC0,0xfffffff0,DEFAULT)
0xDFA96120,	//0x0bc0		VoC_pop16(RA,IN_PARALLEL)	|	VoC_movreg16(REG0,ACC0_HI,DEFAULT)
0xE580CC04,	//0x0bc2		VoC_return	|	VoC_multf32_rr(ACC0,REG0,REG0,DEFAULT)
		//0x0bc4		Coolsand_ComputeEchoWeight_DeciDirect_MFCOHFCTRL
0x1407DFE9,	//0x0bc4		VoC_lw16_d(REG7,0x887)(lo)	|	VoC_push16(RA,DEFAULT)
0x0A820887,	//0x0bc6		VoC_lw16i(REG2,0x61c)(lo)	|	VoC_lw16_d(REG7,0x887)(hi)
0x0A83061C,	//0x0bc8		VoC_lw16i(REG3,0x626)(lo)	|	VoC_lw16i(REG2,0x61c)(hi)
0xC0BA0626,	//0x0bca		VoC_add16_rr(REG2,REG2,REG7,DEFAULT)	|	VoC_lw16i(REG3,0x626)(hi)
0x5820C0FB,	//0x0bcc		VoC_lw16_p(REG0,REG2,DEFAULT)	|	VoC_add16_rr(REG3,REG3,REG7,DEFAULT)
0x5831D824,	//0x0bce		VoC_lw16_p(REG1,REG3,DEFAULT)	|	VoC_lw16_p(REG4,REG2,IN_PARALLEL)
0x2B80D835,	//0x0bd0		VoC_jal(Coolsand_CmplxAppxNorm)(lo)	|	VoC_lw16_p(REG5,REG3,IN_PARALLEL)
0xFB840874,	//0x0bd2		VoC_shr32_ri(ACC0,0xfffffff0,DEFAULT)	|	VoC_jal(Coolsand_CmplxAppxNorm)(hi)
0xF4396126,	//0x0bd4		VoC_lw16i_short(FORMAT32,0x7,IN_PARALLEL)	|	VoC_movreg16(REG6,ACC0_HI,DEFAULT)
0xFFC0CDB4,	//0x0bd6		VoC_NOP	|	VoC_multf32_rr(ACC0,REG6,REG6,DEFAULT)
0xFA44FBC4,	//0x0bd8		VoC_shr32_ri(ACC0,0x8,DEFAULT)	|	VoC_shr32_ri(ACC0,0xfffffff8,DEFAULT)
0xDF44FFC0,	//0x0bda		VoC_push32(ACC0,DEFAULT)	|	VoC_NOP
0x0C692B80,	//0x0bdc		VoC_jal(Coolsand_EchoPSDEst_MFCOHFFix)
0x0A3A0A80,	//0x0bde		VoC_lw16i(REG0,0xa3a)
0x08871407,	//0x0be0		VoC_lw16_d(REG7,0x887)
0x0A4C0A81,	//0x0be2		VoC_lw16i(REG1,0xa4c)
0xC07978FF,	//0x0be4		VoC_add16_rr(REG1,REG1,REG7,IN_PARALLEL)	|	VoC_shr16_ri(REG7,0xffffffff,DEFAULT)
0xDF07C038,	//0x0be6		VoC_pop32(RL7,DEFAULT)	|	VoC_add16_rr(REG0,REG0,REG7,DEFAULT)
0xFA11D981,	//0x0be8		VoC_shr32_ri(REG23,0x2,DEFAULT)	|	VoC_lw32_p(REG23,REG0,DEFAULT)
0xDF4772C4,	//0x0bea		VoC_push32(RL7,IN_PARALLEL)	|	VoC_lw16i_short(REG4,0x16,DEFAULT)
0x08DC2B80,	//0x0bec		VoC_jal(Coolsand_ShrinkBit)
0x3344F344,	//0x0bee		VoC_bnez32_r(Coolsand_ComputeEchoWeight_DeciDirect_MFCOHFCTRL_L0,ACC0)(lo)	|	VoC_lw16i_short(REG4,0x1a,DEFAULT)
0xF3240BF4,	//0x0bf0		VoC_lw16i_short(REG4,0x19,DEFAULT)	|	VoC_bnez32_r(Coolsand_ComputeEchoWeight_DeciDirect_MFCOHFCTRL_L0,ACC0)(hi)
0xE0097028,	//0x0bf2		VoC_lw16i_short(ACC0_HI,0x0,IN_PARALLEL)	|	VoC_lw16i_short(ACC0_LO,0x1,DEFAULT)
		//0x0bf4		Coolsand_ComputeEchoWeight_DeciDirect_MFCOHFCTRL_L0
0xDF0342E4,	//0x0bf4		VoC_pop32(REG67,IN_PARALLEL)	|	VoC_sub16_rr(REG4,REG3,REG4,DEFAULT)
0xFF1E7EA3,	//0x0bf6		VoC_movreg32(RL6,REG67,IN_PARALLEL)	|	VoC_shr32_rr(REG67,REG4,DEFAULT)
0xDFC47A83,	//0x0bf8		VoC_push16(REG4,IN_PARALLEL)	|	VoC_shr32_ri(REG67,0x10,DEFAULT)
0xFBF37BF4,	//0x0bfa		VoC_shr32_ri(REG67,0xfffffffe,IN_PARALLEL)	|	VoC_shr32_ri(ACC0,0xfffffffe,DEFAULT)
0x3287CBA7,	//0x0bfc		VoC_bgtz32_r(Coolsand_ComputeEchoWeight_DeciDirect_MFCOHFCTRL_L1,RL7)(lo)	|	VoC_sub32_rr(RL7,RL6,ACC0,DEFAULT)
0x702E0C02,	//0x0bfe		VoC_lw16i_short(RL7_LO,0x1,DEFAULT)	|	VoC_bgtz32_r(Coolsand_ComputeEchoWeight_DeciDirect_MFCOHFCTRL_L1,RL7)(hi)
0xFFC0E00F,	//0x0c00		VoC_NAD	|	VoC_lw16i_short(RL7_HI,0x0,IN_PARALLEL)
		//0x0c02		Coolsand_ComputeEchoWeight_DeciDirect_MFCOHFCTRL_L1
0x08871402,	//0x0c02		VoC_lw16_d(REG2,0x887)
0xFA2778FA,	//0x0c04		VoC_shr32_ri(RL7,0x4,IN_PARALLEL)	|	VoC_shr16_ri(REG2,0xffffffff,DEFAULT)
0x06FC0A83,	//0x0c06		VoC_lw16i(REG3,0x6fc)
0xFBA740D3,	//0x0c08		VoC_shr32_ri(RL7,0xfffffff4,IN_PARALLEL)	|	VoC_add16_rr(REG3,REG3,REG2,DEFAULT)
0x40181401,	//0x0c0a		VoC_lw16_d(REG1,0x4018)
0xFA67599D,	//0x0c0c		VoC_shr32_ri(RL7,0xc,IN_PARALLEL)	|	VoC_lw32_p(ACC1,REG3,DEFAULT)
0x7BA2CBEA,	//0x0c0e		VoC_shr32_ri(REG45,0xfffffff4,DEFAULT)	|	VoC_sub32_rr(REG45,RL7,ACC1,DEFAULT)
0x7A5AFF2C,	//0x0c10		VoC_shr32_ri(REG45,0xb,DEFAULT)	|	VoC_movreg32(ACC0,ACC1,IN_PARALLEL)
0x790CF439,	//0x0c12		VoC_shru16_ri(REG4,0x1,DEFAULT)	|	VoC_lw16i_short(FORMAT32,0x7,IN_PARALLEL)
0xCE21F5C2,	//0x0c14		VoC_mac32_rr(REG4,REG1,DEFAULT)	|	VoC_lw16i_short(FORMATX,0xfffffff8,IN_PARALLEL)
0xDF84CE69,	//0x0c16		VoC_pop16(REG4,DEFAULT)	|	VoC_macX_rr(REG5,REG1,DEFAULT)
0x08FF0A80,	//0x0c18		VoC_lw16i(REG0,0x8ff)
0x08870700,	//0x0c1a		VoC_add16_rd(REG0,REG0,0x887)
0xFA64FBA4,	//0x0c1c		VoC_shr32_ri(ACC0,0xc,DEFAULT)	|	VoC_shr32_ri(ACC0,0xfffffff4,DEFAULT)
0xE00F7EA4,	//0x0c1e		VoC_lw16i_short(RL7_HI,0x0,IN_PARALLEL)	|	VoC_shr32_rr(ACC0,REG4,DEFAULT)
0x00000ACE,	//0x0c20		VoC_lw16i(RL7_LO,0x8000)
0xFF47493C,	//0x0c22		VoC_lw32z(RL7,IN_PARALLEL)	|	VoC_add32_rr(ACC0,ACC0,RL7,DEFAULT)
0xE1027A84,	//0x0c24		VoC_lw16i_short(REG2,0x10,IN_PARALLEL)	|	VoC_shr32_ri(ACC0,0x10,DEFAULT)
0x00800A8E,	//0x0c26		VoC_lw16i(RL7_LO,0x80)
0xFF265C08,	//0x0c28		VoC_movreg32(RL6,ACC0,IN_PARALLEL)	|	VoC_sw16_p(ACC0_LO,REG0,DEFAULT)
0x2B80C9BE,	//0x0c2a		VoC_jal(Coolsand_MSBPos)(lo)	|	VoC_add32_rr(RL6,RL6,RL7,DEFAULT)
0xF1C007BE,	//0x0c2c		VoC_lw16i_short(REG0,0xe,DEFAULT)	|	VoC_jal(Coolsand_MSBPos)(hi)
0x1401C2C3,	//0x0c2e		VoC_lw16_d(REG1,0x401a)(lo)	|	VoC_sub16_rr(REG3,REG3,REG0,DEFAULT)
0xFE19401A,	//0x0c30		VoC_shr16_rr(REG1,REG3,DEFAULT)	|	VoC_lw16_d(REG1,0x401a)(hi)
0xF841F8C1,	//0x0c32		VoC_shr16_ri(REG1,0x8,DEFAULT)	|	VoC_shr16_ri(REG1,0xfffffff8,DEFAULT)
0x00800A82,	//0x0c34		VoC_lw16i(REG2,0x80)
0x0A81C28C,	//0x0c36		VoC_lw16i(REG1,0xa4c)(lo)	|	VoC_sub16_rr(REG4,REG2,REG1,DEFAULT)
0x07090A4C,	//0x0c38		VoC_add16_rd(REG1,REG1,0x887)(lo)	|	VoC_lw16i(REG1,0xa4c)(hi)
0x6E0D0887,	//0x0c3a		VoC_bnez16_d(Coolsand_ComputeEchoWeight_DeciDirect_MFCOHFCTRL_L3,0x403b)(lo)	|	VoC_add16_rd(REG1,REG1,0x887)(hi)
0xF8F4403B,	//0x0c3c		VoC_shr16_ri(REG4,0xfffffffe,DEFAULT)	|	VoC_bnez16_d(Coolsand_ComputeEchoWeight_DeciDirect_MFCOHFCTRL_L3,0x403b)(hi)
0x401B3824,	//0x0c3e		VoC_bgt16_rd(Coolsand_ComputeEchoWeight_DeciDirect_MFCOHFCTRL_L2,REG4,0x401b)
0x401B1404,	//0x0c40		VoC_lw16_d(REG4,0x401b)
		//0x0c42		Coolsand_ComputeEchoWeight_DeciDirect_MFCOHFCTRL_L2
0x6C23F814,	//0x0c42		VoC_bez16_d(Coolsand_ComputeEchoWeight_DeciDirect_MFCOHFCTRL_End,0x8e2)(lo)	|	VoC_shr16_ri(REG4,0x2,DEFAULT)
0x0A8408E2,	//0x0c44		VoC_lw16i(REG4,0x7f)(lo)	|	VoC_bez16_d(Coolsand_ComputeEchoWeight_DeciDirect_MFCOHFCTRL_End,0x8e2)(hi)
0xE5DF007F,	//0x0c46		VoC_jump(Coolsand_ComputeEchoWeight_DeciDirect_MFCOHFCTRL_End)	|	VoC_lw16i(REG4,0x7f)(hi)
		//0x0c48		Coolsand_ComputeEchoWeight_DeciDirect_MFCOHFCTRL_L3
0xE0137042,	//0x0c48		VoC_lw16i_short(REG3,0x1,IN_PARALLEL)	|	VoC_lw16i_short(REG2,0x2,DEFAULT)
0x40230A85,	//0x0c4a		VoC_lw16i(REG5,0x4023)
0x0887072D,	//0x0c4c		VoC_add16_rd(REG5,REG5,0x887)
0x08E24422,	//0x0c4e		VoC_bne16_rd(Coolsand_ComputeEchoWeight_DeciDirect_MFCOHFCTRL_L4,REG2,0x8e2)
0xFFC05853,	//0x0c50		VoC_NAD(IN_PARALLEL)	|	VoC_lw16_p(REG3,REG5,DEFAULT)
		//0x0c52		Coolsand_ComputeEchoWeight_DeciDirect_MFCOHFCTRL_L4
0x401B081E,	//0x0c52		VoC_mult16_rd(REG6,REG3,0x401b)
0xE02778F4,	//0x0c54		VoC_lw16i_short(REG7,0x2,IN_PARALLEL)	|	VoC_shr16_ri(REG4,0xfffffffe,DEFAULT)
0x0C5A3426,	//0x0c56		VoC_bgt16_rr(Coolsand_ComputeEchoWeight_DeciDirect_MFCOHFCTRL_L5,REG4,REG6)
0xC13CE0C4,	//0x0c58		VoC_add16_rr(REG4,REG4,REG7,DEFAULT)	|	VoC_movreg16(REG4,REG6,DEFAULT)
		//0x0c5a		Coolsand_ComputeEchoWeight_DeciDirect_MFCOHFCTRL_L5
0x7022F814,	//0x0c5a		VoC_lw16i_short(REG2,0x1,DEFAULT)	|	VoC_shr16_ri(REG4,0x2,DEFAULT)
0x442AE033,	//0x0c5c		VoC_bne16_rd(Coolsand_ComputeEchoWeight_DeciDirect_MFCOHFCTRL_L6,REG2,0x8e2)(lo)	|	VoC_lw16i_short(REG3,0x3,IN_PARALLEL)
0x0A8408E2,	//0x0c5e		VoC_lw16i(REG4,0x7f)(lo)	|	VoC_bne16_rd(Coolsand_ComputeEchoWeight_DeciDirect_MFCOHFCTRL_L6,REG2,0x8e2)(hi)
0xE5C5007F,	//0x0c60		VoC_jump(Coolsand_ComputeEchoWeight_DeciDirect_MFCOHFCTRL_End)	|	VoC_lw16i(REG4,0x7f)(hi)
		//0x0c62		Coolsand_ComputeEchoWeight_DeciDirect_MFCOHFCTRL_L6
0x08E24423,	//0x0c62		VoC_bne16_rd(Coolsand_ComputeEchoWeight_DeciDirect_MFCOHFCTRL_End,REG3,0x8e2)
0x007F0A84,	//0x0c64		VoC_lw16i(REG4,0x7f)
		//0x0c66		Coolsand_ComputeEchoWeight_DeciDirect_MFCOHFCTRL_End
0xDC14DFA9,	//0x0c66		VoC_sw16_p(REG4,REG1,DEFAULT)	|	VoC_pop16(RA,DEFAULT)
0xDFE9E580,	//0x0c68		VoC_push16(RA,DEFAULT)	|	VoC_return
		//0x0c69		Coolsand_EchoPSDEst_MFCOHFFix
0x08871402,	//0x0c6a		VoC_lw16_d(REG2,0x887)
0xF8EA5F42,	//0x0c6c		VoC_shr16_ri(REG2,0xfffffffd,IN_PARALLEL)	|	VoC_push32(REG45,DEFAULT)
0x04440A86,	//0x0c6e		VoC_lw16i(REG6,0x444)
0x048C0A87,	//0x0c70		VoC_lw16i(REG7,0x48c)
0xC1D7C196,	//0x0c72		VoC_add16_rr(REG7,REG7,REG2,DEFAULT)	|	VoC_add16_rr(REG6,REG6,REG2,DEFAULT)
0xF0065860,	//0x0c74		VoC_lw16i_short(INC2,0x1,IN_PARALLEL)	|	VoC_lw16_p(REG0,REG6,DEFAULT)
0xF0075871,	//0x0c76		VoC_lw16i_short(INC3,0x1,IN_PARALLEL)	|	VoC_lw16_p(REG1,REG7,DEFAULT)
0x08742B80,	//0x0c78		VoC_jal(Coolsand_CmplxAppxNorm)
0xF4196101,	//0x0c7a		VoC_lw16i_short(FORMAT32,0x3,IN_PARALLEL)	|	VoC_movreg16(REG1,ACC0_LO,DEFAULT)
0x0A80CC4C,	//0x0c7c		VoC_lw16i(REG0,0x908)(lo)	|	VoC_multf32_rr(ACC0,REG1,REG1,DEFAULT)
0x14010908,	//0x0c7e		VoC_lw16_d(REG1,0x887)(lo)	|	VoC_lw16i(REG0,0x908)(hi)
0x78F90887,	//0x0c80		VoC_shr16_ri(REG1,0xffffffff,DEFAULT)	|	VoC_lw16_d(REG1,0x887)(hi)
0x4008FBB4,	//0x0c82		VoC_add16_rr(REG0,REG0,REG1,DEFAULT)	|	VoC_shr32_ri(ACC0,0xfffffff6,IN_PARALLEL)
0x1401FA54,	//0x0c84		VoC_lw16_d(REG1,0x4017)(lo)	|	VoC_shr32_ri(ACC0,0xa,IN_PARALLEL)
0xD9854017,	//0x0c86		VoC_lw32_p(ACC1,REG0,DEFAULT)	|	VoC_lw16_d(REG1,0x4017)(hi)
0xFF197F27,	//0x0c88		VoC_movreg32(REG23,REG67,IN_PARALLEL)	|	VoC_movreg32(RL7,ACC0,DEFAULT)
0x7BB2CBEA,	//0x0c8a		VoC_shr32_ri(REG45,0xfffffff6,DEFAULT)	|	VoC_sub32_rr(REG45,RL7,ACC1,DEFAULT)
0x7A4AFF2C,	//0x0c8c		VoC_shr32_ri(REG45,0x9,DEFAULT)	|	VoC_movreg32(ACC0,ACC1,IN_PARALLEL)
0x790CF439,	//0x0c8e		VoC_shru16_ri(REG4,0x1,DEFAULT)	|	VoC_lw16i_short(FORMAT32,0x7,IN_PARALLEL)
0xCE21F5C2,	//0x0c90		VoC_mac32_rr(REG4,REG1,DEFAULT)	|	VoC_lw16i_short(FORMATX,0xfffffff8,IN_PARALLEL)
0xFFC0CE69,	//0x0c92		VoC_NOP	|	VoC_macX_rr(REG5,REG1,DEFAULT)
0xF4297BB4,	//0x0c94		VoC_lw16i_short(FORMAT32,0x5,IN_PARALLEL)	|	VoC_shr32_ri(ACC0,0xfffffff6,DEFAULT)
0xFA547F47,	//0x0c96		VoC_shr32_ri(ACC0,0xa,IN_PARALLEL)	|	VoC_lw32z(RL7,DEFAULT)
0xFF265F02,	//0x0c98		VoC_movreg32(RL6,ACC0,IN_PARALLEL)	|	VoC_pop32(REG45,DEFAULT)
0xE0005D84,	//0x0c9a		VoC_lw16i_short(REG0,0x0,IN_PARALLEL)	|	VoC_sw32_p(ACC0,REG0,DEFAULT)
0x08871407,	//0x0c9c		VoC_lw16_d(REG7,0x887)
0xF8E7422D,	//0x0c9e		VoC_shr16_ri(REG7,0xfffffffc,IN_PARALLEL)	|	VoC_sub16_rr(REG5,REG0,REG5,DEFAULT)
0x091A1808,	//0x0ca0		VoC_lw16i_set_inc(REG0,0x91a,0x2)
0x09AA1809,	//0x0ca2		VoC_lw16i_set_inc(REG1,0x9aa,0x2)
0xC0794038,	//0x0ca4		VoC_add16_rr(REG1,REG1,REG7,IN_PARALLEL)	|	VoC_add16_rr(REG0,REG0,REG7,DEFAULT)
0x40171407,	//0x0ca6		VoC_lw16_d(REG7,0x4017)
0x0D012C10,	//0x0ca8		VoC_loop_i(0x0,0x8)
0x995D9914,	//0x0caa		VoC_multf32_rp(ACC1,REG5,REG3,DEFAULT)	|	VoC_multf32_rp(ACC0,REG4,REG2,DEFAULT)
0xFBB5FBB4,	//0x0cac		VoC_shr32_ri(ACC1,0xfffffff6,DEFAULT)	|	VoC_shr32_ri(ACC0,0xfffffff6,DEFAULT)
0xFA557A54,	//0x0cae		VoC_shr32_ri(ACC1,0xa,IN_PARALLEL)	|	VoC_shr32_ri(ACC0,0xa,DEFAULT)
0xCB2E1B1C,	//0x0cb0		VoC_sub32_rr(RL6,ACC0,ACC1,IN_PARALLEL)	|	VoC_multf32inc_rp(ACC0,REG4,REG3,DEFAULT)
0xFBB49B55,	//0x0cb2		VoC_shr32_ri(ACC0,0xfffffff6,DEFAULT)	|	VoC_multf32inc_rp(ACC1,REG5,REG2,DEFAULT)
0xDF427BB5,	//0x0cb4		VoC_push32(REG45,IN_PARALLEL)	|	VoC_shr32_ri(ACC1,0xfffffff6,DEFAULT)
0xFA557A54,	//0x0cb6		VoC_shr32_ri(ACC1,0xa,IN_PARALLEL)	|	VoC_shr32_ri(ACC0,0xa,DEFAULT)
0xDF41492D,	//0x0cb8		VoC_push32(REG23,IN_PARALLEL)	|	VoC_add32_rr(ACC1,ACC0,ACC1,DEFAULT)
0xFBB57BB6,	//0x0cba		VoC_shr32_ri(ACC1,0xfffffff6,IN_PARALLEL)	|	VoC_shr32_ri(RL6,0xfffffff6,DEFAULT)
0xFA557A56,	//0x0cbc		VoC_shr32_ri(ACC1,0xa,IN_PARALLEL)	|	VoC_shr32_ri(RL6,0xa,DEFAULT)
0xF4391581,	//0x0cbe		VoC_lw16i_short(FORMAT32,0x7,IN_PARALLEL)	|	VoC_sub32_rp(REG23,RL6,REG0,DEFAULT)
0xF5C2154A,	//0x0cc0		VoC_lw16i_short(FORMATX,0xfffffff8,IN_PARALLEL)	|	VoC_sub32_rp(REG45,ACC1,REG1,DEFAULT)
0xFBB27BB1,	//0x0cc2		VoC_shr32_ri(REG45,0xfffffff6,IN_PARALLEL)	|	VoC_shr32_ri(REG23,0xfffffff6,DEFAULT)
0xFA4A7A49,	//0x0cc4		VoC_shr32_ri(REG45,0x9,IN_PARALLEL)	|	VoC_shr32_ri(REG23,0x9,DEFAULT)
0xF90C790A,	//0x0cc6		VoC_shru16_ri(REG4,0x1,IN_PARALLEL)	|	VoC_shru16_ri(REG2,0x1,DEFAULT)
0xCD3D4CBC,	//0x0cc8		VoC_multf32_rr(ACC1,REG4,REG7,IN_PARALLEL)	|	VoC_multf32_rr(ACC0,REG2,REG7,DEFAULT)
0xCEAF4E5F,	//0x0cca		VoC_macX_rr(REG5,REG7,IN_PARALLEL)	|	VoC_macX_rr(REG3,REG7,DEFAULT)
0x7BB4FFC0,	//0x0ccc		VoC_shr32_ri(ACC0,0xfffffff6,DEFAULT)	|	VoC_NOP
0x7A54FBB5,	//0x0cce		VoC_shr32_ri(ACC0,0xa,DEFAULT)	|	VoC_shr32_ri(ACC1,0xfffffff6,IN_PARALLEL)
0x9104FA55,	//0x0cd0		VoC_add32_rp(ACC0,ACC0,REG0,DEFAULT)	|	VoC_shr32_ri(ACC1,0xa,IN_PARALLEL)
0x7BB4914D,	//0x0cd2		VoC_shr32_ri(ACC0,0xfffffff6,DEFAULT)	|	VoC_add32_rp(ACC1,ACC1,REG1,DEFAULT)
0x7A54FBB5,	//0x0cd4		VoC_shr32_ri(ACC0,0xa,DEFAULT)	|	VoC_shr32_ri(ACC1,0xfffffff6,IN_PARALLEL)
0xFFC0FA55,	//0x0cd6		VoC_NOP	|	VoC_shr32_ri(ACC1,0xa,IN_PARALLEL)
0xFA2C5DC4,	//0x0cd8		VoC_shr32_ri(ACC0,0x5,IN_PARALLEL)	|	VoC_sw32inc_p(ACC0,REG0,DEFAULT)
0xFA2D5DCD,	//0x0cda		VoC_shr32_ri(ACC1,0x5,IN_PARALLEL)	|	VoC_sw32inc_p(ACC1,REG1,DEFAULT)
0xFB7D7B7C,	//0x0cdc		VoC_shr32_ri(ACC1,0xffffffef,IN_PARALLEL)	|	VoC_shr32_ri(ACC0,0xffffffef,DEFAULT)
0xFA8D7A8C,	//0x0cde		VoC_shr32_ri(ACC1,0x11,IN_PARALLEL)	|	VoC_shr32_ri(ACC0,0x11,DEFAULT)
0xFAFC7F22,	//0x0ce0		VoC_shr32_ri(ACC0,0x1f,IN_PARALLEL)	|	VoC_movreg32(REG45,ACC0,DEFAULT)
0x7F2EE562,	//0x0ce2		VoC_movreg32(RL6,ACC1,DEFAULT)	|	VoC_xor32_rr(REG45,ACC0,DEFAULT)
0x656EFAFD,	//0x0ce4		VoC_xor32_rr(RL6,ACC1,DEFAULT)	|	VoC_shr32_ri(ACC1,0x1f,IN_PARALLEL)
0xCBADCAA4,	//0x0ce6		VoC_sub32_rr(ACC1,RL6,ACC1,DEFAULT)	|	VoC_sub32_rr(ACC0,REG45,ACC0,IN_PARALLEL)
0xFB7D7B7C,	//0x0ce8		VoC_shr32_ri(ACC1,0xffffffef,IN_PARALLEL)	|	VoC_shr32_ri(ACC0,0xffffffef,DEFAULT)
0xFA8D7A8C,	//0x0cea		VoC_shr32_ri(ACC1,0x11,IN_PARALLEL)	|	VoC_shr32_ri(ACC0,0x11,DEFAULT)
0x0CF03625,	//0x0cec		VoC_bgt32_rr(Coolsand_EchoPSDEst_MFCOHFFix_L0,ACC0,ACC1)
0xFF257F2C,	//0x0cee		VoC_movreg32(ACC1,ACC0,IN_PARALLEL)	|	VoC_movreg32(ACC0,ACC1,DEFAULT)
		//0x0cf0		Coolsand_EchoPSDEst_MFCOHFFix_L0
0xFF2A7F26,	//0x0cf0		VoC_movreg32(REG45,ACC1,IN_PARALLEL)	|	VoC_movreg32(RL6,ACC0,DEFAULT)
0xFBFD7BDC,	//0x0cf2		VoC_shr32_ri(ACC1,0xffffffff,IN_PARALLEL)	|	VoC_shr32_ri(ACC0,0xfffffffb,DEFAULT)
0xC9554B34,	//0x0cf4		VoC_add32_rr(ACC1,ACC1,REG45,IN_PARALLEL)	|	VoC_sub32_rr(ACC0,ACC0,RL6,DEFAULT)
0xFA1D7A2C,	//0x0cf6		VoC_shr32_ri(ACC1,0x3,IN_PARALLEL)	|	VoC_shr32_ri(ACC0,0x5,DEFAULT)
0xFB7CC92C,	//0x0cf8		VoC_shr32_ri(ACC0,0xffffffef,DEFAULT)	|	VoC_add32_rr(ACC0,ACC0,ACC1,DEFAULT)
0xF4017A8C,	//0x0cfa		VoC_lw16i_short(FORMAT32,0x0,IN_PARALLEL)	|	VoC_shr32_ri(ACC0,0x11,DEFAULT)
0xFF3C6106,	//0x0cfc		VoC_movreg32(ACC0,RL7,IN_PARALLEL)	|	VoC_movreg16(REG6,ACC0_LO,DEFAULT)
0x5F01CE36,	//0x0cfe		VoC_pop32(REG23,DEFAULT)	|	VoC_mac32_rr(REG6,REG6,DEFAULT)
0x5F02F429,	//0x0d00		VoC_pop32(REG45,DEFAULT)	|	VoC_lw16i_short(FORMAT32,0x5,IN_PARALLEL)
		//0x0d01		VoC_endloop0
0x0A80FF27,	//0x0d02		VoC_lw16i(REG0,0xa6c)(lo)	|	VoC_movreg32(RL7,ACC0,IN_PARALLEL)
0x0A810A6C,	//0x0d04		VoC_lw16i(REG1,0xa7e)(lo)	|	VoC_lw16i(REG0,0xa6c)(hi)
0x0A820A7E,	//0x0d06		VoC_lw16i(REG2,0x908)(lo)	|	VoC_lw16i(REG1,0xa7e)(hi)
0x14040908,	//0x0d08		VoC_lw16_d(REG4,0x887)(lo)	|	VoC_lw16i(REG2,0x908)(hi)
0x70430887,	//0x0d0a		VoC_lw16i_short(REG3,0x2,DEFAULT)	|	VoC_lw16_d(REG4,0x887)(hi)
0x4020F8FC,	//0x0d0c		VoC_add16_rr(REG0,REG0,REG4,DEFAULT)	|	VoC_shr16_ri(REG4,0xffffffff,IN_PARALLEL)
0xC0A2C061,	//0x0d0e		VoC_add16_rr(REG2,REG2,REG4,DEFAULT)	|	VoC_add16_rr(REG1,REG1,REG4,IN_PARALLEL)
0xD98CD986,	//0x0d10		VoC_lw32_p(ACC0,REG1,DEFAULT)	|	VoC_lw32_p(RL6,REG0,DEFAULT)
0x1404D995,	//0x0d12		VoC_lw16_d(REG4,0x8e2)(lo)	|	VoC_lw32_p(ACC1,REG2,DEFAULT)
0x359C08E2,	//0x0d14		VoC_bne16_rr(Coolsand_EchoPSDEst_MFCOHFFix_L4,REG3,REG4)(lo)	|	VoC_lw16_d(REG4,0x8e2)(hi)
0x33060D5A,	//0x0d16		VoC_bez32_r(Coolsand_EchoPSDEst_MFCOHFFix_L4,RL6)(lo)	|	VoC_bne16_rr(Coolsand_EchoPSDEst_MFCOHFFix_L4,REG3,REG4)(hi)
0xDF470D5A,	//0x0d18		VoC_push32(RL7,DEFAULT)	|	VoC_bez32_r(Coolsand_EchoPSDEst_MFCOHFFix_L4,RL6)(hi)
0xDF467A24,	//0x0d1a		VoC_push32(RL6,IN_PARALLEL)	|	VoC_shr32_ri(ACC0,0x4,DEFAULT)
0x0D203344,	//0x0d1c		VoC_bnez32_r(Coolsand_EchoPSDEst_MFCOHFFix_L1,ACC0)
0xE0097028,	//0x0d1e		VoC_lw16i_short(ACC0_HI,0x0,IN_PARALLEL)	|	VoC_lw16i_short(ACC0_LO,0x1,DEFAULT)
		//0x0d20		Coolsand_EchoPSDEst_MFCOHFFix_L1
0xE1227F26,	//0x0d20		VoC_lw16i_short(REG2,0x12,IN_PARALLEL)	|	VoC_movreg32(RL6,ACC0,DEFAULT)
0x07BE2B80,	//0x0d22		VoC_jal(Coolsand_MSBPos)
0xFF447107,	//0x0d24		VoC_lw32z(ACC0,IN_PARALLEL)	|	VoC_lw16i_short(REG7,0x8,DEFAULT)
0xE01842FB,	//0x0d26		VoC_lw16i_short(ACC0_LO,0x1,IN_PARALLEL)	|	VoC_sub16_rr(REG3,REG3,REG7,DEFAULT)
0xFBAC7E9D,	//0x0d28		VoC_shr32_ri(ACC0,0xfffffff5,IN_PARALLEL)	|	VoC_shr32_rr(ACC1,REG3,DEFAULT)
0xE0027BBD,	//0x0d2a		VoC_lw16i_short(REG2,0x0,IN_PARALLEL)	|	VoC_shr32_ri(ACC1,0xfffffff7,DEFAULT)
0xDF007A4D,	//0x0d2c		VoC_pop32(REG01,IN_PARALLEL)	|	VoC_shr32_ri(ACC1,0x9,DEFAULT)
0x0D3136AC,	//0x0d2e		VoC_bngt32_rr(Coolsand_EchoPSDEst_MFCOHFFix_L2,ACC1,ACC0)
0xF0A4F102,	//0x0d30		VoC_lw16i_short(REG4,0x5,DEFAULT)	|	VoC_lw16i_short(REG2,0x8,DEFAULT)
		//0x0d31		Coolsand_EchoPSDEst_MFCOHFFix_L2
0xFA307E95,	//0x0d32		VoC_shr32_ri(REG01,0x6,IN_PARALLEL)	|	VoC_shr32_rr(ACC1,REG2,DEFAULT)
0xFB857B80,	//0x0d34		VoC_shr32_ri(ACC1,0xfffffff0,IN_PARALLEL)	|	VoC_shr32_ri(REG01,0xfffffff0,DEFAULT)
0xC3146163,	//0x0d36		VoC_sub16_rr(REG4,REG4,REG2,IN_PARALLEL)	|	VoC_movreg16(REG3,ACC1_HI,DEFAULT)
0xF6994C58,	//0x0d38		VoC_movreg16(FORMAT32,REG4,IN_PARALLEL)	|	VoC_multf32_rr(REG01,REG1,REG3,DEFAULT)
0x40221403,	//0x0d3a		VoC_lw16_d(REG3,0x4022)
0xF4097BC0,	//0x0d3c		VoC_lw16i_short(FORMAT32,0x1,IN_PARALLEL)	|	VoC_shr32_ri(REG01,0xfffffff8,DEFAULT)
0xF5927A38,	//0x0d3e		VoC_lw16i_short(FORMATX,0xfffffff2,IN_PARALLEL)	|	VoC_shr32_ri(REG01,0x7,DEFAULT)
0xCC1CF908,	//0x0d40		VoC_multf32_rr(ACC0,REG0,REG3,DEFAULT)	|	VoC_shru16_ri(REG0,0x1,DEFAULT)
0xDF074E4B,	//0x0d42		VoC_pop32(RL7,IN_PARALLEL)	|	VoC_macX_rr(REG1,REG3,DEFAULT)
0x0A3A0A80,	//0x0d44		VoC_lw16i(REG0,0xa3a)
0x08871404,	//0x0d46		VoC_lw16_d(REG4,0x887)
0xF8FC7BC4,	//0x0d48		VoC_shr16_ri(REG4,0xffffffff,IN_PARALLEL)	|	VoC_shr32_ri(ACC0,0xfffffff8,DEFAULT)
0xC0207A44,	//0x0d4a		VoC_add16_rr(REG0,REG0,REG4,IN_PARALLEL)	|	VoC_shr32_ri(ACC0,0x8,DEFAULT)
0x5986FF25,	//0x0d4c		VoC_lw32_p(RL6,REG0,DEFAULT)	|	VoC_movreg32(ACC1,ACC0,DEFAULT)
0x36B5FBF5,	//0x0d4e		VoC_bngt32_rr(Coolsand_EchoPSDEst_MFCOHFFix_L3,RL6,ACC1)(lo)	|	VoC_shr32_ri(ACC1,0xfffffffe,IN_PARALLEL)
0xFA160D54,	//0x0d50		VoC_shr32_ri(RL6,0x2,DEFAULT)	|	VoC_bngt32_rr(Coolsand_EchoPSDEst_MFCOHFFix_L3,RL6,ACC1)(hi)
0xFFC07F34,	//0x0d52		VoC_NAD(IN_PARALLEL)	|	VoC_movreg32(ACC0,RL6,DEFAULT)
		//0x0d54		Coolsand_EchoPSDEst_MFCOHFFix_L3
0x0D863344,	//0x0d54		VoC_bnez32_r(Coolsand_EchoPSDEst_MFCOHFFix_L7,ACC0)
0xE0097028,	//0x0d56		VoC_lw16i_short(ACC0_HI,0x0,IN_PARALLEL)	|	VoC_lw16i_short(ACC0_LO,0x1,DEFAULT)
0x0D862B00,	//0x0d58		VoC_jump_lg(Coolsand_EchoPSDEst_MFCOHFFix_L7)
		//0x0d5a		Coolsand_EchoPSDEst_MFCOHFFix_L4
0x708AFF2E,	//0x0d5a		VoC_lw16i_short(ACC1_LO,0x4,DEFAULT)	|	VoC_movreg32(RL6,ACC1,DEFAULT)
0x36B5E00B,	//0x0d5c		VoC_bngt32_rr(Coolsand_EchoPSDEst_MFCOHFFix_L5,RL6,ACC1)(lo)	|	VoC_lw16i_short(ACC1_HI,0x0,IN_PARALLEL)
0x33470D64,	//0x0d5e		VoC_bnez32_r(Coolsand_EchoPSDEst_MFCOHFFix_L5,RL7)(lo)	|	VoC_bngt32_rr(Coolsand_EchoPSDEst_MFCOHFFix_L5,RL6,ACC1)(hi)
0x700F0D64,	//0x0d60		VoC_lw16i_short(RL7_HI,0x0,DEFAULT)	|	VoC_bnez32_r(Coolsand_EchoPSDEst_MFCOHFFix_L5,RL7)(hi)
0xFFC0E01E,	//0x0d62		VoC_NAD	|	VoC_lw16i_short(RL7_LO,0x1,IN_PARALLEL)
		//0x0d64		Coolsand_EchoPSDEst_MFCOHFFix_L5
0x0D6A3346,	//0x0d64		VoC_bnez32_r(Coolsand_EchoPSDEst_MFCOHFFix_L6,RL6)
0x08E26C04,	//0x0d66		VoC_bez16_d(Coolsand_EchoPSDEst_MFCOHFFix_L6,0x8e2)
0xFFC07F47,	//0x0d68		VoC_NAD(IN_PARALLEL)	|	VoC_lw32z(RL7,DEFAULT)
		//0x0d6a		Coolsand_EchoPSDEst_MFCOHFFix_L6
0xFF3572C2,	//0x0d6a		VoC_movreg32(ACC1,RL6,IN_PARALLEL)	|	VoC_lw16i_short(REG2,0x16,DEFAULT)
0x07BE2B80,	//0x0d6c		VoC_jal(Coolsand_MSBPos)
0x0A80F164,	//0x0d6e		VoC_lw16i(REG0,0xa3a)(lo)	|	VoC_lw16i_short(REG4,0xb,DEFAULT)
0x14070A3A,	//0x0d70		VoC_lw16_d(REG7,0x887)(lo)	|	VoC_lw16i(REG0,0xa3a)(hi)
0x42E30887,	//0x0d72		VoC_sub16_rr(REG3,REG3,REG4,DEFAULT)	|	VoC_lw16_d(REG7,0x887)(hi)
0x7E9FF8FF,	//0x0d74		VoC_shr32_rr(RL7,REG3,DEFAULT)	|	VoC_shr16_ri(REG7,0xffffffff,IN_PARALLEL)
0x7BC7C038,	//0x0d76		VoC_shr32_ri(RL7,0xfffffff8,DEFAULT)	|	VoC_add16_rr(REG0,REG0,REG7,IN_PARALLEL)
0x7A47E009,	//0x0d78		VoC_shr32_ri(RL7,0x8,DEFAULT)	|	VoC_lw16i_short(ACC0_HI,0x0,IN_PARALLEL)
0x3307E018,	//0x0d7a		VoC_bez32_r(Coolsand_EchoPSDEst_MFCOHFFix_L7,RL7)(lo)	|	VoC_lw16i_short(ACC0_LO,0x1,IN_PARALLEL)
0x7F3C0D86,	//0x0d7c		VoC_movreg32(ACC0,RL7,DEFAULT)	|	VoC_bez32_r(Coolsand_EchoPSDEst_MFCOHFFix_L7,RL7)(hi)
0x7BF5FF3D,	//0x0d7e		VoC_shr32_ri(ACC1,0xfffffffe,DEFAULT)	|	VoC_movreg32(ACC1,RL7,IN_PARALLEL)
0x36B5D986,	//0x0d80		VoC_bngt32_rr(Coolsand_EchoPSDEst_MFCOHFFix_L7,RL6,ACC1)(lo)	|	VoC_lw32_p(RL6,REG0,IN_PARALLEL)
0xFA160D86,	//0x0d82		VoC_shr32_ri(RL6,0x2,DEFAULT)	|	VoC_bngt32_rr(Coolsand_EchoPSDEst_MFCOHFFix_L7,RL6,ACC1)(hi)
0xFFC07F34,	//0x0d84		VoC_NAD(IN_PARALLEL)	|	VoC_movreg32(ACC0,RL6,DEFAULT)
		//0x0d86		Coolsand_EchoPSDEst_MFCOHFFix_L7
0x08871407,	//0x0d86		VoC_lw16_d(REG7,0x887)
0xF8FF5D84,	//0x0d88		VoC_shr16_ri(REG7,0xffffffff,IN_PARALLEL)	|	VoC_sw32_p(ACC0,REG0,DEFAULT)
0x09080A81,	//0x0d8a		VoC_lw16i(REG1,0x908)
0x0A7E0A82,	//0x0d8c		VoC_lw16i(REG2,0xa7e)
0x0A6C0A83,	//0x0d8e		VoC_lw16i(REG3,0xa6c)
0xC0BA4079,	//0x0d90		VoC_add16_rr(REG2,REG2,REG7,IN_PARALLEL)	|	VoC_add16_rr(REG1,REG1,REG7,DEFAULT)
0x1486C0FB,	//0x0d92		VoC_lw32_d(RL6,0x4020)(lo)	|	VoC_add16_rr(REG3,REG3,REG7,DEFAULT)
0x598D4020,	//0x0d94		VoC_lw32_p(ACC1,REG1,DEFAULT)	|	VoC_lw32_d(RL6,0x4020)(hi)
0x6E08FBE6,	//0x0d96		VoC_bnez16_d(Coolsand_EchoPSDEst_MFCOHFFix_End,0x8e2)(lo)	|	VoC_shr32_ri(RL6,0xfffffffc,IN_PARALLEL)
0x36AE08E2,	//0x0d98		VoC_bngt32_rr(Coolsand_EchoPSDEst_MFCOHFFix_End,ACC1,RL6)(lo)	|	VoC_bnez16_d(Coolsand_EchoPSDEst_MFCOHFFix_End,0x8e2)(hi)
0x54240D9F,	//0x0d9a		VoC_bngt32_rd(Coolsand_EchoPSDEst_MFCOHFFix_End,ACC0,0x4020)(lo)	|	VoC_bngt32_rr(Coolsand_EchoPSDEst_MFCOHFFix_End,ACC1,RL6)(hi)
0xDD954020,	//0x0d9c		VoC_sw32_p(ACC1,REG2,DEFAULT)	|	VoC_bngt32_rd(Coolsand_EchoPSDEst_MFCOHFFix_End,ACC0,0x4020)(hi)
0xDFA9DD9C,	//0x0d9e		VoC_pop16(RA,DEFAULT)	|	VoC_sw32_p(ACC0,REG3,DEFAULT)
		//0x0d9f		Coolsand_EchoPSDEst_MFCOHFFix_End
0xE580FFC0,	//0x0da0		VoC_return	|	VoC_NOP
		//0x0da2		Coolsand_ControlLogicDTD
0x0A80DFE9,	//0x0da2		VoC_lw16i(REG0,0x404)(lo)	|	VoC_push16(RA,DEFAULT)
0x0A810404,	//0x0da4		VoC_lw16i(REG1,0x414)(lo)	|	VoC_lw16i(REG0,0x404)(hi)
0x07000414,	//0x0da6		VoC_add16_rd(REG0,REG0,0x6e9)(lo)	|	VoC_lw16i(REG1,0x414)(hi)
0x070906E9,	//0x0da8		VoC_add16_rd(REG1,REG1,0x6e9)(lo)	|	VoC_add16_rd(REG0,REG0,0x6e9)(hi)
0xD80006E9,	//0x0daa		VoC_lw16_p(REG0,REG0,DEFAULT)	|	VoC_add16_rd(REG1,REG1,0x6e9)(hi)
0x2B80D811,	//0x0dac		VoC_jal(Cooland_InstantPower)(lo)	|	VoC_lw16_p(REG1,REG1,DEFAULT)
0xFF270BBB,	//0x0dae		VoC_movreg32(RL7,ACC0,DEFAULT)	|	VoC_jal(Cooland_InstantPower)(hi)
0xF5C270F9,	//0x0db0		VoC_lw16i_short(FORMATX,0xfffffff8,IN_PARALLEL)	|	VoC_lw16i_short(FORMAT32,0x7,DEFAULT)
0x0AA00A81,	//0x0db2		VoC_lw16i(REG1,0xaa0)
0x06DF0709,	//0x0db4		VoC_add16_rd(REG1,REG1,0x6df)
0x40381401,	//0x0db6		VoC_lw16_d(REG1,0x4038)
0xFFC0598C,	//0x0db8		VoC_NAD(IN_PARALLEL)	|	VoC_lw32_p(ACC0,REG1,DEFAULT)
0x08862B80,	//0x0dba		VoC_jal(Coolsand_FirstOrderIIRSmooth2)
0x0DC03344,	//0x0dbc		VoC_bnez32_r(Coolsand_ControlLogicDTD_L0,ACC0)
0xE0097028,	//0x0dbe		VoC_lw16i_short(ACC0_HI,0x0,IN_PARALLEL)	|	VoC_lw16i_short(ACC0_LO,0x1,DEFAULT)
		//0x0dc0		Coolsand_ControlLogicDTD_L0
0x061C0A80,	//0x0dc0		VoC_lw16i(REG0,0x61c)
0x06260A81,	//0x0dc2		VoC_lw16i(REG1,0x626)
0x06E90700,	//0x0dc4		VoC_add16_rd(REG0,REG0,0x6e9)
0x06E90709,	//0x0dc6		VoC_add16_rd(REG1,REG1,0x6e9)
0xD811D800,	//0x0dc8		VoC_lw16_p(REG1,REG1,DEFAULT)	|	VoC_lw16_p(REG0,REG0,DEFAULT)
0x0AA00A82,	//0x0dca		VoC_lw16i(REG2,0xaa0)
0x06DF0712,	//0x0dcc		VoC_add16_rd(REG2,REG2,0x6df)
0xDD94FFC0,	//0x0dce		VoC_sw32_p(ACC0,REG2,DEFAULT)	|	VoC_NOP
0x0BBB2B80,	//0x0dd0		VoC_jal(Cooland_InstantPower)
0x70F9FF27,	//0x0dd2		VoC_lw16i_short(FORMAT32,0x7,DEFAULT)	|	VoC_movreg32(RL7,ACC0,DEFAULT)
0x0A81F5C2,	//0x0dd4		VoC_lw16i(REG1,0xaa4)(lo)	|	VoC_lw16i_short(FORMATX,0xfffffff8,IN_PARALLEL)
0x07090AA4,	//0x0dd6		VoC_add16_rd(REG1,REG1,0x6df)(lo)	|	VoC_lw16i(REG1,0xaa4)(hi)
0x140106DF,	//0x0dd8		VoC_lw16_d(REG1,0x4038)(lo)	|	VoC_add16_rd(REG1,REG1,0x6df)(hi)
0xD98C4038,	//0x0dda		VoC_lw32_p(ACC0,REG1,DEFAULT)	|	VoC_lw16_d(REG1,0x4038)(hi)
0x08862B80,	//0x0ddc		VoC_jal(Coolsand_FirstOrderIIRSmooth2)
0x0DE23344,	//0x0dde		VoC_bnez32_r(Coolsand_ControlLogicDTD_L1,ACC0)
0xE0097028,	//0x0de0		VoC_lw16i_short(ACC0_HI,0x0,IN_PARALLEL)	|	VoC_lw16i_short(ACC0_LO,0x1,DEFAULT)
		//0x0de2		Coolsand_ControlLogicDTD_L1
0x04040A80,	//0x0de2		VoC_lw16i(REG0,0x404)
0x04140A81,	//0x0de4		VoC_lw16i(REG1,0x414)
0x06E90700,	//0x0de6		VoC_add16_rd(REG0,REG0,0x6e9)
0x06E90709,	//0x0de8		VoC_add16_rd(REG1,REG1,0x6e9)
0xD811D800,	//0x0dea		VoC_lw16_p(REG1,REG1,DEFAULT)	|	VoC_lw16_p(REG0,REG0,DEFAULT)
0x061C0A82,	//0x0dec		VoC_lw16i(REG2,0x61c)
0x06260A83,	//0x0dee		VoC_lw16i(REG3,0x626)
0x06E90712,	//0x0df0		VoC_add16_rd(REG2,REG2,0x6e9)
0x06E9071B,	//0x0df2		VoC_add16_rd(REG3,REG3,0x6e9)
0xD833D822,	//0x0df4		VoC_lw16_p(REG3,REG3,DEFAULT)	|	VoC_lw16_p(REG2,REG2,DEFAULT)
0xC2C94210,	//0x0df6		VoC_sub16_rr(REG1,REG3,REG1,IN_PARALLEL)	|	VoC_sub16_rr(REG0,REG0,REG2,DEFAULT)
0x0AA40A82,	//0x0df8		VoC_lw16i(REG2,0xaa4)
0x06DF0712,	//0x0dfa		VoC_add16_rd(REG2,REG2,0x6df)
0xDD94DF40,	//0x0dfc		VoC_sw32_p(ACC0,REG2,DEFAULT)	|	VoC_push32(REG01,DEFAULT)
0x0BBB2B80,	//0x0dfe		VoC_jal(Cooland_InstantPower)
0x70F9FF27,	//0x0e00		VoC_lw16i_short(FORMAT32,0x7,DEFAULT)	|	VoC_movreg32(RL7,ACC0,DEFAULT)
0x0A81F5C2,	//0x0e02		VoC_lw16i(REG1,0xaa8)(lo)	|	VoC_lw16i_short(FORMATX,0xfffffff8,IN_PARALLEL)
0x07090AA8,	//0x0e04		VoC_add16_rd(REG1,REG1,0x6df)(lo)	|	VoC_lw16i(REG1,0xaa8)(hi)
0x140106DF,	//0x0e06		VoC_lw16_d(REG1,0x4038)(lo)	|	VoC_add16_rd(REG1,REG1,0x6df)(hi)
0xD98C4038,	//0x0e08		VoC_lw32_p(ACC0,REG1,DEFAULT)	|	VoC_lw16_d(REG1,0x4038)(hi)
0x08862B80,	//0x0e0a		VoC_jal(Coolsand_FirstOrderIIRSmooth2)
0x0E103344,	//0x0e0c		VoC_bnez32_r(Coolsand_ControlLogicDTD_L2,ACC0)
0xE0097028,	//0x0e0e		VoC_lw16i_short(ACC0_HI,0x0,IN_PARALLEL)	|	VoC_lw16i_short(ACC0_LO,0x1,DEFAULT)
		//0x0e10		Coolsand_ControlLogicDTD_L2
0x0AA80A82,	//0x0e10		VoC_lw16i(REG2,0xaa8)
0x06DF0712,	//0x0e12		VoC_add16_rd(REG2,REG2,0x6df)
0xDD94FFC0,	//0x0e14		VoC_sw32_p(ACC0,REG2,DEFAULT)	|	VoC_NOP
0x0AA00A82,	//0x0e16		VoC_lw16i(REG2,0xaa0)
0x06DF0712,	//0x0e18		VoC_add16_rd(REG2,REG2,0x6df)
0xD995FFC0,	//0x0e1a		VoC_lw32_p(ACC1,REG2,DEFAULT)	|	VoC_NOP
0x0AAC0A82,	//0x0e1c		VoC_lw16i(REG2,0xaac)
0x06DF0712,	//0x0e1e		VoC_add16_rd(REG2,REG2,0x6df)
0xD994FFC0,	//0x0e20		VoC_lw32_p(ACC0,REG2,DEFAULT)	|	VoC_NOP
0x0B162B80,	//0x0e22		VoC_jal(Coolsand_InstantSNR)
0xE0727107,	//0x0e24		VoC_lw16i_short(REG2,0x7,IN_PARALLEL)	|	VoC_lw16i_short(REG7,0x8,DEFAULT)
0x0AA00A80,	//0x0e26		VoC_lw16i(REG0,0xaa0)
0x0AAC0A81,	//0x0e28		VoC_lw16i(REG1,0xaac)
0x06DF0700,	//0x0e2a		VoC_add16_rd(REG0,REG0,0x6df)
0x06DF0709,	//0x0e2c		VoC_add16_rd(REG1,REG1,0x6df)
0x0ABC1507,	//0x0e2e		VoC_sw16_d(REG7,0xabc)
0x0ABD1502,	//0x0e30		VoC_sw16_d(REG2,0xabd)
0x07211406,	//0x0e32		VoC_lw16_d(REG6,0x721)
0x0AB00A87,	//0x0e34		VoC_lw16i(REG7,0xab0)
0x06DF073F,	//0x0e36		VoC_add16_rd(REG7,REG7,0x6df)
0x40381402,	//0x0e38		VoC_lw16_d(REG2,0x4038)
0x0B282B80,	//0x0e3a		VoC_jal(Coolsand_OverallNoiseEst)
0xF4397000,	//0x0e3c		VoC_lw16i_short(FORMAT32,0x7,IN_PARALLEL)	|	VoC_lw16i_short(REG0,0x0,DEFAULT)
0x04040A82,	//0x0e3e		VoC_lw16i(REG2,0x404)
0x04140A83,	//0x0e40		VoC_lw16i(REG3,0x414)
0x06E90712,	//0x0e42		VoC_add16_rd(REG2,REG2,0x6e9)
0x06E9071B,	//0x0e44		VoC_add16_rd(REG3,REG3,0x6e9)
0xD833D822,	//0x0e46		VoC_lw16_p(REG3,REG3,DEFAULT)	|	VoC_lw16_p(REG2,REG2,DEFAULT)
0x061C0A84,	//0x0e48		VoC_lw16i(REG4,0x61c)
0x06260A85,	//0x0e4a		VoC_lw16i(REG5,0x626)
0x06E90724,	//0x0e4c		VoC_add16_rd(REG4,REG4,0x6e9)
0x06E9072D,	//0x0e4e		VoC_add16_rd(REG5,REG5,0x6e9)
0xD855D844,	//0x0e50		VoC_lw16_p(REG5,REG5,DEFAULT)	|	VoC_lw16_p(REG4,REG4,DEFAULT)
0xFFC0422D,	//0x0e52		VoC_NAD(IN_PARALLEL)	|	VoC_sub16_rr(REG5,REG0,REG5,DEFAULT)
0x0F502B80,	//0x0e54		VoC_jal(Coolsand_CmplxMul)
0xF5C270F9,	//0x0e56		VoC_lw16i_short(FORMATX,0xfffffff8,IN_PARALLEL)	|	VoC_lw16i_short(FORMAT32,0x7,DEFAULT)
0x40381401,	//0x0e58		VoC_lw16_d(REG1,0x4038)
0xFF2F7F26,	//0x0e5a		VoC_movreg32(RL7,ACC1,IN_PARALLEL)	|	VoC_movreg32(RL6,ACC0,DEFAULT)
0x0A900A82,	//0x0e5c		VoC_lw16i(REG2,0xa90)
0x0A940A83,	//0x0e5e		VoC_lw16i(REG3,0xa94)
0x06DF0712,	//0x0e60		VoC_add16_rd(REG2,REG2,0x6df)
0x06DF071B,	//0x0e62		VoC_add16_rd(REG3,REG3,0x6df)
0xD99DD994,	//0x0e64		VoC_lw32_p(ACC1,REG3,DEFAULT)	|	VoC_lw32_p(ACC0,REG2,DEFAULT)
0x0F662B80,	//0x0e66		VoC_jal(Coolsand_Double_FirstOrderIIRSmooth2)
0xF4395F02,	//0x0e68		VoC_lw16i_short(FORMAT32,0x7,IN_PARALLEL)	|	VoC_pop32(REG45,DEFAULT)
0x0A900A82,	//0x0e6a		VoC_lw16i(REG2,0xa90)
0x0A940A83,	//0x0e6c		VoC_lw16i(REG3,0xa94)
0x06DF0712,	//0x0e6e		VoC_add16_rd(REG2,REG2,0x6df)
0x06DF071B,	//0x0e70		VoC_add16_rd(REG3,REG3,0x6df)
0xDD9DDD94,	//0x0e72		VoC_sw32_p(ACC1,REG3,DEFAULT)	|	VoC_sw32_p(ACC0,REG2,DEFAULT)
0x04040A82,	//0x0e74		VoC_lw16i(REG2,0x404)
0x04140A83,	//0x0e76		VoC_lw16i(REG3,0x414)
0x06E90712,	//0x0e78		VoC_add16_rd(REG2,REG2,0x6e9)
0x06E9071B,	//0x0e7a		VoC_add16_rd(REG3,REG3,0x6e9)
0xD833D822,	//0x0e7c		VoC_lw16_p(REG3,REG3,DEFAULT)	|	VoC_lw16_p(REG2,REG2,DEFAULT)
0x0F502B80,	//0x0e7e		VoC_jal(Coolsand_CmplxMul)
0xF5C270F9,	//0x0e80		VoC_lw16i_short(FORMATX,0xfffffff8,IN_PARALLEL)	|	VoC_lw16i_short(FORMAT32,0x7,DEFAULT)
0x40381401,	//0x0e82		VoC_lw16_d(REG1,0x4038)
0xFF2F7F26,	//0x0e84		VoC_movreg32(RL7,ACC1,IN_PARALLEL)	|	VoC_movreg32(RL6,ACC0,DEFAULT)
0x0A980A82,	//0x0e86		VoC_lw16i(REG2,0xa98)
0x0A9C0A83,	//0x0e88		VoC_lw16i(REG3,0xa9c)
0x06DF0712,	//0x0e8a		VoC_add16_rd(REG2,REG2,0x6df)
0x06DF071B,	//0x0e8c		VoC_add16_rd(REG3,REG3,0x6df)
0xD99DD994,	//0x0e8e		VoC_lw32_p(ACC1,REG3,DEFAULT)	|	VoC_lw32_p(ACC0,REG2,DEFAULT)
0x0F662B80,	//0x0e90		VoC_jal(Coolsand_Double_FirstOrderIIRSmooth2)
0x0A980A82,	//0x0e92		VoC_lw16i(REG2,0xa98)
0x0A9C0A83,	//0x0e94		VoC_lw16i(REG3,0xa9c)
0x06DF0712,	//0x0e96		VoC_add16_rd(REG2,REG2,0x6df)
0x06DF071B,	//0x0e98		VoC_add16_rd(REG3,REG3,0x6df)
0xDD9DDD94,	//0x0e9a		VoC_sw32_p(ACC1,REG3,DEFAULT)	|	VoC_sw32_p(ACC0,REG2,DEFAULT)
0x07A42B80,	//0x0e9c		VoC_jal(Coolsand_CmplxAppxNorm_int)
0xE01A7BC4,	//0x0e9e		VoC_lw16i_short(ACC1_LO,0x1,IN_PARALLEL)	|	VoC_shr32_ri(ACC0,0xfffffff8,DEFAULT)
0xE00B7A44,	//0x0ea0		VoC_lw16i_short(ACC1_HI,0x0,IN_PARALLEL)	|	VoC_shr32_ri(ACC0,0x8,DEFAULT)
0xE0877BB5,	//0x0ea2		VoC_lw16i_short(REG7,0x8,IN_PARALLEL)	|	VoC_shr32_ri(ACC1,0xfffffff6,DEFAULT)
0x0EA83625,	//0x0ea4		VoC_bgt32_rr(Coolsand_ControlLogicDTD_L3,ACC0,ACC1)
0xFFC07007,	//0x0ea6		VoC_NAD(IN_PARALLEL)	|	VoC_lw16i_short(REG7,0x0,DEFAULT)
		//0x0ea8		Coolsand_ControlLogicDTD_L3
0x0AA00A82,	//0x0ea8		VoC_lw16i(REG2,0xaa0)
0x06DF0712,	//0x0eaa		VoC_add16_rd(REG2,REG2,0x6df)
0x0AAC0A83,	//0x0eac		VoC_lw16i(REG3,0xaac)
0x06DF071B,	//0x0eae		VoC_add16_rd(REG3,REG3,0x6df)
0x9599D996,	//0x0eb0		VoC_sub32_rp(REG23,RL6,REG3,DEFAULT)	|	VoC_lw32_p(RL6,REG2,DEFAULT)
0xF4017EBC,	//0x0eb2		VoC_lw16i_short(FORMAT32,0x0,IN_PARALLEL)	|	VoC_shr32_rr(ACC0,REG7,DEFAULT)
0xFBF96106,	//0x0eb4		VoC_shr32_ri(REG23,0xffffffff,IN_PARALLEL)	|	VoC_movreg16(REG6,ACC0_LO,DEFAULT)
0xF90A4DB6,	//0x0eb6		VoC_shru16_ri(REG2,0x1,IN_PARALLEL)	|	VoC_multf32_rr(RL6,REG6,REG6,DEFAULT)
0x40391400,	//0x0eb8		VoC_lw16_d(REG0,0x4039)
0xE08170E6,	//0x0eba		VoC_lw16i_short(REG1,0x8,IN_PARALLEL)	|	VoC_lw16i_short(REG6,0x7,DEFAULT)
0xC3C941BE,	//0x0ebc		VoC_sub16_rr(REG1,REG7,REG1,IN_PARALLEL)	|	VoC_add16_rr(REG6,REG6,REG7,DEFAULT)
0x0AA80A84,	//0x0ebe		VoC_lw16i(REG4,0xaa8)
0x06DF0724,	//0x0ec0		VoC_add16_rd(REG4,REG4,0x6df)
0xD9A2FFC0,	//0x0ec2		VoC_lw32_p(REG45,REG4,DEFAULT)	|	VoC_NOP
0xFBFA60D9,	//0x0ec4		VoC_shr32_ri(REG45,0xffffffff,IN_PARALLEL)	|	VoC_movreg16(FORMAT32,REG6,DEFAULT)
0xF90C603A,	//0x0ec6		VoC_shru16_ri(REG4,0x1,IN_PARALLEL)	|	VoC_movreg16(FORMATX,REG1,DEFAULT)
0xCD054C84,	//0x0ec8		VoC_multf32_rr(ACC1,REG4,REG0,IN_PARALLEL)	|	VoC_multf32_rr(ACC0,REG2,REG0,DEFAULT)
0xCEA84E58,	//0x0eca		VoC_macX_rr(REG5,REG0,IN_PARALLEL)	|	VoC_macX_rr(REG3,REG0,DEFAULT)
0x7F21F019,	//0x0ecc		VoC_movreg32(REG23,ACC0,DEFAULT)	|	VoC_lw16i_short(FORMAT32,0x0,DEFAULT)
0x7B81FF2A,	//0x0ece		VoC_shr32_ri(REG23,0xfffffff0,DEFAULT)	|	VoC_movreg32(REG45,ACC1,IN_PARALLEL)
0x3103FB82,	//0x0ed0		VoC_bgtz16_r(Coolsand_ControlLogicDTD_L4,REG3)(lo)	|	VoC_shr32_ri(REG45,0xfffffff0,IN_PARALLEL)
0xF0230ED4,	//0x0ed2		VoC_lw16i_short(REG3,0x1,DEFAULT)	|	VoC_bgtz16_r(Coolsand_ControlLogicDTD_L4,REG3)(hi)
		//0x0ed4		Coolsand_ControlLogicDTD_L4
0x0ED831C5,	//0x0ed4		VoC_bnez16_r(Coolsand_ControlLogicDTD_L5,REG5)
0xFFC07025,	//0x0ed6		VoC_NAD(IN_PARALLEL)	|	VoC_lw16i_short(REG5,0x1,DEFAULT)
		//0x0ed8		Coolsand_ControlLogicDTD_L5
0xF5C272E6,	//0x0ed8		VoC_lw16i_short(FORMATX,0xfffffff8,IN_PARALLEL)	|	VoC_lw16i_short(REG6,0x17,DEFAULT)
0xC3BE4CEA,	//0x0eda		VoC_sub16_rr(REG6,REG6,REG7,IN_PARALLEL)	|	VoC_multf32_rr(REG45,REG3,REG5,DEFAULT)
0xF8FE7327,	//0x0edc		VoC_shr16_ri(REG6,0xffffffff,IN_PARALLEL)	|	VoC_lw16i_short(REG7,0x19,DEFAULT)
0xF4397BFA,	//0x0ede		VoC_lw16i_short(FORMAT32,0x7,IN_PARALLEL)	|	VoC_shr32_ri(REG45,0xffffffff,DEFAULT)
0xDF42790C,	//0x0ee0		VoC_push32(REG45,IN_PARALLEL)	|	VoC_shru16_ri(REG4,0x1,DEFAULT)
0x403C1402,	//0x0ee2		VoC_lw16_d(REG2,0x403c)
0xCE6ACD14,	//0x0ee4		VoC_macX_rr(REG5,REG2,DEFAULT)	|	VoC_multf32_rr(ACC0,REG4,REG2,DEFAULT)
0xFF22FFC0,	//0x0ee6		VoC_movreg32(REG45,ACC0,DEFAULT)	|	VoC_NOP
0xF90CFBFA,	//0x0ee8		VoC_shru16_ri(REG4,0x1,DEFAULT)	|	VoC_shr32_ri(REG45,0xffffffff,DEFAULT)
0xCE6ACD14,	//0x0eea		VoC_macX_rr(REG5,REG2,DEFAULT)	|	VoC_multf32_rr(ACC0,REG4,REG2,DEFAULT)
0x4BA7FFC0,	//0x0eec		VoC_sub32_rr(RL7,RL6,ACC0,DEFAULT)	|	VoC_NOP
0x7EB7C3BE,	//0x0eee		VoC_shr32_rr(RL7,REG6,DEFAULT)	|	VoC_sub16_rr(REG6,REG6,REG7,IN_PARALLEL)
0x0A84DF46,	//0x0ef0		VoC_lw16i(REG4,0xa90)(lo)	|	VoC_push32(RL6,IN_PARALLEL)
0x0A850A90,	//0x0ef2		VoC_lw16i(REG5,0xa94)(lo)	|	VoC_lw16i(REG4,0xa90)(hi)
0x0A870A94,	//0x0ef4		VoC_lw16i(REG7,0xab4)(lo)	|	VoC_lw16i(REG5,0xa94)(hi)
0x07240AB4,	//0x0ef6		VoC_add16_rd(REG4,REG4,0x6df)(lo)	|	VoC_lw16i(REG7,0xab4)(hi)
0x072D06DF,	//0x0ef8		VoC_add16_rd(REG5,REG5,0x6df)(lo)	|	VoC_add16_rd(REG4,REG4,0x6df)(hi)
0x073F06DF,	//0x0efa		VoC_add16_rd(REG7,REG7,0x6df)(lo)	|	VoC_add16_rd(REG5,REG5,0x6df)(hi)
0xD9A406DF,	//0x0efc		VoC_lw32_p(ACC0,REG4,DEFAULT)	|	VoC_add16_rd(REG7,REG7,0x6df)(hi)
0xDDBFD9AD,	//0x0efe		VoC_sw32_p(RL7,REG7,DEFAULT)	|	VoC_lw32_p(ACC1,REG5,DEFAULT)
0x07A42B80,	//0x0f00		VoC_jal(Coolsand_CmplxAppxNorm_int)
0xE01A7BC4,	//0x0f02		VoC_lw16i_short(ACC1_LO,0x1,IN_PARALLEL)	|	VoC_shr32_ri(ACC0,0xfffffff8,DEFAULT)
0xE00B7A44,	//0x0f04		VoC_lw16i_short(ACC1_HI,0x0,IN_PARALLEL)	|	VoC_shr32_ri(ACC0,0x8,DEFAULT)
0xE0877BB5,	//0x0f06		VoC_lw16i_short(REG7,0x8,IN_PARALLEL)	|	VoC_shr32_ri(ACC1,0xfffffff6,DEFAULT)
0x0F0C3625,	//0x0f08		VoC_bgt32_rr(Coolsand_ControlLogicDTD_L6,ACC0,ACC1)
0xFFC07007,	//0x0f0a		VoC_NAD(IN_PARALLEL)	|	VoC_lw16i_short(REG7,0x0,DEFAULT)
		//0x0f0c		Coolsand_ControlLogicDTD_L6
0x0AA00A82,	//0x0f0c		VoC_lw16i(REG2,0xaa0)
0x06DF0712,	//0x0f0e		VoC_add16_rd(REG2,REG2,0x6df)
0xF4017EBC,	//0x0f10		VoC_lw16i_short(FORMAT32,0x0,IN_PARALLEL)	|	VoC_shr32_rr(ACC0,REG7,DEFAULT)
0x6106D991,	//0x0f12		VoC_movreg16(REG6,ACC0_LO,DEFAULT)	|	VoC_lw32_p(REG23,REG2,DEFAULT)
0x4DB6FBF9,	//0x0f14		VoC_multf32_rr(RL6,REG6,REG6,DEFAULT)	|	VoC_shr32_ri(REG23,0xffffffff,IN_PARALLEL)
0x1400F90A,	//0x0f16		VoC_lw16_d(REG0,0x403a)(lo)	|	VoC_shru16_ri(REG2,0x1,IN_PARALLEL)
0x70E6403A,	//0x0f18		VoC_lw16i_short(REG6,0x7,DEFAULT)	|	VoC_lw16_d(REG0,0x403a)(hi)
0x41BEE081,	//0x0f1a		VoC_add16_rr(REG6,REG6,REG7,DEFAULT)	|	VoC_lw16i_short(REG1,0x8,IN_PARALLEL)
0x0A84C3C9,	//0x0f1c		VoC_lw16i(REG4,0xaa4)(lo)	|	VoC_sub16_rr(REG1,REG7,REG1,IN_PARALLEL)
0x07240AA4,	//0x0f1e		VoC_add16_rd(REG4,REG4,0x6df)(lo)	|	VoC_lw16i(REG4,0xaa4)(hi)
0xFFC006DF,	//0x0f20		VoC_NOP	|	VoC_add16_rd(REG4,REG4,0x6df)(hi)
0x60D9D9A2,	//0x0f22		VoC_movreg16(FORMAT32,REG6,DEFAULT)	|	VoC_lw32_p(REG45,REG4,DEFAULT)
0x603AFBFA,	//0x0f24		VoC_movreg16(FORMATX,REG1,DEFAULT)	|	VoC_shr32_ri(REG45,0xffffffff,IN_PARALLEL)
0x4C84F90C,	//0x0f26		VoC_multf32_rr(ACC0,REG2,REG0,DEFAULT)	|	VoC_shru16_ri(REG4,0x1,IN_PARALLEL)
0x4E58CD05,	//0x0f28		VoC_macX_rr(REG3,REG0,DEFAULT)	|	VoC_multf32_rr(ACC1,REG4,REG0,IN_PARALLEL)
0xF019CEA8,	//0x0f2a		VoC_lw16i_short(FORMAT32,0x0,DEFAULT)	|	VoC_macX_rr(REG5,REG0,IN_PARALLEL)
0xFF2A7F21,	//0x0f2c		VoC_movreg32(REG45,ACC1,IN_PARALLEL)	|	VoC_movreg32(REG23,ACC0,DEFAULT)
0xFB827B81,	//0x0f2e		VoC_shr32_ri(REG45,0xfffffff0,IN_PARALLEL)	|	VoC_shr32_ri(REG23,0xfffffff0,DEFAULT)
0x0F3431C3,	//0x0f30		VoC_bnez16_r(Coolsand_ControlLogicDTD_L7,REG3)
0xFFC07023,	//0x0f32		VoC_NAD(IN_PARALLEL)	|	VoC_lw16i_short(REG3,0x1,DEFAULT)
		//0x0f34		Coolsand_ControlLogicDTD_L7
0x0F3731C5,	//0x0f34		VoC_bnez16_r(Coolsand_ControlLogicDTD_L8,REG5)
0xF2E6F025,	//0x0f36		VoC_lw16i_short(REG6,0x17,DEFAULT)	|	VoC_lw16i_short(REG5,0x1,DEFAULT)
		//0x0f37		Coolsand_ControlLogicDTD_L8
0xC3BE4CEC,	//0x0f38		VoC_sub16_rr(REG6,REG6,REG7,IN_PARALLEL)	|	VoC_multf32_rr(ACC0,REG3,REG5,DEFAULT)
0xF8FE7325,	//0x0f3a		VoC_shr16_ri(REG6,0xffffffff,IN_PARALLEL)	|	VoC_lw16i_short(REG5,0x19,DEFAULT)
0xC3AE4BA5,	//0x0f3c		VoC_sub16_rr(REG6,REG6,REG5,IN_PARALLEL)	|	VoC_sub32_rr(ACC1,RL6,ACC0,DEFAULT)
0xDF077EB5,	//0x0f3e		VoC_pop32(RL7,IN_PARALLEL)	|	VoC_shr32_rr(ACC1,REG6,DEFAULT)
0x0AB80A86,	//0x0f40		VoC_lw16i(REG6,0xab8)
0x06DF0736,	//0x0f42		VoC_add16_rd(REG6,REG6,0x6df)
0xDF057000,	//0x0f44		VoC_pop32(ACC1,IN_PARALLEL)	|	VoC_lw16i_short(REG0,0x0,DEFAULT)
0x36AFDDB5,	//0x0f46		VoC_bngt32_rr(Coolsand_ControlLogicDTD_L9,ACC1,RL7)(lo)	|	VoC_sw32_p(ACC1,REG6,DEFAULT)
0x36B40F4C,	//0x0f48		VoC_bngt32_rr(Coolsand_ControlLogicDTD_L9,RL6,ACC0)(lo)	|	VoC_bngt32_rr(Coolsand_ControlLogicDTD_L9,ACC1,RL7)(hi)
0xF0200F4C,	//0x0f4a		VoC_lw16i_short(REG0,0x1,DEFAULT)	|	VoC_bngt32_rr(Coolsand_ControlLogicDTD_L9,RL6,ACC0)(hi)
		//0x0f4c		Coolsand_ControlLogicDTD_L9
0xFFC0DFA9,	//0x0f4c		VoC_NOP	|	VoC_pop16(RA,DEFAULT)
0xFFC06580,	//0x0f4e		VoC_NAD(IN_PARALLEL)	|	VoC_return
		//0x0f50		Coolsand_CmplxMul
0xCD5D4D14,	//0x0f50		VoC_multf32_rr(ACC1,REG5,REG3,IN_PARALLEL)	|	VoC_multf32_rr(ACC0,REG4,REG2,DEFAULT)
0xCD554D1C,	//0x0f52		VoC_multf32_rr(ACC1,REG5,REG2,IN_PARALLEL)	|	VoC_multf32_rr(ACC0,REG4,REG3,DEFAULT)
0xFF2F7F26,	//0x0f54		VoC_movreg32(RL7,ACC1,IN_PARALLEL)	|	VoC_movreg32(RL6,ACC0,DEFAULT)
0xFBC57BC4,	//0x0f56		VoC_shr32_ri(ACC1,0xfffffff8,IN_PARALLEL)	|	VoC_shr32_ri(ACC0,0xfffffff8,DEFAULT)
0xFA457A44,	//0x0f58		VoC_shr32_ri(ACC1,0x8,IN_PARALLEL)	|	VoC_shr32_ri(ACC0,0x8,DEFAULT)
0xFBC77BC6,	//0x0f5a		VoC_shr32_ri(RL7,0xfffffff8,IN_PARALLEL)	|	VoC_shr32_ri(RL6,0xfffffff8,DEFAULT)
0xFA477A46,	//0x0f5c		VoC_shr32_ri(RL7,0x8,IN_PARALLEL)	|	VoC_shr32_ri(RL6,0x8,DEFAULT)
0xC92D4BBC,	//0x0f5e		VoC_add32_rr(ACC1,ACC0,ACC1,IN_PARALLEL)	|	VoC_sub32_rr(ACC0,RL6,RL7,DEFAULT)
0xFBC57BC4,	//0x0f60		VoC_shr32_ri(ACC1,0xfffffff8,IN_PARALLEL)	|	VoC_shr32_ri(ACC0,0xfffffff8,DEFAULT)
0xFA457A44,	//0x0f62		VoC_shr32_ri(ACC1,0x8,IN_PARALLEL)	|	VoC_shr32_ri(ACC0,0x8,DEFAULT)
0xFFC06580,	//0x0f64		VoC_NAD(IN_PARALLEL)	|	VoC_return
		//0x0f66		Coolsand_Double_FirstOrderIIRSmooth2
0xCBEA4BA1,	//0x0f66		VoC_sub32_rr(REG45,RL7,ACC1,IN_PARALLEL)	|	VoC_sub32_rr(REG23,RL6,ACC0,DEFAULT)
0xFBC2FBC1,	//0x0f68		VoC_shr32_ri(REG45,0xfffffff8,DEFAULT)	|	VoC_shr32_ri(REG23,0xfffffff8,DEFAULT)
0xFA3A7A39,	//0x0f6a		VoC_shr32_ri(REG45,0x7,IN_PARALLEL)	|	VoC_shr32_ri(REG23,0x7,DEFAULT)
0xF90C790A,	//0x0f6c		VoC_shru16_ri(REG4,0x1,IN_PARALLEL)	|	VoC_shru16_ri(REG2,0x1,DEFAULT)
0xCE214E11,	//0x0f6e		VoC_mac32_rr(REG4,REG1,IN_PARALLEL)	|	VoC_mac32_rr(REG2,REG1,DEFAULT)
0xCEA94E59,	//0x0f70		VoC_macX_rr(REG5,REG1,IN_PARALLEL)	|	VoC_macX_rr(REG3,REG1,DEFAULT)
0xFFC0E580,	//0x0f72		VoC_NAD	|	VoC_return
