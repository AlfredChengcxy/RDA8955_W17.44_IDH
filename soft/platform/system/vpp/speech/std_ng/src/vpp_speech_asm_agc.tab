		//0x05d0		VoC_code_section_1
		//0x05d0		Agc1_Main
0xF000DFE9,	//0x05d0		VoC_lw16i_short(REG0,0x0,DEFAULT)	|	VoC_push16(RA,DEFAULT)
0xF01DF01C,	//0x05d2		VoC_lw16i_short(WRAP1,0x0,DEFAULT)	|	VoC_lw16i_short(WRAP0,0x0,DEFAULT)
0xF01FF01E,	//0x05d4		VoC_lw16i_short(WRAP3,0x0,DEFAULT)	|	VoC_lw16i_short(WRAP2,0x0,DEFAULT)
0x7FC11540,	//0x05d6		VoC_sw16_d(REG0,0xffc1)
0x003F0A96,	//0x05d8		VoC_lw16i(STATUS,0x3f)
0xF140F01B,	//0x05da		VoC_lw16i_short(REG0,0xa,DEFAULT)	|	VoC_lw16i_short(BITCACHE,0x0,DEFAULT)
0x1F400A81,	//0x05dc		VoC_lw16i(REG1,0x1f40)
0x04461500,	//0x05de		VoC_sw16_d(REG0,0x446)
0x04481501,	//0x05e0		VoC_sw16_d(REG1,0x448)
0x079A2B80,	//0x05e2		VoC_jal(Agc_Init)
0x043E1804,	//0x05e4		VoC_lw16i_set_inc(REG0,0x43e,0x1)
0x04171805,	//0x05e6		VoC_lw16i_set_inc(REG1,0x417,0x1)
0xD882E8E3,	//0x05e8		VoC_lw16inc_p(REG2,REG0,DEFAULT)	|	VoC_loop_i_short(0x7,DEFAULT)
0xDC92FFC0,	//0x05ea		VoC_sw16inc_p(REG2,REG1,DEFAULT)	|	VoC_NOP
		//0x05eb		VoC_endloop0
0xFFC0D802,	//0x05ec		VoC_NOP	|	VoC_lw16_p(REG2,REG0,DEFAULT)
0x04391502,	//0x05ee		VoC_sw16_d(REG2,0x439)
0x1401F019,	//0x05f0		VoC_lw16_d(REG1,0x43c)(lo)	|	VoC_lw16i_short(FORMAT32,0x0,DEFAULT)
0x1402043C,	//0x05f2		VoC_lw16_d(REG2,0x43d)(lo)	|	VoC_lw16_d(REG1,0x43c)(hi)
0x1403043D,	//0x05f4		VoC_lw16_d(REG3,0x43c)(lo)	|	VoC_lw16_d(REG2,0x43d)(hi)
0x1404043C,	//0x05f6		VoC_lw16_d(REG4,0x595)(lo)	|	VoC_lw16_d(REG3,0x43c)(hi)
0xC25D0595,	//0x05f8		VoC_sub16_rr(REG5,REG1,REG3,DEFAULT)	|	VoC_lw16_d(REG4,0x595)(hi)
0x059B07A6,	//0x05fa		VoC_sub16_rd(REG6,REG4,0x59b)
0xF68A4D74,	//0x05fc		VoC_movreg16(ACC1_LO,REG4,IN_PARALLEL)	|	VoC_multf32_rr(ACC0,REG5,REG6,DEFAULT)
0x043B079F,	//0x05fe		VoC_sub16_rd(REG7,REG3,0x43b)
0xF80C7005,	//0x0600		VoC_shr16_ri(REG4,0x1,IN_PARALLEL)	|	VoC_lw16i_short(REG5,0x0,DEFAULT)
0xE00B4914,	//0x0602		VoC_lw16i_short(ACC1_HI,0x0,IN_PARALLEL)	|	VoC_add32_rr(ACC0,ACC0,REG45,DEFAULT)
0x07C62B80,	//0x0604		VoC_jal(CII_div_mode32)
0xC1EDE1C5,	//0x0606		VoC_add16_rr(REG5,REG7,REG5,DEFAULT)	|	VoC_movreg16(REG5,RL7_LO,DEFAULT)
0x060C34BD,	//0x0608		VoC_bngt16_rr(LABLE_MAX_GAIN,REG7,REG5)
0xFFC060E5,	//0x060a		VoC_NAD(IN_PARALLEL)	|	VoC_movreg16(REG5,REG7,DEFAULT)
		//0x060c		LABLE_MAX_GAIN
0x045E1505,	//0x060c		VoC_sw16_d(REG5,0x45e)
0x4D7CE147,	//0x060e		VoC_multf32_rr(ACC0,REG5,REG7,DEFAULT)	|	VoC_movreg16(REG7,ACC1_LO,DEFAULT)
0x7007F6CA,	//0x0610		VoC_lw16i_short(REG7,0x0,DEFAULT)	|	VoC_movreg16(ACC1_LO,REG6,IN_PARALLEL)
0xC91CF80E,	//0x0612		VoC_add32_rr(ACC0,ACC0,REG67,DEFAULT)	|	VoC_shr16_ri(REG6,0x1,IN_PARALLEL)
0x07C62B80,	//0x0614		VoC_jal(CII_div_mode32)
0xC27DE1C7,	//0x0616		VoC_sub16_rr(REG5,REG1,REG7,DEFAULT)	|	VoC_movreg16(REG7,RL7_LO,DEFAULT)
0x0624340B,	//0x0618		VoC_bgt16_rr(Agc_Set_Config_L0,REG1,REG3)
0x06243182,	//0x061a		VoC_bez16_r(Agc_Set_Config_L0,REG2)
0x05971406,	//0x061c		VoC_lw16_d(REG6,0x597)
0xE00242CF,	//0x061e		VoC_lw16i_short(REG2,0x0,IN_PARALLEL)	|	VoC_sub16_rr(REG7,REG3,REG1,DEFAULT)
0xC17DC1F7,	//0x0620		VoC_add16_rr(REG5,REG5,REG7,DEFAULT)	|	VoC_add16_rr(REG7,REG7,REG6,DEFAULT)
0x059A1502,	//0x0622		VoC_sw16_d(REG2,0x59a)
		//0x0624		Agc_Set_Config_L0
0x045F1505,	//0x0624		VoC_sw16_d(REG5,0x45f)
0x4C54E142,	//0x0626		VoC_multf32_rr(ACC0,REG1,REG2,DEFAULT)	|	VoC_movreg16(REG2,ACC1_LO,DEFAULT)
0x140AE005,	//0x0628		VoC_lw16_d(ACC1_LO,0x595)(lo)	|	VoC_lw16i_short(REG5,0x0,IN_PARALLEL)
0xC9140595,	//0x062a		VoC_add32_rr(ACC0,ACC0,REG45,DEFAULT)	|	VoC_lw16_d(ACC1_LO,0x595)(hi)
0x07C62B80,	//0x062c		VoC_jal(CII_div_mode32)
0x3205E1C5,	//0x062e		VoC_bltz16_r(Agc_Set_Config_L1,REG5)(lo)	|	VoC_movreg16(REG5,RL7_LO,DEFAULT)
0x481D0633,	//0x0630		VoC_blt16_rd(Agc_Set_Config_L2,REG5,0x584)(lo)	|	VoC_bltz16_r(Agc_Set_Config_L1,REG5)(hi)
0xE5800584,	//0x0632		VoC_return	|	VoC_blt16_rd(Agc_Set_Config_L2,REG5,0x584)(hi)
		//0x0633		Agc_Set_Config_L1
		//0x0634		Agc_Set_Config_L2
0x04601505,	//0x0634		VoC_sw16_d(REG5,0x460)
0x05040A80,	//0x0636		VoC_lw16i(REG0,0x504)
0x1406C028,	//0x0638		VoC_lw16_d(REG6,0x59a)(lo)	|	VoC_add16_rr(REG0,REG0,REG5,DEFAULT)
0x5800059A,	//0x063a		VoC_lw16_p(REG0,REG0,DEFAULT)	|	VoC_lw16_d(REG6,0x59a)(hi)
0x6088C1A4,	//0x063c		VoC_movreg16(ACC0_LO,REG4,DEFAULT)	|	VoC_add16_rr(REG4,REG6,REG4,IN_PARALLEL)
0x1500E009,	//0x063e		VoC_sw16_d(REG0,0x461)(lo)	|	VoC_lw16i_short(ACC0_HI,0x0,IN_PARALLEL)
0xFFC00461,	//0x0640		VoC_NAD	|	VoC_sw16_d(REG0,0x461)(hi)
0x07C62B80,	//0x0642		VoC_jal(CII_div_mode32)
0xC2F37F3B,	//0x0644		VoC_sub16_rr(REG3,REG3,REG6,IN_PARALLEL)	|	VoC_movreg32(REG67,RL7,DEFAULT)
0x05921404,	//0x0646		VoC_lw16_d(REG4,0x592)
0x043B0736,	//0x0648		VoC_add16_rd(REG6,REG6,0x43b)
0xE0096068,	//0x064a		VoC_lw16i_short(ACC0_HI,0x0,IN_PARALLEL)	|	VoC_movreg16(ACC0_LO,REG3,DEFAULT)
0xF68A7B9C,	//0x064c		VoC_movreg16(ACC1_LO,REG4,IN_PARALLEL)	|	VoC_shr32_ri(ACC0,0xfffffff3,DEFAULT)
0xFB937A0D,	//0x064e		VoC_shr32_ri(REG67,0xfffffff2,IN_PARALLEL)	|	VoC_shr32_ri(ACC1,0x1,DEFAULT)
0xE1436001,	//0x0650		VoC_lw16i_short(REG3,0x14,IN_PARALLEL)	|	VoC_movreg16(REG1,REG0,DEFAULT)
0x045A1583,	//0x0652		VoC_sw32_d(REG67,0x45a)
0x07C62B80,	//0x0654		VoC_jal(CII_div_mode32)
0x00011600,	//0x0656		VoC_and16_ri(REG0,0x1)
0xF7C67909,	//0x0658		VoC_movreg16(REG6,RL7_LO,IN_PARALLEL)	|	VoC_shru16_ri(REG1,0x1,DEFAULT)
0x059C0736,	//0x065a		VoC_add16_rd(REG6,REG6,0x59c)
0xFF4477FA,	//0x065c		VoC_lw32z(ACC0,IN_PARALLEL)	|	VoC_lw16i_short(FORMATX,0xffffffff,DEFAULT)
0x06623180,	//0x065e		VoC_bez16_r(Agc_Set_Config_L3,REG0)
0xFFC06068,	//0x0660		VoC_NAD(IN_PARALLEL)	|	VoC_movreg16(ACC0_LO,REG3,DEFAULT)
		//0x0662		Agc_Set_Config_L3
0xF0054E4B,	//0x0662		VoC_lw16i_short(INC1,0x1,IN_PARALLEL)	|	VoC_macX_rr(REG1,REG3,DEFAULT)
0x04621506,	//0x0664		VoC_sw16_d(REG6,0x462)
0x1584FFC0,	//0x0666		VoC_sw32_d(ACC0,0x45c)(lo)	|	VoC_NOP
0x1804045C,	//0x0668		VoC_lw16i_set_inc(REG0,0x0,0x1)(lo)	|	VoC_sw32_d(ACC0,0x45c)(hi)
0xFFC00000,	//0x066a		VoC_NAD	|	VoC_lw16i_set_inc(REG0,0x0,0x1)(hi)
0x07952C41,	//0x066c		VoC_loop_i(0x1,0x20)
0x059B0781,	//0x066e		VoC_sub16_rd(REG1,REG0,0x59b)
0x05960A0B,	//0x0670		VoC_multf32_rd(REG67,REG1,0x596)
0x05931404,	//0x0672		VoC_lw16_d(REG4,0x593)
0x3246F009,	//0x0674		VoC_bnltz16_r(Agc_Set_Config_L4,REG6)(lo)	|	VoC_lw16i_short(ACC0_HI,0x0,DEFAULT)
0xF7E90678,	//0x0676		VoC_lw16i_short(ACC0_HI,0xffffffff,DEFAULT)	|	VoC_bnltz16_r(Agc_Set_Config_L4,REG6)(hi)
		//0x0678		Agc_Set_Config_L4
0x4E74E0C8,	//0x0678		VoC_macX_rr(REG6,REG4,DEFAULT)	|	VoC_movreg16(ACC0_LO,REG6,DEFAULT)
0x140AE00B,	//0x067a		VoC_lw16_d(ACC1_LO,0x595)(lo)	|	VoC_lw16i_short(ACC1_HI,0x0,IN_PARALLEL)
0x09240595,	//0x067c		VoC_add32_rd(ACC0,ACC0,0x588)(lo)	|	VoC_lw16_d(ACC1_LO,0x595)(hi)
0xFFC00588,	//0x067e		VoC_NAD	|	VoC_add32_rd(ACC0,ACC0,0x588)(hi)
0x081E2B80,	//0x0680		VoC_jal(Div_SignedInt)
0x0460140C,	//0x0682		VoC_lw16_d(RL6_LO,0x460)
0xFB96F00D,	//0x0684		VoC_shr32_ri(RL6,0xfffffff2,DEFAULT)	|	VoC_lw16i_short(RL6_HI,0x0,DEFAULT)
0xFF3ECBBF,	//0x0686		VoC_movreg32(RL6,RL7,DEFAULT)	|	VoC_sub32_rr(RL7,RL6,RL7,DEFAULT)
0x068C33C6,	//0x0688		VoC_bnltz32_r(Agc_ABS_0,RL6)
0x05860BB6,	//0x068a		VoC_sub32_dr(RL6,0x586,RL6)
		//0x068c		Agc_ABS_0
0xFF327F33,	//0x068c		VoC_movreg32(REG45,RL6,IN_PARALLEL)	|	VoC_movreg32(REG67,RL6,DEFAULT)
0x0A81FC73,	//0x068e		VoC_lw16i(REG1,0x504)(lo)	|	VoC_shru32_ri(REG67,0xe,DEFAULT)
0xC0710504,	//0x0690		VoC_add16_rr(REG1,REG1,REG6,DEFAULT)	|	VoC_lw16i(REG1,0x504)(hi)
0x3FFF1604,	//0x0692		VoC_and16_ri(REG4,0x3fff)
0xE0095897,	//0x0694		VoC_lw16i_short(ACC0_HI,0x0,IN_PARALLEL)	|	VoC_lw16inc_p(REG7,REG1,DEFAULT)
0xF6E8387D,	//0x0696		VoC_movreg16(ACC0_LO,REG7,IN_PARALLEL)	|	VoC_sub16_pr(REG5,REG1,REG7,DEFAULT)
0xCE2CFD94,	//0x0698		VoC_mac32_rr(REG5,REG4,DEFAULT)	|	VoC_shru32_ri(ACC0,0xfffffff2,DEFAULT)
0x04631506,	//0x069a		VoC_sw16_d(REG6,0x463)
0x04641504,	//0x069c		VoC_sw16_d(REG4,0x464)
0xFC447F22,	//0x069e		VoC_shru32_ri(ACC0,0x8,IN_PARALLEL)	|	VoC_movreg32(REG45,ACC0,DEFAULT)
0x33C7F619,	//0x06a0		VoC_bnltz32_r(Agc_Set_Config_L6,RL7)(lo)	|	VoC_lw16i_short(FORMAT32,0xfffffff0,DEFAULT)
0x7F3306E6,	//0x06a2		VoC_movreg32(REG67,RL6,DEFAULT)	|	VoC_bnltz32_r(Agc_Set_Config_L6,RL7)(hi)
0xFFC0FF44,	//0x06a4		VoC_NAD	|	VoC_lw32z(ACC0,IN_PARALLEL)
0x07D22B80,	//0x06a6		VoC_jal(Coolsand_CLZU)
0x05941401,	//0x06a8		VoC_lw16_d(REG1,0x594)
0x059D4932,	//0x06aa		VoC_blt16_rd(Agc_Set_Config_L7,REG2,0x59d)
0xF90E60C3,	//0x06ac		VoC_shru16_ri(REG6,0x1,IN_PARALLEL)	|	VoC_movreg16(REG3,REG6,DEFAULT)
0x00011603,	//0x06ae		VoC_and16_ri(REG3,0x1)
0x00480A96,	//0x06b0		VoC_lw16i(STATUS,0x48)
0x00040A96,	//0x06b2		VoC_lw16i(STATUS,0x4)
0x06B73183,	//0x06b4		VoC_bez16_r(Agc_Set_Config_L8,REG3)
0xCE71E028,	//0x06b6		VoC_macX_rr(REG6,REG1,DEFAULT)	|	VoC_movreg16(ACC0_LO,REG1,DEFAULT)
		//0x06b7		Agc_Set_Config_L8
0xFFC0CE39,	//0x06b8		VoC_NOP	|	VoC_mac32_rr(REG7,REG1,DEFAULT)
0x00080A96,	//0x06ba		VoC_lw16i(STATUS,0x8)
0xE0017C34,	//0x06bc		VoC_lw16i_short(REG1,0x0,IN_PARALLEL)	|	VoC_shru32_ri(ACC0,0x6,DEFAULT)
0x06DE2B00,	//0x06be		VoC_jump_lg(Agc_Set_Config_L11)
		//0x06c0		Agc_Set_Config_L7
0x059D0B13,	//0x06c0		VoC_sub16_dr(REG3,0x59d,REG2)
0x60C3FEDB,	//0x06c2		VoC_movreg16(REG3,REG6,DEFAULT)	|	VoC_shru32_rr(REG67,REG3,DEFAULT)
0x1603F90E,	//0x06c4		VoC_and16_ri(REG3,0x1)(lo)	|	VoC_shru16_ri(REG6,0x1,IN_PARALLEL)
0x0A960001,	//0x06c6		VoC_lw16i(STATUS,0x48)(lo)	|	VoC_and16_ri(REG3,0x1)(hi)
0x0A960048,	//0x06c8		VoC_lw16i(STATUS,0x4)(lo)	|	VoC_lw16i(STATUS,0x48)(hi)
0x31830004,	//0x06ca		VoC_bez16_r(Agc_Set_Config_L9,REG3)(lo)	|	VoC_lw16i(STATUS,0x4)(hi)
0xE02806CE,	//0x06cc		VoC_movreg16(ACC0_LO,REG1,DEFAULT)	|	VoC_bez16_r(Agc_Set_Config_L9,REG3)(hi)
		//0x06ce		Agc_Set_Config_L9
0xCE39CE71,	//0x06ce		VoC_mac32_rr(REG7,REG1,DEFAULT)	|	VoC_macX_rr(REG6,REG1,DEFAULT)
0x00080A96,	//0x06d0		VoC_lw16i(STATUS,0x8)
0x059E4882,	//0x06d2		VoC_blt16_rd(Agc_Set_Config_L10,REG2,0x59e)
0x059E0793,	//0x06d4		VoC_sub16_rd(REG3,REG2,0x59e)
0xE0017EDC,	//0x06d6		VoC_lw16i_short(REG1,0x0,IN_PARALLEL)	|	VoC_shru32_rr(ACC0,REG3,DEFAULT)
0xFFC065C6,	//0x06d8		VoC_NAD(IN_PARALLEL)	|	VoC_jump(Agc_Set_Config_L11)
		//0x06da		Agc_Set_Config_L10
0x059E0B11,	//0x06da		VoC_sub16_dr(REG1,0x59e,REG2)
0xFFC07ECA,	//0x06dc		VoC_NAD(IN_PARALLEL)	|	VoC_shru32_rr(REG45,REG1,DEFAULT)
		//0x06de		Agc_Set_Config_L11
0xFF447F23,	//0x06de		VoC_lw32z(ACC0,IN_PARALLEL)	|	VoC_movreg32(REG67,ACC0,DEFAULT)
0x06E63693,	//0x06e0		VoC_bngt32_rr(Agc_Set_Config_L6,REG45,REG67)
0x0B09CA9C,	//0x06e2		VoC_sub16_dr(REG1,0x59f,REG1)(lo)	|	VoC_sub32_rr(ACC0,REG45,REG67,DEFAULT)
0xFECC059F,	//0x06e4		VoC_shru32_rr(ACC0,REG1,DEFAULT)	|	VoC_sub16_dr(REG1,0x59f,REG1)(hi)
		//0x06e6		Agc_Set_Config_L6
0x04611401,	//0x06e6		VoC_lw16_d(REG1,0x461)
0x045E1402,	//0x06e8		VoC_lw16_d(REG2,0x45e)
0xFF447F23,	//0x06ea		VoC_lw32z(ACC0,IN_PARALLEL)	|	VoC_movreg32(REG67,ACC0,DEFAULT)
0xF9096023,	//0x06ec		VoC_shru16_ri(REG1,0x1,IN_PARALLEL)	|	VoC_movreg16(REG3,REG1,DEFAULT)
0x00011603,	//0x06ee		VoC_and16_ri(REG3,0x1)
0x06F43183,	//0x06f0		VoC_bez16_r(Agc_Set_Config_MulU0,REG3)
0xFFC06048,	//0x06f2		VoC_NAD(IN_PARALLEL)	|	VoC_movreg16(ACC0_LO,REG2,DEFAULT)
		//0x06f4		Agc_Set_Config_MulU0
0xF6C54E4A,	//0x06f4		VoC_movreg16(REG5,REG6,IN_PARALLEL)	|	VoC_macX_rr(REG1,REG2,DEFAULT)
0x04601404,	//0x06f6		VoC_lw16_d(REG4,0x460)
0xF90E7BD4,	//0x06f8		VoC_shru16_ri(REG6,0x1,IN_PARALLEL)	|	VoC_shr32_ri(ACC0,0xfffffffa,DEFAULT)
0x00011605,	//0x06fa		VoC_and16_ri(REG5,0x1)
0x700BCEF4,	//0x06fc		VoC_lw16i_short(ACC1_HI,0x0,DEFAULT)	|	VoC_msuX_rr(REG6,REG4,DEFAULT)
0x3185F68A,	//0x06fe		VoC_bez16_r(Agc_Set_Config_MulU1,REG5)(lo)	|	VoC_movreg16(ACC1_LO,REG4,IN_PARALLEL)
0xCB2C0702,	//0x0700		VoC_sub32_rr(ACC0,ACC0,ACC1,DEFAULT)	|	VoC_bez16_r(Agc_Set_Config_MulU1,REG5)(hi)
		//0x0702		Agc_Set_Config_MulU1
0x1483CEBC,	//0x0702		VoC_lw32_d(REG67,0x45c)(lo)	|	VoC_msu32_rr(REG7,REG4,DEFAULT)
0x7F1D045C,	//0x0704		VoC_movreg32(ACC1,REG67,DEFAULT)	|	VoC_lw32_d(REG67,0x45c)(hi)
0x36A3FA43,	//0x0706		VoC_bngt32_rr(Agc_Set_Config_L12,ACC0,REG67)(lo)	|	VoC_shr32_ri(REG67,0x8,IN_PARALLEL)
0xFF26070D,	//0x0708		VoC_movreg32(RL6,ACC0,DEFAULT)	|	VoC_bngt32_rr(Agc_Set_Config_L12,ACC0,REG67)(hi)
0x07F82B80,	//0x070a		VoC_jal(Coolsand_CLZS)
0xFF2EE5C6,	//0x070c		VoC_movreg32(RL6,ACC1,DEFAULT)	|	VoC_jump(Agc_Set_Config_L13)
		//0x070d		Agc_Set_Config_L12
0x07F82B80,	//0x070e		VoC_jal(Coolsand_CLZS)
0x059F0712,	//0x0710		VoC_add16_rd(REG2,REG2,0x59f)
		//0x0712		Agc_Set_Config_L13
0xC312F004,	//0x0712		VoC_sub16_rr(REG2,REG4,REG2,DEFAULT)	|	VoC_lw16i_short(REG4,0x0,DEFAULT)
0x059F0713,	//0x0714		VoC_add16_rd(REG3,REG2,0x59f)
0xFEDD7ED4,	//0x0716		VoC_shru32_rr(ACC1,REG3,IN_PARALLEL)	|	VoC_shru32_rr(ACC0,REG2,DEFAULT)
0xFA0EFF2E,	//0x0718		VoC_shr32_ri(RL6,0x1,DEFAULT)	|	VoC_movreg32(RL6,ACC1,DEFAULT)
0x072433C4,	//0x071a		VoC_bnltz32_r(Agc_Set_Config_L14,ACC0)
0x00480A96,	//0x071c		VoC_lw16i(STATUS,0x48)
0x00440A96,	//0x071e		VoC_lw16i(STATUS,0x44)
0x0A96CB34,	//0x0720		VoC_lw16i(STATUS,0x8)(lo)	|	VoC_sub32_rr(ACC0,ACC0,RL6,DEFAULT)
0xE5C30008,	//0x0722		VoC_jump(Agc_Set_Config_L15)	|	VoC_lw16i(STATUS,0x8)(hi)
		//0x0724		Agc_Set_Config_L14
0xFFC04934,	//0x0724		VoC_NAD(IN_PARALLEL)	|	VoC_add32_rr(ACC0,ACC0,RL6,DEFAULT)
		//0x0726		Agc_Set_Config_L15
0x081E2B80,	//0x0726		VoC_jal(Div_SignedInt)
0x043D6C18,	//0x0728		VoC_bez16_d(Agc_Set_Config_L16,0x43d)
0x04624D30,	//0x072a		VoC_bnlt16_rd(Agc_Set_Config_L16,REG0,0x462)
0x059B0781,	//0x072c		VoC_sub16_rd(REG1,REG0,0x59b)
0x05931402,	//0x072e		VoC_lw16_d(REG2,0x593)
0x3241F009,	//0x0730		VoC_bnltz16_r(Agc_Set_Config_MulU2,REG1)(lo)	|	VoC_lw16i_short(ACC0_HI,0x0,DEFAULT)
0xF7E90734,	//0x0732		VoC_lw16i_short(ACC0_HI,0xffffffff,DEFAULT)	|	VoC_bnltz16_r(Agc_Set_Config_MulU2,REG1)(hi)
		//0x0734		Agc_Set_Config_MulU2
0xCE4AE028,	//0x0734		VoC_macX_rr(REG1,REG2,DEFAULT)	|	VoC_movreg16(ACC0_LO,REG1,DEFAULT)
0x09A4FFC0,	//0x0736		VoC_sub32_rd(ACC0,ACC0,0x45a)(lo)	|	VoC_NOP
0x0924045A,	//0x0738		VoC_add32_rd(ACC0,ACC0,0x58a)(lo)	|	VoC_sub32_rd(ACC0,ACC0,0x45a)(hi)
0x728A058A,	//0x073a		VoC_lw16i_short(ACC1_LO,0x14,DEFAULT)	|	VoC_add32_rd(ACC0,ACC0,0x58a)(hi)
0xFFC0E00B,	//0x073c		VoC_NAD	|	VoC_lw16i_short(ACC1_HI,0x0,IN_PARALLEL)
0x081E2B80,	//0x073e		VoC_jal(Div_SignedInt)
		//0x0740		Agc_Set_Config_L16
0x05911402,	//0x0740		VoC_lw16_d(REG2,0x591)
0xFF3B7009,	//0x0742		VoC_movreg32(REG67,RL7,IN_PARALLEL)	|	VoC_lw16i_short(ACC0_HI,0x0,DEFAULT)
0x551FFF46,	//0x0744		VoC_bngt32_rd(Agc_Set_Config_L17,RL7,0x58c)(lo)	|	VoC_lw32z(RL6,DEFAULT)
0xFA0B058C,	//0x0746		VoC_shr32_ri(REG67,0x1,DEFAULT)	|	VoC_bngt32_rd(Agc_Set_Config_L17,RL7,0x58c)(hi)
0xF90E60C3,	//0x0748		VoC_shru16_ri(REG6,0x1,IN_PARALLEL)	|	VoC_movreg16(REG3,REG6,DEFAULT)
0x00011603,	//0x074a		VoC_and16_ri(REG3,0x1)
0x074F3183,	//0x074c		VoC_bez16_r(Agc_Set_Config_Mul32_0,REG3)
0xCE72E048,	//0x074e		VoC_macX_rr(REG6,REG2,DEFAULT)	|	VoC_movreg16(ACC0_LO,REG2,DEFAULT)
		//0x074f		Agc_Set_Config_Mul32_0
0x0A8CCE3A,	//0x0750		VoC_lw16i(RL6_LO,0x1000)(lo)	|	VoC_mac32_rr(REG7,REG2,DEFAULT)
0xFBFC1000,	//0x0752		VoC_shr32_ri(ACC0,0xffffffff,DEFAULT)	|	VoC_lw16i(RL6_LO,0x1000)(hi)
0xFA6CC934,	//0x0754		VoC_shr32_ri(ACC0,0xd,DEFAULT)	|	VoC_add32_rr(ACC0,ACC0,RL6,DEFAULT)
0xFFC065D0,	//0x0756		VoC_NAD(IN_PARALLEL)	|	VoC_jump(Agc_Set_Config_L18)
		//0x0758		Agc_Set_Config_L17
0xF90E60C3,	//0x0758		VoC_shru16_ri(REG6,0x1,IN_PARALLEL)	|	VoC_movreg16(REG3,REG6,DEFAULT)
0x00011603,	//0x075a		VoC_and16_ri(REG3,0x1)
0x075F3183,	//0x075c		VoC_bez16_r(Agc_Set_Config_Mul32_1,REG3)
0xCE72E048,	//0x075e		VoC_macX_rr(REG6,REG2,DEFAULT)	|	VoC_movreg16(ACC0_LO,REG2,DEFAULT)
		//0x075f		Agc_Set_Config_Mul32_1
0x0A8CCE3A,	//0x0760		VoC_lw16i(RL6_LO,0x2000)(lo)	|	VoC_mac32_rr(REG7,REG2,DEFAULT)
0xFBFC2000,	//0x0762		VoC_shr32_ri(ACC0,0xffffffff,DEFAULT)	|	VoC_lw16i(RL6_LO,0x2000)(hi)
0xFA74C934,	//0x0764		VoC_shr32_ri(ACC0,0xe,DEFAULT)	|	VoC_add32_rr(ACC0,ACC0,RL6,DEFAULT)
		//0x0766		Agc_Set_Config_L18
0xE04B700A,	//0x0766		VoC_lw16i_short(ACC1_HI,0x4,IN_PARALLEL)	|	VoC_lw16i_short(ACC1_LO,0x0,DEFAULT)
0x502CC92C,	//0x0768		VoC_bgt32_rd(Agc_Set_Config_L19,ACC0,0x586)(lo)	|	VoC_add32_rr(ACC0,ACC0,ACC1,DEFAULT)
0xFF440586,	//0x076a		VoC_lw32z(ACC0,DEFAULT)	|	VoC_bgt32_rd(Agc_Set_Config_L19,ACC0,0x586)(hi)
0x078E2B00,	//0x076c		VoC_jump_lg(Agc_Set_Config_L22)
		//0x076e		Agc_Set_Config_L19
0xFA747F23,	//0x076e		VoC_shr32_ri(ACC0,0xe,IN_PARALLEL)	|	VoC_movreg32(REG67,ACC0,DEFAULT)
0x3FFF1606,	//0x0770		VoC_and16_ri(REG6,0x3fff)
0xF6C76102,	//0x0772		VoC_movreg16(REG7,REG6,IN_PARALLEL)	|	VoC_movreg16(REG2,ACC0_LO,DEFAULT)
0xF469786F,	//0x0774		VoC_lw16i_short(FORMAT32,0xd,IN_PARALLEL)	|	VoC_shr16_ri(REG7,0xd,DEFAULT)
0x40000A83,	//0x0776		VoC_lw16i(REG3,0x4000)
0x07803187,	//0x0778		VoC_bez16_r(Agc_Set_Config_L20,REG7)
0x0A23C2F4,	//0x077a		VoC_multf32_rd(REG67,REG4,0x598)(lo)	|	VoC_sub16_rr(REG4,REG3,REG6,DEFAULT)
0xFFC00598,	//0x077c		VoC_NOP	|	VoC_multf32_rd(REG67,REG4,0x598)(hi)
0xE5C5C2F6,	//0x077e		VoC_jump(Agc_Set_Config_L21)	|	VoC_sub16_rr(REG6,REG3,REG6,DEFAULT)
		//0x0780		Agc_Set_Config_L20
0x05990A33,	//0x0780		VoC_multf32_rd(REG67,REG6,0x599)
0xFFC07FC0,	//0x0782		VoC_NAD(IN_PARALLEL)	|	VoC_NOP
		//0x0784		Agc_Set_Config_L21
0xE0E37007,	//0x0784		VoC_lw16i_short(REG3,0xe,IN_PARALLEL)	|	VoC_lw16i_short(REG7,0x0,DEFAULT)
0xC2D543D4,	//0x0786		VoC_sub16_rr(REG5,REG3,REG2,IN_PARALLEL)	|	VoC_sub16_rr(REG4,REG7,REG2,DEFAULT)
0xE0097028,	//0x0788		VoC_lw16i_short(ACC0_HI,0x0,IN_PARALLEL)	|	VoC_lw16i_short(ACC0_LO,0x1,DEFAULT)
0xFEAB7EA4,	//0x078a		VoC_shr32_rr(REG67,REG5,IN_PARALLEL)	|	VoC_shr32_rr(ACC0,REG4,DEFAULT)
0xFFC0491C,	//0x078c		VoC_NAD(IN_PARALLEL)	|	VoC_add32_rr(ACC0,ACC0,REG67,DEFAULT)
		//0x078e		Agc_Set_Config_L22
0x03D60A81,	//0x078e		VoC_lw16i(REG1,0x3d6)
0xF8FAE002,	//0x0790		VoC_shr16_ri(REG2,0xffffffff,DEFAULT)	|	VoC_movreg16(REG2,REG0,DEFAULT)
0xF4014051,	//0x0792		VoC_lw16i_short(FORMAT32,0x0,IN_PARALLEL)	|	VoC_add16_rr(REG1,REG1,REG2,DEFAULT)
0x5D8CFFC0,	//0x0794		VoC_sw32_p(ACC0,REG1,DEFAULT)	|	VoC_NOP
		//0x0795		VoC_endloop1
0xDFA9DE00,	//0x0796		VoC_pop16(RA,DEFAULT)	|	VoC_inc_p(REG0,IN_PARALLEL)
0xE580FFC0,	//0x0798		VoC_return	|	VoC_NOP
		//0x079a		Agc_Init
0x00000A84,	//0x079a		VoC_lw16i(REG4,0x0)
0x08000A85,	//0x079c		VoC_lw16i(REG5,0x800)
0xE0337F44,	//0x079e		VoC_lw16i_short(REG3,0x3,IN_PARALLEL)	|	VoC_lw32z(ACC0,DEFAULT)
0xE0177006,	//0x07a0		VoC_lw16i_short(REG7,0x1,IN_PARALLEL)	|	VoC_lw16i_short(REG6,0x0,DEFAULT)
0x03D01582,	//0x07a2		VoC_sw32_d(REG45,0x3d0)
0x03D21584,	//0x07a4		VoC_sw32_d(ACC0,0x3d2)
0x03D41583,	//0x07a6		VoC_sw32_d(REG67,0x3d4)
0x04161506,	//0x07a8		VoC_sw16_d(REG6,0x416)
0x042F1503,	//0x07aa		VoC_sw16_d(REG3,0x42f)
0x042E1506,	//0x07ac		VoC_sw16_d(REG6,0x42e)
0x04301506,	//0x07ae		VoC_sw16_d(REG6,0x430)
0x3C000A83,	//0x07b0		VoC_lw16i(REG3,0x3c00)
0x74000AC6,	//0x07b2		VoC_lw16i(REG6,0xf400)
0x04341509,	//0x07b4		VoC_sw16_d(ACC0_HI,0x434)
0x04381509,	//0x07b6		VoC_sw16_d(ACC0_HI,0x438)
0x04311503,	//0x07b8		VoC_sw16_d(REG3,0x431)
0x04351503,	//0x07ba		VoC_sw16_d(REG3,0x435)
0x04321583,	//0x07bc		VoC_sw32_d(REG67,0x432)
0x04361583,	//0x07be		VoC_sw32_d(REG67,0x436)
0x041E180B,	//0x07c0		VoC_lw16i_set_inc(REG3,0x41e,0x2)
0xDDDCE901,	//0x07c2		VoC_sw32inc_p(ACC0,REG3,DEFAULT)	|	VoC_loop_i_short(0x8,DEFAULT)
		//0x07c3		VoC_endloop0
0xFFC06580,	//0x07c4		VoC_NAD(IN_PARALLEL)	|	VoC_return
		//0x07c6		CII_div_mode32
0xFF475F46,	//0x07c6		VoC_lw32z(RL7,IN_PARALLEL)	|	VoC_push32(RL6,DEFAULT)
0xE00D702C,	//0x07c8		VoC_lw16i_short(RL6_HI,0x0,IN_PARALLEL)	|	VoC_lw16i_short(RL6_LO,0x1,DEFAULT)
		//0x07ca		CII_div_mode32_102
0x07CF362C,	//0x07ca		VoC_bgt32_rr(CII_div_mode32_101,ACC1,ACC0)
0xC9F74B2C,	//0x07cc		VoC_add32_rr(RL7,RL7,RL6,IN_PARALLEL)	|	VoC_sub32_rr(ACC0,ACC0,ACC1,DEFAULT)
0xDF06E5FC,	//0x07ce		VoC_pop32(RL6,DEFAULT)	|	VoC_jump(CII_div_mode32_102)
		//0x07cf		CII_div_mode32_101
0xFFC06580,	//0x07d0		VoC_NAD(IN_PARALLEL)	|	VoC_return
		//0x07d2		Coolsand_CLZU
0x001F0A82,	//0x07d2		VoC_lw16i(REG2,0x1f)
0x07F73306,	//0x07d4		VoC_bez32_r(CLZ_End,RL6)
0xFC867F37,	//0x07d6		VoC_shru32_ri(RL6,0x10,IN_PARALLEL)	|	VoC_movreg32(RL7,RL6,DEFAULT)
0xE1037022,	//0x07d8		VoC_lw16i_short(REG3,0x10,IN_PARALLEL)	|	VoC_lw16i_short(REG2,0x1,DEFAULT)
0x07DE3346,	//0x07da		VoC_bnez32_r(CLZ_L0,RL6)
0xFD87409A,	//0x07dc		VoC_shru32_ri(RL7,0xfffffff0,IN_PARALLEL)	|	VoC_add16_rr(REG2,REG2,REG3,DEFAULT)
		//0x07de		CLZ_L0
0x7CC6FF3E,	//0x07de		VoC_shru32_ri(RL6,0x18,DEFAULT)	|	VoC_movreg32(RL6,RL7,DEFAULT)
0x3346E083,	//0x07e0		VoC_bnez32_r(CLZ_L1,RL6)(lo)	|	VoC_lw16i_short(REG3,0x8,IN_PARALLEL)
0x409A07E5,	//0x07e2		VoC_add16_rr(REG2,REG2,REG3,DEFAULT)	|	VoC_bnez32_r(CLZ_L1,RL6)(hi)
0xFF3EFDC7,	//0x07e4		VoC_movreg32(RL6,RL7,DEFAULT)	|	VoC_shru32_ri(RL7,0xfffffff8,IN_PARALLEL)
		//0x07e5		CLZ_L1
0xE0437CE6,	//0x07e6		VoC_lw16i_short(REG3,0x4,IN_PARALLEL)	|	VoC_shru32_ri(RL6,0x1c,DEFAULT)
0x07EC3346,	//0x07e8		VoC_bnez32_r(CLZ_L2,RL6)
0xFDE7409A,	//0x07ea		VoC_shru32_ri(RL7,0xfffffffc,IN_PARALLEL)	|	VoC_add16_rr(REG2,REG2,REG3,DEFAULT)
		//0x07ec		CLZ_L2
0x7CF6FF3E,	//0x07ec		VoC_shru32_ri(RL6,0x1e,DEFAULT)	|	VoC_movreg32(RL6,RL7,DEFAULT)
0x3346E023,	//0x07ee		VoC_bnez32_r(CLZ_L3,RL6)(lo)	|	VoC_lw16i_short(REG3,0x2,IN_PARALLEL)
0x409A07F4,	//0x07f0		VoC_add16_rr(REG2,REG2,REG3,DEFAULT)	|	VoC_bnez32_r(CLZ_L3,RL6)(hi)
0xFFC0FDF7,	//0x07f2		VoC_NAD	|	VoC_shru32_ri(RL7,0xfffffffe,IN_PARALLEL)
		//0x07f4		CLZ_L3
0xE0037CFF,	//0x07f4		VoC_lw16i_short(REG3,0x0,IN_PARALLEL)	|	VoC_shru32_ri(RL7,0x1f,DEFAULT)
0xE580CA79,	//0x07f6		VoC_return	|	VoC_sub32_rr(REG23,REG23,RL7,DEFAULT)
		//0x07f7		CLZ_End
		//0x07f8		Coolsand_CLZS
0x00200A82,	//0x07f8		VoC_lw16i(REG2,0x20)
0x081D3306,	//0x07fa		VoC_bez32_r(CLZS_End,RL6)
0xFC867F37,	//0x07fc		VoC_shru32_ri(RL6,0x10,IN_PARALLEL)	|	VoC_movreg32(RL7,RL6,DEFAULT)
0xE1037002,	//0x07fe		VoC_lw16i_short(REG3,0x10,IN_PARALLEL)	|	VoC_lw16i_short(REG2,0x0,DEFAULT)
0x08043346,	//0x0800		VoC_bnez32_r(CLZS_L0,RL6)
0xFD87409A,	//0x0802		VoC_shru32_ri(RL7,0xfffffff0,IN_PARALLEL)	|	VoC_add16_rr(REG2,REG2,REG3,DEFAULT)
		//0x0804		CLZS_L0
0x7CC6FF3E,	//0x0804		VoC_shru32_ri(RL6,0x18,DEFAULT)	|	VoC_movreg32(RL6,RL7,DEFAULT)
0x3346E083,	//0x0806		VoC_bnez32_r(CLZS_L1,RL6)(lo)	|	VoC_lw16i_short(REG3,0x8,IN_PARALLEL)
0x409A080B,	//0x0808		VoC_add16_rr(REG2,REG2,REG3,DEFAULT)	|	VoC_bnez32_r(CLZS_L1,RL6)(hi)
0xFF3EFDC7,	//0x080a		VoC_movreg32(RL6,RL7,DEFAULT)	|	VoC_shru32_ri(RL7,0xfffffff8,IN_PARALLEL)
		//0x080b		CLZS_L1
0xE0437CE6,	//0x080c		VoC_lw16i_short(REG3,0x4,IN_PARALLEL)	|	VoC_shru32_ri(RL6,0x1c,DEFAULT)
0x08123346,	//0x080e		VoC_bnez32_r(CLZS_L2,RL6)
0xFDE7409A,	//0x0810		VoC_shru32_ri(RL7,0xfffffffc,IN_PARALLEL)	|	VoC_add16_rr(REG2,REG2,REG3,DEFAULT)
		//0x0812		CLZS_L2
0x7CF6FF3E,	//0x0812		VoC_shru32_ri(RL6,0x1e,DEFAULT)	|	VoC_movreg32(RL6,RL7,DEFAULT)
0x3346E023,	//0x0814		VoC_bnez32_r(CLZS_L3,RL6)(lo)	|	VoC_lw16i_short(REG3,0x2,IN_PARALLEL)
0x409A081A,	//0x0816		VoC_add16_rr(REG2,REG2,REG3,DEFAULT)	|	VoC_bnez32_r(CLZS_L3,RL6)(hi)
0xFFC0FDF7,	//0x0818		VoC_NAD	|	VoC_shru32_ri(RL7,0xfffffffe,IN_PARALLEL)
		//0x081a		CLZS_L3
0xE0037CFF,	//0x081a		VoC_lw16i_short(REG3,0x0,IN_PARALLEL)	|	VoC_shru32_ri(RL7,0x1f,DEFAULT)
0xE580CA79,	//0x081c		VoC_return	|	VoC_sub32_rr(REG23,REG23,RL7,DEFAULT)
		//0x081d		CLZS_End
		//0x081e		Div_SignedInt
0x7027DFE9,	//0x081e		VoC_lw16i_short(REG7,0x1,DEFAULT)	|	VoC_push16(RA,DEFAULT)
0x7004FF47,	//0x0820		VoC_lw16i_short(REG4,0x0,DEFAULT)	|	VoC_lw32z(RL7,IN_PARALLEL)
0x33C4E005,	//0x0822		VoC_bnltz32_r(ABS_0,ACC0)(lo)	|	VoC_lw16i_short(REG5,0x0,IN_PARALLEL)
0x64BC0827,	//0x0824		VoC_xor16_rr(REG4,REG7,DEFAULT)	|	VoC_bnltz32_r(ABS_0,ACC0)(hi)
0xFF26CBE4,	//0x0826		VoC_movreg32(RL6,ACC0,DEFAULT)	|	VoC_sub32_rr(ACC0,RL7,ACC0,IN_PARALLEL)
		//0x0827		ABS_0
0x07F82B80,	//0x0828		VoC_jal(Coolsand_CLZS)
0xFF474356,	//0x082a		VoC_lw32z(RL7,IN_PARALLEL)	|	VoC_sub16_rr(REG6,REG5,REG2,DEFAULT)
0x083033C5,	//0x082c		VoC_bnltz32_r(ABS_1,ACC1)
0xCBED64BC,	//0x082e		VoC_sub32_rr(ACC1,RL7,ACC1,IN_PARALLEL)	|	VoC_xor16_rr(REG4,REG7,DEFAULT)
		//0x0830		ABS_1
0x2B80FF2E,	//0x0830		VoC_jal(Coolsand_CLZS)(lo)	|	VoC_movreg32(RL6,ACC1,DEFAULT)
0xC35707F8,	//0x0832		VoC_sub16_rr(REG7,REG5,REG2,DEFAULT)	|	VoC_jal(Coolsand_CLZS)(hi)
0xFEBD7EB4,	//0x0834		VoC_shr32_rr(ACC1,REG7,IN_PARALLEL)	|	VoC_shr32_rr(ACC0,REG6,DEFAULT)
0x702CFF47,	//0x0836		VoC_lw16i_short(RL6_LO,0x1,DEFAULT)	|	VoC_lw32z(RL7,DEFAULT)
0x0A96E00D,	//0x0838		VoC_lw16i(STATUS,0x48)(lo)	|	VoC_lw16i_short(RL6_HI,0x0,IN_PARALLEL)
0xEBE90048,	//0x083a		VoC_loop_i_short(0x1f,DEFAULT)	|	VoC_lw16i(STATUS,0x48)(hi)
0x00440A96,	//0x083c		VoC_lw16i(STATUS,0x44)
0xFDFF4B29,	//0x083e		VoC_shru32_ri(RL7,0xffffffff,IN_PARALLEL)	|	VoC_sub32_rr(REG23,ACC0,ACC1,DEFAULT)
0x08443381,	//0x0840		VoC_bltz32_r(LABLE_DIV_L0,REG23)
0xC9F77F0C,	//0x0842		VoC_add32_rr(RL7,RL7,RL6,IN_PARALLEL)	|	VoC_movreg32(ACC0,REG23,DEFAULT)
		//0x0844		LABLE_DIV_L0
		//0x0844		VoC_endloop0
0x0A96FDFC,	//0x0844		VoC_lw16i(STATUS,0x8)(lo)	|	VoC_shru32_ri(ACC0,0xffffffff,DEFAULT)
0x43BA0008,	//0x0846		VoC_sub16_rr(REG2,REG6,REG7,DEFAULT)	|	VoC_lw16i(STATUS,0x8)(hi)
0xC2D2E1E3,	//0x0848		VoC_sub16_rr(REG2,REG3,REG2,DEFAULT)	|	VoC_lw16i_short(REG3,0x1e,IN_PARALLEL)
0xFF467E97,	//0x084a		VoC_lw32z(RL6,IN_PARALLEL)	|	VoC_shr32_rr(RL7,REG2,DEFAULT)
0x084F3184,	//0x084c		VoC_bez16_r(ABS_2,REG4)
0xDFA9CBBF,	//0x084e		VoC_pop16(RA,DEFAULT)	|	VoC_sub32_rr(RL7,RL6,RL7,DEFAULT)
		//0x084f		ABS_2
0xE580FFC0,	//0x0850		VoC_return	|	VoC_NOP
		//0x0852		Agc_ProcessVad
0x701CDFE9,	//0x0852		VoC_lw16i_short(WRAP0,0x0,DEFAULT)	|	VoC_push16(RA,DEFAULT)
0x701EF405,	//0x0854		VoC_lw16i_short(WRAP2,0x0,DEFAULT)	|	VoC_lw16i_short(WRAP1,0x0,IN_PARALLEL)
0x1400F407,	//0x0856		VoC_lw16_d(REG0,0x447)(lo)	|	VoC_lw16i_short(WRAP3,0x0,IN_PARALLEL)
0x14070447,	//0x0858		VoC_lw16_d(REG7,0x446)(lo)	|	VoC_lw16_d(REG0,0x447)(hi)
0x14040446,	//0x085a		VoC_lw16_d(REG4,0x4bc)(lo)	|	VoC_lw16_d(REG7,0x446)(hi)
0x60E504BC,	//0x085c		VoC_movreg16(REG5,REG7,DEFAULT)	|	VoC_lw16_d(REG4,0x4bc)(hi)
0x7F47E006,	//0x085e		VoC_lw32z(RL7,DEFAULT)	|	VoC_lw16i_short(REG6,0x0,IN_PARALLEL)
0x1500FE25,	//0x0860		VoC_sw16_d(REG0,0x458)(lo)	|	VoC_shr16_rr(REG5,REG4,IN_PARALLEL)
0x15050458,	//0x0862		VoC_sw16_d(REG5,0x459)(lo)	|	VoC_sw16_d(REG0,0x458)(hi)
0xFFC00459,	//0x0864		VoC_NAD	|	VoC_sw16_d(REG5,0x459)(hi)
		//0x0866		agc_processvad_subfr_loop_start
0x08CA34BE,	//0x0866		VoC_bngt16_rr(agc_processvad_subfr_loop_end,REG7,REG6)
0x04591405,	//0x0868		VoC_lw16_d(REG5,0x459)
0x00A00A84,	//0x086a		VoC_lw16i(REG4,0xa0)
0x35ACDF43,	//0x086c		VoC_bne16_rr(agc_processvad_nrSamples_ne_16,REG5,REG4)(lo)	|	VoC_push32(REG67,DEFAULT)
0x20040886,	//0x086e		VoC_lw16d_set_inc(REG0,0x458,0x1)(lo)	|	VoC_bne16_rr(agc_processvad_nrSamples_ne_16,REG5,REG4)(hi)
0x18050458,	//0x0870		VoC_lw16i_set_inc(REG1,0x44c,0x1)(lo)	|	VoC_lw16d_set_inc(REG0,0x458,0x1)(hi)
0x5889044C,	//0x0872		VoC_lw16inc_p(ACC0_HI,REG0,DEFAULT)	|	VoC_lw16i_set_inc(REG1,0x44c,0x1)(hi)
0x588BE025,	//0x0874		VoC_lw16inc_p(ACC1_HI,REG0,DEFAULT)	|	VoC_lw16i_short(REG5,0x2,IN_PARALLEL)
0xFFC0E084,	//0x0876		VoC_NAD	|	VoC_lw16i_short(REG4,0x8,IN_PARALLEL)
0x08812C11,	//0x0878		VoC_loop_i(0x1,0x8)
0xFA857A84,	//0x087a		VoC_shr32_ri(ACC1,0x10,IN_PARALLEL)	|	VoC_shr32_ri(ACC0,0x10,DEFAULT)
0xD887492C,	//0x087c		VoC_lw16inc_p(REG7,REG0,IN_PARALLEL)	|	VoC_add32_rr(ACC0,ACC0,ACC1,DEFAULT)
0xD88B7A0C,	//0x087e		VoC_lw16inc_p(ACC1_HI,REG0,IN_PARALLEL)	|	VoC_shr32_ri(ACC0,0x1,DEFAULT)
0xDC98E0E9,	//0x0880		VoC_sw16inc_p(ACC0_LO,REG1,DEFAULT)	|	VoC_movreg16(ACC0_HI,REG7,DEFAULT)
		//0x0881		VoC_endloop1
0x1804C22D,	//0x0882		VoC_lw16i_set_inc(REG0,0x44c,0x1)(lo)	|	VoC_sub16_rr(REG5,REG0,REG5,DEFAULT)
0xE5C7044C,	//0x0884		VoC_jump(agc_processvad_nrSamples_else_end)	|	VoC_lw16i_set_inc(REG0,0x44c,0x1)(hi)
		//0x0886		agc_processvad_nrSamples_ne_16
0x04581405,	//0x0886		VoC_lw16_d(REG5,0x458)
0xF6A07104,	//0x0888		VoC_movreg16(REG0,REG5,IN_PARALLEL)	|	VoC_lw16i_short(REG4,0x8,DEFAULT)
0xF0044165,	//0x088a		VoC_lw16i_short(INC0,0x1,IN_PARALLEL)	|	VoC_add16_rr(REG5,REG5,REG4,DEFAULT)
		//0x088c		agc_processvad_nrSamples_else_end
0x04541805,	//0x088c		VoC_lw16i_set_inc(REG1,0x454,0x1)
0x04581505,	//0x088e		VoC_sw16_d(REG5,0x458)
0x09562B80,	//0x0890		VoC_jal(VOC_Agc_DownsampleBy2)
0x042E140D,	//0x0892		VoC_lw16_d(RL6_HI,0x42e)
0x04541804,	//0x0894		VoC_lw16i_set_inc(REG0,0x454,0x1)
0x0A81FA86,	//0x0896		VoC_lw16i(REG1,0x4b)(lo)	|	VoC_shr32_ri(RL6,0x10,DEFAULT)
0xFFC0004B,	//0x0898		VoC_NAD	|	VoC_lw16i(REG1,0x4b)(hi)
0x08C12C08,	//0x089a		VoC_loop_i(0x0,0x4)
0xFF445885,	//0x089c		VoC_lw32z(ACC0,IN_PARALLEL)	|	VoC_lw16inc_p(REG5,REG0,DEFAULT)
0xF5827A82,	//0x089e		VoC_lw16i_short(FORMATX,0xfffffff0,IN_PARALLEL)	|	VoC_shr32_ri(REG45,0x10,DEFAULT)
0x4E79C8B3,	//0x08a0		VoC_macX_rr(REG7,REG1,DEFAULT)	|	VoC_add32_rr(REG67,REG45,RL6,DEFAULT)
0x7007FF19,	//0x08a2		VoC_lw16i_short(REG7,0x0,DEFAULT)	|	VoC_movreg32(REG23,REG67,IN_PARALLEL)
0x7BC3F5C2,	//0x08a4		VoC_shr32_ri(REG67,0xfffffff8,DEFAULT)	|	VoC_lw16i_short(FORMATX,0xfffffff8,IN_PARALLEL)
0x4E79F401,	//0x08a6		VoC_macX_rr(REG7,REG1,DEFAULT)	|	VoC_lw16i_short(FORMAT32,0x0,IN_PARALLEL)
0x4E31F946,	//0x08a8		VoC_mac32_rr(REG6,REG1,DEFAULT)	|	VoC_shru16_ri(REG6,0x8,IN_PARALLEL)
0x3281FF43,	//0x08aa		VoC_bgtz32_r(agc_processvad_abs_out,REG23)(lo)	|	VoC_lw32z(REG67,IN_PARALLEL)
0xCAC908AE,	//0x08ac		VoC_sub32_rr(REG23,REG67,REG23,DEFAULT)	|	VoC_bgtz32_r(agc_processvad_abs_out,REG23)(hi)
		//0x08ae		agc_processvad_abs_out
0x05B26021,	//0x08ae		VoC_blt32_rd(agc_processvad_out_not_saturation,REG23,0x5b2)
0x05B21481,	//0x08b0		VoC_lw32_d(REG23,0x5b2)
		//0x08b2		agc_processvad_out_not_saturation
0xF5817A3C,	//0x08b2		VoC_lw16i_short(FORMAT32,0xfffffff0,IN_PARALLEL)	|	VoC_shr32_ri(ACC0,0x7,DEFAULT)
0xFBC14B16,	//0x08b4		VoC_shr32_ri(REG23,0xfffffff8,IN_PARALLEL)	|	VoC_sub32_rr(RL6,ACC0,REG45,DEFAULT)
0xFD867F44,	//0x08b6		VoC_shru32_ri(RL6,0xfffffff0,IN_PARALLEL)	|	VoC_lw32z(ACC0,DEFAULT)
0xFA8676FA,	//0x08b8		VoC_shr32_ri(RL6,0x10,IN_PARALLEL)	|	VoC_lw16i_short(FORMATX,0xfffffff7,DEFAULT)
0xF9424E1B,	//0x08ba		VoC_shru16_ri(REG2,0x8,IN_PARALLEL)	|	VoC_mac32_rr(REG3,REG3,DEFAULT)
0xF4014E5A,	//0x08bc		VoC_lw16i_short(FORMAT32,0x0,IN_PARALLEL)	|	VoC_macX_rr(REG3,REG2,DEFAULT)
0xFFC0CE12,	//0x08be		VoC_NOP	|	VoC_mac32_rr(REG2,REG2,DEFAULT)
0xC9E7FA34,	//0x08c0		VoC_add32_rr(RL7,RL7,ACC0,DEFAULT)	|	VoC_shr32_ri(ACC0,0x6,DEFAULT)
		//0x08c1		VoC_endloop0
0xDF037024,	//0x08c2		VoC_pop32(REG67,IN_PARALLEL)	|	VoC_lw16i_short(REG4,0x1,DEFAULT)
0x042E150C,	//0x08c4		VoC_sw16_d(RL6_LO,0x42e)
0x2B00C1A6,	//0x08c6		VoC_jump_lg(agc_processvad_subfr_loop_start)(lo)	|	VoC_add16_rr(REG6,REG6,REG4,DEFAULT)
0xFFC00866,	//0x08c8		VoC_NAD	|	VoC_jump_lg(agc_processvad_subfr_loop_start)(hi)
		//0x08ca		agc_processvad_subfr_loop_end
0x0A4E2B80,	//0x08ca		VoC_jal(VOC_Agc_MATH_CLZ)
0x1403F1E2,	//0x08cc		VoC_lw16_d(REG3,0x585)(lo)	|	VoC_lw16i_short(REG2,0xf,DEFAULT)
0xC2810585,	//0x08ce		VoC_sub16_rr(REG1,REG2,REG0,DEFAULT)	|	VoC_lw16_d(REG3,0x585)(hi)
0xE01078A9,	//0x08d0		VoC_lw16i_short(REG0,0x1,IN_PARALLEL)	|	VoC_shr16_ri(REG1,0xfffffff5,DEFAULT)
0x042F3C83,	//0x08d2		VoC_bngt16_rd(agc_processvad_counter_nlt_kAvgDecayTime,REG3,0x42f)
0x042F0700,	//0x08d4		VoC_add16_rd(REG0,REG0,0x42f)
0x1500FFC0,	//0x08d6		VoC_sw16_d(REG0,0x42f)(lo)	|	VoC_NOP
0xFFC0042F,	//0x08d8		VoC_NAD	|	VoC_sw16_d(REG0,0x42f)(hi)
		//0x08da		agc_processvad_counter_nlt_kAvgDecayTime
0x04391404,	//0x08da		VoC_lw16_d(REG4,0x439)
0xF4017200,	//0x08dc		VoC_lw16i_short(FORMAT32,0x0,IN_PARALLEL)	|	VoC_lw16i_short(REG0,0x10,DEFAULT)
0xC2204C65,	//0x08de		VoC_sub16_rr(REG0,REG0,REG4,IN_PARALLEL)	|	VoC_multf32_rr(ACC1,REG1,REG4,DEFAULT)
0x04351403,	//0x08e0		VoC_lw16_d(REG3,0x435)
0x04491501,	//0x08e2		VoC_sw16_d(REG1,0x449)
0xF4027199,	//0x08e4		VoC_lw16i_short(FORMATX,0x0,IN_PARALLEL)	|	VoC_lw16i_short(FORMAT32,0xc,DEFAULT)
0xCE984C4C,	//0x08e6		VoC_macX_rr(REG3,REG0,IN_PARALLEL)	|	VoC_multf32_rr(ACC0,REG1,REG1,DEFAULT)
0x0ADA2B80,	//0x08e8		VoC_jal(VOC_MUL_W32W16ResW32)
0xF6047A25,	//0x08ea		VoC_movreg16(REG4,REG0,IN_PARALLEL)	|	VoC_shr32_ri(ACC1,0x4,DEFAULT)
0xFF256140,	//0x08ec		VoC_movreg32(ACC1,ACC0,IN_PARALLEL)	|	VoC_movreg16(REG0,ACC1_LO,DEFAULT)
0x04361484,	//0x08ee		VoC_lw32_d(ACC0,0x436)
0x0ADA2B80,	//0x08f0		VoC_jal(VOC_MUL_W32W16ResW32)
0x04351500,	//0x08f2		VoC_sw16_d(REG0,0x435)
0x7A25C965,	//0x08f4		VoC_shr32_ri(ACC1,0x4,DEFAULT)	|	VoC_add32_rr(ACC1,ACC1,ACC0,DEFAULT)
0xCC04F401,	//0x08f6		VoC_multf32_rr(ACC0,REG0,REG0,DEFAULT)	|	VoC_lw16i_short(FORMAT32,0x0,IN_PARALLEL)
0x04361585,	//0x08f8		VoC_sw32_d(ACC1,0x436)
0xCB64FBA5,	//0x08fa		VoC_sub32_rr(ACC0,ACC1,ACC0,DEFAULT)	|	VoC_shr32_ri(ACC1,0xfffffff4,DEFAULT)
0x09CF2B80,	//0x08fc		VoC_jal(VOC_Agc_WebRtcSpl_Sqrt)
0x04491409,	//0x08fe		VoC_lw16_d(ACC0_HI,0x449)
0x04381504,	//0x0900		VoC_sw16_d(REG4,0x438)
0x042F1404,	//0x0902		VoC_lw16_d(REG4,0x42f)
0xF4017A84,	//0x0904		VoC_lw16i_short(FORMAT32,0x0,IN_PARALLEL)	|	VoC_shr32_ri(ACC0,0x10,DEFAULT)
0x04310E20,	//0x0906		VoC_mac32_rd(REG4,0x431)
0xE0057026,	//0x0908		VoC_lw16i_short(REG5,0x0,IN_PARALLEL)	|	VoC_lw16i_short(REG6,0x1,DEFAULT)
0xFFC04134,	//0x090a		VoC_NAD(IN_PARALLEL)	|	VoC_add16_rr(REG4,REG4,REG6,DEFAULT)
0x0A982B80,	//0x090c		VoC_jal(VOC_WebRtcSpl_DivW32W16ResW16)
0x04311500,	//0x090e		VoC_sw16_d(REG0,0x431)
0xE0057199,	//0x0910		VoC_lw16i_short(REG5,0x0,IN_PARALLEL)	|	VoC_lw16i_short(FORMAT32,0xc,DEFAULT)
0x04491401,	//0x0912		VoC_lw16_d(REG1,0x449)
0x042F1404,	//0x0914		VoC_lw16_d(REG4,0x42f)
0x1484CC4D,	//0x0916		VoC_lw32_d(ACC0,0x432)(lo)	|	VoC_multf32_rr(ACC1,REG1,REG1,DEFAULT)
0xFFC00432,	//0x0918		VoC_NAD	|	VoC_lw32_d(ACC0,0x432)(hi)
0x0ADA2B80,	//0x091a		VoC_jal(VOC_MUL_W32W16ResW32)
0xE016492C,	//0x091c		VoC_lw16i_short(REG6,0x1,IN_PARALLEL)	|	VoC_add32_rr(ACC0,ACC0,ACC1,DEFAULT)
0xE0054134,	//0x091e		VoC_lw16i_short(REG5,0x0,IN_PARALLEL)	|	VoC_add16_rr(REG4,REG4,REG6,DEFAULT)
0x0A7A2B80,	//0x0920		VoC_jal(VOC_WebRtcSpl_DivW32W16)
0xF4017F3C,	//0x0922		VoC_lw16i_short(FORMAT32,0x0,IN_PARALLEL)	|	VoC_movreg32(ACC0,RL7,DEFAULT)
0x04311404,	//0x0924		VoC_lw16_d(REG4,0x431)
0x1587FBA4,	//0x0926		VoC_sw32_d(RL7,0x432)(lo)	|	VoC_shr32_ri(ACC0,0xfffffff4,DEFAULT)
0xCEA40432,	//0x0928		VoC_msu32_rr(REG4,REG4,DEFAULT)	|	VoC_sw32_d(RL7,0x432)(hi)
0x09CF2B80,	//0x092a		VoC_jal(VOC_Agc_WebRtcSpl_Sqrt)
0x04341504,	//0x092c		VoC_sw16_d(REG4,0x434)
0x04491400,	//0x092e		VoC_lw16_d(REG0,0x449)
0xF4017061,	//0x0930		VoC_lw16i_short(FORMAT32,0x0,IN_PARALLEL)	|	VoC_lw16i_short(REG1,0x3,DEFAULT)
0x04310780,	//0x0932		VoC_sub16_rd(REG0,REG0,0x431)
0xE00578A1,	//0x0934		VoC_lw16i_short(REG5,0x0,IN_PARALLEL)	|	VoC_shr16_ri(REG1,0xfffffff4,DEFAULT)
0xFFC04C44,	//0x0936		VoC_NAD(IN_PARALLEL)	|	VoC_multf32_rr(ACC0,REG1,REG0,DEFAULT)
0x0A7A2B80,	//0x0938		VoC_jal(VOC_WebRtcSpl_DivW32W16)
0xE00571A4,	//0x093a		VoC_lw16i_short(REG5,0x0,IN_PARALLEL)	|	VoC_lw16i_short(REG4,0xd,DEFAULT)
0xFD627719,	//0x093c		VoC_shru32_ri(REG45,0xffffffec,IN_PARALLEL)	|	VoC_lw16i_short(FORMAT32,0xfffffff8,DEFAULT)
0x04300A2C,	//0x093e		VoC_multf32_rd(ACC0,REG5,0x430)
0xE0077026,	//0x0940		VoC_lw16i_short(REG7,0x0,IN_PARALLEL)	|	VoC_lw16i_short(REG6,0x1,DEFAULT)
0xF8AE7A54,	//0x0942		VoC_shr16_ri(REG6,0xfffffff5,IN_PARALLEL)	|	VoC_shr32_ri(ACC0,0xa,DEFAULT)
0xFF424938,	//0x0944		VoC_lw32z(REG45,IN_PARALLEL)	|	VoC_add32_rr(REG01,ACC0,RL7,DEFAULT)
0xCA9A7A30,	//0x0946		VoC_sub32_rr(REG45,REG45,REG67,IN_PARALLEL)	|	VoC_shr32_ri(REG01,0x6,DEFAULT)
0x094C3486,	//0x0948		VoC_bngt16_rr(agc_processvad_logRatio_ngt_2048,REG0,REG6)
0xFFC07F18,	//0x094a		VoC_NAD(IN_PARALLEL)	|	VoC_movreg32(REG01,REG67,DEFAULT)
		//0x094c		agc_processvad_logRatio_ngt_2048
0x09503404,	//0x094c		VoC_bgt16_rr(agc_processvad_logRatio_gt_neg2048,REG0,REG4)
0xFFC0FF10,	//0x094e		VoC_NOP	|	VoC_movreg32(REG01,REG45,DEFAULT)
		//0x0950		agc_processvad_logRatio_gt_neg2048
0x04301500,	//0x0950		VoC_sw16_d(REG0,0x430)
		//0x0952		agc_processvad_exit
0xFFC0DFA9,	//0x0952		VoC_NOP	|	VoC_pop16(RA,DEFAULT)
0xFFC06580,	//0x0954		VoC_NAD(IN_PARALLEL)	|	VoC_return
		//0x0956		VOC_Agc_DownsampleBy2
0xFF465FE9,	//0x0956		VoC_lw32z(RL6,IN_PARALLEL)	|	VoC_push16(RA,DEFAULT)
0xF80C5F47,	//0x0958		VoC_shr16_ri(REG4,0x1,IN_PARALLEL)	|	VoC_push32(RL7,DEFAULT)
0x05A0180A,	//0x095a		VoC_lw16i_set_inc(REG2,0x5a0,0x2)
0x04000A8C,	//0x095c		VoC_lw16i(RL6_LO,0x400)
0x09B52E20,	//0x095e		VoC_loop_r(0,REG4)
0xDFC27F47,	//0x0960		VoC_push16(REG2,IN_PARALLEL)	|	VoC_lw32z(RL7,DEFAULT)
0x59D2D88F,	//0x0962		VoC_lw32inc_p(REG45,REG2,DEFAULT)	|	VoC_lw16inc_p(RL7_HI,REG0,DEFAULT)
0x09BBFA37,	//0x0964		VoC_sub32_rd(REG67,RL7,0x420)(lo)	|	VoC_shr32_ri(RL7,0x6,IN_PARALLEL)
0xFFC00420,	//0x0966		VoC_NAD	|	VoC_sub32_rd(REG67,RL7,0x420)(hi)
0x09BA2B80,	//0x0968		VoC_jal(MUL_ACCUM_FUN)
0x041E0923,	//0x096a		VoC_add32_rd(REG67,ACC0,0x41e)
0x041E1587,	//0x096c		VoC_sw32_d(RL7,0x41e)
0xFF1F59D2,	//0x096e		VoC_movreg32(RL7,REG67,IN_PARALLEL)	|	VoC_lw32inc_p(REG45,REG2,DEFAULT)
0x0422099B,	//0x0970		VoC_sub32_rd(REG67,REG67,0x422)
0x09BA2B80,	//0x0972		VoC_jal(MUL_ACCUM_FUN)
0x04200923,	//0x0974		VoC_add32_rd(REG67,ACC0,0x420)
0x04201587,	//0x0976		VoC_sw32_d(RL7,0x420)
0xFF1F59D2,	//0x0978		VoC_movreg32(RL7,REG67,IN_PARALLEL)	|	VoC_lw32inc_p(REG45,REG2,DEFAULT)
0x0424099B,	//0x097a		VoC_sub32_rd(REG67,REG67,0x424)
0x09BA2B80,	//0x097c		VoC_jal(MUL_ACCUM_FUN)
0x04220923,	//0x097e		VoC_add32_rd(REG67,ACC0,0x422)
0x04221587,	//0x0980		VoC_sw32_d(RL7,0x422)
0x1583FF47,	//0x0982		VoC_sw32_d(REG67,0x424)(lo)	|	VoC_lw32z(RL7,DEFAULT)
0xD88F0424,	//0x0984		VoC_lw16inc_p(RL7_HI,REG0,DEFAULT)	|	VoC_sw32_d(REG67,0x424)(hi)
0xFA3759D2,	//0x0986		VoC_shr32_ri(RL7,0x6,IN_PARALLEL)	|	VoC_lw32inc_p(REG45,REG2,DEFAULT)
0x042809BB,	//0x0988		VoC_sub32_rd(REG67,RL7,0x428)
0x09BA2B80,	//0x098a		VoC_jal(MUL_ACCUM_FUN)
0x04260923,	//0x098c		VoC_add32_rd(REG67,ACC0,0x426)
0x04261587,	//0x098e		VoC_sw32_d(RL7,0x426)
0xFF1F59D2,	//0x0990		VoC_movreg32(RL7,REG67,IN_PARALLEL)	|	VoC_lw32inc_p(REG45,REG2,DEFAULT)
0x042A099B,	//0x0992		VoC_sub32_rd(REG67,REG67,0x42a)
0x09BA2B80,	//0x0994		VoC_jal(MUL_ACCUM_FUN)
0x04280923,	//0x0996		VoC_add32_rd(REG67,ACC0,0x428)
0x04281587,	//0x0998		VoC_sw32_d(RL7,0x428)
0xFF1F59D2,	//0x099a		VoC_movreg32(RL7,REG67,IN_PARALLEL)	|	VoC_lw32inc_p(REG45,REG2,DEFAULT)
0x042C099B,	//0x099c		VoC_sub32_rd(REG67,REG67,0x42c)
0x09BA2B80,	//0x099e		VoC_jal(MUL_ACCUM_FUN)
0x042A0923,	//0x09a0		VoC_add32_rd(REG67,ACC0,0x42a)
0x042A1587,	//0x09a2		VoC_sw32_d(RL7,0x42a)
0x042C1583,	//0x09a4		VoC_sw32_d(REG67,0x42c)
0x0424091B,	//0x09a6		VoC_add32_rd(REG67,REG67,0x424)
0xDF8248F3,	//0x09a8		VoC_pop16(REG2,IN_PARALLEL)	|	VoC_add32_rr(REG67,REG67,RL6,DEFAULT)
0x1484FA5B,	//0x09aa		VoC_lw32_d(ACC0,0x5ae)(lo)	|	VoC_shr32_ri(REG67,0xb,DEFAULT)
0x361C05AE,	//0x09ac		VoC_bgt32_rr(SatW32ToW16_max_or_min,REG67,ACC0)(lo)	|	VoC_lw32_d(ACC0,0x5ae)(hi)
0x148409B5,	//0x09ae		VoC_lw32_d(ACC0,0x5b0)(lo)	|	VoC_bgt32_rr(SatW32ToW16_max_or_min,REG67,ACC0)(hi)
0x362305B0,	//0x09b0		VoC_bgt32_rr(SatW32ToW16_max_or_min,ACC0,REG67)(lo)	|	VoC_lw32_d(ACC0,0x5b0)(hi)
0xFF1C09B5,	//0x09b2		VoC_movreg32(ACC0,REG67,DEFAULT)	|	VoC_bgt32_rr(SatW32ToW16_max_or_min,ACC0,REG67)(hi)
0xDC98FFC0,	//0x09b4		VoC_sw16inc_p(ACC0_LO,REG1,DEFAULT)	|	VoC_NOP
		//0x09b5		SatW32ToW16_max_or_min
		//0x09b5		VoC_endloop0
0xDFA9DF07,	//0x09b6		VoC_pop16(RA,DEFAULT)	|	VoC_pop32(RL7,DEFAULT)
0xE580FFC0,	//0x09b8		VoC_return	|	VoC_NOP
		//0x09ba		MUL_ACCUM_FUN
0xF5C27F44,	//0x09ba		VoC_lw16i_short(FORMATX,0xfffffff8,IN_PARALLEL)	|	VoC_lw32z(ACC0,DEFAULT)
0xF4017BC2,	//0x09bc		VoC_lw16i_short(FORMAT32,0x0,IN_PARALLEL)	|	VoC_shr32_ri(REG45,0xfffffff8,DEFAULT)
0xF9444E7D,	//0x09be		VoC_shru16_ri(REG4,0x8,IN_PARALLEL)	|	VoC_macX_rr(REG7,REG5,DEFAULT)
0xE0074E3C,	//0x09c0		VoC_lw16i_short(REG7,0x0,IN_PARALLEL)	|	VoC_mac32_rr(REG7,REG4,DEFAULT)
0xCE3DFBC3,	//0x09c2		VoC_mac32_rr(REG7,REG5,DEFAULT)	|	VoC_shr32_ri(REG67,0xfffffff8,DEFAULT)
0x60A4F946,	//0x09c4		VoC_movreg16(REG4,REG5,DEFAULT)	|	VoC_shru16_ri(REG6,0x8,DEFAULT)
0x7F44F685,	//0x09c6		VoC_lw32z(ACC0,DEFAULT)	|	VoC_movreg16(REG5,REG4,IN_PARALLEL)
0xCE35FF25,	//0x09c8		VoC_mac32_rr(REG6,REG5,DEFAULT)	|	VoC_movreg32(ACC1,ACC0,IN_PARALLEL)
0xFFC0CF74,	//0x09ca		VoC_NOP	|	VoC_bimacX_rr(REG67,REG45)
0xC92CFA84,	//0x09cc		VoC_add32_rr(ACC0,ACC0,ACC1,DEFAULT)	|	VoC_shr32_ri(ACC0,0x10,DEFAULT)
0xDFE9E580,	//0x09ce		VoC_push16(RA,DEFAULT)	|	VoC_return
		//0x09cf		VOC_Agc_WebRtcSpl_Sqrt
0xFF227F45,	//0x09d0		VoC_movreg32(REG45,ACC0,IN_PARALLEL)	|	VoC_lw32z(ACC1,DEFAULT)
0x0A113304,	//0x09d2		VoC_bez32_r(webrtcspl_sqrt_return,ACC0)
0x09D83284,	//0x09d4		VoC_bgtz32_r(webrtcspl_sqrt_A_gtz,ACC0)
0xFFC04B64,	//0x09d6		VoC_NAD(IN_PARALLEL)	|	VoC_sub32_rr(ACC0,ACC1,ACC0,DEFAULT)
		//0x09d8		webrtcspl_sqrt_A_gtz
0x0A142B80,	//0x09d8		VoC_jal(VOC_WebRtcSpl_NormW32)
0x0A87F005,	//0x09da		VoC_lw16i(REG7,0x5a82)(lo)	|	VoC_lw16i_short(REG5,0x0,DEFAULT)
0x15005A82,	//0x09dc		VoC_sw16_d(REG0,0x44b)(lo)	|	VoC_lw16i(REG7,0x5a82)(hi)
0x1507044B,	//0x09de		VoC_sw16_d(REG7,0x44a)(lo)	|	VoC_sw16_d(REG0,0x44b)(hi)
0x4340044A,	//0x09e0		VoC_sub16_rr(REG0,REG5,REG0,DEFAULT)	|	VoC_sw16_d(REG7,0x44a)(hi)
0x7F46E014,	//0x09e2		VoC_lw32z(RL6,DEFAULT)	|	VoC_lw16i_short(REG4,0x1,IN_PARALLEL)
0x1485FEC4,	//0x09e4		VoC_lw32_d(ACC1,0x5ac)(lo)	|	VoC_shru32_rr(ACC0,REG0,IN_PARALLEL)
0x092405AC,	//0x09e6		VoC_add32_rd(ACC0,ACC0,0x5ae)(lo)	|	VoC_lw32_d(ACC1,0x5ac)(hi)
0x36AC05AE,	//0x09e8		VoC_bngt32_rr(webrtcspl_sqrt_A_EQ_MAX,ACC1,ACC0)(lo)	|	VoC_add32_rd(ACC0,ACC0,0x5ae)(hi)
0xC91509EC,	//0x09ea		VoC_add32_rr(ACC1,ACC0,REG45,DEFAULT)	|	VoC_bngt32_rr(webrtcspl_sqrt_A_EQ_MAX,ACC1,ACC0)(hi)
		//0x09ec		webrtcspl_sqrt_A_EQ_MAX
0xFD85FA85,	//0x09ec		VoC_shru32_ri(ACC1,0xfffffff0,DEFAULT)	|	VoC_shr32_ri(ACC1,0x10,DEFAULT)
0x09F23285,	//0x09ee		VoC_bgtz32_r(webrtcspl_sqrt_ABS_A,ACC1)
0xFFC04BAD,	//0x09f0		VoC_NAD(IN_PARALLEL)	|	VoC_sub32_rr(ACC1,RL6,ACC1,DEFAULT)
		//0x09f2		webrtcspl_sqrt_ABS_A
0x0A282B80,	//0x09f2		VoC_jal(VOC_WebRtcSpl_SqrtLocal)
0xE0117F2A,	//0x09f4		VoC_lw16i_short(REG1,0x1,IN_PARALLEL)	|	VoC_movreg32(REG45,ACC1,DEFAULT)
0x044B1400,	//0x09f6		VoC_lw16_d(REG0,0x44b)
0xFA826408,	//0x09f8		VoC_shr32_ri(REG45,0x10,IN_PARALLEL)	|	VoC_and16_rr(REG0,REG1,DEFAULT)
0x0A0A31C0,	//0x09fa		VoC_bnez16_r(webrtcspl_sqrt_sh_odd,REG0)
0xF6877F44,	//0x09fc		VoC_movreg16(REG7,REG4,IN_PARALLEL)	|	VoC_lw32z(ACC0,DEFAULT)
0xF5F97028,	//0x09fe		VoC_lw16i_short(FORMAT32,0xffffffff,IN_PARALLEL)	|	VoC_lw16i_short(ACC0_LO,0x1,DEFAULT)
0x044A0A3A,	//0x0a00		VoC_multf32_rd(REG45,REG7,0x44a)
0x0A86FB8C,	//0x0a02		VoC_lw16i(REG6,0x7fff)(lo)	|	VoC_shr32_ri(ACC0,0xfffffff1,DEFAULT)
0xC8A27FFF,	//0x0a04		VoC_add32_rr(REG45,REG45,ACC0,DEFAULT)	|	VoC_lw16i(REG6,0x7fff)(hi)
0xE0046435,	//0x0a06		VoC_lw16i_short(REG4,0x0,IN_PARALLEL)	|	VoC_and16_rr(REG5,REG6,DEFAULT)
0xFFC07A7A,	//0x0a08		VoC_NAD(IN_PARALLEL)	|	VoC_shr32_ri(REG45,0xf,DEFAULT)
		//0x0a0a		webrtcspl_sqrt_sh_odd
0xE00577E0,	//0x0a0a		VoC_lw16i_short(REG5,0x0,IN_PARALLEL)	|	VoC_lw16i_short(REG0,0xffffffff,DEFAULT)
0x044B1401,	//0x0a0c		VoC_lw16_d(REG1,0x44b)
0xF8096404,	//0x0a0e		VoC_shr16_ri(REG1,0x1,IN_PARALLEL)	|	VoC_and16_rr(REG4,REG0,DEFAULT)
0xDFA9FE8A,	//0x0a10		VoC_pop16(RA,DEFAULT)	|	VoC_shr32_rr(REG45,REG1,DEFAULT)
		//0x0a11		webrtcspl_sqrt_return
0xE580FFC0,	//0x0a12		VoC_return	|	VoC_NOP
		//0x0a14		VOC_WebRtcSpl_NormW32
0xDF44DFE9,	//0x0a14		VoC_push32(ACC0,DEFAULT)	|	VoC_push16(RA,DEFAULT)
0xE0007F27,	//0x0a16		VoC_lw16i_short(REG0,0x0,IN_PARALLEL)	|	VoC_movreg32(RL7,ACC0,DEFAULT)
0xEFF777E6,	//0x0a18		VoC_lw16i_short(REG7,0xffffffff,IN_PARALLEL)	|	VoC_lw16i_short(REG6,0xffffffff,DEFAULT)
0x0A233304,	//0x0a1a		VoC_bez32_r(webrtcspl_normw32_return,ACC0)
0x0A203284,	//0x0a1c		VoC_bgtz32_r(webrtcspl_normw32_positive_a,ACC0)
0xFFC0655F,	//0x0a1e		VoC_NAD(IN_PARALLEL)	|	VoC_xor32_rr(RL7,REG67,DEFAULT)
		//0x0a20		webrtcspl_normw32_positive_a
0x0A4E2B80,	//0x0a20		VoC_jal(VOC_Agc_MATH_CLZ)
0xDF04C030,	//0x0a22		VoC_pop32(ACC0,DEFAULT)	|	VoC_add16_rr(REG0,REG0,REG6,DEFAULT)
		//0x0a23		webrtcspl_normw32_return
0xFFC0DFA9,	//0x0a24		VoC_NOP	|	VoC_pop16(RA,DEFAULT)
0xFFC06580,	//0x0a26		VoC_NAD(IN_PARALLEL)	|	VoC_return
		//0x0a28		VOC_WebRtcSpl_SqrtLocal
0x40000A8F,	//0x0a28		VoC_lw16i(RL7_HI,0x4000)
0xFA0D700E,	//0x0a2a		VoC_shr32_ri(ACC1,0x1,IN_PARALLEL)	|	VoC_lw16i_short(RL7_LO,0x0,DEFAULT)
0xF5F94B7D,	//0x0a2c		VoC_lw16i_short(FORMAT32,0xffffffff,IN_PARALLEL)	|	VoC_sub32_rr(ACC1,ACC1,RL7,DEFAULT)
0xC97D7F2B,	//0x0a2e		VoC_add32_rr(ACC1,ACC1,RL7,IN_PARALLEL)	|	VoC_movreg32(REG67,ACC1,DEFAULT)
0xC97D7A83,	//0x0a30		VoC_add32_rr(ACC1,ACC1,RL7,IN_PARALLEL)	|	VoC_shr32_ri(REG67,0x10,DEFAULT)
0xFF464DB2,	//0x0a32		VoC_lw32z(RL6,IN_PARALLEL)	|	VoC_multf32_rr(REG45,REG6,REG6,DEFAULT)
0xCB94FFC0,	//0x0a34		VoC_sub32_rr(ACC0,RL6,REG45,DEFAULT)	|	VoC_NOP
0xFF217A0C,	//0x0a36		VoC_movreg32(REG23,ACC0,IN_PARALLEL)	|	VoC_shr32_ri(ACC0,0x1,DEFAULT)
0xFA814965,	//0x0a38		VoC_shr32_ri(REG23,0x10,IN_PARALLEL)	|	VoC_add32_rr(ACC1,ACC1,ACC0,DEFAULT)
0x0AC3CC94,	//0x0a3a		VoC_lw16i(REG3,0xffffb000)(lo)	|	VoC_multf32_rr(ACC0,REG2,REG2,DEFAULT)
0xE1223000,	//0x0a3c		VoC_movreg16(REG2,ACC0_HI,DEFAULT)	|	VoC_lw16i(REG3,0xffffb000)(hi)
0xCD96CCD4,	//0x0a3e		VoC_multf32_rr(RL6,REG6,REG2,DEFAULT)	|	VoC_multf32_rr(ACC0,REG3,REG2,DEFAULT)
0x70000A83,	//0x0a40		VoC_lw16i(REG3,0x7000)
0xF7A24965,	//0x0a42		VoC_movreg16(REG2,RL6_HI,IN_PARALLEL)	|	VoC_add32_rr(ACC1,ACC1,ACC0,DEFAULT)
0x4DAECCD4,	//0x0a44		VoC_multf32_rr(RL6,REG6,REG5,DEFAULT)	|	VoC_multf32_rr(ACC0,REG3,REG2,DEFAULT)
0x4965E003,	//0x0a46		VoC_add32_rr(ACC1,ACC1,ACC0,DEFAULT)	|	VoC_lw16i_short(REG3,0x0,IN_PARALLEL)
0x7A0EE012,	//0x0a48		VoC_shr32_ri(RL6,0x1,DEFAULT)	|	VoC_lw16i_short(REG2,0x1,IN_PARALLEL)
0xC975FB89,	//0x0a4a		VoC_add32_rr(ACC1,ACC1,RL6,DEFAULT)	|	VoC_shr32_ri(REG23,0xfffffff1,IN_PARALLEL)
0xE580C94D,	//0x0a4c		VoC_return	|	VoC_add32_rr(ACC1,ACC1,REG23,DEFAULT)
		//0x0a4e		VOC_Agc_MATH_CLZ
0xFF3C7F46,	//0x0a4e		VoC_movreg32(ACC0,RL7,IN_PARALLEL)	|	VoC_lw32z(RL6,DEFAULT)
0xEF0177ED,	//0x0a50		VoC_lw16i_short(REG1,0xfffffff0,IN_PARALLEL)	|	VoC_lw16i_short(RL6_HI,0xffffffff,DEFAULT)
0xF62064F4,	//0x0a52		VoC_movreg16(REG0,REG1,IN_PARALLEL)	|	VoC_and32_rr(ACC0,RL6,DEFAULT)
0x0A583304,	//0x0a54		VoC_bez32_r(math_clz_zero_eq_16,ACC0)
0xFFC07000,	//0x0a56		VoC_NAD(IN_PARALLEL)	|	VoC_lw16i_short(REG0,0x0,DEFAULT)
		//0x0a58		math_clz_zero_eq_16
0xFF3C7DC6,	//0x0a58		VoC_movreg32(ACC0,RL7,IN_PARALLEL)	|	VoC_shru32_ri(RL6,0xfffffff8,DEFAULT)
0xF8097EC4,	//0x0a5a		VoC_shr16_ri(REG1,0x1,IN_PARALLEL)	|	VoC_shru32_rr(ACC0,REG0,DEFAULT)
0x3344E4F4,	//0x0a5c		VoC_bnez32_r(math_clz_zero_no_add_8,ACC0)(lo)	|	VoC_and32_rr(ACC0,RL6,DEFAULT)
0xC0080A60,	//0x0a5e		VoC_add16_rr(REG0,REG0,REG1,DEFAULT)	|	VoC_bnez32_r(math_clz_zero_no_add_8,ACC0)(hi)
		//0x0a60		math_clz_zero_no_add_8
0xFF3C7DE6,	//0x0a60		VoC_movreg32(ACC0,RL7,IN_PARALLEL)	|	VoC_shru32_ri(RL6,0xfffffffc,DEFAULT)
0xF8097EC4,	//0x0a62		VoC_shr16_ri(REG1,0x1,IN_PARALLEL)	|	VoC_shru32_rr(ACC0,REG0,DEFAULT)
0x3344E4F4,	//0x0a64		VoC_bnez32_r(math_clz_zero_no_add_4,ACC0)(lo)	|	VoC_and32_rr(ACC0,RL6,DEFAULT)
0xC0080A68,	//0x0a66		VoC_add16_rr(REG0,REG0,REG1,DEFAULT)	|	VoC_bnez32_r(math_clz_zero_no_add_4,ACC0)(hi)
		//0x0a68		math_clz_zero_no_add_4
0xFF3C7DF6,	//0x0a68		VoC_movreg32(ACC0,RL7,IN_PARALLEL)	|	VoC_shru32_ri(RL6,0xfffffffe,DEFAULT)
0xF8097EC4,	//0x0a6a		VoC_shr16_ri(REG1,0x1,IN_PARALLEL)	|	VoC_shru32_rr(ACC0,REG0,DEFAULT)
0x3344E4F4,	//0x0a6c		VoC_bnez32_r(math_clz_zero_no_add_2,ACC0)(lo)	|	VoC_and32_rr(ACC0,RL6,DEFAULT)
0xC0080A70,	//0x0a6e		VoC_add16_rr(REG0,REG0,REG1,DEFAULT)	|	VoC_bnez32_r(math_clz_zero_no_add_2,ACC0)(hi)
		//0x0a70		math_clz_zero_no_add_2
0xFF3C7DFE,	//0x0a70		VoC_movreg32(ACC0,RL7,IN_PARALLEL)	|	VoC_shru32_ri(RL6,0xffffffff,DEFAULT)
0xF8097EC4,	//0x0a72		VoC_shr16_ri(REG1,0x1,IN_PARALLEL)	|	VoC_shru32_rr(ACC0,REG0,DEFAULT)
0x3344E4F4,	//0x0a74		VoC_bnez32_r(math_clz_zero_no_add_1,ACC0)(lo)	|	VoC_and32_rr(ACC0,RL6,DEFAULT)
0xC0080A78,	//0x0a76		VoC_add16_rr(REG0,REG0,REG1,DEFAULT)	|	VoC_bnez32_r(math_clz_zero_no_add_1,ACC0)(hi)
		//0x0a78		math_clz_zero_no_add_1
0xE580DE40,	//0x0a78		VoC_return	|	VoC_abs16_r(REG0,DEFAULT)
		//0x0a7a		VOC_WebRtcSpl_DivW32W16
0x7F41DFE9,	//0x0a7a		VoC_lw32z(REG23,DEFAULT)	|	VoC_push16(RA,DEFAULT)
0x0A8FEFFE,	//0x0a7c		VoC_lw16i(RL7_HI,0x7fff)(lo)	|	VoC_lw16i_short(RL7_LO,0xffffffff,IN_PARALLEL)
0x31847FFF,	//0x0a7e		VoC_bez16_r(divw32w16_return,REG4)(lo)	|	VoC_lw16i(RL7_HI,0x7fff)(hi)
0x70060A95,	//0x0a80		VoC_lw16i_short(REG6,0x0,DEFAULT)	|	VoC_bez16_r(divw32w16_return,REG4)(hi)
0x33C4E017,	//0x0a82		VoC_bnltz32_r(divw32w16_num_positive,ACC0)(lo)	|	VoC_lw16i_short(REG7,0x1,IN_PARALLEL)
0x64BE0A88,	//0x0a84		VoC_xor16_rr(REG6,REG7,DEFAULT)	|	VoC_bnltz32_r(divw32w16_num_positive,ACC0)(hi)
0xFFC0CA64,	//0x0a86		VoC_NAD	|	VoC_sub32_rr(ACC0,REG23,ACC0,IN_PARALLEL)
		//0x0a88		divw32w16_num_positive
0x0A8C3104,	//0x0a88		VoC_bgtz16_r(divw32w16_den_positive,REG4)
0xC2A464BE,	//0x0a8a		VoC_sub16_rr(REG4,REG2,REG4,IN_PARALLEL)	|	VoC_xor16_rr(REG6,REG7,DEFAULT)
		//0x0a8c		divw32w16_den_positive
0xFFC05FC6,	//0x0a8c		VoC_NAD(IN_PARALLEL)	|	VoC_push16(REG6,DEFAULT)
0x0ABC2B80,	//0x0a8e		VoC_jal(VOC_MATH_POSDIV32_S)
0xDF867F44,	//0x0a90		VoC_pop16(REG6,IN_PARALLEL)	|	VoC_lw32z(ACC0,DEFAULT)
0x0A953186,	//0x0a92		VoC_bez16_r(divw32w16_return,REG6)
0xDFA9CB3F,	//0x0a94		VoC_pop16(RA,DEFAULT)	|	VoC_sub32_rr(RL7,ACC0,RL7,DEFAULT)
		//0x0a95		divw32w16_return
0xE580FFC0,	//0x0a96		VoC_return	|	VoC_NOP
		//0x0a98		VOC_WebRtcSpl_DivW32W16ResW16
0xFF415FE9,	//0x0a98		VoC_lw32z(REG23,IN_PARALLEL)	|	VoC_push16(RA,DEFAULT)
0x7FFF0A80,	//0x0a9a		VoC_lw16i(REG0,0x7fff)
0x0AB83184,	//0x0a9c		VoC_bez16_r(divw32w16resw16_return,REG4)
0xE0177006,	//0x0a9e		VoC_lw16i_short(REG7,0x1,IN_PARALLEL)	|	VoC_lw16i_short(REG6,0x0,DEFAULT)
0x0AA433C4,	//0x0aa0		VoC_bnltz32_r(divw32w16resw16_num_positive,ACC0)
0xCA6464BE,	//0x0aa2		VoC_sub32_rr(ACC0,REG23,ACC0,IN_PARALLEL)	|	VoC_xor16_rr(REG6,REG7,DEFAULT)
		//0x0aa4		divw32w16resw16_num_positive
0x0AA83104,	//0x0aa4		VoC_bgtz16_r(divw32w16resw16_den_positive,REG4)
0xC2A464BE,	//0x0aa6		VoC_sub16_rr(REG4,REG2,REG4,IN_PARALLEL)	|	VoC_xor16_rr(REG6,REG7,DEFAULT)
		//0x0aa8		divw32w16resw16_den_positive
0x2B80DFC6,	//0x0aa8		VoC_jal(VOC_MATH_POSDIV32_S)(lo)	|	VoC_push16(REG6,DEFAULT)
0xF0070ABC,	//0x0aaa		VoC_lw16i_short(REG7,0x0,DEFAULT)	|	VoC_jal(VOC_MATH_POSDIV32_S)(hi)
0x7FFF0A86,	//0x0aac		VoC_lw16i(REG6,0x7fff)
0x0AB236BB,	//0x0aae		VoC_bngt32_rr(divw32w16resw16_res_saturation,RL7,REG67)
0xFFC07F1F,	//0x0ab0		VoC_NAD(IN_PARALLEL)	|	VoC_movreg32(RL7,REG67,DEFAULT)
		//0x0ab2		divw32w16resw16_res_saturation
0xDF867F44,	//0x0ab2		VoC_pop16(REG6,IN_PARALLEL)	|	VoC_lw32z(ACC0,DEFAULT)
0x0AB73186,	//0x0ab4		VoC_bez16_r(divw32w16resw16_res_positive,REG6)
0xE1C0CB3F,	//0x0ab6		VoC_movreg16(REG0,RL7_LO,DEFAULT)	|	VoC_sub32_rr(RL7,ACC0,RL7,DEFAULT)
		//0x0ab7		divw32w16resw16_res_positive
		//0x0ab8		divw32w16resw16_return
0xFFC0DFA9,	//0x0ab8		VoC_NOP	|	VoC_pop16(RA,DEFAULT)
0xFFC06580,	//0x0aba		VoC_NAD(IN_PARALLEL)	|	VoC_return
		//0x0abc		VOC_MATH_POSDIV32_S
0xE01C700D,	//0x0abc		VoC_lw16i_short(RL6_LO,0x1,IN_PARALLEL)	|	VoC_lw16i_short(RL6_HI,0x0,DEFAULT)
0x3716FF27,	//0x0abe		VoC_be32_rr(agc_posdiv32_end,REG45,RL6)(lo)	|	VoC_movreg32(RL7,ACC0,DEFAULT)
0xFFC00AD7,	//0x0ac0		VoC_NAD	|	VoC_be32_rr(agc_posdiv32_end,REG45,RL6)(hi)
		//0x0ac2		agc_posdiv32_while1_start
0x0AC936A2,	//0x0ac2		VoC_bngt32_rr(agc_posdiv32_while1_end,ACC0,REG45)
0x0AC93382,	//0x0ac4		VoC_bltz32_r(agc_posdiv32_while1_end,REG45)
0xFDFE7DFA,	//0x0ac6		VoC_shru32_ri(RL6,0xffffffff,IN_PARALLEL)	|	VoC_shru32_ri(REG45,0xffffffff,DEFAULT)
0xFF47E5FA,	//0x0ac8		VoC_lw32z(RL7,DEFAULT)	|	VoC_jump(agc_posdiv32_while1_start)
		//0x0ac9		agc_posdiv32_while1_end
0x0ACE3282,	//0x0aca		VoC_bgtz32_r(agc_posdiv32_while2_start,REG45)
0xFC0E7C0A,	//0x0acc		VoC_shru32_ri(RL6,0x1,IN_PARALLEL)	|	VoC_shru32_ri(REG45,0x1,DEFAULT)
		//0x0ace		agc_posdiv32_while2_start
0x0AD732C6,	//0x0ace		VoC_bngtz32_r(agc_posdiv32_end,RL6)
0x0AD43614,	//0x0ad0		VoC_bgt32_rr(agc_posdiv32_dividend_ngt_divisor,REG45,ACC0)
0xC9F74B14,	//0x0ad2		VoC_add32_rr(RL7,RL7,RL6,IN_PARALLEL)	|	VoC_sub32_rr(ACC0,ACC0,REG45,DEFAULT)
		//0x0ad4		agc_posdiv32_dividend_ngt_divisor
0xFC0E7C0A,	//0x0ad4		VoC_shru32_ri(RL6,0x1,IN_PARALLEL)	|	VoC_shru32_ri(REG45,0x1,DEFAULT)
0xFFC0E5F8,	//0x0ad6		VoC_NOP	|	VoC_jump(agc_posdiv32_while2_start)
		//0x0ad7		agc_posdiv32_end
0xFFC06580,	//0x0ad8		VoC_NAD(IN_PARALLEL)	|	VoC_return
		//0x0ada		VOC_MUL_W32W16ResW32
0xFF23761A,	//0x0ada		VoC_movreg32(REG67,ACC0,IN_PARALLEL)	|	VoC_lw16i_short(FORMATX,0xfffffff0,DEFAULT)
0xCE7CFF44,	//0x0adc		VoC_macX_rr(REG7,REG4,DEFAULT)	|	VoC_lw32z(ACC0,DEFAULT)
0xE0077719,	//0x0ade		VoC_lw16i_short(REG7,0x0,IN_PARALLEL)	|	VoC_lw16i_short(FORMAT32,0xfffffff8,DEFAULT)
0xCE3CFDC3,	//0x0ae0		VoC_mac32_rr(REG7,REG4,DEFAULT)	|	VoC_shru32_ri(REG67,0xfffffff8,DEFAULT)
0xF4017946,	//0x0ae2		VoC_lw16i_short(FORMAT32,0x0,IN_PARALLEL)	|	VoC_shru16_ri(REG6,0x8,DEFAULT)
0xFFC0CE34,	//0x0ae4		VoC_NOP	|	VoC_mac32_rr(REG6,REG4,DEFAULT)
0xDFE9E580,	//0x0ae6		VoC_push16(RA,DEFAULT)	|	VoC_return
		//0x0ae7		Agc_ProcessDigital
0xF01CF000,	//0x0ae8		VoC_lw16i_short(WRAP0,0x0,DEFAULT)	|	VoC_lw16i_short(REG0,0x0,DEFAULT)
0xF01EF01D,	//0x0aea		VoC_lw16i_short(WRAP2,0x0,DEFAULT)	|	VoC_lw16i_short(WRAP1,0x0,DEFAULT)
0x1540F01F,	//0x0aec		VoC_sw16_d(REG0,0xffc1)(lo)	|	VoC_lw16i_short(WRAP3,0x0,DEFAULT)
0x0A967FC1,	//0x0aee		VoC_lw16i(STATUS,0x3f)(lo)	|	VoC_sw16_d(REG0,0xffc1)(hi)
0xF01B003F,	//0x0af0		VoC_lw16i_short(BITCACHE,0x0,DEFAULT)	|	VoC_lw16i(STATUS,0x3f)(hi)
0x1400F019,	//0x0af2		VoC_lw16_d(REG0,0x448)(lo)	|	VoC_lw16i_short(FORMAT32,0x0,DEFAULT)
0x44280448,	//0x0af4		VoC_bne16_rd(Agc_ProcessDigital_L0,REG0,0x5be)(lo)	|	VoC_lw16_d(REG0,0x448)(hi)
0x710405BE,	//0x0af6		VoC_lw16i_short(REG4,0x8,DEFAULT)	|	VoC_bne16_rd(Agc_ProcessDigital_L0,REG0,0x5be)(hi)
0xE5C9EFD5,	//0x0af8		VoC_jump(Agc_ProcessDigital_L2)	|	VoC_lw16i_short(REG5,0xfffffffd,IN_PARALLEL)
		//0x0afa		Agc_ProcessDigital_L0
0x05BF4428,	//0x0afa		VoC_bne16_rd(Agc_ProcessDigital_L1,REG0,0x5bf)
0xEFC57204,	//0x0afc		VoC_lw16i_short(REG5,0xfffffffc,IN_PARALLEL)	|	VoC_lw16i_short(REG4,0x10,DEFAULT)
0xF7E0E5C4,	//0x0afe		VoC_lw16i_short(REG0,0xffffffff,DEFAULT)	|	VoC_jump(Agc_ProcessDigital_L2)
		//0x0aff		Agc_ProcessDigital_L1
0x0D132B00,	//0x0b00		VoC_jump_lg(Agc_ProcessDigital_L28)
		//0x0b02		Agc_ProcessDigital_L2
0x04BB1504,	//0x0b02		VoC_sw16_d(REG4,0x4bb)
0x04BC1505,	//0x0b04		VoC_sw16_d(REG5,0x4bc)
0x08522B80,	//0x0b06		VoC_jal(Agc_ProcessVad)
0x04BB1404,	//0x0b08		VoC_lw16_d(REG4,0x4bb)
0x04BC1405,	//0x0b0a		VoC_lw16_d(REG5,0x4bc)
0x04301403,	//0x0b0c		VoC_lw16_d(REG3,0x430)
0x04173C33,	//0x0b0e		VoC_bngt16_rd(Agc_ProcessDigital_L3,REG3,0x417)
0x04191406,	//0x0b10		VoC_lw16_d(REG6,0x419)
0xFFC065CE,	//0x0b12		VoC_NAD(IN_PARALLEL)	|	VoC_jump(Agc_ProcessDigital_L5)
		//0x0b14		Agc_ProcessDigital_L3
0x04184C23,	//0x0b14		VoC_bnlt16_rd(Agc_ProcessDigital_L4,REG3,0x418)
0xE5C9F006,	//0x0b16		VoC_jump(Agc_ProcessDigital_L5)	|	VoC_lw16i_short(REG6,0x0,DEFAULT)
		//0x0b18		Agc_ProcessDigital_L4
0x04180B19,	//0x0b18		VoC_sub16_dr(REG1,0x418,REG3)
0x04191402,	//0x0b1a		VoC_lw16_d(REG2,0x419)
0xE0077159,	//0x0b1c		VoC_lw16i_short(REG7,0x0,IN_PARALLEL)	|	VoC_lw16i_short(FORMAT32,0xa,DEFAULT)
0xCC53C3D2,	//0x0b1e		VoC_multf32_rr(REG67,REG1,REG2,DEFAULT)	|	VoC_sub16_rr(REG2,REG7,REG2,DEFAULT)
		//0x0b20		Agc_ProcessDigital_L5
0x04341400,	//0x0b20		VoC_lw16_d(REG0,0x434)
0x0FA00A83,	//0x0b22		VoC_lw16i(REG3,0xfa0)
0x1FA00A82,	//0x0b24		VoC_lw16i(REG2,0x1fa0)
0x0B2A3498,	//0x0b26		VoC_bngt16_rr(Agc_ProcessDigital_L6,REG3,REG0)
0xFFC07006,	//0x0b28		VoC_NAD(IN_PARALLEL)	|	VoC_lw16i_short(REG6,0x0,DEFAULT)
		//0x0b2a		Agc_ProcessDigital_L6
0x0B323490,	//0x0b2a		VoC_bngt16_rr(Agc_ProcessDigital_L7,REG2,REG0)
0xF4614218,	//0x0b2c		VoC_lw16i_short(FORMAT32,0xc,IN_PARALLEL)	|	VoC_sub16_rr(REG0,REG0,REG3,DEFAULT)
0xFFC0CC33,	//0x0b2e		VoC_NOP	|	VoC_multf32_rr(REG67,REG0,REG6,DEFAULT)
0xFFC07FC0,	//0x0b30		VoC_NAD(IN_PARALLEL)	|	VoC_NOP
		//0x0b32		Agc_ProcessDigital_L7
0x04BD1506,	//0x0b32		VoC_sw16_d(REG6,0x4bd)
0x2007F019,	//0x0b34		VoC_lw16d_set_inc(REG3,0x447,0x1)(lo)	|	VoC_lw16i_short(FORMAT32,0x0,DEFAULT)
0x14070447,	//0x0b36		VoC_lw16_d(REG7,0x446)(lo)	|	VoC_lw16d_set_inc(REG3,0x447,0x1)(hi)
0x180A0446,	//0x0b38		VoC_lw16i_set_inc(REG2,0x465,0x2)(lo)	|	VoC_lw16_d(REG7,0x446)(hi)
0x2E390465,	//0x0b3a		VoC_loop_r(1,REG7)(lo)	|	VoC_lw16i_set_inc(REG2,0x465,0x2)(hi)
0xFF470B46,	//0x0b3c		VoC_lw32z(RL7,DEFAULT)	|	VoC_loop_r(1,REG7)(hi)
0xD8B7E707,	//0x0b3e		VoC_lw16inc_p(REG7,REG3,DEFAULT)	|	VoC_loop_r_short(REG4,DEFAULT)
0xFFC0CDFC,	//0x0b40		VoC_NOP	|	VoC_multf32_rr(ACC0,REG7,REG7,DEFAULT)
0x0B4536A7,	//0x0b42		VoC_bngt32_rr(Agc_ProcessDigital_L8,ACC0,RL7)
0xFFC0FF27,	//0x0b44		VoC_NOP	|	VoC_movreg32(RL7,ACC0,DEFAULT)
		//0x0b45		Agc_ProcessDigital_L8
		//0x0b45		VoC_endloop0
		//0x0b46		VoC_endloop1
0x1808DDD7,	//0x0b46		VoC_lw16i_set_inc(REG0,0x48d,0x2)(lo)	|	VoC_sw32inc_p(RL7,REG2,DEFAULT)
0x1487048D,	//0x0b48		VoC_lw32_d(RL7,0x3d4)(lo)	|	VoC_lw16i_set_inc(REG0,0x48d,0x2)(hi)
0x140703D4,	//0x0b4a		VoC_lw16_d(REG7,0x446)(lo)	|	VoC_lw32_d(RL7,0x3d4)(hi)
0x18090446,	//0x0b4c		VoC_lw16i_set_inc(REG1,0x465,0x2)(lo)	|	VoC_lw16_d(REG7,0x446)(hi)
0x5DC70465,	//0x0b4e		VoC_sw32inc_p(RL7,REG0,DEFAULT)	|	VoC_lw16i_set_inc(REG1,0x465,0x2)(hi)
0xFFC0F5FA,	//0x0b50		VoC_NAD	|	VoC_lw16i_short(FORMATX,0xffffffff,IN_PARALLEL)
0x0BB92E39,	//0x0b52		VoC_loop_r(1,REG7)
0x03D21481,	//0x0b54		VoC_lw32_d(REG23,0x3d2)
0x041B1404,	//0x0b56		VoC_lw16_d(REG4,0x41b)
0xF4017F0C,	//0x0b58		VoC_lw16i_short(FORMAT32,0x0,IN_PARALLEL)	|	VoC_movreg32(ACC0,REG23,DEFAULT)
0xF90A6047,	//0x0b5a		VoC_shru16_ri(REG2,0x1,IN_PARALLEL)	|	VoC_movreg16(REG7,REG2,DEFAULT)
0x1607FF45,	//0x0b5c		VoC_and16_ri(REG7,0x1)(lo)	|	VoC_lw32z(ACC1,DEFAULT)
0x31870001,	//0x0b5e		VoC_bez16_r(Agc_ProcessDigital_MulU0,REG7)(lo)	|	VoC_and16_ri(REG7,0x1)(hi)
0xE08A0B66,	//0x0b60		VoC_movreg16(ACC1_LO,REG4,DEFAULT)	|	VoC_bez16_r(Agc_ProcessDigital_MulU0,REG7)(hi)
0x0B663244,	//0x0b62		VoC_bnltz16_r(Agc_ProcessDigital_MulU0,REG4)
0xFFC077EB,	//0x0b64		VoC_NAD(IN_PARALLEL)	|	VoC_lw16i_short(ACC1_HI,0xffffffff,DEFAULT)
		//0x0b66		Agc_ProcessDigital_MulU0
0xCE944E1C,	//0x0b66		VoC_macX_rr(REG2,REG4,IN_PARALLEL)	|	VoC_mac32_rr(REG3,REG4,DEFAULT)
0xFA85D9CF,	//0x0b68		VoC_shr32_ri(ACC1,0x10,DEFAULT)	|	VoC_lw32inc_p(RL7,REG1,DEFAULT)
0x36BCC92C,	//0x0b6a		VoC_bngt32_rr(Agc_ProcessDigital_L9,RL7,ACC0)(lo)	|	VoC_add32_rr(ACC0,ACC0,ACC1,DEFAULT)
0xFF3C0B70,	//0x0b6c		VoC_movreg32(ACC0,RL7,DEFAULT)	|	VoC_bngt32_rr(Agc_ProcessDigital_L9,RL7,ACC0)(hi)
0xFFC07FC0,	//0x0b6e		VoC_NAD(IN_PARALLEL)	|	VoC_NOP
		//0x0b70		Agc_ProcessDigital_L9
0x03D21584,	//0x0b70		VoC_sw32_d(ACC0,0x3d2)
0x03D01484,	//0x0b72		VoC_lw32_d(ACC0,0x3d0)
0x0B7A36BC,	//0x0b74		VoC_bngt32_rr(Agc_ProcessDigital_L10,RL7,ACC0)
0x041A1404,	//0x0b76		VoC_lw16_d(REG4,0x41a)
0xE5C5CBE1,	//0x0b78		VoC_jump(Agc_ProcessDigital_L11)	|	VoC_sub32_rr(REG23,RL7,ACC0,DEFAULT)
		//0x0b7a		Agc_ProcessDigital_L10
0x04BD1404,	//0x0b7a		VoC_lw16_d(REG4,0x4bd)
0xFFC07F21,	//0x0b7c		VoC_NAD(IN_PARALLEL)	|	VoC_movreg32(REG23,ACC0,DEFAULT)
		//0x0b7e		Agc_ProcessDigital_L11
0xF90A6047,	//0x0b7e		VoC_shru16_ri(REG2,0x1,IN_PARALLEL)	|	VoC_movreg16(REG7,REG2,DEFAULT)
0x00011607,	//0x0b80		VoC_and16_ri(REG7,0x1)
0x3187FF45,	//0x0b82		VoC_bez16_r(Agc_ProcessDigital_MulU1,REG7)(lo)	|	VoC_lw32z(ACC1,DEFAULT)
0xE08A0B8A,	//0x0b84		VoC_movreg16(ACC1_LO,REG4,DEFAULT)	|	VoC_bez16_r(Agc_ProcessDigital_MulU1,REG7)(hi)
0x0B8A3244,	//0x0b86		VoC_bnltz16_r(Agc_ProcessDigital_MulU1,REG4)
0xFFC077EB,	//0x0b88		VoC_NAD(IN_PARALLEL)	|	VoC_lw16i_short(ACC1_HI,0xffffffff,DEFAULT)
		//0x0b8a		Agc_ProcessDigital_MulU1
0xCE944E1C,	//0x0b8a		VoC_macX_rr(REG2,REG4,IN_PARALLEL)	|	VoC_mac32_rr(REG3,REG4,DEFAULT)
0xFA85FFC0,	//0x0b8c		VoC_shr32_ri(ACC1,0x10,DEFAULT)	|	VoC_NOP
0xFFC0C92C,	//0x0b8e		VoC_NOP	|	VoC_add32_rr(ACC0,ACC0,ACC1,DEFAULT)
0x03D01584,	//0x0b90		VoC_sw32_d(ACC0,0x3d0)
0x03D26424,	//0x0b92		VoC_bnlt32_rd(Agc_ProcessDigital_L12,ACC0,0x3d2)
0x03D21484,	//0x0b94		VoC_lw32_d(ACC0,0x3d2)
		//0x0b96		Agc_ProcessDigital_L12
0xFFC07F26,	//0x0b96		VoC_NAD(IN_PARALLEL)	|	VoC_movreg32(RL6,ACC0,DEFAULT)
0x07D22B80,	//0x0b98		VoC_jal(Coolsand_CLZU)
0xFF227003,	//0x0b9a		VoC_movreg32(REG45,ACC0,IN_PARALLEL)	|	VoC_lw16i_short(REG3,0x0,DEFAULT)
0x0A87C2D3,	//0x0b9c		VoC_lw16i(REG7,0x7fff)(lo)	|	VoC_sub16_rr(REG3,REG3,REG2,DEFAULT)
0xFEDA7FFF,	//0x0b9e		VoC_shru32_rr(REG45,REG3,DEFAULT)	|	VoC_lw16i(REG7,0x7fff)(hi)
0xF647643D,	//0x0ba0		VoC_movreg16(REG7,REG2,IN_PARALLEL)	|	VoC_and16_rr(REG5,REG7,DEFAULT)
0x03D61FBB,	//0x0ba2		VoC_lw16i_set_inc(REG3,0x3d6,0xfffffffe)
0xC0FBF8FF,	//0x0ba4		VoC_add16_rr(REG3,REG3,REG7,DEFAULT)	|	VoC_shr16_ri(REG7,0xffffffff,DEFAULT)
0xD9DFFA9A,	//0x0ba6		VoC_lw32inc_p(RL7,REG3,DEFAULT)	|	VoC_shr32_ri(REG45,0x13,DEFAULT)
0xFF44599E,	//0x0ba8		VoC_lw32z(ACC0,IN_PARALLEL)	|	VoC_lw32_p(RL6,REG3,DEFAULT)
0xF5814BBB,	//0x0baa		VoC_lw16i_short(FORMAT32,0xfffffff0,IN_PARALLEL)	|	VoC_sub32_rr(REG67,RL6,RL7,DEFAULT)
0xF90E60C5,	//0x0bac		VoC_shru16_ri(REG6,0x1,IN_PARALLEL)	|	VoC_movreg16(REG5,REG6,DEFAULT)
0x00011605,	//0x0bae		VoC_and16_ri(REG5,0x1)
0x0BB33185,	//0x0bb0		VoC_bez16_r(Agc_ProcessDigital_MulS32S16_L0,REG5)
0xCE74E088,	//0x0bb2		VoC_macX_rr(REG6,REG4,DEFAULT)	|	VoC_movreg16(ACC0_LO,REG4,DEFAULT)
		//0x0bb3		Agc_ProcessDigital_MulS32S16_L0
0xFFC0CE3C,	//0x0bb4		VoC_NOP	|	VoC_mac32_rr(REG7,REG4,DEFAULT)
0xC9E7FA64,	//0x0bb6		VoC_add32_rr(RL7,RL7,ACC0,DEFAULT)	|	VoC_shr32_ri(ACC0,0xc,DEFAULT)
0xDDC7FFC0,	//0x0bb8		VoC_sw32inc_p(RL7,REG0,DEFAULT)	|	VoC_NOP
		//0x0bb9		VoC_endloop1
0xF81C78BA,	//0x0bba		VoC_shr16_ri(REG4,0x3,IN_PARALLEL)	|	VoC_shr16_ri(REG2,0xfffffff7,DEFAULT)
0x1482C2A7,	//0x0bbc		VoC_lw32_d(REG45,0x3d2)(lo)	|	VoC_sub16_rr(REG7,REG2,REG4,DEFAULT)
0xFF1603D2,	//0x0bbe		VoC_movreg32(RL6,REG45,DEFAULT)	|	VoC_lw32_d(REG45,0x3d2)(hi)
0x07D22B80,	//0x0bc0		VoC_jal(Coolsand_CLZU)
0x0A86F003,	//0x0bc2		VoC_lw16i(REG6,0x7fff)(lo)	|	VoC_lw16i_short(REG3,0x0,DEFAULT)
0xC2D37FFF,	//0x0bc4		VoC_sub16_rr(REG3,REG3,REG2,DEFAULT)	|	VoC_lw16i(REG6,0x7fff)(hi)
0x6435FEDA,	//0x0bc6		VoC_and16_rr(REG5,REG6,DEFAULT)	|	VoC_shru32_rr(REG45,REG3,DEFAULT)
0xFAB2F8BA,	//0x0bc8		VoC_shr32_ri(REG45,0x16,DEFAULT)	|	VoC_shr16_ri(REG2,0xfffffff7,IN_PARALLEL)
0xF40142A2,	//0x0bca		VoC_lw16i_short(FORMAT32,0x0,IN_PARALLEL)	|	VoC_sub16_rr(REG2,REG2,REG4,DEFAULT)
0x04381403,	//0x0bcc		VoC_lw16_d(REG3,0x438)
0x041D1404,	//0x0bce		VoC_lw16_d(REG4,0x41d)
0xC0FB40A4,	//0x0bd0		VoC_add16_rr(REG3,REG3,REG7,IN_PARALLEL)	|	VoC_add16_rr(REG4,REG2,REG4,DEFAULT)
0xE002431C,	//0x0bd2		VoC_lw16i_short(REG2,0x0,IN_PARALLEL)	|	VoC_sub16_rr(REG4,REG4,REG3,DEFAULT)
0x0BDE3204,	//0x0bd4		VoC_bltz16_r(Agc_ProcessDigital_L13,REG4)
0x04161402,	//0x0bd6		VoC_lw16_d(REG2,0x416)
0xCC9CF0E3,	//0x0bd8		VoC_multf32_rr(ACC0,REG2,REG3,DEFAULT)	|	VoC_lw16i_short(REG3,0x7,DEFAULT)
0xC8A1F005,	//0x0bda		VoC_add32_rr(REG23,REG45,ACC0,DEFAULT)	|	VoC_lw16i_short(REG5,0x0,DEFAULT)
0xFFC0FA19,	//0x0bdc		VoC_NOP	|	VoC_shr32_ri(REG23,0x3,DEFAULT)
		//0x0bde		Agc_ProcessDigital_L13
0x04161502,	//0x0bde		VoC_sw16_d(REG2,0x416)
0x0C1A3142,	//0x0be0		VoC_bngtz16_r(Agc_ProcessDigital_L14,REG2)
0x041C1406,	//0x0be2		VoC_lw16_d(REG6,0x41c)
0xF5817007,	//0x0be4		VoC_lw16i_short(FORMAT32,0xfffffff0,IN_PARALLEL)	|	VoC_lw16i_short(REG7,0x0,DEFAULT)
0x0BEA34B2,	//0x0be6		VoC_bngt16_rr(Agc_ProcessDigital_L15,REG6,REG2)
0xF827C397,	//0x0be8		VoC_shr16_ri(REG7,0x4,DEFAULT)	|	VoC_sub16_rr(REG7,REG6,REG2,DEFAULT)
		//0x0bea		Agc_ProcessDigital_L15
0xE0157826,	//0x0bea		VoC_lw16i_short(REG5,0x1,IN_PARALLEL)	|	VoC_shr16_ri(REG6,0x4,DEFAULT)
0x048D1808,	//0x0bec		VoC_lw16i_set_inc(REG0,0x48d,0x2)
0xF8CD43F7,	//0x0bee		VoC_shr16_ri(REG5,0xfffffff9,IN_PARALLEL)	|	VoC_sub16_rr(REG7,REG7,REG6,DEFAULT)
0x04461406,	//0x0bf0		VoC_lw16_d(REG6,0x446)
0xC1EF5E00,	//0x0bf2		VoC_add16_rr(REG7,REG7,REG5,IN_PARALLEL)	|	VoC_inc_p(REG0,DEFAULT)
0x03D61487,	//0x0bf4		VoC_lw32_d(RL7,0x3d6)
0x0C172E31,	//0x0bf6		VoC_loop_r(1,REG6)
0xF5FA5986,	//0x0bf8		VoC_lw16i_short(FORMATX,0xffffffff,IN_PARALLEL)	|	VoC_lw32_p(RL6,REG0,DEFAULT)
0xCBB97F44,	//0x0bfa		VoC_sub32_rr(REG23,RL6,RL7,IN_PARALLEL)	|	VoC_lw32z(ACC0,DEFAULT)
0x05B660B1,	//0x0bfc		VoC_blt32_rd(Agc_ProcessDigital_L16,REG23,0x5b6)
0x6045FA39,	//0x0bfe		VoC_movreg16(REG5,REG2,DEFAULT)	|	VoC_shr32_ri(REG23,0x7,DEFAULT)
0x1605F90A,	//0x0c00		VoC_and16_ri(REG5,0x1)(lo)	|	VoC_shru16_ri(REG2,0x1,IN_PARALLEL)
0x31850001,	//0x0c02		VoC_bez16_r(Agc_ProcessDigital_MulS32S16_L1,REG5)(lo)	|	VoC_and16_ri(REG5,0x1)(hi)
0xE0E80C06,	//0x0c04		VoC_movreg16(ACC0_LO,REG7,DEFAULT)	|	VoC_bez16_r(Agc_ProcessDigital_MulS32S16_L1,REG5)(hi)
		//0x0c06		Agc_ProcessDigital_MulS32S16_L1
0xCE1FCE57,	//0x0c06		VoC_mac32_rr(REG3,REG7,DEFAULT)	|	VoC_macX_rr(REG2,REG7,DEFAULT)
0xFFC065CD,	//0x0c08		VoC_NAD(IN_PARALLEL)	|	VoC_jump(Agc_ProcessDigital_L17)
		//0x0c0a		Agc_ProcessDigital_L16
0xF90A6045,	//0x0c0a		VoC_shru16_ri(REG2,0x1,IN_PARALLEL)	|	VoC_movreg16(REG5,REG2,DEFAULT)
0x00011605,	//0x0c0c		VoC_and16_ri(REG5,0x1)
0x0C113185,	//0x0c0e		VoC_bez16_r(Agc_ProcessDigital_MulS32S16_L2,REG5)
0xCE57E0E8,	//0x0c10		VoC_macX_rr(REG2,REG7,DEFAULT)	|	VoC_movreg16(ACC0_LO,REG7,DEFAULT)
		//0x0c11		Agc_ProcessDigital_MulS32S16_L2
0xFFC0CE1F,	//0x0c12		VoC_NOP	|	VoC_mac32_rr(REG3,REG7,DEFAULT)
0xC9E6FA3C,	//0x0c14		VoC_add32_rr(RL6,RL7,ACC0,DEFAULT)	|	VoC_shr32_ri(ACC0,0x7,DEFAULT)
		//0x0c15		Agc_ProcessDigital_L17
0xDDC6FFC0,	//0x0c16		VoC_sw32inc_p(RL6,REG0,DEFAULT)	|	VoC_NOP
		//0x0c17		VoC_endloop1
0xFFC07FC0,	//0x0c18		VoC_NAD(IN_PARALLEL)	|	VoC_NOP
		//0x0c1a		Agc_ProcessDigital_L14
0x048D1808,	//0x0c1a		VoC_lw16i_set_inc(REG0,0x48d,0x2)
0x04651809,	//0x0c1c		VoC_lw16i_set_inc(REG1,0x465,0x2)
0x04461407,	//0x0c1e		VoC_lw16_d(REG7,0x446)
0xFFC05E00,	//0x0c20		VoC_NAD(IN_PARALLEL)	|	VoC_inc_p(REG0,DEFAULT)
0x0C862E39,	//0x0c22		VoC_loop_r(1,REG7)
0xD9857142,	//0x0c24		VoC_lw32_p(ACC1,REG0,IN_PARALLEL)	|	VoC_lw16i_short(REG2,0xa,DEFAULT)
0x05BA543D,	//0x0c26		VoC_bngt32_rd(Agc_ProcessDigital_L18,ACC1,0x5ba)
0xE1067F2E,	//0x0c28		VoC_lw16i_short(REG6,0x10,IN_PARALLEL)	|	VoC_movreg32(RL6,ACC1,DEFAULT)
0x07F82B80,	//0x0c2a		VoC_jal(Coolsand_CLZS)
0xFF2AC392,	//0x0c2c		VoC_movreg32(REG45,ACC1,DEFAULT)	|	VoC_sub16_rr(REG2,REG6,REG2,DEFAULT)
		//0x0c2d		Agc_ProcessDigital_L18
0xFF447E92,	//0x0c2e		VoC_lw32z(ACC0,IN_PARALLEL)	|	VoC_shr32_rr(REG45,REG2,DEFAULT)
0x05B40912,	//0x0c30		VoC_add32_rd(REG45,REG45,0x5b4)
0xF5F16083,	//0x0c32		VoC_lw16i_short(FORMAT32,0xfffffffe,IN_PARALLEL)	|	VoC_movreg16(REG3,REG4,DEFAULT)
0x00011603,	//0x0c34		VoC_and16_ri(REG3,0x1)
0x0C3C3183,	//0x0c36		VoC_bez16_r(Agc_ProcessDigital_MulU16U16_L0,REG3)
0x09A4C894,	//0x0c38		VoC_sub32_rd(ACC0,ACC0,0x5b4)(lo)	|	VoC_add32_rr(ACC0,REG45,REG45,DEFAULT)
0xFFC005B4,	//0x0c3a		VoC_NAD	|	VoC_sub32_rd(ACC0,ACC0,0x5b4)(hi)
		//0x0c3c		Agc_ProcessDigital_MulU16U16_L0
0xE0B5790C,	//0x0c3c		VoC_lw16i_short(REG5,0xb,IN_PARALLEL)	|	VoC_shru16_ri(REG4,0x1,DEFAULT)
0xC2AD4E24,	//0x0c3e		VoC_sub16_rr(REG5,REG2,REG5,IN_PARALLEL)	|	VoC_mac32_rr(REG4,REG4,DEFAULT)
0xF8FD700F,	//0x0c40		VoC_shr16_ri(REG5,0xffffffff,IN_PARALLEL)	|	VoC_lw16i_short(RL7_HI,0x0,DEFAULT)
0x7FFF0A8E,	//0x0c42		VoC_lw16i(RL7_LO,0x7fff)
0xD9CEFEAF,	//0x0c44		VoC_lw32inc_p(RL6,REG1,DEFAULT)	|	VoC_shr32_rr(RL7,REG5,DEFAULT)
0x04B71587,	//0x0c46		VoC_sw32_d(RL7,0x4b7)
0xFF2F7A66,	//0x0c48		VoC_movreg32(RL7,ACC1,IN_PARALLEL)	|	VoC_shr32_ri(RL6,0xc,DEFAULT)
0x05B40936,	//0x0c4a		VoC_add32_rd(RL6,RL6,0x5b4)
		//0x0c4c		Agc_ProcessDigital_L22
0xF7037F22,	//0x0c4c		VoC_movreg16(REG3,ACC0_LO,IN_PARALLEL)	|	VoC_movreg32(REG45,ACC0,DEFAULT)
0xFF337A6A,	//0x0c4e		VoC_movreg32(REG67,RL6,IN_PARALLEL)	|	VoC_shr32_ri(REG45,0xd,DEFAULT)
0x1FFF1603,	//0x0c50		VoC_and16_ri(REG3,0x1fff)
0x7F44F619,	//0x0c52		VoC_lw32z(ACC0,DEFAULT)	|	VoC_lw16i_short(FORMAT32,0xfffffff0,DEFAULT)
0x60C5FF45,	//0x0c54		VoC_movreg16(REG5,REG6,DEFAULT)	|	VoC_lw32z(ACC1,IN_PARALLEL)
0x1605F90E,	//0x0c56		VoC_and16_ri(REG5,0x1)(lo)	|	VoC_shru16_ri(REG6,0x1,IN_PARALLEL)
0x31850001,	//0x0c58		VoC_bez16_r(Agc_ProcessDigital_MulS32S16_L3,REG5)(lo)	|	VoC_and16_ri(REG5,0x1)(hi)
0x60880C5E,	//0x0c5a		VoC_movreg16(ACC0_LO,REG4,DEFAULT)	|	VoC_bez16_r(Agc_ProcessDigital_MulS32S16_L3,REG5)(hi)
0xFFC0F66A,	//0x0c5c		VoC_NAD	|	VoC_movreg16(ACC1_LO,REG3,IN_PARALLEL)
		//0x0c5e		Agc_ProcessDigital_MulS32S16_L3
0xCEB34E74,	//0x0c5e		VoC_macX_rr(REG6,REG3,IN_PARALLEL)	|	VoC_macX_rr(REG6,REG4,DEFAULT)
0xCE3B4E3C,	//0x0c60		VoC_mac32_rr(REG7,REG3,IN_PARALLEL)	|	VoC_mac32_rr(REG7,REG4,DEFAULT)
0x04B71482,	//0x0c62		VoC_lw32_d(REG45,0x4b7)
0xC92CFA6D,	//0x0c64		VoC_add32_rr(ACC0,ACC0,ACC1,DEFAULT)	|	VoC_shr32_ri(ACC1,0xd,DEFAULT)
0x0C8636A2,	//0x0c66		VoC_bngt32_rr(Agc_ProcessDigital_L19,ACC0,REG45)
0x543BFF3B,	//0x0c68		VoC_bngt32_rd(Agc_ProcessDigital_L20,REG67,0x5b8)(lo)	|	VoC_movreg32(REG67,RL7,DEFAULT)
0xFA4305B8,	//0x0c6a		VoC_shr32_ri(REG67,0x8,DEFAULT)	|	VoC_bngt32_rd(Agc_ProcessDigital_L20,REG67,0x5b8)(hi)
0xFBFB4BDF,	//0x0c6c		VoC_shr32_ri(REG67,0xffffffff,IN_PARALLEL)	|	VoC_sub32_rr(RL7,RL7,REG67,DEFAULT)
0xE5C5CBDF,	//0x0c6e		VoC_jump(Agc_ProcessDigital_L21)	|	VoC_sub32_rr(RL7,RL7,REG67,DEFAULT)
		//0x0c70		Agc_ProcessDigital_L20
0x4AFBFBC3,	//0x0c70		VoC_sub32_rr(REG67,REG67,RL7,DEFAULT)	|	VoC_shr32_ri(REG67,0xfffffff8,DEFAULT)
0xCAFFFBFF,	//0x0c72		VoC_sub32_rr(RL7,REG67,RL7,DEFAULT)	|	VoC_shr32_ri(RL7,0xffffffff,IN_PARALLEL)
		//0x0c74		Agc_ProcessDigital_L21
0x7E92FF3A,	//0x0c74		VoC_shr32_rr(REG45,REG2,DEFAULT)	|	VoC_movreg32(REG45,RL7,DEFAULT)
0x0912FF44,	//0x0c76		VoC_add32_rd(REG45,REG45,0x5b4)(lo)	|	VoC_lw32z(ACC0,IN_PARALLEL)
0x608305B4,	//0x0c78		VoC_movreg16(REG3,REG4,DEFAULT)	|	VoC_add32_rd(REG45,REG45,0x5b4)(hi)
0x1603F5F1,	//0x0c7a		VoC_and16_ri(REG3,0x1)(lo)	|	VoC_lw16i_short(FORMAT32,0xfffffffe,IN_PARALLEL)
0x31830001,	//0x0c7c		VoC_bez16_r(Agc_ProcessDigital_MulU16U16_L1,REG3)(lo)	|	VoC_and16_ri(REG3,0x1)(hi)
0xC8940C82,	//0x0c7e		VoC_add32_rr(ACC0,REG45,REG45,DEFAULT)	|	VoC_bez16_r(Agc_ProcessDigital_MulU16U16_L1,REG3)(hi)
0x05B409A4,	//0x0c80		VoC_sub32_rd(ACC0,ACC0,0x5b4)
		//0x0c82		Agc_ProcessDigital_MulU16U16_L1
0xCE24F90C,	//0x0c82		VoC_mac32_rr(REG4,REG4,DEFAULT)	|	VoC_shru16_ri(REG4,0x1,DEFAULT)
0x0C4C2B00,	//0x0c84		VoC_jump_lg(Agc_ProcessDigital_L22)
		//0x0c86		Agc_ProcessDigital_L19
		//0x0c86		VoC_endloop1
0x1407DDC7,	//0x0c86		VoC_lw16_d(REG7,0x446)(lo)	|	VoC_sw32inc_p(RL7,REG0,DEFAULT)
0xF0260446,	//0x0c88		VoC_lw16i_short(REG6,0x1,DEFAULT)	|	VoC_lw16_d(REG7,0x446)(hi)
0x0C9E34BE,	//0x0c8a		VoC_bngt16_rr(Agc_ProcessDigital_L23,REG7,REG6)
0x1808C3F5,	//0x0c8c		VoC_lw16i_set_inc(REG0,0x48d,0x2)(lo)	|	VoC_sub16_rr(REG5,REG7,REG6,DEFAULT)
0xFFC0048D,	//0x0c8e		VoC_NOP	|	VoC_lw16i_set_inc(REG0,0x48d,0x2)(hi)
0x6001DE00,	//0x0c90		VoC_movreg16(REG1,REG0,DEFAULT)	|	VoC_inc_p(REG0,DEFAULT)
0xD9C6F009,	//0x0c92		VoC_lw32inc_p(RL6,REG0,DEFAULT)	|	VoC_lw16i_short(INC1,0x2,IN_PARALLEL)
0xD9C7E746,	//0x0c94		VoC_lw32inc_p(RL7,REG0,DEFAULT)	|	VoC_loop_r_short(REG5,DEFAULT)
0x0C9A36B7,	//0x0c96		VoC_bngt32_rr(Agc_ProcessDigital_L24,RL6,RL7)
0xFFC05D8F,	//0x0c98		VoC_NAD(IN_PARALLEL)	|	VoC_sw32_p(RL7,REG1,DEFAULT)
		//0x0c9a		Agc_ProcessDigital_L24
		//0x0c9a		VoC_endloop0
0xDE087F3E,	//0x0c9a		VoC_inc_p(REG1,IN_PARALLEL)	|	VoC_movreg32(RL6,RL7,DEFAULT)
0xFFC07FC0,	//0x0c9c		VoC_NAD(IN_PARALLEL)	|	VoC_NOP
		//0x0c9e		Agc_ProcessDigital_L23
0x048D1808,	//0x0c9e		VoC_lw16i_set_inc(REG0,0x48d,0x2)
0xC039F8FF,	//0x0ca0		VoC_add16_rr(REG1,REG0,REG7,DEFAULT)	|	VoC_shr16_ri(REG7,0xffffffff,DEFAULT)
0xD98DFFC0,	//0x0ca2		VoC_lw32_p(ACC1,REG1,DEFAULT)	|	VoC_NOP
0x1585D9C6,	//0x0ca4		VoC_sw32_d(ACC1,0x3d4)(lo)	|	VoC_lw32inc_p(RL6,REG0,DEFAULT)
0x598703D4,	//0x0ca6		VoC_lw32_p(RL7,REG0,DEFAULT)	|	VoC_sw32_d(ACC1,0x3d4)(hi)
0x1402EFC3,	//0x0ca8		VoC_lw16_d(REG2,0x4bc)(lo)	|	VoC_lw16i_short(REG3,0xfffffffc,IN_PARALLEL)
0x4BF704BC,	//0x0caa		VoC_sub32_rr(RL7,RL7,RL6,DEFAULT)	|	VoC_lw16_d(REG2,0x4bc)(hi)
0x7E97C2D2,	//0x0cac		VoC_shr32_rr(RL7,REG2,DEFAULT)	|	VoC_sub16_rr(REG2,REG3,REG2,IN_PARALLEL)
0x1407FBE6,	//0x0cae		VoC_lw16_d(REG7,0x4bb)(lo)	|	VoC_shr32_ri(RL6,0xfffffffc,IN_PARALLEL)
0x200404BB,	//0x0cb0		VoC_lw16d_set_inc(REG0,0x447,0x1)(lo)	|	VoC_lw16_d(REG7,0x4bb)(hi)
0xF6190447,	//0x0cb2		VoC_lw16i_short(FORMAT32,0xfffffff0,DEFAULT)	|	VoC_lw16d_set_inc(REG0,0x447,0x1)(hi)
0x0CE52E39,	//0x0cb4		VoC_loop_r(1,REG7)
0x05BC0932,	//0x0cb6		VoC_add32_rd(REG45,RL6,0x5bc)
0xD8067A3A,	//0x0cb8		VoC_lw16_p(REG6,REG0,IN_PARALLEL)	|	VoC_shr32_ri(REG45,0x7,DEFAULT)
0xF90C6083,	//0x0cba		VoC_shru16_ri(REG4,0x1,IN_PARALLEL)	|	VoC_movreg16(REG3,REG4,DEFAULT)
0x1603FF44,	//0x0cbc		VoC_and16_ri(REG3,0x1)(lo)	|	VoC_lw32z(ACC0,DEFAULT)
0x31830001,	//0x0cbe		VoC_bez16_r(Agc_ProcessDigital_MulS32S16_L4,REG3)(lo)	|	VoC_and16_ri(REG3,0x1)(hi)
0xE0C80CC5,	//0x0cc0		VoC_movreg16(ACC0_LO,REG6,DEFAULT)	|	VoC_bez16_r(Agc_ProcessDigital_MulS32S16_L4,REG3)(hi)
0x0CC53246,	//0x0cc2		VoC_bnltz16_r(Agc_ProcessDigital_MulS32S16_L4,REG6)
0xCE66F7E9,	//0x0cc4		VoC_macX_rr(REG4,REG6,DEFAULT)	|	VoC_lw16i_short(ACC0_HI,0xffffffff,DEFAULT)
		//0x0cc5		Agc_ProcessDigital_MulS32S16_L4
0xFFC0CE2E,	//0x0cc6		VoC_NOP	|	VoC_mac32_rr(REG5,REG6,DEFAULT)
0x3C29E121,	//0x0cc8		VoC_bngt16_rd(Agc_ProcessDigital_L25,REG1,0x5c0)(lo)	|	VoC_movreg16(REG1,ACC0_HI,DEFAULT)
0x0A8205C0,	//0x0cca		VoC_lw16i(REG2,0x7fff)(lo)	|	VoC_bngt16_rd(Agc_ProcessDigital_L25,REG1,0x5c0)(hi)
0xE5D77FFF,	//0x0ccc		VoC_jump(Agc_ProcessDigital_L27)	|	VoC_lw16i(REG2,0x7fff)(hi)
		//0x0cce		Agc_ProcessDigital_L25
0x05C14C29,	//0x0cce		VoC_bnlt16_rd(Agc_ProcessDigital_L26,REG1,0x5c1)
0x00000AC2,	//0x0cd0		VoC_lw16i(REG2,0x8000)
0xFF32E5D2,	//0x0cd2		VoC_movreg32(REG45,RL6,DEFAULT)	|	VoC_jump(Agc_ProcessDigital_L27)
		//0x0cd3		Agc_ProcessDigital_L26
0xFF447A22,	//0x0cd4		VoC_lw32z(ACC0,IN_PARALLEL)	|	VoC_shr32_ri(REG45,0x4,DEFAULT)
0xF90C6083,	//0x0cd6		VoC_shru16_ri(REG4,0x1,IN_PARALLEL)	|	VoC_movreg16(REG3,REG4,DEFAULT)
0x00011603,	//0x0cd8		VoC_and16_ri(REG3,0x1)
0x0CE03183,	//0x0cda		VoC_bez16_r(Agc_ProcessDigital_MulS32S16_L5,REG3)
0x3246E0C8,	//0x0cdc		VoC_bnltz16_r(Agc_ProcessDigital_MulS32S16_L5,REG6)(lo)	|	VoC_movreg16(ACC0_LO,REG6,DEFAULT)
0xF7E90CE0,	//0x0cde		VoC_lw16i_short(ACC0_HI,0xffffffff,DEFAULT)	|	VoC_bnltz16_r(Agc_ProcessDigital_MulS32S16_L5,REG6)(hi)
		//0x0ce0		Agc_ProcessDigital_MulS32S16_L5
0xCE2ECE66,	//0x0ce0		VoC_mac32_rr(REG5,REG6,DEFAULT)	|	VoC_macX_rr(REG4,REG6,DEFAULT)
0xE122FFC0,	//0x0ce2		VoC_movreg16(REG2,ACC0_HI,DEFAULT)	|	VoC_NOP
		//0x0ce4		Agc_ProcessDigital_L27
0xDC82C9BE,	//0x0ce4		VoC_sw16inc_p(REG2,REG0,DEFAULT)	|	VoC_add32_rr(RL6,RL6,RL7,DEFAULT)
		//0x0ce5		VoC_endloop1
0x04461405,	//0x0ce6		VoC_lw16_d(REG5,0x446)
0x34ACF024,	//0x0ce8		VoC_bngt16_rr(Agc_ProcessDigital_L28,REG5,REG4)(lo)	|	VoC_lw16i_short(REG4,0x1,DEFAULT)
0xC3650D13,	//0x0cea		VoC_sub16_rr(REG5,REG5,REG4,DEFAULT)	|	VoC_bngt16_rr(Agc_ProcessDigital_L28,REG5,REG4)(hi)
0x048D1809,	//0x0cec		VoC_lw16i_set_inc(REG1,0x48d,0x2)
0xDE08FFC0,	//0x0cee		VoC_inc_p(REG1,DEFAULT)	|	VoC_NOP
0xD9CEFFC0,	//0x0cf0		VoC_lw32inc_p(RL6,REG1,DEFAULT)	|	VoC_NOP
0x0D112E29,	//0x0cf2		VoC_loop_r(1,REG5)
0xEFC359CF,	//0x0cf4		VoC_lw16i_short(REG3,0xfffffffc,IN_PARALLEL)	|	VoC_lw32inc_p(RL7,REG1,DEFAULT)
0x1406CBF5,	//0x0cf6		VoC_lw16_d(REG6,0x4bc)(lo)	|	VoC_sub32_rr(ACC1,RL7,RL6,DEFAULT)
0xC2F304BC,	//0x0cf8		VoC_sub16_rr(REG3,REG3,REG6,DEFAULT)	|	VoC_lw16_d(REG6,0x4bc)(hi)
0xFBE67E9D,	//0x0cfa		VoC_shr32_ri(RL6,0xfffffffc,IN_PARALLEL)	|	VoC_shr32_rr(ACC1,REG3,DEFAULT)
0xE7D3FFC0,	//0x0cfc		VoC_loop_r_short(REG7,DEFAULT)	|	VoC_NAD
0xFF325806,	//0x0cfe		VoC_movreg32(REG45,RL6,IN_PARALLEL)	|	VoC_lw16_p(REG6,REG0,DEFAULT)
0xFF447A22,	//0x0d00		VoC_lw32z(ACC0,IN_PARALLEL)	|	VoC_shr32_ri(REG45,0x4,DEFAULT)
0xF90C6083,	//0x0d02		VoC_shru16_ri(REG4,0x1,IN_PARALLEL)	|	VoC_movreg16(REG3,REG4,DEFAULT)
0x00011603,	//0x0d04		VoC_and16_ri(REG3,0x1)
0x0D0C3183,	//0x0d06		VoC_bez16_r(Agc_ProcessDigital_MulS32S16_L6,REG3)
0x3246E0C8,	//0x0d08		VoC_bnltz16_r(Agc_ProcessDigital_MulS32S16_L6,REG6)(lo)	|	VoC_movreg16(ACC0_LO,REG6,DEFAULT)
0xF7E90D0C,	//0x0d0a		VoC_lw16i_short(ACC0_HI,0xffffffff,DEFAULT)	|	VoC_bnltz16_r(Agc_ProcessDigital_MulS32S16_L6,REG6)(hi)
		//0x0d0c		Agc_ProcessDigital_MulS32S16_L6
0xCE2ECE66,	//0x0d0c		VoC_mac32_rr(REG5,REG6,DEFAULT)	|	VoC_macX_rr(REG4,REG6,DEFAULT)
0xFFC0C9AE,	//0x0d0e		VoC_NOP	|	VoC_add32_rr(RL6,RL6,ACC1,DEFAULT)
		//0x0d10		VoC_endloop0
0xFF3EDC89,	//0x0d10		VoC_movreg32(RL6,RL7,DEFAULT)	|	VoC_sw16inc_p(ACC0_HI,REG0,DEFAULT)
		//0x0d11		VoC_endloop1
0xDFA9FFC0,	//0x0d12		VoC_pop16(RA,DEFAULT)	|	VoC_NOP
		//0x0d13		Agc_ProcessDigital_L28
0xE580FFC0,	//0x0d14		VoC_return	|	VoC_NOP
		//0x0d16		Coolsand_NonClipDigitalGain
0x5F41D834,	//0x0d16		VoC_push32(REG23,DEFAULT)	|	VoC_lw16_p(REG4,REG3,DEFAULT)
0x1504FF07,	//0x0d18		VoC_sw16_d(REG4,0x1919)(lo)	|	VoC_movreg32(RL7,REG01,IN_PARALLEL)
0x0A871919,	//0x0d1a		VoC_lw16i(REG7,0xa0)(lo)	|	VoC_sw16_d(REG4,0x1919)(hi)
0x407B00A0,	//0x0d1c		VoC_add16_rr(REG3,REG1,REG7,DEFAULT)	|	VoC_lw16i(REG7,0xa0)(hi)
0x2CA0F00B,	//0x0d1e		VoC_loop_i(0x0,0x50)(lo)	|	VoC_lw16i_short(INC3,0x2,IN_PARALLEL)
0xD9D20D24,	//0x0d20		VoC_lw32inc_p(REG45,REG2,DEFAULT)	|	VoC_loop_i(0x0,0x50)(hi)
0xDDCAD9C3,	//0x0d22		VoC_sw32inc_p(REG45,REG1,DEFAULT)	|	VoC_lw32inc_p(REG67,REG0,DEFAULT)
		//0x0d24		VoC_endloop0
0x7F43DDDB,	//0x0d24		VoC_lw32z(REG67,DEFAULT)	|	VoC_sw32inc_p(REG67,REG3,DEFAULT)
0x0A85F7E1,	//0x0d26		VoC_lw16i(REG5,0x13f)(lo)	|	VoC_movreg16(REG1,RL7_HI,IN_PARALLEL)
0x7031013F,	//0x0d28		VoC_lw16i_short(INC1,0x1,DEFAULT)	|	VoC_lw16i(REG5,0x13f)(hi)
0x1804E014,	//0x0d2a		VoC_lw16i_set_inc(REG0,0x330,0x1)(lo)	|	VoC_lw16i_short(REG4,0x1,IN_PARALLEL)
0xD8920330,	//0x0d2c		VoC_lw16inc_p(REG2,REG1,DEFAULT)	|	VoC_lw16i_set_inc(REG0,0x330,0x1)(hi)
		//0x0d2d		Coolsand_NonClipDigitalGain_L0
0x3202D813,	//0x0d2e		VoC_bltz16_r(Coolsand_NonClipDigitalGain_L1,REG2)(lo)	|	VoC_lw16_p(REG3,REG1,DEFAULT)
0x32430D3A,	//0x0d30		VoC_bnltz16_r(Coolsand_NonClipDigitalGain_L1,REG3)(lo)	|	VoC_bltz16_r(Coolsand_NonClipDigitalGain_L1,REG2)(hi)
0x5C860D3A,	//0x0d32		VoC_sw16inc_p(REG6,REG0,DEFAULT)	|	VoC_bnltz16_r(Coolsand_NonClipDigitalGain_L1,REG3)(hi)
0x0A82C1E7,	//0x0d34		VoC_lw16i(REG2,0xa0)(lo)	|	VoC_add16_rr(REG7,REG7,REG4,IN_PARALLEL)
0x349600A0,	//0x0d36		VoC_bngt16_rr(Coolsand_NonClipDigitalGain_L3,REG2,REG6)(lo)	|	VoC_lw16i(REG2,0xa0)(hi)
0xE5CB0D47,	//0x0d38		VoC_jump(Coolsand_NonClipDigitalGain_L2)	|	VoC_bngt16_rr(Coolsand_NonClipDigitalGain_L3,REG2,REG6)(hi)
		//0x0d3a		Coolsand_NonClipDigitalGain_L1
0x0D443102,	//0x0d3a		VoC_bgtz16_r(Coolsand_NonClipDigitalGain_L2,REG2)
0x0D443143,	//0x0d3c		VoC_bngtz16_r(Coolsand_NonClipDigitalGain_L2,REG3)
0xC1E75C86,	//0x0d3e		VoC_add16_rr(REG7,REG7,REG4,IN_PARALLEL)	|	VoC_sw16inc_p(REG6,REG0,DEFAULT)
0x00A00A82,	//0x0d40		VoC_lw16i(REG2,0xa0)
0x0D473496,	//0x0d42		VoC_bngt16_rr(Coolsand_NonClipDigitalGain_L3,REG2,REG6)
		//0x0d44		Coolsand_NonClipDigitalGain_L2
0x342EC1A6,	//0x0d44		VoC_bgt16_rr(Coolsand_NonClipDigitalGain_L0,REG5,REG6)(lo)	|	VoC_add16_rr(REG6,REG6,REG4,DEFAULT)
0xF0420D2D,	//0x0d46		VoC_lw16i_short(REG2,0x2,DEFAULT)	|	VoC_bgt16_rr(Coolsand_NonClipDigitalGain_L0,REG5,REG6)(hi)
		//0x0d47		Coolsand_NonClipDigitalGain_L3
0x0DC03417,	//0x0d48		VoC_bgt16_rr(Coolsand_NonClipDigitalGain_End,REG2,REG7)
0x7031F030,	//0x0d4a		VoC_lw16i_short(INC1,0x1,DEFAULT)	|	VoC_lw16i_short(INC0,0x1,DEFAULT)
0x7F38E013,	//0x0d4c		VoC_movreg32(REG01,RL7,DEFAULT)	|	VoC_lw16i_short(REG3,0x1,IN_PARALLEL)
0x1806C3DF,	//0x0d4e		VoC_lw16i_set_inc(REG2,0x330,0x1)(lo)	|	VoC_sub16_rr(REG7,REG7,REG3,IN_PARALLEL)
0x40180330,	//0x0d50		VoC_add16_rr(REG0,REG0,REG3,DEFAULT)	|	VoC_lw16i_set_inc(REG2,0x330,0x1)(hi)
0xFF06C059,	//0x0d52		VoC_movreg32(RL6,REG01,DEFAULT)	|	VoC_add16_rr(REG1,REG1,REG3,IN_PARALLEL)
0xFFC07006,	//0x0d54		VoC_NAD(IN_PARALLEL)	|	VoC_lw16i_short(REG6,0x0,DEFAULT)
		//0x0d56		Coolsand_NonClipDigitalGain_LoopStart
0x0DC03537,	//0x0d56		VoC_be16_rr(Coolsand_NonClipDigitalGain_LoopEnd,REG6,REG7)
0xD8A3DF43,	//0x0d58		VoC_lw16inc_p(REG3,REG2,DEFAULT)	|	VoC_push32(REG67,DEFAULT)
0xC018389C,	//0x0d5a		VoC_add16_rr(REG0,REG0,REG3,IN_PARALLEL)	|	VoC_sub16_pr(REG4,REG2,REG3,DEFAULT)
0xFF434059,	//0x0d5c		VoC_lw32z(REG67,IN_PARALLEL)	|	VoC_add16_rr(REG1,REG1,REG3,DEFAULT)
0x2E20E023,	//0x0d5e		VoC_loop_r(0,REG4)(lo)	|	VoC_movreg16(REG3,REG1,DEFAULT)
0xD8950D69,	//0x0d60		VoC_lw16inc_p(REG5,REG1,DEFAULT)	|	VoC_loop_r(0,REG4)(hi)
0x0D663245,	//0x0d62		VoC_bnltz16_r(Coolsand_NonClipDigitalGain_L5,REG5)
0xFFC043AD,	//0x0d64		VoC_NAD(IN_PARALLEL)	|	VoC_sub16_rr(REG5,REG6,REG5,DEFAULT)
		//0x0d66		Coolsand_NonClipDigitalGain_L5
0x0D6934AF,	//0x0d66		VoC_bngt16_rr(Coolsand_NonClipDigitalGain_L6,REG5,REG7)
0xFFC0E0A7,	//0x0d68		VoC_NOP	|	VoC_movreg16(REG7,REG5,DEFAULT)
		//0x0d69		Coolsand_NonClipDigitalGain_L6
		//0x0d69		VoC_endloop0
0x3D2FE061,	//0x0d6a		VoC_bngt16_rd(Coolsand_NonClipDigitalGain_L7,REG7,0x1afd)(lo)	|	VoC_movreg16(REG1,REG3,DEFAULT)
0x70251AFD,	//0x0d6c		VoC_lw16i_short(REG5,0x1,DEFAULT)	|	VoC_bngt16_rd(Coolsand_NonClipDigitalGain_L7,REG7,0x1afd)(hi)
0x7698FF44,	//0x0d6e		VoC_lw16i_short(FORMAT16,0xfffffff4,DEFAULT)	|	VoC_lw32z(ACC0,IN_PARALLEL)
0x0A89FA83,	//0x0d70		VoC_lw16i(ACC0_HI,0x7530)(lo)	|	VoC_shr32_ri(REG67,0x10,IN_PARALLEL)
0x7A647530,	//0x0d72		VoC_shr32_ri(ACC0,0xc,DEFAULT)	|	VoC_lw16i(ACC0_HI,0x7530)(hi)
0xFFC0E003,	//0x0d74		VoC_NAD	|	VoC_lw16i_short(REG3,0x0,IN_PARALLEL)
0x0D7C2DFE,	//0x0d76		VoC_loop_i(0x0,0xff)
0xC0EB4B1C,	//0x0d78		VoC_add16_rr(REG3,REG3,REG5,IN_PARALLEL)	|	VoC_sub32_rr(ACC0,ACC0,REG67,DEFAULT)
0x0DA0361C,	//0x0d7a		VoC_bgt32_rr(Coolsand_NonClipDigitalGain_L8,REG67,ACC0)
		//0x0d7c		VoC_endloop0
0x2B00FFC0,	//0x0d7c		VoC_jump_lg(Coolsand_NonClipDigitalGain_L8)(lo)	|	VoC_NAD
0xFFC00DA0,	//0x0d7e		VoC_NAD	|	VoC_jump_lg(Coolsand_NonClipDigitalGain_L8)(hi)
		//0x0d80		Coolsand_NonClipDigitalGain_L7
0x40F21405,	//0x0d80		VoC_lw16_d(REG5,0x40f2)
0x34BDFFC0,	//0x0d82		VoC_bngt16_rr(Coolsand_NonClipDigitalGain_L10,REG7,REG5)(lo)	|	VoC_NOP
0x0A850DAA,	//0x0d84		VoC_lw16i(REG5,0x0)(lo)	|	VoC_bngt16_rr(Coolsand_NonClipDigitalGain_L10,REG7,REG5)(hi)
0xF6980000,	//0x0d86		VoC_lw16i_short(FORMAT16,0xfffffff4,DEFAULT)	|	VoC_lw16i(REG5,0x0)(hi)
0x1AFC1403,	//0x0d88		VoC_lw16_d(REG3,0x1afc)
0x1AFC6C16,	//0x0d8a		VoC_bez16_d(Coolsand_NonClipDigitalGain_L8,0x1afc)
0x0D98343D,	//0x0d8c		VoC_bgt16_rr(Coolsand_NonClipDigitalGain_L9,REG7,REG5)
0x19191407,	//0x0d8e		VoC_lw16_d(REG7,0x1919)
0x62F91403,	//0x0d90		VoC_lw16_d(REG3,0x62f9)
0x0DA034BB,	//0x0d92		VoC_bngt16_rr(Coolsand_NonClipDigitalGain_L8,REG7,REG3)
0xC3DBF023,	//0x0d94		VoC_sub16_rr(REG3,REG7,REG3,DEFAULT)	|	VoC_lw16i_short(REG3,0x1,DEFAULT)
0xFFC065CA,	//0x0d96		VoC_NAD(IN_PARALLEL)	|	VoC_jump(Coolsand_NonClipDigitalGain_L8)
		//0x0d98		Coolsand_NonClipDigitalGain_L9
0x19191407,	//0x0d98		VoC_lw16_d(REG7,0x1919)
0x1AFC1403,	//0x0d9a		VoC_lw16_d(REG3,0x1afc)
0x0DA0349F,	//0x0d9c		VoC_bngt16_rr(Coolsand_NonClipDigitalGain_L8,REG3,REG7)
0xC1DBF043,	//0x0d9e		VoC_add16_rr(REG3,REG7,REG3,DEFAULT)	|	VoC_lw16i_short(REG3,0x2,DEFAULT)
		//0x0da0		Coolsand_NonClipDigitalGain_L8
0x0DA52E20,	//0x0da0		VoC_loop_r(0,REG4)
0xFFC08CCF,	//0x0da2		VoC_NOP	|	VoC_multf16_rp(REG7,REG3,REG1,DEFAULT)
0xDC97FFC0,	//0x0da4		VoC_sw16inc_p(REG7,REG1,DEFAULT)	|	VoC_NOP
		//0x0da5		VoC_endloop0
0x19191503,	//0x0da6		VoC_sw16_d(REG3,0x1919)
0xFFC065D0,	//0x0da8		VoC_NAD(IN_PARALLEL)	|	VoC_jump(Coolsand_NonClipDigitalGain_L12)
		//0x0daa		Coolsand_NonClipDigitalGain_L10
0x40F31405,	//0x0daa		VoC_lw16_d(REG5,0x40f3)
0x34BDFFC0,	//0x0dac		VoC_bngt16_rr(Coolsand_NonClipDigitalGain_L11,REG7,REG5)(lo)	|	VoC_NOP
0xFFC00DB2,	//0x0dae		VoC_NOP	|	VoC_bngt16_rr(Coolsand_NonClipDigitalGain_L11,REG7,REG5)(hi)
0xFFC065C8,	//0x0db0		VoC_NAD(IN_PARALLEL)	|	VoC_jump(Coolsand_NonClipDigitalGain_L12)
		//0x0db2		Coolsand_NonClipDigitalGain_L11
0x0DB72E20,	//0x0db2		VoC_loop_r(0,REG4)
0xF80FD817,	//0x0db4		VoC_shr16_ri(REG7,0x1,DEFAULT)	|	VoC_lw16_p(REG7,REG1,DEFAULT)
0xDC97FFC0,	//0x0db6		VoC_sw16inc_p(REG7,REG1,DEFAULT)	|	VoC_NOP
		//0x0db7		VoC_endloop0
		//0x0db8		Coolsand_NonClipDigitalGain_L12
0xE0105F03,	//0x0db8		VoC_lw16i_short(REG0,0x1,IN_PARALLEL)	|	VoC_pop32(REG67,DEFAULT)
0xC186FFC0,	//0x0dba		VoC_add16_rr(REG6,REG6,REG0,DEFAULT)	|	VoC_NOP
0x2B00FF30,	//0x0dbc		VoC_jump_lg(Coolsand_NonClipDigitalGain_LoopStart)(lo)	|	VoC_movreg32(REG01,RL6,DEFAULT)
0xFFC00D56,	//0x0dbe		VoC_NAD	|	VoC_jump_lg(Coolsand_NonClipDigitalGain_LoopStart)(hi)
		//0x0dc0		Coolsand_NonClipDigitalGain_LoopEnd
		//0x0dc0		Coolsand_NonClipDigitalGain_End
0xF0085F01,	//0x0dc0		VoC_lw16i_short(INC0,0x2,IN_PARALLEL)	|	VoC_pop32(REG23,DEFAULT)
0x19191404,	//0x0dc2		VoC_lw16_d(REG4,0x1919)
0xF0097F38,	//0x0dc4		VoC_lw16i_short(INC1,0x2,IN_PARALLEL)	|	VoC_movreg32(REG01,RL7,DEFAULT)
0xF00A5C34,	//0x0dc6		VoC_lw16i_short(INC2,0x2,IN_PARALLEL)	|	VoC_sw16_p(REG4,REG3,DEFAULT)
0x2CA0D9CA,	//0x0dc8		VoC_loop_i(0x0,0x50)(lo)	|	VoC_lw32inc_p(REG45,REG1,DEFAULT)
0xD9CA0DCC,	//0x0dca		VoC_lw32inc_p(REG45,REG1,DEFAULT)	|	VoC_loop_i(0x0,0x50)(hi)
		//0x0dcc		VoC_endloop0
0x2CA0DDC2,	//0x0dcc		VoC_loop_i(0x0,0x50)(lo)	|	VoC_sw32inc_p(REG45,REG0,DEFAULT)
0xD9CA0DD0,	//0x0dce		VoC_lw32inc_p(REG45,REG1,DEFAULT)	|	VoC_loop_i(0x0,0x50)(hi)
		//0x0dd0		VoC_endloop0
0xE580DDD2,	//0x0dd0		VoC_return	|	VoC_sw32inc_p(REG45,REG2,DEFAULT)
		//0x0dd2		Rda_ProcessWebRtcAgc
0xFFC05FE9,	//0x0dd2		VoC_NAD(IN_PARALLEL)	|	VoC_push16(RA,DEFAULT)
0x0AE72B80,	//0x0dd4		VoC_jal(Agc_ProcessDigital)
0x04471400,	//0x0dd6		VoC_lw16_d(REG0,0x447)
0x00500A81,	//0x0dd8		VoC_lw16i(REG1,0x50)
0xFFC0C008,	//0x0dda		VoC_NOP	|	VoC_add16_rr(REG0,REG0,REG1,DEFAULT)
0x04471500,	//0x0ddc		VoC_sw16_d(REG0,0x447)
0x0AE72B80,	//0x0dde		VoC_jal(Agc_ProcessDigital)
0xFFC0DFA9,	//0x0de0		VoC_NOP	|	VoC_pop16(RA,DEFAULT)
0xFFC06580,	//0x0de2		VoC_NAD(IN_PARALLEL)	|	VoC_return
		//0x0de4		Rda_ProcessIIRBand
0x41B52007,	//0x0de4		VoC_lw16d_set_inc(REG3,0x41b5,0x1)
0x04C61400,	//0x0de6		VoC_lw16_d(REG0,0x4c6)
0x04C71401,	//0x0de8		VoC_lw16_d(REG1,0x4c7)
0x04C31402,	//0x0dea		VoC_lw16_d(REG2,0x4c3)
0x04CA1406,	//0x0dec		VoC_lw16_d(REG6,0x4ca)
0x04CB1407,	//0x0dee		VoC_lw16_d(REG7,0x4cb)
0xD9BFD9B6,	//0x0df0		VoC_lw32_p(RL7,REG7,DEFAULT)	|	VoC_lw32_p(RL6,REG6,DEFAULT)
0x04C81404,	//0x0df2		VoC_lw16_d(REG4,0x4c8)
0x04C91406,	//0x0df4		VoC_lw16_d(REG6,0x4c9)
0xD9B3D9A2,	//0x0df6		VoC_lw32_p(REG67,REG6,DEFAULT)	|	VoC_lw32_p(REG45,REG4,DEFAULT)
0xF01AF1D9,	//0x0df8		VoC_lw16i_short(FORMATX,0x0,DEFAULT)	|	VoC_lw16i_short(FORMAT32,0xe,DEFAULT)
0x700BF058,	//0x0dfa		VoC_lw16i_short(ACC1_HI,0x0,DEFAULT)	|	VoC_lw16i_short(FORMAT16,0x2,DEFAULT)
0xFBA5E01A,	//0x0dfc		VoC_shr32_ri(ACC1,0xfffffff4,DEFAULT)	|	VoC_lw16i_short(ACC1_LO,0x1,IN_PARALLEL)
0x0E382D40,	//0x0dfe		VoC_loop_i(0x0,0xa0)
0xDF43DF42,	//0x0e00		VoC_push32(REG67,DEFAULT)	|	VoC_push32(REG45,DEFAULT)
0xF914FBF2,	//0x0e02		VoC_shru16_ri(REG4,0x2,DEFAULT)	|	VoC_shr32_ri(REG45,0xfffffffe,DEFAULT)
0xCE55CCA4,	//0x0e04		VoC_macX_rr(REG2,REG5,DEFAULT)	|	VoC_multf32_rr(ACC0,REG2,REG4,DEFAULT)
0xE0045835,	//0x0e06		VoC_lw16i_short(REG4,0x0,IN_PARALLEL)	|	VoC_lw16_p(REG5,REG3,DEFAULT)
0x04C21402,	//0x0e08		VoC_lw16_d(REG2,0x4c2)
0xDFC37A1A,	//0x0e0a		VoC_push16(REG3,IN_PARALLEL)	|	VoC_shr32_ri(REG45,0x3,DEFAULT)
0xF914FBF2,	//0x0e0c		VoC_shru16_ri(REG4,0x2,DEFAULT)	|	VoC_shr32_ri(REG45,0xfffffffe,DEFAULT)
0xCE55CE14,	//0x0e0e		VoC_macX_rr(REG2,REG5,DEFAULT)	|	VoC_mac32_rr(REG2,REG4,DEFAULT)
0x04C41402,	//0x0e10		VoC_lw16_d(REG2,0x4c4)
0xF916FBF3,	//0x0e12		VoC_shru16_ri(REG6,0x2,DEFAULT)	|	VoC_shr32_ri(REG67,0xfffffffe,DEFAULT)
0xCE57CE16,	//0x0e14		VoC_macX_rr(REG2,REG7,DEFAULT)	|	VoC_mac32_rr(REG2,REG6,DEFAULT)
0xFF337F3A,	//0x0e16		VoC_movreg32(REG67,RL6,IN_PARALLEL)	|	VoC_movreg32(REG45,RL7,DEFAULT)
0xFBF37BF2,	//0x0e18		VoC_shr32_ri(REG67,0xfffffffe,IN_PARALLEL)	|	VoC_shr32_ri(REG45,0xfffffffe,DEFAULT)
0xF9167914,	//0x0e1a		VoC_shru16_ri(REG6,0x2,IN_PARALLEL)	|	VoC_shru16_ri(REG4,0x2,DEFAULT)
0xCE4DCE0C,	//0x0e1c		VoC_macX_rr(REG1,REG5,DEFAULT)	|	VoC_mac32_rr(REG1,REG4,DEFAULT)
0xCE47CE06,	//0x0e1e		VoC_macX_rr(REG0,REG7,DEFAULT)	|	VoC_mac32_rr(REG0,REG6,DEFAULT)
0xFF26FF37,	//0x0e20		VoC_movreg32(RL6,ACC0,DEFAULT)	|	VoC_movreg32(RL7,RL6,DEFAULT)
0xFA6CC92C,	//0x0e22		VoC_shr32_ri(ACC0,0xd,DEFAULT)	|	VoC_add32_rr(ACC0,ACC0,ACC1,DEFAULT)
0xDF02DF03,	//0x0e24		VoC_pop32(REG45,DEFAULT)	|	VoC_pop32(REG67,DEFAULT)
0x7F13D833,	//0x0e26		VoC_movreg32(REG67,REG45,DEFAULT)	|	VoC_lw16_p(REG3,REG3,DEFAULT)
0xFA19E002,	//0x0e28		VoC_shr32_ri(REG23,0x3,DEFAULT)	|	VoC_lw16i_short(REG2,0x0,IN_PARALLEL)
0xDF83FF0A,	//0x0e2a		VoC_pop16(REG3,DEFAULT)	|	VoC_movreg32(REG45,REG23,DEFAULT)
0x416C5434,	//0x0e2c		VoC_bngt32_rd(IIR_CLIP_MIN_SHORT,ACC0,0x416c)
0x7FFF0A88,	//0x0e2e		VoC_lw16i(ACC0_LO,0x7fff)
0xFFC065C6,	//0x0e30		VoC_NAD(IN_PARALLEL)	|	VoC_jump(IIR_CLIP_END)
		//0x0e32		IIR_CLIP_MIN_SHORT
0x416E6424,	//0x0e32		VoC_bnlt32_rd(IIR_CLIP_END,ACC0,0x416e)
0x00000AC8,	//0x0e34		VoC_lw16i(ACC0_LO,0x8000)
		//0x0e36		IIR_CLIP_END
0xDCB8FFC0,	//0x0e36		VoC_sw16inc_p(ACC0_LO,REG3,DEFAULT)	|	VoC_NOP
		//0x0e38		VoC_endloop0
0x04C31402,	//0x0e38		VoC_lw16_d(REG2,0x4c3)
0x04CA1400,	//0x0e3a		VoC_lw16_d(REG0,0x4ca)
0x04CB1401,	//0x0e3c		VoC_lw16_d(REG1,0x4cb)
0xDD8FDD86,	//0x0e3e		VoC_sw32_p(RL7,REG1,DEFAULT)	|	VoC_sw32_p(RL6,REG0,DEFAULT)
0x04C81402,	//0x0e40		VoC_lw16_d(REG2,0x4c8)
0x04C91403,	//0x0e42		VoC_lw16_d(REG3,0x4c9)
0xDD9BDD92,	//0x0e44		VoC_sw32_p(REG67,REG3,DEFAULT)	|	VoC_sw32_p(REG45,REG2,DEFAULT)
0xDFE9E580,	//0x0e46		VoC_push16(RA,DEFAULT)	|	VoC_return
		//0x0e47		Rda_ProcessIIR
0x40366C08,	//0x0e48		VoC_bez16_d(Rda_ProcessIIR_Reset,0x4036)
0x1808FF44,	//0x0e4a		VoC_lw16i_set_inc(REG0,0x4cc,0x2)(lo)	|	VoC_lw32z(ACC0,DEFAULT)
0x2C3804CC,	//0x0e4c		VoC_loop_i(0x0,0x1c)(lo)	|	VoC_lw16i_set_inc(REG0,0x4cc,0x2)(hi)
0xDDC40E4F,	//0x0e4e		VoC_sw32inc_p(ACC0,REG0,DEFAULT)	|	VoC_loop_i(0x0,0x1c)(hi)
		//0x0e4f		VoC_endloop0
		//0x0e50		Rda_ProcessIIR_Reset
0x418A0A80,	//0x0e50		VoC_lw16i(REG0,0x418a)
0x418C0A81,	//0x0e52		VoC_lw16i(REG1,0x418c)
0x418E0A82,	//0x0e54		VoC_lw16i(REG2,0x418e)
0x43051403,	//0x0e56		VoC_lw16_d(REG3,0x4305)
0x04BE1500,	//0x0e58		VoC_sw16_d(REG0,0x4be)
0x04BF1501,	//0x0e5a		VoC_sw16_d(REG1,0x4bf)
0x04C01502,	//0x0e5c		VoC_sw16_d(REG2,0x4c0)
0x41B51503,	//0x0e5e		VoC_sw16_d(REG3,0x41b5)
0x04D00A80,	//0x0e60		VoC_lw16i(REG0,0x4d0)
0x04D20A81,	//0x0e62		VoC_lw16i(REG1,0x4d2)
0x04CC0A82,	//0x0e64		VoC_lw16i(REG2,0x4cc)
0x04CE0A83,	//0x0e66		VoC_lw16i(REG3,0x4ce)
0x04CA1500,	//0x0e68		VoC_sw16_d(REG0,0x4ca)
0x04CB1501,	//0x0e6a		VoC_sw16_d(REG1,0x4cb)
0x04C81502,	//0x0e6c		VoC_sw16_d(REG2,0x4c8)
0x04C91503,	//0x0e6e		VoC_sw16_d(REG3,0x4c9)
0x0EA12C0F,	//0x0e70		VoC_loop_i(0x1,0x7)
0x04BE1400,	//0x0e72		VoC_lw16_d(REG0,0x4be)
0x04BF1401,	//0x0e74		VoC_lw16_d(REG1,0x4bf)
0x04C01402,	//0x0e76		VoC_lw16_d(REG2,0x4c0)
0xE0635984,	//0x0e78		VoC_lw16i_short(REG3,0x6,IN_PARALLEL)	|	VoC_lw32_p(ACC0,REG0,DEFAULT)
0xC018598D,	//0x0e7a		VoC_add16_rr(REG0,REG0,REG3,IN_PARALLEL)	|	VoC_lw32_p(ACC1,REG1,DEFAULT)
0xC0595997,	//0x0e7c		VoC_add16_rr(REG1,REG1,REG3,IN_PARALLEL)	|	VoC_lw32_p(RL7,REG2,DEFAULT)
0x1584C09A,	//0x0e7e		VoC_sw32_d(ACC0,0x4c2)(lo)	|	VoC_add16_rr(REG2,REG2,REG3,DEFAULT)
0x158504C2,	//0x0e80		VoC_sw32_d(ACC1,0x4c4)(lo)	|	VoC_sw32_d(ACC0,0x4c2)(hi)
0x158704C4,	//0x0e82		VoC_sw32_d(RL7,0x4c6)(lo)	|	VoC_sw32_d(ACC1,0x4c4)(hi)
0x150004C6,	//0x0e84		VoC_sw16_d(REG0,0x4be)(lo)	|	VoC_sw32_d(RL7,0x4c6)(hi)
0x150104BE,	//0x0e86		VoC_sw16_d(REG1,0x4bf)(lo)	|	VoC_sw16_d(REG0,0x4be)(hi)
0x150204BF,	//0x0e88		VoC_sw16_d(REG2,0x4c0)(lo)	|	VoC_sw16_d(REG1,0x4bf)(hi)
0xFFC004C0,	//0x0e8a		VoC_NAD	|	VoC_sw16_d(REG2,0x4c0)(hi)
0x0DE42B80,	//0x0e8c		VoC_jal(Rda_ProcessIIRBand)
0x04CA1400,	//0x0e8e		VoC_lw16_d(REG0,0x4ca)
0x04CB1401,	//0x0e90		VoC_lw16_d(REG1,0x4cb)
0x04C81402,	//0x0e92		VoC_lw16_d(REG2,0x4c8)
0x04C91403,	//0x0e94		VoC_lw16_d(REG3,0x4c9)
0x4020F104,	//0x0e96		VoC_add16_rr(REG0,REG0,REG4,DEFAULT)	|	VoC_lw16i_short(REG4,0x8,DEFAULT)
0x40A2C061,	//0x0e98		VoC_add16_rr(REG2,REG2,REG4,DEFAULT)	|	VoC_add16_rr(REG1,REG1,REG4,IN_PARALLEL)
0x1500C0E3,	//0x0e9a		VoC_sw16_d(REG0,0x4ca)(lo)	|	VoC_add16_rr(REG3,REG3,REG4,IN_PARALLEL)
0x150104CA,	//0x0e9c		VoC_sw16_d(REG1,0x4cb)(lo)	|	VoC_sw16_d(REG0,0x4ca)(hi)
0x150204CB,	//0x0e9e		VoC_sw16_d(REG2,0x4c8)(lo)	|	VoC_sw16_d(REG1,0x4cb)(hi)
0x150304C8,	//0x0ea0		VoC_sw16_d(REG3,0x4c9)(lo)	|	VoC_sw16_d(REG2,0x4c8)(hi)
		//0x0ea1		VoC_endloop1
0xDFA904C9,	//0x0ea2		VoC_pop16(RA,DEFAULT)	|	VoC_sw16_d(REG3,0x4c9)(hi)
0xE580FFC0,	//0x0ea4		VoC_return	|	VoC_NOP
