		//0x05d0		VoC_code_section_1
		//0x05d0		Rda_NoiseSuppress
0x1482DFE9,	//0x05d0		VoC_lw32_d(REG45,0x423a)(lo)	|	VoC_push16(RA,DEFAULT)
0x0A82423A,	//0x05d2		VoC_lw16i(REG2,0x8d4)(lo)	|	VoC_lw32_d(REG45,0x423a)(hi)
0x0A8308D4,	//0x05d4		VoC_lw16i(REG3,0x3c0)(lo)	|	VoC_lw16i(REG2,0x8d4)(hi)
0xFFC003C0,	//0x05d6		VoC_NAD	|	VoC_lw16i(REG3,0x3c0)(hi)
0x02DA2B80,	//0x05d8		VoC_jal(Rda_RunDma)
0x427D2008,	//0x05da		VoC_lw16d_set_inc(REG0,0x427d,0x2)
0x108A1809,	//0x05dc		VoC_lw16i_set_inc(REG1,0x108a,0x2)
0x2C50D9C4,	//0x05de		VoC_loop_i(0x0,0x28)(lo)	|	VoC_lw32inc_p(ACC0,REG0,DEFAULT)
0xD9C405E2,	//0x05e0		VoC_lw32inc_p(ACC0,REG0,DEFAULT)	|	VoC_loop_i(0x0,0x28)(hi)
		//0x05e2		VoC_endloop0
0x2008DDCC,	//0x05e2		VoC_lw16d_set_inc(REG0,0x4181,0x2)(lo)	|	VoC_sw32inc_p(ACC0,REG1,DEFAULT)
0x18094181,	//0x05e4		VoC_lw16i_set_inc(REG1,0x119c,0x2)(lo)	|	VoC_lw16d_set_inc(REG0,0x4181,0x2)(hi)
0xD9C4119C,	//0x05e6		VoC_lw32inc_p(ACC0,REG0,DEFAULT)	|	VoC_lw16i_set_inc(REG1,0x119c,0x2)(hi)
0x05EB2C06,	//0x05e8		VoC_loop_i(0x0,0x3)
0xDDCCD9C4,	//0x05ea		VoC_sw32inc_p(ACC0,REG1,DEFAULT)	|	VoC_lw32inc_p(ACC0,REG0,DEFAULT)
		//0x05eb		VoC_endloop0
0x103A1809,	//0x05ec		VoC_lw16i_set_inc(REG1,0x103a,0x2)
0x0FEA1808,	//0x05ee		VoC_lw16i_set_inc(REG0,0xfea,0x2)
0x2C50D9CC,	//0x05f0		VoC_loop_i(0x0,0x28)(lo)	|	VoC_lw32inc_p(ACC0,REG1,DEFAULT)
0xD9CC05F4,	//0x05f2		VoC_lw32inc_p(ACC0,REG1,DEFAULT)	|	VoC_loop_i(0x0,0x28)(hi)
		//0x05f4		VoC_endloop0
0x1808DDC4,	//0x05f4		VoC_lw16i_set_inc(REG0,0x1102,0x2)(lo)	|	VoC_sw32inc_p(ACC0,REG0,DEFAULT)
0x18091102,	//0x05f6		VoC_lw16i_set_inc(REG1,0x103a,0x2)(lo)	|	VoC_lw16i_set_inc(REG0,0x1102,0x2)(hi)
0xD9C4103A,	//0x05f8		VoC_lw32inc_p(ACC0,REG0,DEFAULT)	|	VoC_lw16i_set_inc(REG1,0x103a,0x2)(hi)
0x05FD2C50,	//0x05fa		VoC_loop_i(0x0,0x28)
0xDDCCD9C4,	//0x05fc		VoC_sw32inc_p(ACC0,REG1,DEFAULT)	|	VoC_lw32inc_p(ACC0,REG0,DEFAULT)
		//0x05fd		VoC_endloop0
0x06A32B80,	//0x05fe		VoC_jal(speex_preprocess_run)
0x108A1808,	//0x0600		VoC_lw16i_set_inc(REG0,0x108a,0x2)
0x427D2009,	//0x0602		VoC_lw16d_set_inc(REG1,0x427d,0x2)
0x2C50D9C4,	//0x0604		VoC_loop_i(0x0,0x28)(lo)	|	VoC_lw32inc_p(ACC0,REG0,DEFAULT)
0xD9C40608,	//0x0606		VoC_lw32inc_p(ACC0,REG0,DEFAULT)	|	VoC_loop_i(0x0,0x28)(hi)
		//0x0608		VoC_endloop0
0x1808DDCC,	//0x0608		VoC_lw16i_set_inc(REG0,0x50,0x2)(lo)	|	VoC_sw32inc_p(ACC0,REG1,DEFAULT)
0x07000050,	//0x060a		VoC_add16_rd(REG0,REG0,0x427d)(lo)	|	VoC_lw16i_set_inc(REG0,0x50,0x2)(hi)
0x1809427D,	//0x060c		VoC_lw16i_set_inc(REG1,0x108a,0x2)(lo)	|	VoC_add16_rd(REG0,REG0,0x427d)(hi)
0xD9C4108A,	//0x060e		VoC_lw32inc_p(ACC0,REG0,DEFAULT)	|	VoC_lw16i_set_inc(REG1,0x108a,0x2)(hi)
0x06132C50,	//0x0610		VoC_loop_i(0x0,0x28)
0xDDCCD9C4,	//0x0612		VoC_sw32inc_p(ACC0,REG1,DEFAULT)	|	VoC_lw32inc_p(ACC0,REG0,DEFAULT)
		//0x0613		VoC_endloop0
0x103A1809,	//0x0614		VoC_lw16i_set_inc(REG1,0x103a,0x2)
0x0FEA1808,	//0x0616		VoC_lw16i_set_inc(REG0,0xfea,0x2)
0x2C50D9CC,	//0x0618		VoC_loop_i(0x0,0x28)(lo)	|	VoC_lw32inc_p(ACC0,REG1,DEFAULT)
0xD9CC061C,	//0x061a		VoC_lw32inc_p(ACC0,REG1,DEFAULT)	|	VoC_loop_i(0x0,0x28)(hi)
		//0x061c		VoC_endloop0
0x1808DDC4,	//0x061c		VoC_lw16i_set_inc(REG0,0x1152,0x2)(lo)	|	VoC_sw32inc_p(ACC0,REG0,DEFAULT)
0x18091152,	//0x061e		VoC_lw16i_set_inc(REG1,0x103a,0x2)(lo)	|	VoC_lw16i_set_inc(REG0,0x1152,0x2)(hi)
0xD9C4103A,	//0x0620		VoC_lw32inc_p(ACC0,REG0,DEFAULT)	|	VoC_lw16i_set_inc(REG1,0x103a,0x2)(hi)
0x06252C50,	//0x0622		VoC_loop_i(0x0,0x28)
0xDDCCD9C4,	//0x0624		VoC_sw32inc_p(ACC0,REG1,DEFAULT)	|	VoC_lw32inc_p(ACC0,REG0,DEFAULT)
		//0x0625		VoC_endloop0
0x06A32B80,	//0x0626		VoC_jal(speex_preprocess_run)
0x108A1808,	//0x0628		VoC_lw16i_set_inc(REG0,0x108a,0x2)
0x427D2009,	//0x062a		VoC_lw16d_set_inc(REG1,0x427d,0x2)
0x00500A82,	//0x062c		VoC_lw16i(REG2,0x50)
0xC05159C4,	//0x062e		VoC_add16_rr(REG1,REG1,REG2,IN_PARALLEL)	|	VoC_lw32inc_p(ACC0,REG0,DEFAULT)
0x06332C50,	//0x0630		VoC_loop_i(0x0,0x28)
0xDDCCD9C4,	//0x0632		VoC_sw32inc_p(ACC0,REG1,DEFAULT)	|	VoC_lw32inc_p(ACC0,REG0,DEFAULT)
		//0x0633		VoC_endloop0
0x41812008,	//0x0634		VoC_lw16d_set_inc(REG0,0x4181,0x2)
0x00060A81,	//0x0636		VoC_lw16i(REG1,0x6)
0x1809C008,	//0x0638		VoC_lw16i_set_inc(REG1,0x1102,0x2)(lo)	|	VoC_add16_rr(REG0,REG0,REG1,DEFAULT)
0xD9C41102,	//0x063a		VoC_lw32inc_p(ACC0,REG0,DEFAULT)	|	VoC_lw16i_set_inc(REG1,0x1102,0x2)(hi)
0x063F2C9A,	//0x063c		VoC_loop_i(0x0,0x4d)
0xDDCCD9C4,	//0x063e		VoC_sw32inc_p(ACC0,REG1,DEFAULT)	|	VoC_lw32inc_p(ACC0,REG0,DEFAULT)
		//0x063f		VoC_endloop0
0xFFC0DFA9,	//0x0640		VoC_NOP	|	VoC_pop16(RA,DEFAULT)
0xE580FFC0,	//0x0642		VoC_return	|	VoC_NOP
		//0x0644		power_spectrum
0xF4015FE9,	//0x0644		VoC_lw16i_short(FORMAT32,0x0,IN_PARALLEL)	|	VoC_push16(RA,DEFAULT)
0x0F481804,	//0x0646		VoC_lw16i_set_inc(REG0,0xf48,0x1)
0x0DD41809,	//0x0648		VoC_lw16i_set_inc(REG1,0xdd4,0x2)
0xCD6CD885,	//0x064a		VoC_multf32_rr(ACC0,REG5,REG5,DEFAULT)	|	VoC_lw16inc_p(REG5,REG0,DEFAULT)
0xFFC0FFC0,	//0x064c		VoC_NOP	|	VoC_NOP
0x1404DDCC,	//0x064e		VoC_lw16_d(REG4,0x330)(lo)	|	VoC_sw32inc_p(ACC0,REG1,DEFAULT)
0x07A40330,	//0x0650		VoC_sub16_rd(REG4,REG4,0x18a6)(lo)	|	VoC_lw16_d(REG4,0x330)(hi)
0xE70818A6,	//0x0652		VoC_loop_r_short(REG4,DEFAULT)	|	VoC_sub16_rd(REG4,REG4,0x18a6)(hi)
0xFF445885,	//0x0654		VoC_lw32z(ACC0,IN_PARALLEL)	|	VoC_lw16inc_p(REG5,REG0,DEFAULT)
0xD885CE2D,	//0x0656		VoC_lw16inc_p(REG5,REG0,DEFAULT)	|	VoC_mac32_rr(REG5,REG5,DEFAULT)
0xFFC0CE2D,	//0x0658		VoC_NOP	|	VoC_mac32_rr(REG5,REG5,DEFAULT)
0xDDCCFFC0,	//0x065a		VoC_sw32inc_p(ACC0,REG1,DEFAULT)	|	VoC_NOP
		//0x065b		VoC_endloop0
0xCD6CD885,	//0x065c		VoC_multf32_rr(ACC0,REG5,REG5,DEFAULT)	|	VoC_lw16inc_p(REG5,REG0,DEFAULT)
0xFFC0FFC0,	//0x065e		VoC_NOP	|	VoC_NOP
0xDFA9DDCC,	//0x0660		VoC_pop16(RA,DEFAULT)	|	VoC_sw32inc_p(ACC0,REG1,DEFAULT)
0xE580FFC0,	//0x0662		VoC_return	|	VoC_NOP
		//0x0664		speex_echo_get_residual
0x1404DFE9,	//0x0664		VoC_lw16_d(REG4,0x330)(lo)	|	VoC_push16(RA,DEFAULT)
0xF8FC0330,	//0x0666		VoC_shr16_ri(REG4,0xffffffff,DEFAULT)	|	VoC_lw16_d(REG4,0x330)(hi)
0x17D01804,	//0x0668		VoC_lw16i_set_inc(REG0,0x17d0,0x1)
0x0FEA1805,	//0x066a		VoC_lw16i_set_inc(REG1,0xfea,0x1)
0x0EA81806,	//0x066c		VoC_lw16i_set_inc(REG2,0xea8,0x1)
0x6710F018,	//0x066e		VoC_loop_r_short(REG4,DEFAULT)	|	VoC_lw16i_short(FORMAT16,0x0,DEFAULT)
0xD885F479,	//0x0670		VoC_lw16inc_p(REG5,REG0,DEFAULT)	|	VoC_lw16i_short(FORMAT32,0xf,IN_PARALLEL)
0xFFC09B4B,	//0x0672		VoC_NOP	|	VoC_multf32inc_rp(REG67,REG5,REG1,DEFAULT)
0x417E0836,	//0x0674		VoC_mult16_rd(REG6,REG6,0x417e)
0x4C3FF027,	//0x0676		VoC_bnlt16_rd(speex_echo_get_residual_L0,REG7,0x417e)(lo)	|	VoC_lw16i_short(REG7,0x1,DEFAULT)
0xE0C7417E,	//0x0678		VoC_movreg16(REG7,REG6,DEFAULT)	|	VoC_bnlt16_rd(speex_echo_get_residual_L0,REG7,0x417e)(hi)
0xFFC0C7FF,	//0x067a		VoC_NOP	|	VoC_multf16_rr(REG7,REG7,REG7,DEFAULT)
0xFFC0C1BE,	//0x067c		VoC_NOP	|	VoC_add16_rr(REG6,REG6,REG7,DEFAULT)
		//0x067e		speex_echo_get_residual_L0
0xDCA6FFC0,	//0x067e		VoC_sw16inc_p(REG6,REG2,DEFAULT)	|	VoC_NOP
		//0x067f		VoC_endloop0
0x0EA80A80,	//0x0680		VoC_lw16i(REG0,0xea8)
0x0F480A81,	//0x0682		VoC_lw16i(REG1,0xf48)
0x0EA41500,	//0x0684		VoC_sw16_d(REG0,0xea4)
0x0EA51501,	//0x0686		VoC_sw16_d(REG1,0xea5)
0x0BA22B80,	//0x0688		VoC_jal(spx_fft)
0x06442B80,	//0x068a		VoC_jal(power_spectrum)
0x417F1402,	//0x068c		VoC_lw16_d(REG2,0x417f)
0x0DD41808,	//0x068e		VoC_lw16i_set_inc(REG0,0xdd4,0x2)
0x0DD41809,	//0x0690		VoC_lw16i_set_inc(REG1,0xdd4,0x2)
0x03301406,	//0x0692		VoC_lw16_d(REG6,0x330)
0xF47A7019,	//0x0694		VoC_lw16i_short(FORMATX,0xf,IN_PARALLEL)	|	VoC_lw16i_short(FORMAT32,0x0,DEFAULT)
0xFFC0D9CA,	//0x0696		VoC_NAD	|	VoC_lw32inc_p(REG45,REG1,DEFAULT)
0xFBFA6787,	//0x0698		VoC_shr32_ri(REG45,0xffffffff,IN_PARALLEL)	|	VoC_loop_r_short(REG6,DEFAULT)
0xCCAC790C,	//0x069a		VoC_multf32_rr(ACC0,REG2,REG5,IN_PARALLEL)	|	VoC_shru16_ri(REG4,0x1,DEFAULT)
0xD9CACE54,	//0x069c		VoC_lw32inc_p(REG45,REG1,DEFAULT)	|	VoC_macX_rr(REG2,REG4,DEFAULT)
0xDDC4FBFA,	//0x069e		VoC_sw32inc_p(ACC0,REG0,DEFAULT)	|	VoC_shr32_ri(REG45,0xffffffff,DEFAULT)
		//0x069f		VoC_endloop0
0xFFC0DFA9,	//0x06a0		VoC_NOP	|	VoC_pop16(RA,DEFAULT)
0xDFE9E580,	//0x06a2		VoC_push16(RA,DEFAULT)	|	VoC_return
		//0x06a3		speex_preprocess_run
0x427C6C04,	//0x06a4		VoC_bez16_d(speex_preprocess_run_L0,0x427c)
0x147C2B80,	//0x06a6		VoC_jal(Rda_speex_preprocess_state_reset)
		//0x06a8		speex_preprocess_run_L0
0x07901404,	//0x06a8		VoC_lw16_d(REG4,0x790)
0x07921405,	//0x06aa		VoC_lw16_d(REG5,0x792)
0x18A40724,	//0x06ac		VoC_add16_rd(REG4,REG4,0x18a4)
0x18A4072D,	//0x06ae		VoC_add16_rd(REG5,REG5,0x18a4)
0x18EC3C24,	//0x06b0		VoC_bngt16_rd(SPEEX_PRE_NB_ADAPT_NGT_20000,REG4,0x18ec)
0x4E200A84,	//0x06b2		VoC_lw16i(REG4,0x4e20)
		//0x06b4		SPEEX_PRE_NB_ADAPT_NGT_20000
0x07921505,	//0x06b4		VoC_sw16_d(REG5,0x792)
0x07901504,	//0x06b6		VoC_sw16_d(REG4,0x790)
0x03311404,	//0x06b8		VoC_lw16_d(REG4,0x331)
0x03331405,	//0x06ba		VoC_lw16_d(REG5,0x333)
0x6C23C165,	//0x06bc		VoC_bez16_d(SPEEX_PRE_ECHO_STATE_EZ,0x4180)(lo)	|	VoC_add16_rr(REG5,REG5,REG4,DEFAULT)
0xFFC04180,	//0x06be		VoC_NAD	|	VoC_bez16_d(SPEEX_PRE_ECHO_STATE_EZ,0x4180)(hi)
0x06642B80,	//0x06c0		VoC_jal(speex_echo_get_residual)
0x0D041808,	//0x06c2		VoC_lw16i_set_inc(REG0,0xd04,0x2)
0x0DD41809,	//0x06c4		VoC_lw16i_set_inc(REG1,0xdd4,0x2)
0xF47A7019,	//0x06c6		VoC_lw16i_short(FORMATX,0xf,IN_PARALLEL)	|	VoC_lw16i_short(FORMAT32,0x0,DEFAULT)
0x03301404,	//0x06c8		VoC_lw16_d(REG4,0x330)
0xD982E70E,	//0x06ca		VoC_lw32_p(REG45,REG0,DEFAULT)	|	VoC_loop_r_short(REG4,DEFAULT)
0x4CCD0A82,	//0x06cc		VoC_lw16i(REG2,0x4ccd)
0xF90CFBFA,	//0x06ce		VoC_shru16_ri(REG4,0x1,DEFAULT)	|	VoC_shr32_ri(REG45,0xffffffff,DEFAULT)
0x4E54CCAC,	//0x06d0		VoC_macX_rr(REG2,REG4,DEFAULT)	|	VoC_multf32_rr(ACC0,REG2,REG5,DEFAULT)
0xFFC0D9CD,	//0x06d2		VoC_NOP	|	VoC_lw32inc_p(ACC1,REG1,IN_PARALLEL)
0x06D8362C,	//0x06d4		VoC_bgt32_rr(SPEEX_PRE_ECHO_NOISE_MAX,ACC1,ACC0)
0xFFC0FF25,	//0x06d6		VoC_NOP	|	VoC_movreg32(ACC1,ACC0,DEFAULT)
		//0x06d8		SPEEX_PRE_ECHO_NOISE_MAX
		//0x06d8		VoC_endloop0
0x0A84DDC5,	//0x06d8		VoC_lw16i(REG4,0xd04)(lo)	|	VoC_sw32inc_p(ACC1,REG0,DEFAULT)
0x0A850D04,	//0x06da		VoC_lw16i(REG5,0xda4)(lo)	|	VoC_lw16i(REG4,0xd04)(hi)
0x2B800DA4,	//0x06dc		VoC_jal(filterbank_compute_bank32)(lo)	|	VoC_lw16i(REG5,0xda4)(hi)
0xE5C70BEF,	//0x06de		VoC_jump(SPEEX_PRE_ECHO_STATE_END)	|	VoC_jal(filterbank_compute_bank32)(hi)
		//0x06e0		SPEEX_PRE_ECHO_STATE_EZ
0x0D041809,	//0x06e0		VoC_lw16i_set_inc(REG1,0xd04,0x2)
0xE741FF47,	//0x06e2		VoC_loop_r_short(REG5,DEFAULT)	|	VoC_lw32z(RL7,DEFAULT)
		//0x06e4		VoC_endloop0
0xFFC05DCF,	//0x06e4		VoC_NAD(IN_PARALLEL)	|	VoC_sw32inc_p(RL7,REG1,DEFAULT)
		//0x06e6		SPEEX_PRE_ECHO_STATE_END
0x0A932B80,	//0x06e6		VoC_jal(preprocess_analysis)
0x0C562B80,	//0x06e8		VoC_jal(update_noise_prob)
0x19061486,	//0x06ea		VoC_lw32_d(RL6,0x1906)
0x07901404,	//0x06ec		VoC_lw16_d(REG4,0x790)
0xFF17F005,	//0x06ee		VoC_movreg32(RL7,REG45,DEFAULT)	|	VoC_lw16i_short(REG5,0x0,DEFAULT)
0x09FC2B80,	//0x06f0		VoC_jal(speex_div32_16)
0x18D03820,	//0x06f2		VoC_bgt16_rd(SPEEX_PRE_GT_983,REG0,0x18d0)
0x03D70A80,	//0x06f4		VoC_lw16i(REG0,0x3d7)
		//0x06f6		SPEEX_PRE_GT_983
0x19060B07,	//0x06f6		VoC_sub16_dr(REG7,0x1906,REG0)
0x03311404,	//0x06f8		VoC_lw16_d(REG4,0x331)
0x07941809,	//0x06fa		VoC_lw16i_set_inc(REG1,0x794,0x2)
0x0CB41806,	//0x06fc		VoC_lw16i_set_inc(REG2,0xcb4,0x1)
0x0A04180B,	//0x06fe		VoC_lw16i_set_inc(REG3,0xa04,0x2)
0xF47A7019,	//0x0700		VoC_lw16i_short(FORMATX,0xf,IN_PARALLEL)	|	VoC_lw16i_short(FORMAT32,0x0,DEFAULT)
0xDFC7E726,	//0x0702		VoC_push16(REG7,DEFAULT)	|	VoC_loop_r_short(REG4,DEFAULT)
0xD98FDFC0,	//0x0704		VoC_lw32_p(RL7,REG1,DEFAULT)	|	VoC_push16(REG0,DEFAULT)
0x18A41486,	//0x0706		VoC_lw32_d(RL6,0x18a4)
0xC9F7FBD6,	//0x0708		VoC_add32_rr(RL7,RL7,RL6,DEFAULT)	|	VoC_shr32_ri(RL6,0xfffffffa,DEFAULT)
0xD8A5FA3F,	//0x070a		VoC_lw16inc_p(REG5,REG2,DEFAULT)	|	VoC_shr32_ri(RL7,0x7,DEFAULT)
0x3185D9DE,	//0x070c		VoC_bez16_r(SPEEX_PRE_UPDATE_PROB_EZ,REG5)(lo)	|	VoC_lw32inc_p(RL6,REG3,DEFAULT)
0x363E0713,	//0x070e		VoC_bgt32_rr(SPEEX_PRE_UPDATE_PROB_EZ,RL7,RL6)(lo)	|	VoC_bez16_r(SPEEX_PRE_UPDATE_PROB_EZ,REG5)(hi)
0xD98C0713,	//0x0710		VoC_lw32_p(ACC0,REG1,DEFAULT)	|	VoC_bgt32_rr(SPEEX_PRE_UPDATE_PROB_EZ,RL7,RL6)(hi)
0xFBCEE5D4,	//0x0712		VoC_shr32_ri(RL6,0xfffffff9,DEFAULT)	|	VoC_jump(SPEEX_PRE_NOISE_EST_END)
		//0x0713		SPEEX_PRE_UPDATE_PROB_EZ
0xFBFAFF32,	//0x0714		VoC_shr32_ri(REG45,0xffffffff,DEFAULT)	|	VoC_movreg32(REG45,RL6,DEFAULT)
0xCD44F90C,	//0x0716		VoC_multf32_rr(ACC0,REG5,REG0,DEFAULT)	|	VoC_shru16_ri(REG4,0x1,DEFAULT)
0xFFC0CE60,	//0x0718		VoC_NOP	|	VoC_macX_rr(REG4,REG0,DEFAULT)
0x598AFF26,	//0x071a		VoC_lw32_p(REG45,REG1,DEFAULT)	|	VoC_movreg32(RL6,ACC0,DEFAULT)
0xFBFAF6E0,	//0x071c		VoC_shr32_ri(REG45,0xffffffff,DEFAULT)	|	VoC_movreg16(REG0,REG7,IN_PARALLEL)
0xCD44F90C,	//0x071e		VoC_multf32_rr(ACC0,REG5,REG0,DEFAULT)	|	VoC_shru16_ri(REG4,0x1,DEFAULT)
0xFFC0CE60,	//0x0720		VoC_NOP	|	VoC_macX_rr(REG4,REG0,DEFAULT)
0x3284C934,	//0x0722		VoC_bgtz32_r(SPEEX_PRE_NOISE_EST_END,ACC0)(lo)	|	VoC_add32_rr(ACC0,ACC0,RL6,DEFAULT)
0xFF440726,	//0x0724		VoC_lw32z(ACC0,DEFAULT)	|	VoC_bgtz32_r(SPEEX_PRE_NOISE_EST_END,ACC0)(hi)
		//0x0726		SPEEX_PRE_NOISE_EST_END
0xDF80DDCC,	//0x0726		VoC_pop16(REG0,DEFAULT)	|	VoC_sw32inc_p(ACC0,REG1,DEFAULT)
		//0x0728		VoC_endloop0
0x0A84DF87,	//0x0728		VoC_lw16i(REG4,0x794)(lo)	|	VoC_pop16(REG7,DEFAULT)
0x0A850794,	//0x072a		VoC_lw16i(REG5,0x834)(lo)	|	VoC_lw16i(REG4,0x794)(hi)
0xFFC00834,	//0x072c		VoC_NAD	|	VoC_lw16i(REG5,0x834)(hi)
0x0BEF2B80,	//0x072e		VoC_jal(filterbank_compute_bank32)
0x07901404,	//0x0730		VoC_lw16_d(REG4,0x790)
0x00680A85,	//0x0732		VoC_lw16i(REG5,0x68)
0x18A44494,	//0x0734		VoC_bne16_rd(SPEEX_PRE_NB_ADAPT_E_1,REG4,0x18a4)
0x0A041808,	//0x0736		VoC_lw16i_set_inc(REG0,0xa04,0x2)
0x09341809,	//0x0738		VoC_lw16i_set_inc(REG1,0x934,0x2)
0xD9C36743,	//0x073a		VoC_lw32inc_p(REG67,REG0,IN_PARALLEL)	|	VoC_loop_r_short(REG5,DEFAULT)
0xDDCBD9C3,	//0x073c		VoC_sw32inc_p(REG67,REG1,DEFAULT)	|	VoC_lw32inc_p(REG67,REG0,DEFAULT)
		//0x073d		VoC_endloop0
		//0x073e		SPEEX_PRE_NB_ADAPT_E_1
0x07941808,	//0x073e		VoC_lw16i_set_inc(REG0,0x794,0x2)
0x0D041809,	//0x0740		VoC_lw16i_set_inc(REG1,0xd04,0x2)
0x0864180A,	//0x0742		VoC_lw16i_set_inc(REG2,0x864,0x2)
0x0A04180B,	//0x0744		VoC_lw16i_set_inc(REG3,0xa04,0x2)
0x2E28F004,	//0x0746		VoC_loop_r(0,REG5)(lo)	|	VoC_lw16i_short(REG4,0x0,DEFAULT)
0xDFC4079D,	//0x0748		VoC_push16(REG4,DEFAULT)	|	VoC_loop_r(0,REG5)(hi)
0xE00D702C,	//0x074a		VoC_lw16i_short(RL6_HI,0x0,IN_PARALLEL)	|	VoC_lw16i_short(RL6_LO,0x1,DEFAULT)
0xFBD659C7,	//0x074c		VoC_shr32_ri(RL6,0xfffffffa,IN_PARALLEL)	|	VoC_lw32inc_p(RL7,REG0,DEFAULT)
0xFA3FC9F7,	//0x074e		VoC_shr32_ri(RL7,0x7,DEFAULT)	|	VoC_add32_rr(RL7,RL7,RL6,DEFAULT)
0x18A4093F,	//0x0750		VoC_add32_rd(RL7,RL7,0x18a4)
0xD9D3D9CE,	//0x0752		VoC_lw32inc_p(REG67,REG2,DEFAULT)	|	VoC_lw32inc_p(RL6,REG1,DEFAULT)
0x49F7C99E,	//0x0754		VoC_add32_rr(RL7,RL7,RL6,DEFAULT)	|	VoC_add32_rr(RL6,RL6,REG67,DEFAULT)
0xD9DEDF40,	//0x0756		VoC_lw32inc_p(RL6,REG3,DEFAULT)	|	VoC_push32(REG01,IN_PARALLEL)
0x0D4C2B80,	//0x0758		VoC_jal(spx_DIV32_16_Q8)
0xE00D702C,	//0x075a		VoC_lw16i_short(RL6_HI,0x0,IN_PARALLEL)	|	VoC_lw16i_short(RL6_LO,0x1,DEFAULT)
0xCA30FBC6,	//0x075c		VoC_sub32_rr(REG01,REG01,RL6,DEFAULT)	|	VoC_shr32_ri(RL6,0xfffffff8,DEFAULT)
0x18C41407,	//0x075e		VoC_lw16_d(REG7,0x18c4)
0x0A85F8C7,	//0x0760		VoC_lw16i(REG5,0x550)(lo)	|	VoC_shr16_ri(REG7,0xfffffff8,DEFAULT)
0xC1650550,	//0x0762		VoC_add16_rr(REG5,REG5,REG4,DEFAULT)	|	VoC_lw16i(REG5,0x550)(hi)
0x07683438,	//0x0764		VoC_bgt16_rr(SPEEX_PRE_POST,REG7,REG0)
0xFFC0E0E0,	//0x0766		VoC_NOP	|	VoC_movreg16(REG0,REG7,DEFAULT)
		//0x0768		SPEEX_PRE_POST
0xDC50DFC0,	//0x0768		VoC_sw16_p(REG0,REG5,DEFAULT)	|	VoC_push16(REG0,DEFAULT)
0x09340A85,	//0x076a		VoC_lw16i(REG5,0x934)
0xC17DC127,	//0x076c		VoC_add16_rr(REG5,REG5,REG7,DEFAULT)	|	VoC_add16_rr(REG7,REG4,REG4,DEFAULT)
0xD9AEFFC0,	//0x076e		VoC_lw32_p(RL6,REG5,DEFAULT)	|	VoC_NOP
0x2B80C9BF,	//0x0770		VoC_jal(spx_DIV32_16_Q15)(lo)	|	VoC_add32_rr(RL7,RL6,RL7,DEFAULT)
0xF1F90D26,	//0x0772		VoC_lw16i_short(FORMAT32,0xf,DEFAULT)	|	VoC_jal(spx_DIV32_16_Q15)(hi)
0xFFC0CC02,	//0x0774		VoC_NOP	|	VoC_multf32_rr(REG45,REG0,REG0,DEFAULT)
0x18FE0A22,	//0x0776		VoC_multf32_rd(REG45,REG4,0x18fe)
0x0724FFC0,	//0x0778		VoC_add16_rd(REG4,REG4,0x18d6)(lo)	|	VoC_NOP
0xDF8018D6,	//0x077a		VoC_pop16(REG0,DEFAULT)	|	VoC_add16_rd(REG4,REG4,0x18d6)(hi)
0x07803100,	//0x077c		VoC_bgtz16_r(SPEEX_PRE_POST_GTZ,REG0)
0xFFC07000,	//0x077e		VoC_NAD(IN_PARALLEL)	|	VoC_lw16i_short(REG0,0x0,DEFAULT)
		//0x0780		SPEEX_PRE_POST_GTZ
0xF4017F44,	//0x0780		VoC_lw16i_short(FORMAT32,0x0,IN_PARALLEL)	|	VoC_lw32z(ACC0,DEFAULT)
0xCBF74E20,	//0x0782		VoC_sub32_rr(RL7,RL7,RL6,IN_PARALLEL)	|	VoC_mac32_rr(REG4,REG0,DEFAULT)
0x0D4C2B80,	//0x0784		VoC_jal(spx_DIV32_16_Q8)
0x19060B25,	//0x0786		VoC_sub16_dr(REG5,0x1906,REG4)
0xFFC0CE28,	//0x0788		VoC_NOP	|	VoC_mac32_rr(REG5,REG0,DEFAULT)
0x18E60924,	//0x078a		VoC_add32_rd(ACC0,ACC0,0x18e6)
0xFF22FA7C,	//0x078c		VoC_movreg32(REG45,ACC0,DEFAULT)	|	VoC_shr32_ri(ACC0,0xf,DEFAULT)
0x00640A85,	//0x078e		VoC_lw16i(REG5,0x64)
0xF68678C5,	//0x0790		VoC_movreg16(REG6,REG4,IN_PARALLEL)	|	VoC_shr16_ri(REG5,0xfffffff8,DEFAULT)
0x0796342C,	//0x0792		VoC_bgt16_rr(SPEEX_PRE_PRIOR_END,REG5,REG4)
0xFFC060A6,	//0x0794		VoC_NAD(IN_PARALLEL)	|	VoC_movreg16(REG6,REG5,DEFAULT)
		//0x0796		SPEEX_PRE_PRIOR_END
0xDF845F00,	//0x0796		VoC_pop16(REG4,IN_PARALLEL)	|	VoC_pop32(REG01,DEFAULT)
0x04E80A85,	//0x0798		VoC_lw16i(REG5,0x4e8)
0x0724C165,	//0x079a		VoC_add16_rd(REG4,REG4,0x18a4)(lo)	|	VoC_add16_rr(REG5,REG5,REG4,DEFAULT)
0xDC5618A4,	//0x079c		VoC_sw16_p(REG6,REG5,DEFAULT)	|	VoC_add16_rd(REG4,REG4,0x18a4)(hi)
		//0x079d		VoC_endloop0
0x04E81804,	//0x079e		VoC_lw16i_set_inc(REG0,0x4e8,0x1)
0x06881805,	//0x07a0		VoC_lw16i_set_inc(REG1,0x688,0x1)
0xD8047F44,	//0x07a2		VoC_lw16_p(REG4,REG0,IN_PARALLEL)	|	VoC_lw32z(ACC0,DEFAULT)
0xF4015815,	//0x07a4		VoC_lw16i_short(FORMAT32,0x0,IN_PARALLEL)	|	VoC_lw16_p(REG5,REG1,DEFAULT)
0x18E00E20,	//0x07a6		VoC_mac32_rd(REG4,0x18e0)
0x18F40E28,	//0x07a8		VoC_mac32_rd(REG5,0x18f4)
0x0924FFC0,	//0x07aa		VoC_add32_rd(ACC0,ACC0,0x18e6)(lo)	|	VoC_NOP
0xFA7C18E6,	//0x07ac		VoC_shr32_ri(ACC0,0xf,DEFAULT)	|	VoC_add32_rd(ACC0,ACC0,0x18e6)(hi)
0xFFC0FF22,	//0x07ae		VoC_NOP	|	VoC_movreg32(REG45,ACC0,DEFAULT)
0x1406DC94,	//0x07b0		VoC_lw16_d(REG6,0x331)(lo)	|	VoC_sw16inc_p(REG4,REG1,DEFAULT)
0x07B60331,	//0x07b2		VoC_sub16_rd(REG6,REG6,0x18a6)(lo)	|	VoC_lw16_d(REG6,0x331)(hi)
0xE79518A6,	//0x07b4		VoC_loop_r_short(REG6,DEFAULT)	|	VoC_sub16_rd(REG6,REG6,0x18a6)(hi)
0xD815FF44,	//0x07b6		VoC_lw16_p(REG5,REG1,DEFAULT)	|	VoC_lw32z(ACC0,DEFAULT)
0x18F40E28,	//0x07b8		VoC_mac32_rd(REG5,0x18f4)
0x0E20D884,	//0x07ba		VoC_mac32_rd(REG4,0x18d4)(lo)	|	VoC_lw16inc_p(REG4,REG0,DEFAULT)
0xD88418D4,	//0x07bc		VoC_lw16inc_p(REG4,REG0,DEFAULT)	|	VoC_mac32_rd(REG4,0x18d4)(hi)
0x18D80E20,	//0x07be		VoC_mac32_rd(REG4,0x18d8)
0x0E20D884,	//0x07c0		VoC_mac32_rd(REG4,0x18d4)(lo)	|	VoC_lw16inc_p(REG4,REG0,DEFAULT)
0xFFC018D4,	//0x07c2		VoC_NOP	|	VoC_mac32_rd(REG4,0x18d4)(hi)
0x18E60924,	//0x07c4		VoC_add32_rd(ACC0,ACC0,0x18e6)
0xFF22FA7C,	//0x07c6		VoC_movreg32(REG45,ACC0,DEFAULT)	|	VoC_shr32_ri(ACC0,0xf,DEFAULT)
0xDC94FFC0,	//0x07c8		VoC_sw16inc_p(REG4,REG1,DEFAULT)	|	VoC_NOP
		//0x07ca		VoC_endloop0
0x18A60780,	//0x07ca		VoC_sub16_rd(REG0,REG0,0x18a6)
0x03331407,	//0x07cc		VoC_lw16_d(REG7,0x333)
0x18A4073F,	//0x07ce		VoC_add16_rd(REG7,REG7,0x18a4)
0x67CEFF44,	//0x07d0		VoC_loop_r_short(REG7,DEFAULT)	|	VoC_lw32z(ACC0,DEFAULT)
0xD815DE00,	//0x07d2		VoC_lw16_p(REG5,REG1,DEFAULT)	|	VoC_inc_p(REG0,IN_PARALLEL)
0x18F40E28,	//0x07d4		VoC_mac32_rd(REG5,0x18f4)
0x0E20D884,	//0x07d6		VoC_mac32_rd(REG4,0x18e0)(lo)	|	VoC_lw16inc_p(REG4,REG0,DEFAULT)
0xFFC018E0,	//0x07d8		VoC_NOP	|	VoC_mac32_rd(REG4,0x18e0)(hi)
0x18E60924,	//0x07da		VoC_add32_rd(ACC0,ACC0,0x18e6)
0xFF22FA7C,	//0x07dc		VoC_movreg32(REG45,ACC0,DEFAULT)	|	VoC_shr32_ri(ACC0,0xf,DEFAULT)
0xDC94FF44,	//0x07de		VoC_sw16inc_p(REG4,REG1,DEFAULT)	|	VoC_lw32z(ACC0,DEFAULT)
		//0x07df		VoC_endloop0
0x06D81805,	//0x07e0		VoC_lw16i_set_inc(REG1,0x6d8,0x1)
0x03331407,	//0x07e2		VoC_lw16_d(REG7,0x333)
0xFF467F47,	//0x07e4		VoC_lw32z(RL6,IN_PARALLEL)	|	VoC_lw32z(RL7,DEFAULT)
0xE7C7FFC0,	//0x07e6		VoC_loop_r_short(REG7,DEFAULT)	|	VoC_NAD
0xE0055894,	//0x07e8		VoC_lw16i_short(REG5,0x0,IN_PARALLEL)	|	VoC_lw16inc_p(REG4,REG1,DEFAULT)
0x07EE3244,	//0x07ea		VoC_bnltz16_r(SPEEX_PRE_EXTEND_ZETA_M,REG4)
0x7FFF0AC5,	//0x07ec		VoC_lw16i(REG5,0xffff)
		//0x07ee		SPEEX_PRE_EXTEND_ZETA_M
		//0x07ee		VoC_endloop0
0x140EC996,	//0x07ee		VoC_lw16_d(RL7_LO,0x333)(lo)	|	VoC_add32_rr(RL6,RL6,REG45,DEFAULT)
0xFFC00333,	//0x07f0		VoC_NAD	|	VoC_lw16_d(RL7_LO,0x333)(hi)
0x09FC2B80,	//0x07f2		VoC_jal(speex_div32_16)
0x0E632B80,	//0x07f4		VoC_jal(spx_qcurve)
0x0A02F1F9,	//0x07f6		VoC_multf32_rd(REG45,REG0,0x1900)(lo)	|	VoC_lw16i_short(FORMAT32,0xf,DEFAULT)
0xFFC01900,	//0x07f8		VoC_NOP	|	VoC_multf32_rd(REG45,REG0,0x1900)(hi)
0x18D60724,	//0x07fa		VoC_add16_rd(REG4,REG4,0x18d6)
0x1504FFC0,	//0x07fc		VoC_sw16_d(REG4,0x33f)(lo)	|	VoC_NOP
0x7F44033F,	//0x07fe		VoC_lw32z(ACC0,DEFAULT)	|	VoC_sw16_d(REG4,0x33f)(hi)
0x0E20F401,	//0x0800		VoC_mac32_rd(REG4,0x33d)(lo)	|	VoC_lw16i_short(FORMAT32,0x0,IN_PARALLEL)
0x0B24033D,	//0x0802		VoC_sub16_dr(REG4,0x1906,REG4)(lo)	|	VoC_mac32_rd(REG4,0x33d)(hi)
0x0E201906,	//0x0804		VoC_mac32_rd(REG4,0x33c)(lo)	|	VoC_sub16_dr(REG4,0x1906,REG4)(hi)
0xFFC0033C,	//0x0806		VoC_NOP	|	VoC_mac32_rd(REG4,0x33c)(hi)
0x18E60924,	//0x0808		VoC_add32_rd(ACC0,ACC0,0x18e6)
0xFF22FA7C,	//0x080a		VoC_movreg32(REG45,ACC0,DEFAULT)	|	VoC_shr32_ri(ACC0,0xf,DEFAULT)
0x0D722B80,	//0x080c		VoC_jal(compute_gain_floor)
0x03311406,	//0x080e		VoC_lw16_d(REG6,0x331)
0x03331407,	//0x0810		VoC_lw16_d(REG7,0x333)
0x04D01804,	//0x0812		VoC_lw16i_set_inc(REG0,0x4d0,0x1)
0x09D41809,	//0x0814		VoC_lw16i_set_inc(REG1,0x9d4,0x2)
0x05381806,	//0x0816		VoC_lw16i_set_inc(REG2,0x538,0x1)
0x05A01807,	//0x0818		VoC_lw16i_set_inc(REG3,0x5a0,0x1)
0xFFC07006,	//0x081a		VoC_NAD(IN_PARALLEL)	|	VoC_lw16i_short(REG6,0x0,DEFAULT)
0x08CD2E38,	//0x081c		VoC_loop_r(0,REG7)
0xDF405FC6,	//0x081e		VoC_push32(REG01,IN_PARALLEL)	|	VoC_push16(REG6,DEFAULT)
0xE00F702E,	//0x0820		VoC_lw16i_short(RL7_HI,0x0,IN_PARALLEL)	|	VoC_lw16i_short(RL7_LO,0x1,DEFAULT)
0x5824FBC7,	//0x0822		VoC_lw16_p(REG4,REG2,DEFAULT)	|	VoC_shr32_ri(RL7,0xfffffff8,DEFAULT)
0x3244E005,	//0x0824		VoC_bnltz16_r(SPEEX_PRE_EXTEND_PRIOR_M,REG4)(lo)	|	VoC_lw16i_short(REG5,0x0,IN_PARALLEL)
0x0AC50829,	//0x0826		VoC_lw16i(REG5,0xffff)(lo)	|	VoC_bnltz16_r(SPEEX_PRE_EXTEND_PRIOR_M,REG4)(hi)
0xFF167FFF,	//0x0828		VoC_movreg32(RL6,REG45,DEFAULT)	|	VoC_lw16i(REG5,0xffff)(hi)
		//0x0829		SPEEX_PRE_EXTEND_PRIOR_M
0xFB8E48BF,	//0x082a		VoC_shr32_ri(RL6,0xfffffff1,IN_PARALLEL)	|	VoC_add32_rr(RL7,REG45,RL7,DEFAULT)
0xFA0AFF3A,	//0x082c		VoC_shr32_ri(REG45,0x1,DEFAULT)	|	VoC_movreg32(REG45,RL7,DEFAULT)
0x2B80C996,	//0x082e		VoC_jal(speex_div32_16)(lo)	|	VoC_add32_rr(RL6,RL6,REG45,DEFAULT)
0xDFC009FC,	//0x0830		VoC_push16(REG0,DEFAULT)	|	VoC_jal(speex_div32_16)(hi)
0xE00558B4,	//0x0832		VoC_lw16i_short(REG5,0x0,IN_PARALLEL)	|	VoC_lw16inc_p(REG4,REG3,DEFAULT)
0x08383244,	//0x0834		VoC_bnltz16_r(SPEEX_PRE_EXTEND_POST_M,REG4)
0x7FFF0AC5,	//0x0836		VoC_lw16i(REG5,0xffff)
		//0x0838		SPEEX_PRE_EXTEND_POST_M
0x702CFBEA,	//0x0838		VoC_lw16i_short(RL6_LO,0x1,DEFAULT)	|	VoC_shr32_ri(REG45,0xfffffffd,DEFAULT)
0xFBAEE00D,	//0x083a		VoC_shr32_ri(RL6,0xfffffff5,DEFAULT)	|	VoC_lw16i_short(RL6_HI,0x0,IN_PARALLEL)
0x2B80C8B2,	//0x083c		VoC_jal(spx_mult16_32_p15)(lo)	|	VoC_add32_rr(REG45,REG45,RL6,DEFAULT)
0xFF260C46,	//0x083e		VoC_movreg32(RL6,ACC0,DEFAULT)	|	VoC_jal(spx_mult16_32_p15)(hi)
0x0E1D2B80,	//0x0840		VoC_jal(hypergeom_gain)
0xDF80FF02,	//0x0842		VoC_pop16(REG0,DEFAULT)	|	VoC_movreg32(REG45,REG01,DEFAULT)
0xF47A7019,	//0x0844		VoC_lw16i_short(FORMATX,0xf,IN_PARALLEL)	|	VoC_lw16i_short(FORMAT32,0x0,DEFAULT)
0xF90CFBFA,	//0x0846		VoC_shru16_ri(REG4,0x1,DEFAULT)	|	VoC_shr32_ri(REG45,0xffffffff,DEFAULT)
0xCE60CD44,	//0x0848		VoC_macX_rr(REG4,REG0,DEFAULT)	|	VoC_multf32_rr(ACC0,REG5,REG0,DEFAULT)
0x602CFFC0,	//0x084a		VoC_blt32_rd(SPEEX_PRE_GAIN,ACC0,0x1906)(lo)	|	VoC_NOP
0x14841906,	//0x084c		VoC_lw32_d(ACC0,0x1906)(lo)	|	VoC_blt32_rd(SPEEX_PRE_GAIN,ACC0,0x1906)(hi)
0xFFC01906,	//0x084e		VoC_NAD	|	VoC_lw32_d(ACC0,0x1906)(hi)
		//0x0850		SPEEX_PRE_GAIN
0xDF007F22,	//0x0850		VoC_pop32(REG01,IN_PARALLEL)	|	VoC_movreg32(REG45,ACC0,DEFAULT)
0xDC84FFC0,	//0x0852		VoC_sw16inc_p(REG4,REG0,DEFAULT)	|	VoC_NOP
0xF1F9DF40,	//0x0854		VoC_lw16i_short(FORMAT32,0xf,DEFAULT)	|	VoC_push32(REG01,DEFAULT)
0xF019CD22,	//0x0856		VoC_lw16i_short(FORMAT32,0x0,DEFAULT)	|	VoC_multf32_rr(REG45,REG4,REG4,DEFAULT)
0x18FC0A20,	//0x0858		VoC_multf32_rd(REG01,REG4,0x18fc)
0x0900FFC0,	//0x085a		VoC_add32_rd(REG01,REG01,0x18e6)(lo)	|	VoC_NOP
0xFA7818E6,	//0x085c		VoC_shr32_ri(REG01,0xf,DEFAULT)	|	VoC_add32_rd(REG01,REG01,0x18e6)(hi)
0x0A81DF86,	//0x085e		VoC_lw16i(REG1,0xaa4)(lo)	|	VoC_pop16(REG6,DEFAULT)
0xC1B40AA4,	//0x0860		VoC_add16_rr(REG4,REG6,REG6,DEFAULT)	|	VoC_lw16i(REG1,0xaa4)(hi)
0xFFC0C061,	//0x0862		VoC_NOP	|	VoC_add16_rr(REG1,REG1,REG4,DEFAULT)
0xFFC0598A,	//0x0864		VoC_NAD(IN_PARALLEL)	|	VoC_lw32_p(REG45,REG1,DEFAULT)
0x0C462B80,	//0x0866		VoC_jal(spx_mult16_32_p15)
0xDF007F25,	//0x0868		VoC_pop32(REG01,IN_PARALLEL)	|	VoC_movreg32(ACC1,ACC0,DEFAULT)
0xDF40DFC6,	//0x086a		VoC_push32(REG01,DEFAULT)	|	VoC_push16(REG6,DEFAULT)
0x199A0A80,	//0x086c		VoC_lw16i(REG0,0x199a)
0xDF45D98A,	//0x086e		VoC_push32(ACC1,DEFAULT)	|	VoC_lw32_p(REG45,REG1,DEFAULT)
0x0C462B80,	//0x0870		VoC_jal(spx_mult16_32_p15)
0x492CDF05,	//0x0872		VoC_add32_rr(ACC0,ACC0,ACC1,DEFAULT)	|	VoC_pop32(ACC1,DEFAULT)
0xFFC0DF00,	//0x0874		VoC_NOP	|	VoC_pop32(REG01,IN_PARALLEL)
0xDF40DDCC,	//0x0876		VoC_push32(REG01,DEFAULT)	|	VoC_sw32inc_p(ACC0,REG1,DEFAULT)
0x06D80A81,	//0x0878		VoC_lw16i(REG1,0x6d8)
0xFFC0C071,	//0x087a		VoC_NOP	|	VoC_add16_rr(REG1,REG1,REG6,DEFAULT)
0x2B80D810,	//0x087c		VoC_jal(spx_qcurve)(lo)	|	VoC_lw16_p(REG0,REG1,DEFAULT)
0xF1F90E63,	//0x087e		VoC_lw16i_short(FORMAT32,0xf,DEFAULT)	|	VoC_jal(spx_qcurve)(hi)
0x18FC0A00,	//0x0880		VoC_multf32_rd(REG01,REG0,0x18fc)
0x0900FFC0,	//0x0882		VoC_add32_rd(REG01,REG01,0x18da)(lo)	|	VoC_NOP
0x0A0018DA,	//0x0884		VoC_multf32_rd(REG01,REG0,0x33f)(lo)	|	VoC_add32_rd(REG01,REG01,0x18da)(hi)
0xFFC0033F,	//0x0886		VoC_NOP	|	VoC_multf32_rd(REG01,REG0,0x33f)(hi)
0x19060B04,	//0x0888		VoC_sub16_dr(REG4,0x1906,REG0)
0x19066026,	//0x088a		VoC_blt32_rd(SPEEX_PRE_THETA,RL6,0x1906)
0x19061486,	//0x088c		VoC_lw32_d(RL6,0x1906)
		//0x088e		SPEEX_PRE_THETA
0x0B00FF30,	//0x088e		VoC_sub16_dr(REG0,0x18a2,REG0)(lo)	|	VoC_movreg32(REG01,RL6,DEFAULT)
0x2B8018A2,	//0x0890		VoC_jal(spx_exp)(lo)	|	VoC_sub16_dr(REG0,0x18a2,REG0)(hi)
0xFA0F0E85,	//0x0892		VoC_shr32_ri(RL7,0x1,DEFAULT)	|	VoC_jal(spx_exp)(hi)
0x19066027,	//0x0894		VoC_blt32_rd(SPEEX_PRE_TMP_MIN32,RL7,0x1906)
0x19061487,	//0x0896		VoC_lw32_d(RL7,0x1906)
		//0x0898		SPEEX_PRE_TMP_MIN32
0xF021FF38,	//0x0898		VoC_lw16i_short(REG1,0x1,DEFAULT)	|	VoC_movreg32(REG01,RL7,DEFAULT)
0x8251F8C1,	//0x089a		VoC_add16inc_rp(REG1,REG1,REG2,DEFAULT)	|	VoC_shr16_ri(REG1,0xfffffff8,DEFAULT)
0xCC08F1F9,	//0x089c		VoC_multf32_rr(REG01,REG0,REG1,DEFAULT)	|	VoC_lw16i_short(FORMAT32,0xf,DEFAULT)
0xF061FFC0,	//0x089e		VoC_lw16i_short(REG1,0x3,DEFAULT)	|	VoC_NOP
0x3408F8C1,	//0x08a0		VoC_bgt16_rr(SPEEX_PRE_TMP_MIN16,REG1,REG0)(lo)	|	VoC_shr16_ri(REG1,0xfffffff8,DEFAULT)
0xE02008A5,	//0x08a2		VoC_movreg16(REG0,REG1,DEFAULT)	|	VoC_bgt16_rr(SPEEX_PRE_TMP_MIN16,REG1,REG0)(hi)
0xDFC0FFC0,	//0x08a4		VoC_push16(REG0,DEFAULT)	|	VoC_NOP
		//0x08a5		SPEEX_PRE_TMP_MIN16
0xF68C700D,	//0x08a6		VoC_movreg16(RL6_LO,REG4,IN_PARALLEL)	|	VoC_lw16i_short(RL6_HI,0x0,DEFAULT)
0x08AC3244,	//0x08a8		VoC_bnltz16_r(SPEEX_PRE_EXTEND_Q,REG4)
0x7FFF0ACD,	//0x08aa		VoC_lw16i(RL6_HI,0xffff)
		//0x08ac		SPEEX_PRE_EXTEND_Q
0xFBC6FF37,	//0x08ac		VoC_shr32_ri(RL6,0xfffffff8,DEFAULT)	|	VoC_movreg32(RL7,RL6,DEFAULT)
0x19060BBF,	//0x08ae		VoC_sub32_dr(RL7,0x1906,RL7)
0xFA0AFF3A,	//0x08b0		VoC_shr32_ri(REG45,0x1,DEFAULT)	|	VoC_movreg32(REG45,RL7,DEFAULT)
0x2B80C996,	//0x08b2		VoC_jal(speex_div32_16)(lo)	|	VoC_add32_rr(RL6,RL6,REG45,DEFAULT)
0xFF0209FC,	//0x08b4		VoC_movreg32(REG45,REG01,DEFAULT)	|	VoC_jal(speex_div32_16)(hi)
0xF019DF80,	//0x08b6		VoC_lw16i_short(FORMAT32,0x0,DEFAULT)	|	VoC_pop16(REG0,DEFAULT)
0xFFC0CC27,	//0x08b8		VoC_NOP	|	VoC_multf32_rr(RL7,REG0,REG4,DEFAULT)
0x18C6093F,	//0x08ba		VoC_add32_rd(RL7,RL7,0x18c6)
0x1486FA47,	//0x08bc		VoC_lw32_d(RL6,0x1906)(lo)	|	VoC_shr32_ri(RL7,0x8,DEFAULT)
0xFBC61906,	//0x08be		VoC_shr32_ri(RL6,0xfffffff8,DEFAULT)	|	VoC_lw32_d(RL6,0x1906)(hi)
0x18CA093F,	//0x08c0		VoC_add32_rd(RL7,RL7,0x18ca)
0x09FC2B80,	//0x08c2		VoC_jal(speex_div32_16)
0x06080A81,	//0x08c4		VoC_lw16i(REG1,0x608)
0xFFC0C071,	//0x08c6		VoC_NOP	|	VoC_add16_rr(REG1,REG1,REG6,DEFAULT)
0xDF00DC90,	//0x08c8		VoC_pop32(REG01,DEFAULT)	|	VoC_sw16inc_p(REG0,REG1,DEFAULT)
0x0736DF86,	//0x08ca		VoC_add16_rd(REG6,REG6,0x18a4)(lo)	|	VoC_pop16(REG6,DEFAULT)
0xFFC018A4,	//0x08cc		VoC_NOP	|	VoC_add16_rd(REG6,REG6,0x18a4)(hi)
		//0x08cd		VoC_endloop0
0x06080A84,	//0x08ce		VoC_lw16i(REG4,0x608)
0x05B80A85,	//0x08d0		VoC_lw16i(REG5,0x5b8)
0x0D002B80,	//0x08d2		VoC_jal(filterbank_compute_psd16)
0x04D00A84,	//0x08d4		VoC_lw16i(REG4,0x4d0)
0x04800A85,	//0x08d6		VoC_lw16i(REG5,0x480)
0x0D002B80,	//0x08d8		VoC_jal(filterbank_compute_psd16)
0x06700A84,	//0x08da		VoC_lw16i(REG4,0x670)
0x06200A85,	//0x08dc		VoC_lw16i(REG5,0x620)
0x0D002B80,	//0x08de		VoC_jal(filterbank_compute_psd16)
0x03311404,	//0x08e0		VoC_lw16_d(REG4,0x331)
0x04E81804,	//0x08e2		VoC_lw16i_set_inc(REG0,0x4e8,0x1)
0x06201805,	//0x08e4		VoC_lw16i_set_inc(REG1,0x620,0x1)
0x05B81806,	//0x08e6		VoC_lw16i_set_inc(REG2,0x5b8,0x1)
0x04801807,	//0x08e8		VoC_lw16i_set_inc(REG3,0x480,0x1)
0x2E20F007,	//0x08ea		VoC_loop_r(0,REG4)(lo)	|	VoC_lw16i_short(REG7,0x0,DEFAULT)
0xDFC70984,	//0x08ec		VoC_push16(REG7,DEFAULT)	|	VoC_loop_r(0,REG4)(hi)
0xE00F702E,	//0x08ee		VoC_lw16i_short(RL7_HI,0x0,IN_PARALLEL)	|	VoC_lw16i_short(RL7_LO,0x1,DEFAULT)
0xD8847BC7,	//0x08f0		VoC_lw16inc_p(REG4,REG0,IN_PARALLEL)	|	VoC_shr32_ri(RL7,0xfffffff8,DEFAULT)
0x3244F005,	//0x08f2		VoC_bnltz16_r(SPEEX_PRE_EXTEND_PRIOR_N,REG4)(lo)	|	VoC_lw16i_short(REG5,0x0,DEFAULT)
0x0AC508F7,	//0x08f4		VoC_lw16i(REG5,0xffff)(lo)	|	VoC_bnltz16_r(SPEEX_PRE_EXTEND_PRIOR_N,REG4)(hi)
0xFF167FFF,	//0x08f6		VoC_movreg32(RL6,REG45,DEFAULT)	|	VoC_lw16i(REG5,0xffff)(hi)
		//0x08f7		SPEEX_PRE_EXTEND_PRIOR_N
0xFB8EC8BF,	//0x08f8		VoC_shr32_ri(RL6,0xfffffff1,DEFAULT)	|	VoC_add32_rr(RL7,REG45,RL7,DEFAULT)
0xFA0AFF3A,	//0x08fa		VoC_shr32_ri(REG45,0x1,DEFAULT)	|	VoC_movreg32(REG45,RL7,DEFAULT)
0xDF404996,	//0x08fc		VoC_push32(REG01,IN_PARALLEL)	|	VoC_add32_rr(RL6,RL6,REG45,DEFAULT)
0x09FC2B80,	//0x08fe		VoC_jal(speex_div32_16)
0x0A84DFC0,	//0x0900		VoC_lw16i(REG4,0x550)(lo)	|	VoC_push16(REG0,DEFAULT)
0xC13C0550,	//0x0902		VoC_add16_rr(REG4,REG4,REG7,DEFAULT)	|	VoC_lw16i(REG4,0x550)(hi)
0x5844FFC0,	//0x0904		VoC_lw16_p(REG4,REG4,DEFAULT)	|	VoC_NOP
0x3244E005,	//0x0906		VoC_bnltz16_r(SPEEX_PRE_EXTEND_POST_N,REG4)(lo)	|	VoC_lw16i_short(REG5,0x0,IN_PARALLEL)
0x0AC5090B,	//0x0908		VoC_lw16i(REG5,0xffff)(lo)	|	VoC_bnltz16_r(SPEEX_PRE_EXTEND_POST_N,REG4)(hi)
0xFBEA7FFF,	//0x090a		VoC_shr32_ri(REG45,0xfffffffd,DEFAULT)	|	VoC_lw16i(REG5,0xffff)(hi)
		//0x090b		SPEEX_PRE_EXTEND_POST_N
0x18A41487,	//0x090c		VoC_lw32_d(RL7,0x18a4)
0xC8BAFBAF,	//0x090e		VoC_add32_rr(REG45,REG45,RL7,DEFAULT)	|	VoC_shr32_ri(RL7,0xfffffff5,DEFAULT)
0x0C462B80,	//0x0910		VoC_jal(spx_mult16_32_p15)
0x2B80FF26,	//0x0912		VoC_jal(hypergeom_gain)(lo)	|	VoC_movreg32(RL6,ACC0,DEFAULT)
0xFF020E1D,	//0x0914		VoC_movreg32(REG45,REG01,DEFAULT)	|	VoC_jal(hypergeom_gain)(hi)
0x7019DF80,	//0x0916		VoC_lw16i_short(FORMAT32,0x0,DEFAULT)	|	VoC_pop16(REG0,DEFAULT)
0xFBFAF47A,	//0x0918		VoC_shr32_ri(REG45,0xffffffff,DEFAULT)	|	VoC_lw16i_short(FORMATX,0xf,IN_PARALLEL)
0xCD44F90C,	//0x091a		VoC_multf32_rr(ACC0,REG5,REG0,DEFAULT)	|	VoC_shru16_ri(REG4,0x1,DEFAULT)
0xFFC0CE60,	//0x091c		VoC_NOP	|	VoC_macX_rr(REG4,REG0,DEFAULT)
0xFF20FFC0,	//0x091e		VoC_movreg32(REG01,ACC0,DEFAULT)	|	VoC_NOP
0x19066020,	//0x0920		VoC_blt32_rd(SPEEX_PRE_G,REG01,0x1906)
0x19061480,	//0x0922		VoC_lw32_d(REG01,0x1906)
		//0x0924		SPEEX_PRE_G
0x0A02F1F9,	//0x0924		VoC_multf32_rd(REG45,REG0,0x18e4)(lo)	|	VoC_lw16i_short(FORMAT32,0xf,DEFAULT)
0xD83618E4,	//0x0926		VoC_lw16_p(REG6,REG3,DEFAULT)	|	VoC_multf32_rd(REG45,REG0,0x18e4)(hi)
0x092D34A6,	//0x0928		VoC_bngt16_rr(SPEEX_PRE_G2,REG4,REG6)
0x18A80830,	//0x092a		VoC_mult16_rd(REG0,REG6,0x18a8)
0xE006FFC0,	//0x092c		VoC_movreg16(REG6,REG0,DEFAULT)	|	VoC_NOP
		//0x092d		SPEEX_PRE_G2
0xFFC0CDB0,	//0x092e		VoC_NOP	|	VoC_multf32_rr(REG01,REG6,REG6,DEFAULT)
0x0A00F019,	//0x0930		VoC_multf32_rd(REG01,REG0,0x18fc)(lo)	|	VoC_lw16i_short(FORMAT32,0x0,DEFAULT)
0xFFC018FC,	//0x0932		VoC_NOP	|	VoC_multf32_rd(REG01,REG0,0x18fc)(hi)
0x18E60900,	//0x0934		VoC_add32_rd(REG01,REG01,0x18e6)
0xDF877A78,	//0x0936		VoC_pop16(REG7,IN_PARALLEL)	|	VoC_shr32_ri(REG01,0xf,DEFAULT)
0x0A040A84,	//0x0938		VoC_lw16i(REG4,0xa04)
0xFFC0C1FD,	//0x093a		VoC_NOP	|	VoC_add16_rr(REG5,REG7,REG7,DEFAULT)
0xC12CDFC5,	//0x093c		VoC_add16_rr(REG4,REG4,REG5,DEFAULT)	|	VoC_push16(REG5,DEFAULT)
0xD9A2FFC0,	//0x093e		VoC_lw32_p(REG45,REG4,DEFAULT)	|	VoC_NOP
0x0C462B80,	//0x0940		VoC_jal(spx_mult16_32_p15)
0x0A80FF27,	//0x0942		VoC_lw16i(REG0,0x199a)(lo)	|	VoC_movreg32(RL7,ACC0,DEFAULT)
0x0A84199A,	//0x0944		VoC_lw16i(REG4,0x934)(lo)	|	VoC_lw16i(REG0,0x199a)(hi)
0xDF850934,	//0x0946		VoC_pop16(REG5,DEFAULT)	|	VoC_lw16i(REG4,0x934)(hi)
0xDFC7C12C,	//0x0948		VoC_push16(REG7,DEFAULT)	|	VoC_add16_rr(REG4,REG4,REG5,DEFAULT)
0xD9A2DFC4,	//0x094a		VoC_lw32_p(REG45,REG4,DEFAULT)	|	VoC_push16(REG4,DEFAULT)
0x0C462B80,	//0x094c		VoC_jal(spx_mult16_32_p15)
0xDF84C9E7,	//0x094e		VoC_pop16(REG4,DEFAULT)	|	VoC_add32_rr(RL7,RL7,ACC0,DEFAULT)
0xDDA7FFC0,	//0x0950		VoC_sw32_p(RL7,REG4,DEFAULT)	|	VoC_NOP
0xFFC0DF00,	//0x0952		VoC_NOP	|	VoC_pop32(REG01,DEFAULT)
0x3437D897,	//0x0954		VoC_bgt16_rr(SPEEX_PRE_GAIN_GT_FLOOR,REG6,REG7)(lo)	|	VoC_lw16inc_p(REG7,REG1,DEFAULT)
0xE0E60958,	//0x0956		VoC_movreg16(REG6,REG7,DEFAULT)	|	VoC_bgt16_rr(SPEEX_PRE_GAIN_GT_FLOOR,REG6,REG7)(hi)
		//0x0958		SPEEX_PRE_GAIN_GT_FLOOR
0xDCB6FFC0,	//0x0958		VoC_sw16inc_p(REG6,REG3,DEFAULT)	|	VoC_NOP
0x700FDFC6,	//0x095a		VoC_lw16i_short(RL7_HI,0x0,DEFAULT)	|	VoC_push16(REG6,DEFAULT)
0xDF40F6EE,	//0x095c		VoC_push32(REG01,DEFAULT)	|	VoC_movreg16(RL7_LO,REG7,IN_PARALLEL)
0xFF38FB8F,	//0x095e		VoC_movreg32(REG01,RL7,DEFAULT)	|	VoC_shr32_ri(RL7,0xfffffff1,DEFAULT)
0x0A732B80,	//0x0960		VoC_jal(spx_sqrt)
0x0B3ED827,	//0x0962		VoC_sub16_dr(REG6,0x1906,REG7)(lo)	|	VoC_lw16_p(REG7,REG2,DEFAULT)
0xF0191906,	//0x0964		VoC_lw16i_short(FORMAT32,0x0,DEFAULT)	|	VoC_sub16_dr(REG6,0x1906,REG7)(hi)
0xFFC0CC32,	//0x0966		VoC_NOP	|	VoC_multf32_rr(REG45,REG0,REG6,DEFAULT)
0x18E60912,	//0x0968		VoC_add32_rd(REG45,REG45,0x18e6)
0xDF867A7A,	//0x096a		VoC_pop16(REG6,IN_PARALLEL)	|	VoC_shr32_ri(REG45,0xf,DEFAULT)
0xF6CE700F,	//0x096c		VoC_movreg16(RL7_LO,REG6,IN_PARALLEL)	|	VoC_lw16i_short(RL7_HI,0x0,DEFAULT)
0xFF38FB8F,	//0x096e		VoC_movreg32(REG01,RL7,DEFAULT)	|	VoC_shr32_ri(RL7,0xfffffff1,DEFAULT)
0x0A732B80,	//0x0970		VoC_jal(spx_sqrt)
0xCE47FF44,	//0x0972		VoC_macX_rr(REG0,REG7,DEFAULT)	|	VoC_lw32z(ACC0,DEFAULT)
0x0924FFC0,	//0x0974		VoC_add32_rd(ACC0,ACC0,0x18e6)(lo)	|	VoC_NOP
0xFA7C18E6,	//0x0976		VoC_shr32_ri(ACC0,0xf,DEFAULT)	|	VoC_add32_rd(ACC0,ACC0,0x18e6)(hi)
0x7F44C8A2,	//0x0978		VoC_lw32z(ACC0,DEFAULT)	|	VoC_add32_rr(REG45,REG45,ACC0,DEFAULT)
0xCE24F479,	//0x097a		VoC_mac32_rr(REG4,REG4,DEFAULT)	|	VoC_lw16i_short(FORMAT32,0xf,IN_PARALLEL)
0xFF22FFC0,	//0x097c		VoC_movreg32(REG45,ACC0,DEFAULT)	|	VoC_NOP
0x5CA4FFC0,	//0x097e		VoC_sw16inc_p(REG4,REG2,DEFAULT)	|	VoC_NOP
0xDF87DF00,	//0x0980		VoC_pop16(REG7,DEFAULT)	|	VoC_pop32(REG01,IN_PARALLEL)
0x18A4073F,	//0x0982		VoC_add16_rd(REG7,REG7,0x18a4)
		//0x0984		VoC_endloop0
0x6E0DFFC0,	//0x0984		VoC_bnez16_d(SPEEX_PRE_DENOISE,0x334)(lo)	|	VoC_NOP
0x14040334,	//0x0986		VoC_lw16_d(REG4,0x331)(lo)	|	VoC_bnez16_d(SPEEX_PRE_DENOISE,0x334)(hi)
0x0A850331,	//0x0988		VoC_lw16i(REG5,0x7fff)(lo)	|	VoC_lw16_d(REG4,0x331)(hi)
0x07247FFF,	//0x098a		VoC_add16_rd(REG4,REG4,0x333)(lo)	|	VoC_lw16i(REG5,0x7fff)(hi)
0x18040333,	//0x098c		VoC_lw16i_set_inc(REG0,0x5b8,0x1)(lo)	|	VoC_add16_rd(REG4,REG4,0x333)(hi)
0xE70105B8,	//0x098e		VoC_loop_r_short(REG4,DEFAULT)	|	VoC_lw16i_set_inc(REG0,0x5b8,0x1)(hi)
		//0x0990		VoC_endloop0
0xFFC05C85,	//0x0990		VoC_NAD(IN_PARALLEL)	|	VoC_sw16inc_p(REG5,REG0,DEFAULT)
		//0x0992		SPEEX_PRE_DENOISE
0x03E01804,	//0x0992		VoC_lw16i_set_inc(REG0,0x3e0,0x1)
0x05B81805,	//0x0994		VoC_lw16i_set_inc(REG1,0x5b8,0x1)
0xD8077019,	//0x0996		VoC_lw16_p(REG7,REG0,IN_PARALLEL)	|	VoC_lw16i_short(FORMAT32,0x0,DEFAULT)
0xFFC099CA,	//0x0998		VoC_NOP	|	VoC_multf32_rp(REG45,REG7,REG1,DEFAULT)
0x18E60912,	//0x099a		VoC_add32_rd(REG45,REG45,0x18e6)
0xFFC0FA7A,	//0x099c		VoC_NOP	|	VoC_shr32_ri(REG45,0xf,DEFAULT)
0xDE08DC84,	//0x099e		VoC_inc_p(REG1,DEFAULT)	|	VoC_sw16inc_p(REG4,REG0,DEFAULT)
0x03311406,	//0x09a0		VoC_lw16_d(REG6,0x331)
0x18A407B6,	//0x09a2		VoC_sub16_rd(REG6,REG6,0x18a4)
0x09B52E31,	//0x09a4		VoC_loop_r(1,REG6)
0x99CAD807,	//0x09a6		VoC_multf32_rp(REG45,REG7,REG1,DEFAULT)	|	VoC_lw16_p(REG7,REG0,DEFAULT)
0x0912FFC0,	//0x09a8		VoC_add32_rd(REG45,REG45,0x18e6)(lo)	|	VoC_NOP
0xFA7A18E6,	//0x09aa		VoC_shr32_ri(REG45,0xf,DEFAULT)	|	VoC_add32_rd(REG45,REG45,0x18e6)(hi)
0xDC84FFC0,	//0x09ac		VoC_sw16inc_p(REG4,REG0,DEFAULT)	|	VoC_NOP
0x9BCAD807,	//0x09ae		VoC_multf32inc_rp(REG45,REG7,REG1,DEFAULT)	|	VoC_lw16_p(REG7,REG0,DEFAULT)
0x0912FFC0,	//0x09b0		VoC_add32_rd(REG45,REG45,0x18e6)(lo)	|	VoC_NOP
0xFA7A18E6,	//0x09b2		VoC_shr32_ri(REG45,0xf,DEFAULT)	|	VoC_add32_rd(REG45,REG45,0x18e6)(hi)
0xDC84FFC0,	//0x09b4		VoC_sw16inc_p(REG4,REG0,DEFAULT)	|	VoC_NOP
		//0x09b5		VoC_endloop1
0x18A40789,	//0x09b6		VoC_sub16_rd(REG1,REG1,0x18a4)
0x99CAD807,	//0x09b8		VoC_multf32_rp(REG45,REG7,REG1,DEFAULT)	|	VoC_lw16_p(REG7,REG0,DEFAULT)
0x0912FFC0,	//0x09ba		VoC_add32_rd(REG45,REG45,0x18e6)(lo)	|	VoC_NOP
0xFA7A18E6,	//0x09bc		VoC_shr32_ri(REG45,0xf,DEFAULT)	|	VoC_add32_rd(REG45,REG45,0x18e6)(hi)
0xDC04FFC0,	//0x09be		VoC_sw16_p(REG4,REG0,DEFAULT)	|	VoC_NOP
0x03E00A80,	//0x09c0		VoC_lw16i(REG0,0x3e0)
0x03400A81,	//0x09c2		VoC_lw16i(REG1,0x340)
0x0EA61500,	//0x09c4		VoC_sw16_d(REG0,0xea6)
0x0EA71501,	//0x09c6		VoC_sw16_d(REG1,0xea7)
0x0ECF2B80,	//0x09c8		VoC_jal(spx_kiss_fftri2)
0x03401804,	//0x09ca		VoC_lw16i_set_inc(REG0,0x340,0x1)
0x11A81805,	//0x09cc		VoC_lw16i_set_inc(REG1,0x11a8,0x1)
0x07931402,	//0x09ce		VoC_lw16_d(REG2,0x793)
0x03311404,	//0x09d0		VoC_lw16_d(REG4,0x331)
0x702EF8FC,	//0x09d2		VoC_lw16i_short(RL7_LO,0x1,DEFAULT)	|	VoC_shr16_ri(REG4,0xffffffff,DEFAULT)
0x0B13E00F,	//0x09d4		VoC_sub16_dr(REG3,0x18a4,REG2)(lo)	|	VoC_lw16i_short(RL7_HI,0x0,IN_PARALLEL)
0xFE9F18A4,	//0x09d6		VoC_shr32_rr(RL7,REG3,DEFAULT)	|	VoC_sub16_dr(REG3,0x18a4,REG2)(hi)
0xF4796710,	//0x09d8		VoC_lw16i_short(FORMAT32,0xf,IN_PARALLEL)	|	VoC_loop_r_short(REG4,DEFAULT)
0xE0075806,	//0x09da		VoC_lw16i_short(REG7,0x0,IN_PARALLEL)	|	VoC_lw16_p(REG6,REG0,DEFAULT)
0x09E03246,	//0x09dc		VoC_bnltz16_r(SPEEX_PRE_EXTEND_FRAME,REG6)
0x7FFF0AC7,	//0x09de		VoC_lw16i(REG7,0xffff)
		//0x09e0		SPEEX_PRE_EXTEND_FRAME
0xFE93C8FB,	//0x09e0		VoC_shr32_rr(REG67,REG2,DEFAULT)	|	VoC_add32_rr(REG67,REG67,RL7,DEFAULT)
0xF4797F44,	//0x09e2		VoC_lw16i_short(FORMAT32,0xf,IN_PARALLEL)	|	VoC_lw32z(ACC0,DEFAULT)
0xFFC0D131,	//0x09e4		VoC_NOP	|	VoC_mac32inc_rp(REG6,REG1,DEFAULT)
0xFFC0FF23,	//0x09e6		VoC_NOP	|	VoC_movreg32(REG67,ACC0,DEFAULT)
		//0x09e8		VoC_endloop0
0x1804DC86,	//0x09e8		VoC_lw16i_set_inc(REG0,0x108a,0x1)(lo)	|	VoC_sw16inc_p(REG6,REG0,DEFAULT)
0x1805108A,	//0x09ea		VoC_lw16i_set_inc(REG1,0x340,0x1)(lo)	|	VoC_lw16i_set_inc(REG0,0x108a,0x1)(hi)
0x18060340,	//0x09ec		VoC_lw16i_set_inc(REG2,0x390,0x1)(lo)	|	VoC_lw16i_set_inc(REG1,0x340,0x1)(hi)
0x18070390,	//0x09ee		VoC_lw16i_set_inc(REG3,0x740,0x1)(lo)	|	VoC_lw16i_set_inc(REG2,0x390,0x1)(hi)
0x14040740,	//0x09f0		VoC_lw16_d(REG4,0x331)(lo)	|	VoC_lw16i_set_inc(REG3,0x740,0x1)(hi)
0xE7050331,	//0x09f2		VoC_loop_r_short(REG4,DEFAULT)	|	VoC_lw16_d(REG4,0x331)(hi)
0xD8A5D836,	//0x09f4		VoC_lw16inc_p(REG5,REG2,DEFAULT)	|	VoC_lw16_p(REG6,REG3,DEFAULT)
0xDCB5838C,	//0x09f6		VoC_sw16inc_p(REG5,REG3,DEFAULT)	|	VoC_add16inc_rp(REG4,REG6,REG1,DEFAULT)
		//0x09f8		VoC_endloop0
0xDFA9DC84,	//0x09f8		VoC_pop16(RA,DEFAULT)	|	VoC_sw16inc_p(REG4,REG0,DEFAULT)
0xE580FFC0,	//0x09fa		VoC_return	|	VoC_NOP
		//0x09fc		speex_div32_16
0x5F41DF44,	//0x09fc		VoC_push32(REG23,DEFAULT)	|	VoC_push32(ACC0,DEFAULT)
0x5F43E014,	//0x09fe		VoC_push32(REG67,DEFAULT)	|	VoC_lw16i_short(REG4,0x1,IN_PARALLEL)
0x7F40E005,	//0x0a00		VoC_lw32z(REG01,DEFAULT)	|	VoC_lw16i_short(REG5,0x0,IN_PARALLEL)
0x73E6FF34,	//0x0a02		VoC_lw16i_short(REG6,0x1f,DEFAULT)	|	VoC_movreg32(ACC0,RL6,IN_PARALLEL)
0x5F46FAFC,	//0x0a04		VoC_push32(RL6,DEFAULT)	|	VoC_shr32_ri(ACC0,0x1f,IN_PARALLEL)
0x602EE007,	//0x0a06		VoC_blt32_rd(SPX_DIV_INT32_LT_65536,RL6,0x190c)(lo)	|	VoC_lw16i_short(REG7,0x0,IN_PARALLEL)
0xFA86190C,	//0x0a08		VoC_shr32_ri(RL6,0x10,DEFAULT)	|	VoC_blt32_rd(SPX_DIV_INT32_LT_65536,RL6,0x190c)(hi)
0x18B6073F,	//0x0a0a		VoC_add16_rd(REG7,REG7,0x18b6)
		//0x0a0c		SPX_DIV_INT32_LT_65536
0x18CA6036,	//0x0a0c		VoC_blt32_rd(SPX_DIV_INT32_LT_256,RL6,0x18ca)
0x073FFA46,	//0x0a0e		VoC_add16_rd(REG7,REG7,0x18b2)(lo)	|	VoC_shr32_ri(RL6,0x8,DEFAULT)
0xFFC018B2,	//0x0a10		VoC_NAD	|	VoC_add16_rd(REG7,REG7,0x18b2)(hi)
		//0x0a12		SPX_DIV_INT32_LT_256
0x18B66036,	//0x0a12		VoC_blt32_rd(SPX_DIV_INT32_LT_16,RL6,0x18b6)
0x073FFA26,	//0x0a14		VoC_add16_rd(REG7,REG7,0x18aa)(lo)	|	VoC_shr32_ri(RL6,0x4,DEFAULT)
0xFFC018AA,	//0x0a16		VoC_NAD	|	VoC_add16_rd(REG7,REG7,0x18aa)(hi)
		//0x0a18		SPX_DIV_INT32_LT_16
0x18AA6036,	//0x0a18		VoC_blt32_rd(SPX_DIV_INT32_LT_4,RL6,0x18aa)
0x073FFA16,	//0x0a1a		VoC_add16_rd(REG7,REG7,0x18a6)(lo)	|	VoC_shr32_ri(RL6,0x2,DEFAULT)
0xFFC018A6,	//0x0a1c		VoC_NAD	|	VoC_add16_rd(REG7,REG7,0x18a6)(hi)
		//0x0a1e		SPX_DIV_INT32_LT_4
0x18A66023,	//0x0a1e		VoC_blt32_rd(SPX_DIV_INT32_LT_2,REG67,0x18a6)
0xFFC041E7,	//0x0a20		VoC_NAD(IN_PARALLEL)	|	VoC_add16_rr(REG7,REG7,REG4,DEFAULT)
		//0x0a22		SPX_DIV_INT32_LT_2
0xDF0641E7,	//0x0a22		VoC_pop32(RL6,IN_PARALLEL)	|	VoC_add16_rr(REG7,REG7,REG4,DEFAULT)
0xC1E760E6,	//0x0a24		VoC_add16_rr(REG7,REG7,REG4,IN_PARALLEL)	|	VoC_movreg16(REG6,REG7,DEFAULT)
0x0A322E39,	//0x0a26		VoC_loop_r(1,REG7)
0xFF3143A6,	//0x0a28		VoC_movreg32(REG23,RL6,IN_PARALLEL)	|	VoC_sub16_rr(REG6,REG6,REG4,DEFAULT)
0x64D1FEB1,	//0x0a2a		VoC_and32_rr(REG23,REG45,DEFAULT)	|	VoC_shr32_rr(REG23,REG6,DEFAULT)
0x363CFBF8,	//0x0a2c		VoC_bgt32_rr(SPX_DIV32_TMP_LT_DIVISOR,RL7,ACC0)(lo)	|	VoC_shr32_ri(REG01,0xffffffff,IN_PARALLEL)
0x48100A31,	//0x0a2e		VoC_add32_rr(REG01,REG01,REG45,DEFAULT)	|	VoC_bgt32_rr(SPX_DIV32_TMP_LT_DIVISOR,RL7,ACC0)(hi)
0xFBFCCB3C,	//0x0a30		VoC_shr32_ri(ACC0,0xffffffff,DEFAULT)	|	VoC_sub32_rr(ACC0,ACC0,RL7,IN_PARALLEL)
		//0x0a31		SPX_DIV32_TMP_LT_DIVISOR
		//0x0a32		VoC_endloop1
0x7A0CC90C,	//0x0a32		VoC_shr32_ri(ACC0,0x1,DEFAULT)	|	VoC_add32_rr(ACC0,ACC0,REG23,DEFAULT)
0x7F22DF03,	//0x0a34		VoC_movreg32(REG45,ACC0,DEFAULT)	|	VoC_pop32(REG67,IN_PARALLEL)
0xDF04DF01,	//0x0a36		VoC_pop32(ACC0,DEFAULT)	|	VoC_pop32(REG23,IN_PARALLEL)
0xDF43E580,	//0x0a38		VoC_push32(REG67,DEFAULT)	|	VoC_return
		//0x0a39		spx_ilog2
0x602BF001,	//0x0a3a		VoC_blt32_rd(SPX_ILOG2_INT32_LT_65536,REG67,0x190c)(lo)	|	VoC_lw16i_short(REG1,0x0,DEFAULT)
0xFA83190C,	//0x0a3c		VoC_shr32_ri(REG67,0x10,DEFAULT)	|	VoC_blt32_rd(SPX_ILOG2_INT32_LT_65536,REG67,0x190c)(hi)
0x18B60709,	//0x0a3e		VoC_add16_rd(REG1,REG1,0x18b6)
		//0x0a40		SPX_ILOG2_INT32_LT_65536
0x18CA6033,	//0x0a40		VoC_blt32_rd(SPX_ILOG2_INT32_LT_256,REG67,0x18ca)
0x0709FA43,	//0x0a42		VoC_add16_rd(REG1,REG1,0x18b2)(lo)	|	VoC_shr32_ri(REG67,0x8,DEFAULT)
0xFFC018B2,	//0x0a44		VoC_NAD	|	VoC_add16_rd(REG1,REG1,0x18b2)(hi)
		//0x0a46		SPX_ILOG2_INT32_LT_256
0x18B66033,	//0x0a46		VoC_blt32_rd(SPX_ILOG2_INT32_LT_16,REG67,0x18b6)
0x0709FA23,	//0x0a48		VoC_add16_rd(REG1,REG1,0x18aa)(lo)	|	VoC_shr32_ri(REG67,0x4,DEFAULT)
0xFFC018AA,	//0x0a4a		VoC_NAD	|	VoC_add16_rd(REG1,REG1,0x18aa)(hi)
		//0x0a4c		SPX_ILOG2_INT32_LT_16
0x18AA6033,	//0x0a4c		VoC_blt32_rd(SPX_ILOG2_INT32_LT_4,REG67,0x18aa)
0x0709FA13,	//0x0a4e		VoC_add16_rd(REG1,REG1,0x18a6)(lo)	|	VoC_shr32_ri(REG67,0x2,DEFAULT)
0xFFC018A6,	//0x0a50		VoC_NAD	|	VoC_add16_rd(REG1,REG1,0x18a6)(hi)
		//0x0a52		SPX_ILOG2_INT32_LT_4
0x18A66023,	//0x0a52		VoC_blt32_rd(SPX_ILOG2_INT32_LT_2,REG67,0x18a6)
0x18A40709,	//0x0a54		VoC_add16_rd(REG1,REG1,0x18a4)
		//0x0a56		SPX_ILOG2_INT32_LT_2
0xE580DF03,	//0x0a56		VoC_return	|	VoC_pop32(REG67,DEFAULT)
		//0x0a58		spx_ilog4
0xF002DF43,	//0x0a58		VoC_lw16i_short(REG2,0x0,DEFAULT)	|	VoC_push32(REG67,DEFAULT)
0x190C6033,	//0x0a5a		VoC_blt32_rd(SPX_ILOG4_INT32_LT_65536,REG67,0x190c)
0x0712FA83,	//0x0a5c		VoC_add16_rd(REG2,REG2,0x18b2)(lo)	|	VoC_shr32_ri(REG67,0x10,DEFAULT)
0xFFC018B2,	//0x0a5e		VoC_NAD	|	VoC_add16_rd(REG2,REG2,0x18b2)(hi)
		//0x0a60		SPX_ILOG4_INT32_LT_65536
0x18CA6033,	//0x0a60		VoC_blt32_rd(SPX_ILOG4_INT32_LT_256,REG67,0x18ca)
0x0712FA43,	//0x0a62		VoC_add16_rd(REG2,REG2,0x18aa)(lo)	|	VoC_shr32_ri(REG67,0x8,DEFAULT)
0xFFC018AA,	//0x0a64		VoC_NAD	|	VoC_add16_rd(REG2,REG2,0x18aa)(hi)
		//0x0a66		SPX_ILOG4_INT32_LT_256
0x18B66033,	//0x0a66		VoC_blt32_rd(SPX_ILOG4_INT32_LT_16,REG67,0x18b6)
0x0712FA23,	//0x0a68		VoC_add16_rd(REG2,REG2,0x18a6)(lo)	|	VoC_shr32_ri(REG67,0x4,DEFAULT)
0xFFC018A6,	//0x0a6a		VoC_NAD	|	VoC_add16_rd(REG2,REG2,0x18a6)(hi)
		//0x0a6c		SPX_ILOG4_INT32_LT_16
0x18AA602B,	//0x0a6c		VoC_blt32_rd(SPX_ILOG4_INT32_LT_4,REG67,0x18aa)
0x0712FA13,	//0x0a6e		VoC_add16_rd(REG2,REG2,0x18a4)(lo)	|	VoC_shr32_ri(REG67,0x2,DEFAULT)
0xDF0318A4,	//0x0a70		VoC_pop32(REG67,DEFAULT)	|	VoC_add16_rd(REG2,REG2,0x18a4)(hi)
		//0x0a71		SPX_ILOG4_INT32_LT_4
0xDFE9E580,	//0x0a72		VoC_push16(RA,DEFAULT)	|	VoC_return
		//0x0a73		spx_sqrt
0xDF43DF41,	//0x0a74		VoC_push32(REG67,DEFAULT)	|	VoC_push32(REG23,DEFAULT)
0xFFC07F03,	//0x0a76		VoC_NAD(IN_PARALLEL)	|	VoC_movreg32(REG67,REG01,DEFAULT)
0x0A582B80,	//0x0a78		VoC_jal(spx_ilog4)
0x18AE0792,	//0x0a7a		VoC_sub16_rd(REG2,REG2,0x18ae)
0xF8FAE043,	//0x0a7c		VoC_shr16_ri(REG2,0xffffffff,DEFAULT)	|	VoC_movreg16(REG3,REG2,DEFAULT)
0x1806FE90,	//0x0a7e		VoC_lw16i_set_inc(REG2,0x1880,0x1)(lo)	|	VoC_shr32_rr(REG01,REG2,DEFAULT)
0xF1D91880,	//0x0a80		VoC_lw16i_short(FORMAT32,0xe,DEFAULT)	|	VoC_lw16i_set_inc(REG2,0x1880,0x1)(hi)
0xFFC09A13,	//0x0a82		VoC_NOP	|	VoC_multf32inc_rp(REG67,REG0,REG2,DEFAULT)
0xCC338396,	//0x0a84		VoC_multf32_rr(REG67,REG0,REG6,DEFAULT)	|	VoC_add16inc_rp(REG6,REG6,REG2,DEFAULT)
0x8396FFC0,	//0x0a86		VoC_add16inc_rp(REG6,REG6,REG2,DEFAULT)	|	VoC_NOP
0xFFC0CC33,	//0x0a88		VoC_NOP	|	VoC_multf32_rr(REG67,REG0,REG6,DEFAULT)
0x0B1B8390,	//0x0a8a		VoC_sub16_dr(REG3,0x18b0,REG3)(lo)	|	VoC_add16inc_rp(REG0,REG6,REG2,DEFAULT)
0xFE1818B0,	//0x0a8c		VoC_shr16_rr(REG0,REG3,DEFAULT)	|	VoC_sub16_dr(REG3,0x18b0,REG3)(hi)
0xDF01DF03,	//0x0a8e		VoC_pop32(REG23,DEFAULT)	|	VoC_pop32(REG67,DEFAULT)
0xFFC0DFA9,	//0x0a90		VoC_NOP	|	VoC_pop16(RA,DEFAULT)
0xDFE9E580,	//0x0a92		VoC_push16(RA,DEFAULT)	|	VoC_return
		//0x0a93		preprocess_analysis
0x03311400,	//0x0a94		VoC_lw16_d(REG0,0x331)
0x06F01809,	//0x0a96		VoC_lw16i_set_inc(REG1,0x6f0,0x2)
0x0340180A,	//0x0a98		VoC_lw16i_set_inc(REG2,0x340,0x2)
0x108A180B,	//0x0a9a		VoC_lw16i_set_inc(REG3,0x108a,0x2)
0xF6056004,	//0x0a9c		VoC_movreg16(REG5,REG0,IN_PARALLEL)	|	VoC_movreg16(REG4,REG0,DEFAULT)
0x6703F80C,	//0x0a9e		VoC_loop_r_short(REG4,DEFAULT)	|	VoC_shr16_ri(REG4,0x1,DEFAULT)
0xD9CFD9CF,	//0x0aa0		VoC_lw32inc_p(RL7,REG1,DEFAULT)	|	VoC_lw32inc_p(RL7,REG1,IN_PARALLEL)
		//0x0aa2		VoC_endloop0
0x1809DDD7,	//0x0aa2		VoC_lw16i_set_inc(REG1,0x6f0,0x2)(lo)	|	VoC_sw32inc_p(RL7,REG2,DEFAULT)
0xE70406F0,	//0x0aa4		VoC_loop_r_short(REG4,DEFAULT)	|	VoC_lw16i_set_inc(REG1,0x6f0,0x2)(hi)
0xFFC0D9DF,	//0x0aa6		VoC_NOP	|	VoC_lw32inc_p(RL7,REG3,DEFAULT)
0xDDCFDDD7,	//0x0aa8		VoC_sw32inc_p(RL7,REG1,DEFAULT)	|	VoC_sw32inc_p(RL7,REG2,DEFAULT)
		//0x0aa9		VoC_endloop0
0x03401806,	//0x0aaa		VoC_lw16i_set_inc(REG2,0x340,0x1)
0x11A81807,	//0x0aac		VoC_lw16i_set_inc(REG3,0x11a8,0x1)
0xF8FD7004,	//0x0aae		VoC_shr16_ri(REG5,0xffffffff,IN_PARALLEL)	|	VoC_lw16i_short(REG4,0x0,DEFAULT)
0xFF4371F9,	//0x0ab0		VoC_lw32z(REG67,IN_PARALLEL)	|	VoC_lw16i_short(FORMAT32,0xf,DEFAULT)
0xE750FFC0,	//0x0ab2		VoC_loop_r_short(REG5,DEFAULT)	|	VoC_NAD
0xD8B47F44,	//0x0ab4		VoC_lw16inc_p(REG4,REG3,IN_PARALLEL)	|	VoC_lw32z(ACC0,DEFAULT)
0xFFC0D022,	//0x0ab6		VoC_NOP	|	VoC_mac32_rp(REG4,REG2,DEFAULT)
0xFFC0FF20,	//0x0ab8		VoC_NOP	|	VoC_movreg32(REG01,ACC0,DEFAULT)
0x3100DCA0,	//0x0aba		VoC_bgtz16_r(Pp_analysis_Frame_gtz,REG0)(lo)	|	VoC_sw16inc_p(REG0,REG2,DEFAULT)
0x0B000AC0,	//0x0abc		VoC_sub16_dr(REG0,0x18a2,REG0)(lo)	|	VoC_bgtz16_r(Pp_analysis_Frame_gtz,REG0)(hi)
0xFFC018A2,	//0x0abe		VoC_NAD	|	VoC_sub16_dr(REG0,0x18a2,REG0)(hi)
		//0x0ac0		Pp_analysis_Frame_gtz
0x0AC33430,	//0x0ac0		VoC_bgt16_rr(Pp_analysis_max_val,REG6,REG0)
0xFFC0E006,	//0x0ac2		VoC_NOP	|	VoC_movreg16(REG6,REG0,DEFAULT)
		//0x0ac3		Pp_analysis_max_val
		//0x0ac3		VoC_endloop0
0x0AC83246,	//0x0ac4		VoC_bnltz16_r(SPEEX_PRE_EXTEND_MAX_VAL,REG6)
0x7FFF0AC7,	//0x0ac6		VoC_lw16i(REG7,0xffff)
		//0x0ac8		SPEEX_PRE_EXTEND_MAX_VAL
0x0A392B80,	//0x0ac8		VoC_jal(spx_ilog2)
0x18B40B0A,	//0x0aca		VoC_sub16_dr(REG2,0x18b4,REG1)
0x18B40789,	//0x0acc		VoC_sub16_rd(REG1,REG1,0x18b4)
0x07931502,	//0x0ace		VoC_sw16_d(REG2,0x793)
0x03311400,	//0x0ad0		VoC_lw16_d(REG0,0x331)
0x0340180A,	//0x0ad2		VoC_lw16i_set_inc(REG2,0x340,0x2)
0x0340180B,	//0x0ad4		VoC_lw16i_set_inc(REG3,0x340,0x2)
0xD9D36605,	//0x0ad6		VoC_lw32inc_p(REG67,REG2,IN_PARALLEL)	|	VoC_loop_r_short(REG0,DEFAULT)
0xFE0F7E0E,	//0x0ad8		VoC_shr16_rr(REG7,REG1,IN_PARALLEL)	|	VoC_shr16_rr(REG6,REG1,DEFAULT)
0xDDDBD9D3,	//0x0ada		VoC_sw32inc_p(REG67,REG3,DEFAULT)	|	VoC_lw32inc_p(REG67,REG2,DEFAULT)
		//0x0adb		VoC_endloop0
0x03400A80,	//0x0adc		VoC_lw16i(REG0,0x340)
0x03E00A81,	//0x0ade		VoC_lw16i(REG1,0x3e0)
0x0EA41500,	//0x0ae0		VoC_sw16_d(REG0,0xea4)
0x0EA51501,	//0x0ae2		VoC_sw16_d(REG1,0xea5)
0x0B0F2B80,	//0x0ae4		VoC_jal(spx_kiss_fftr2)
0x07931401,	//0x0ae6		VoC_lw16_d(REG1,0x793)
0xE01478F9,	//0x0ae8		VoC_lw16i_short(REG4,0x1,IN_PARALLEL)	|	VoC_shr16_ri(REG1,0xffffffff,DEFAULT)
0xF6227005,	//0x0aea		VoC_movreg16(REG2,REG1,IN_PARALLEL)	|	VoC_lw16i_short(REG5,0x0,DEFAULT)
0x1804C312,	//0x0aec		VoC_lw16i_set_inc(REG0,0x3e0,0x1)(lo)	|	VoC_sub16_rr(REG2,REG4,REG2,DEFAULT)
0x180B03E0,	//0x0aee		VoC_lw16i_set_inc(REG3,0xa04,0x2)(lo)	|	VoC_lw16i_set_inc(REG0,0x3e0,0x1)(hi)
0x58860A04,	//0x0af0		VoC_lw16inc_p(REG6,REG0,DEFAULT)	|	VoC_lw16i_set_inc(REG3,0xa04,0x2)(hi)
0x7F14FE92,	//0x0af2		VoC_movreg32(ACC0,REG45,DEFAULT)	|	VoC_shr32_rr(REG45,REG2,IN_PARALLEL)
0xCE36F401,	//0x0af4		VoC_mac32_rr(REG6,REG6,DEFAULT)	|	VoC_lw16i_short(FORMAT32,0x0,IN_PARALLEL)
0xFE8CFFC0,	//0x0af6		VoC_shr32_rr(ACC0,REG1,DEFAULT)	|	VoC_NOP
0xDDDCFFC0,	//0x0af8		VoC_sw32inc_p(ACC0,REG3,DEFAULT)	|	VoC_NOP
0x03311406,	//0x0afa		VoC_lw16_d(REG6,0x331)
0x18A407B6,	//0x0afc		VoC_sub16_rd(REG6,REG6,0x18a4)
0xFF14E787,	//0x0afe		VoC_movreg32(ACC0,REG45,DEFAULT)	|	VoC_loop_r_short(REG6,DEFAULT)
0xD400D400,	//0x0b00		VoC_mac32inc_pp(REG0,REG0,DEFAULT)	|	VoC_mac32inc_pp(REG0,REG0,DEFAULT)
0xFE8CFFC0,	//0x0b02		VoC_shr32_rr(ACC0,REG1,DEFAULT)	|	VoC_NOP
0xDDDCFFC0,	//0x0b04		VoC_sw32inc_p(ACC0,REG3,DEFAULT)	|	VoC_NOP
		//0x0b05		VoC_endloop0
0x0A040A84,	//0x0b06		VoC_lw16i(REG4,0xa04)
0x0AA40A85,	//0x0b08		VoC_lw16i(REG5,0xaa4)
0x0BEF2B80,	//0x0b0a		VoC_jal(filterbank_compute_bank32)
0xFFC0DFA9,	//0x0b0c		VoC_NOP	|	VoC_pop16(RA,DEFAULT)
0xDFE9E580,	//0x0b0e		VoC_push16(RA,DEFAULT)	|	VoC_return
		//0x0b0f		spx_kiss_fftr2
0xDFC5DF40,	//0x0b10		VoC_push16(REG5,DEFAULT)	|	VoC_push32(REG01,DEFAULT)
0x138A1804,	//0x0b12		VoC_lw16i_set_inc(REG0,0x138a,0x1)
0x138C1809,	//0x0b14		VoC_lw16i_set_inc(REG1,0x138c,0x2)
0x146C180A,	//0x0b16		VoC_lw16i_set_inc(REG2,0x146c,0x2)
0x0EA4200B,	//0x0b18		VoC_lw16d_set_inc(REG3,0xea4,0x2)
0xE0277024,	//0x0b1a		VoC_lw16i_short(REG7,0x2,IN_PARALLEL)	|	VoC_lw16i_short(REG4,0x1,DEFAULT)
0x0F322B80,	//0x0b1c		VoC_jal(spx_kf_shuffle)
0x702EF026,	//0x0b1e		VoC_lw16i_short(RL7_LO,0x1,DEFAULT)	|	VoC_lw16i_short(REG6,0x1,DEFAULT)
0xFFC0E01F,	//0x0b20		VoC_NAD	|	VoC_lw16i_short(RL7_HI,0x1,IN_PARALLEL)
0x14242B80,	//0x0b22		VoC_jal(spx_kf_work)
0x138A1400,	//0x0b24		VoC_lw16_d(REG0,0x138a)
0x0EA52007,	//0x0b26		VoC_lw16d_set_inc(REG3,0xea5,0x1)
0x146C180A,	//0x0b28		VoC_lw16i_set_inc(REG2,0x146c,0x2)
0x4019F8F8,	//0x0b2a		VoC_add16_rr(REG1,REG0,REG3,DEFAULT)	|	VoC_shr16_ri(REG0,0xffffffff,DEFAULT)
0x0789C010,	//0x0b2c		VoC_sub16_rd(REG1,REG1,0x18a4)(lo)	|	VoC_add16_rr(REG0,REG0,REG2,IN_PARALLEL)
0xF7D018A4,	//0x0b2e		VoC_lw16i_short(INC0,0xfffffffe,DEFAULT)	|	VoC_sub16_rd(REG1,REG1,0x18a4)(hi)
0x59D2F7F1,	//0x0b30		VoC_lw32inc_p(REG45,REG2,DEFAULT)	|	VoC_lw16i_short(INC1,0xffffffff,DEFAULT)
0x0A86DE00,	//0x0b32		VoC_lw16i(REG6,0x3fff)(lo)	|	VoC_inc_p(REG0,IN_PARALLEL)
0x7F443FFF,	//0x0b34		VoC_lw32z(ACC0,DEFAULT)	|	VoC_lw16i(REG6,0x3fff)(hi)
0xF019FF45,	//0x0b36		VoC_lw16i_short(FORMAT32,0x0,DEFAULT)	|	VoC_lw32z(ACC1,IN_PARALLEL)
0xCE2E4E26,	//0x0b38		VoC_mac32_rr(REG5,REG6,IN_PARALLEL)	|	VoC_mac32_rr(REG4,REG6,DEFAULT)
0x0924FFC0,	//0x0b3a		VoC_add32_rd(ACC0,ACC0,0x18e6)(lo)	|	VoC_NOP
0x092D18E6,	//0x0b3c		VoC_add32_rd(ACC1,ACC1,0x18e6)(lo)	|	VoC_add32_rd(ACC0,ACC0,0x18e6)(hi)
0x7A7C18E6,	//0x0b3e		VoC_shr32_ri(ACC0,0xf,DEFAULT)	|	VoC_add32_rd(ACC1,ACC1,0x18e6)(hi)
0x7F26FA7D,	//0x0b40		VoC_movreg32(RL6,ACC0,DEFAULT)	|	VoC_shr32_ri(ACC1,0xf,IN_PARALLEL)
0x6184FF2F,	//0x0b42		VoC_movreg16(REG4,RL6_LO,DEFAULT)	|	VoC_movreg32(RL7,ACC1,IN_PARALLEL)
0x412EF7C5,	//0x0b44		VoC_add16_rr(REG6,REG4,REG5,DEFAULT)	|	VoC_movreg16(REG5,RL7_LO,IN_PARALLEL)
0xFFC0C32F,	//0x0b46		VoC_NOP	|	VoC_sub16_rr(REG7,REG4,REG5,IN_PARALLEL)
0xDC97DCB6,	//0x0b48		VoC_sw16inc_p(REG7,REG1,DEFAULT)	|	VoC_sw16inc_p(REG6,REG3,DEFAULT)
0x138A1406,	//0x0b4a		VoC_lw16_d(REG6,0x138a)
0x0A87F80E,	//0x0b4c		VoC_lw16i(REG7,0x150c)(lo)	|	VoC_shr16_ri(REG6,0x1,DEFAULT)
0x073F150C,	//0x0b4e		VoC_add16_rd(REG7,REG7,0x18a6)(lo)	|	VoC_lw16i(REG7,0x150c)(hi)
0xF03018A6,	//0x0b50		VoC_lw16i_short(INC0,0x1,DEFAULT)	|	VoC_add16_rd(REG7,REG7,0x18a6)(hi)
0x2E30F032,	//0x0b52		VoC_loop_r(0,REG6)(lo)	|	VoC_lw16i_short(INC2,0x1,DEFAULT)
0xD9BA0B9B,	//0x0b54		VoC_lw32_p(REG45,REG7,DEFAULT)	|	VoC_loop_r(0,REG6)(hi)
0xDF42DFC7,	//0x0b56		VoC_push32(REG45,DEFAULT)	|	VoC_push16(REG7,DEFAULT)
0xFF477F46,	//0x0b58		VoC_lw32z(RL7,IN_PARALLEL)	|	VoC_lw32z(RL6,DEFAULT)
0xD885D8A4,	//0x0b5a		VoC_lw16inc_p(REG5,REG0,DEFAULT)	|	VoC_lw16inc_p(REG4,REG2,DEFAULT)
0xC12F432E,	//0x0b5c		VoC_add16_rr(REG7,REG4,REG5,IN_PARALLEL)	|	VoC_sub16_rr(REG6,REG4,REG5,DEFAULT)
0xF6EC780E,	//0x0b5e		VoC_movreg16(RL6_LO,REG7,IN_PARALLEL)	|	VoC_shr16_ri(REG6,0x1,DEFAULT)
0x0B643247,	//0x0b60		VoC_bnltz16_r(SPX_KISS_FFTR2_NEG_EXTEND1,REG7)
0x7FFF0ACD,	//0x0b62		VoC_lw16i(RL6_HI,0xffff)
		//0x0b64		SPX_KISS_FFTR2_NEG_EXTEND1
0xDFC6FB9E,	//0x0b64		VoC_push16(REG6,DEFAULT)	|	VoC_shr32_ri(RL6,0xfffffff3,DEFAULT)
0xD885D8A4,	//0x0b66		VoC_lw16inc_p(REG5,REG0,DEFAULT)	|	VoC_lw16inc_p(REG4,REG2,DEFAULT)
0xC32E412F,	//0x0b68		VoC_sub16_rr(REG6,REG4,REG5,IN_PARALLEL)	|	VoC_add16_rr(REG7,REG4,REG5,DEFAULT)
0x18A4073F,	//0x0b6a		VoC_add16_rd(REG7,REG7,0x18a4)
0x3246E0CE,	//0x0b6c		VoC_bnltz16_r(SPX_KISS_FFTR2_NEG_EXTEND2,REG6)(lo)	|	VoC_movreg16(RL7_LO,REG6,DEFAULT)
0x0ACF0B72,	//0x0b6e		VoC_lw16i(RL7_HI,0xffff)(lo)	|	VoC_bnltz16_r(SPX_KISS_FFTR2_NEG_EXTEND2,REG6)(hi)
0xFFC07FFF,	//0x0b70		VoC_NAD	|	VoC_lw16i(RL7_HI,0xffff)(hi)
		//0x0b72		SPX_KISS_FFTR2_NEG_EXTEND2
0xFB9F780F,	//0x0b72		VoC_shr32_ri(RL7,0xfffffff3,IN_PARALLEL)	|	VoC_shr16_ri(REG7,0x1,DEFAULT)
0xDF02DF86,	//0x0b74		VoC_pop32(REG45,DEFAULT)	|	VoC_pop16(REG6,DEFAULT)
0xFF457F44,	//0x0b76		VoC_lw32z(ACC1,IN_PARALLEL)	|	VoC_lw32z(ACC0,DEFAULT)
0xCE274E2F,	//0x0b78		VoC_mac32_rr(REG4,REG7,IN_PARALLEL)	|	VoC_mac32_rr(REG5,REG7,DEFAULT)
0x0BA4FFC0,	//0x0b7a		VoC_sub32_dr(ACC0,0x18a2,ACC0)(lo)	|	VoC_NOP
0x4E2618A2,	//0x0b7c		VoC_mac32_rr(REG4,REG6,DEFAULT)	|	VoC_sub32_dr(ACC0,0x18a2,ACC0)(hi)
0xFFC0CE2E,	//0x0b7e		VoC_NOP	|	VoC_mac32_rr(REG5,REG6,IN_PARALLEL)
0xFA0D7A0C,	//0x0b80		VoC_shr32_ri(ACC1,0x1,IN_PARALLEL)	|	VoC_shr32_ri(ACC0,0x1,DEFAULT)
0xCB7B49A2,	//0x0b82		VoC_sub32_rr(REG67,ACC1,RL7,IN_PARALLEL)	|	VoC_add32_rr(REG45,RL6,ACC0,DEFAULT)
0x18E60912,	//0x0b84		VoC_add32_rd(REG45,REG45,0x18e6)
0x18E6091B,	//0x0b86		VoC_add32_rd(REG67,REG67,0x18e6)
0xFA7B7A7A,	//0x0b88		VoC_shr32_ri(REG67,0xf,IN_PARALLEL)	|	VoC_shr32_ri(REG45,0xf,DEFAULT)
0xDCB4FFC0,	//0x0b8a		VoC_sw16inc_p(REG4,REG3,DEFAULT)	|	VoC_NOP
0x49EADC96,	//0x0b8c		VoC_add32_rr(REG45,RL7,ACC1,DEFAULT)	|	VoC_sw16inc_p(REG6,REG1,DEFAULT)
0x0912CBA3,	//0x0b8e		VoC_add32_rd(REG45,REG45,0x18e6)(lo)	|	VoC_sub32_rr(REG67,RL6,ACC0,IN_PARALLEL)
0x091B18E6,	//0x0b90		VoC_add32_rd(REG67,REG67,0x18e6)(lo)	|	VoC_add32_rd(REG45,REG45,0x18e6)(hi)
0x7A7A18E6,	//0x0b92		VoC_shr32_ri(REG45,0xf,DEFAULT)	|	VoC_add32_rd(REG67,REG67,0x18e6)(hi)
0xFFC0FA7B,	//0x0b94		VoC_NOP	|	VoC_shr32_ri(REG67,0xf,IN_PARALLEL)
0xDC96DCB4,	//0x0b96		VoC_sw16inc_p(REG6,REG1,DEFAULT)	|	VoC_sw16inc_p(REG4,REG3,DEFAULT)
0x073FDF87,	//0x0b98		VoC_add16_rd(REG7,REG7,0x18a6)(lo)	|	VoC_pop16(REG7,DEFAULT)
0x078018A6,	//0x0b9a		VoC_sub16_rd(REG0,REG0,0x18aa)(lo)	|	VoC_add16_rd(REG7,REG7,0x18a6)(hi)
		//0x0b9b		VoC_endloop0
0xDF8518AA,	//0x0b9c		VoC_pop16(REG5,DEFAULT)	|	VoC_sub16_rd(REG0,REG0,0x18aa)(hi)
0xDFA9DF00,	//0x0b9e		VoC_pop16(RA,DEFAULT)	|	VoC_pop32(REG01,DEFAULT)
0xE580FFC0,	//0x0ba0		VoC_return	|	VoC_NOP
		//0x0ba2		spx_fft
0xDF40DFE9,	//0x0ba2		VoC_push32(REG01,DEFAULT)	|	VoC_push16(RA,DEFAULT)
0x0EA42004,	//0x0ba4		VoC_lw16d_set_inc(REG0,0xea4,0x1)
0x0EA52005,	//0x0ba6		VoC_lw16d_set_inc(REG1,0xea5,0x1)
0x17CE1404,	//0x0ba8		VoC_lw16_d(REG4,0x17ce)
0xDFC07F43,	//0x0baa		VoC_push16(REG0,IN_PARALLEL)	|	VoC_lw32z(REG67,DEFAULT)
0xD885E709,	//0x0bac		VoC_lw16inc_p(REG5,REG0,DEFAULT)	|	VoC_loop_r_short(REG4,DEFAULT)
0x0BB23105,	//0x0bae		VoC_bgtz16_r(SPX_FFT_IN_GTZ,REG5)
0x18A20B2D,	//0x0bb0		VoC_sub16_dr(REG5,0x18a2,REG5)
		//0x0bb2		SPX_FFT_IN_GTZ
0x0BB53435,	//0x0bb2		VoC_bgt16_rr(SPX_FFT_MAX_VAL_MAX16,REG6,REG5)
0xFFC0E0A6,	//0x0bb4		VoC_NOP	|	VoC_movreg16(REG6,REG5,DEFAULT)
		//0x0bb5		SPX_FFT_MAX_VAL_MAX16
		//0x0bb5		VoC_endloop0
0x0A84DF80,	//0x0bb6		VoC_lw16i(REG4,0x3e80)(lo)	|	VoC_pop16(REG0,DEFAULT)
0xF0053E80,	//0x0bb8		VoC_lw16i_short(REG5,0x0,DEFAULT)	|	VoC_lw16i(REG4,0x3e80)(hi)
		//0x0bba		SPX_FFT_SHIFT_WHILE
0x0BC23434,	//0x0bba		VoC_bgt16_rr(SPX_FFT_SHIFT,REG6,REG4)
0x0BC23186,	//0x0bbc		VoC_bez16_r(SPX_FFT_SHIFT,REG6)
0x072DF8FE,	//0x0bbe		VoC_add16_rd(REG5,REG5,0x18a4)(lo)	|	VoC_shr16_ri(REG6,0xffffffff,DEFAULT)
0xE5F918A4,	//0x0bc0		VoC_jump(SPX_FFT_SHIFT_WHILE)	|	VoC_add16_rd(REG5,REG5,0x18a4)(hi)
		//0x0bc2		SPX_FFT_SHIFT
0x0EA42008,	//0x0bc2		VoC_lw16d_set_inc(REG0,0xea4,0x2)
0x0EA4200A,	//0x0bc4		VoC_lw16d_set_inc(REG2,0xea4,0x2)
0x17CE1404,	//0x0bc6		VoC_lw16_d(REG4,0x17ce)
0xF80C5FC5,	//0x0bc8		VoC_shr16_ri(REG4,0x1,IN_PARALLEL)	|	VoC_push16(REG5,DEFAULT)
0x18A20B2D,	//0x0bca		VoC_sub16_dr(REG5,0x18a2,REG5)
0xD9D36705,	//0x0bcc		VoC_lw32inc_p(REG67,REG2,IN_PARALLEL)	|	VoC_loop_r_short(REG4,DEFAULT)
0xFE2F7E2E,	//0x0bce		VoC_shr16_rr(REG7,REG5,IN_PARALLEL)	|	VoC_shr16_rr(REG6,REG5,DEFAULT)
0xDDC3D9D3,	//0x0bd0		VoC_sw32inc_p(REG67,REG0,DEFAULT)	|	VoC_lw32inc_p(REG67,REG2,DEFAULT)
		//0x0bd1		VoC_endloop0
0xFFC05F85,	//0x0bd2		VoC_NAD(IN_PARALLEL)	|	VoC_pop16(REG5,DEFAULT)
0x0B0F2B80,	//0x0bd4		VoC_jal(spx_kiss_fftr2)
0x17CE1404,	//0x0bd6		VoC_lw16_d(REG4,0x17ce)
0x18A40B2A,	//0x0bd8		VoC_sub16_dr(REG2,0x18a4,REG5)
0xE0167007,	//0x0bda		VoC_lw16i_short(REG6,0x1,IN_PARALLEL)	|	VoC_lw16i_short(REG7,0x0,DEFAULT)
0x0EA42004,	//0x0bdc		VoC_lw16d_set_inc(REG0,0xea4,0x1)
0x0EA52005,	//0x0bde		VoC_lw16d_set_inc(REG1,0xea5,0x1)
0xFE16670A,	//0x0be0		VoC_shr16_rr(REG6,REG2,IN_PARALLEL)	|	VoC_loop_r_short(REG4,DEFAULT)
0xD813D802,	//0x0be2		VoC_lw16_p(REG3,REG1,DEFAULT)	|	VoC_lw16_p(REG2,REG0,DEFAULT)
0xC0F340B2,	//0x0be4		VoC_add16_rr(REG3,REG3,REG6,IN_PARALLEL)	|	VoC_add16_rr(REG2,REG2,REG6,DEFAULT)
0xFE2B7E2A,	//0x0be6		VoC_shr16_rr(REG3,REG5,IN_PARALLEL)	|	VoC_shr16_rr(REG2,REG5,DEFAULT)
0xDC82FFC0,	//0x0be8		VoC_sw16inc_p(REG2,REG0,DEFAULT)	|	VoC_NOP
		//0x0bea		VoC_endloop0
0xDF00DC93,	//0x0bea		VoC_pop32(REG01,DEFAULT)	|	VoC_sw16inc_p(REG3,REG1,DEFAULT)
0xFFC0DFA9,	//0x0bec		VoC_NOP	|	VoC_pop16(RA,DEFAULT)
0xDF40E580,	//0x0bee		VoC_push32(REG01,DEFAULT)	|	VoC_return
		//0x0bef		filterbank_compute_bank32
0x5F42DF41,	//0x0bf0		VoC_push32(REG45,DEFAULT)	|	VoC_push32(REG23,DEFAULT)
0x5F43F008,	//0x0bf2		VoC_push32(REG67,DEFAULT)	|	VoC_lw16i_short(INC0,0x2,IN_PARALLEL)
0xE0A0FF47,	//0x0bf4		VoC_movreg16(REG0,REG5,DEFAULT)	|	VoC_lw32z(RL7,IN_PARALLEL)
0x13881406,	//0x0bf6		VoC_lw16_d(REG6,0x1388)
0xE782FFC0,	//0x0bf8		VoC_loop_r_short(REG6,DEFAULT)	|	VoC_NOP
0xFFC0DDC7,	//0x0bfa		VoC_NOP	|	VoC_sw32inc_p(RL7,REG0,DEFAULT)
		//0x0bfb		VoC_endloop0
0x13891406,	//0x0bfc		VoC_lw16_d(REG6,0x1389)
0x12481804,	//0x0bfe		VoC_lw16i_set_inc(REG0,0x1248,0x1)
0x12981805,	//0x0c00		VoC_lw16i_set_inc(REG1,0x1298,0x1)
0x12E81806,	//0x0c02		VoC_lw16i_set_inc(REG2,0x12e8,0x1)
0x13381807,	//0x0c04		VoC_lw16i_set_inc(REG3,0x1338,0x1)
0xE7AFF007,	//0x0c06		VoC_loop_r_short(REG6,DEFAULT)	|	VoC_lw16i_short(REG7,0x0,DEFAULT)
0x7F44DFC7,	//0x0c08		VoC_lw32z(ACC0,DEFAULT)	|	VoC_push16(REG7,DEFAULT)
0xD9A3FF45,	//0x0c0a		VoC_lw32_p(REG67,REG4,DEFAULT)	|	VoC_lw32z(ACC1,IN_PARALLEL)
0xFA7FFF1F,	//0x0c0c		VoC_shr32_ri(RL7,0xf,DEFAULT)	|	VoC_movreg32(RL7,REG67,DEFAULT)
0x19062983,	//0x0c0e		VoC_and32_rd(REG67,0x1906)
0x503AE1C7,	//0x0c10		VoC_mac32_rp(REG7,REG2,DEFAULT)	|	VoC_movreg16(REG7,RL7_LO,DEFAULT)
0xFFC0D132,	//0x0c12		VoC_NOP	|	VoC_mac32inc_rp(REG6,REG2,IN_PARALLEL)
0x18E6092D,	//0x0c14		VoC_add32_rd(ACC1,ACC1,0x18e6)
0x492CFA7D,	//0x0c16		VoC_add32_rr(ACC0,ACC0,ACC1,DEFAULT)	|	VoC_shr32_ri(ACC1,0xf,DEFAULT)
0xC176A206,	//0x0c18		VoC_add16_rr(REG6,REG5,REG6,DEFAULT)	|	VoC_add16inc_pp(REG6,REG0,REG0,IN_PARALLEL)
0x9134FFC0,	//0x0c1a		VoC_add32_rp(ACC0,ACC0,REG6,DEFAULT)	|	VoC_NOP
0xDDB4FFC0,	//0x0c1c		VoC_sw32_p(ACC0,REG6,DEFAULT)	|	VoC_NOP
0xFF457F44,	//0x0c1e		VoC_lw32z(ACC1,IN_PARALLEL)	|	VoC_lw32z(ACC0,DEFAULT)
0xFF1FD9A3,	//0x0c20		VoC_movreg32(RL7,REG67,DEFAULT)	|	VoC_lw32_p(REG67,REG4,DEFAULT)
0x2983FA7F,	//0x0c22		VoC_and32_rd(REG67,0x1906)(lo)	|	VoC_shr32_ri(RL7,0xf,DEFAULT)
0xE1C71906,	//0x0c24		VoC_movreg16(REG7,RL7_LO,DEFAULT)	|	VoC_and32_rd(REG67,0x1906)(hi)
0xD133503B,	//0x0c26		VoC_mac32inc_rp(REG6,REG3,IN_PARALLEL)	|	VoC_mac32_rp(REG7,REG3,DEFAULT)
0x092DFFC0,	//0x0c28		VoC_add32_rd(ACC1,ACC1,0x18e6)(lo)	|	VoC_NOP
0xFA7D18E6,	//0x0c2a		VoC_shr32_ri(ACC1,0xf,DEFAULT)	|	VoC_add32_rd(ACC1,ACC1,0x18e6)(hi)
0xA24E492C,	//0x0c2c		VoC_add16inc_pp(REG6,REG1,REG1,IN_PARALLEL)	|	VoC_add32_rr(ACC0,ACC0,ACC1,DEFAULT)
0xFFC0C176,	//0x0c2e		VoC_NOP	|	VoC_add16_rr(REG6,REG5,REG6,DEFAULT)
0xFFC09134,	//0x0c30		VoC_NOP	|	VoC_add32_rp(ACC0,ACC0,REG6,DEFAULT)
0xDF87DDB4,	//0x0c32		VoC_pop16(REG7,DEFAULT)	|	VoC_sw32_p(ACC0,REG6,DEFAULT)
0x18A60724,	//0x0c34		VoC_add16_rd(REG4,REG4,0x18a6)
		//0x0c36		VoC_endloop0
0x18A4073F,	//0x0c36		VoC_add16_rd(REG7,REG7,0x18a4)
0xDF02DF03,	//0x0c38		VoC_pop32(REG45,DEFAULT)	|	VoC_pop32(REG67,DEFAULT)
0xDF00DF01,	//0x0c3a		VoC_pop32(REG01,DEFAULT)	|	VoC_pop32(REG23,DEFAULT)
0xDF42E580,	//0x0c3c		VoC_push32(REG45,DEFAULT)	|	VoC_return
		//0x0c3d		spx_mult16_32_q15
0xF90CFBFA,	//0x0c3e		VoC_shru16_ri(REG4,0x1,DEFAULT)	|	VoC_shr32_ri(REG45,0xffffffff,DEFAULT)
0xF47A7019,	//0x0c40		VoC_lw16i_short(FORMATX,0xf,IN_PARALLEL)	|	VoC_lw16i_short(FORMAT32,0x0,DEFAULT)
0xCE60CD44,	//0x0c42		VoC_macX_rr(REG4,REG0,DEFAULT)	|	VoC_multf32_rr(ACC0,REG5,REG0,DEFAULT)
0xE580DF02,	//0x0c44		VoC_return	|	VoC_pop32(REG45,DEFAULT)
		//0x0c46		spx_mult16_32_p15
0xDF42DFC0,	//0x0c46		VoC_push32(REG45,DEFAULT)	|	VoC_push16(REG0,DEFAULT)
0x790CFBFA,	//0x0c48		VoC_shru16_ri(REG4,0x1,DEFAULT)	|	VoC_shr32_ri(REG45,0xffffffff,DEFAULT)
0x7019FF45,	//0x0c4a		VoC_lw16i_short(FORMAT32,0x0,DEFAULT)	|	VoC_lw32z(ACC1,IN_PARALLEL)
0x4D44F402,	//0x0c4c		VoC_multf32_rr(ACC0,REG5,REG0,DEFAULT)	|	VoC_lw16i_short(FORMATX,0x0,IN_PARALLEL)
0xDF02CE20,	//0x0c4e		VoC_pop32(REG45,DEFAULT)	|	VoC_mac32_rr(REG4,REG0,IN_PARALLEL)
0x18E6092D,	//0x0c50		VoC_add32_rd(ACC1,ACC1,0x18e6)
0x492CFA7D,	//0x0c52		VoC_add32_rr(ACC0,ACC0,ACC1,DEFAULT)	|	VoC_shr32_ri(ACC1,0xf,DEFAULT)
0xE580DF80,	//0x0c54		VoC_return	|	VoC_pop16(REG0,IN_PARALLEL)
		//0x0c56		update_noise_prob
0x1407DFE9,	//0x0c56		VoC_lw16_d(REG7,0x331)(lo)	|	VoC_push16(RA,DEFAULT)
0x18090331,	//0x0c58		VoC_lw16i_set_inc(REG1,0xad4,0x2)(lo)	|	VoC_lw16_d(REG7,0x331)(hi)
0x180A0AD4,	//0x0c5a		VoC_lw16i_set_inc(REG2,0xa04,0x2)(lo)	|	VoC_lw16i_set_inc(REG1,0xad4,0x2)(hi)
0x18070A04,	//0x0c5c		VoC_lw16i_set_inc(REG3,0x1884,0x1)(lo)	|	VoC_lw16i_set_inc(REG2,0xa04,0x2)(hi)
0x70191884,	//0x0c5e		VoC_lw16i_short(FORMAT32,0x0,DEFAULT)	|	VoC_lw16i_set_inc(REG3,0x1884,0x1)(hi)
0x0A80F47A,	//0x0c60		VoC_lw16i(REG0,0x6666)(lo)	|	VoC_lw16i_short(FORMATX,0xf,IN_PARALLEL)
0xD98A6666,	//0x0c62		VoC_lw32_p(REG45,REG1,DEFAULT)	|	VoC_lw16i(REG0,0x6666)(hi)
0xF90CFBFA,	//0x0c64		VoC_shru16_ri(REG4,0x1,DEFAULT)	|	VoC_shr32_ri(REG45,0xffffffff,DEFAULT)
0xCE60CD44,	//0x0c66		VoC_macX_rr(REG4,REG0,DEFAULT)	|	VoC_multf32_rr(ACC0,REG5,REG0,DEFAULT)
0x0A80FFC0,	//0x0c68		VoC_lw16i(REG0,0x199a)(lo)	|	VoC_NOP
0xD992199A,	//0x0c6a		VoC_lw32_p(REG45,REG2,DEFAULT)	|	VoC_lw16i(REG0,0x199a)(hi)
0xF90CFBFA,	//0x0c6c		VoC_shru16_ri(REG4,0x1,DEFAULT)	|	VoC_shr32_ri(REG45,0xffffffff,DEFAULT)
0xCE60CE28,	//0x0c6e		VoC_macX_rr(REG4,REG0,DEFAULT)	|	VoC_mac32_rr(REG5,REG0,DEFAULT)
0xFFC0FFC0,	//0x0c70		VoC_NOP	|	VoC_NOP
0x07BEDDCC,	//0x0c72		VoC_sub16_rd(REG6,REG7,0x18a6)(lo)	|	VoC_sw32inc_p(ACC0,REG1,DEFAULT)
0xE79518A6,	//0x0c74		VoC_loop_r_short(REG6,DEFAULT)	|	VoC_sub16_rd(REG6,REG7,0x18a6)(hi)
0x66660A80,	//0x0c76		VoC_lw16i(REG0,0x6666)
0xFBFAD98A,	//0x0c78		VoC_shr32_ri(REG45,0xffffffff,DEFAULT)	|	VoC_lw32_p(REG45,REG1,DEFAULT)
0xCD44F90C,	//0x0c7a		VoC_multf32_rr(ACC0,REG5,REG0,DEFAULT)	|	VoC_shru16_ri(REG4,0x1,DEFAULT)
0x2C07CE60,	//0x0c7c		VoC_loop_i(0x1,0x3)(lo)	|	VoC_macX_rr(REG4,REG0,DEFAULT)
0xFFC00C85,	//0x0c7e		VoC_NOP	|	VoC_loop_i(0x1,0x3)(hi)
0xD9D2D8B0,	//0x0c80		VoC_lw32inc_p(REG45,REG2,DEFAULT)	|	VoC_lw16inc_p(REG0,REG3,DEFAULT)
0xF90CFBFA,	//0x0c82		VoC_shru16_ri(REG4,0x1,DEFAULT)	|	VoC_shr32_ri(REG45,0xffffffff,DEFAULT)
0xCE60CE28,	//0x0c84		VoC_macX_rr(REG4,REG0,DEFAULT)	|	VoC_mac32_rr(REG5,REG0,DEFAULT)
		//0x0c85		VoC_endloop1
0x18AA0792,	//0x0c86		VoC_sub16_rd(REG2,REG2,0x18aa)
0x18A8079B,	//0x0c88		VoC_sub16_rd(REG3,REG3,0x18a8)
		//0x0c8a		VoC_endloop0
0x0712DDCC,	//0x0c8a		VoC_add16_rd(REG2,REG2,0x18a6)(lo)	|	VoC_sw32inc_p(ACC0,REG1,DEFAULT)
0x0A8018A6,	//0x0c8c		VoC_lw16i(REG0,0x6666)(lo)	|	VoC_add16_rd(REG2,REG2,0x18a6)(hi)
0xD98A6666,	//0x0c8e		VoC_lw32_p(REG45,REG1,DEFAULT)	|	VoC_lw16i(REG0,0x6666)(hi)
0xF90CFBFA,	//0x0c90		VoC_shru16_ri(REG4,0x1,DEFAULT)	|	VoC_shr32_ri(REG45,0xffffffff,DEFAULT)
0xCE60CD44,	//0x0c92		VoC_macX_rr(REG4,REG0,DEFAULT)	|	VoC_multf32_rr(ACC0,REG5,REG0,DEFAULT)
0x199A0A80,	//0x0c94		VoC_lw16i(REG0,0x199a)
0xFBFAD9D2,	//0x0c96		VoC_shr32_ri(REG45,0xffffffff,DEFAULT)	|	VoC_lw32inc_p(REG45,REG2,DEFAULT)
0xCE28F90C,	//0x0c98		VoC_mac32_rr(REG5,REG0,DEFAULT)	|	VoC_shru16_ri(REG4,0x1,DEFAULT)
0xFFC0CE60,	//0x0c9a		VoC_NOP	|	VoC_macX_rr(REG4,REG0,DEFAULT)
0xDDCCFFC0,	//0x0c9c		VoC_sw32inc_p(ACC0,REG1,DEFAULT)	|	VoC_NOP
0x07901401,	//0x0c9e		VoC_lw16_d(REG1,0x790)
0x18A444A1,	//0x0ca0		VoC_bne16_rd(UPDATE_NOISE_ADAPT_NE1,REG1,0x18a4)
0x1407FF47,	//0x0ca2		VoC_lw16_d(REG7,0x331)(lo)	|	VoC_lw32z(RL7,DEFAULT)
0x18080331,	//0x0ca4		VoC_lw16i_set_inc(REG0,0xc14,0x2)(lo)	|	VoC_lw16_d(REG7,0x331)(hi)
0x180A0C14,	//0x0ca6		VoC_lw16i_set_inc(REG2,0xb74,0x2)(lo)	|	VoC_lw16i_set_inc(REG0,0xc14,0x2)(hi)
0xE7C20B74,	//0x0ca8		VoC_loop_r_short(REG7,DEFAULT)	|	VoC_lw16i_set_inc(REG2,0xb74,0x2)(hi)
0xDDD7DDC7,	//0x0caa		VoC_sw32inc_p(RL7,REG2,DEFAULT)	|	VoC_sw32inc_p(RL7,REG0,DEFAULT)
		//0x0cab		VoC_endloop0
		//0x0cac		UPDATE_NOISE_ADAPT_NE1
0x18C44C31,	//0x0cac		VoC_bnlt16_rd(UPDATE_NOISE_NLT_100,REG1,0x18c4)
0x40E81404,	//0x0cae		VoC_lw16_d(REG4,0x40e8)
0xFFC065D0,	//0x0cb0		VoC_NAD(IN_PARALLEL)	|	VoC_jump(UPDATE_NOISE_MIN_RANGE_END)
		//0x0cb2		UPDATE_NOISE_NLT_100
0x18D24C31,	//0x0cb2		VoC_bnlt16_rd(UPDATE_NOISE_NLT_1000,REG1,0x18d2)
0x40E91404,	//0x0cb4		VoC_lw16_d(REG4,0x40e9)
0xFFC065CA,	//0x0cb6		VoC_NAD(IN_PARALLEL)	|	VoC_jump(UPDATE_NOISE_MIN_RANGE_END)
		//0x0cb8		UPDATE_NOISE_NLT_1000
0x18E24C31,	//0x0cb8		VoC_bnlt16_rd(UPDATE_NOISE_NLT_10000,REG1,0x18e2)
0x40EA1404,	//0x0cba		VoC_lw16_d(REG4,0x40ea)
0xFFC065C4,	//0x0cbc		VoC_NAD(IN_PARALLEL)	|	VoC_jump(UPDATE_NOISE_MIN_RANGE_END)
		//0x0cbe		UPDATE_NOISE_NLT_10000
0x40EB1404,	//0x0cbe		VoC_lw16_d(REG4,0x40eb)
		//0x0cc0		UPDATE_NOISE_MIN_RANGE_END
0x07921406,	//0x0cc0		VoC_lw16_d(REG6,0x792)
0x0C141808,	//0x0cc2		VoC_lw16i_set_inc(REG0,0xc14,0x2)
0x0AD41809,	//0x0cc4		VoC_lw16i_set_inc(REG1,0xad4,0x2)
0x0B74180A,	//0x0cc6		VoC_lw16i_set_inc(REG2,0xb74,0x2)
0x03311407,	//0x0cc8		VoC_lw16_d(REG7,0x331)
0x0CDA34B4,	//0x0cca		VoC_bngt16_rr(UPDATE_NOISE_COUNT_NGT_RANGE,REG6,REG4)
0xFFC0F006,	//0x0ccc		VoC_NOP	|	VoC_lw16i_short(REG6,0x0,DEFAULT)
0x07921506,	//0x0cce		VoC_sw16_d(REG6,0x792)
0xD9CFE7C8,	//0x0cd0		VoC_lw32inc_p(RL7,REG1,DEFAULT)	|	VoC_loop_r_short(REG7,DEFAULT)
0xDDC7D982,	//0x0cd2		VoC_sw32inc_p(RL7,REG0,DEFAULT)	|	VoC_lw32_p(REG45,REG0,DEFAULT)
0x0CD83617,	//0x0cd4		VoC_bgt32_rr(UPDATE_NOISE_Stmp_GT_S,REG45,RL7)
0xFFC0FF17,	//0x0cd6		VoC_NOP	|	VoC_movreg32(RL7,REG45,DEFAULT)
		//0x0cd8		UPDATE_NOISE_Stmp_GT_S
		//0x0cd8		VoC_endloop0
0xE5CFDDD7,	//0x0cd8		VoC_jump(UPDATE_NOISE_COUNT_END)	|	VoC_sw32inc_p(RL7,REG2,DEFAULT)
		//0x0cda		UPDATE_NOISE_COUNT_NGT_RANGE
0xD992E7CD,	//0x0cda		VoC_lw32_p(REG45,REG2,DEFAULT)	|	VoC_loop_r_short(REG7,DEFAULT)
0x363AD9CF,	//0x0cdc		VoC_bgt32_rr(UPDATE_NOISE_Smin_GT_S,RL7,REG45)(lo)	|	VoC_lw32inc_p(RL7,REG1,DEFAULT)
0xFF3A0CE1,	//0x0cde		VoC_movreg32(REG45,RL7,DEFAULT)	|	VoC_bgt32_rr(UPDATE_NOISE_Smin_GT_S,RL7,REG45)(hi)
0xDDD2FFC0,	//0x0ce0		VoC_sw32inc_p(REG45,REG2,DEFAULT)	|	VoC_NOP
		//0x0ce1		UPDATE_NOISE_Smin_GT_S
0x363AD982,	//0x0ce2		VoC_bgt32_rr(UPDATE_NOISE_Stmp_GT_S2,RL7,REG45)(lo)	|	VoC_lw32_p(REG45,REG0,DEFAULT)
0xFF3A0CE7,	//0x0ce4		VoC_movreg32(REG45,RL7,DEFAULT)	|	VoC_bgt32_rr(UPDATE_NOISE_Stmp_GT_S2,RL7,REG45)(hi)
0xDDC2FFC0,	//0x0ce6		VoC_sw32inc_p(REG45,REG0,DEFAULT)	|	VoC_NOP
		//0x0ce7		UPDATE_NOISE_Stmp_GT_S2
		//0x0ce7		VoC_endloop0
		//0x0ce8		UPDATE_NOISE_COUNT_END
0x0AD4180B,	//0x0ce8		VoC_lw16i_set_inc(REG3,0xad4,0x2)
0x0B741809,	//0x0cea		VoC_lw16i_set_inc(REG1,0xb74,0x2)
0x0CB41806,	//0x0cec		VoC_lw16i_set_inc(REG2,0xcb4,0x1)
0xD9DAE7CE,	//0x0cee		VoC_lw32inc_p(REG45,REG3,DEFAULT)	|	VoC_loop_r_short(REG7,DEFAULT)
0x33330A80,	//0x0cf0		VoC_lw16i(REG0,0x3333)
0xF90CFBFA,	//0x0cf2		VoC_shru16_ri(REG4,0x1,DEFAULT)	|	VoC_shr32_ri(REG45,0xffffffff,DEFAULT)
0xCE60CD44,	//0x0cf4		VoC_macX_rr(REG4,REG0,DEFAULT)	|	VoC_multf32_rr(ACC0,REG5,REG0,DEFAULT)
0xF026D9CF,	//0x0cf6		VoC_lw16i_short(REG6,0x1,DEFAULT)	|	VoC_lw32inc_p(RL7,REG1,DEFAULT)
0x0CFC3627,	//0x0cf8		VoC_bgt32_rr(UPDATE_NOISE_UPDATE_PROB,ACC0,RL7)
0xFFC0F006,	//0x0cfa		VoC_NOP	|	VoC_lw16i_short(REG6,0x0,DEFAULT)
		//0x0cfc		UPDATE_NOISE_UPDATE_PROB
		//0x0cfc		VoC_endloop0
0xDFA9DCA6,	//0x0cfc		VoC_pop16(RA,DEFAULT)	|	VoC_sw16inc_p(REG6,REG2,DEFAULT)
0xE580FFC0,	//0x0cfe		VoC_return	|	VoC_NOP
		//0x0d00		filterbank_compute_psd16
0xDF41DF40,	//0x0d00		VoC_push32(REG23,DEFAULT)	|	VoC_push32(REG01,DEFAULT)
0x1406DF43,	//0x0d02		VoC_lw16_d(REG6,0x1389)(lo)	|	VoC_push32(REG67,DEFAULT)
0x18041389,	//0x0d04		VoC_lw16i_set_inc(REG0,0x1248,0x1)(lo)	|	VoC_lw16_d(REG6,0x1389)(hi)
0x18051248,	//0x0d06		VoC_lw16i_set_inc(REG1,0x12e8,0x1)(lo)	|	VoC_lw16i_set_inc(REG0,0x1248,0x1)(hi)
0x180612E8,	//0x0d08		VoC_lw16i_set_inc(REG2,0x1298,0x1)(lo)	|	VoC_lw16i_set_inc(REG1,0x12e8,0x1)(hi)
0x18071298,	//0x0d0a		VoC_lw16i_set_inc(REG3,0x1338,0x1)(lo)	|	VoC_lw16i_set_inc(REG2,0x1298,0x1)(hi)
0xFFC01338,	//0x0d0c		VoC_NAD	|	VoC_lw16i_set_inc(REG3,0x1338,0x1)(hi)
0xF4016793,	//0x0d0e		VoC_lw16i_short(FORMAT32,0x0,IN_PARALLEL)	|	VoC_loop_r_short(REG6,DEFAULT)
0xD8867F44,	//0x0d10		VoC_lw16inc_p(REG6,REG0,IN_PARALLEL)	|	VoC_lw32z(ACC0,DEFAULT)
0xFFC0C137,	//0x0d12		VoC_NOP	|	VoC_add16_rr(REG7,REG4,REG6,DEFAULT)
0xD139D877,	//0x0d14		VoC_mac32inc_rp(REG7,REG1,DEFAULT)	|	VoC_lw16_p(REG7,REG7,DEFAULT)
0xC137D8A6,	//0x0d16		VoC_add16_rr(REG7,REG4,REG6,DEFAULT)	|	VoC_lw16inc_p(REG6,REG2,DEFAULT)
0xD877FFC0,	//0x0d18		VoC_lw16_p(REG7,REG7,DEFAULT)	|	VoC_NOP
0xFFC0D13B,	//0x0d1a		VoC_NOP	|	VoC_mac32inc_rp(REG7,REG3,DEFAULT)
0x18E60923,	//0x0d1c		VoC_add32_rd(REG67,ACC0,0x18e6)
0x072DFA7B,	//0x0d1e		VoC_add16_rd(REG5,REG5,0x18a4)(lo)	|	VoC_shr32_ri(REG67,0xf,DEFAULT)
0xDC5618A4,	//0x0d20		VoC_sw16_p(REG6,REG5,DEFAULT)	|	VoC_add16_rd(REG5,REG5,0x18a4)(hi)
		//0x0d21		VoC_endloop0
0xDF01DF03,	//0x0d22		VoC_pop32(REG23,DEFAULT)	|	VoC_pop32(REG67,DEFAULT)
0xE580DF00,	//0x0d24		VoC_return	|	VoC_pop32(REG01,DEFAULT)
		//0x0d26		spx_DIV32_16_Q15
0xDF435FE9,	//0x0d26		VoC_push32(REG67,IN_PARALLEL)	|	VoC_push16(RA,DEFAULT)
0xFF335F46,	//0x0d28		VoC_movreg32(REG67,RL6,IN_PARALLEL)	|	VoC_push32(RL6,DEFAULT)
0xFA7B5F47,	//0x0d2a		VoC_shr32_ri(REG67,0xf,IN_PARALLEL)	|	VoC_push32(RL7,DEFAULT)
0x0D32363B,	//0x0d2c		VoC_bgt32_rr(DIV32_16_Q15_LT_B,RL7,REG67)
0x7FFF0A80,	//0x0d2e		VoC_lw16i(REG0,0x7fff)
0xFFC065D5,	//0x0d30		VoC_NAD(IN_PARALLEL)	|	VoC_jump(DIV32_16_Q15_END)
		//0x0d32		DIV32_16_Q15_LT_B
0x19166027,	//0x0d32		VoC_blt32_rd(DIV32_16_Q15_IF1,RL7,0x1916)
0xFA477A46,	//0x0d34		VoC_shr32_ri(RL7,0x8,IN_PARALLEL)	|	VoC_shr32_ri(RL6,0x8,DEFAULT)
		//0x0d36		DIV32_16_Q15_IF1
0x19126027,	//0x0d36		VoC_blt32_rd(DIV32_16_Q15_IF2,RL7,0x1912)
0xFA277A26,	//0x0d38		VoC_shr32_ri(RL7,0x4,IN_PARALLEL)	|	VoC_shr32_ri(RL6,0x4,DEFAULT)
		//0x0d3a		DIV32_16_Q15_IF2
0x19086027,	//0x0d3a		VoC_blt32_rd(DIV32_16_Q15_IF3,RL7,0x1908)
0xFA277A26,	//0x0d3c		VoC_shr32_ri(RL7,0x4,IN_PARALLEL)	|	VoC_shr32_ri(RL6,0x4,DEFAULT)
		//0x0d3e		DIV32_16_Q15_IF3
0xFB8BFF33,	//0x0d3e		VoC_shr32_ri(REG67,0xfffffff1,DEFAULT)	|	VoC_movreg32(REG67,RL6,DEFAULT)
0xDF424AF6,	//0x0d40		VoC_push32(REG45,IN_PARALLEL)	|	VoC_sub32_rr(RL6,REG67,RL6,DEFAULT)
0x09FC2B80,	//0x0d42		VoC_jal(speex_div32_16)
0xDF07DF02,	//0x0d44		VoC_pop32(RL7,DEFAULT)	|	VoC_pop32(REG45,DEFAULT)
		//0x0d45		DIV32_16_Q15_END
0x5F03DF06,	//0x0d46		VoC_pop32(REG67,DEFAULT)	|	VoC_pop32(RL6,DEFAULT)
0xFFC0DFA9,	//0x0d48		VoC_NOP	|	VoC_pop16(RA,IN_PARALLEL)
0xFFC06580,	//0x0d4a		VoC_NAD(IN_PARALLEL)	|	VoC_return
		//0x0d4c		spx_DIV32_16_Q8
0xDF435FE9,	//0x0d4c		VoC_push32(REG67,IN_PARALLEL)	|	VoC_push16(RA,DEFAULT)
0xFF335F46,	//0x0d4e		VoC_movreg32(REG67,RL6,IN_PARALLEL)	|	VoC_push32(RL6,DEFAULT)
0xFA3B5F47,	//0x0d50		VoC_shr32_ri(REG67,0x7,IN_PARALLEL)	|	VoC_push32(RL7,DEFAULT)
0x0D58363B,	//0x0d52		VoC_bgt32_rr(DIV32_16_Q8_LT_B,RL7,REG67)
0x7FFF0A80,	//0x0d54		VoC_lw16i(REG0,0x7fff)
0xFFC065D6,	//0x0d56		VoC_NAD(IN_PARALLEL)	|	VoC_jump(DIV32_16_Q8_END)
		//0x0d58		DIV32_16_Q8_LT_B
0x19166027,	//0x0d58		VoC_blt32_rd(DIV32_16_Q8_IF1,RL7,0x1916)
0xFA477A46,	//0x0d5a		VoC_shr32_ri(RL7,0x8,IN_PARALLEL)	|	VoC_shr32_ri(RL6,0x8,DEFAULT)
		//0x0d5c		DIV32_16_Q8_IF1
0x19126027,	//0x0d5c		VoC_blt32_rd(DIV32_16_Q8_IF2,RL7,0x1912)
0xFA277A26,	//0x0d5e		VoC_shr32_ri(RL7,0x4,IN_PARALLEL)	|	VoC_shr32_ri(RL6,0x4,DEFAULT)
		//0x0d60		DIV32_16_Q8_IF2
0x19086027,	//0x0d60		VoC_blt32_rd(DIV32_16_Q8_IF3,RL7,0x1908)
0xFA277A26,	//0x0d62		VoC_shr32_ri(RL7,0x4,IN_PARALLEL)	|	VoC_shr32_ri(RL6,0x4,DEFAULT)
		//0x0d64		DIV32_16_Q8_IF3
0xFF3B7BC6,	//0x0d64		VoC_movreg32(REG67,RL7,IN_PARALLEL)	|	VoC_shr32_ri(RL6,0xfffffff8,DEFAULT)
0xDF427A0B,	//0x0d66		VoC_push32(REG45,IN_PARALLEL)	|	VoC_shr32_ri(REG67,0x1,DEFAULT)
0x2B80C99E,	//0x0d68		VoC_jal(speex_div32_16)(lo)	|	VoC_add32_rr(RL6,RL6,REG67,DEFAULT)
0xDF0209FC,	//0x0d6a		VoC_pop32(REG45,DEFAULT)	|	VoC_jal(speex_div32_16)(hi)
		//0x0d6c		DIV32_16_Q8_END
0xDF06DF07,	//0x0d6c		VoC_pop32(RL6,DEFAULT)	|	VoC_pop32(RL7,DEFAULT)
0xDFA95F03,	//0x0d6e		VoC_pop16(RA,IN_PARALLEL)	|	VoC_pop32(REG67,DEFAULT)
0xE580FFC0,	//0x0d70		VoC_return	|	VoC_NOP
		//0x0d72		compute_gain_floor
0x1405DFE9,	//0x0d72		VoC_lw16_d(REG5,0x33b)(lo)	|	VoC_push16(RA,DEFAULT)
0x7F44033B,	//0x0d74		VoC_lw32z(ACC0,DEFAULT)	|	VoC_lw16_d(REG5,0x33b)(hi)
0x0E28F401,	//0x0d76		VoC_mac32_rd(REG5,0x18ce)(lo)	|	VoC_lw16i_short(FORMAT32,0x0,IN_PARALLEL)
0xFFC018CE,	//0x0d78		VoC_NOP	|	VoC_mac32_rd(REG5,0x18ce)(hi)
0x2B80FF20,	//0x0d7a		VoC_jal(spx_exp)(lo)	|	VoC_movreg32(REG01,ACC0,DEFAULT)
0xFA0F0E85,	//0x0d7c		VoC_shr32_ri(RL7,0x1,DEFAULT)	|	VoC_jal(spx_exp)(hi)
0x19066037,	//0x0d7e		VoC_blt32_rd(COMPUTE_GAIN_FLOOR_Q15ONE1,RL7,0x1906)
0x19061487,	//0x0d80		VoC_lw32_d(RL7,0x1906)
0xFFC07FC0,	//0x0d82		VoC_NAD(IN_PARALLEL)	|	VoC_NOP
		//0x0d84		COMPUTE_GAIN_FLOOR_Q15ONE1
0x10DA1587,	//0x0d84		VoC_sw32_d(RL7,0x10da)
0x7F44C32C,	//0x0d86		VoC_lw32z(ACC0,DEFAULT)	|	VoC_sub16_rr(REG4,REG4,REG5,DEFAULT)
0x0E20F401,	//0x0d88		VoC_mac32_rd(REG4,0x18cc)(lo)	|	VoC_lw16i_short(FORMAT32,0x0,IN_PARALLEL)
0xFFC018CC,	//0x0d8a		VoC_NOP	|	VoC_mac32_rd(REG4,0x18cc)(hi)
0x2B80FF20,	//0x0d8c		VoC_jal(spx_exp)(lo)	|	VoC_movreg32(REG01,ACC0,DEFAULT)
0xFA0F0E85,	//0x0d8e		VoC_shr32_ri(RL7,0x1,DEFAULT)	|	VoC_jal(spx_exp)(hi)
0x19066027,	//0x0d90		VoC_blt32_rd(COMPUTE_GAIN_FLOOR_Q15ONE2,RL7,0x1906)
0x19061487,	//0x0d92		VoC_lw32_d(RL7,0x1906)
		//0x0d94		COMPUTE_GAIN_FLOOR_Q15ONE2
0x1403FF3A,	//0x0d94		VoC_lw16_d(REG3,0x333)(lo)	|	VoC_movreg32(REG45,RL7,DEFAULT)
0x18080333,	//0x0d96		VoC_lw16i_set_inc(REG0,0x834,0x2)(lo)	|	VoC_lw16_d(REG3,0x333)(hi)
0x18090834,	//0x0d98		VoC_lw16i_set_inc(REG1,0xda4,0x2)(lo)	|	VoC_lw16i_set_inc(REG0,0x834,0x2)(hi)
0x18060DA4,	//0x0d9a		VoC_lw16i_set_inc(REG2,0x670,0x1)(lo)	|	VoC_lw16i_set_inc(REG1,0xda4,0x2)(hi)
0xE6EB0670,	//0x0d9c		VoC_loop_r_short(REG3,DEFAULT)	|	VoC_lw16i_set_inc(REG2,0x670,0x1)(hi)
0xD9C6DFC4,	//0x0d9e		VoC_lw32inc_p(RL6,REG0,DEFAULT)	|	VoC_push16(REG4,DEFAULT)
0x18A41487,	//0x0da0		VoC_lw32_d(RL7,0x18a4)
0xC9BEFBD7,	//0x0da2		VoC_add32_rr(RL6,RL6,RL7,DEFAULT)	|	VoC_shr32_ri(RL7,0xfffffffa,DEFAULT)
0xDF40FA3E,	//0x0da4		VoC_push32(REG01,DEFAULT)	|	VoC_shr32_ri(RL6,0x7,DEFAULT)
0xD9CAE080,	//0x0da6		VoC_lw32inc_p(REG45,REG1,DEFAULT)	|	VoC_movreg16(REG0,REG4,DEFAULT)
0xDF42FFC0,	//0x0da8		VoC_push32(REG45,DEFAULT)	|	VoC_NOP
0xF90CFBFA,	//0x0daa		VoC_shru16_ri(REG4,0x1,DEFAULT)	|	VoC_shr32_ri(REG45,0xffffffff,DEFAULT)
0xF47A7019,	//0x0dac		VoC_lw16i_short(FORMATX,0xf,IN_PARALLEL)	|	VoC_lw16i_short(FORMAT32,0x0,DEFAULT)
0xCE60CD44,	//0x0dae		VoC_macX_rr(REG4,REG0,DEFAULT)	|	VoC_multf32_rr(ACC0,REG5,REG0,DEFAULT)
0xC9A7DF02,	//0x0db0		VoC_add32_rr(RL7,RL6,ACC0,DEFAULT)	|	VoC_pop32(REG45,DEFAULT)
0xDF47FFC0,	//0x0db2		VoC_push32(RL7,DEFAULT)	|	VoC_NOP
0x093FC997,	//0x0db4		VoC_add32_rd(RL7,RL7,0x18a4)(lo)	|	VoC_add32_rr(RL7,RL6,REG45,DEFAULT)
0xDF0618A4,	//0x0db6		VoC_pop32(RL6,DEFAULT)	|	VoC_add32_rd(RL7,RL7,0x18a4)(hi)
0x0D262B80,	//0x0db8		VoC_jal(spx_DIV32_16_Q15)
0xFFC07B88,	//0x0dba		VoC_NAD(IN_PARALLEL)	|	VoC_shr32_ri(REG01,0xfffffff1,DEFAULT)
0x0A732B80,	//0x0dbc		VoC_jal(spx_sqrt)
0xF4797F44,	//0x0dbe		VoC_lw16i_short(FORMAT32,0xf,IN_PARALLEL)	|	VoC_lw32z(ACC0,DEFAULT)
0x10DA0E00,	//0x0dc0		VoC_mac32_rd(REG0,0x10da)
0xFF20FFC0,	//0x0dc2		VoC_movreg32(REG01,ACC0,DEFAULT)	|	VoC_NOP
0xDCA0FFC0,	//0x0dc4		VoC_sw16inc_p(REG0,REG2,DEFAULT)	|	VoC_NOP
0xDF84DF00,	//0x0dc6		VoC_pop16(REG4,DEFAULT)	|	VoC_pop32(REG01,DEFAULT)
		//0x0dc8		VoC_endloop0
0x18A60709,	//0x0dc8		VoC_add16_rd(REG1,REG1,0x18a6)
0x0E1A2B00,	//0x0dca		VoC_jump_lg(COMPUTE_GAIN_FLOOR_END)
		//0x0dcc		COMPUTE_GAIN_FLOOR_IF1
0x18D20E20,	//0x0dcc		VoC_mac32_rd(REG4,0x18d2)
0xFF20FFC0,	//0x0dce		VoC_movreg32(REG01,ACC0,DEFAULT)	|	VoC_NOP
0x0E852B80,	//0x0dd0		VoC_jal(spx_exp)
0x602FFA0F,	//0x0dd2		VoC_blt32_rd(COMPUTE_GAIN_FLOOR_Q15ONE3,RL7,0x1906)(lo)	|	VoC_shr32_ri(RL7,0x1,DEFAULT)
0x14871906,	//0x0dd4		VoC_lw32_d(RL7,0x1906)(lo)	|	VoC_blt32_rd(COMPUTE_GAIN_FLOOR_Q15ONE3,RL7,0x1906)(hi)
0xFFC01906,	//0x0dd6		VoC_NOP	|	VoC_lw32_d(RL7,0x1906)(hi)
		//0x0dd8		COMPUTE_GAIN_FLOOR_Q15ONE3
0x10DA1587,	//0x0dd8		VoC_sw32_d(RL7,0x10da)
0xFF444364,	//0x0dda		VoC_lw32z(ACC0,IN_PARALLEL)	|	VoC_sub16_rr(REG4,REG5,REG4,DEFAULT)
0x18CC0E20,	//0x0ddc		VoC_mac32_rd(REG4,0x18cc)
0xFF20FFC0,	//0x0dde		VoC_movreg32(REG01,ACC0,DEFAULT)	|	VoC_NOP
0x0E852B80,	//0x0de0		VoC_jal(spx_exp)
0x6027FA0F,	//0x0de2		VoC_blt32_rd(COMPUTE_GAIN_FLOOR_Q15ONE4,RL7,0x1906)(lo)	|	VoC_shr32_ri(RL7,0x1,DEFAULT)
0x14871906,	//0x0de4		VoC_lw32_d(RL7,0x1906)(lo)	|	VoC_blt32_rd(COMPUTE_GAIN_FLOOR_Q15ONE4,RL7,0x1906)(hi)
0xFF3A1906,	//0x0de6		VoC_movreg32(REG45,RL7,DEFAULT)	|	VoC_lw32_d(RL7,0x1906)(hi)
		//0x0de7		COMPUTE_GAIN_FLOOR_Q15ONE4
0x03331403,	//0x0de8		VoC_lw16_d(REG3,0x333)
0x08341808,	//0x0dea		VoC_lw16i_set_inc(REG0,0x834,0x2)
0x0DA41809,	//0x0dec		VoC_lw16i_set_inc(REG1,0xda4,0x2)
0x06701806,	//0x0dee		VoC_lw16i_set_inc(REG2,0x670,0x1)
0xDFC4E6E8,	//0x0df0		VoC_push16(REG4,DEFAULT)	|	VoC_loop_r_short(REG3,DEFAULT)
0x1487D9C6,	//0x0df2		VoC_lw32_d(RL7,0x18a4)(lo)	|	VoC_lw32inc_p(RL6,REG0,DEFAULT)
0xFBD718A4,	//0x0df4		VoC_shr32_ri(RL7,0xfffffffa,DEFAULT)	|	VoC_lw32_d(RL7,0x18a4)(hi)
0xFA3EC9BE,	//0x0df6		VoC_shr32_ri(RL6,0x7,DEFAULT)	|	VoC_add32_rr(RL6,RL6,RL7,DEFAULT)
0xE080DF40,	//0x0df8		VoC_movreg16(REG0,REG4,DEFAULT)	|	VoC_push32(REG01,DEFAULT)
0xFBFAFF32,	//0x0dfa		VoC_shr32_ri(REG45,0xffffffff,DEFAULT)	|	VoC_movreg32(REG45,RL6,DEFAULT)
0x7019F90C,	//0x0dfc		VoC_lw16i_short(FORMAT32,0x0,DEFAULT)	|	VoC_shru16_ri(REG4,0x1,DEFAULT)
0xCD44F47A,	//0x0dfe		VoC_multf32_rr(ACC0,REG5,REG0,DEFAULT)	|	VoC_lw16i_short(FORMATX,0xf,IN_PARALLEL)
0xD98ACE60,	//0x0e00		VoC_lw32_p(REG45,REG1,DEFAULT)	|	VoC_macX_rr(REG4,REG0,DEFAULT)
0xFFC0C8A7,	//0x0e02		VoC_NOP	|	VoC_add32_rr(RL7,REG45,ACC0,DEFAULT)
0xC997DF47,	//0x0e04		VoC_add32_rr(RL7,RL6,REG45,DEFAULT)	|	VoC_push32(RL7,DEFAULT)
0x18A4093F,	//0x0e06		VoC_add32_rd(RL7,RL7,0x18a4)
0x2B80DF06,	//0x0e08		VoC_jal(spx_DIV32_16_Q15)(lo)	|	VoC_pop32(RL6,DEFAULT)
0xFB880D26,	//0x0e0a		VoC_shr32_ri(REG01,0xfffffff1,DEFAULT)	|	VoC_jal(spx_DIV32_16_Q15)(hi)
0x0A732B80,	//0x0e0c		VoC_jal(spx_sqrt)
0xF4797F44,	//0x0e0e		VoC_lw16i_short(FORMAT32,0xf,IN_PARALLEL)	|	VoC_lw32z(ACC0,DEFAULT)
0x10DA0E00,	//0x0e10		VoC_mac32_rd(REG0,0x10da)
0xFF20FFC0,	//0x0e12		VoC_movreg32(REG01,ACC0,DEFAULT)	|	VoC_NOP
0xDCA0FFC0,	//0x0e14		VoC_sw16inc_p(REG0,REG2,DEFAULT)	|	VoC_NOP
0xDF84DF00,	//0x0e16		VoC_pop16(REG4,DEFAULT)	|	VoC_pop32(REG01,DEFAULT)
		//0x0e18		VoC_endloop0
0x18A60709,	//0x0e18		VoC_add16_rd(REG1,REG1,0x18a6)
		//0x0e1a		COMPUTE_GAIN_FLOOR_END
0xFFC0DFA9,	//0x0e1a		VoC_NOP	|	VoC_pop16(RA,DEFAULT)
0xDFE9E580,	//0x0e1c		VoC_push16(RA,DEFAULT)	|	VoC_return
		//0x0e1d		hypergeom_gain
0xDF42DF41,	//0x0e1e		VoC_push32(REG45,DEFAULT)	|	VoC_push32(REG23,DEFAULT)
0xDF46DF43,	//0x0e20		VoC_push32(RL6,DEFAULT)	|	VoC_push32(REG67,DEFAULT)
0x7F33DF47,	//0x0e22		VoC_movreg32(REG67,RL6,DEFAULT)	|	VoC_push32(RL7,DEFAULT)
0xFA53FF32,	//0x0e24		VoC_shr32_ri(REG67,0xa,DEFAULT)	|	VoC_movreg32(REG45,RL6,IN_PARALLEL)
0x0E2E3246,	//0x0e26		VoC_bnltz16_r(HYPERGEOM_GAIN_IND_NLT_0,REG6)
0x7FFF0A80,	//0x0e28		VoC_lw16i(REG0,0x7fff)
0x2B00F001,	//0x0e2a		VoC_jump_lg(HYPERGEOM_GAIN_END)(lo)	|	VoC_lw16i_short(REG1,0x0,DEFAULT)
0xFFC00E5B,	//0x0e2c		VoC_NAD	|	VoC_jump_lg(HYPERGEOM_GAIN_END)(hi)
		//0x0e2e		HYPERGEOM_GAIN_IND_NLT_0
0x18BA3CB6,	//0x0e2e		VoC_bngt16_rd(HYPERGEOM_GAIN_IND_NGT_19,REG6,0x18ba)
0xDF467A1A,	//0x0e30		VoC_push32(RL6,IN_PARALLEL)	|	VoC_shr32_ri(REG45,0x3,DEFAULT)
0x19141486,	//0x0e32		VoC_lw32_d(RL6,0x1914)
0x2B80FF17,	//0x0e34		VoC_jal(speex_div32_16)(lo)	|	VoC_movreg32(RL7,REG45,DEFAULT)
0xDF0609FC,	//0x0e36		VoC_pop32(RL6,DEFAULT)	|	VoC_jal(speex_div32_16)(hi)
0x19060900,	//0x0e38		VoC_add32_rd(REG01,REG01,0x1906)
0x0E5B2B00,	//0x0e3a		VoC_jump_lg(HYPERGEOM_GAIN_END)
		//0x0e3c		HYPERGEOM_GAIN_IND_NGT_19
0xFBB3DF43,	//0x0e3c		VoC_shr32_ri(REG67,0xfffffff6,DEFAULT)	|	VoC_push32(REG67,DEFAULT)
0x7BD9CB99,	//0x0e3e		VoC_shr32_ri(REG23,0xfffffffb,DEFAULT)	|	VoC_sub32_rr(REG23,RL6,REG67,DEFAULT)
0x1804DF03,	//0x0e40		VoC_lw16i_set_inc(REG0,0x1888,0x1)(lo)	|	VoC_pop32(REG67,IN_PARALLEL)
0xC0301888,	//0x0e42		VoC_add16_rr(REG0,REG0,REG6,DEFAULT)	|	VoC_lw16i_set_inc(REG0,0x1888,0x1)(hi)
0x19060B13,	//0x0e44		VoC_sub16_dr(REG3,0x1906,REG2)
0xF4017F44,	//0x0e46		VoC_lw16i_short(FORMAT32,0x0,IN_PARALLEL)	|	VoC_lw32z(ACC0,DEFAULT)
0xD110D118,	//0x0e48		VoC_mac32inc_rp(REG2,REG0,DEFAULT)	|	VoC_mac32inc_rp(REG3,REG0,DEFAULT)
0x0924FFC0,	//0x0e4a		VoC_add32_rd(ACC0,ACC0,0x18c0)(lo)	|	VoC_NOP
0xFA3C18C0,	//0x0e4c		VoC_shr32_ri(ACC0,0x7,DEFAULT)	|	VoC_add32_rd(ACC0,ACC0,0x18c0)(hi)
0x0930FB8E,	//0x0e4e		VoC_add32_rd(REG01,RL6,0x18dc)(lo)	|	VoC_shr32_ri(RL6,0xfffffff1,DEFAULT)
0xDF4418DC,	//0x0e50		VoC_push32(ACC0,DEFAULT)	|	VoC_add32_rd(REG01,RL6,0x18dc)(hi)
0x0A732B80,	//0x0e52		VoC_jal(spx_sqrt)
0x600EDF04,	//0x0e54		VoC_movreg16(RL7_LO,REG0,DEFAULT)	|	VoC_pop32(ACC0,DEFAULT)
0xFF26E00F,	//0x0e56		VoC_movreg32(RL6,ACC0,DEFAULT)	|	VoC_lw16i_short(RL7_HI,0x0,IN_PARALLEL)
0x09FC2B80,	//0x0e58		VoC_jal(speex_div32_16)
0xDF07FBC8,	//0x0e5a		VoC_pop32(RL7,DEFAULT)	|	VoC_shr32_ri(REG01,0xfffffff9,DEFAULT)
		//0x0e5b		HYPERGEOM_GAIN_END
0xDF03DF06,	//0x0e5c		VoC_pop32(REG67,DEFAULT)	|	VoC_pop32(RL6,DEFAULT)
0xDF01DF02,	//0x0e5e		VoC_pop32(REG23,DEFAULT)	|	VoC_pop32(REG45,DEFAULT)
0xFFC0DFA9,	//0x0e60		VoC_NOP	|	VoC_pop16(RA,DEFAULT)
0xDFE9E580,	//0x0e62		VoC_push16(RA,DEFAULT)	|	VoC_return
		//0x0e63		spx_qcurve
0xDF47DF46,	//0x0e64		VoC_push32(RL7,DEFAULT)	|	VoC_push32(RL6,DEFAULT)
0x3818DF42,	//0x0e66		VoC_bgt16_rd(SPX_QCURVE_X_GT_1,REG0,0x18a4)(lo)	|	VoC_push32(REG45,DEFAULT)
0xF02018A4,	//0x0e68		VoC_lw16i_short(REG0,0x1,DEFAULT)	|	VoC_bgt16_rd(SPX_QCURVE_X_GT_1,REG0,0x18a4)(hi)
		//0x0e6a		SPX_QCURVE_X_GT_1
0x19061486,	//0x0e6a		VoC_lw32_d(RL6,0x1906)
0x3240E00E,	//0x0e6c		VoC_bnltz16_r(SPX_QCURVE_EXTEND_X,REG0)(lo)	|	VoC_movreg16(RL7_LO,REG0,DEFAULT)
0xF00F0E70,	//0x0e6e		VoC_lw16i_short(RL7_HI,0x0,DEFAULT)	|	VoC_bnltz16_r(SPX_QCURVE_EXTEND_X,REG0)(hi)
		//0x0e70		SPX_QCURVE_EXTEND_X
0x09FC2B80,	//0x0e70		VoC_jal(speex_div32_16)
0xF4797F44,	//0x0e72		VoC_lw16i_short(FORMAT32,0xf,IN_PARALLEL)	|	VoC_lw32z(ACC0,DEFAULT)
0x18EA0E00,	//0x0e74		VoC_mac32_rd(REG0,0x18ea)
0x0927FFC0,	//0x0e76		VoC_add32_rd(RL7,ACC0,0x18ce)(lo)	|	VoC_NOP
0x0ACC18CE,	//0x0e78		VoC_lw16i(RL6_LO,0xfe00)(lo)	|	VoC_add32_rd(RL7,ACC0,0x18ce)(hi)
0x0A8D7E00,	//0x0e7a		VoC_lw16i(RL6_HI,0xff)(lo)	|	VoC_lw16i(RL6_LO,0xfe00)(hi)
0x2B8000FF,	//0x0e7c		VoC_jal(speex_div32_16)(lo)	|	VoC_lw16i(RL6_HI,0xff)(hi)
0xDF0209FC,	//0x0e7e		VoC_pop32(REG45,DEFAULT)	|	VoC_jal(speex_div32_16)(hi)
0xDF06DF07,	//0x0e80		VoC_pop32(RL6,DEFAULT)	|	VoC_pop32(RL7,DEFAULT)
0xFFC0DFA9,	//0x0e82		VoC_NOP	|	VoC_pop16(RA,DEFAULT)
0xDF42E580,	//0x0e84		VoC_push32(REG45,DEFAULT)	|	VoC_return
		//0x0e85		spx_exp
0xDF46DF43,	//0x0e86		VoC_push32(RL6,DEFAULT)	|	VoC_push32(REG67,DEFAULT)
0x18F03C30,	//0x0e88		VoC_bngt16_rd(SPX_EXP_X_NGT_21290,REG0,0x18f0)
0x19181487,	//0x0e8a		VoC_lw32_d(RL7,0x1918)
0x0ECB2B00,	//0x0e8c		VoC_jump_lg(SPX_EXP_END)
		//0x0e8e		SPX_EXP_X_NGT_21290
0x191A3830,	//0x0e8e		VoC_bgt16_rd(SPX_EXP_X_NLT_NEG21290,REG0,0x191a)
0x2B00FF47,	//0x0e90		VoC_jump_lg(SPX_EXP_END)(lo)	|	VoC_lw32z(RL7,DEFAULT)
0xFFC00ECB,	//0x0e92		VoC_NAD	|	VoC_jump_lg(SPX_EXP_END)(hi)
		//0x0e94		SPX_EXP_X_NLT_NEG21290
0xF4017F44,	//0x0e94		VoC_lw16i_short(FORMAT32,0x0,IN_PARALLEL)	|	VoC_lw32z(ACC0,DEFAULT)
0x18F60E00,	//0x0e96		VoC_mac32_rd(REG0,0x18f6)
0x0924FFC0,	//0x0e98		VoC_add32_rd(ACC0,ACC0,0x18de)(lo)	|	VoC_NOP
0xFA7418DE,	//0x0e9a		VoC_shr32_ri(ACC0,0xe,DEFAULT)	|	VoC_add32_rd(ACC0,ACC0,0x18de)(hi)
0xFA5BFF23,	//0x0e9c		VoC_shr32_ri(REG67,0xb,DEFAULT)	|	VoC_movreg32(REG67,ACC0,DEFAULT)
0x18B45433,	//0x0e9e		VoC_bngt32_rd(SPX_EXP_X_NGT_14,REG67,0x18b4)
0x19181487,	//0x0ea0		VoC_lw32_d(RL7,0x1918)
0x0ECB2B00,	//0x0ea2		VoC_jump_lg(SPX_EXP_END)
		//0x0ea4		SPX_EXP_X_NGT_14
0x191C642B,	//0x0ea4		VoC_bnlt32_rd(SPX_EXP_X_NLT_NEG15,REG67,0x191c)
0x2B00FF47,	//0x0ea6		VoC_jump_lg(SPX_EXP_END)(lo)	|	VoC_lw32z(RL7,DEFAULT)
0xDF430ECB,	//0x0ea8		VoC_push32(REG67,DEFAULT)	|	VoC_jump_lg(SPX_EXP_END)(hi)
		//0x0ea9		SPX_EXP_X_NLT_NEG15
0xCB1FFBAB,	//0x0eaa		VoC_sub32_rr(RL7,ACC0,REG67,DEFAULT)	|	VoC_shr32_ri(REG67,0xfffffff5,DEFAULT)
0x7F3BFBEF,	//0x0eac		VoC_movreg32(REG67,RL7,DEFAULT)	|	VoC_shr32_ri(RL7,0xfffffffd,DEFAULT)
0x1804F471,	//0x0eae		VoC_lw16i_set_inc(REG0,0x189e,0x1)(lo)	|	VoC_lw16i_short(FORMAT32,0xe,IN_PARALLEL)
0xFF44189E,	//0x0eb0		VoC_lw32z(ACC0,DEFAULT)	|	VoC_lw16i_set_inc(REG0,0x189e,0x1)(hi)
0xFFC0D130,	//0x0eb2		VoC_NOP	|	VoC_mac32inc_rp(REG6,REG0,DEFAULT)
0x8304FF22,	//0x0eb4		VoC_add16inc_rp(REG4,REG4,REG0,DEFAULT)	|	VoC_movreg32(REG45,ACC0,DEFAULT)
0xCE34FF44,	//0x0eb6		VoC_mac32_rr(REG6,REG4,DEFAULT)	|	VoC_lw32z(ACC0,DEFAULT)
0xFF22FFC0,	//0x0eb8		VoC_movreg32(REG45,ACC0,DEFAULT)	|	VoC_NOP
0xFF448304,	//0x0eba		VoC_lw32z(ACC0,DEFAULT)	|	VoC_add16inc_rp(REG4,REG4,REG0,DEFAULT)
0xFFC0CE34,	//0x0ebc		VoC_NOP	|	VoC_mac32_rr(REG6,REG4,DEFAULT)
0x8304FF22,	//0x0ebe		VoC_add16inc_rp(REG4,REG4,REG0,DEFAULT)	|	VoC_movreg32(REG45,ACC0,DEFAULT)
0x0EC43244,	//0x0ec0		VoC_bnltz16_r(SPX_EXP_EXTEND_FRAC,REG4)
0x7FFF0AC5,	//0x0ec2		VoC_lw16i(REG5,0xffff)
		//0x0ec4		SPX_EXP_EXTEND_FRAC
0x0736DF03,	//0x0ec4		VoC_add16_rd(REG6,REG6,0x18a6)(lo)	|	VoC_pop32(REG67,DEFAULT)
0x0B3618A6,	//0x0ec6		VoC_sub16_dr(REG6,0x18a2,REG6)(lo)	|	VoC_add16_rd(REG6,REG6,0x18a6)(hi)
0xFEB218A2,	//0x0ec8		VoC_shr32_rr(REG45,REG6,DEFAULT)	|	VoC_sub16_dr(REG6,0x18a2,REG6)(hi)
0xDF06FF17,	//0x0eca		VoC_pop32(RL6,DEFAULT)	|	VoC_movreg32(RL7,REG45,DEFAULT)
		//0x0ecb		SPX_EXP_END
0xDF02DF03,	//0x0ecc		VoC_pop32(REG45,DEFAULT)	|	VoC_pop32(REG67,DEFAULT)
0xDFE9E580,	//0x0ece		VoC_push16(RA,DEFAULT)	|	VoC_return
		//0x0ecf		spx_kiss_fftri2
0x2006DFC0,	//0x0ed0		VoC_lw16d_set_inc(REG2,0xea6,0x1)(lo)	|	VoC_push16(REG0,DEFAULT)
0x18080EA6,	//0x0ed2		VoC_lw16i_set_inc(REG0,0x168e,0x2)(lo)	|	VoC_lw16d_set_inc(REG2,0xea6,0x1)(hi)
0x1404168E,	//0x0ed4		VoC_lw16_d(REG4,0x15ac)(lo)	|	VoC_lw16i_set_inc(REG0,0x168e,0x2)(hi)
0xC12515AC,	//0x0ed6		VoC_add16_rr(REG5,REG4,REG4,DEFAULT)	|	VoC_lw16_d(REG4,0x15ac)(hi)
0xC0AB4029,	//0x0ed8		VoC_add16_rr(REG3,REG2,REG5,IN_PARALLEL)	|	VoC_add16_rr(REG1,REG0,REG5,DEFAULT)
0xF3F977F3,	//0x0eda		VoC_lw16i_short(INC1,0xfffffffe,IN_PARALLEL)	|	VoC_lw16i_short(INC3,0xffffffff,DEFAULT)
0x5E18FFC0,	//0x0edc		VoC_inc_p(REG3,DEFAULT)	|	VoC_NOP
0xD8A5DE08,	//0x0ede		VoC_lw16inc_p(REG5,REG2,DEFAULT)	|	VoC_inc_p(REG1,IN_PARALLEL)
0x855F015E,	//0x0ee0		VoC_sub16_rp(REG7,REG5,REG3,IN_PARALLEL)	|	VoC_add16_rp(REG6,REG5,REG3,DEFAULT)
0xDDC3DE18,	//0x0ee2		VoC_sw32inc_p(REG67,REG0,DEFAULT)	|	VoC_inc_p(REG3,DEFAULT)
0x172E0A85,	//0x0ee4		VoC_lw16i(REG5,0x172e)
0x18A6072D,	//0x0ee6		VoC_add16_rd(REG5,REG5,0x18a6)
0xF401780C,	//0x0ee8		VoC_lw16i_short(FORMAT32,0x0,IN_PARALLEL)	|	VoC_shr16_ri(REG4,0x1,DEFAULT)
0xDF40E731,	//0x0eea		VoC_push32(REG01,DEFAULT)	|	VoC_loop_r_short(REG4,DEFAULT)
0xD8A4DFC5,	//0x0eec		VoC_lw16inc_p(REG4,REG2,DEFAULT)	|	VoC_push16(REG5,DEFAULT)
0xD8B1D8A5,	//0x0eee		VoC_lw16inc_p(REG1,REG3,DEFAULT)	|	VoC_lw16inc_p(REG5,REG2,DEFAULT)
0x4106D8B0,	//0x0ef0		VoC_add16_rr(REG6,REG4,REG0,DEFAULT)	|	VoC_lw16inc_p(REG0,REG3,DEFAULT)
0xFF1FC34F,	//0x0ef2		VoC_movreg32(RL7,REG67,DEFAULT)	|	VoC_sub16_rr(REG7,REG5,REG1,IN_PARALLEL)
0xC14F4306,	//0x0ef4		VoC_add16_rr(REG7,REG5,REG1,IN_PARALLEL)	|	VoC_sub16_rr(REG6,REG4,REG0,DEFAULT)
0xFFC0DF85,	//0x0ef6		VoC_NOP	|	VoC_pop16(REG5,DEFAULT)
0xDFC5D9A8,	//0x0ef8		VoC_push16(REG5,DEFAULT)	|	VoC_lw32_p(REG01,REG5,DEFAULT)
0xFF457F44,	//0x0efa		VoC_lw32z(ACC1,IN_PARALLEL)	|	VoC_lw32z(ACC0,DEFAULT)
0xCE384E39,	//0x0efc		VoC_mac32_rr(REG7,REG0,IN_PARALLEL)	|	VoC_mac32_rr(REG7,REG1,DEFAULT)
0x0BA4FFC0,	//0x0efe		VoC_sub32_dr(ACC0,0x18a2,ACC0)(lo)	|	VoC_NOP
0x4E3018A2,	//0x0f00		VoC_mac32_rr(REG6,REG0,DEFAULT)	|	VoC_sub32_dr(ACC0,0x18a2,ACC0)(hi)
0xFFC0CE31,	//0x0f02		VoC_NOP	|	VoC_mac32_rr(REG6,REG1,IN_PARALLEL)
0x18E60924,	//0x0f04		VoC_add32_rd(ACC0,ACC0,0x18e6)
0x18E6092D,	//0x0f06		VoC_add32_rd(ACC1,ACC1,0x18e6)
0xFA7D7A7C,	//0x0f08		VoC_shr32_ri(ACC1,0xf,IN_PARALLEL)	|	VoC_shr32_ri(ACC0,0xf,DEFAULT)
0xFF2B7F22,	//0x0f0a		VoC_movreg32(REG67,ACC1,IN_PARALLEL)	|	VoC_movreg32(REG45,ACC0,DEFAULT)
0xDF00E0C5,	//0x0f0c		VoC_pop32(REG01,DEFAULT)	|	VoC_movreg16(REG5,REG6,DEFAULT)
0xFF3B7F0E,	//0x0f0e		VoC_movreg32(REG67,RL7,IN_PARALLEL)	|	VoC_movreg32(RL6,REG23,DEFAULT)
0xC1EB41A2,	//0x0f10		VoC_add16_rr(REG3,REG7,REG5,IN_PARALLEL)	|	VoC_add16_rr(REG2,REG6,REG4,DEFAULT)
0xDDC1FFC0,	//0x0f12		VoC_sw32inc_p(REG23,REG0,DEFAULT)	|	VoC_NOP
0x43A2FFC0,	//0x0f14		VoC_sub16_rr(REG2,REG6,REG4,DEFAULT)	|	VoC_NOP
0xFFC0C37B,	//0x0f16		VoC_NOP	|	VoC_sub16_rr(REG3,REG5,REG7,IN_PARALLEL)
0xFF31DDC9,	//0x0f18		VoC_movreg32(REG23,RL6,DEFAULT)	|	VoC_sw32inc_p(REG23,REG1,DEFAULT)
0x072DDF85,	//0x0f1a		VoC_add16_rd(REG5,REG5,0x18a6)(lo)	|	VoC_pop16(REG5,DEFAULT)
		//0x0f1b		VoC_endloop0
0x200A18A6,	//0x0f1c		VoC_lw16d_set_inc(REG2,0xea7,0x2)(lo)	|	VoC_add16_rd(REG5,REG5,0x18a6)(hi)
0x180B0EA7,	//0x0f1e		VoC_lw16i_set_inc(REG3,0x168e,0x2)(lo)	|	VoC_lw16d_set_inc(REG2,0xea7,0x2)(hi)
0xF047168E,	//0x0f20		VoC_lw16i_short(REG7,0x2,DEFAULT)	|	VoC_lw16i_set_inc(REG3,0x168e,0x2)(hi)
0x15AC1804,	//0x0f22		VoC_lw16i_set_inc(REG0,0x15ac,0x1)
0x15AE1809,	//0x0f24		VoC_lw16i_set_inc(REG1,0x15ae,0x2)
0x2B80F024,	//0x0f26		VoC_jal(spx_kf_shuffle)(lo)	|	VoC_lw16i_short(REG4,0x1,DEFAULT)
0xF0260F32,	//0x0f28		VoC_lw16i_short(REG6,0x1,DEFAULT)	|	VoC_jal(spx_kf_shuffle)(hi)
0xF02FF02E,	//0x0f2a		VoC_lw16i_short(RL7_HI,0x1,DEFAULT)	|	VoC_lw16i_short(RL7_LO,0x1,DEFAULT)
0x14242B80,	//0x0f2c		VoC_jal(spx_kf_work)
0xDFA9DF80,	//0x0f2e		VoC_pop16(RA,DEFAULT)	|	VoC_pop16(REG0,DEFAULT)
0xE580FFC0,	//0x0f30		VoC_return	|	VoC_NOP
		//0x0f32		spx_kf_shuffle
0xDF40DFE9,	//0x0f32		VoC_push32(REG01,DEFAULT)	|	VoC_push16(RA,DEFAULT)
0xDF42DF41,	//0x0f34		VoC_push32(REG45,DEFAULT)	|	VoC_push32(REG23,DEFAULT)
0xC5E7DF43,	//0x0f36		VoC_mult16_rr(REG7,REG7,REG4,DEFAULT)	|	VoC_push32(REG67,DEFAULT)
0xF8FDD9CA,	//0x0f38		VoC_shr16_ri(REG5,0xffffffff,DEFAULT)	|	VoC_lw32inc_p(REG45,REG1,DEFAULT)
0x18A644B5,	//0x0f3a		VoC_bne16_rd(SPX_KF_SHUFFLE_IF,REG5,0x18a6)
0xFFC07006,	//0x0f3c		VoC_NAD(IN_PARALLEL)	|	VoC_lw16i_short(REG6,0x0,DEFAULT)
		//0x0f3e		SPX_KF_SHUFFLE_FOR1_BEGIN
0x0F473534,	//0x0f3e		VoC_be16_rr(SPX_KF_SHUFFLE_FOR1_END,REG6,REG4)
0xFFC0D99F,	//0x0f40		VoC_NOP	|	VoC_lw32_p(RL7,REG3,DEFAULT)
0xC0FB5DD7,	//0x0f42		VoC_add16_rr(REG3,REG3,REG7,IN_PARALLEL)	|	VoC_sw32inc_p(RL7,REG2,DEFAULT)
0x18A40736,	//0x0f44		VoC_add16_rd(REG6,REG6,0x18a4)
0xE5CDE5F8,	//0x0f46		VoC_jump(SPX_KF_SHUFFLE_END)	|	VoC_jump(SPX_KF_SHUFFLE_FOR1_BEGIN)
		//0x0f47		SPX_KF_SHUFFLE_FOR1_END
		//0x0f48		SPX_KF_SHUFFLE_IF
0xFFC07006,	//0x0f48		VoC_NAD(IN_PARALLEL)	|	VoC_lw16i_short(REG6,0x0,DEFAULT)
		//0x0f4a		SPX_KF_SHUFFLE_FOR2_BEGIN
0x0F543534,	//0x0f4a		VoC_be16_rr(SPX_KF_SHUFFLE_FOR2_END,REG6,REG4)
0x0F322B80,	//0x0f4c		VoC_jal(spx_kf_shuffle)
0xC0AA40FB,	//0x0f4e		VoC_add16_rr(REG2,REG2,REG5,IN_PARALLEL)	|	VoC_add16_rr(REG3,REG3,REG7,DEFAULT)
0x18A40736,	//0x0f50		VoC_add16_rd(REG6,REG6,0x18a4)
0xE5F7FFC0,	//0x0f52		VoC_jump(SPX_KF_SHUFFLE_FOR2_BEGIN)	|	VoC_NOP
		//0x0f54		SPX_KF_SHUFFLE_FOR2_END
		//0x0f54		SPX_KF_SHUFFLE_END
0xDF02DF03,	//0x0f54		VoC_pop32(REG45,DEFAULT)	|	VoC_pop32(REG67,DEFAULT)
0xDF00DF01,	//0x0f56		VoC_pop32(REG01,DEFAULT)	|	VoC_pop32(REG23,DEFAULT)
0xFFC0DFA9,	//0x0f58		VoC_NOP	|	VoC_pop16(RA,DEFAULT)
0xDFE9E580,	//0x0f5a		VoC_push16(RA,DEFAULT)	|	VoC_return
		//0x0f5b		spx_kf_bfly2
0xDF41DF40,	//0x0f5c		VoC_push32(REG23,DEFAULT)	|	VoC_push32(REG01,DEFAULT)
0xDF43DF42,	//0x0f5e		VoC_push32(REG67,DEFAULT)	|	VoC_push32(REG45,DEFAULT)
0xDF47DF46,	//0x0f60		VoC_push32(RL7,DEFAULT)	|	VoC_push32(RL6,DEFAULT)
0x0A83E1E4,	//0x0f62		VoC_lw16i(REG3,0x1)(lo)	|	VoC_movreg16(REG4,RL7_HI,DEFAULT)
0xC0190001,	//0x0f64		VoC_add16_rr(REG1,REG0,REG3,DEFAULT)	|	VoC_lw16i(REG3,0x1)(hi)
0x5811FFC0,	//0x0f66		VoC_lw16_p(REG1,REG1,DEFAULT)	|	VoC_NOP
0x7031F008,	//0x0f68		VoC_lw16i_short(INC1,0x1,DEFAULT)	|	VoC_lw16i_short(INC0,0x2,IN_PARALLEL)
0x31C1F006,	//0x0f6a		VoC_bnez16_r(SPX_KF_BFLY2_IF,REG1)(lo)	|	VoC_lw16i_short(INC2,0x1,IN_PARALLEL)
0x2E310FB6,	//0x0f6c		VoC_loop_r(1,REG6)(lo)	|	VoC_bnez16_r(SPX_KF_BFLY2_IF,REG1)(hi)
0xDFC00FB2,	//0x0f6e		VoC_push16(REG0,DEFAULT)	|	VoC_loop_r(1,REG6)(hi)
0xC0A9DFC2,	//0x0f70		VoC_add16_rr(REG1,REG2,REG5,DEFAULT)	|	VoC_push16(REG2,DEFAULT)
0x0A83C069,	//0x0f72		VoC_lw16i(REG3,0x42)(lo)	|	VoC_add16_rr(REG1,REG1,REG5,DEFAULT)
0x40180042,	//0x0f74		VoC_add16_rr(REG0,REG0,REG3,DEFAULT)	|	VoC_lw16i(REG3,0x42)(hi)
0x2E28DF42,	//0x0f76		VoC_loop_r(0,REG5)(lo)	|	VoC_push32(REG45,IN_PARALLEL)
0xDF430FAD,	//0x0f78		VoC_push32(REG67,DEFAULT)	|	VoC_loop_r(0,REG5)(hi)
0xFF457F44,	//0x0f7a		VoC_lw32z(ACC1,IN_PARALLEL)	|	VoC_lw32z(ACC0,DEFAULT)
0xD983D98A,	//0x0f7c		VoC_lw32_p(REG67,REG0,DEFAULT)	|	VoC_lw32_p(REG45,REG1,DEFAULT)
0xCE274E2F,	//0x0f7e		VoC_mac32_rr(REG4,REG7,IN_PARALLEL)	|	VoC_mac32_rr(REG5,REG7,DEFAULT)
0x0BA4FFC0,	//0x0f80		VoC_sub32_dr(ACC0,0x18a2,ACC0)(lo)	|	VoC_NOP
0x4E2618A2,	//0x0f82		VoC_mac32_rr(REG4,REG6,DEFAULT)	|	VoC_sub32_dr(ACC0,0x18a2,ACC0)(hi)
0xFFC0CE2E,	//0x0f84		VoC_NOP	|	VoC_mac32_rr(REG5,REG6,IN_PARALLEL)
0xFA0D7A0C,	//0x0f86		VoC_shr32_ri(ACC1,0x1,IN_PARALLEL)	|	VoC_shr32_ri(ACC0,0x1,DEFAULT)
0xD826F007,	//0x0f88		VoC_lw16_p(REG6,REG2,DEFAULT)	|	VoC_lw16i_short(REG7,0x0,DEFAULT)
0x0F8E3246,	//0x0f8a		VoC_bnltz16_r(SPX_KF_BFLY2_EXTEND32,REG6)
0x7FFF0AC7,	//0x0f8c		VoC_lw16i(REG7,0xffff)
		//0x0f8e		SPX_KF_BFLY2_EXTEND32
0x4AE7FB93,	//0x0f8e		VoC_sub32_rr(RL7,REG67,ACC0,DEFAULT)	|	VoC_shr32_ri(REG67,0xfffffff2,DEFAULT)
0x0936C8E6,	//0x0f90		VoC_add32_rd(RL6,RL6,0x18e6)(lo)	|	VoC_add32_rr(RL6,REG67,ACC0,IN_PARALLEL)
0x093F18E6,	//0x0f92		VoC_add32_rd(RL7,RL7,0x18e6)(lo)	|	VoC_add32_rd(RL6,RL6,0x18e6)(hi)
0x7A7E18E6,	//0x0f94		VoC_shr32_ri(RL6,0xf,DEFAULT)	|	VoC_add32_rd(RL7,RL7,0x18e6)(hi)
0xFFC0FA7F,	//0x0f96		VoC_NOP	|	VoC_shr32_ri(RL7,0xf,IN_PARALLEL)
0xDC9EDCAC,	//0x0f98		VoC_sw16inc_p(RL7_LO,REG1,DEFAULT)	|	VoC_sw16inc_p(RL6_LO,REG2,DEFAULT)
0xF007D826,	//0x0f9a		VoC_lw16i_short(REG7,0x0,DEFAULT)	|	VoC_lw16_p(REG6,REG2,DEFAULT)
0x0FA03246,	//0x0f9c		VoC_bnltz16_r(SPX_KF_BFLY2_EXTEND32_2,REG6)
0x7FFF0AC7,	//0x0f9e		VoC_lw16i(REG7,0xffff)
		//0x0fa0		SPX_KF_BFLY2_EXTEND32_2
0xCAEFFB93,	//0x0fa0		VoC_sub32_rr(RL7,REG67,ACC1,DEFAULT)	|	VoC_shr32_ri(REG67,0xfffffff2,DEFAULT)
0x0936C8EE,	//0x0fa2		VoC_add32_rd(RL6,RL6,0x18e6)(lo)	|	VoC_add32_rr(RL6,REG67,ACC1,DEFAULT)
0x093F18E6,	//0x0fa4		VoC_add32_rd(RL7,RL7,0x18e6)(lo)	|	VoC_add32_rd(RL6,RL6,0x18e6)(hi)
0x7A7E18E6,	//0x0fa6		VoC_shr32_ri(RL6,0xf,DEFAULT)	|	VoC_add32_rd(RL7,RL7,0x18e6)(hi)
0xFFC0FA7F,	//0x0fa8		VoC_NOP	|	VoC_shr32_ri(RL7,0xf,IN_PARALLEL)
0xDC9EDCAC,	//0x0faa		VoC_sw16inc_p(RL7_LO,REG1,DEFAULT)	|	VoC_sw16inc_p(RL6_LO,REG2,DEFAULT)
0xC038DF03,	//0x0fac		VoC_add16_rr(REG0,REG0,REG7,DEFAULT)	|	VoC_pop32(REG67,DEFAULT)
		//0x0fad		VoC_endloop0
0xDF82DF02,	//0x0fae		VoC_pop16(REG2,DEFAULT)	|	VoC_pop32(REG45,DEFAULT)
0xC0A2DF80,	//0x0fb0		VoC_add16_rr(REG2,REG2,REG4,DEFAULT)	|	VoC_pop16(REG0,DEFAULT)
		//0x0fb2		VoC_endloop1
0x2B00C0A2,	//0x0fb2		VoC_jump_lg(SPX_KF_BFLY2_END)(lo)	|	VoC_add16_rr(REG2,REG2,REG4,DEFAULT)
0xFFC00FEE,	//0x0fb4		VoC_NAD	|	VoC_jump_lg(SPX_KF_BFLY2_END)(hi)
		//0x0fb6		SPX_KF_BFLY2_IF
0xF00A7051,	//0x0fb6		VoC_lw16i_short(INC2,0x2,IN_PARALLEL)	|	VoC_lw16i_short(INC1,0x2,DEFAULT)
0x0FED2E31,	//0x0fb8		VoC_loop_r(1,REG6)
0xDFC2DFC0,	//0x0fba		VoC_push16(REG2,DEFAULT)	|	VoC_push16(REG0,DEFAULT)
0xC069C0A9,	//0x0fbc		VoC_add16_rr(REG1,REG1,REG5,DEFAULT)	|	VoC_add16_rr(REG1,REG2,REG5,DEFAULT)
0x00420A83,	//0x0fbe		VoC_lw16i(REG3,0x42)
0xDF424018,	//0x0fc0		VoC_push32(REG45,IN_PARALLEL)	|	VoC_add16_rr(REG0,REG0,REG3,DEFAULT)
0x0FE82E28,	//0x0fc2		VoC_loop_r(0,REG5)
0x7F44DF43,	//0x0fc4		VoC_lw32z(ACC0,DEFAULT)	|	VoC_push32(REG67,DEFAULT)
0xD98AFF45,	//0x0fc6		VoC_lw32_p(REG45,REG1,DEFAULT)	|	VoC_lw32z(ACC1,IN_PARALLEL)
0x4E2FD983,	//0x0fc8		VoC_mac32_rr(REG5,REG7,DEFAULT)	|	VoC_lw32_p(REG67,REG0,DEFAULT)
0xFFC0CE27,	//0x0fca		VoC_NOP	|	VoC_mac32_rr(REG4,REG7,IN_PARALLEL)
0x18A20BA4,	//0x0fcc		VoC_sub32_dr(ACC0,0x18a2,ACC0)
0xCE2E4E26,	//0x0fce		VoC_mac32_rr(REG5,REG6,IN_PARALLEL)	|	VoC_mac32_rr(REG4,REG6,DEFAULT)
0x0924FFC0,	//0x0fd0		VoC_add32_rd(ACC0,ACC0,0x18e6)(lo)	|	VoC_NOP
0x092D18E6,	//0x0fd2		VoC_add32_rd(ACC1,ACC1,0x18e6)(lo)	|	VoC_add32_rd(ACC0,ACC0,0x18e6)(hi)
0x7A7C18E6,	//0x0fd4		VoC_shr32_ri(ACC0,0xf,DEFAULT)	|	VoC_add32_rd(ACC1,ACC1,0x18e6)(hi)
0x7F26FA7D,	//0x0fd6		VoC_movreg32(RL6,ACC0,DEFAULT)	|	VoC_shr32_ri(ACC1,0xf,IN_PARALLEL)
0x6186FF2F,	//0x0fd8		VoC_movreg16(REG6,RL6_LO,DEFAULT)	|	VoC_movreg32(RL7,ACC1,IN_PARALLEL)
0xDF40F7C7,	//0x0fda		VoC_push32(REG01,DEFAULT)	|	VoC_movreg16(REG7,RL7_LO,IN_PARALLEL)
0x4330D992,	//0x0fdc		VoC_sub16_rr(REG0,REG4,REG6,DEFAULT)	|	VoC_lw32_p(REG45,REG2,DEFAULT)
0xFF07C379,	//0x0fde		VoC_movreg32(RL7,REG01,DEFAULT)	|	VoC_sub16_rr(REG1,REG5,REG7,IN_PARALLEL)
0xFFC0DF00,	//0x0fe0		VoC_NOP	|	VoC_pop32(REG01,DEFAULT)
0x4134DDCF,	//0x0fe2		VoC_add16_rr(REG4,REG4,REG6,DEFAULT)	|	VoC_sw32inc_p(RL7,REG1,DEFAULT)
0xFFC0C17D,	//0x0fe4		VoC_NOP	|	VoC_add16_rr(REG5,REG5,REG7,IN_PARALLEL)
0xDF03DDD2,	//0x0fe6		VoC_pop32(REG67,DEFAULT)	|	VoC_sw32inc_p(REG45,REG2,DEFAULT)
		//0x0fe8		VoC_endloop0
0xDF02C038,	//0x0fe8		VoC_pop32(REG45,DEFAULT)	|	VoC_add16_rr(REG0,REG0,REG7,DEFAULT)
0xDF80DF82,	//0x0fea		VoC_pop16(REG0,DEFAULT)	|	VoC_pop16(REG2,DEFAULT)
0xC0A2C0A2,	//0x0fec		VoC_add16_rr(REG2,REG2,REG4,DEFAULT)	|	VoC_add16_rr(REG2,REG2,REG4,DEFAULT)
		//0x0fed		VoC_endloop1
		//0x0fee		SPX_KF_BFLY2_END
0xDF06DF07,	//0x0fee		VoC_pop32(RL6,DEFAULT)	|	VoC_pop32(RL7,DEFAULT)
0xDF02DF03,	//0x0ff0		VoC_pop32(REG45,DEFAULT)	|	VoC_pop32(REG67,DEFAULT)
0xDF00DF01,	//0x0ff2		VoC_pop32(REG01,DEFAULT)	|	VoC_pop32(REG23,DEFAULT)
0xFFC0DFA9,	//0x0ff4		VoC_NOP	|	VoC_pop16(RA,DEFAULT)
0xDFE9E580,	//0x0ff6		VoC_push16(RA,DEFAULT)	|	VoC_return
		//0x0ff7		spx_kf_bfly3
0xDF41DF40,	//0x0ff8		VoC_push32(REG23,DEFAULT)	|	VoC_push32(REG01,DEFAULT)
0xDF43DF42,	//0x0ffa		VoC_push32(REG67,DEFAULT)	|	VoC_push32(REG45,DEFAULT)
0xDF47DF46,	//0x0ffc		VoC_push32(RL7,DEFAULT)	|	VoC_push32(RL6,DEFAULT)
0x10FD1405,	//0x0ffe		VoC_lw16_d(REG5,0x10fd)
0x10FC082C,	//0x1000		VoC_mult16_rd(REG4,REG5,0x10fc)
0x00420A83,	//0x1002		VoC_lw16i(REG3,0x42)
0xC11CC01B,	//0x1004		VoC_add16_rr(REG4,REG4,REG3,DEFAULT)	|	VoC_add16_rr(REG3,REG0,REG3,DEFAULT)
0xD9A3FFC0,	//0x1006		VoC_lw32_p(REG67,REG4,DEFAULT)	|	VoC_NOP
0x1583FFC0,	//0x1008		VoC_sw32_d(REG67,0x10dc)(lo)	|	VoC_NOP
0xE0A410DC,	//0x100a		VoC_movreg16(REG4,REG5,DEFAULT)	|	VoC_sw32_d(REG67,0x10dc)(hi)
0x1504F8FC,	//0x100c		VoC_sw16_d(REG4,0x10fd)(lo)	|	VoC_shr16_ri(REG4,0xffffffff,DEFAULT)
0x2E2910FD,	//0x100e		VoC_loop_r(1,REG5)(lo)	|	VoC_sw16_d(REG4,0x10fd)(hi)
0xDFC710B9,	//0x1010		VoC_push16(REG7,DEFAULT)	|	VoC_loop_r(1,REG5)(hi)
0x00010A87,	//0x1012		VoC_lw16i(REG7,0x1)
0xD877C1C7,	//0x1014		VoC_lw16_p(REG7,REG7,DEFAULT)	|	VoC_add16_rr(REG7,REG7,REG0,DEFAULT)
0xFFC0F006,	//0x1016		VoC_NOP	|	VoC_lw16i_short(REG6,0x0,DEFAULT)
0x11001506,	//0x1018		VoC_sw16_d(REG6,0x1100)
0x103331C7,	//0x101a		VoC_bnez16_r(SPX_KF_BFLY3_IF,REG7)
0xE8D4F019,	//0x101c		VoC_loop_i_short(0x6,DEFAULT)	|	VoC_lw16i_short(FORMAT32,0x0,DEFAULT)
0x0A87D992,	//0x101e		VoC_lw16i(REG7,0x2aaa)(lo)	|	VoC_lw32_p(REG45,REG2,DEFAULT)
0x7F442AAA,	//0x1020		VoC_lw32z(ACC0,DEFAULT)	|	VoC_lw16i(REG7,0x2aaa)(hi)
0x4E27FF45,	//0x1022		VoC_mac32_rr(REG4,REG7,DEFAULT)	|	VoC_lw32z(ACC1,IN_PARALLEL)
0xFFC0CE2F,	//0x1024		VoC_NOP	|	VoC_mac32_rr(REG5,REG7,IN_PARALLEL)
0xFF2F7F26,	//0x1026		VoC_movreg32(RL7,ACC1,IN_PARALLEL)	|	VoC_movreg32(RL6,ACC0,DEFAULT)
0x18E60936,	//0x1028		VoC_add32_rd(RL6,RL6,0x18e6)
0x18E6093F,	//0x102a		VoC_add32_rd(RL7,RL7,0x18e6)
0xFA7F7A7E,	//0x102c		VoC_shr32_ri(RL7,0xf,IN_PARALLEL)	|	VoC_shr32_ri(RL6,0xf,DEFAULT)
0xF7C56184,	//0x102e		VoC_movreg16(REG5,RL7_LO,IN_PARALLEL)	|	VoC_movreg16(REG4,RL6_LO,DEFAULT)
0x0712DD92,	//0x1030		VoC_add16_rd(REG2,REG2,0x10fd)(lo)	|	VoC_sw32_p(REG45,REG2,DEFAULT)
		//0x1031		VoC_endloop0
0xDFC210FD,	//0x1032		VoC_push16(REG2,DEFAULT)	|	VoC_add16_rd(REG2,REG2,0x10fd)(hi)
		//0x1033		SPX_KF_BFLY3_IF
0x10FD0716,	//0x1034		VoC_add16_rd(REG6,REG2,0x10fd)
0x1100071F,	//0x1036		VoC_add16_rd(REG7,REG3,0x1100)
0xD9BAD9B0,	//0x1038		VoC_lw32_p(REG45,REG7,DEFAULT)	|	VoC_lw32_p(REG01,REG6,DEFAULT)
0xFF457F44,	//0x103a		VoC_lw32z(ACC1,IN_PARALLEL)	|	VoC_lw32z(ACC0,DEFAULT)
0xCE054E0D,	//0x103c		VoC_mac32_rr(REG0,REG5,IN_PARALLEL)	|	VoC_mac32_rr(REG1,REG5,DEFAULT)
0x0BA4FFC0,	//0x103e		VoC_sub32_dr(ACC0,0x18a2,ACC0)(lo)	|	VoC_NOP
0x4E0418A2,	//0x1040		VoC_mac32_rr(REG0,REG4,DEFAULT)	|	VoC_sub32_dr(ACC0,0x18a2,ACC0)(hi)
0xFFC0CE0C,	//0x1042		VoC_NOP	|	VoC_mac32_rr(REG1,REG4,IN_PARALLEL)
0x18E60924,	//0x1044		VoC_add32_rd(ACC0,ACC0,0x18e6)
0x18E6092D,	//0x1046		VoC_add32_rd(ACC1,ACC1,0x18e6)
0xFA7D7A7C,	//0x1048		VoC_shr32_ri(ACC1,0xf,IN_PARALLEL)	|	VoC_shr32_ri(ACC0,0xf,DEFAULT)
0xFF2F7F26,	//0x104a		VoC_movreg32(RL7,ACC1,IN_PARALLEL)	|	VoC_movreg32(RL6,ACC0,DEFAULT)
0xF7C16180,	//0x104c		VoC_movreg16(REG1,RL7_LO,IN_PARALLEL)	|	VoC_movreg16(REG0,RL6_LO,DEFAULT)
0x1580FFC0,	//0x104e		VoC_sw32_d(REG01,0x10e0)(lo)	|	VoC_NOP
0x073610E0,	//0x1050		VoC_add16_rd(REG6,REG6,0x10fd)(lo)	|	VoC_sw32_d(REG01,0x10e0)(hi)
0x073F10FD,	//0x1052		VoC_add16_rd(REG7,REG7,0x1100)(lo)	|	VoC_add16_rd(REG6,REG6,0x10fd)(hi)
0xD9B01100,	//0x1054		VoC_lw32_p(REG01,REG6,DEFAULT)	|	VoC_add16_rd(REG7,REG7,0x1100)(hi)
0x4E0DD9BA,	//0x1056		VoC_mac32_rr(REG1,REG5,DEFAULT)	|	VoC_lw32_p(REG45,REG7,DEFAULT)
0xFFC0CE05,	//0x1058		VoC_NOP	|	VoC_mac32_rr(REG0,REG5,IN_PARALLEL)
0x18A20BA4,	//0x105a		VoC_sub32_dr(ACC0,0x18a2,ACC0)
0xCE0C4E04,	//0x105c		VoC_mac32_rr(REG1,REG4,IN_PARALLEL)	|	VoC_mac32_rr(REG0,REG4,DEFAULT)
0x0924FFC0,	//0x105e		VoC_add32_rd(ACC0,ACC0,0x18e6)(lo)	|	VoC_NOP
0x092D18E6,	//0x1060		VoC_add32_rd(ACC1,ACC1,0x18e6)(lo)	|	VoC_add32_rd(ACC0,ACC0,0x18e6)(hi)
0x7A7C18E6,	//0x1062		VoC_shr32_ri(ACC0,0xf,DEFAULT)	|	VoC_add32_rd(ACC1,ACC1,0x18e6)(hi)
0x7F26FA7D,	//0x1064		VoC_movreg32(RL6,ACC0,DEFAULT)	|	VoC_shr32_ri(ACC1,0xf,IN_PARALLEL)
0x6180FF2F,	//0x1066		VoC_movreg16(REG0,RL6_LO,DEFAULT)	|	VoC_movreg32(RL7,ACC1,IN_PARALLEL)
0xFFC0F7C1,	//0x1068		VoC_NOP	|	VoC_movreg16(REG1,RL7_LO,IN_PARALLEL)
0x10E21580,	//0x106a		VoC_sw32_d(REG01,0x10e2)
0x10E00B06,	//0x106c		VoC_sub16_dr(REG6,0x10e0,REG0)
0x10E10B0F,	//0x106e		VoC_sub16_dr(REG7,0x10e1,REG1)
0x1583FFC0,	//0x1070		VoC_sw32_d(REG67,0x10de)(lo)	|	VoC_NOP
0x070010DE,	//0x1072		VoC_add16_rd(REG0,REG0,0x10e0)(lo)	|	VoC_sw32_d(REG67,0x10de)(hi)
0x070910E0,	//0x1074		VoC_add16_rd(REG1,REG1,0x10e1)(lo)	|	VoC_add16_rd(REG0,REG0,0x10e0)(hi)
0xFFC010E1,	//0x1076		VoC_NOP	|	VoC_add16_rd(REG1,REG1,0x10e1)(hi)
0x10E41580,	//0x1078		VoC_sw32_d(REG01,0x10e4)
0x5993DF82,	//0x107a		VoC_lw32_p(REG67,REG2,DEFAULT)	|	VoC_pop16(REG2,DEFAULT)
0x7808DFC2,	//0x107c		VoC_shr16_ri(REG0,0x1,DEFAULT)	|	VoC_push16(REG2,IN_PARALLEL)
0x4380F809,	//0x107e		VoC_sub16_rr(REG0,REG6,REG0,DEFAULT)	|	VoC_shr16_ri(REG1,0x1,IN_PARALLEL)
0x0712C3C9,	//0x1080		VoC_add16_rd(REG2,REG2,0x10fd)(lo)	|	VoC_sub16_rr(REG1,REG7,REG1,IN_PARALLEL)
0xFFC010FD,	//0x1082		VoC_NOP	|	VoC_add16_rd(REG2,REG2,0x10fd)(hi)
0xDF82DD90,	//0x1084		VoC_pop16(REG2,DEFAULT)	|	VoC_sw32_p(REG01,REG2,DEFAULT)
0x10E40736,	//0x1086		VoC_add16_rd(REG6,REG6,0x10e4)
0x10E5073F,	//0x1088		VoC_add16_rd(REG7,REG7,0x10e5)
0xDD93DFC2,	//0x108a		VoC_sw32_p(REG67,REG2,DEFAULT)	|	VoC_push16(REG2,DEFAULT)
0x10DE1480,	//0x108c		VoC_lw32_d(REG01,0x10de)
0x10DC1483,	//0x108e		VoC_lw32_d(REG67,0x10dc)
0xFF457F44,	//0x1090		VoC_lw32z(ACC1,IN_PARALLEL)	|	VoC_lw32z(ACC0,DEFAULT)
0xCE0F4E07,	//0x1092		VoC_mac32_rr(REG1,REG7,IN_PARALLEL)	|	VoC_mac32_rr(REG0,REG7,DEFAULT)
0x0924FFC0,	//0x1094		VoC_add32_rd(ACC0,ACC0,0x18e6)(lo)	|	VoC_NOP
0x092D18E6,	//0x1096		VoC_add32_rd(ACC1,ACC1,0x18e6)(lo)	|	VoC_add32_rd(ACC0,ACC0,0x18e6)(hi)
0x7A7C18E6,	//0x1098		VoC_shr32_ri(ACC0,0xf,DEFAULT)	|	VoC_add32_rd(ACC1,ACC1,0x18e6)(hi)
0x7F26FA7D,	//0x109a		VoC_movreg32(RL6,ACC0,DEFAULT)	|	VoC_shr32_ri(ACC1,0xf,IN_PARALLEL)
0x6186FF2F,	//0x109c		VoC_movreg16(REG6,RL6_LO,DEFAULT)	|	VoC_movreg32(RL7,ACC1,IN_PARALLEL)
0xFFC0F7C7,	//0x109e		VoC_NOP	|	VoC_movreg16(REG7,RL7_LO,IN_PARALLEL)
0x10DE1583,	//0x10a0		VoC_sw32_d(REG67,0x10de)
0xDFC2DF82,	//0x10a2		VoC_push16(REG2,DEFAULT)	|	VoC_pop16(REG2,DEFAULT)
0x10FD0712,	//0x10a4		VoC_add16_rd(REG2,REG2,0x10fd)
0x4032D990,	//0x10a6		VoC_add16_rr(REG2,REG0,REG6,DEFAULT)	|	VoC_lw32_p(REG01,REG2,DEFAULT)
0x4236C27B,	//0x10a8		VoC_sub16_rr(REG6,REG0,REG6,DEFAULT)	|	VoC_sub16_rr(REG3,REG1,REG7,IN_PARALLEL)
0xFFC0C07F,	//0x10aa		VoC_NOP	|	VoC_add16_rr(REG7,REG1,REG7,IN_PARALLEL)
0x0712DD93,	//0x10ac		VoC_add16_rd(REG2,REG2,0x10fd)(lo)	|	VoC_sw32_p(REG67,REG2,DEFAULT)
0xFFC010FD,	//0x10ae		VoC_NOP	|	VoC_add16_rd(REG2,REG2,0x10fd)(hi)
0xDF82DD91,	//0x10b0		VoC_pop16(REG2,DEFAULT)	|	VoC_sw32_p(REG23,REG2,DEFAULT)
0xFFC0DF87,	//0x10b2		VoC_NOP	|	VoC_pop16(REG7,DEFAULT)
0x10FC073F,	//0x10b4		VoC_add16_rd(REG7,REG7,0x10fc)
0x1507FFC0,	//0x10b6		VoC_sw16_d(REG7,0x1100)(lo)	|	VoC_NOP
0xFFC01100,	//0x10b8		VoC_NOP	|	VoC_sw16_d(REG7,0x1100)(hi)
		//0x10b9		VoC_endloop1
0xDF06DF07,	//0x10ba		VoC_pop32(RL6,DEFAULT)	|	VoC_pop32(RL7,DEFAULT)
0xDF02DF03,	//0x10bc		VoC_pop32(REG45,DEFAULT)	|	VoC_pop32(REG67,DEFAULT)
0xDF00DF01,	//0x10be		VoC_pop32(REG01,DEFAULT)	|	VoC_pop32(REG23,DEFAULT)
0xFFC0DFA9,	//0x10c0		VoC_NOP	|	VoC_pop16(RA,DEFAULT)
0xDFE9E580,	//0x10c2		VoC_push16(RA,DEFAULT)	|	VoC_return
		//0x10c3		spx_kf_bfly4
0xDF41DF40,	//0x10c4		VoC_push32(REG23,DEFAULT)	|	VoC_push32(REG01,DEFAULT)
0xDF43DF42,	//0x10c6		VoC_push32(REG67,DEFAULT)	|	VoC_push32(REG45,DEFAULT)
0xDF47DF46,	//0x10c8		VoC_push32(RL7,DEFAULT)	|	VoC_push32(RL6,DEFAULT)
0x10FF1405,	//0x10ca		VoC_lw16_d(REG5,0x10ff)
0xFFC0F8FD,	//0x10cc		VoC_NOP	|	VoC_shr16_ri(REG5,0xffffffff,DEFAULT)
0x10FF1505,	//0x10ce		VoC_sw16_d(REG5,0x10ff)
0x10FE1406,	//0x10d0		VoC_lw16_d(REG6,0x10fe)
0x10FD1407,	//0x10d2		VoC_lw16_d(REG7,0x10fd)
0xF8FDE0E5,	//0x10d4		VoC_shr16_ri(REG5,0xffffffff,DEFAULT)	|	VoC_movreg16(REG5,REG7,DEFAULT)
0x1505FFC0,	//0x10d6		VoC_sw16_d(REG5,0x10fd)(lo)	|	VoC_NOP
0x0A8510FD,	//0x10d8		VoC_lw16i(REG5,0x1)(lo)	|	VoC_sw16_d(REG5,0x10fd)(hi)
0xC02D0001,	//0x10da		VoC_add16_rr(REG5,REG0,REG5,DEFAULT)	|	VoC_lw16i(REG5,0x1)(hi)
0xD855FFC0,	//0x10dc		VoC_lw16_p(REG5,REG5,DEFAULT)	|	VoC_NOP
0x3185F019,	//0x10de		VoC_bez16_r(SPX_KF_BFLY4_IF,REG5)(lo)	|	VoC_lw16i_short(FORMAT32,0x0,DEFAULT)
0x2E3111AE,	//0x10e0		VoC_loop_r(1,REG6)(lo)	|	VoC_bez16_r(SPX_KF_BFLY4_IF,REG5)(hi)
0xDFC011AA,	//0x10e2		VoC_push16(REG0,DEFAULT)	|	VoC_loop_r(1,REG6)(hi)
0x0A83DFC2,	//0x10e4		VoC_lw16i(REG3,0x42)(lo)	|	VoC_push16(REG2,DEFAULT)
0xC01B0042,	//0x10e6		VoC_add16_rr(REG3,REG0,REG3,DEFAULT)	|	VoC_lw16i(REG3,0x42)(hi)
0x10FD1407,	//0x10e8		VoC_lw16_d(REG7,0x10fd)
0xF006F80F,	//0x10ea		VoC_lw16i_short(REG6,0x0,DEFAULT)	|	VoC_shr16_ri(REG7,0x1,DEFAULT)
0x1506FFC0,	//0x10ec		VoC_sw16_d(REG6,0x1100)(lo)	|	VoC_NOP
0x2E381100,	//0x10ee		VoC_loop_r(0,REG7)(lo)	|	VoC_sw16_d(REG6,0x1100)(hi)
0xDFC311A6,	//0x10f0		VoC_push16(REG3,DEFAULT)	|	VoC_loop_r(0,REG7)(hi)
0x0716DFC2,	//0x10f2		VoC_add16_rd(REG6,REG2,0x10fd)(lo)	|	VoC_push16(REG2,DEFAULT)
0x071F10FD,	//0x10f4		VoC_add16_rd(REG7,REG3,0x1100)(lo)	|	VoC_add16_rd(REG6,REG2,0x10fd)(hi)
0xFFC01100,	//0x10f6		VoC_NOP	|	VoC_add16_rd(REG7,REG3,0x1100)(hi)
0xD9BAD9B0,	//0x10f8		VoC_lw32_p(REG45,REG7,DEFAULT)	|	VoC_lw32_p(REG01,REG6,DEFAULT)
0xFF457F44,	//0x10fa		VoC_lw32z(ACC1,IN_PARALLEL)	|	VoC_lw32z(ACC0,DEFAULT)
0xCE054E0D,	//0x10fc		VoC_mac32_rr(REG0,REG5,IN_PARALLEL)	|	VoC_mac32_rr(REG1,REG5,DEFAULT)
0x0BA4FFC0,	//0x10fe		VoC_sub32_dr(ACC0,0x18a2,ACC0)(lo)	|	VoC_NOP
0x4E0418A2,	//0x1100		VoC_mac32_rr(REG0,REG4,DEFAULT)	|	VoC_sub32_dr(ACC0,0x18a2,ACC0)(hi)
0xFFC0CE0C,	//0x1102		VoC_NOP	|	VoC_mac32_rr(REG1,REG4,IN_PARALLEL)
0x18E60924,	//0x1104		VoC_add32_rd(ACC0,ACC0,0x18e6)
0x18E6092D,	//0x1106		VoC_add32_rd(ACC1,ACC1,0x18e6)
0xFA7D7A7C,	//0x1108		VoC_shr32_ri(ACC1,0xf,IN_PARALLEL)	|	VoC_shr32_ri(ACC0,0xf,DEFAULT)
0xFF2F7F26,	//0x110a		VoC_movreg32(RL7,ACC1,IN_PARALLEL)	|	VoC_movreg32(RL6,ACC0,DEFAULT)
0xF7C16180,	//0x110c		VoC_movreg16(REG1,RL7_LO,IN_PARALLEL)	|	VoC_movreg16(REG0,RL6_LO,DEFAULT)
0x1580FFC0,	//0x110e		VoC_sw32_d(REG01,0x10de)(lo)	|	VoC_NOP
0x073610DE,	//0x1110		VoC_add16_rd(REG6,REG6,0x10fd)(lo)	|	VoC_sw32_d(REG01,0x10de)(hi)
0x073F10FD,	//0x1112		VoC_add16_rd(REG7,REG7,0x1100)(lo)	|	VoC_add16_rd(REG6,REG6,0x10fd)(hi)
0xFFC01100,	//0x1114		VoC_NOP	|	VoC_add16_rd(REG7,REG7,0x1100)(hi)
0xD9BAD9B0,	//0x1116		VoC_lw32_p(REG45,REG7,DEFAULT)	|	VoC_lw32_p(REG01,REG6,DEFAULT)
0xFF457F44,	//0x1118		VoC_lw32z(ACC1,IN_PARALLEL)	|	VoC_lw32z(ACC0,DEFAULT)
0xCE054E0D,	//0x111a		VoC_mac32_rr(REG0,REG5,IN_PARALLEL)	|	VoC_mac32_rr(REG1,REG5,DEFAULT)
0x0BA4FFC0,	//0x111c		VoC_sub32_dr(ACC0,0x18a2,ACC0)(lo)	|	VoC_NOP
0x4E0418A2,	//0x111e		VoC_mac32_rr(REG0,REG4,DEFAULT)	|	VoC_sub32_dr(ACC0,0x18a2,ACC0)(hi)
0xFFC0CE0C,	//0x1120		VoC_NOP	|	VoC_mac32_rr(REG1,REG4,IN_PARALLEL)
0x18E60924,	//0x1122		VoC_add32_rd(ACC0,ACC0,0x18e6)
0x18E6092D,	//0x1124		VoC_add32_rd(ACC1,ACC1,0x18e6)
0xFA7D7A7C,	//0x1126		VoC_shr32_ri(ACC1,0xf,IN_PARALLEL)	|	VoC_shr32_ri(ACC0,0xf,DEFAULT)
0xFF2F7F26,	//0x1128		VoC_movreg32(RL7,ACC1,IN_PARALLEL)	|	VoC_movreg32(RL6,ACC0,DEFAULT)
0xF7C16180,	//0x112a		VoC_movreg16(REG1,RL7_LO,IN_PARALLEL)	|	VoC_movreg16(REG0,RL6_LO,DEFAULT)
0x1580FFC0,	//0x112c		VoC_sw32_d(REG01,0x10e0)(lo)	|	VoC_NOP
0x073610E0,	//0x112e		VoC_add16_rd(REG6,REG6,0x10fd)(lo)	|	VoC_sw32_d(REG01,0x10e0)(hi)
0x073F10FD,	//0x1130		VoC_add16_rd(REG7,REG7,0x1100)(lo)	|	VoC_add16_rd(REG6,REG6,0x10fd)(hi)
0xFFC01100,	//0x1132		VoC_NOP	|	VoC_add16_rd(REG7,REG7,0x1100)(hi)
0xD9BAD9B0,	//0x1134		VoC_lw32_p(REG45,REG7,DEFAULT)	|	VoC_lw32_p(REG01,REG6,DEFAULT)
0xFF457F44,	//0x1136		VoC_lw32z(ACC1,IN_PARALLEL)	|	VoC_lw32z(ACC0,DEFAULT)
0xCE054E0D,	//0x1138		VoC_mac32_rr(REG0,REG5,IN_PARALLEL)	|	VoC_mac32_rr(REG1,REG5,DEFAULT)
0x0BA4FFC0,	//0x113a		VoC_sub32_dr(ACC0,0x18a2,ACC0)(lo)	|	VoC_NOP
0x4E0418A2,	//0x113c		VoC_mac32_rr(REG0,REG4,DEFAULT)	|	VoC_sub32_dr(ACC0,0x18a2,ACC0)(hi)
0xFFC0CE0C,	//0x113e		VoC_NOP	|	VoC_mac32_rr(REG1,REG4,IN_PARALLEL)
0x18E60924,	//0x1140		VoC_add32_rd(ACC0,ACC0,0x18e6)
0x18E6092D,	//0x1142		VoC_add32_rd(ACC1,ACC1,0x18e6)
0xFA7D7A7C,	//0x1144		VoC_shr32_ri(ACC1,0xf,IN_PARALLEL)	|	VoC_shr32_ri(ACC0,0xf,DEFAULT)
0xFF2F7F26,	//0x1146		VoC_movreg32(RL7,ACC1,IN_PARALLEL)	|	VoC_movreg32(RL6,ACC0,DEFAULT)
0xF7C16180,	//0x1148		VoC_movreg16(REG1,RL7_LO,IN_PARALLEL)	|	VoC_movreg16(REG0,RL6_LO,DEFAULT)
0x1580FFC0,	//0x114a		VoC_sw32_d(REG01,0x10e2)(lo)	|	VoC_NOP
0x070410E2,	//0x114c		VoC_add16_rd(REG4,REG0,0x10de)(lo)	|	VoC_sw32_d(REG01,0x10e2)(hi)
0x070D10DE,	//0x114e		VoC_add16_rd(REG5,REG1,0x10df)(lo)	|	VoC_add16_rd(REG4,REG0,0x10de)(hi)
0xFFC010DF,	//0x1150		VoC_NOP	|	VoC_add16_rd(REG5,REG1,0x10df)(hi)
0x10E41582,	//0x1152		VoC_sw32_d(REG45,0x10e4)
0x10DE0B04,	//0x1154		VoC_sub16_dr(REG4,0x10de,REG0)
0x10DF0B0D,	//0x1156		VoC_sub16_dr(REG5,0x10df,REG1)
0x1582FFC0,	//0x1158		VoC_sw32_d(REG45,0x10e6)(lo)	|	VoC_NOP
0xDF8210E6,	//0x115a		VoC_pop16(REG2,DEFAULT)	|	VoC_sw32_d(REG45,0x10e6)(hi)
0xD826FFC0,	//0x115c		VoC_lw16_p(REG6,REG2,DEFAULT)	|	VoC_NOP
0x10E007B0,	//0x115e		VoC_sub16_rd(REG0,REG6,0x10e0)
0x10E00736,	//0x1160		VoC_add16_rd(REG6,REG6,0x10e0)
0x07B4DFC2,	//0x1162		VoC_sub16_rd(REG4,REG6,0x10e4)(lo)	|	VoC_push16(REG2,DEFAULT)
0x071210E4,	//0x1164		VoC_add16_rd(REG2,REG2,0x18a4)(lo)	|	VoC_sub16_rd(REG4,REG6,0x10e4)(hi)
0xFFC018A4,	//0x1166		VoC_NOP	|	VoC_add16_rd(REG2,REG2,0x18a4)(hi)
0x07B9D827,	//0x1168		VoC_sub16_rd(REG1,REG7,0x10e1)(lo)	|	VoC_lw16_p(REG7,REG2,DEFAULT)
0x073F10E1,	//0x116a		VoC_add16_rd(REG7,REG7,0x10e1)(lo)	|	VoC_sub16_rd(REG1,REG7,0x10e1)(hi)
0xFFC010E1,	//0x116c		VoC_NOP	|	VoC_add16_rd(REG7,REG7,0x10e1)(hi)
0x10E507BD,	//0x116e		VoC_sub16_rd(REG5,REG7,0x10e5)
0x10E81580,	//0x1170		VoC_sw32_d(REG01,0x10e8)
0x18A40792,	//0x1172		VoC_sub16_rd(REG2,REG2,0x18a4)
0xDD93FFC0,	//0x1174		VoC_sw32_p(REG67,REG2,DEFAULT)	|	VoC_NOP
0x10FD0712,	//0x1176		VoC_add16_rd(REG2,REG2,0x10fd)
0x10FD0712,	//0x1178		VoC_add16_rd(REG2,REG2,0x10fd)
0xDD92FFC0,	//0x117a		VoC_sw32_p(REG45,REG2,DEFAULT)	|	VoC_NOP
0xFFC0DF82,	//0x117c		VoC_NOP	|	VoC_pop16(REG2,DEFAULT)
0xF0065FC2,	//0x117e		VoC_lw16i_short(INC2,0x1,IN_PARALLEL)	|	VoC_push16(REG2,DEFAULT)
0xD8A0FFC0,	//0x1180		VoC_lw16inc_p(REG0,REG2,DEFAULT)	|	VoC_NOP
0x10E40700,	//0x1182		VoC_add16_rd(REG0,REG0,0x10e4)
0x0709D821,	//0x1184		VoC_add16_rd(REG1,REG1,0x10e5)(lo)	|	VoC_lw16_p(REG1,REG2,DEFAULT)
0xDF8210E5,	//0x1186		VoC_pop16(REG2,DEFAULT)	|	VoC_add16_rd(REG1,REG1,0x10e5)(hi)
0xDD90FFC0,	//0x1188		VoC_sw32_p(REG01,REG2,DEFAULT)	|	VoC_NOP
0x1483DFC2,	//0x118a		VoC_lw32_d(REG67,0x10e8)(lo)	|	VoC_push16(REG2,DEFAULT)
0x148210E8,	//0x118c		VoC_lw32_d(REG45,0x10e6)(lo)	|	VoC_lw32_d(REG67,0x10e8)(hi)
0x43A810E6,	//0x118e		VoC_sub16_rr(REG0,REG6,REG5,DEFAULT)	|	VoC_lw32_d(REG45,0x10e6)(hi)
0x0712C1E1,	//0x1190		VoC_add16_rd(REG2,REG2,0x10fd)(lo)	|	VoC_add16_rr(REG1,REG7,REG4,IN_PARALLEL)
0xFFC010FD,	//0x1192		VoC_NOP	|	VoC_add16_rd(REG2,REG2,0x10fd)(hi)
0x41A8DD90,	//0x1194		VoC_add16_rr(REG0,REG6,REG5,DEFAULT)	|	VoC_sw32_p(REG01,REG2,DEFAULT)
0x0712C3E1,	//0x1196		VoC_add16_rd(REG2,REG2,0x10fd)(lo)	|	VoC_sub16_rr(REG1,REG7,REG4,IN_PARALLEL)
0x071210FD,	//0x1198		VoC_add16_rd(REG2,REG2,0x10fd)(lo)	|	VoC_add16_rd(REG2,REG2,0x10fd)(hi)
0xFFC010FD,	//0x119a		VoC_NOP	|	VoC_add16_rd(REG2,REG2,0x10fd)(hi)
0xDF82DD90,	//0x119c		VoC_pop16(REG2,DEFAULT)	|	VoC_sw32_p(REG01,REG2,DEFAULT)
0x1407DF83,	//0x119e		VoC_lw16_d(REG7,0x1100)(lo)	|	VoC_pop16(REG3,DEFAULT)
0x07121100,	//0x11a0		VoC_add16_rd(REG2,REG2,0x18a6)(lo)	|	VoC_lw16_d(REG7,0x1100)(hi)
0x073F18A6,	//0x11a2		VoC_add16_rd(REG7,REG7,0x10fc)(lo)	|	VoC_add16_rd(REG2,REG2,0x18a6)(hi)
0xFFC010FC,	//0x11a4		VoC_NOP	|	VoC_add16_rd(REG7,REG7,0x10fc)(hi)
		//0x11a6		VoC_endloop0
0x11001507,	//0x11a6		VoC_sw16_d(REG7,0x1100)
0xDF80DF82,	//0x11a8		VoC_pop16(REG0,DEFAULT)	|	VoC_pop16(REG2,DEFAULT)
		//0x11aa		VoC_endloop1
0x10FF0712,	//0x11aa		VoC_add16_rd(REG2,REG2,0x10ff)
0x12702B00,	//0x11ac		VoC_jump_lg(SPX_KF_BFLY4_END)
		//0x11ae		SPX_KF_BFLY4_IF
0x126E2E31,	//0x11ae		VoC_loop_r(1,REG6)
0xDFC2DFC0,	//0x11b0		VoC_push16(REG2,DEFAULT)	|	VoC_push16(REG0,DEFAULT)
0x00420A83,	//0x11b2		VoC_lw16i(REG3,0x42)
0x1407C01B,	//0x11b4		VoC_lw16_d(REG7,0x10fd)(lo)	|	VoC_add16_rr(REG3,REG0,REG3,DEFAULT)
0xF80F10FD,	//0x11b6		VoC_shr16_ri(REG7,0x1,DEFAULT)	|	VoC_lw16_d(REG7,0x10fd)(hi)
0xFFC0F006,	//0x11b8		VoC_NOP	|	VoC_lw16i_short(REG6,0x0,DEFAULT)
0x11001506,	//0x11ba		VoC_sw16_d(REG6,0x1100)
0x12692E38,	//0x11bc		VoC_loop_r(0,REG7)
0xDFC2DFC3,	//0x11be		VoC_push16(REG2,DEFAULT)	|	VoC_push16(REG3,DEFAULT)
0x10FD0716,	//0x11c0		VoC_add16_rd(REG6,REG2,0x10fd)
0x1100071F,	//0x11c2		VoC_add16_rd(REG7,REG3,0x1100)
0xD9B0FFC0,	//0x11c4		VoC_lw32_p(REG01,REG6,DEFAULT)	|	VoC_NOP
0x7F44D9BA,	//0x11c6		VoC_lw32z(ACC0,DEFAULT)	|	VoC_lw32_p(REG45,REG7,DEFAULT)
0x4E0DFF45,	//0x11c8		VoC_mac32_rr(REG1,REG5,DEFAULT)	|	VoC_lw32z(ACC1,IN_PARALLEL)
0xFFC0CE05,	//0x11ca		VoC_NOP	|	VoC_mac32_rr(REG0,REG5,IN_PARALLEL)
0x18A20BA4,	//0x11cc		VoC_sub32_dr(ACC0,0x18a2,ACC0)
0xCE0C4E04,	//0x11ce		VoC_mac32_rr(REG1,REG4,IN_PARALLEL)	|	VoC_mac32_rr(REG0,REG4,DEFAULT)
0x0924FFC0,	//0x11d0		VoC_add32_rd(ACC0,ACC0,0x190c)(lo)	|	VoC_NOP
0x092D190C,	//0x11d2		VoC_add32_rd(ACC1,ACC1,0x190c)(lo)	|	VoC_add32_rd(ACC0,ACC0,0x190c)(hi)
0x7A8C190C,	//0x11d4		VoC_shr32_ri(ACC0,0x11,DEFAULT)	|	VoC_add32_rd(ACC1,ACC1,0x190c)(hi)
0x7F26FA8D,	//0x11d6		VoC_movreg32(RL6,ACC0,DEFAULT)	|	VoC_shr32_ri(ACC1,0x11,IN_PARALLEL)
0x6180FF2F,	//0x11d8		VoC_movreg16(REG0,RL6_LO,DEFAULT)	|	VoC_movreg32(RL7,ACC1,IN_PARALLEL)
0xFFC0F7C1,	//0x11da		VoC_NOP	|	VoC_movreg16(REG1,RL7_LO,IN_PARALLEL)
0x10DE1580,	//0x11dc		VoC_sw32_d(REG01,0x10de)
0x10FD0736,	//0x11de		VoC_add16_rd(REG6,REG6,0x10fd)
0x1100073F,	//0x11e0		VoC_add16_rd(REG7,REG7,0x1100)
0xD9B0FFC0,	//0x11e2		VoC_lw32_p(REG01,REG6,DEFAULT)	|	VoC_NOP
0x7F44D9BA,	//0x11e4		VoC_lw32z(ACC0,DEFAULT)	|	VoC_lw32_p(REG45,REG7,DEFAULT)
0x4E0DFF45,	//0x11e6		VoC_mac32_rr(REG1,REG5,DEFAULT)	|	VoC_lw32z(ACC1,IN_PARALLEL)
0xFFC0CE05,	//0x11e8		VoC_NOP	|	VoC_mac32_rr(REG0,REG5,IN_PARALLEL)
0x18A20BA4,	//0x11ea		VoC_sub32_dr(ACC0,0x18a2,ACC0)
0xCE0C4E04,	//0x11ec		VoC_mac32_rr(REG1,REG4,IN_PARALLEL)	|	VoC_mac32_rr(REG0,REG4,DEFAULT)
0x0924FFC0,	//0x11ee		VoC_add32_rd(ACC0,ACC0,0x190c)(lo)	|	VoC_NOP
0x092D190C,	//0x11f0		VoC_add32_rd(ACC1,ACC1,0x190c)(lo)	|	VoC_add32_rd(ACC0,ACC0,0x190c)(hi)
0x7A8C190C,	//0x11f2		VoC_shr32_ri(ACC0,0x11,DEFAULT)	|	VoC_add32_rd(ACC1,ACC1,0x190c)(hi)
0x7F26FA8D,	//0x11f4		VoC_movreg32(RL6,ACC0,DEFAULT)	|	VoC_shr32_ri(ACC1,0x11,IN_PARALLEL)
0x6180FF2F,	//0x11f6		VoC_movreg16(REG0,RL6_LO,DEFAULT)	|	VoC_movreg32(RL7,ACC1,IN_PARALLEL)
0xFFC0F7C1,	//0x11f8		VoC_NOP	|	VoC_movreg16(REG1,RL7_LO,IN_PARALLEL)
0x10E01580,	//0x11fa		VoC_sw32_d(REG01,0x10e0)
0x10FD0736,	//0x11fc		VoC_add16_rd(REG6,REG6,0x10fd)
0x1100073F,	//0x11fe		VoC_add16_rd(REG7,REG7,0x1100)
0xD9B0FFC0,	//0x1200		VoC_lw32_p(REG01,REG6,DEFAULT)	|	VoC_NOP
0x7F44D9BA,	//0x1202		VoC_lw32z(ACC0,DEFAULT)	|	VoC_lw32_p(REG45,REG7,DEFAULT)
0x4E0DFF45,	//0x1204		VoC_mac32_rr(REG1,REG5,DEFAULT)	|	VoC_lw32z(ACC1,IN_PARALLEL)
0xFFC0CE05,	//0x1206		VoC_NOP	|	VoC_mac32_rr(REG0,REG5,IN_PARALLEL)
0x18A20BA4,	//0x1208		VoC_sub32_dr(ACC0,0x18a2,ACC0)
0xCE0C4E04,	//0x120a		VoC_mac32_rr(REG1,REG4,IN_PARALLEL)	|	VoC_mac32_rr(REG0,REG4,DEFAULT)
0x0924FFC0,	//0x120c		VoC_add32_rd(ACC0,ACC0,0x190c)(lo)	|	VoC_NOP
0x092D190C,	//0x120e		VoC_add32_rd(ACC1,ACC1,0x190c)(lo)	|	VoC_add32_rd(ACC0,ACC0,0x190c)(hi)
0x7A8C190C,	//0x1210		VoC_shr32_ri(ACC0,0x11,DEFAULT)	|	VoC_add32_rd(ACC1,ACC1,0x190c)(hi)
0x7F26FA8D,	//0x1212		VoC_movreg32(RL6,ACC0,DEFAULT)	|	VoC_shr32_ri(ACC1,0x11,IN_PARALLEL)
0x6180FF2F,	//0x1214		VoC_movreg16(REG0,RL6_LO,DEFAULT)	|	VoC_movreg32(RL7,ACC1,IN_PARALLEL)
0xFFC0F7C1,	//0x1216		VoC_NOP	|	VoC_movreg16(REG1,RL7_LO,IN_PARALLEL)
0x10E21580,	//0x1218		VoC_sw32_d(REG01,0x10e2)
0x10DE0704,	//0x121a		VoC_add16_rd(REG4,REG0,0x10de)
0x10DF070D,	//0x121c		VoC_add16_rd(REG5,REG1,0x10df)
0x1582FFC0,	//0x121e		VoC_sw32_d(REG45,0x10e4)(lo)	|	VoC_NOP
0x0B0410E4,	//0x1220		VoC_sub16_dr(REG4,0x10de,REG0)(lo)	|	VoC_sw32_d(REG45,0x10e4)(hi)
0x0B0D10DE,	//0x1222		VoC_sub16_dr(REG5,0x10df,REG1)(lo)	|	VoC_sub16_dr(REG4,0x10de,REG0)(hi)
0xFFC010DF,	//0x1224		VoC_NOP	|	VoC_sub16_dr(REG5,0x10df,REG1)(hi)
0x10E61582,	//0x1226		VoC_sw32_d(REG45,0x10e6)
0x0700D990,	//0x1228		VoC_add16_rd(REG0,REG0,0x18a6)(lo)	|	VoC_lw32_p(REG01,REG2,DEFAULT)
0x070918A6,	//0x122a		VoC_add16_rd(REG1,REG1,0x18a6)(lo)	|	VoC_add16_rd(REG0,REG0,0x18a6)(hi)
0x781018A6,	//0x122c		VoC_shr16_ri(REG0,0x2,DEFAULT)	|	VoC_add16_rd(REG1,REG1,0x18a6)(hi)
0x0786F811,	//0x122e		VoC_sub16_rd(REG6,REG0,0x10e0)(lo)	|	VoC_shr16_ri(REG1,0x2,IN_PARALLEL)
0x078F10E0,	//0x1230		VoC_sub16_rd(REG7,REG1,0x10e1)(lo)	|	VoC_sub16_rd(REG6,REG0,0x10e0)(hi)
0xFFC010E1,	//0x1232		VoC_NOP	|	VoC_sub16_rd(REG7,REG1,0x10e1)(hi)
0x10E81583,	//0x1234		VoC_sw32_d(REG67,0x10e8)
0x10E00700,	//0x1236		VoC_add16_rd(REG0,REG0,0x10e0)
0x10E10709,	//0x1238		VoC_add16_rd(REG1,REG1,0x10e1)
0xDD90FFC0,	//0x123a		VoC_sw32_p(REG01,REG2,DEFAULT)	|	VoC_NOP
0x10FD0712,	//0x123c		VoC_add16_rd(REG2,REG2,0x10fd)
0x10E40786,	//0x123e		VoC_sub16_rd(REG6,REG0,0x10e4)
0x10FD0712,	//0x1240		VoC_add16_rd(REG2,REG2,0x10fd)
0x10E5078F,	//0x1242		VoC_sub16_rd(REG7,REG1,0x10e5)
0xDD93FFC0,	//0x1244		VoC_sw32_p(REG67,REG2,DEFAULT)	|	VoC_NOP
0x0700DF82,	//0x1246		VoC_add16_rd(REG0,REG0,0x10e4)(lo)	|	VoC_pop16(REG2,DEFAULT)
0x070910E4,	//0x1248		VoC_add16_rd(REG1,REG1,0x10e5)(lo)	|	VoC_add16_rd(REG0,REG0,0x10e4)(hi)
0xFFC010E5,	//0x124a		VoC_NOP	|	VoC_add16_rd(REG1,REG1,0x10e5)(hi)
0xDFC2DD90,	//0x124c		VoC_push16(REG2,DEFAULT)	|	VoC_sw32_p(REG01,REG2,DEFAULT)
0x10E81483,	//0x124e		VoC_lw32_d(REG67,0x10e8)
0x10E61482,	//0x1250		VoC_lw32_d(REG45,0x10e6)
0x10FD0712,	//0x1252		VoC_add16_rd(REG2,REG2,0x10fd)
0xC3E141A8,	//0x1254		VoC_sub16_rr(REG1,REG7,REG4,IN_PARALLEL)	|	VoC_add16_rr(REG0,REG6,REG5,DEFAULT)
0xDD90FFC0,	//0x1256		VoC_sw32_p(REG01,REG2,DEFAULT)	|	VoC_NOP
0x10FD0712,	//0x1258		VoC_add16_rd(REG2,REG2,0x10fd)
0xC1E143A8,	//0x125a		VoC_add16_rr(REG1,REG7,REG4,IN_PARALLEL)	|	VoC_sub16_rr(REG0,REG6,REG5,DEFAULT)
0x10FD0712,	//0x125c		VoC_add16_rd(REG2,REG2,0x10fd)
0xDD90FFC0,	//0x125e		VoC_sw32_p(REG01,REG2,DEFAULT)	|	VoC_NOP
0xDF83DF82,	//0x1260		VoC_pop16(REG3,DEFAULT)	|	VoC_pop16(REG2,DEFAULT)
0x11001407,	//0x1262		VoC_lw16_d(REG7,0x1100)
0x18A60712,	//0x1264		VoC_add16_rd(REG2,REG2,0x18a6)
0x10FC073F,	//0x1266		VoC_add16_rd(REG7,REG7,0x10fc)
0x1507FFC0,	//0x1268		VoC_sw16_d(REG7,0x1100)(lo)	|	VoC_NOP
		//0x1269		VoC_endloop0
0xFFC01100,	//0x126a		VoC_NOP	|	VoC_sw16_d(REG7,0x1100)(hi)
0xDF80DF82,	//0x126c		VoC_pop16(REG0,DEFAULT)	|	VoC_pop16(REG2,DEFAULT)
		//0x126e		VoC_endloop1
0x10FF0712,	//0x126e		VoC_add16_rd(REG2,REG2,0x10ff)
		//0x1270		SPX_KF_BFLY4_END
0xDF06DF07,	//0x1270		VoC_pop32(RL6,DEFAULT)	|	VoC_pop32(RL7,DEFAULT)
0xDF02DF03,	//0x1272		VoC_pop32(REG45,DEFAULT)	|	VoC_pop32(REG67,DEFAULT)
0xDF00DF01,	//0x1274		VoC_pop32(REG01,DEFAULT)	|	VoC_pop32(REG23,DEFAULT)
0xFFC0DFA9,	//0x1276		VoC_NOP	|	VoC_pop16(RA,DEFAULT)
0xDFE9E580,	//0x1278		VoC_push16(RA,DEFAULT)	|	VoC_return
		//0x1279		spx_kf_bfly5
0xDF41DF40,	//0x127a		VoC_push32(REG23,DEFAULT)	|	VoC_push32(REG01,DEFAULT)
0xDF43DF42,	//0x127c		VoC_push32(REG67,DEFAULT)	|	VoC_push32(REG45,DEFAULT)
0xDF47DF46,	//0x127e		VoC_push32(RL7,DEFAULT)	|	VoC_push32(RL6,DEFAULT)
0x10FD1405,	//0x1280		VoC_lw16_d(REG5,0x10fd)
0xC5ECFFC0,	//0x1282		VoC_mult16_rr(REG4,REG7,REG5,DEFAULT)	|	VoC_NOP
0x00420A86,	//0x1284		VoC_lw16i(REG6,0x42)
0xC0E6C033,	//0x1286		VoC_add16_rr(REG6,REG3,REG4,DEFAULT)	|	VoC_add16_rr(REG3,REG0,REG6,DEFAULT)
0xD9B7FFC0,	//0x1288		VoC_lw32_p(RL7,REG6,DEFAULT)	|	VoC_NOP
0x1587FFC0,	//0x128a		VoC_sw32_d(RL7,0x10f8)(lo)	|	VoC_NOP
0xC1A610F8,	//0x128c		VoC_add16_rr(REG6,REG6,REG4,DEFAULT)	|	VoC_sw32_d(RL7,0x10f8)(hi)
0xD9B7FFC0,	//0x128e		VoC_lw32_p(RL7,REG6,DEFAULT)	|	VoC_NOP
0x1587FFC0,	//0x1290		VoC_sw32_d(RL7,0x10fa)(lo)	|	VoC_NOP
0x703210FA,	//0x1292		VoC_lw16i_short(INC2,0x1,DEFAULT)	|	VoC_sw32_d(RL7,0x10fa)(hi)
0xFFC0F401,	//0x1294		VoC_NAD	|	VoC_lw16i_short(FORMAT32,0x0,IN_PARALLEL)
0x14152E29,	//0x1296		VoC_loop_r(1,REG5)
0x00010A86,	//0x1298		VoC_lw16i(REG6,0x1)
0xFFC0C030,	//0x129a		VoC_NOP	|	VoC_add16_rr(REG0,REG0,REG6,DEFAULT)
0xDFC2D800,	//0x129c		VoC_push16(REG2,DEFAULT)	|	VoC_lw16_p(REG0,REG0,DEFAULT)
0x12AF31C0,	//0x129e		VoC_bnez16_r(SPX_KF_BFLY5_IF,REG0)
0xF401694E,	//0x12a0		VoC_lw16i_short(FORMAT32,0x0,IN_PARALLEL)	|	VoC_loop_i_short(0xa,DEFAULT)
0xD820FF44,	//0x12a2		VoC_lw16_p(REG0,REG2,DEFAULT)	|	VoC_lw32z(ACC0,DEFAULT)
0x19990A86,	//0x12a4		VoC_lw16i(REG6,0x1999)
0xFFC0CE06,	//0x12a6		VoC_NOP	|	VoC_mac32_rr(REG0,REG6,DEFAULT)
0x0900FF20,	//0x12a8		VoC_add32_rd(REG01,REG01,0x18e6)(lo)	|	VoC_movreg32(REG01,ACC0,DEFAULT)
0xFA7818E6,	//0x12aa		VoC_shr32_ri(REG01,0xf,DEFAULT)	|	VoC_add32_rd(REG01,REG01,0x18e6)(hi)
0xDC20FFC0,	//0x12ac		VoC_sw16_p(REG0,REG2,DEFAULT)	|	VoC_NOP
		//0x12ae		VoC_endloop0
0xDF82C0AA,	//0x12ae		VoC_pop16(REG2,DEFAULT)	|	VoC_add16_rr(REG2,REG2,REG5,DEFAULT)
		//0x12af		SPX_KF_BFLY5_IF
0xF004F8FD,	//0x12b0		VoC_lw16i_short(REG4,0x0,DEFAULT)	|	VoC_shr16_ri(REG5,0xffffffff,DEFAULT)
0xD997DF41,	//0x12b2		VoC_lw32_p(RL7,REG2,DEFAULT)	|	VoC_push32(REG23,DEFAULT)
0x1587DF42,	//0x12b4		VoC_sw32_d(RL7,0x10de)(lo)	|	VoC_push32(REG45,DEFAULT)
0xDF4110DE,	//0x12b6		VoC_push32(REG23,DEFAULT)	|	VoC_sw32_d(RL7,0x10de)(hi)
0xFF457F44,	//0x12b8		VoC_lw32z(ACC1,IN_PARALLEL)	|	VoC_lw32z(ACC0,DEFAULT)
0xFFC0C0AA,	//0x12ba		VoC_NOP	|	VoC_add16_rr(REG2,REG2,REG5,DEFAULT)
0xD99BD990,	//0x12bc		VoC_lw32_p(REG67,REG3,DEFAULT)	|	VoC_lw32_p(REG01,REG2,DEFAULT)
0xCE074E0F,	//0x12be		VoC_mac32_rr(REG0,REG7,IN_PARALLEL)	|	VoC_mac32_rr(REG1,REG7,DEFAULT)
0x0BA4FFC0,	//0x12c0		VoC_sub32_dr(ACC0,0x18a2,ACC0)(lo)	|	VoC_NOP
0x4E0618A2,	//0x12c2		VoC_mac32_rr(REG0,REG6,DEFAULT)	|	VoC_sub32_dr(ACC0,0x18a2,ACC0)(hi)
0xFFC0CE0E,	//0x12c4		VoC_NOP	|	VoC_mac32_rr(REG1,REG6,IN_PARALLEL)
0xFF2F7F26,	//0x12c6		VoC_movreg32(RL7,ACC1,IN_PARALLEL)	|	VoC_movreg32(RL6,ACC0,DEFAULT)
0x18E60936,	//0x12c8		VoC_add32_rd(RL6,RL6,0x18e6)
0x18E6093F,	//0x12ca		VoC_add32_rd(RL7,RL7,0x18e6)
0xFA7F7A7E,	//0x12cc		VoC_shr32_ri(RL7,0xf,IN_PARALLEL)	|	VoC_shr32_ri(RL6,0xf,DEFAULT)
0x10E0150C,	//0x12ce		VoC_sw16_d(RL6_LO,0x10e0)
0x10E1150E,	//0x12d0		VoC_sw16_d(RL7_LO,0x10e1)
0x7F44DF01,	//0x12d2		VoC_lw32z(ACC0,DEFAULT)	|	VoC_pop32(REG23,DEFAULT)
0x78F5FF45,	//0x12d4		VoC_shr16_ri(REG5,0xfffffffe,DEFAULT)	|	VoC_lw32z(ACC1,IN_PARALLEL)
0x40AAF8F4,	//0x12d6		VoC_add16_rr(REG2,REG2,REG5,DEFAULT)	|	VoC_shr16_ri(REG4,0xfffffffe,IN_PARALLEL)
0xFFC0C0E3,	//0x12d8		VoC_NOP	|	VoC_add16_rr(REG3,REG3,REG4,IN_PARALLEL)
0xD99BD990,	//0x12da		VoC_lw32_p(REG67,REG3,DEFAULT)	|	VoC_lw32_p(REG01,REG2,DEFAULT)
0xCE074E0F,	//0x12dc		VoC_mac32_rr(REG0,REG7,IN_PARALLEL)	|	VoC_mac32_rr(REG1,REG7,DEFAULT)
0x0BA4FFC0,	//0x12de		VoC_sub32_dr(ACC0,0x18a2,ACC0)(lo)	|	VoC_NOP
0x4E0618A2,	//0x12e0		VoC_mac32_rr(REG0,REG6,DEFAULT)	|	VoC_sub32_dr(ACC0,0x18a2,ACC0)(hi)
0xFFC0CE0E,	//0x12e2		VoC_NOP	|	VoC_mac32_rr(REG1,REG6,IN_PARALLEL)
0x18E60924,	//0x12e4		VoC_add32_rd(ACC0,ACC0,0x18e6)
0x18E6092D,	//0x12e6		VoC_add32_rd(ACC1,ACC1,0x18e6)
0xFA7DFA7C,	//0x12e8		VoC_shr32_ri(ACC1,0xf,DEFAULT)	|	VoC_shr32_ri(ACC0,0xf,DEFAULT)
0xC9EB49A0,	//0x12ea		VoC_add32_rr(REG67,RL7,ACC1,IN_PARALLEL)	|	VoC_add32_rr(REG01,RL6,ACC0,DEFAULT)
0xFFC0E0C1,	//0x12ec		VoC_NOP	|	VoC_movreg16(REG1,REG6,DEFAULT)
0x10EC1580,	//0x12ee		VoC_sw32_d(REG01,0x10ec)
0xCBEB4BA0,	//0x12f0		VoC_sub32_rr(REG67,RL7,ACC1,IN_PARALLEL)	|	VoC_sub32_rr(REG01,RL6,ACC0,DEFAULT)
0xFFC0E0C1,	//0x12f2		VoC_NOP	|	VoC_movreg16(REG1,REG6,DEFAULT)
0x10F21580,	//0x12f4		VoC_sw32_d(REG01,0x10f2)
0x7F44DF02,	//0x12f6		VoC_lw32z(ACC0,DEFAULT)	|	VoC_pop32(REG45,DEFAULT)
0x42AAFF45,	//0x12f8		VoC_sub16_rr(REG2,REG2,REG5,DEFAULT)	|	VoC_lw32z(ACC1,IN_PARALLEL)
0xFFC0C2E3,	//0x12fa		VoC_NOP	|	VoC_sub16_rr(REG3,REG3,REG4,IN_PARALLEL)
0xD99BD990,	//0x12fc		VoC_lw32_p(REG67,REG3,DEFAULT)	|	VoC_lw32_p(REG01,REG2,DEFAULT)
0xCE074E0F,	//0x12fe		VoC_mac32_rr(REG0,REG7,IN_PARALLEL)	|	VoC_mac32_rr(REG1,REG7,DEFAULT)
0x0BA4FFC0,	//0x1300		VoC_sub32_dr(ACC0,0x18a2,ACC0)(lo)	|	VoC_NOP
0x4E0618A2,	//0x1302		VoC_mac32_rr(REG0,REG6,DEFAULT)	|	VoC_sub32_dr(ACC0,0x18a2,ACC0)(hi)
0xFFC0CE0E,	//0x1304		VoC_NOP	|	VoC_mac32_rr(REG1,REG6,IN_PARALLEL)
0xFF2F7F26,	//0x1306		VoC_movreg32(RL7,ACC1,IN_PARALLEL)	|	VoC_movreg32(RL6,ACC0,DEFAULT)
0x18E60936,	//0x1308		VoC_add32_rd(RL6,RL6,0x18e6)
0x18E6093F,	//0x130a		VoC_add32_rd(RL7,RL7,0x18e6)
0xFA7F7A7E,	//0x130c		VoC_shr32_ri(RL7,0xf,IN_PARALLEL)	|	VoC_shr32_ri(RL6,0xf,DEFAULT)
0xFF457F44,	//0x130e		VoC_lw32z(ACC1,IN_PARALLEL)	|	VoC_lw32z(ACC0,DEFAULT)
0xC2E342AA,	//0x1310		VoC_sub16_rr(REG3,REG3,REG4,IN_PARALLEL)	|	VoC_sub16_rr(REG2,REG2,REG5,DEFAULT)
0xD990FFC0,	//0x1312		VoC_lw32_p(REG01,REG2,DEFAULT)	|	VoC_NOP
0x4E0FD99B,	//0x1314		VoC_mac32_rr(REG1,REG7,DEFAULT)	|	VoC_lw32_p(REG67,REG3,DEFAULT)
0xFFC0CE07,	//0x1316		VoC_NOP	|	VoC_mac32_rr(REG0,REG7,IN_PARALLEL)
0x18A20BA4,	//0x1318		VoC_sub32_dr(ACC0,0x18a2,ACC0)
0xCE0E4E06,	//0x131a		VoC_mac32_rr(REG1,REG6,IN_PARALLEL)	|	VoC_mac32_rr(REG0,REG6,DEFAULT)
0x0924FFC0,	//0x131c		VoC_add32_rd(ACC0,ACC0,0x18e6)(lo)	|	VoC_NOP
0x092D18E6,	//0x131e		VoC_add32_rd(ACC1,ACC1,0x18e6)(lo)	|	VoC_add32_rd(ACC0,ACC0,0x18e6)(hi)
0xFA7C18E6,	//0x1320		VoC_shr32_ri(ACC0,0xf,DEFAULT)	|	VoC_add32_rd(ACC1,ACC1,0x18e6)(hi)
0x4930FA7D,	//0x1322		VoC_add32_rr(REG01,ACC0,RL6,DEFAULT)	|	VoC_shr32_ri(ACC1,0xf,DEFAULT)
0xE0C1C97B,	//0x1324		VoC_movreg16(REG1,REG6,DEFAULT)	|	VoC_add32_rr(REG67,ACC1,RL7,IN_PARALLEL)
0x1580FFC0,	//0x1326		VoC_sw32_d(REG01,0x10ee)(lo)	|	VoC_NOP
0x4B3010EE,	//0x1328		VoC_sub32_rr(REG01,ACC0,RL6,DEFAULT)	|	VoC_sw32_d(REG01,0x10ee)(hi)
0xE0C1CB7B,	//0x132a		VoC_movreg16(REG1,REG6,DEFAULT)	|	VoC_sub32_rr(REG67,ACC1,RL7,IN_PARALLEL)
0x1580FFC0,	//0x132c		VoC_sw32_d(REG01,0x10f0)(lo)	|	VoC_NOP
0xDF0110F0,	//0x132e		VoC_pop32(REG23,DEFAULT)	|	VoC_sw32_d(REG01,0x10f0)(hi)
0x10EC1406,	//0x1330		VoC_lw16_d(REG6,0x10ec)
0x07368196,	//0x1332		VoC_add16_rd(REG6,REG6,0x10ee)(lo)	|	VoC_add16_rp(REG6,REG6,REG2,DEFAULT)
0xFFC010EE,	//0x1334		VoC_NOP	|	VoC_add16_rd(REG6,REG6,0x10ee)(hi)
0x0712DC26,	//0x1336		VoC_add16_rd(REG2,REG2,0x18a4)(lo)	|	VoC_sw16_p(REG6,REG2,DEFAULT)
0x140718A4,	//0x1338		VoC_lw16_d(REG7,0x10ed)(lo)	|	VoC_add16_rd(REG2,REG2,0x18a4)(hi)
0x81D710ED,	//0x133a		VoC_add16_rp(REG7,REG7,REG2,DEFAULT)	|	VoC_lw16_d(REG7,0x10ed)(hi)
0x10EF073F,	//0x133c		VoC_add16_rd(REG7,REG7,0x10ef)
0xDC27FFC0,	//0x133e		VoC_sw16_p(REG7,REG2,DEFAULT)	|	VoC_NOP
0x0792DF42,	//0x1340		VoC_sub16_rd(REG2,REG2,0x18a4)(lo)	|	VoC_push32(REG45,DEFAULT)
0xFFC018A4,	//0x1342		VoC_NOP	|	VoC_sub16_rd(REG2,REG2,0x18a4)(hi)
0x1480DF41,	//0x1344		VoC_lw32_d(REG01,0x10f8)(lo)	|	VoC_push32(REG23,DEFAULT)
0x148110F8,	//0x1346		VoC_lw32_d(REG23,0x10fa)(lo)	|	VoC_lw32_d(REG01,0x10f8)(hi)
0x148210FA,	//0x1348		VoC_lw32_d(REG45,0x10ec)(lo)	|	VoC_lw32_d(REG23,0x10fa)(hi)
0x148310EC,	//0x134a		VoC_lw32_d(REG67,0x10ee)(lo)	|	VoC_lw32_d(REG45,0x10ec)(hi)
0x7F4410EE,	//0x134c		VoC_lw32z(ACC0,DEFAULT)	|	VoC_lw32_d(REG67,0x10ee)(hi)
0x4E20FF45,	//0x134e		VoC_mac32_rr(REG4,REG0,DEFAULT)	|	VoC_lw32z(ACC1,IN_PARALLEL)
0xFFC0CE32,	//0x1350		VoC_NOP	|	VoC_mac32_rr(REG6,REG2,IN_PARALLEL)
0x18E60924,	//0x1352		VoC_add32_rd(ACC0,ACC0,0x18e6)
0x18E6092D,	//0x1354		VoC_add32_rd(ACC1,ACC1,0x18e6)
0x7A7CDF43,	//0x1356		VoC_shr32_ri(ACC0,0xf,DEFAULT)	|	VoC_push32(REG67,DEFAULT)
0xC92BFA7D,	//0x1358		VoC_add32_rr(REG67,ACC0,ACC1,DEFAULT)	|	VoC_shr32_ri(ACC1,0xf,IN_PARALLEL)
0x10DE0736,	//0x135a		VoC_add16_rd(REG6,REG6,0x10de)
0x1506FFC0,	//0x135c		VoC_sw16_d(REG6,0x10e8)(lo)	|	VoC_NOP
0xDF0310E8,	//0x135e		VoC_pop32(REG67,DEFAULT)	|	VoC_sw16_d(REG6,0x10e8)(hi)
0xFF457F44,	//0x1360		VoC_lw32z(ACC1,IN_PARALLEL)	|	VoC_lw32z(ACC0,DEFAULT)
0xCE3A4E28,	//0x1362		VoC_mac32_rr(REG7,REG2,IN_PARALLEL)	|	VoC_mac32_rr(REG5,REG0,DEFAULT)
0x0924FFC0,	//0x1364		VoC_add32_rd(ACC0,ACC0,0x18e6)(lo)	|	VoC_NOP
0x092D18E6,	//0x1366		VoC_add32_rd(ACC1,ACC1,0x18e6)(lo)	|	VoC_add32_rd(ACC0,ACC0,0x18e6)(hi)
0x7A7C18E6,	//0x1368		VoC_shr32_ri(ACC0,0xf,DEFAULT)	|	VoC_add32_rd(ACC1,ACC1,0x18e6)(hi)
0xC92BFA7D,	//0x136a		VoC_add32_rr(REG67,ACC0,ACC1,DEFAULT)	|	VoC_shr32_ri(ACC1,0xf,IN_PARALLEL)
0x10DF0736,	//0x136c		VoC_add16_rd(REG6,REG6,0x10df)
0x1506FFC0,	//0x136e		VoC_sw16_d(REG6,0x10e9)(lo)	|	VoC_NOP
0x148210E9,	//0x1370		VoC_lw32_d(REG45,0x10f0)(lo)	|	VoC_sw16_d(REG6,0x10e9)(hi)
0x148310F0,	//0x1372		VoC_lw32_d(REG67,0x10f2)(lo)	|	VoC_lw32_d(REG45,0x10f0)(hi)
0x7F4410F2,	//0x1374		VoC_lw32z(ACC0,DEFAULT)	|	VoC_lw32_d(REG67,0x10f2)(hi)
0x4E39FF45,	//0x1376		VoC_mac32_rr(REG7,REG1,DEFAULT)	|	VoC_lw32z(ACC1,IN_PARALLEL)
0xFFC0CE2B,	//0x1378		VoC_NOP	|	VoC_mac32_rr(REG5,REG3,IN_PARALLEL)
0x18E60924,	//0x137a		VoC_add32_rd(ACC0,ACC0,0x18e6)
0x18E6092D,	//0x137c		VoC_add32_rd(ACC1,ACC1,0x18e6)
0x7A7CDF43,	//0x137e		VoC_shr32_ri(ACC0,0xf,DEFAULT)	|	VoC_push32(REG67,DEFAULT)
0xC92BFA7D,	//0x1380		VoC_add32_rr(REG67,ACC0,ACC1,DEFAULT)	|	VoC_shr32_ri(ACC1,0xf,IN_PARALLEL)
0x1506FFC0,	//0x1382		VoC_sw16_d(REG6,0x10ea)(lo)	|	VoC_NOP
0xDF0310EA,	//0x1384		VoC_pop32(REG67,DEFAULT)	|	VoC_sw16_d(REG6,0x10ea)(hi)
0xFF457F44,	//0x1386		VoC_lw32z(ACC1,IN_PARALLEL)	|	VoC_lw32z(ACC0,DEFAULT)
0xCE234E31,	//0x1388		VoC_mac32_rr(REG4,REG3,IN_PARALLEL)	|	VoC_mac32_rr(REG6,REG1,DEFAULT)
0x0924FFC0,	//0x138a		VoC_add32_rd(ACC0,ACC0,0x18e6)(lo)	|	VoC_NOP
0x092D18E6,	//0x138c		VoC_add32_rd(ACC1,ACC1,0x18e6)(lo)	|	VoC_add32_rd(ACC0,ACC0,0x18e6)(hi)
0x7A7C18E6,	//0x138e		VoC_shr32_ri(ACC0,0xf,DEFAULT)	|	VoC_add32_rd(ACC1,ACC1,0x18e6)(hi)
0xC92BFA7D,	//0x1390		VoC_add32_rr(REG67,ACC0,ACC1,DEFAULT)	|	VoC_shr32_ri(ACC1,0xf,IN_PARALLEL)
0x18A20B9B,	//0x1392		VoC_sub32_dr(REG67,0x18a2,REG67)
0x1506FFC0,	//0x1394		VoC_sw16_d(REG6,0x10eb)(lo)	|	VoC_NOP
0xDF0110EB,	//0x1396		VoC_pop32(REG23,DEFAULT)	|	VoC_sw16_d(REG6,0x10eb)(hi)
0x10E81482,	//0x1398		VoC_lw32_d(REG45,0x10e8)
0x10EA1483,	//0x139a		VoC_lw32_d(REG67,0x10ea)
0xC3794330,	//0x139c		VoC_sub16_rr(REG1,REG5,REG7,IN_PARALLEL)	|	VoC_sub16_rr(REG0,REG4,REG6,DEFAULT)
0xC17F4136,	//0x139e		VoC_add16_rr(REG7,REG5,REG7,IN_PARALLEL)	|	VoC_add16_rr(REG6,REG4,REG6,DEFAULT)
0xFFC0DF02,	//0x13a0		VoC_NOP	|	VoC_pop32(REG45,DEFAULT)
0xDF41DF42,	//0x13a2		VoC_push32(REG23,DEFAULT)	|	VoC_push32(REG45,DEFAULT)
0xFFC0C0AA,	//0x13a4		VoC_NOP	|	VoC_add16_rr(REG2,REG2,REG5,DEFAULT)
0xC0AADD90,	//0x13a6		VoC_add16_rr(REG2,REG2,REG5,DEFAULT)	|	VoC_sw32_p(REG01,REG2,DEFAULT)
0xC0AAC0AA,	//0x13a8		VoC_add16_rr(REG2,REG2,REG5,DEFAULT)	|	VoC_add16_rr(REG2,REG2,REG5,DEFAULT)
0xDD93FFC0,	//0x13aa		VoC_sw32_p(REG67,REG2,DEFAULT)	|	VoC_NOP
0x10F81480,	//0x13ac		VoC_lw32_d(REG01,0x10f8)
0x10FA1481,	//0x13ae		VoC_lw32_d(REG23,0x10fa)
0x10EC1482,	//0x13b0		VoC_lw32_d(REG45,0x10ec)
0x10EE1483,	//0x13b2		VoC_lw32_d(REG67,0x10ee)
0xFF457F44,	//0x13b4		VoC_lw32z(ACC1,IN_PARALLEL)	|	VoC_lw32z(ACC0,DEFAULT)
0xCE304E22,	//0x13b6		VoC_mac32_rr(REG6,REG0,IN_PARALLEL)	|	VoC_mac32_rr(REG4,REG2,DEFAULT)
0x0924FFC0,	//0x13b8		VoC_add32_rd(ACC0,ACC0,0x18e6)(lo)	|	VoC_NOP
0x092D18E6,	//0x13ba		VoC_add32_rd(ACC1,ACC1,0x18e6)(lo)	|	VoC_add32_rd(ACC0,ACC0,0x18e6)(hi)
0xDF4318E6,	//0x13bc		VoC_push32(REG67,DEFAULT)	|	VoC_add32_rd(ACC1,ACC1,0x18e6)(hi)
0xFA7D7A7C,	//0x13be		VoC_shr32_ri(ACC1,0xf,IN_PARALLEL)	|	VoC_shr32_ri(ACC0,0xf,DEFAULT)
0x0736C92B,	//0x13c0		VoC_add16_rd(REG6,REG6,0x10de)(lo)	|	VoC_add32_rr(REG67,ACC0,ACC1,DEFAULT)
0xFFC010DE,	//0x13c2		VoC_NOP	|	VoC_add16_rd(REG6,REG6,0x10de)(hi)
0x10F41506,	//0x13c4		VoC_sw16_d(REG6,0x10f4)
0x7F44DF03,	//0x13c6		VoC_lw32z(ACC0,DEFAULT)	|	VoC_pop32(REG67,DEFAULT)
0x4E2AFF45,	//0x13c8		VoC_mac32_rr(REG5,REG2,DEFAULT)	|	VoC_lw32z(ACC1,IN_PARALLEL)
0xFFC0CE38,	//0x13ca		VoC_NOP	|	VoC_mac32_rr(REG7,REG0,IN_PARALLEL)
0x18E60924,	//0x13cc		VoC_add32_rd(ACC0,ACC0,0x18e6)
0x18E6092D,	//0x13ce		VoC_add32_rd(ACC1,ACC1,0x18e6)
0xFA7D7A7C,	//0x13d0		VoC_shr32_ri(ACC1,0xf,IN_PARALLEL)	|	VoC_shr32_ri(ACC0,0xf,DEFAULT)
0x0736C92B,	//0x13d2		VoC_add16_rd(REG6,REG6,0x10df)(lo)	|	VoC_add32_rr(REG67,ACC0,ACC1,DEFAULT)
0xFFC010DF,	//0x13d4		VoC_NOP	|	VoC_add16_rd(REG6,REG6,0x10df)(hi)
0x10F51506,	//0x13d6		VoC_sw16_d(REG6,0x10f5)
0x10F01482,	//0x13d8		VoC_lw32_d(REG45,0x10f0)
0x10F21483,	//0x13da		VoC_lw32_d(REG67,0x10f2)
0xFF457F44,	//0x13dc		VoC_lw32z(ACC1,IN_PARALLEL)	|	VoC_lw32z(ACC0,DEFAULT)
0xCE294E3B,	//0x13de		VoC_mac32_rr(REG5,REG1,IN_PARALLEL)	|	VoC_mac32_rr(REG7,REG3,DEFAULT)
0x0924FFC0,	//0x13e0		VoC_add32_rd(ACC0,ACC0,0x18e6)(lo)	|	VoC_NOP
0x092D18E6,	//0x13e2		VoC_add32_rd(ACC1,ACC1,0x18e6)(lo)	|	VoC_add32_rd(ACC0,ACC0,0x18e6)(hi)
0xDF4318E6,	//0x13e4		VoC_push32(REG67,DEFAULT)	|	VoC_add32_rd(ACC1,ACC1,0x18e6)(hi)
0xFA7D7A7C,	//0x13e6		VoC_shr32_ri(ACC1,0xf,IN_PARALLEL)	|	VoC_shr32_ri(ACC0,0xf,DEFAULT)
0xFFC0CB63,	//0x13e8		VoC_NOP	|	VoC_sub32_rr(REG67,ACC1,ACC0,DEFAULT)
0x10F61506,	//0x13ea		VoC_sw16_d(REG6,0x10f6)
0x7F44DF03,	//0x13ec		VoC_lw32z(ACC0,DEFAULT)	|	VoC_pop32(REG67,DEFAULT)
0x4E33FF45,	//0x13ee		VoC_mac32_rr(REG6,REG3,DEFAULT)	|	VoC_lw32z(ACC1,IN_PARALLEL)
0xFFC0CE21,	//0x13f0		VoC_NOP	|	VoC_mac32_rr(REG4,REG1,IN_PARALLEL)
0x18E60924,	//0x13f2		VoC_add32_rd(ACC0,ACC0,0x18e6)
0x18E6092D,	//0x13f4		VoC_add32_rd(ACC1,ACC1,0x18e6)
0xFA7D7A7C,	//0x13f6		VoC_shr32_ri(ACC1,0xf,IN_PARALLEL)	|	VoC_shr32_ri(ACC0,0xf,DEFAULT)
0xFFC0CB2B,	//0x13f8		VoC_NOP	|	VoC_sub32_rr(REG67,ACC0,ACC1,DEFAULT)
0x10F71506,	//0x13fa		VoC_sw16_d(REG6,0x10f7)
0x1482DF01,	//0x13fc		VoC_lw32_d(REG45,0x10f4)(lo)	|	VoC_pop32(REG23,DEFAULT)
0x148310F4,	//0x13fe		VoC_lw32_d(REG67,0x10f6)(lo)	|	VoC_lw32_d(REG45,0x10f4)(hi)
0x433010F6,	//0x1400		VoC_sub16_rr(REG0,REG4,REG6,DEFAULT)	|	VoC_lw32_d(REG67,0x10f6)(hi)
0x4136C379,	//0x1402		VoC_add16_rr(REG6,REG4,REG6,DEFAULT)	|	VoC_sub16_rr(REG1,REG5,REG7,IN_PARALLEL)
0xDF02C17F,	//0x1404		VoC_pop32(REG45,DEFAULT)	|	VoC_add16_rr(REG7,REG5,REG7,IN_PARALLEL)
0xDF41DF42,	//0x1406		VoC_push32(REG23,DEFAULT)	|	VoC_push32(REG45,DEFAULT)
0xC0AAC0AA,	//0x1408		VoC_add16_rr(REG2,REG2,REG5,DEFAULT)	|	VoC_add16_rr(REG2,REG2,REG5,DEFAULT)
0xDD93FFC0,	//0x140a		VoC_sw32_p(REG67,REG2,DEFAULT)	|	VoC_NOP
0xFFC0C0AA,	//0x140c		VoC_NOP	|	VoC_add16_rr(REG2,REG2,REG5,DEFAULT)
0xDF01DD90,	//0x140e		VoC_pop32(REG23,DEFAULT)	|	VoC_sw32_p(REG01,REG2,DEFAULT)
0x0724DF02,	//0x1410		VoC_add16_rd(REG4,REG4,0x10fc)(lo)	|	VoC_pop32(REG45,DEFAULT)
0x071210FC,	//0x1412		VoC_add16_rd(REG2,REG2,0x18a6)(lo)	|	VoC_add16_rd(REG4,REG4,0x10fc)(hi)
0x072418A6,	//0x1414		VoC_add16_rd(REG4,REG4,0x10fc)(lo)	|	VoC_add16_rd(REG2,REG2,0x18a6)(hi)
		//0x1415		VoC_endloop1
0xDF0710FC,	//0x1416		VoC_pop32(RL7,DEFAULT)	|	VoC_add16_rd(REG4,REG4,0x10fc)(hi)
0xDF03DF06,	//0x1418		VoC_pop32(REG67,DEFAULT)	|	VoC_pop32(RL6,DEFAULT)
0xDF01DF02,	//0x141a		VoC_pop32(REG23,DEFAULT)	|	VoC_pop32(REG45,DEFAULT)
0xDFA9DF00,	//0x141c		VoC_pop16(RA,DEFAULT)	|	VoC_pop32(REG01,DEFAULT)
0xE580FFC0,	//0x141e		VoC_return	|	VoC_NOP
		//0x1420		spx_kf_bfly_generic
0xDFA9DFE9,	//0x1420		VoC_pop16(RA,DEFAULT)	|	VoC_push16(RA,DEFAULT)
0xE580FFC0,	//0x1422		VoC_return	|	VoC_NOP
		//0x1424		spx_kf_work
0xDF40DFE9,	//0x1424		VoC_push32(REG01,DEFAULT)	|	VoC_push16(RA,DEFAULT)
0xDF42DF41,	//0x1426		VoC_push32(REG45,DEFAULT)	|	VoC_push32(REG23,DEFAULT)
0xDF47DF43,	//0x1428		VoC_push32(RL7,DEFAULT)	|	VoC_push32(REG67,DEFAULT)
0xF6AF60EE,	//0x142a		VoC_movreg16(RL7_HI,REG5,IN_PARALLEL)	|	VoC_movreg16(RL7_LO,REG7,DEFAULT)
0xC5A645E7,	//0x142c		VoC_mult16_rr(REG6,REG6,REG4,IN_PARALLEL)	|	VoC_mult16_rr(REG7,REG7,REG4,DEFAULT)
0x402DD9CA,	//0x142e		VoC_be16_rd(SPX_KF_WORK_IF,REG5,0x18a4)(lo)	|	VoC_lw32inc_p(REG45,REG1,DEFAULT)
0xFFC018A4,	//0x1430		VoC_NAD	|	VoC_be16_rd(SPX_KF_WORK_IF,REG5,0x18a4)(hi)
0x14242B80,	//0x1432		VoC_jal(spx_kf_work)
		//0x1434		SPX_KF_WORK_IF
0x10FC1507,	//0x1434		VoC_sw16_d(REG7,0x10fc)
0x10FD1505,	//0x1436		VoC_sw16_d(REG5,0x10fd)
0x10FE1506,	//0x1438		VoC_sw16_d(REG6,0x10fe)
0x10FF150F,	//0x143a		VoC_sw16_d(RL7_HI,0x10ff)
0x18A64434,	//0x143c		VoC_bne16_rd(SPX_KF_SWITCH_P2,REG4,0x18a6)
0x0F5B2B80,	//0x143e		VoC_jal(spx_kf_bfly2)
0x14742B00,	//0x1440		VoC_jump_lg(SPX_KF_SWITCH_END)
		//0x1442		SPX_KF_SWITCH_P2
0x18A84504,	//0x1442		VoC_bne16_rd(SPX_KF_SWITCH_P3,REG4,0x18a8)
0xF005DF42,	//0x1444		VoC_lw16i_short(REG5,0x0,DEFAULT)	|	VoC_push32(REG45,DEFAULT)
		//0x1446		SPX_KF_SWITCH_P2_LOOP_BEGIN
0x144F352E,	//0x1446		VoC_be16_rr(SPX_KF_SWITCH_P2_LOOP_END,REG5,REG6)
0x0FF72B80,	//0x1448		VoC_jal(spx_kf_bfly3)
0xC0A2E1E4,	//0x144a		VoC_add16_rr(REG2,REG2,REG4,DEFAULT)	|	VoC_movreg16(REG4,RL7_HI,DEFAULT)
0x18A4072D,	//0x144c		VoC_add16_rd(REG5,REG5,0x18a4)
0xDF02E5F8,	//0x144e		VoC_pop32(REG45,DEFAULT)	|	VoC_jump(SPX_KF_SWITCH_P2_LOOP_BEGIN)
		//0x144f		SPX_KF_SWITCH_P2_LOOP_END
0x14742B00,	//0x1450		VoC_jump_lg(SPX_KF_SWITCH_END)
		//0x1452		SPX_KF_SWITCH_P3
0x18AA4434,	//0x1452		VoC_bne16_rd(SPX_KF_SWITCH_P4,REG4,0x18aa)
0x10C32B80,	//0x1454		VoC_jal(spx_kf_bfly4)
0xFFC065DE,	//0x1456		VoC_NAD(IN_PARALLEL)	|	VoC_jump(SPX_KF_SWITCH_END)
		//0x1458		SPX_KF_SWITCH_P4
0x18AC4504,	//0x1458		VoC_bne16_rd(SPX_KF_SWITCH_P5,REG4,0x18ac)
0xF005DF42,	//0x145a		VoC_lw16i_short(REG5,0x0,DEFAULT)	|	VoC_push32(REG45,DEFAULT)
		//0x145c		SPX_KF_SWITCH_P4_LOOP_BEGIN
0x1466352E,	//0x145c		VoC_be16_rr(SPX_KF_SWITCH_P4_LOOP_END,REG5,REG6)
0x12792B80,	//0x145e		VoC_jal(spx_kf_bfly5)
0xF8FCE1E4,	//0x1460		VoC_shr16_ri(REG4,0xffffffff,DEFAULT)	|	VoC_movreg16(REG4,RL7_HI,DEFAULT)
0x072DC0A2,	//0x1462		VoC_add16_rd(REG5,REG5,0x18a4)(lo)	|	VoC_add16_rr(REG2,REG2,REG4,DEFAULT)
0xE5F718A4,	//0x1464		VoC_jump(SPX_KF_SWITCH_P4_LOOP_BEGIN)	|	VoC_add16_rd(REG5,REG5,0x18a4)(hi)
		//0x1466		SPX_KF_SWITCH_P4_LOOP_END
0xE5CDDF02,	//0x1466		VoC_jump(SPX_KF_SWITCH_END)	|	VoC_pop32(REG45,DEFAULT)
		//0x1468		SPX_KF_SWITCH_P5
0xF005DF42,	//0x1468		VoC_lw16i_short(REG5,0x0,DEFAULT)	|	VoC_push32(REG45,DEFAULT)
		//0x146a		SPX_KF_SWITCH_DEFAULT_LOOP_BEGIN
0x1473352E,	//0x146a		VoC_be16_rr(SPX_KF_SWITCH_DEFAULT_LOOP_END,REG5,REG6)
0x14202B80,	//0x146c		VoC_jal(spx_kf_bfly_generic)
0xC0A2E1E4,	//0x146e		VoC_add16_rr(REG2,REG2,REG4,DEFAULT)	|	VoC_movreg16(REG4,RL7_HI,DEFAULT)
0x18A4072D,	//0x1470		VoC_add16_rd(REG5,REG5,0x18a4)
0xDF02E5F8,	//0x1472		VoC_pop32(REG45,DEFAULT)	|	VoC_jump(SPX_KF_SWITCH_DEFAULT_LOOP_BEGIN)
		//0x1473		SPX_KF_SWITCH_DEFAULT_LOOP_END
		//0x1474		SPX_KF_SWITCH_END
0xDF03DF07,	//0x1474		VoC_pop32(REG67,DEFAULT)	|	VoC_pop32(RL7,DEFAULT)
0xDF01DF02,	//0x1476		VoC_pop32(REG23,DEFAULT)	|	VoC_pop32(REG45,DEFAULT)
0xDFA9DF00,	//0x1478		VoC_pop16(RA,DEFAULT)	|	VoC_pop32(REG01,DEFAULT)
0xE580FFC0,	//0x147a		VoC_return	|	VoC_NOP
		//0x147c		Rda_speex_preprocess_state_reset
0x7000DFE9,	//0x147c		VoC_lw16i_short(REG0,0x0,DEFAULT)	|	VoC_push16(RA,DEFAULT)
0xF01CE001,	//0x147e		VoC_lw16i_short(WRAP0,0x0,DEFAULT)	|	VoC_lw16i_short(REG1,0x0,IN_PARALLEL)
0xF01EF01D,	//0x1480		VoC_lw16i_short(WRAP2,0x0,DEFAULT)	|	VoC_lw16i_short(WRAP1,0x0,DEFAULT)
0xF01BF01F,	//0x1482		VoC_lw16i_short(BITCACHE,0x0,DEFAULT)	|	VoC_lw16i_short(WRAP3,0x0,DEFAULT)
0x7FC11540,	//0x1484		VoC_sw16_d(REG0,0xffc1)
0x427C1500,	//0x1486		VoC_sw16_d(REG0,0x427c)
0x07931500,	//0x1488		VoC_sw16_d(REG0,0x793)
0x003F0A96,	//0x148a		VoC_lw16i(STATUS,0x3f)
0x1808FF44,	//0x148c		VoC_lw16i_set_inc(REG0,0x330,0x2)(lo)	|	VoC_lw32z(ACC0,DEFAULT)
0x0A860330,	//0x148e		VoC_lw16i(REG6,0x50)(lo)	|	VoC_lw16i_set_inc(REG0,0x330,0x2)(hi)
0x0A870050,	//0x1490		VoC_lw16i(REG7,0x1f40)(lo)	|	VoC_lw16i(REG6,0x50)(hi)
0xFFC01F40,	//0x1492		VoC_NAD	|	VoC_lw16i(REG7,0x1f40)(hi)
0x14992C11,	//0x1494		VoC_loop_i(0x1,0x8)
0x14982D96,	//0x1496		VoC_loop_i(0x0,0xcb)
		//0x1498		VoC_endloop0
0xFFC0DDC4,	//0x1498		VoC_NOP	|	VoC_sw32inc_p(ACC0,REG0,DEFAULT)
		//0x1499		VoC_endloop1
0xDDC4DDC4,	//0x149a		VoC_sw32inc_p(ACC0,REG0,DEFAULT)	|	VoC_sw32inc_p(ACC0,REG0,DEFAULT)
0xDDC4DDC4,	//0x149c		VoC_sw32inc_p(ACC0,REG0,DEFAULT)	|	VoC_sw32inc_p(ACC0,REG0,DEFAULT)
0x1506DDC4,	//0x149e		VoC_sw16_d(REG6,0x330)(lo)	|	VoC_sw32inc_p(ACC0,REG0,DEFAULT)
0x15060330,	//0x14a0		VoC_sw16_d(REG6,0x331)(lo)	|	VoC_sw16_d(REG6,0x330)(hi)
0x15070331,	//0x14a2		VoC_sw16_d(REG7,0x332)(lo)	|	VoC_sw16_d(REG6,0x331)(hi)
0x0A810332,	//0x14a4		VoC_lw16i(REG1,0x1)(lo)	|	VoC_sw16_d(REG7,0x332)(hi)
0x14020001,	//0x14a6		VoC_lw16_d(REG2,0x40e6)(lo)	|	VoC_lw16i(REG1,0x1)(hi)
0x0AC340E6,	//0x14a8		VoC_lw16i(REG3,0xffffffc4)(lo)	|	VoC_lw16_d(REG2,0x40e6)(hi)
0x0AC47FC4,	//0x14aa		VoC_lw16i(REG4,0xffffffd8)(lo)	|	VoC_lw16i(REG3,0xffffffc4)(hi)
0x0A857FD8,	//0x14ac		VoC_lw16i(REG5,0x2ccd)(lo)	|	VoC_lw16i(REG4,0xffffffd8)(hi)
0x0A862CCD,	//0x14ae		VoC_lw16i(REG6,0x199a)(lo)	|	VoC_lw16i(REG5,0x2ccd)(hi)
0x0A87199A,	//0x14b0		VoC_lw16i(REG7,0x18)(lo)	|	VoC_lw16i(REG6,0x199a)(hi)
0x15010018,	//0x14b2		VoC_sw16_d(REG1,0x334)(lo)	|	VoC_lw16i(REG7,0x18)(hi)
0x15020334,	//0x14b4		VoC_sw16_d(REG2,0x33b)(lo)	|	VoC_sw16_d(REG1,0x334)(hi)
0x1503033B,	//0x14b6		VoC_sw16_d(REG3,0x33c)(lo)	|	VoC_sw16_d(REG2,0x33b)(hi)
0x1504033C,	//0x14b8		VoC_sw16_d(REG4,0x33d)(lo)	|	VoC_sw16_d(REG3,0x33c)(hi)
0x1505033D,	//0x14ba		VoC_sw16_d(REG5,0x339)(lo)	|	VoC_sw16_d(REG4,0x33d)(hi)
0x15060339,	//0x14bc		VoC_sw16_d(REG6,0x33a)(lo)	|	VoC_sw16_d(REG5,0x339)(hi)
0x1507033A,	//0x14be		VoC_sw16_d(REG7,0x333)(lo)	|	VoC_sw16_d(REG6,0x33a)(hi)
0x0A8A0333,	//0x14c0		VoC_lw16i(ACC1_LO,0x80)(lo)	|	VoC_sw16_d(REG7,0x333)(hi)
0x0A8B0080,	//0x14c2		VoC_lw16i(ACC1_HI,0x0)(lo)	|	VoC_lw16i(ACC1_LO,0x80)(hi)
0x18080000,	//0x14c4		VoC_lw16i_set_inc(REG0,0x794,0x2)(lo)	|	VoC_lw16i(ACC1_HI,0x0)(hi)
0x2CD00794,	//0x14c6		VoC_loop_i(0x0,0x68)(lo)	|	VoC_lw16i_set_inc(REG0,0x794,0x2)(hi)
0xDDC514C9,	//0x14c8		VoC_sw32inc_p(ACC1,REG0,DEFAULT)	|	VoC_loop_i(0x0,0x68)(hi)
		//0x14c9		VoC_endloop0
0x00010A8A,	//0x14ca		VoC_lw16i(ACC1_LO,0x1)
0x00000A8B,	//0x14cc		VoC_lw16i(ACC1_HI,0x0)
0x09341808,	//0x14ce		VoC_lw16i_set_inc(REG0,0x934,0x2)
0x14D22CD0,	//0x14d0		VoC_loop_i(0x0,0x68)
		//0x14d2		VoC_endloop0
0x0A8ADDC5,	//0x14d2		VoC_lw16i(ACC1_LO,0x7fff)(lo)	|	VoC_sw32inc_p(ACC1,REG0,DEFAULT)
0x18047FFF,	//0x14d4		VoC_lw16i_set_inc(REG0,0x480,0x1)(lo)	|	VoC_lw16i(ACC1_LO,0x7fff)(hi)
0x2CD00480,	//0x14d6		VoC_loop_i(0x0,0x68)(lo)	|	VoC_lw16i_set_inc(REG0,0x480,0x1)(hi)
0xDC8A14D9,	//0x14d8		VoC_sw16inc_p(ACC1_LO,REG0,DEFAULT)	|	VoC_loop_i(0x0,0x68)(hi)
		//0x14d9		VoC_endloop0
0x01000A8A,	//0x14da		VoC_lw16i(ACC1_LO,0x100)
0x05501804,	//0x14dc		VoC_lw16i_set_inc(REG0,0x550,0x1)
0x14E02CD0,	//0x14de		VoC_loop_i(0x0,0x68)
		//0x14e0		VoC_endloop0
0x0A8ADC8A,	//0x14e0		VoC_lw16i(ACC1_LO,0x100)(lo)	|	VoC_sw16inc_p(ACC1_LO,REG0,DEFAULT)
0x18040100,	//0x14e2		VoC_lw16i_set_inc(REG0,0x4e8,0x1)(lo)	|	VoC_lw16i(ACC1_LO,0x100)(hi)
0x2CD004E8,	//0x14e4		VoC_loop_i(0x0,0x68)(lo)	|	VoC_lw16i_set_inc(REG0,0x4e8,0x1)(hi)
0xDC8A14E7,	//0x14e6		VoC_sw16inc_p(ACC1_LO,REG0,DEFAULT)	|	VoC_loop_i(0x0,0x68)(hi)
		//0x14e7		VoC_endloop0
0x00010A8A,	//0x14e8		VoC_lw16i(ACC1_LO,0x1)
0x0CB41804,	//0x14ea		VoC_lw16i_set_inc(REG0,0xcb4,0x1)
0x14EE2CA0,	//0x14ec		VoC_loop_i(0x0,0x50)
		//0x14ee		VoC_endloop0
0x1804DC8A,	//0x14ee		VoC_lw16i_set_inc(REG0,0xfea,0x1)(lo)	|	VoC_sw16inc_p(ACC1_LO,REG0,DEFAULT)
0x2CA00FEA,	//0x14f0		VoC_loop_i(0x0,0x50)(lo)	|	VoC_lw16i_set_inc(REG0,0xfea,0x1)(hi)
0xDC8A14F3,	//0x14f2		VoC_sw16inc_p(ACC1_LO,REG0,DEFAULT)	|	VoC_loop_i(0x0,0x50)(hi)
		//0x14f3		VoC_endloop0
0xFFC0DFA9,	//0x14f4		VoC_NOP	|	VoC_pop16(RA,DEFAULT)
0xFFC0E580,	//0x14f6		VoC_NAD	|	VoC_return
