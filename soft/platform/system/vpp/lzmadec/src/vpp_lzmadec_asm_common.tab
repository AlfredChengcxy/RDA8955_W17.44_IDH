		//0x0000		VoC_code_section_0
		//0x0000		vpp_LzmaDecMain
0x003F1794,	//0x0000		VoC_cfg_lg(0x3f,)
		//0x0002		vpp_LzmaDecMain_L0
0x27FF0AAA,	//0x0002		VoC_lw16i(SP16,0x27ff)
0x67FE0AAB,	//0x0004		VoC_lw16i(SP32,0x67fe)
0x003F1794,	//0x0006		VoC_cfg_lg(0x3f,)
0x00081792,	//0x0008		VoC_cfg_lg(0x8,)
0x00122B80,	//0x000a		VoC_jal(Coolsand_LzmaDec)
0x00101792,	//0x000c		VoC_cfg_lg(0x10,)
0xFFC0DEA0,	//0x000e		VoC_NOP	|	VoC_cfg(0x20)
0xE5F1FFC0,	//0x0010		VoC_jump(vpp_LzmaDecMain_L0)	|	VoC_NOP
		//0x0012		Coolsand_LzmaDec
0xFFC05FE9,	//0x0012		VoC_NAD(IN_PARALLEL)	|	VoC_push16(RA,DEFAULT)
0x00FC2B80,	//0x0014		VoC_jal(Coolsand_LzmaDecReset)
0x00000A84,	//0x0016		VoC_lw16i(REG4,0x0)
0x02000A85,	//0x0018		VoC_lw16i(REG5,0x200)
0x24001484,	//0x001a		VoC_lw32_d(ACC0,0x2400)
0x7FC31544,	//0x001c		VoC_sw16_d(REG4,0xffc3)
0x7FC21545,	//0x001e		VoC_sw16_d(REG5,0xffc2)
0x7FC415C4,	//0x0020		VoC_sw32_d(ACC0,0xffc4)
0xFFC0DE80,	//0x0022		VoC_NOP	|	VoC_cfg(0x0)
0x00081794,	//0x0024		VoC_cfg_lg(0x8,)
0xFBF2FA82,	//0x0026		VoC_shr32_ri(REG45,0xfffffffe,DEFAULT)	|	VoC_shr32_ri(REG45,0x10,DEFAULT)
0x1804C8A2,	//0x0028		VoC_lw16i_set_inc(REG0,0x0,0x1)(lo)	|	VoC_add32_rr(REG45,REG45,ACC0,DEFAULT)
0x15820000,	//0x002a		VoC_sw32_d(REG45,0x2400)(lo)	|	VoC_lw16i_set_inc(REG0,0x0,0x1)(hi)
0xF15C2400,	//0x002c		VoC_lw16i_short(WRAP0,0xa,DEFAULT)	|	VoC_sw32_d(REG45,0x2400)(hi)
0x62A0E240,	//0x002e		VoC_rbinc_i(REG4,0x8,DEFAULT)	|	VoC_lbinc_p(REG0)
0x180AFF44,	//0x0030		VoC_lw16i_set_inc(REG2,0x240c,0x2)(lo)	|	VoC_lw32z(ACC0,IN_PARALLEL)
0x1504240C,	//0x0032		VoC_sw16_d(REG4,0x240a)(lo)	|	VoC_lw16i_set_inc(REG2,0x240c,0x2)(hi)
0xFFC0240A,	//0x0034		VoC_NAD	|	VoC_sw16_d(REG4,0x240a)(hi)
0x00412C07,	//0x0036		VoC_loop_i(0x1,0x3)
0x00001FA1,	//0x0038		VoC_lw16i_set_inc(REG1,0x0,0xfffffff8)
0xE0056886,	//0x003a		VoC_lw16i_short(REG5,0x0,IN_PARALLEL)	|	VoC_loop_i_short(0x4,DEFAULT)
0xFECAE2A0,	//0x003c		VoC_shru32_rr(REG45,REG1,DEFAULT)	|	VoC_rbinc_i(REG4,0x8,DEFAULT)
0xDE086514,	//0x003e		VoC_inc_p(REG1,IN_PARALLEL)	|	VoC_or32_rr(ACC0,REG45,DEFAULT)
		//0x0040		VoC_endloop0
0x5DD4E240,	//0x0040		VoC_sw32inc_p(ACC0,REG2,DEFAULT)	|	VoC_lbinc_p(REG0)
		//0x0041		VoC_endloop1
0x0A81FF44,	//0x0042		VoC_lw16i(REG1,0xe1)(lo)	|	VoC_lw32z(ACC0,IN_PARALLEL)
0x4C2900E1,	//0x0044		VoC_bnlt16_rd(Coolsand_LzmaDec_L0,REG1,0x240a)(lo)	|	VoC_lw16i(REG1,0xe1)(hi)
0xF027240A,	//0x0046		VoC_lw16i_short(REG7,0x1,DEFAULT)	|	VoC_bnlt16_rd(Coolsand_LzmaDec_L0,REG1,0x240a)(hi)
0x00BC2B00,	//0x0048		VoC_jump_lg(Coolsand_LzmaDec_End)
		//0x004a		Coolsand_LzmaDec_L0
0x279DF126,	//0x004a		VoC_lw16d_set_inc(REG1,0x240a,0xfffffff7)(lo)	|	VoC_lw16i_short(REG6,0x9,DEFAULT)
0x1806240A,	//0x004c		VoC_lw16i_set_inc(REG2,0x0,0x1)(lo)	|	VoC_lw16d_set_inc(REG1,0x240a,0xfffffff7)(hi)
0xFFC00000,	//0x004e		VoC_NAD	|	VoC_lw16i_set_inc(REG2,0x0,0x1)(hi)
		//0x0050		Coolsand_LzmaDec_L1
0x00563431,	//0x0050		VoC_bgt16_rr(Coolsand_LzmaDec_L2,REG6,REG1)
0xDE085E10,	//0x0052		VoC_inc_p(REG1,IN_PARALLEL)	|	VoC_inc_p(REG2,DEFAULT)
0xFFC065FC,	//0x0054		VoC_NAD(IN_PARALLEL)	|	VoC_jump(Coolsand_LzmaDec_L1)
		//0x0056		Coolsand_LzmaDec_L2
0xE0567772,	//0x0056		VoC_lw16i_short(REG6,0x5,IN_PARALLEL)	|	VoC_lw16i_short(INC2,0xfffffffb,DEFAULT)
0x00001807,	//0x0058		VoC_lw16i_set_inc(REG3,0x0,0x1)
		//0x005a		Coolsand_LzmaDec_L3
0x00603432,	//0x005a		VoC_bgt16_rr(Coolsand_LzmaDec_L4,REG6,REG2)
0xDE105E18,	//0x005c		VoC_inc_p(REG2,IN_PARALLEL)	|	VoC_inc_p(REG3,DEFAULT)
0xFFC065FC,	//0x005e		VoC_NAD(IN_PARALLEL)	|	VoC_jump(Coolsand_LzmaDec_L3)
		//0x0060		Coolsand_LzmaDec_L4
0xE0157004,	//0x0060		VoC_lw16i_short(REG5,0x1,IN_PARALLEL)	|	VoC_lw16i_short(REG4,0x0,DEFAULT)
0xE0177026,	//0x0062		VoC_lw16i_short(REG7,0x1,IN_PARALLEL)	|	VoC_lw16i_short(REG6,0x1,DEFAULT)
0xC314431B,	//0x0064		VoC_sub16_rr(REG4,REG4,REG2,IN_PARALLEL)	|	VoC_sub16_rr(REG3,REG4,REG3,DEFAULT)
0xFE277E1E,	//0x0066		VoC_shr16_rr(REG7,REG4,IN_PARALLEL)	|	VoC_shr16_rr(REG6,REG3,DEFAULT)
0xC3EF43AE,	//0x0068		VoC_sub16_rr(REG7,REG7,REG5,IN_PARALLEL)	|	VoC_sub16_rr(REG6,REG6,REG5,DEFAULT)
0x242E1501,	//0x006a		VoC_sw16_d(REG1,0x242e)
0x242C1506,	//0x006c		VoC_sw16_d(REG6,0x242c)
0x242D1507,	//0x006e		VoC_sw16_d(REG7,0x242d)
0x240A6E04,	//0x0070		VoC_bnez16_d(Coolsand_LzmaDec_L5,0x240a)
0x240A1505,	//0x0072		VoC_sw16_d(REG5,0x240a)
		//0x0074		Coolsand_LzmaDec_L5
0xE0044055,	//0x0074		VoC_lw16i_short(REG4,0x0,IN_PARALLEL)	|	VoC_add16_rr(REG5,REG1,REG2,DEFAULT)
0x07360A86,	//0x0076		VoC_lw16i(REG6,0x736)
0x03000A87,	//0x0078		VoC_lw16i(REG7,0x300)
0xFE2FC32D,	//0x007a		VoC_shr16_rr(REG7,REG5,DEFAULT)	|	VoC_sub16_rr(REG5,REG4,REG5,DEFAULT)
0xF3FD41B9,	//0x007c		VoC_lw16i_short(INC1,0xffffffff,IN_PARALLEL)	|	VoC_add16_rr(REG1,REG6,REG7,DEFAULT)
0x04000A86,	//0x007e		VoC_lw16i(REG6,0x400)
0x04001806,	//0x0080		VoC_lw16i_set_inc(REG2,0x400,0x1)
		//0x0082		Coolsand_LzmaDec_L6
0x00883141,	//0x0082		VoC_bngtz16_r(Coolsand_LzmaDec_L7,REG1)
0xDE085CA6,	//0x0084		VoC_inc_p(REG1,IN_PARALLEL)	|	VoC_sw16inc_p(REG6,REG2,DEFAULT)
0xFFC065FC,	//0x0086		VoC_NAD(IN_PARALLEL)	|	VoC_jump(Coolsand_LzmaDec_L6)
		//0x0088		Coolsand_LzmaDec_L7
0xFF4568A6,	//0x0088		VoC_lw32z(ACC1,IN_PARALLEL)	|	VoC_loop_i_short(0x5,DEFAULT)
0x62A0FDC5,	//0x008a		VoC_rbinc_i(REG4,0x8,DEFAULT)	|	VoC_shru32_ri(ACC1,0xfffffff8,DEFAULT)
0xE515E005,	//0x008c		VoC_or32_rr(ACC1,REG45,DEFAULT)	|	VoC_lw16i_short(REG5,0x0,IN_PARALLEL)
		//0x008e		VoC_endloop0
0x1483E240,	//0x008e		VoC_lw32_d(REG67,0x2426)(lo)	|	VoC_lbinc_p(REG0)
0x15852426,	//0x0090		VoC_sw32_d(ACC1,0x2424)(lo)	|	VoC_lw32_d(REG67,0x2426)(hi)
0x14872424,	//0x0092		VoC_lw32_d(RL7,0x2428)(lo)	|	VoC_sw32_d(ACC1,0x2424)(hi)
0x70962428,	//0x0094		VoC_lw16i_short(STATUS,0x4,DEFAULT)	|	VoC_lw32_d(RL7,0x2428)(hi)
0x0A96FF44,	//0x0096		VoC_lw16i(STATUS,0x60)(lo)	|	VoC_lw32z(ACC0,IN_PARALLEL)
0x0A960060,	//0x0098		VoC_lw16i(STATUS,0x48)(lo)	|	VoC_lw16i(STATUS,0x60)(hi)
0x70190048,	//0x009a		VoC_lw16i_short(FORMAT32,0x0,DEFAULT)	|	VoC_lw16i(STATUS,0x48)(hi)
0xFFC0F58A,	//0x009c		VoC_NAD	|	VoC_lw16i_short(FORMATX,0xfffffff1,IN_PARALLEL)
		//0x009e		Coolsand_LzmaDec_L8
0x241E1482,	//0x009e		VoC_lw32_d(REG45,0x241e)
0x240E659A,	//0x00a0		VoC_bnlt32_rd(Coolsand_LzmaDec_L10,REG45,0x240e)
0x242C2804,	//0x00a2		VoC_and16_rd(REG4,0x242c)
0x04000A81,	//0x00a4		VoC_lw16i(REG1,0x400)
0x24121405,	//0x00a6		VoC_lw16_d(REG5,0x2412)
0xC06178E5,	//0x00a8		VoC_add16_rr(REG1,REG1,REG4,IN_PARALLEL)	|	VoC_shr16_ri(REG5,0xfffffffc,DEFAULT)
0xC06B7096,	//0x00aa		VoC_add16_rr(REG3,REG1,REG5,IN_PARALLEL)	|	VoC_lw16i_short(STATUS,0x4,DEFAULT)
0x24301504,	//0x00ac		VoC_sw16_d(REG4,0x2430)
0x01302B80,	//0x00ae		VoC_jal(Coolsand_rc_is_bit_0)
0x00440A96,	//0x00b0		VoC_lw16i(STATUS,0x44)
0x30C0CB79,	//0x00b2		VoC_bncz16_r(Coolsand_LzmaDec_L9)(lo)	|	VoC_sub32_rr(REG23,ACC1,RL7,DEFAULT)
0x2B8000B8,	//0x00b4		VoC_jal(Coolsand_process_bit0)(lo)	|	VoC_bncz16_r(Coolsand_LzmaDec_L9)(hi)
0xE5E70158,	//0x00b6		VoC_jump(Coolsand_LzmaDec_L8)	|	VoC_jal(Coolsand_process_bit0)(hi)
		//0x00b8		Coolsand_LzmaDec_L9
0x01C02B80,	//0x00b8		VoC_jal(Coolsand_process_bit1)
0xF007E5E4,	//0x00ba		VoC_lw16i_short(REG7,0x0,DEFAULT)	|	VoC_jump(Coolsand_LzmaDec_L8)
		//0x00bb		Coolsand_LzmaDec_L10
		//0x00bc		Coolsand_LzmaDec_End
0x00080A96,	//0x00bc		VoC_lw16i(STATUS,0x8)
0x00200A96,	//0x00be		VoC_lw16i(STATUS,0x20)
0x241E1481,	//0x00c0		VoC_lw32_d(REG23,0x241e)
0x2432098A,	//0x00c2		VoC_sub32_rd(REG45,REG23,0x2432)
0x24081581,	//0x00c4		VoC_sw32_d(REG23,0x2408)
0xE0017066,	//0x00c6		VoC_lw16i_short(REG1,0x0,IN_PARALLEL)	|	VoC_lw16i_short(REG6,0x3,DEFAULT)
0xFA126432,	//0x00c8		VoC_shr32_ri(REG45,0x2,IN_PARALLEL)	|	VoC_and16_rr(REG2,REG6,DEFAULT)
0x00D63182,	//0x00ca		VoC_bez16_r(Coolsand_LzmaDec_L11,REG2)
0x78E9C391,	//0x00cc		VoC_shr16_ri(REG1,0xfffffffd,DEFAULT)	|	VoC_sub16_rr(REG1,REG6,REG2,DEFAULT)
0x7ECCE010,	//0x00ce		VoC_shru32_rr(ACC0,REG1,DEFAULT)	|	VoC_lw16i_short(REG0,0x1,IN_PARALLEL)
0x1402E001,	//0x00d0		VoC_lw16_d(REG2,0x2434)(lo)	|	VoC_lw16i_short(REG1,0x0,IN_PARALLEL)
0xC8822434,	//0x00d2		VoC_add32_rr(REG45,REG45,REG01,DEFAULT)	|	VoC_lw16_d(REG2,0x2434)(hi)
0xFFC05D94,	//0x00d4		VoC_NAD(IN_PARALLEL)	|	VoC_sw32_p(ACC0,REG2,DEFAULT)
		//0x00d6		Coolsand_LzmaDec_L11
0x00E832C2,	//0x00d6		VoC_bngtz32_r(Coolsand_LzmaDec_L12,REG45)
0x20000A86,	//0x00d8		VoC_lw16i(REG6,0x2000)
0x24021481,	//0x00da		VoC_lw32_d(REG23,0x2402)
0x24320909,	//0x00dc		VoC_add32_rd(REG23,REG23,0x2432)
0x7FC31546,	//0x00de		VoC_sw16_d(REG6,0xffc3)
0x7FC21544,	//0x00e0		VoC_sw16_d(REG4,0xffc2)
0x7FC415C1,	//0x00e2		VoC_sw32_d(REG23,0xffc4)
0xFFC0DE80,	//0x00e4		VoC_NOP	|	VoC_cfg(0x0)
0x00081794,	//0x00e6		VoC_cfg_lg(0x8,)
		//0x00e8		Coolsand_LzmaDec_L12
0x12030A86,	//0x00e8		VoC_lw16i(REG6,0x1203)
0x00020A84,	//0x00ea		VoC_lw16i(REG4,0x2)
0x24041481,	//0x00ec		VoC_lw32_d(REG23,0x2404)
0x7FC31546,	//0x00ee		VoC_sw16_d(REG6,0xffc3)
0x7FC21544,	//0x00f0		VoC_sw16_d(REG4,0xffc2)
0x7FC415C1,	//0x00f2		VoC_sw32_d(REG23,0xffc4)
0xFFC0DE80,	//0x00f4		VoC_NOP	|	VoC_cfg(0x0)
0x00081794,	//0x00f6		VoC_cfg_lg(0x8,)
0x1507DFA9,	//0x00f8		VoC_sw16_d(REG7,0x2407)(lo)	|	VoC_pop16(RA,DEFAULT)
0xE5802407,	//0x00fa		VoC_return	|	VoC_sw16_d(REG7,0x2407)(hi)
		//0x00fc		Coolsand_LzmaDecReset
0xE0017000,	//0x00fc		VoC_lw16i_short(REG1,0x0,IN_PARALLEL)	|	VoC_lw16i_short(REG0,0x0,DEFAULT)
0xF01DF01C,	//0x00fe		VoC_lw16i_short(WRAP1,0x0,DEFAULT)	|	VoC_lw16i_short(WRAP0,0x0,DEFAULT)
0xF01FF01E,	//0x0100		VoC_lw16i_short(WRAP3,0x0,DEFAULT)	|	VoC_lw16i_short(WRAP2,0x0,DEFAULT)
0x1540F01B,	//0x0102		VoC_sw16_d(REG0,0xffc1)(lo)	|	VoC_lw16i_short(BITCACHE,0x0,DEFAULT)
0x0A967FC1,	//0x0104		VoC_lw16i(STATUS,0x3f)(lo)	|	VoC_sw16_d(REG0,0xffc1)(hi)
0x7026003F,	//0x0106		VoC_lw16i_short(REG6,0x1,DEFAULT)	|	VoC_lw16i(STATUS,0x3f)(hi)
0x1580E007,	//0x0108		VoC_sw32_d(REG01,0x2412)(lo)	|	VoC_lw16i_short(REG7,0x0,IN_PARALLEL)
0x15832412,	//0x010a		VoC_sw32_d(REG67,0x2414)(lo)	|	VoC_sw32_d(REG01,0x2412)(hi)
0x15832414,	//0x010c		VoC_sw32_d(REG67,0x2416)(lo)	|	VoC_sw32_d(REG67,0x2414)(hi)
0x15832416,	//0x010e		VoC_sw32_d(REG67,0x2418)(lo)	|	VoC_sw32_d(REG67,0x2416)(hi)
0x15832418,	//0x0110		VoC_sw32_d(REG67,0x241a)(lo)	|	VoC_sw32_d(REG67,0x2418)(hi)
0x1500241A,	//0x0112		VoC_sw16_d(REG0,0x241c)(lo)	|	VoC_sw32_d(REG67,0x241a)(hi)
0x1580241C,	//0x0114		VoC_sw32_d(REG01,0x241e)(lo)	|	VoC_sw16_d(REG0,0x241c)(hi)
0x77E2241E,	//0x0116		VoC_lw16i_short(REG2,0xffffffff,DEFAULT)	|	VoC_sw32_d(REG01,0x241e)(hi)
0x1580EFF3,	//0x0118		VoC_sw32_d(REG01,0x2424)(lo)	|	VoC_lw16i_short(REG3,0xffffffff,IN_PARALLEL)
0x15812424,	//0x011a		VoC_sw32_d(REG23,0x2426)(lo)	|	VoC_sw32_d(REG01,0x2424)(hi)
0x15802426,	//0x011c		VoC_sw32_d(REG01,0x2432)(lo)	|	VoC_sw32_d(REG23,0x2426)(hi)
0x15812432,	//0x011e		VoC_sw32_d(REG23,0x2408)(lo)	|	VoC_sw32_d(REG01,0x2432)(hi)
0x70202408,	//0x0120		VoC_lw16i_short(REG0,0x1,DEFAULT)	|	VoC_sw32_d(REG23,0x2408)(hi)
0x0A82E001,	//0x0122		VoC_lw16i(REG2,0x4000)(lo)	|	VoC_lw16i_short(REG1,0x0,IN_PARALLEL)
0x0A844000,	//0x0124		VoC_lw16i(REG4,0x100)(lo)	|	VoC_lw16i(REG2,0x4000)(hi)
0xFB480100,	//0x0126		VoC_shr32_ri(REG01,0xffffffe9,DEFAULT)	|	VoC_lw16i(REG4,0x100)(hi)
0x24341502,	//0x0128		VoC_sw16_d(REG2,0x2434)
0x242A1580,	//0x012a		VoC_sw32_d(REG01,0x242a)
0x24371504,	//0x012c		VoC_sw16_d(REG4,0x2437)
0xFFC06580,	//0x012e		VoC_NAD(IN_PARALLEL)	|	VoC_return
		//0x0130		Coolsand_rc_is_bit_0
0xFF1A7C0B,	//0x0130		VoC_movreg32(REG45,REG67,IN_PARALLEL)	|	VoC_shru32_ri(REG67,0x1,DEFAULT)
0x242A6593,	//0x0132		VoC_bnlt32_rd(Coolsand_rc_is_bit_0_L0,REG67,0x242a)
0xFDC57DC2,	//0x0134		VoC_shru32_ri(ACC1,0xfffffff8,IN_PARALLEL)	|	VoC_shru32_ri(REG45,0xfffffff8,DEFAULT)
0xE00762A2,	//0x0136		VoC_lw16i_short(REG7,0x0,IN_PARALLEL)	|	VoC_rbinc_i(REG6,0x8,DEFAULT)
0x31C0E51D,	//0x0138		VoC_bnez16_r(Coolsand_rc_is_bit_0_L0,REG0)(lo)	|	VoC_or32_rr(ACC1,REG67,DEFAULT)
0x151B014C,	//0x013a		VoC_sw16_d(BITCACHE,0x2435)(lo)	|	VoC_bnez16_r(Coolsand_rc_is_bit_0_L0,REG0)(hi)
0xF2062435,	//0x013c		VoC_lw16i_short(REG6,0x10,DEFAULT)	|	VoC_sw16_d(BITCACHE,0x2435)(hi)
0x243548B6,	//0x013e		VoC_blt16_rd(Coolsand_rc_is_bit_0_L0,REG6,0x2435)
0xDF445FE9,	//0x0140		VoC_push32(ACC0,IN_PARALLEL)	|	VoC_push16(RA,DEFAULT)
0x04B42B80,	//0x0142		VoC_jal(Coolsand_LzmaDmaInData)
0xFBF3FA83,	//0x0144		VoC_shr32_ri(REG67,0xfffffffe,DEFAULT)	|	VoC_shr32_ri(REG67,0x10,DEFAULT)
0xC8E35FA9,	//0x0146		VoC_add32_rr(REG67,REG67,ACC0,IN_PARALLEL)	|	VoC_pop16(RA,DEFAULT)
0x1583DF04,	//0x0148		VoC_sw32_d(REG67,0x2400)(lo)	|	VoC_pop32(ACC0,DEFAULT)
0xFFC02400,	//0x014a		VoC_NAD	|	VoC_sw32_d(REG67,0x2400)(hi)
		//0x014c		Coolsand_rc_is_bit_0_L0
0xFF137C52,	//0x014c		VoC_movreg32(REG67,REG45,IN_PARALLEL)	|	VoC_shru32_ri(REG45,0xa,DEFAULT)
0xDF44790C,	//0x014e		VoC_push32(ACC0,IN_PARALLEL)	|	VoC_shru16_ri(REG4,0x1,DEFAULT)
0x991C7096,	//0x0150		VoC_multf32_rp(ACC0,REG4,REG3,IN_PARALLEL)	|	VoC_lw16i_short(STATUS,0x4,DEFAULT)
0xF664506B,	//0x0152		VoC_movreg16(REG4,REG3,IN_PARALLEL)	|	VoC_macX_rp(REG5,REG3,DEFAULT)
0x5F04E240,	//0x0154		VoC_pop32(ACC0,DEFAULT)	|	VoC_lbinc_p(REG0)
0xE580FF27,	//0x0156		VoC_return	|	VoC_movreg32(RL7,ACC0,IN_PARALLEL)
		//0x0158		Coolsand_process_bit0
0x08000A85,	//0x0158		VoC_lw16i(REG5,0x800)
0x85657F3B,	//0x015a		VoC_sub16_rp(REG5,REG5,REG4,IN_PARALLEL)	|	VoC_movreg32(REG67,RL7,DEFAULT)
0xE082792D,	//0x015c		VoC_lw16i_short(REG2,0x8,IN_PARALLEL)	|	VoC_shru16_ri(REG5,0x5,DEFAULT)
0x81656021,	//0x015e		VoC_add16_rp(REG5,REG5,REG4,IN_PARALLEL)	|	VoC_movreg16(REG1,REG1,DEFAULT)
0x241E1404,	//0x0160		VoC_lw16_d(REG4,0x241e)
0xDC457096,	//0x0162		VoC_sw16_p(REG5,REG4,IN_PARALLEL)	|	VoC_lw16i_short(STATUS,0x4,DEFAULT)
0x242E1405,	//0x0164		VoC_lw16_d(REG5,0x242e)
0x242D2804,	//0x0166		VoC_and16_rd(REG4,0x242d)
0xC2AA7001,	//0x0168		VoC_sub16_rr(REG2,REG2,REG5,IN_PARALLEL)	|	VoC_lw16i_short(REG1,0x0,DEFAULT)
0xC26D7021,	//0x016a		VoC_sub16_rr(REG5,REG1,REG5,IN_PARALLEL)	|	VoC_lw16i_short(REG1,0x1,DEFAULT)
0x241C1403,	//0x016c		VoC_lw16_d(REG3,0x241c)
0xFE537E6C,	//0x016e		VoC_shru16_rr(REG3,REG2,IN_PARALLEL)	|	VoC_shru16_rr(REG4,REG5,DEFAULT)
0xC0E35FE9,	//0x0170		VoC_add16_rr(REG3,REG3,REG4,IN_PARALLEL)	|	VoC_push16(RA,DEFAULT)
0x03000A82,	//0x0172		VoC_lw16i(REG2,0x300)
0x0A84C4D3,	//0x0174		VoC_lw16i(REG4,0xb36)(lo)	|	VoC_mult16_rr(REG3,REG3,REG2,DEFAULT)
0x70E50B36,	//0x0176		VoC_lw16i_short(REG5,0x7,DEFAULT)	|	VoC_lw16i(REG4,0xb36)(hi)
0x1402C0E3,	//0x0178		VoC_lw16_d(REG2,0x2412)(lo)	|	VoC_add16_rr(REG3,REG3,REG4,IN_PARALLEL)
0x15032412,	//0x017a		VoC_sw16_d(REG3,0x2431)(lo)	|	VoC_lw16_d(REG2,0x2412)(hi)
0x342A2431,	//0x017c		VoC_bgt16_rr(Coolsand_process_bit0_L3,REG5,REG2)(lo)	|	VoC_sw16_d(REG3,0x2431)(hi)
0x1482019E,	//0x017e		VoC_lw32_d(REG45,0x2414)(lo)	|	VoC_bgt16_rr(Coolsand_process_bit0_L3,REG5,REG2)(hi)
0xFFC02414,	//0x0180		VoC_NAD	|	VoC_lw32_d(REG45,0x2414)(hi)
0x03A22B80,	//0x0182		VoC_jal(Coolsand_peek_old_byte)
0x01000A85,	//0x0184		VoC_lw16i(REG5,0x100)
		//0x0186		Coolsand_process_bit0_L0
0x642CF9FC,	//0x0186		VoC_and16_rr(REG4,REG5,DEFAULT)	|	VoC_shru16_ri(REG4,0xffffffff,DEFAULT)
0x7096C06B,	//0x0188		VoC_lw16i_short(STATUS,0x4,DEFAULT)	|	VoC_add16_rr(REG3,REG1,REG5,IN_PARALLEL)
0x0724DF42,	//0x018a		VoC_add16_rd(REG4,REG4,0x2431)(lo)	|	VoC_push32(REG45,IN_PARALLEL)
0x411B2431,	//0x018c		VoC_add16_rr(REG3,REG4,REG3,DEFAULT)	|	VoC_add16_rd(REG4,REG4,0x2431)(hi)
0xFFC0DFC4,	//0x018e		VoC_NAD	|	VoC_push16(REG4,IN_PARALLEL)
0x03E42B80,	//0x0190		VoC_jal(Coolsand_rc_get_bit)
0xDF025F83,	//0x0192		VoC_pop32(REG45,IN_PARALLEL)	|	VoC_pop16(REG3,DEFAULT)
0x019A3182,	//0x0194		VoC_bez16_r(Coolsand_process_bit0_L1,REG2)
0x019E3183,	//0x0196		VoC_bez16_r(Coolsand_process_bit0_L3,REG3)
0xFFC065C4,	//0x0198		VoC_NAD(IN_PARALLEL)	|	VoC_jump(Coolsand_process_bit0_L2)
		//0x019a		Coolsand_process_bit0_L1
0x019E31C3,	//0x019a		VoC_bnez16_r(Coolsand_process_bit0_L3,REG3)
		//0x019c		Coolsand_process_bit0_L2
0x24374A91,	//0x019c		VoC_blt16_rd(Coolsand_process_bit0_L0,REG1,0x2437)
		//0x019e		Coolsand_process_bit0_L3
0x24374C81,	//0x019e		VoC_bnlt16_rd(Coolsand_process_bit0_L4,REG1,0x2437)
0x2431070B,	//0x01a0		VoC_add16_rd(REG3,REG1,0x2431)
0x03E42B80,	//0x01a2		VoC_jal(Coolsand_rc_get_bit)
0xFFC065FA,	//0x01a4		VoC_NAD(IN_PARALLEL)	|	VoC_jump(Coolsand_process_bit0_L3)
		//0x01a6		Coolsand_process_bit0_L4
0x04262B80,	//0x01a6		VoC_jal(Coolsand_write_byte)
0xE0A37085,	//0x01a8		VoC_lw16i_short(REG3,0xa,IN_PARALLEL)	|	VoC_lw16i_short(REG5,0x4,DEFAULT)
0x24123C25,	//0x01aa		VoC_bngt16_rd(Coolsand_process_bit0_L5,REG5,0x2412)
0xE5CEF004,	//0x01ac		VoC_jump(Coolsand_process_bit0_End)	|	VoC_lw16i_short(REG4,0x0,DEFAULT)
		//0x01ae		Coolsand_process_bit0_L5
0x24123C83,	//0x01ae		VoC_bngt16_rd(Coolsand_process_bit0_L6,REG3,0x2412)
0x0A96F064,	//0x01b0		VoC_lw16i(STATUS,0x44)(lo)	|	VoC_lw16i_short(REG4,0x3,DEFAULT)
0x0B240044,	//0x01b2		VoC_sub16_dr(REG4,0x2412,REG4)(lo)	|	VoC_lw16i(STATUS,0x44)(hi)
0xE5C62412,	//0x01b4		VoC_jump(Coolsand_process_bit0_End)	|	VoC_sub16_dr(REG4,0x2412,REG4)(hi)
		//0x01b6		Coolsand_process_bit0_L6
0x0A96F0C4,	//0x01b6		VoC_lw16i(STATUS,0x44)(lo)	|	VoC_lw16i_short(REG4,0x6,DEFAULT)
0x0B240044,	//0x01b8		VoC_sub16_dr(REG4,0x2412,REG4)(lo)	|	VoC_lw16i(STATUS,0x44)(hi)
0xDFA92412,	//0x01ba		VoC_pop16(RA,DEFAULT)	|	VoC_sub16_dr(REG4,0x2412,REG4)(hi)
		//0x01bb		Coolsand_process_bit0_End
0x24121504,	//0x01bc		VoC_sw16_d(REG4,0x2412)
0xFFC06580,	//0x01be		VoC_NAD(IN_PARALLEL)	|	VoC_return
		//0x01c0		Coolsand_process_bit1
0xE4435845,	//0x01c0		VoC_lw16i_short(REG3,0x44,IN_PARALLEL)	|	VoC_lw16_p(REG5,REG4,DEFAULT)
0xF92D6076,	//0x01c2		VoC_shru16_ri(REG5,0x5,IN_PARALLEL)	|	VoC_movreg16(STATUS,REG3,DEFAULT)
0xB92D4B7D,	//0x01c4		VoC_sub16_pr(REG5,REG4,REG5,IN_PARALLEL)	|	VoC_sub32_rr(ACC1,ACC1,RL7,DEFAULT)
0x4AFBE076,	//0x01c6		VoC_sub32_rr(REG67,REG67,RL7,DEFAULT)	|	VoC_movreg16(STATUS,REG3,DEFAULT)
0x7096DC45,	//0x01c8		VoC_lw16i_short(STATUS,0x4,DEFAULT)	|	VoC_sw16_p(REG5,REG4,IN_PARALLEL)
0x0A83DFE9,	//0x01ca		VoC_lw16i(REG3,0x4c0)(lo)	|	VoC_push16(RA,IN_PARALLEL)
0x071B04C0,	//0x01cc		VoC_add16_rd(REG3,REG3,0x2412)(lo)	|	VoC_lw16i(REG3,0x4c0)(hi)
0xFFC02412,	//0x01ce		VoC_NAD	|	VoC_add16_rd(REG3,REG3,0x2412)(hi)
0x01302B80,	//0x01d0		VoC_jal(Coolsand_rc_is_bit_0)
0x00440A96,	//0x01d2		VoC_lw16i(STATUS,0x44)
0xF6644B79,	//0x01d4		VoC_movreg16(REG4,REG3,IN_PARALLEL)	|	VoC_sub32_rr(REG23,ACC1,RL7,DEFAULT)
0x01FA30C0,	//0x01d6		VoC_bncz16_r(Coolsand_process_bit1_L1)
0x24181481,	//0x01d8		VoC_lw32_d(REG23,0x2418)
0x24161481,	//0x01da		VoC_lw32_d(REG23,0x2416)
0x241A1581,	//0x01dc		VoC_sw32_d(REG23,0x241a)
0x24181581,	//0x01de		VoC_sw32_d(REG23,0x2418)
0x08000A85,	//0x01e0		VoC_lw16i(REG5,0x800)
0x85657F3B,	//0x01e2		VoC_sub16_rp(REG5,REG5,REG4,IN_PARALLEL)	|	VoC_movreg32(REG67,RL7,DEFAULT)
0xE072792D,	//0x01e4		VoC_lw16i_short(REG2,0x7,IN_PARALLEL)	|	VoC_shru16_ri(REG5,0x5,DEFAULT)
0x81656021,	//0x01e6		VoC_add16_rp(REG5,REG5,REG4,IN_PARALLEL)	|	VoC_movreg16(REG1,REG1,DEFAULT)
0x24141482,	//0x01e8		VoC_lw32_d(REG45,0x2414)
0xE0345C45,	//0x01ea		VoC_lw16i_short(REG4,0x3,IN_PARALLEL)	|	VoC_sw16_p(REG5,REG4,DEFAULT)
0x24161582,	//0x01ec		VoC_sw32_d(REG45,0x2416)
0x24123C22,	//0x01ee		VoC_bngt16_rd(Coolsand_process_bit1_L0,REG2,0x2412)
0xFFC07004,	//0x01f0		VoC_NAD(IN_PARALLEL)	|	VoC_lw16i_short(REG4,0x0,DEFAULT)
		//0x01f2		Coolsand_process_bit1_L0
0x07320A83,	//0x01f2		VoC_lw16i(REG3,0x732)
0x24121504,	//0x01f4		VoC_sw16_d(REG4,0x2412)
0x24311503,	//0x01f6		VoC_sw16_d(REG3,0x2431)
0x02B82B00,	//0x01f8		VoC_jump_lg(Coolsand_process_bit1_L6)
		//0x01fa		Coolsand_process_bit1_L1
0xE4435845,	//0x01fa		VoC_lw16i_short(REG3,0x44,IN_PARALLEL)	|	VoC_lw16_p(REG5,REG4,DEFAULT)
0xF92D6076,	//0x01fc		VoC_shru16_ri(REG5,0x5,IN_PARALLEL)	|	VoC_movreg16(STATUS,REG3,DEFAULT)
0xB92D4B7D,	//0x01fe		VoC_sub16_pr(REG5,REG4,REG5,IN_PARALLEL)	|	VoC_sub32_rr(ACC1,ACC1,RL7,DEFAULT)
0x0A83E076,	//0x0200		VoC_lw16i(REG3,0x4cc)(lo)	|	VoC_movreg16(STATUS,REG3,DEFAULT)
0x4AFB04CC,	//0x0202		VoC_sub32_rr(REG67,REG67,RL7,DEFAULT)	|	VoC_lw16i(REG3,0x4cc)(hi)
0x071BDC45,	//0x0204		VoC_add16_rd(REG3,REG3,0x2412)(lo)	|	VoC_sw16_p(REG5,REG4,IN_PARALLEL)
0xFFC02412,	//0x0206		VoC_NAD	|	VoC_add16_rd(REG3,REG3,0x2412)(hi)
0x01302B80,	//0x0208		VoC_jal(Coolsand_rc_is_bit_0)
0x00440A96,	//0x020a		VoC_lw16i(STATUS,0x44)
0x1503CB7A,	//0x020c		VoC_sw16_d(REG3,0x2431)(lo)	|	VoC_sub32_rr(REG45,ACC1,RL7,DEFAULT)
0x30C02431,	//0x020e		VoC_bncz16_r(Coolsand_process_bit1_L4)(lo)	|	VoC_sw16_d(REG3,0x2431)(hi)
0x1404024E,	//0x0210		VoC_lw16_d(REG4,0x2412)(lo)	|	VoC_bncz16_r(Coolsand_process_bit1_L4)(hi)
0x0A852412,	//0x0212		VoC_lw16i(REG5,0x800)(lo)	|	VoC_lw16_d(REG4,0x2412)(hi)
0x7F3B0800,	//0x0214		VoC_movreg32(REG67,RL7,DEFAULT)	|	VoC_lw16i(REG5,0x800)(hi)
0x792D855D,	//0x0216		VoC_shru16_ri(REG5,0x5,DEFAULT)	|	VoC_sub16_rp(REG5,REG5,REG3,IN_PARALLEL)
0x7096F8E4,	//0x0218		VoC_lw16i_short(STATUS,0x4,DEFAULT)	|	VoC_shr16_ri(REG4,0xfffffffc,IN_PARALLEL)
0x0A83815D,	//0x021a		VoC_lw16i(REG3,0x4f0)(lo)	|	VoC_add16_rp(REG5,REG5,REG3,IN_PARALLEL)
0x5C3504F0,	//0x021c		VoC_sw16_p(REG5,REG3,DEFAULT)	|	VoC_lw16i(REG3,0x4f0)(hi)
0x071BC0E3,	//0x021e		VoC_add16_rd(REG3,REG3,0x2430)(lo)	|	VoC_add16_rr(REG3,REG3,REG4,IN_PARALLEL)
0xFFC02430,	//0x0220		VoC_NAD	|	VoC_add16_rd(REG3,REG3,0x2430)(hi)
0x01302B80,	//0x0222		VoC_jal(Coolsand_rc_is_bit_0)
0x00440A96,	//0x0224		VoC_lw16i(STATUS,0x44)
0x30C0CB7A,	//0x0226		VoC_bncz16_r(Coolsand_process_bit1_L3)(lo)	|	VoC_sub32_rr(REG45,ACC1,RL7,DEFAULT)
0x0A850242,	//0x0228		VoC_lw16i(REG5,0x800)(lo)	|	VoC_bncz16_r(Coolsand_process_bit1_L3)(hi)
0x7F3B0800,	//0x022a		VoC_movreg32(REG67,RL7,DEFAULT)	|	VoC_lw16i(REG5,0x800)(hi)
0x792D855D,	//0x022c		VoC_shru16_ri(REG5,0x5,DEFAULT)	|	VoC_sub16_rp(REG5,REG5,REG3,IN_PARALLEL)
0x70E4E0B2,	//0x022e		VoC_lw16i_short(REG4,0x7,DEFAULT)	|	VoC_lw16i_short(REG2,0xb,IN_PARALLEL)
0x3C1C815D,	//0x0230		VoC_bngt16_rd(Coolsand_process_bit1_L2,REG4,0x2412)(lo)	|	VoC_add16_rp(REG5,REG5,REG3,IN_PARALLEL)
0xF1222412,	//0x0232		VoC_lw16i_short(REG2,0x9,DEFAULT)	|	VoC_bngt16_rd(Coolsand_process_bit1_L2,REG4,0x2412)(hi)
		//0x0234		Coolsand_process_bit1_L2
0xDC357096,	//0x0234		VoC_sw16_p(REG5,REG3,IN_PARALLEL)	|	VoC_lw16i_short(STATUS,0x4,DEFAULT)
0x24121502,	//0x0236		VoC_sw16_d(REG2,0x2412)
0x24141482,	//0x0238		VoC_lw32_d(REG45,0x2414)
0x03A22B80,	//0x023a		VoC_jal(Coolsand_peek_old_byte)
0xFFC06081,	//0x023c		VoC_NAD(IN_PARALLEL)	|	VoC_movreg16(REG1,REG4,DEFAULT)
0x04262B80,	//0x023e		VoC_jal(Coolsand_write_byte)
0x038A2B00,	//0x0240		VoC_jump_lg(Coolsand_process_bit1_End)
		//0x0242		Coolsand_process_bit1_L3
0xE4445835,	//0x0242		VoC_lw16i_short(REG4,0x44,IN_PARALLEL)	|	VoC_lw16_p(REG5,REG3,DEFAULT)
0xF92D6096,	//0x0244		VoC_shru16_ri(REG5,0x5,IN_PARALLEL)	|	VoC_movreg16(STATUS,REG4,DEFAULT)
0xB8ED4B7D,	//0x0246		VoC_sub16_pr(REG5,REG3,REG5,IN_PARALLEL)	|	VoC_sub32_rr(ACC1,ACC1,RL7,DEFAULT)
0x4AFBE096,	//0x0248		VoC_sub32_rr(REG67,REG67,RL7,DEFAULT)	|	VoC_movreg16(STATUS,REG4,DEFAULT)
0x2B00DC35,	//0x024a		VoC_jump_lg(Coolsand_process_bit1_L5)(lo)	|	VoC_sw16_p(REG5,REG3,IN_PARALLEL)
0xFFC002AC,	//0x024c		VoC_NAD	|	VoC_jump_lg(Coolsand_process_bit1_L5)(hi)
		//0x024e		Coolsand_process_bit1_L4
0xE4445835,	//0x024e		VoC_lw16i_short(REG4,0x44,IN_PARALLEL)	|	VoC_lw16_p(REG5,REG3,DEFAULT)
0xF92D6096,	//0x0250		VoC_shru16_ri(REG5,0x5,IN_PARALLEL)	|	VoC_movreg16(STATUS,REG4,DEFAULT)
0xB8ED4B7D,	//0x0252		VoC_sub16_pr(REG5,REG3,REG5,IN_PARALLEL)	|	VoC_sub32_rr(ACC1,ACC1,RL7,DEFAULT)
0x4AFBE096,	//0x0254		VoC_sub32_rr(REG67,REG67,RL7,DEFAULT)	|	VoC_movreg16(STATUS,REG4,DEFAULT)
0x0A83DC35,	//0x0256		VoC_lw16i(REG3,0x4d8)(lo)	|	VoC_sw16_p(REG5,REG3,IN_PARALLEL)
0x071B04D8,	//0x0258		VoC_add16_rd(REG3,REG3,0x2412)(lo)	|	VoC_lw16i(REG3,0x4d8)(hi)
0xFFC02412,	//0x025a		VoC_NAD	|	VoC_add16_rd(REG3,REG3,0x2412)(hi)
0x01302B80,	//0x025c		VoC_jal(Coolsand_rc_is_bit_0)
0x00440A96,	//0x025e		VoC_lw16i(STATUS,0x44)
0x30C0CB7A,	//0x0260		VoC_bncz16_r(Coolsand_process_bit1_Lx0)(lo)	|	VoC_sub32_rr(REG45,ACC1,RL7,DEFAULT)
0x0A850270,	//0x0262		VoC_lw16i(REG5,0x800)(lo)	|	VoC_bncz16_r(Coolsand_process_bit1_Lx0)(hi)
0x7F3B0800,	//0x0264		VoC_movreg32(REG67,RL7,DEFAULT)	|	VoC_lw16i(REG5,0x800)(hi)
0xF92D855D,	//0x0266		VoC_shru16_ri(REG5,0x5,DEFAULT)	|	VoC_sub16_rp(REG5,REG5,REG3,IN_PARALLEL)
0x815D7096,	//0x0268		VoC_add16_rp(REG5,REG5,REG3,IN_PARALLEL)	|	VoC_lw16i_short(STATUS,0x4,DEFAULT)
0x24161481,	//0x026a		VoC_lw32_d(REG23,0x2416)
0x2B00DC35,	//0x026c		VoC_jump_lg(Coolsand_process_bit1_Lx1)(lo)	|	VoC_sw16_p(REG5,REG3,DEFAULT)
0xFFC002A6,	//0x026e		VoC_NAD	|	VoC_jump_lg(Coolsand_process_bit1_Lx1)(hi)
		//0x0270		Coolsand_process_bit1_Lx0
0xE4445835,	//0x0270		VoC_lw16i_short(REG4,0x44,IN_PARALLEL)	|	VoC_lw16_p(REG5,REG3,DEFAULT)
0xF92D6096,	//0x0272		VoC_shru16_ri(REG5,0x5,IN_PARALLEL)	|	VoC_movreg16(STATUS,REG4,DEFAULT)
0xB8ED4B7D,	//0x0274		VoC_sub16_pr(REG5,REG3,REG5,IN_PARALLEL)	|	VoC_sub32_rr(ACC1,ACC1,RL7,DEFAULT)
0x4AFBE096,	//0x0276		VoC_sub32_rr(REG67,REG67,RL7,DEFAULT)	|	VoC_movreg16(STATUS,REG4,DEFAULT)
0x0A83DC35,	//0x0278		VoC_lw16i(REG3,0x4e4)(lo)	|	VoC_sw16_p(REG5,REG3,IN_PARALLEL)
0x071B04E4,	//0x027a		VoC_add16_rd(REG3,REG3,0x2412)(lo)	|	VoC_lw16i(REG3,0x4e4)(hi)
0xFFC02412,	//0x027c		VoC_NAD	|	VoC_add16_rd(REG3,REG3,0x2412)(hi)
0x01302B80,	//0x027e		VoC_jal(Coolsand_rc_is_bit_0)
0x00440A96,	//0x0280		VoC_lw16i(STATUS,0x44)
0x30C0CB7A,	//0x0282		VoC_bncz16_r(Coolsand_process_bit1_Lx2)(lo)	|	VoC_sub32_rr(REG45,ACC1,RL7,DEFAULT)
0x0A850290,	//0x0284		VoC_lw16i(REG5,0x800)(lo)	|	VoC_bncz16_r(Coolsand_process_bit1_Lx2)(hi)
0x7F3B0800,	//0x0286		VoC_movreg32(REG67,RL7,DEFAULT)	|	VoC_lw16i(REG5,0x800)(hi)
0xF92D855D,	//0x0288		VoC_shru16_ri(REG5,0x5,DEFAULT)	|	VoC_sub16_rp(REG5,REG5,REG3,IN_PARALLEL)
0x815D6021,	//0x028a		VoC_add16_rp(REG5,REG5,REG3,IN_PARALLEL)	|	VoC_movreg16(REG1,REG1,DEFAULT)
0x24181481,	//0x028c		VoC_lw32_d(REG23,0x2418)
0xE5D1DC35,	//0x028e		VoC_jump(Coolsand_process_bit1_Lx3)	|	VoC_sw16_p(REG5,REG3,DEFAULT)
		//0x0290		Coolsand_process_bit1_Lx2
0xE4445835,	//0x0290		VoC_lw16i_short(REG4,0x44,IN_PARALLEL)	|	VoC_lw16_p(REG5,REG3,DEFAULT)
0xF92D6096,	//0x0292		VoC_shru16_ri(REG5,0x5,IN_PARALLEL)	|	VoC_movreg16(STATUS,REG4,DEFAULT)
0xB8ED4B7D,	//0x0294		VoC_sub16_pr(REG5,REG3,REG5,IN_PARALLEL)	|	VoC_sub32_rr(ACC1,ACC1,RL7,DEFAULT)
0x4AFBE096,	//0x0296		VoC_sub32_rr(REG67,REG67,RL7,DEFAULT)	|	VoC_movreg16(STATUS,REG4,DEFAULT)
0x1482DC35,	//0x0298		VoC_lw32_d(REG45,0x2418)(lo)	|	VoC_sw16_p(REG5,REG3,IN_PARALLEL)
0x14812418,	//0x029a		VoC_lw32_d(REG23,0x241a)(lo)	|	VoC_lw32_d(REG45,0x2418)(hi)
0x1582241A,	//0x029c		VoC_sw32_d(REG45,0x241a)(lo)	|	VoC_lw32_d(REG23,0x241a)(hi)
0xFFC0241A,	//0x029e		VoC_NAD	|	VoC_sw32_d(REG45,0x241a)(hi)
		//0x02a0		Coolsand_process_bit1_Lx3
0x24161482,	//0x02a0		VoC_lw32_d(REG45,0x2416)
0x1582FFC0,	//0x02a2		VoC_sw32_d(REG45,0x2418)(lo)	|	VoC_NOP
0xFFC02418,	//0x02a4		VoC_NAD	|	VoC_sw32_d(REG45,0x2418)(hi)
		//0x02a6		Coolsand_process_bit1_Lx1
0x24141482,	//0x02a6		VoC_lw32_d(REG45,0x2414)
0x24141581,	//0x02a8		VoC_sw32_d(REG23,0x2414)
0x24161582,	//0x02aa		VoC_sw32_d(REG45,0x2416)
		//0x02ac		Coolsand_process_bit1_L5
0xE0B570E4,	//0x02ac		VoC_lw16i_short(REG5,0xb,IN_PARALLEL)	|	VoC_lw16i_short(REG4,0x7,DEFAULT)
0x24123C24,	//0x02ae		VoC_bngt16_rd(Coolsand_process_bit1_L7,REG4,0x2412)
0xFFC07105,	//0x02b0		VoC_NAD(IN_PARALLEL)	|	VoC_lw16i_short(REG5,0x8,DEFAULT)
		//0x02b2		Coolsand_process_bit1_L7
0x09340A83,	//0x02b2		VoC_lw16i(REG3,0x934)
0x24121505,	//0x02b4		VoC_sw16_d(REG5,0x2412)
0x24311503,	//0x02b6		VoC_sw16_d(REG3,0x2431)
		//0x02b8		Coolsand_process_bit1_L6
0x071BF003,	//0x02b8		VoC_add16_rd(REG3,REG3,0x2431)(lo)	|	VoC_lw16i_short(REG3,0x0,DEFAULT)
0xFFC02431,	//0x02ba		VoC_NAD	|	VoC_add16_rd(REG3,REG3,0x2431)(hi)
0x01302B80,	//0x02bc		VoC_jal(Coolsand_rc_is_bit_0)
0x00440A96,	//0x02be		VoC_lw16i(STATUS,0x44)
0x30C0CB7A,	//0x02c0		VoC_bncz16_r(Coolsand_process_bit1_L8)(lo)	|	VoC_sub32_rr(REG45,ACC1,RL7,DEFAULT)
0x0A8502D6,	//0x02c2		VoC_lw16i(REG5,0x800)(lo)	|	VoC_bncz16_r(Coolsand_process_bit1_L8)(hi)
0x7F3B0800,	//0x02c4		VoC_movreg32(REG67,RL7,DEFAULT)	|	VoC_lw16i(REG5,0x800)(hi)
0xF92D855D,	//0x02c6		VoC_shru16_ri(REG5,0x5,DEFAULT)	|	VoC_sub16_rp(REG5,REG5,REG3,IN_PARALLEL)
0x815D7096,	//0x02c8		VoC_add16_rp(REG5,REG5,REG3,IN_PARALLEL)	|	VoC_lw16i_short(STATUS,0x4,DEFAULT)
0x24301402,	//0x02ca		VoC_lw16_d(REG2,0x2430)
0xE0335C35,	//0x02cc		VoC_lw16i_short(REG3,0x3,IN_PARALLEL)	|	VoC_sw16_p(REG5,REG3,DEFAULT)
0xE02478EA,	//0x02ce		VoC_lw16i_short(REG4,0x2,IN_PARALLEL)	|	VoC_shr16_ri(REG2,0xfffffffd,DEFAULT)
0xE00140A4,	//0x02d0		VoC_lw16i_short(REG1,0x0,IN_PARALLEL)	|	VoC_add16_rr(REG4,REG2,REG4,DEFAULT)
0x24310724,	//0x02d2		VoC_add16_rd(REG4,REG4,0x2431)
0x030B2B00,	//0x02d4		VoC_jump_lg(Coolsand_process_bit1_L9)
		//0x02d6		Coolsand_process_bit1_L8
0xE4445835,	//0x02d6		VoC_lw16i_short(REG4,0x44,IN_PARALLEL)	|	VoC_lw16_p(REG5,REG3,DEFAULT)
0xF92D6096,	//0x02d8		VoC_shru16_ri(REG5,0x5,IN_PARALLEL)	|	VoC_movreg16(STATUS,REG4,DEFAULT)
0xB8ED4B7D,	//0x02da		VoC_sub16_pr(REG5,REG3,REG5,IN_PARALLEL)	|	VoC_sub32_rr(ACC1,ACC1,RL7,DEFAULT)
0xE0136096,	//0x02dc		VoC_lw16i_short(REG3,0x1,IN_PARALLEL)	|	VoC_movreg16(STATUS,REG4,DEFAULT)
0xDC354AFB,	//0x02de		VoC_sw16_p(REG5,REG3,IN_PARALLEL)	|	VoC_sub32_rr(REG67,REG67,RL7,DEFAULT)
0x2431071B,	//0x02e0		VoC_add16_rd(REG3,REG3,0x2431)
0x01302B80,	//0x02e2		VoC_jal(Coolsand_rc_is_bit_0)
0x00440A96,	//0x02e4		VoC_lw16i(STATUS,0x44)
0x30C0CB7A,	//0x02e6		VoC_bncz16_r(Coolsand_process_bit1_L10)(lo)	|	VoC_sub32_rr(REG45,ACC1,RL7,DEFAULT)
0x0A8502FC,	//0x02e8		VoC_lw16i(REG5,0x800)(lo)	|	VoC_bncz16_r(Coolsand_process_bit1_L10)(hi)
0x7F3B0800,	//0x02ea		VoC_movreg32(REG67,RL7,DEFAULT)	|	VoC_lw16i(REG5,0x800)(hi)
0xF92D855D,	//0x02ec		VoC_shru16_ri(REG5,0x5,DEFAULT)	|	VoC_sub16_rp(REG5,REG5,REG3,IN_PARALLEL)
0x815D7096,	//0x02ee		VoC_add16_rp(REG5,REG5,REG3,IN_PARALLEL)	|	VoC_lw16i_short(STATUS,0x4,DEFAULT)
0x24301402,	//0x02f0		VoC_lw16_d(REG2,0x2430)
0x78EADC35,	//0x02f2		VoC_shr16_ri(REG2,0xfffffffd,DEFAULT)	|	VoC_sw16_p(REG5,REG3,DEFAULT)
0x0A84E033,	//0x02f4		VoC_lw16i(REG4,0x82)(lo)	|	VoC_lw16i_short(REG3,0x3,IN_PARALLEL)
0x40A40082,	//0x02f6		VoC_add16_rr(REG4,REG2,REG4,DEFAULT)	|	VoC_lw16i(REG4,0x82)(hi)
0x0724E081,	//0x02f8		VoC_add16_rd(REG4,REG4,0x2431)(lo)	|	VoC_lw16i_short(REG1,0x8,IN_PARALLEL)
0xE5D02431,	//0x02fa		VoC_jump(Coolsand_process_bit1_L9)	|	VoC_add16_rd(REG4,REG4,0x2431)(hi)
		//0x02fc		Coolsand_process_bit1_L10
0xE4445835,	//0x02fc		VoC_lw16i_short(REG4,0x44,IN_PARALLEL)	|	VoC_lw16_p(REG5,REG3,DEFAULT)
0xF92D6096,	//0x02fe		VoC_shru16_ri(REG5,0x5,IN_PARALLEL)	|	VoC_movreg16(STATUS,REG4,DEFAULT)
0xB8ED4B7D,	//0x0300		VoC_sub16_pr(REG5,REG3,REG5,IN_PARALLEL)	|	VoC_sub32_rr(ACC1,ACC1,RL7,DEFAULT)
0x4AFBE096,	//0x0302		VoC_sub32_rr(REG67,REG67,RL7,DEFAULT)	|	VoC_movreg16(STATUS,REG4,DEFAULT)
0x0A84DC35,	//0x0304		VoC_lw16i(REG4,0x102)(lo)	|	VoC_sw16_p(REG5,REG3,IN_PARALLEL)
0x71030102,	//0x0306		VoC_lw16i_short(REG3,0x8,DEFAULT)	|	VoC_lw16i(REG4,0x102)(hi)
0x0724E101,	//0x0308		VoC_add16_rd(REG4,REG4,0x2431)(lo)	|	VoC_lw16i_short(REG1,0x10,IN_PARALLEL)
0xDFC12431,	//0x030a		VoC_push16(REG1,DEFAULT)	|	VoC_add16_rd(REG4,REG4,0x2431)(hi)
		//0x030b		Coolsand_process_bit1_L9
0x046C2B80,	//0x030c		VoC_jal(Coolsand_rc_bit_tree_decode)
0xE0745F82,	//0x030e		VoC_lw16i_short(REG4,0x7,IN_PARALLEL)	|	VoC_pop16(REG2,DEFAULT)
0xE0424051,	//0x0310		VoC_lw16i_short(REG2,0x4,IN_PARALLEL)	|	VoC_add16_rr(REG1,REG1,REG2,DEFAULT)
0x24121403,	//0x0312		VoC_lw16_d(REG3,0x2412)
0xDFC17096,	//0x0314		VoC_push16(REG1,IN_PARALLEL)	|	VoC_lw16i_short(STATUS,0x4,DEFAULT)
0x03783493,	//0x0316		VoC_bngt16_rr(Coolsand_process_bit1_L11,REG2,REG3)
0xC0E37085,	//0x0318		VoC_add16_rr(REG3,REG3,REG4,IN_PARALLEL)	|	VoC_lw16i_short(REG5,0x4,DEFAULT)
0x05B00A82,	//0x031a		VoC_lw16i(REG2,0x5b0)
0x24121503,	//0x031c		VoC_sw16_d(REG3,0x2412)
0x34A9F063,	//0x031e		VoC_bngt16_rr(Coolsand_process_bit1_L12,REG5,REG1)(lo)	|	VoC_lw16i_short(REG3,0x3,DEFAULT)
0xE0230322,	//0x0320		VoC_movreg16(REG3,REG1,DEFAULT)	|	VoC_bngt16_rr(Coolsand_process_bit1_L12,REG5,REG1)(hi)
		//0x0322		Coolsand_process_bit1_L12
0x409CF8D3,	//0x0322		VoC_add16_rr(REG4,REG2,REG3,DEFAULT)	|	VoC_shr16_ri(REG3,0xfffffffa,DEFAULT)
0x2B80E063,	//0x0324		VoC_jal(Coolsand_rc_bit_tree_decode)(lo)	|	VoC_lw16i_short(REG3,0x6,IN_PARALLEL)
0xF082046C,	//0x0326		VoC_lw16i_short(REG2,0x4,DEFAULT)	|	VoC_jal(Coolsand_rc_bit_tree_decode)(hi)
0x036A3411,	//0x0328		VoC_bgt16_rr(Coolsand_process_bit1_L13,REG2,REG1)
0xE0146022,	//0x032a		VoC_lw16i_short(REG4,0x1,IN_PARALLEL)	|	VoC_movreg16(REG2,REG1,DEFAULT)
0xF9097045,	//0x032c		VoC_shru16_ri(REG1,0x1,IN_PARALLEL)	|	VoC_lw16i_short(REG5,0x2,DEFAULT)
0xF6436422,	//0x032e		VoC_movreg16(REG3,REG2,IN_PARALLEL)	|	VoC_and16_rr(REG2,REG4,DEFAULT)
0xC261646A,	//0x0330		VoC_sub16_rr(REG1,REG1,REG4,IN_PARALLEL)	|	VoC_or16_rr(REG2,REG5,DEFAULT)
0xE0036064,	//0x0332		VoC_lw16i_short(REG3,0x0,IN_PARALLEL)	|	VoC_movreg16(REG4,REG3,DEFAULT)
0x34ACF1C5,	//0x0334		VoC_bngt16_rr(Coolsand_process_bit1_L15,REG5,REG4)(lo)	|	VoC_lw16i_short(REG5,0xe,DEFAULT)
0x0A850343,	//0x0336		VoC_lw16i(REG5,0x6b0)(lo)	|	VoC_bngt16_rr(Coolsand_process_bit1_L15,REG5,REG4)(hi)
0x702406B0,	//0x0338		VoC_lw16i_short(REG4,0x1,DEFAULT)	|	VoC_lw16i(REG5,0x6b0)(hi)
0x6021C365,	//0x033a		VoC_movreg16(REG1,REG1,DEFAULT)	|	VoC_sub16_rr(REG5,REG5,REG4,IN_PARALLEL)
0x6021C365,	//0x033c		VoC_movreg16(REG1,REG1,DEFAULT)	|	VoC_sub16_rr(REG5,REG5,REG4,IN_PARALLEL)
0xFEE1C2CC,	//0x033e		VoC_shru32_rr(REG23,REG4,DEFAULT)	|	VoC_sub16_rr(REG4,REG3,REG1,IN_PARALLEL)
0xC1556021,	//0x0340		VoC_add16_rr(REG5,REG5,REG2,IN_PARALLEL)	|	VoC_movreg16(REG1,REG1,DEFAULT)
0xF085E5D0,	//0x0342		VoC_lw16i_short(REG5,0x4,DEFAULT)	|	VoC_jump(Coolsand_process_bit1_L16)
		//0x0343		Coolsand_process_bit1_L15
0xC2696042,	//0x0344		VoC_sub16_rr(REG1,REG1,REG5,IN_PARALLEL)	|	VoC_movreg16(REG2,REG2,DEFAULT)
0x034E3181,	//0x0346		VoC_bez16_r(Coolsand_process_bit1_L17,REG1)
0xE643FFC0,	//0x0348		VoC_loop_r_short(REG1,DEFAULT)	|	VoC_NAD
0x048C2B80,	//0x034a		VoC_jal(Coolsand_rc_direct_bit)
		//0x034c		VoC_endloop0
0xFFC07FC0,	//0x034c		VoC_NAD(IN_PARALLEL)	|	VoC_NAD
		//0x034e		Coolsand_process_bit1_L17
0x07220A85,	//0x034e		VoC_lw16i(REG5,0x722)
0xE0417DE1,	//0x0350		VoC_lw16i_short(REG1,0x4,IN_PARALLEL)	|	VoC_shru32_ri(REG23,0xfffffffc,DEFAULT)
		//0x0352		Coolsand_process_bit1_L16
0x036C3181,	//0x0352		VoC_bez16_r(Coolsand_process_bit1_L14,REG1)
0x5FC3F096,	//0x0354		VoC_push16(REG3,DEFAULT)	|	VoC_lw16i_short(STATUS,0x4,DEFAULT)
0x1505E013,	//0x0356		VoC_sw16_d(REG5,0x2436)(lo)	|	VoC_lw16i_short(REG3,0x1,IN_PARALLEL)
0xFFC02436,	//0x0358		VoC_NAD	|	VoC_sw16_d(REG5,0x2436)(hi)
0xE011664D,	//0x035a		VoC_lw16i_short(REG1,0x1,IN_PARALLEL)	|	VoC_loop_r_short(REG1,DEFAULT)
0x2436070B,	//0x035c		VoC_add16_rd(REG3,REG1,0x2436)
0xDF417096,	//0x035e		VoC_push32(REG23,IN_PARALLEL)	|	VoC_lw16i_short(STATUS,0x4,DEFAULT)
0x03E42B80,	//0x0360		VoC_jal(Coolsand_rc_get_bit)
0xF6455F01,	//0x0362		VoC_movreg16(REG5,REG2,IN_PARALLEL)	|	VoC_pop32(REG23,DEFAULT)
0x03673185,	//0x0364		VoC_bez16_r(Coolsand_process_bit1_L18,REG5)
0xF9FBE45A,	//0x0366		VoC_shru16_ri(REG3,0xffffffff,DEFAULT)	|	VoC_or16_rr(REG2,REG3,DEFAULT)
		//0x0367		Coolsand_process_bit1_L18
		//0x0367		VoC_endloop0
0xE5C3DF83,	//0x0368		VoC_jump(Coolsand_process_bit1_L14)	|	VoC_pop16(REG3,DEFAULT)
		//0x036a		Coolsand_process_bit1_L13
0xE0036022,	//0x036a		VoC_lw16i_short(REG3,0x0,IN_PARALLEL)	|	VoC_movreg16(REG2,REG1,DEFAULT)
		//0x036c		Coolsand_process_bit1_L14
0xE0057024,	//0x036c		VoC_lw16i_short(REG5,0x0,IN_PARALLEL)	|	VoC_lw16i_short(REG4,0x1,DEFAULT)
0xC8516021,	//0x036e		VoC_add32_rr(REG23,REG23,REG45,IN_PARALLEL)	|	VoC_movreg16(REG1,REG1,DEFAULT)
0x1581FFC0,	//0x0370		VoC_sw32_d(REG23,0x2414)(lo)	|	VoC_NOP
0x33412414,	//0x0372		VoC_bnez32_r(Coolsand_process_bit1_L11,REG23)(lo)	|	VoC_sw32_d(REG23,0x2414)(hi)
0xDF810378,	//0x0374		VoC_pop16(REG1,DEFAULT)	|	VoC_bnez32_r(Coolsand_process_bit1_L11,REG23)(hi)
0xFFC065D4,	//0x0376		VoC_NAD(IN_PARALLEL)	|	VoC_jump(Coolsand_process_bit1_End)
		//0x0378		Coolsand_process_bit1_L11
0xE0225F81,	//0x0378		VoC_lw16i_short(REG2,0x2,IN_PARALLEL)	|	VoC_pop16(REG1,DEFAULT)
0xC0516000,	//0x037a		VoC_add16_rr(REG1,REG1,REG2,IN_PARALLEL)	|	VoC_movreg16(REG0,REG0,DEFAULT)
		//0x037c		Coolsand_process_bit1_L19
0x24141482,	//0x037c		VoC_lw32_d(REG45,0x2414)
0x2B80DFC1,	//0x037e		VoC_jal(Coolsand_peek_old_byte)(lo)	|	VoC_push16(REG1,DEFAULT)
0xE08103A2,	//0x0380		VoC_movreg16(REG1,REG4,DEFAULT)	|	VoC_jal(Coolsand_peek_old_byte)(hi)
0x04262B80,	//0x0382		VoC_jal(Coolsand_write_byte)
0xE0145F81,	//0x0384		VoC_lw16i_short(REG4,0x1,IN_PARALLEL)	|	VoC_pop16(REG1,DEFAULT)
0xC2617096,	//0x0386		VoC_sub16_rr(REG1,REG1,REG4,IN_PARALLEL)	|	VoC_lw16i_short(STATUS,0x4,DEFAULT)
0x037C31C1,	//0x0388		VoC_bnez16_r(Coolsand_process_bit1_L19,REG1)
		//0x038a		Coolsand_process_bit1_End
0xFFC0DFA9,	//0x038a		VoC_NOP	|	VoC_pop16(RA,DEFAULT)
0xFFC06580,	//0x038c		VoC_NAD(IN_PARALLEL)	|	VoC_return
		//0x038e		Coolsand_rc_update_bit_0
0x08000A85,	//0x038e		VoC_lw16i(REG5,0x800)
0x85657F3B,	//0x0390		VoC_sub16_rp(REG5,REG5,REG4,IN_PARALLEL)	|	VoC_movreg32(REG67,RL7,DEFAULT)
0x6021F92D,	//0x0392		VoC_movreg16(REG1,REG1,DEFAULT)	|	VoC_shru16_ri(REG5,0x5,DEFAULT)
0xFFC08165,	//0x0394		VoC_NOP	|	VoC_add16_rp(REG5,REG5,REG4,IN_PARALLEL)
0xE580DC45,	//0x0396		VoC_return	|	VoC_sw16_p(REG5,REG4,DEFAULT)
		//0x0398		Coolsand_rc_update_bit_1
0xE4435845,	//0x0398		VoC_lw16i_short(REG3,0x44,IN_PARALLEL)	|	VoC_lw16_p(REG5,REG4,DEFAULT)
0xF92D6076,	//0x039a		VoC_shru16_ri(REG5,0x5,IN_PARALLEL)	|	VoC_movreg16(STATUS,REG3,DEFAULT)
0xB92D4B7D,	//0x039c		VoC_sub16_pr(REG5,REG4,REG5,IN_PARALLEL)	|	VoC_sub32_rr(ACC1,ACC1,RL7,DEFAULT)
0x4AFBE076,	//0x039e		VoC_sub32_rr(REG67,REG67,RL7,DEFAULT)	|	VoC_movreg16(STATUS,REG3,DEFAULT)
0xE580DC45,	//0x03a0		VoC_return	|	VoC_sw16_p(REG5,REG4,IN_PARALLEL)
		//0x03a2		Coolsand_peek_old_byte
0x00440A96,	//0x03a2		VoC_lw16i(STATUS,0x44)
0x241E0B91,	//0x03a4		VoC_sub32_dr(REG23,0x241e,REG45)
0x24321482,	//0x03a6		VoC_lw32_d(REG45,0x2432)
0x03CC3611,	//0x03a8		VoC_bgt32_rr(Coolsand_peek_old_byte_L2,REG45,REG23)
0xCA527096,	//0x03aa		VoC_sub32_rr(REG45,REG23,REG45,IN_PARALLEL)	|	VoC_lw16i_short(STATUS,0x4,DEFAULT)
0x40000A85,	//0x03ac		VoC_lw16i(REG5,0x4000)
0xF683790C,	//0x03ae		VoC_movreg16(REG3,REG4,IN_PARALLEL)	|	VoC_shru16_ri(REG4,0x1,DEFAULT)
0xC1627096,	//0x03b0		VoC_add16_rr(REG2,REG5,REG4,IN_PARALLEL)	|	VoC_lw16i_short(STATUS,0x4,DEFAULT)
0x00011603,	//0x03b2		VoC_and16_ri(REG3,0x1)
0x24344922,	//0x03b4		VoC_blt16_rd(Coolsand_peek_old_byte_L3,REG2,0x2434)
0x24341405,	//0x03b6		VoC_lw16_d(REG5,0x2434)
0xC2AA7064,	//0x03b8		VoC_sub16_rr(REG2,REG2,REG5,IN_PARALLEL)	|	VoC_lw16i_short(REG4,0x3,DEFAULT)
0x7096F9FA,	//0x03ba		VoC_lw16i_short(STATUS,0x4,DEFAULT)	|	VoC_shru16_ri(REG2,0xffffffff,DEFAULT)
0x1403C09A,	//0x03bc		VoC_lw16_d(REG3,0x241e)(lo)	|	VoC_add16_rr(REG2,REG2,REG3,IN_PARALLEL)
0x6423241E,	//0x03be		VoC_and16_rr(REG3,REG4,DEFAULT)	|	VoC_lw16_d(REG3,0x241e)(hi)
0x7F22E034,	//0x03c0		VoC_movreg32(REG45,ACC0,DEFAULT)	|	VoC_lw16i_short(REG4,0x3,IN_PARALLEL)
0x78EAC31B,	//0x03c2		VoC_shr16_ri(REG2,0xfffffffd,DEFAULT)	|	VoC_sub16_rr(REG3,REG4,REG3,IN_PARALLEL)
0xFEDAF8EB,	//0x03c4		VoC_shru32_rr(REG45,REG3,DEFAULT)	|	VoC_shr16_ri(REG3,0xfffffffd,IN_PARALLEL)
0xE5D9FED2,	//0x03c6		VoC_jump(Coolsand_peek_old_byte_End)	|	VoC_shru32_rr(REG45,REG2,DEFAULT)
		//0x03c8		Coolsand_peek_old_byte_L3
0xF8EB5824,	//0x03c8		VoC_shr16_ri(REG3,0xfffffffd,IN_PARALLEL)	|	VoC_lw16_p(REG4,REG2,DEFAULT)
0xE5D5FE5C,	//0x03ca		VoC_jump(Coolsand_peek_old_byte_End)	|	VoC_shru16_rr(REG4,REG3,DEFAULT)
		//0x03cc		Coolsand_peek_old_byte_L2
0x24021482,	//0x03cc		VoC_lw32_d(REG45,0x2402)
0xC8526042,	//0x03ce		VoC_add32_rr(REG45,REG23,REG45,IN_PARALLEL)	|	VoC_movreg16(REG2,REG2,DEFAULT)
0x7FFC1644,	//0x03d0		VoC_and16_ri(REG4,0xfffc)
0x0FFF1605,	//0x03d2		VoC_and16_ri(REG5,0xfff)
0x000016C5,	//0x03d4		VoC_or16_ri(REG5,0xffff8000)
0x00031602,	//0x03d6		VoC_and16_ri(REG2,0x3)
0x7FC415C2,	//0x03d8		VoC_sw32_d(REG45,0xffc4)
0xF8EA7096,	//0x03da		VoC_shr16_ri(REG2,0xfffffffd,IN_PARALLEL)	|	VoC_lw16i_short(STATUS,0x4,DEFAULT)
0x7FC614C2,	//0x03dc		VoC_lw32_d(REG45,0xffc6)
0xFFC07ED2,	//0x03de		VoC_NAD(IN_PARALLEL)	|	VoC_shru32_rr(REG45,REG2,DEFAULT)
		//0x03e0		Coolsand_peek_old_byte_End
0x00FF1604,	//0x03e0		VoC_and16_ri(REG4,0xff)
0xFFC06580,	//0x03e2		VoC_NAD(IN_PARALLEL)	|	VoC_return
		//0x03e4		Coolsand_rc_get_bit
0xFF1A7C0B,	//0x03e4		VoC_movreg32(REG45,REG67,IN_PARALLEL)	|	VoC_shru32_ri(REG67,0x1,DEFAULT)
0x242A6593,	//0x03e6		VoC_bnlt32_rd(Coolsand_rc_get_bit_Coolsand_rc_is_bit_0_L0,REG67,0x242a)
0xFDC57DC2,	//0x03e8		VoC_shru32_ri(ACC1,0xfffffff8,IN_PARALLEL)	|	VoC_shru32_ri(REG45,0xfffffff8,DEFAULT)
0xE00762A2,	//0x03ea		VoC_lw16i_short(REG7,0x0,IN_PARALLEL)	|	VoC_rbinc_i(REG6,0x8,DEFAULT)
0x31C0E51D,	//0x03ec		VoC_bnez16_r(Coolsand_rc_get_bit_Coolsand_rc_is_bit_0_L0,REG0)(lo)	|	VoC_or32_rr(ACC1,REG67,DEFAULT)
0x151B0400,	//0x03ee		VoC_sw16_d(BITCACHE,0x2435)(lo)	|	VoC_bnez16_r(Coolsand_rc_get_bit_Coolsand_rc_is_bit_0_L0,REG0)(hi)
0xF2062435,	//0x03f0		VoC_lw16i_short(REG6,0x10,DEFAULT)	|	VoC_sw16_d(BITCACHE,0x2435)(hi)
0x243548B6,	//0x03f2		VoC_blt16_rd(Coolsand_rc_get_bit_Coolsand_rc_is_bit_0_L0,REG6,0x2435)
0xDF445FE9,	//0x03f4		VoC_push32(ACC0,IN_PARALLEL)	|	VoC_push16(RA,DEFAULT)
0x04B42B80,	//0x03f6		VoC_jal(Coolsand_LzmaDmaInData)
0xFBF3FA83,	//0x03f8		VoC_shr32_ri(REG67,0xfffffffe,DEFAULT)	|	VoC_shr32_ri(REG67,0x10,DEFAULT)
0xC8E35FA9,	//0x03fa		VoC_add32_rr(REG67,REG67,ACC0,IN_PARALLEL)	|	VoC_pop16(RA,DEFAULT)
0x1583DF04,	//0x03fc		VoC_sw32_d(REG67,0x2400)(lo)	|	VoC_pop32(ACC0,DEFAULT)
0xFFC02400,	//0x03fe		VoC_NAD	|	VoC_sw32_d(REG67,0x2400)(hi)
		//0x0400		Coolsand_rc_get_bit_Coolsand_rc_is_bit_0_L0
0xFF137C52,	//0x0400		VoC_movreg32(REG67,REG45,IN_PARALLEL)	|	VoC_shru32_ri(REG45,0xa,DEFAULT)
0xF90C5F44,	//0x0402		VoC_shru16_ri(REG4,0x1,IN_PARALLEL)	|	VoC_push32(ACC0,DEFAULT)
0x991C7096,	//0x0404		VoC_multf32_rp(ACC0,REG4,REG3,IN_PARALLEL)	|	VoC_lw16i_short(STATUS,0x4,DEFAULT)
0xE442506B,	//0x0406		VoC_lw16i_short(REG2,0x44,IN_PARALLEL)	|	VoC_macX_rp(REG5,REG3,DEFAULT)
0x6056E240,	//0x0408		VoC_movreg16(STATUS,REG2,DEFAULT)	|	VoC_lbinc_p(REG0)
0x4B7AFF27,	//0x040a		VoC_sub32_rr(REG45,ACC1,RL7,DEFAULT)	|	VoC_movreg32(RL7,ACC0,IN_PARALLEL)
0x30C0DF04,	//0x040c		VoC_bncz16_r(Coolsand_rc_get_bit_L0)(lo)	|	VoC_pop32(ACC0,IN_PARALLEL)
0x0A850418,	//0x040e		VoC_lw16i(REG5,0x800)(lo)	|	VoC_bncz16_r(Coolsand_rc_get_bit_L0)(hi)
0x7F3B0800,	//0x0410		VoC_movreg32(REG67,RL7,DEFAULT)	|	VoC_lw16i(REG5,0x800)(hi)
0x7002855D,	//0x0412		VoC_lw16i_short(REG2,0x0,DEFAULT)	|	VoC_sub16_rp(REG5,REG5,REG3,IN_PARALLEL)
0x78F9F92D,	//0x0414		VoC_shr16_ri(REG1,0xffffffff,DEFAULT)	|	VoC_shru16_ri(REG5,0x5,IN_PARALLEL)
0xE5CB815D,	//0x0416		VoC_jump(Coolsand_rc_get_bit_End)	|	VoC_add16_rp(REG5,REG5,REG3,IN_PARALLEL)
		//0x0418		Coolsand_rc_get_bit_L0
0xD8356056,	//0x0418		VoC_lw16_p(REG5,REG3,IN_PARALLEL)	|	VoC_movreg16(STATUS,REG2,DEFAULT)
0xF92D4B7D,	//0x041a		VoC_shru16_ri(REG5,0x5,IN_PARALLEL)	|	VoC_sub32_rr(ACC1,ACC1,RL7,DEFAULT)
0xB8ED6056,	//0x041c		VoC_sub16_pr(REG5,REG3,REG5,IN_PARALLEL)	|	VoC_movreg16(STATUS,REG2,DEFAULT)
0xE01278F9,	//0x041e		VoC_lw16i_short(REG2,0x1,IN_PARALLEL)	|	VoC_shr16_ri(REG1,0xffffffff,DEFAULT)
0xC0514AFB,	//0x0420		VoC_add16_rr(REG1,REG1,REG2,IN_PARALLEL)	|	VoC_sub32_rr(REG67,REG67,RL7,DEFAULT)
		//0x0422		Coolsand_rc_get_bit_End
0xDC357096,	//0x0422		VoC_sw16_p(REG5,REG3,IN_PARALLEL)	|	VoC_lw16i_short(STATUS,0x4,DEFAULT)
0xFFC06580,	//0x0424		VoC_NAD(IN_PARALLEL)	|	VoC_return
		//0x0426		Coolsand_write_byte
0x00FF1601,	//0x0426		VoC_and16_ri(REG1,0xff)
0x241E1481,	//0x0428		VoC_lw32_d(REG23,0x241e)
0x241C1501,	//0x042a		VoC_sw16_d(REG1,0x241c)
0xE0057024,	//0x042c		VoC_lw16i_short(REG5,0x0,IN_PARALLEL)	|	VoC_lw16i_short(REG4,0x1,DEFAULT)
0xC8896024,	//0x042e		VoC_add32_rr(REG23,REG45,REG23,IN_PARALLEL)	|	VoC_movreg16(REG4,REG1,DEFAULT)
0xFD427096,	//0x0430		VoC_shru32_ri(REG45,0xffffffe8,IN_PARALLEL)	|	VoC_lw16i_short(STATUS,0x4,DEFAULT)
0xE0316514,	//0x0432		VoC_lw16i_short(REG1,0x3,IN_PARALLEL)	|	VoC_or32_rr(ACC0,REG45,DEFAULT)
0x241E1581,	//0x0434		VoC_sw32_d(REG23,0x241e)
0xFF0A640A,	//0x0436		VoC_movreg32(REG45,REG23,IN_PARALLEL)	|	VoC_and16_rr(REG2,REG1,DEFAULT)
0x046031C2,	//0x0438		VoC_bnez16_r(Coolsand_write_byte_L1,REG2)
0x24342009,	//0x043a		VoC_lw16d_set_inc(REG1,0x2434,0x2)
0x3FFF1604,	//0x043c		VoC_and16_ri(REG4,0x3fff)
0xFF445DCC,	//0x043e		VoC_lw32z(ACC0,IN_PARALLEL)	|	VoC_sw32inc_p(ACC0,REG1,DEFAULT)
0x24341501,	//0x0440		VoC_sw16_d(REG1,0x2434)
0x046231C4,	//0x0442		VoC_bnez16_r(Coolsand_write_byte_L2,REG4)
0x0A85F096,	//0x0444		VoC_lw16i(REG5,0x2000)(lo)	|	VoC_lw16i_short(STATUS,0x4,DEFAULT)
0x0A842000,	//0x0446		VoC_lw16i(REG4,0x1000)(lo)	|	VoC_lw16i(REG5,0x2000)(hi)
0x14811000,	//0x0448		VoC_lw32_d(REG23,0x2402)(lo)	|	VoC_lw16i(REG4,0x1000)(hi)
0x09092402,	//0x044a		VoC_add32_rd(REG23,REG23,0x2432)(lo)	|	VoC_lw32_d(REG23,0x2402)(hi)
0x15452432,	//0x044c		VoC_sw16_d(REG5,0xffc3)(lo)	|	VoC_add32_rd(REG23,REG23,0x2432)(hi)
0x15447FC3,	//0x044e		VoC_sw16_d(REG4,0xffc2)(lo)	|	VoC_sw16_d(REG5,0xffc3)(hi)
0x15C17FC2,	//0x0450		VoC_sw32_d(REG23,0xffc4)(lo)	|	VoC_sw16_d(REG4,0xffc2)(hi)
0xDE807FC4,	//0x0452		VoC_cfg(0x0)	|	VoC_sw32_d(REG23,0xffc4)(hi)
0xF8F47005,	//0x0454		VoC_shr16_ri(REG4,0xfffffffe,IN_PARALLEL)	|	VoC_lw16i_short(REG5,0x0,DEFAULT)
0x40000A82,	//0x0456		VoC_lw16i(REG2,0x4000)
0x24320912,	//0x0458		VoC_add32_rd(REG45,REG45,0x2432)
0x24341502,	//0x045a		VoC_sw16_d(REG2,0x2434)
0x00081794,	//0x045c		VoC_cfg_lg(0x8,)
0x24321582,	//0x045e		VoC_sw32_d(REG45,0x2432)
		//0x0460		Coolsand_write_byte_L1
0xFC447096,	//0x0460		VoC_shru32_ri(ACC0,0x8,IN_PARALLEL)	|	VoC_lw16i_short(STATUS,0x4,DEFAULT)
		//0x0462		Coolsand_write_byte_L2
0xDFE9E580,	//0x0462		VoC_push16(RA,DEFAULT)	|	VoC_return
		//0x0463		Coolsand_copy_byte
0x03A22B80,	//0x0464		VoC_jal(Coolsand_peek_old_byte)
0x2B80E081,	//0x0466		VoC_jal(Coolsand_write_byte)(lo)	|	VoC_movreg16(REG1,REG4,DEFAULT)
0xDFA90426,	//0x0468		VoC_pop16(RA,DEFAULT)	|	VoC_jal(Coolsand_write_byte)(hi)
0xE580FFC0,	//0x046a		VoC_return	|	VoC_NOP
		//0x046c		Coolsand_rc_bit_tree_decode
0xDF415FE9,	//0x046c		VoC_push32(REG23,IN_PARALLEL)	|	VoC_push16(RA,DEFAULT)
0x24361504,	//0x046e		VoC_sw16_d(REG4,0x2436)
0xE01166C6,	//0x0470		VoC_lw16i_short(REG1,0x1,IN_PARALLEL)	|	VoC_loop_r_short(REG3,DEFAULT)
0x2436070B,	//0x0472		VoC_add16_rd(REG3,REG1,0x2436)
0x03E42B80,	//0x0474		VoC_jal(Coolsand_rc_get_bit)
		//0x0476		VoC_endloop0
0x7005FFC0,	//0x0476		VoC_lw16i_short(REG5,0x0,DEFAULT)	|	VoC_NAD
0x7025DF01,	//0x0478		VoC_lw16i_short(REG5,0x1,DEFAULT)	|	VoC_pop32(REG23,IN_PARALLEL)
0x7E1DC35B,	//0x047a		VoC_shr16_rr(REG5,REG3,DEFAULT)	|	VoC_sub16_rr(REG3,REG5,REG3,IN_PARALLEL)
0x7096DFA9,	//0x047c		VoC_lw16i_short(STATUS,0x4,DEFAULT)	|	VoC_pop16(RA,IN_PARALLEL)
0xE580C269,	//0x047e		VoC_return	|	VoC_sub16_rr(REG1,REG1,REG5,IN_PARALLEL)
		//0x0480		Coolsand_copy_bytes
0xE647DFE9,	//0x0480		VoC_loop_r_short(REG1,DEFAULT)	|	VoC_push16(RA,DEFAULT)
0x2B80DF42,	//0x0482		VoC_jal(Coolsand_peek_old_byte)(lo)	|	VoC_push32(REG45,DEFAULT)
0xE08103A2,	//0x0484		VoC_movreg16(REG1,REG4,DEFAULT)	|	VoC_jal(Coolsand_peek_old_byte)(hi)
0x04262B80,	//0x0486		VoC_jal(Coolsand_write_byte)
		//0x0488		VoC_endloop0
0xDFA9DF02,	//0x0488		VoC_pop16(RA,DEFAULT)	|	VoC_pop32(REG45,DEFAULT)
0xE580FFC0,	//0x048a		VoC_return	|	VoC_NOP
		//0x048c		Coolsand_rc_direct_bit
0xFF1A7C0B,	//0x048c		VoC_movreg32(REG45,REG67,IN_PARALLEL)	|	VoC_shru32_ri(REG67,0x1,DEFAULT)
0x242A658B,	//0x048e		VoC_bnlt32_rd(Coolsand_rc_direct_bit_L0,REG67,0x242a)
0xFDC57DC2,	//0x0490		VoC_shru32_ri(ACC1,0xfffffff8,IN_PARALLEL)	|	VoC_shru32_ri(REG45,0xfffffff8,DEFAULT)
0xE00762A2,	//0x0492		VoC_lw16i_short(REG7,0x0,IN_PARALLEL)	|	VoC_rbinc_i(REG6,0x8,DEFAULT)
0x31C0E51D,	//0x0494		VoC_bnez16_r(Coolsand_rc_direct_bit_L0,REG0)(lo)	|	VoC_or32_rr(ACC1,REG67,DEFAULT)
0x151B04A7,	//0x0496		VoC_sw16_d(BITCACHE,0x2435)(lo)	|	VoC_bnez16_r(Coolsand_rc_direct_bit_L0,REG0)(hi)
0xF2062435,	//0x0498		VoC_lw16i_short(REG6,0x10,DEFAULT)	|	VoC_sw16_d(BITCACHE,0x2435)(hi)
0x243548AE,	//0x049a		VoC_blt16_rd(Coolsand_rc_direct_bit_L0,REG6,0x2435)
0xDF445FE9,	//0x049c		VoC_push32(ACC0,IN_PARALLEL)	|	VoC_push16(RA,DEFAULT)
0x04B42B80,	//0x049e		VoC_jal(Coolsand_LzmaDmaInData)
0xFBF3FA83,	//0x04a0		VoC_shr32_ri(REG67,0xfffffffe,DEFAULT)	|	VoC_shr32_ri(REG67,0x10,DEFAULT)
0xC8E35FA9,	//0x04a2		VoC_add32_rr(REG67,REG67,ACC0,IN_PARALLEL)	|	VoC_pop16(RA,DEFAULT)
0x1583DF04,	//0x04a4		VoC_sw32_d(REG67,0x2400)(lo)	|	VoC_pop32(ACC0,DEFAULT)
0xFF132400,	//0x04a6		VoC_movreg32(REG67,REG45,DEFAULT)	|	VoC_sw32_d(REG67,0x2400)(hi)
		//0x04a7		Coolsand_rc_direct_bit_L0
0x0A96E240,	//0x04a8		VoC_lw16i(STATUS,0x44)(lo)	|	VoC_lbinc_p(REG0)
0x7C0B0044,	//0x04aa		VoC_shru32_ri(REG67,0x1,DEFAULT)	|	VoC_lw16i(STATUS,0x44)(hi)
0x4B5AE011,	//0x04ac		VoC_sub32_rr(REG45,ACC1,REG67,DEFAULT)	|	VoC_lw16i_short(REG1,0x1,IN_PARALLEL)
0x3080FDF9,	//0x04ae		VoC_bcz16_r(Coolsand_rc_direct_bit_L1)(lo)	|	VoC_shru32_ri(REG23,0xffffffff,IN_PARALLEL)
0x644A04B3,	//0x04b0		VoC_or16_rr(REG2,REG1,DEFAULT)	|	VoC_bcz16_r(Coolsand_rc_direct_bit_L1)(hi)
0xE580FF15,	//0x04b2		VoC_return	|	VoC_movreg32(ACC1,REG45,IN_PARALLEL)
		//0x04b3		Coolsand_rc_direct_bit_L1
		//0x04b4		Coolsand_LzmaDmaInData
0x00000A86,	//0x04b4		VoC_lw16i(REG6,0x0)
0x02000A87,	//0x04b6		VoC_lw16i(REG7,0x200)
0x24001484,	//0x04b8		VoC_lw32_d(ACC0,0x2400)
0x7FC31546,	//0x04ba		VoC_sw16_d(REG6,0xffc3)
0x7FC21547,	//0x04bc		VoC_sw16_d(REG7,0xffc2)
0x7FC415C4,	//0x04be		VoC_sw32_d(ACC0,0xffc4)
0xFFC0DE80,	//0x04c0		VoC_NOP	|	VoC_cfg(0x0)
0x00081794,	//0x04c2		VoC_cfg_lg(0x8,)
0xFFC0E580,	//0x04c4		VoC_NAD	|	VoC_return
