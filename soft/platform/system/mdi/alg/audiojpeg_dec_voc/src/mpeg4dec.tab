		//0x0230		VoC_code_section_1
		//0x0230		Coolsand_MPEG4RunDma
0x7FC31542,	//0x0230		VoC_sw16_d(REG2,0xffc3)
0x7FC21543,	//0x0232		VoC_sw16_d(REG3,0xffc2)
0x7FC415C2,	//0x0234		VoC_sw32_d(REG45,0xffc4)
0xFFC0DE80,	//0x0236		VoC_NOP	|	VoC_cfg(0x0)
0x00081794,	//0x0238		VoC_cfg_lg(0x8,)
0xFFC06580,	//0x023a		VoC_NAD(IN_PARALLEL)	|	VoC_return
		//0x023c		Coolsand_MPEG4RunDmaCmdSend
0x7FC31542,	//0x023c		VoC_sw16_d(REG2,0xffc3)
0x7FC21543,	//0x023e		VoC_sw16_d(REG3,0xffc2)
0x7FC415C2,	//0x0240		VoC_sw32_d(REG45,0xffc4)
0x20081503,	//0x0242		VoC_sw16_d(REG3,0x2008)
0xDFC6E580,	//0x0244		VoC_push16(REG6,DEFAULT)	|	VoC_return
		//0x0245		Coolsand_MPEG4BsWaitLastDma
0x0A86DE80,	//0x0246		VoC_lw16i(REG6,0x0)(lo)	|	VoC_cfg(0x0)
0x17940000,	//0x0248		VoC_cfg_lg(0x8,)(lo)	|	VoC_lw16i(REG6,0x0)(hi)
0x15060008,	//0x024a		VoC_sw16_d(REG6,0x2008)(lo)	|	VoC_cfg_lg(0x8,)(hi)
0xDF862008,	//0x024c		VoC_pop16(REG6,DEFAULT)	|	VoC_sw16_d(REG6,0x2008)(hi)
0xE534E580,	//0x024e		VoC_or32_rr(ACC0,RL6,DEFAULT)	|	VoC_return
		//0x024f		Coolsand_MPEG4Run2DDma
0x7FC81540,	//0x0250		VoC_sw16_d(REG0,0xffc8)
0x7FC91541,	//0x0252		VoC_sw16_d(REG1,0xffc9)
0x7FC31542,	//0x0254		VoC_sw16_d(REG2,0xffc3)
0x7FC21543,	//0x0256		VoC_sw16_d(REG3,0xffc2)
0x7FC415C4,	//0x0258		VoC_sw32_d(ACC0,0xffc4)
0xFFC0DE80,	//0x025a		VoC_NOP	|	VoC_cfg(0x0)
0x00081794,	//0x025c		VoC_cfg_lg(0x8,)
0xE534E580,	//0x025e		VoC_or32_rr(ACC0,RL6,DEFAULT)	|	VoC_return
		//0x025f		Coolsand_MPEG4Run2DDmaCmdSend
0x7FC81540,	//0x0260		VoC_sw16_d(REG0,0xffc8)
0x7FC91541,	//0x0262		VoC_sw16_d(REG1,0xffc9)
0x7FC31542,	//0x0264		VoC_sw16_d(REG2,0xffc3)
0x7FC21543,	//0x0266		VoC_sw16_d(REG3,0xffc2)
0x7FC415C4,	//0x0268		VoC_sw32_d(ACC0,0xffc4)
0xF00EE580,	//0x026a		VoC_lw16i_short(RL7_LO,0x0,DEFAULT)	|	VoC_return
		//0x026b		Coolsand_MPEG4YDmaCmdSend
0x40000A8F,	//0x026c		VoC_lw16i(RL7_HI,0x4000)
0x00040A84,	//0x026e		VoC_lw16i(REG4,0x4)
0x1A701484,	//0x0270		VoC_lw32_d(ACC0,0x1a70)
0x0CAE1406,	//0x0272		VoC_lw16_d(REG6,0xcae)
0xE00778EE,	//0x0274		VoC_lw16i_short(REG7,0x0,IN_PARALLEL)	|	VoC_shr16_ri(REG6,0xfffffffd,DEFAULT)
0x1400C91C,	//0x0276		VoC_lw16_d(REG0,0xcbc)(lo)	|	VoC_add32_rr(ACC0,ACC0,REG67,DEFAULT)
0x0A820CBC,	//0x0278		VoC_lw16i(REG2,0x678)(lo)	|	VoC_lw16_d(REG0,0xcbc)(hi)
0x70860678,	//0x027a		VoC_lw16i_short(REG6,0x4,DEFAULT)	|	VoC_lw16i(REG2,0x678)(hi)
0x78F5F605,	//0x027c		VoC_shr16_ri(REG5,0xfffffffe,DEFAULT)	|	VoC_movreg16(REG5,REG0,IN_PARALLEL)
0xF023E007,	//0x027e		VoC_lw16i_short(REG3,0x1,DEFAULT)	|	VoC_lw16i_short(REG7,0x0,IN_PARALLEL)
0xF810653C,	//0x0280		VoC_shr16_ri(REG0,0x2,IN_PARALLEL)	|	VoC_or32_rr(ACC0,RL7,DEFAULT)
0xC2187081,	//0x0282		VoC_sub16_rr(REG0,REG0,REG3,IN_PARALLEL)	|	VoC_lw16i_short(REG1,0x4,DEFAULT)
0x7FC31542,	//0x0284		VoC_sw16_d(REG2,0xffc3)
0x7FC21543,	//0x0286		VoC_sw16_d(REG3,0xffc2)
0x7FC81540,	//0x0288		VoC_sw16_d(REG0,0xffc8)
0x7FC91541,	//0x028a		VoC_sw16_d(REG1,0xffc9)
0x7FC415C4,	//0x028c		VoC_sw32_d(ACC0,0xffc4)
0x40A2DE80,	//0x028e		VoC_add16_rr(REG2,REG2,REG4,DEFAULT)	|	VoC_cfg(0x0)
0x1794C91C,	//0x0290		VoC_cfg_lg(0x8,)(lo)	|	VoC_add32_rr(ACC0,ACC0,REG67,IN_PARALLEL)
0xC3760008,	//0x0292		VoC_sub16_rr(REG6,REG5,REG6,DEFAULT)	|	VoC_cfg_lg(0x8,)(hi)
0x7FC81540,	//0x0294		VoC_sw16_d(REG0,0xffc8)
0x7FC91541,	//0x0296		VoC_sw16_d(REG1,0xffc9)
0x7FC31542,	//0x0298		VoC_sw16_d(REG2,0xffc3)
0x7FC21543,	//0x029a		VoC_sw16_d(REG3,0xffc2)
0x7FC415C4,	//0x029c		VoC_sw32_d(ACC0,0xffc4)
0x40A2DE80,	//0x029e		VoC_add16_rr(REG2,REG2,REG4,DEFAULT)	|	VoC_cfg(0x0)
0x1794C91C,	//0x02a0		VoC_cfg_lg(0x8,)(lo)	|	VoC_add32_rr(ACC0,ACC0,REG67,IN_PARALLEL)
0xF0860008,	//0x02a2		VoC_lw16i_short(REG6,0x4,DEFAULT)	|	VoC_cfg_lg(0x8,)(hi)
0x7FC81540,	//0x02a4		VoC_sw16_d(REG0,0xffc8)
0x7FC91541,	//0x02a6		VoC_sw16_d(REG1,0xffc9)
0x7FC31542,	//0x02a8		VoC_sw16_d(REG2,0xffc3)
0x7FC21543,	//0x02aa		VoC_sw16_d(REG3,0xffc2)
0x7FC415C4,	//0x02ac		VoC_sw32_d(ACC0,0xffc4)
0x40A2DE80,	//0x02ae		VoC_add16_rr(REG2,REG2,REG4,DEFAULT)	|	VoC_cfg(0x0)
0x1794C91C,	//0x02b0		VoC_cfg_lg(0x8,)(lo)	|	VoC_add32_rr(ACC0,ACC0,REG67,IN_PARALLEL)
0x15400008,	//0x02b2		VoC_sw16_d(REG0,0xffc8)(lo)	|	VoC_cfg_lg(0x8,)(hi)
0x15417FC8,	//0x02b4		VoC_sw16_d(REG1,0xffc9)(lo)	|	VoC_sw16_d(REG0,0xffc8)(hi)
0x15427FC9,	//0x02b6		VoC_sw16_d(REG2,0xffc3)(lo)	|	VoC_sw16_d(REG1,0xffc9)(hi)
0x15437FC3,	//0x02b8		VoC_sw16_d(REG3,0xffc2)(lo)	|	VoC_sw16_d(REG2,0xffc3)(hi)
0x15C47FC2,	//0x02ba		VoC_sw32_d(ACC0,0xffc4)(lo)	|	VoC_sw16_d(REG3,0xffc2)(hi)
0xE5807FC4,	//0x02bc		VoC_return	|	VoC_sw32_d(ACC0,0xffc4)(hi)
		//0x02be		Coolsand_MPEG4UDmaCmdSend
0x0A82DFE9,	//0x02be		VoC_lw16i(REG2,0x678)(lo)	|	VoC_push16(RA,DEFAULT)
0x07120678,	//0x02c0		VoC_add16_rd(REG2,REG2,0x5e70)(lo)	|	VoC_lw16i(REG2,0x678)(hi)
0x07125E70,	//0x02c2		VoC_add16_rd(REG2,REG2,0x5e68)(lo)	|	VoC_add16_rd(REG2,REG2,0x5e70)(hi)
0xF00E5E68,	//0x02c4		VoC_lw16i_short(RL7_LO,0x0,DEFAULT)	|	VoC_add16_rd(REG2,REG2,0x5e68)(hi)
0x40000A8F,	//0x02c6		VoC_lw16i(RL7_HI,0x4000)
0x00040A81,	//0x02c8		VoC_lw16i(REG1,0x4)
0x00010A83,	//0x02ca		VoC_lw16i(REG3,0x1)
0x0CBC1400,	//0x02cc		VoC_lw16_d(REG0,0xcbc)
0x1A721484,	//0x02ce		VoC_lw32_d(ACC0,0x1a72)
0x0CAE1406,	//0x02d0		VoC_lw16_d(REG6,0xcae)
0xE00778F6,	//0x02d2		VoC_lw16i_short(REG7,0x0,IN_PARALLEL)	|	VoC_shr16_ri(REG6,0xfffffffe,DEFAULT)
0xF818491C,	//0x02d4		VoC_shr16_ri(REG0,0x3,IN_PARALLEL)	|	VoC_add32_rr(ACC0,ACC0,REG67,DEFAULT)
0xE53CC218,	//0x02d6		VoC_or32_rr(ACC0,RL7,DEFAULT)	|	VoC_sub16_rr(REG0,REG0,REG3,DEFAULT)
0x7FC81540,	//0x02d8		VoC_sw16_d(REG0,0xffc8)
0x7FC91541,	//0x02da		VoC_sw16_d(REG1,0xffc9)
0x7FC31542,	//0x02dc		VoC_sw16_d(REG2,0xffc3)
0x7FC21543,	//0x02de		VoC_sw16_d(REG3,0xffc2)
0x7FC415C4,	//0x02e0		VoC_sw32_d(ACC0,0xffc4)
0xFFC0DFA9,	//0x02e2		VoC_NOP	|	VoC_pop16(RA,DEFAULT)
0xDFE9E580,	//0x02e4		VoC_push16(RA,DEFAULT)	|	VoC_return
		//0x02e5		Coolsand_MPEG4VDmaCmdSend
0x06780A82,	//0x02e6		VoC_lw16i(REG2,0x678)
0x5E6D0712,	//0x02e8		VoC_add16_rd(REG2,REG2,0x5e6d)
0x5E6C0712,	//0x02ea		VoC_add16_rd(REG2,REG2,0x5e6c)
0x0A8FF00E,	//0x02ec		VoC_lw16i(RL7_HI,0x4000)(lo)	|	VoC_lw16i_short(RL7_LO,0x0,DEFAULT)
0x0A814000,	//0x02ee		VoC_lw16i(REG1,0x4)(lo)	|	VoC_lw16i(RL7_HI,0x4000)(hi)
0x0A830004,	//0x02f0		VoC_lw16i(REG3,0x1)(lo)	|	VoC_lw16i(REG1,0x4)(hi)
0x14000001,	//0x02f2		VoC_lw16_d(REG0,0xcbc)(lo)	|	VoC_lw16i(REG3,0x1)(hi)
0x14840CBC,	//0x02f4		VoC_lw32_d(ACC0,0x1a74)(lo)	|	VoC_lw16_d(REG0,0xcbc)(hi)
0x14061A74,	//0x02f6		VoC_lw16_d(REG6,0xcae)(lo)	|	VoC_lw32_d(ACC0,0x1a74)(hi)
0x78F60CAE,	//0x02f8		VoC_shr16_ri(REG6,0xfffffffe,DEFAULT)	|	VoC_lw16_d(REG6,0xcae)(hi)
0x491CE007,	//0x02fa		VoC_add32_rr(ACC0,ACC0,REG67,DEFAULT)	|	VoC_lw16i_short(REG7,0x0,IN_PARALLEL)
0xC218F818,	//0x02fc		VoC_sub16_rr(REG0,REG0,REG3,DEFAULT)	|	VoC_shr16_ri(REG0,0x3,IN_PARALLEL)
0x1540E53C,	//0x02fe		VoC_sw16_d(REG0,0xffc8)(lo)	|	VoC_or32_rr(ACC0,RL7,DEFAULT)
0x15417FC8,	//0x0300		VoC_sw16_d(REG1,0xffc9)(lo)	|	VoC_sw16_d(REG0,0xffc8)(hi)
0x15427FC9,	//0x0302		VoC_sw16_d(REG2,0xffc3)(lo)	|	VoC_sw16_d(REG1,0xffc9)(hi)
0x15437FC3,	//0x0304		VoC_sw16_d(REG3,0xffc2)(lo)	|	VoC_sw16_d(REG2,0xffc3)(hi)
0x15C47FC2,	//0x0306		VoC_sw32_d(ACC0,0xffc4)(lo)	|	VoC_sw16_d(REG3,0xffc2)(hi)
0xDFA97FC4,	//0x0308		VoC_pop16(RA,DEFAULT)	|	VoC_sw32_d(ACC0,0xffc4)(hi)
0xE580FFC0,	//0x030a		VoC_return	|	VoC_NOP
		//0x030c		Coolsand_MPEG4WaiteLastDma
0xFFC0DE80,	//0x030c		VoC_NOP	|	VoC_cfg(0x0)
0x00081794,	//0x030e		VoC_cfg_lg(0x8,)
0xFFC06580,	//0x0310		VoC_NAD(IN_PARALLEL)	|	VoC_return
		//0x0312		CS_check_resync_marker
0x2000151B,	//0x0312		VoC_sw16_d(BITCACHE,0x2000)
0xF4567024,	//0x0314		VoC_lw16i_short(WRAP2,0xa,IN_PARALLEL)	|	VoC_lw16i_short(REG4,0x1,DEFAULT)
0x20001405,	//0x0316		VoC_lw16_d(REG5,0x2000)
0xE003411C,	//0x0318		VoC_lw16i_short(REG3,0x0,IN_PARALLEL)	|	VoC_add16_rr(REG4,REG4,REG3,DEFAULT)
0x00071605,	//0x031a		VoC_and16_ri(REG5,0x7)
0x031F31C5,	//0x031c		VoC_bnez16_r(CS_check_resync_marker01,REG5)
0xE242F105,	//0x031e		VoC_lbinc_p(REG2)	|	VoC_lw16i_short(REG5,0x8,DEFAULT)
		//0x031f		CS_check_resync_marker01
0xE017636A,	//0x0320		VoC_lw16i_short(REG7,0x1,IN_PARALLEL)	|	VoC_rb_r(REG6,REG5,DEFAULT)
0xE01143E8,	//0x0322		VoC_lw16i_short(REG1,0x1,IN_PARALLEL)	|	VoC_sub16_rr(REG0,REG7,REG5,DEFAULT)
0xC3CFFE07,	//0x0324		VoC_sub16_rr(REG7,REG7,REG1,DEFAULT)	|	VoC_shr16_rr(REG7,REG0,DEFAULT)
0x033E35B7,	//0x0326		VoC_bne16_rr(CS_check_resync_marker02,REG6,REG7)
0x151BE242,	//0x0328		VoC_sw16_d(BITCACHE,0x2000)(lo)	|	VoC_lbinc_p(REG2)
0xFFC02000,	//0x032a		VoC_NOP	|	VoC_sw16_d(BITCACHE,0x2000)(hi)
0x20001400,	//0x032c		VoC_lw16_d(REG0,0x2000)
0xF6464229,	//0x032e		VoC_movreg16(REG6,REG2,IN_PARALLEL)	|	VoC_sub16_rr(REG1,REG0,REG5,DEFAULT)
0xFF37603B,	//0x0330		VoC_movreg32(RL7,RL6,IN_PARALLEL)	|	VoC_movreg16(BITCACHE,REG1,DEFAULT)
0xE0116323,	//0x0332		VoC_lw16i_short(REG1,0x1,IN_PARALLEL)	|	VoC_rbinc_r(REG7,REG4,DEFAULT)
0x62C2E242,	//0x0334		VoC_rb_i(REG6,0x10,DEFAULT)	|	VoC_lbinc_p(REG2)
0x601BF6C2,	//0x0336		VoC_movreg16(BITCACHE,REG0,DEFAULT)	|	VoC_movreg16(REG2,REG6,IN_PARALLEL)
0x31C7FF3E,	//0x0338		VoC_bnez16_r(CS_check_resync_marker02,REG7)(lo)	|	VoC_movreg32(RL6,RL7,IN_PARALLEL)
0x35B1033E,	//0x033a		VoC_bne16_rr(CS_check_resync_marker02,REG6,REG1)(lo)	|	VoC_bnez16_r(CS_check_resync_marker02,REG7)(hi)
0x7023033E,	//0x033c		VoC_lw16i_short(REG3,0x1,DEFAULT)	|	VoC_bne16_rr(CS_check_resync_marker02,REG6,REG1)(hi)
		//0x033e		CS_check_resync_marker02
0xE580F406,	//0x033e		VoC_return	|	VoC_lw16i_short(WRAP2,0x0,IN_PARALLEL)
		//0x0340		CS_read_video_packet_header
0x0CB01483,	//0x0340		VoC_lw32_d(REG67,0xcb0)
0xF4564DBB,	//0x0342		VoC_lw16i_short(WRAP2,0xa,IN_PARALLEL)	|	VoC_multf32_rr(REG67,REG6,REG7,DEFAULT)
0xE1007005,	//0x0344		VoC_lw16i_short(REG0,0x10,IN_PARALLEL)	|	VoC_lw16i_short(REG5,0x0,DEFAULT)
0xE08143A6,	//0x0346		VoC_lw16i_short(REG1,0x8,IN_PARALLEL)	|	VoC_sub16_rr(REG6,REG6,REG4,DEFAULT)
0x034C3187,	//0x0348		VoC_bez16_r(CS_read_video_packet_header02,REG7)
0xC145FA83,	//0x034a		VoC_add16_rr(REG5,REG5,REG0,DEFAULT)	|	VoC_shr32_ri(REG67,0x10,DEFAULT)
		//0x034c		CS_read_video_packet_header02
0xE04060C7,	//0x034c		VoC_lw16i_short(REG0,0x4,IN_PARALLEL)	|	VoC_movreg16(REG7,REG6,DEFAULT)
0x7F001647,	//0x034e		VoC_and16_ri(REG7,0xff00)
0x03543187,	//0x0350		VoC_bez16_r(CS_read_video_packet_header03,REG7)
0xC14DF846,	//0x0352		VoC_add16_rr(REG5,REG5,REG1,DEFAULT)	|	VoC_shr16_ri(REG6,0x8,DEFAULT)
		//0x0354		CS_read_video_packet_header03
0x1607E0C7,	//0x0354		VoC_and16_ri(REG7,0xf0)(lo)	|	VoC_movreg16(REG7,REG6,DEFAULT)
0x318700F0,	//0x0356		VoC_bez16_r(CS_read_video_packet_header06,REG7)(lo)	|	VoC_and16_ri(REG7,0xf0)(hi)
0xF826035C,	//0x0358		VoC_shr16_ri(REG6,0x4,DEFAULT)	|	VoC_bez16_r(CS_read_video_packet_header06,REG7)(hi)
0xFFC04145,	//0x035a		VoC_NAD(IN_PARALLEL)	|	VoC_add16_rr(REG5,REG5,REG0,DEFAULT)
		//0x035c		CS_read_video_packet_header06
0xE00070E7,	//0x035c		VoC_lw16i_short(REG0,0x0,IN_PARALLEL)	|	VoC_lw16i_short(REG7,0x7,DEFAULT)
0x036234B7,	//0x035e		VoC_bngt16_rr(CS_read_video_packet_header04,REG6,REG7)
0xE5CEF080,	//0x0360		VoC_jump(CS_read_video_packet_header07)	|	VoC_lw16i_short(REG0,0x4,DEFAULT)
		//0x0362		CS_read_video_packet_header04
0x34B7F067,	//0x0362		VoC_bngt16_rr(CS_read_video_packet_header05,REG6,REG7)(lo)	|	VoC_lw16i_short(REG7,0x3,DEFAULT)
0xF0600367,	//0x0364		VoC_lw16i_short(REG0,0x3,DEFAULT)	|	VoC_bngt16_rr(CS_read_video_packet_header05,REG6,REG7)(hi)
0xF027E5C9,	//0x0366		VoC_lw16i_short(REG7,0x1,DEFAULT)	|	VoC_jump(CS_read_video_packet_header07)
		//0x0367		CS_read_video_packet_header05
0x036C34B7,	//0x0368		VoC_bngt16_rr(CS_read_video_packet_header16,REG6,REG7)
0xFFC07040,	//0x036a		VoC_NAD(IN_PARALLEL)	|	VoC_lw16i_short(REG0,0x2,DEFAULT)
		//0x036c		CS_read_video_packet_header16
0x036F35B7,	//0x036c		VoC_bne16_rr(CS_read_video_packet_header07,REG6,REG7)
0xC146F020,	//0x036e		VoC_add16_rr(REG6,REG5,REG0,DEFAULT)	|	VoC_lw16i_short(REG0,0x1,DEFAULT)
		//0x036f		CS_read_video_packet_header07
0x151BF024,	//0x0370		VoC_sw16_d(BITCACHE,0x2000)(lo)	|	VoC_lw16i_short(REG4,0x1,DEFAULT)
0xC11C2000,	//0x0372		VoC_add16_rr(REG4,REG4,REG3,DEFAULT)	|	VoC_sw16_d(BITCACHE,0x2000)(hi)
0x20001405,	//0x0374		VoC_lw16_d(REG5,0x2000)
0x00071605,	//0x0376		VoC_and16_ri(REG5,0x7)
0x037B31C5,	//0x0378		VoC_bnez16_r(CS_read_video_packet_header01,REG5)
0xE242F105,	//0x037a		VoC_lbinc_p(REG2)	|	VoC_lw16i_short(REG5,0x8,DEFAULT)
		//0x037b		CS_read_video_packet_header01
0xE242E283,	//0x037c		VoC_lbinc_p(REG2)	|	VoC_rbinc_i(REG7,0x10,DEFAULT)
0xE242E323,	//0x037e		VoC_lbinc_p(REG2)	|	VoC_rbinc_r(REG7,REG4,DEFAULT)
0xE242E32B,	//0x0380		VoC_lbinc_p(REG2)	|	VoC_rbinc_r(REG7,REG5,DEFAULT)
0xE242E333,	//0x0382		VoC_lbinc_p(REG2)	|	VoC_rbinc_r(REG7,REG6,DEFAULT)
0x1A761400,	//0x0384		VoC_lw16_d(REG0,0x1a76)
0xE242E300,	//0x0386		VoC_lbinc_p(REG2)	|	VoC_rbinc_r(REG4,REG0,DEFAULT)
0x1504E285,	//0x0388		VoC_sw16_d(REG4,0xcad)(lo)	|	VoC_rbinc_i(REG5,0x1,DEFAULT)
0x31850CAD,	//0x038a		VoC_bez16_r(CS_read_video_packet_header08,REG5)(lo)	|	VoC_sw16_d(REG4,0xcad)(hi)
0xE284039E,	//0x038c		VoC_rbinc_i(REG4,0x1,DEFAULT)	|	VoC_bez16_r(CS_read_video_packet_header08,REG5)(hi)
0x00001804,	//0x038e		VoC_lw16i_set_inc(REG0,0x0,0x1)
		//0x0390		CS_read_video_packet_header10
0x03963184,	//0x0390		VoC_bez16_r(CS_read_video_packet_header09,REG4)
0xDE006284,	//0x0392		VoC_inc_p(REG0,IN_PARALLEL)	|	VoC_rbinc_i(REG4,0x1,DEFAULT)
0xE5FBE242,	//0x0394		VoC_jump(CS_read_video_packet_header10)	|	VoC_lbinc_p(REG2)
		//0x0396		CS_read_video_packet_header09
0xE242E284,	//0x0396		VoC_lbinc_p(REG2)	|	VoC_rbinc_i(REG4,0x1,DEFAULT)
0x1A771404,	//0x0398		VoC_lw16_d(REG4,0x1a77)
0x039D3184,	//0x039a		VoC_bez16_r(CS_read_video_packet_header11,REG4)
0xE242E321,	//0x039c		VoC_lbinc_p(REG2)	|	VoC_rbinc_r(REG5,REG4,DEFAULT)
		//0x039d		CS_read_video_packet_header11
		//0x039e		CS_read_video_packet_header08
0xF01EE242,	//0x039e		VoC_lw16i_short(WRAP2,0x0,DEFAULT)	|	VoC_lbinc_p(REG2)
0xFFC06580,	//0x03a0		VoC_NAD(IN_PARALLEL)	|	VoC_return
		//0x03a2		CII_mpeg4_idctrow
0xF4017051,	//0x03a2		VoC_lw16i_short(FORMAT32,0x0,IN_PARALLEL)	|	VoC_lw16i_short(INC1,0x2,DEFAULT)
0xD9C9DFC1,	//0x03a4		VoC_lw32inc_p(REG23,REG1,DEFAULT)	|	VoC_push16(REG1,DEFAULT)
0xFF4659CA,	//0x03a6		VoC_lw32z(RL6,IN_PARALLEL)	|	VoC_lw32inc_p(REG45,REG1,DEFAULT)
0xFF4459CB,	//0x03a8		VoC_lw32z(ACC0,IN_PARALLEL)	|	VoC_lw32inc_p(REG67,REG1,DEFAULT)
0xF6CD59CD,	//0x03aa		VoC_movreg16(RL6_HI,REG6,IN_PARALLEL)	|	VoC_lw32inc_p(ACC1,REG1,DEFAULT)
0xF6497A2E,	//0x03ac		VoC_movreg16(ACC0_HI,REG2,IN_PARALLEL)	|	VoC_shr32_ri(RL6,0x5,DEFAULT)
0x03BE31C3,	//0x03ae		VoC_bnez16_r(idctrow_100,REG3)
0x03BE3342,	//0x03b0		VoC_bnez32_r(idctrow_100,REG45)
0x03BE3346,	//0x03b2		VoC_bnez32_r(idctrow_100,RL6)
0x03BE31C7,	//0x03b4		VoC_bnez16_r(idctrow_100,REG7)
0x03BE3345,	//0x03b6		VoC_bnez32_r(idctrow_100,ACC1)
0x5F81F8EA,	//0x03b8		VoC_pop16(REG1,DEFAULT)	|	VoC_shr16_ri(REG2,0xfffffffd,DEFAULT)
0xE881F643,	//0x03ba		VoC_loop_i_short(0x4,DEFAULT)	|	VoC_movreg16(REG3,REG2,IN_PARALLEL)
		//0x03bc		VoC_endloop0
0xE580DDC9,	//0x03bc		VoC_return	|	VoC_sw32inc_p(REG23,REG1,DEFAULT)
		//0x03be		idctrow_100
0x7A2CFF28,	//0x03be		VoC_shr32_ri(ACC0,0x5,DEFAULT)	|	VoC_movreg32(REG01,ACC1,DEFAULT)
0x0924C106,	//0x03c0		VoC_add32_rd(ACC0,ACC0,0x5e1a)(lo)	|	VoC_add16_rr(REG6,REG4,REG0,IN_PARALLEL)
0x49365E1A,	//0x03c2		VoC_add32_rr(RL6,ACC0,RL6,DEFAULT)	|	VoC_add32_rd(ACC0,ACC0,0x5e1a)(hi)
0x0A34CB37,	//0x03c4		VoC_multf32_rd(ACC0,REG6,0x5e1c)(lo)	|	VoC_sub32_rr(RL7,ACC0,RL6,IN_PARALLEL)
0x0F005E1C,	//0x03c6		VoC_msu32_rd(REG0,0x5e1d)(lo)	|	VoC_multf32_rd(ACC0,REG6,0x5e1c)(hi)
0xFF255E1D,	//0x03c8		VoC_movreg32(ACC1,ACC0,DEFAULT)	|	VoC_msu32_rd(REG0,0x5e1d)(hi)
0xFF2C7F25,	//0x03ca		VoC_movreg32(ACC0,ACC1,IN_PARALLEL)	|	VoC_movreg32(ACC1,ACC0,DEFAULT)
0x5E1E0E20,	//0x03cc		VoC_mac32_rd(REG4,0x5e1e)
0x0FF0180A,	//0x03ce		VoC_lw16i_set_inc(REG2,0xff0,0x2)
0xCBA649A4,	//0x03d0		VoC_sub32_rr(RL6,RL6,ACC0,IN_PARALLEL)	|	VoC_add32_rr(ACC0,RL6,ACC0,DEFAULT)
0xCBED49EF,	//0x03d2		VoC_sub32_rr(ACC1,RL7,ACC1,IN_PARALLEL)	|	VoC_add32_rr(RL7,RL7,ACC1,DEFAULT)
0xC0CE5DD4,	//0x03d4		VoC_add16_rr(REG6,REG3,REG1,IN_PARALLEL)	|	VoC_sw32inc_p(ACC0,REG2,DEFAULT)
0xDDD5DDD7,	//0x03d6		VoC_sw32inc_p(ACC1,REG2,DEFAULT)	|	VoC_sw32inc_p(RL7,REG2,DEFAULT)
0x5E1F0A34,	//0x03d8		VoC_multf32_rd(ACC0,REG6,0x5e1f)
0x5E200E18,	//0x03da		VoC_mac32_rd(REG3,0x5e20)
0xC1EB7F25,	//0x03dc		VoC_add16_rr(REG3,REG7,REG5,IN_PARALLEL)	|	VoC_movreg32(ACC1,ACC0,DEFAULT)
0xFF2C7F27,	//0x03de		VoC_movreg32(ACC0,ACC1,IN_PARALLEL)	|	VoC_movreg32(RL7,ACC0,DEFAULT)
0x5E210F08,	//0x03e0		VoC_msu32_rd(REG1,0x5e21)
0x5E220A1C,	//0x03e2		VoC_multf32_rd(ACC0,REG3,0x5e22)
0xDDD67F26,	//0x03e4		VoC_sw32inc_p(RL6,REG2,IN_PARALLEL)	|	VoC_movreg32(RL6,ACC0,DEFAULT)
0x0F38FF25,	//0x03e6		VoC_msu32_rd(REG7,0x5e23)(lo)	|	VoC_movreg32(ACC1,ACC0,DEFAULT)
0x180A5E23,	//0x03e8		VoC_lw16i_set_inc(REG2,0x1a86,0x2)(lo)	|	VoC_msu32_rd(REG7,0x5e23)(hi)
0x7F231A86,	//0x03ea		VoC_movreg32(REG67,ACC0,DEFAULT)	|	VoC_lw16i_set_inc(REG2,0x1a86,0x2)(hi)
0x0F28FF2C,	//0x03ec		VoC_msu32_rd(REG5,0x5e24)(lo)	|	VoC_movreg32(ACC0,ACC1,IN_PARALLEL)
0x49DB5E24,	//0x03ee		VoC_add32_rr(REG67,RL7,REG67,DEFAULT)	|	VoC_msu32_rd(REG5,0x5e24)(hi)
0x49A2CBDF,	//0x03f0		VoC_add32_rr(REG45,RL6,ACC0,DEFAULT)	|	VoC_sub32_rr(RL7,RL7,REG67,IN_PARALLEL)
0x49E8CBA5,	//0x03f2		VoC_add32_rr(REG01,RL7,ACC1,DEFAULT)	|	VoC_sub32_rr(ACC1,RL6,ACC0,IN_PARALLEL)
0xF639CBED,	//0x03f4		VoC_lw16i_short(FORMAT32,0xfffffff1,DEFAULT)	|	VoC_sub32_rr(ACC1,RL7,ACC1,IN_PARALLEL)
0x0A0CFBF8,	//0x03f6		VoC_multf32_rd(ACC0,REG1,0x5e25)(lo)	|	VoC_shr32_ri(REG01,0xffffffff,DEFAULT)
0x79085E25,	//0x03f8		VoC_shru16_ri(REG0,0x1,DEFAULT)	|	VoC_multf32_rd(ACC0,REG1,0x5e25)(hi)
0x0E00F401,	//0x03fa		VoC_mac32_rd(REG0,0x5e25)(lo)	|	VoC_lw16i_short(FORMAT32,0x0,IN_PARALLEL)
0x5DD35E25,	//0x03fc		VoC_sw32inc_p(REG67,REG2,DEFAULT)	|	VoC_mac32_rd(REG0,0x5e25)(hi)
0x0923F589,	//0x03fe		VoC_add32_rd(REG67,ACC0,0x5e1a)(lo)	|	VoC_lw16i_short(FORMAT32,0xfffffff1,IN_PARALLEL)
0x7A435E1A,	//0x0400		VoC_shr32_ri(REG67,0x8,DEFAULT)	|	VoC_add32_rd(REG67,ACC0,0x5e1a)(hi)
0xFBF8FF28,	//0x0402		VoC_shr32_ri(REG01,0xffffffff,DEFAULT)	|	VoC_movreg32(REG01,ACC1,IN_PARALLEL)
0x5E250A0C,	//0x0404		VoC_multf32_rd(ACC0,REG1,0x5e25)
0xF4017908,	//0x0406		VoC_lw16i_short(FORMAT32,0x0,IN_PARALLEL)	|	VoC_shru16_ri(REG0,0x1,DEFAULT)
0x5E250E00,	//0x0408		VoC_mac32_rd(REG0,0x5e25)
0x1A861808,	//0x040a		VoC_lw16i_set_inc(REG0,0x1a86,0x2)
0x5E1A0927,	//0x040c		VoC_add32_rd(RL7,ACC0,0x5e1a)
0xE0737A47,	//0x040e		VoC_lw16i_short(REG3,0x7,IN_PARALLEL)	|	VoC_shr32_ri(RL7,0x8,DEFAULT)
0xDF81DDD3,	//0x0410		VoC_pop16(REG1,DEFAULT)	|	VoC_sw32inc_p(REG67,REG2,DEFAULT)
0xF0055DD7,	//0x0412		VoC_lw16i_short(INC1,0x1,IN_PARALLEL)	|	VoC_sw32inc_p(RL7,REG2,DEFAULT)
0xC05B5DD2,	//0x0414		VoC_add16_rr(REG3,REG1,REG3,IN_PARALLEL)	|	VoC_sw32inc_p(REG45,REG2,DEFAULT)
0x0FF0180A,	//0x0416		VoC_lw16i_set_inc(REG2,0xff0,0x2)
0xD9D2D9C3,	//0x0418		VoC_lw32inc_p(REG45,REG2,DEFAULT)	|	VoC_lw32inc_p(REG67,REG0,DEFAULT)
0xE889FFC0,	//0x041a		VoC_loop_i_short(0x4,DEFAULT)	|	VoC_NAD
0xCA9B489A,	//0x041c		VoC_sub32_rr(REG67,REG45,REG67,IN_PARALLEL)	|	VoC_add32_rr(REG45,REG45,REG67,DEFAULT)
0xD9D47A42,	//0x041e		VoC_lw32inc_p(ACC0,REG2,IN_PARALLEL)	|	VoC_shr32_ri(REG45,0x8,DEFAULT)
0xD9C57A43,	//0x0420		VoC_lw32inc_p(ACC1,REG0,IN_PARALLEL)	|	VoC_shr32_ri(REG67,0x8,DEFAULT)
0xFF225C94,	//0x0422		VoC_movreg32(REG45,ACC0,IN_PARALLEL)	|	VoC_sw16inc_p(REG4,REG1,DEFAULT)
		//0x0424		VoC_endloop0
0xFF2B5CB6,	//0x0424		VoC_movreg32(REG67,ACC1,IN_PARALLEL)	|	VoC_sw16inc_p(REG6,REG3,DEFAULT)
0x5E280709,	//0x0426		VoC_add16_rd(REG1,REG1,0x5e28)
0xDFC1E580,	//0x0428		VoC_push16(REG1,DEFAULT)	|	VoC_return
		//0x0429		CII_mpeg4_idctcol
0xFF465892,	//0x042a		VoC_lw32z(RL6,IN_PARALLEL)	|	VoC_lw16inc_p(REG2,REG1,DEFAULT)
0xFF445893,	//0x042c		VoC_lw32z(ACC0,IN_PARALLEL)	|	VoC_lw16inc_p(REG3,REG1,DEFAULT)
0xD895D894,	//0x042e		VoC_lw16inc_p(REG5,REG1,DEFAULT)	|	VoC_lw16inc_p(REG4,REG1,DEFAULT)
0x7A46D89D,	//0x0430		VoC_shr32_ri(RL6,0x8,DEFAULT)	|	VoC_lw16inc_p(RL6_HI,REG1,DEFAULT)
0xD89AD897,	//0x0432		VoC_lw16inc_p(ACC1_LO,REG1,DEFAULT)	|	VoC_lw16inc_p(REG7,REG1,IN_PARALLEL)
0x31C3D89B,	//0x0434		VoC_bnez16_r(idctcol_100,REG3)(lo)	|	VoC_lw16inc_p(ACC1_HI,REG1,DEFAULT)
0x3342044A,	//0x0436		VoC_bnez32_r(idctcol_100,REG45)(lo)	|	VoC_bnez16_r(idctcol_100,REG3)(hi)
0x3346044A,	//0x0438		VoC_bnez32_r(idctcol_100,RL6)(lo)	|	VoC_bnez32_r(idctcol_100,REG45)(hi)
0x31C7044A,	//0x043a		VoC_bnez16_r(idctcol_100,REG7)(lo)	|	VoC_bnez32_r(idctcol_100,RL6)(hi)
0x3345044A,	//0x043c		VoC_bnez32_r(idctcol_100,ACC1)(lo)	|	VoC_bnez16_r(idctcol_100,REG7)(hi)
0x0712044A,	//0x043e		VoC_add16_rd(REG2,REG2,0x5e29)(lo)	|	VoC_bnez32_r(idctcol_100,ACC1)(hi)
0xF8FA5E29,	//0x0440		VoC_shr16_ri(REG2,0xffffffff,DEFAULT)	|	VoC_add16_rd(REG2,REG2,0x5e29)(hi)
0xDF81783A,	//0x0442		VoC_pop16(REG1,IN_PARALLEL)	|	VoC_shr16_ri(REG2,0x7,DEFAULT)
0xDC92E901,	//0x0444		VoC_sw16inc_p(REG2,REG1,DEFAULT)	|	VoC_loop_i_short(0x8,DEFAULT)
		//0x0445		VoC_endloop0
0x5E2C0789,	//0x0446		VoC_sub16_rd(REG1,REG1,0x5e2c)
0xFFC06580,	//0x0448		VoC_NAD(IN_PARALLEL)	|	VoC_return
		//0x044a		idctcol_100
0xFF286049,	//0x044a		VoC_movreg32(REG01,ACC1,IN_PARALLEL)	|	VoC_movreg16(ACC0_HI,REG2,DEFAULT)
0xF4017A44,	//0x044c		VoC_lw16i_short(FORMAT32,0x0,IN_PARALLEL)	|	VoC_shr32_ri(ACC0,0x8,DEFAULT)
0x5E2A0924,	//0x044e		VoC_add32_rd(ACC0,ACC0,0x5e2a)
0xCB374936,	//0x0450		VoC_sub32_rr(RL7,ACC0,RL6,IN_PARALLEL)	|	VoC_add32_rr(RL6,ACC0,RL6,DEFAULT)
0xE0097088,	//0x0452		VoC_lw16i_short(ACC0_HI,0x0,IN_PARALLEL)	|	VoC_lw16i_short(ACC0_LO,0x4,DEFAULT)
0xDF44C106,	//0x0454		VoC_push32(ACC0,DEFAULT)	|	VoC_add16_rr(REG6,REG4,REG0,DEFAULT)
0x5E1C0E30,	//0x0456		VoC_mac32_rd(REG6,0x5e1c)
0x5E1D0F00,	//0x0458		VoC_msu32_rd(REG0,0x5e1d)
0x7F25FF25,	//0x045a		VoC_movreg32(ACC1,ACC0,DEFAULT)	|	VoC_movreg32(ACC1,ACC0,DEFAULT)
0x0E20FF2C,	//0x045c		VoC_mac32_rd(REG4,0x5e1e)(lo)	|	VoC_movreg32(ACC0,ACC1,IN_PARALLEL)
0x180A5E1E,	//0x045e		VoC_lw16i_set_inc(REG2,0xff0,0x2)(lo)	|	VoC_mac32_rd(REG4,0x5e1e)(hi)
0x7A1D0FF0,	//0x0460		VoC_shr32_ri(ACC1,0x3,DEFAULT)	|	VoC_lw16i_set_inc(REG2,0xff0,0x2)(hi)
0x49A4FA1C,	//0x0462		VoC_add32_rr(ACC0,RL6,ACC0,DEFAULT)	|	VoC_shr32_ri(ACC0,0x3,IN_PARALLEL)
0x49EFCBA6,	//0x0464		VoC_add32_rr(RL7,RL7,ACC1,DEFAULT)	|	VoC_sub32_rr(RL6,RL6,ACC0,IN_PARALLEL)
0xDDD4CBED,	//0x0466		VoC_sw32inc_p(ACC0,REG2,DEFAULT)	|	VoC_sub32_rr(ACC1,RL7,ACC1,IN_PARALLEL)
0xD90C5DD7,	//0x0468		VoC_lw32_sd(ACC0,0x0,IN_PARALLEL)	|	VoC_sw32inc_p(RL7,REG2,DEFAULT)
0x60E4DDD5,	//0x046a		VoC_movreg16(REG4,REG7,DEFAULT)	|	VoC_sw32inc_p(ACC1,REG2,DEFAULT)
0x0E30C0CE,	//0x046c		VoC_mac32_rd(REG6,0x5e1f)(lo)	|	VoC_add16_rr(REG6,REG3,REG1,IN_PARALLEL)
0x0E185E1F,	//0x046e		VoC_mac32_rd(REG3,0x5e20)(lo)	|	VoC_mac32_rd(REG6,0x5e1f)(hi)
0x7F255E20,	//0x0470		VoC_movreg32(ACC1,ACC0,DEFAULT)	|	VoC_mac32_rd(REG3,0x5e20)(hi)
0x7F27C12B,	//0x0472		VoC_movreg32(RL7,ACC0,DEFAULT)	|	VoC_add16_rr(REG3,REG4,REG5,IN_PARALLEL)
0x0F08FF2C,	//0x0474		VoC_msu32_rd(REG1,0x5e21)(lo)	|	VoC_movreg32(ACC0,ACC1,IN_PARALLEL)
0xDDD65E21,	//0x0476		VoC_sw32inc_p(RL6,REG2,DEFAULT)	|	VoC_msu32_rd(REG1,0x5e21)(hi)
0xDF047F23,	//0x0478		VoC_pop32(ACC0,IN_PARALLEL)	|	VoC_movreg32(REG67,ACC0,DEFAULT)
0x5E220E18,	//0x047a		VoC_mac32_rd(REG3,0x5e22)
0xFA1B7A1F,	//0x047c		VoC_shr32_ri(REG67,0x3,IN_PARALLEL)	|	VoC_shr32_ri(RL7,0x3,DEFAULT)
0x0F20FF25,	//0x047e		VoC_msu32_rd(REG4,0x5e23)(lo)	|	VoC_movreg32(ACC1,ACC0,DEFAULT)
0x180A5E23,	//0x0480		VoC_lw16i_set_inc(REG2,0x1a86,0x2)(lo)	|	VoC_msu32_rd(REG4,0x5e23)(hi)
0x7F261A86,	//0x0482		VoC_movreg32(RL6,ACC0,DEFAULT)	|	VoC_lw16i_set_inc(REG2,0x1a86,0x2)(hi)
0x0F28FF2C,	//0x0484		VoC_msu32_rd(REG5,0x5e24)(lo)	|	VoC_movreg32(ACC0,ACC1,IN_PARALLEL)
0xFA1E5E24,	//0x0486		VoC_shr32_ri(RL6,0x3,DEFAULT)	|	VoC_msu32_rd(REG5,0x5e24)(hi)
0xF5897A1C,	//0x0488		VoC_lw16i_short(FORMAT32,0xfffffff1,IN_PARALLEL)	|	VoC_shr32_ri(ACC0,0x3,DEFAULT)
0xCBF749F6,	//0x048a		VoC_sub32_rr(RL7,RL7,RL6,IN_PARALLEL)	|	VoC_add32_rr(RL6,RL7,RL6,DEFAULT)
0xCAE548E2,	//0x048c		VoC_sub32_rr(ACC1,REG67,ACC0,IN_PARALLEL)	|	VoC_add32_rr(REG45,REG67,ACC0,DEFAULT)
0xCBED49E8,	//0x048e		VoC_sub32_rr(ACC1,RL7,ACC1,IN_PARALLEL)	|	VoC_add32_rr(REG01,RL7,ACC1,DEFAULT)
0x0A0CFBF8,	//0x0490		VoC_multf32_rd(ACC0,REG1,0x5e25)(lo)	|	VoC_shr32_ri(REG01,0xffffffff,DEFAULT)
0x79085E25,	//0x0492		VoC_shru16_ri(REG0,0x1,DEFAULT)	|	VoC_multf32_rd(ACC0,REG1,0x5e25)(hi)
0x0E00F401,	//0x0494		VoC_mac32_rd(REG0,0x5e25)(lo)	|	VoC_lw16i_short(FORMAT32,0x0,IN_PARALLEL)
0xDDD65E25,	//0x0496		VoC_sw32inc_p(RL6,REG2,DEFAULT)	|	VoC_mac32_rd(REG0,0x5e25)(hi)
0x5E1A0923,	//0x0498		VoC_add32_rd(REG67,ACC0,0x5e1a)
0xF5897A43,	//0x049a		VoC_lw16i_short(FORMAT32,0xfffffff1,IN_PARALLEL)	|	VoC_shr32_ri(REG67,0x8,DEFAULT)
0xFBF8FF28,	//0x049c		VoC_shr32_ri(REG01,0xffffffff,DEFAULT)	|	VoC_movreg32(REG01,ACC1,DEFAULT)
0x5E250A0C,	//0x049e		VoC_multf32_rd(ACC0,REG1,0x5e25)
0xF4017908,	//0x04a0		VoC_lw16i_short(FORMAT32,0x0,IN_PARALLEL)	|	VoC_shru16_ri(REG0,0x1,DEFAULT)
0x5E250E00,	//0x04a2		VoC_mac32_rd(REG0,0x5e25)
0x0927DDD3,	//0x04a4		VoC_add32_rd(RL7,ACC0,0x5e1a)(lo)	|	VoC_sw32inc_p(REG67,REG2,DEFAULT)
0x7A475E1A,	//0x04a6		VoC_shr32_ri(RL7,0x8,DEFAULT)	|	VoC_add32_rd(RL7,ACC0,0x5e1a)(hi)
0x1808DF81,	//0x04a8		VoC_lw16i_set_inc(REG0,0xff0,0x2)(lo)	|	VoC_pop16(REG1,IN_PARALLEL)
0x5DD70FF0,	//0x04aa		VoC_sw32inc_p(RL7,REG2,DEFAULT)	|	VoC_lw16i_set_inc(REG0,0xff0,0x2)(hi)
0xDDD2F3E3,	//0x04ac		VoC_sw32inc_p(REG45,REG2,DEFAULT)	|	VoC_lw16i_short(INC3,0xfffffff8,IN_PARALLEL)
0x1A86180A,	//0x04ae		VoC_lw16i_set_inc(REG2,0x1a86,0x2)
0x5E2D070B,	//0x04b0		VoC_add16_rd(REG3,REG1,0x5e2d)
0xFFC0D9C2,	//0x04b2		VoC_NAD	|	VoC_lw32inc_p(REG45,REG0,DEFAULT)
0xD9D3688C,	//0x04b4		VoC_lw32inc_p(REG67,REG2,IN_PARALLEL)	|	VoC_loop_i_short(0x4,DEFAULT)
0xCA9B489A,	//0x04b6		VoC_sub32_rr(REG67,REG45,REG67,IN_PARALLEL)	|	VoC_add32_rr(REG45,REG45,REG67,DEFAULT)
0xFBBB7BBA,	//0x04b8		VoC_shr32_ri(REG67,0xfffffff7,IN_PARALLEL)	|	VoC_shr32_ri(REG45,0xfffffff7,DEFAULT)
0xD9C4783D,	//0x04ba		VoC_lw32inc_p(ACC0,REG0,IN_PARALLEL)	|	VoC_shr16_ri(REG5,0x7,DEFAULT)
0xD9D5783F,	//0x04bc		VoC_lw32inc_p(ACC1,REG2,IN_PARALLEL)	|	VoC_shr16_ri(REG7,0x7,DEFAULT)
0xFF225C95,	//0x04be		VoC_movreg32(REG45,ACC0,IN_PARALLEL)	|	VoC_sw16inc_p(REG5,REG1,DEFAULT)
		//0x04c0		VoC_endloop0
0xFF2B5CB7,	//0x04c0		VoC_movreg32(REG67,ACC1,IN_PARALLEL)	|	VoC_sw16inc_p(REG7,REG3,DEFAULT)
0x5E2E0789,	//0x04c2		VoC_sub16_rd(REG1,REG1,0x5e2e)
0xF051E580,	//0x04c4		VoC_lw16i_short(INC1,0x2,DEFAULT)	|	VoC_return
		//0x04c5		CII_mpeg4X4_idct_row
0xD9C9DFC1,	//0x04c6		VoC_lw32inc_p(REG23,REG1,DEFAULT)	|	VoC_push16(REG1,DEFAULT)
0x31C3D9CA,	//0x04c8		VoC_bnez16_r(idct4X4_row_1,REG3)(lo)	|	VoC_lw32inc_p(REG45,REG1,DEFAULT)
0x334204DC,	//0x04ca		VoC_bnez32_r(idct4X4_row_1,REG45)(lo)	|	VoC_bnez16_r(idct4X4_row_1,REG3)(hi)
0x318204DC,	//0x04cc		VoC_bez16_r(idct4X4_row_2,REG2)(lo)	|	VoC_bnez32_r(idct4X4_row_1,REG45)(hi)
0xF8F204D8,	//0x04ce		VoC_shr16_ri(REG2,0xfffffffe,DEFAULT)	|	VoC_bez16_r(idct4X4_row_2,REG2)(hi)
0xF6435F81,	//0x04d0		VoC_movreg16(REG3,REG2,IN_PARALLEL)	|	VoC_pop16(REG1,DEFAULT)
0xDDC9FFC0,	//0x04d2		VoC_sw32inc_p(REG23,REG1,DEFAULT)	|	VoC_NOP
0x0709DDC9,	//0x04d4		VoC_add16_rd(REG1,REG1,0x5e6a)(lo)	|	VoC_sw32inc_p(REG23,REG1,DEFAULT)
0xE5805E6A,	//0x04d6		VoC_return	|	VoC_add16_rd(REG1,REG1,0x5e6a)(hi)
		//0x04d8		idct4X4_row_2
0x0709DF81,	//0x04d8		VoC_add16_rd(REG1,REG1,0x5e6b)(lo)	|	VoC_pop16(REG1,DEFAULT)
0xE5805E6B,	//0x04da		VoC_return	|	VoC_add16_rd(REG1,REG1,0x5e6b)(hi)
		//0x04dc		idct4X4_row_1
0x05103185,	//0x04dc		VoC_bez16_r(idct4X4_row_3,REG5)
0x04FA3183,	//0x04de		VoC_bez16_r(idct4X4_row_4,REG3)
0x0A33C0EE,	//0x04e0		VoC_multf32_rd(REG67,REG6,0x5e5a)(lo)	|	VoC_add16_rr(REG6,REG3,REG5,DEFAULT)
0xE3855E5A,	//0x04e2		VoC_not16_r(REG5,DEFAULT)	|	VoC_multf32_rd(REG67,REG6,0x5e5a)(hi)
0x5E68072D,	//0x04e4		VoC_add16_rd(REG5,REG5,0x5e68)
0x5E5B0A2E,	//0x04e6		VoC_multf32_rd(RL6,REG5,0x5e5b)
0x5E5C0A1F,	//0x04e8		VoC_multf32_rd(RL7,REG3,0x5e5c)
0xC99E42A5,	//0x04ea		VoC_add32_rr(RL6,RL6,REG67,IN_PARALLEL)	|	VoC_sub16_rr(REG5,REG2,REG4,DEFAULT)
0xC0A749DF,	//0x04ec		VoC_add16_rr(REG7,REG2,REG4,IN_PARALLEL)	|	VoC_add32_rr(RL7,RL7,REG67,DEFAULT)
0x00000A86,	//0x04ee		VoC_lw16i(REG6,0x0)
0x0A84FA1B,	//0x04f0		VoC_lw16i(REG4,0x0)(lo)	|	VoC_shr32_ri(REG67,0x3,DEFAULT)
0xFA1A0000,	//0x04f2		VoC_shr32_ri(REG45,0x3,DEFAULT)	|	VoC_lw16i(REG4,0x0)(hi)
0xCAFC48F9,	//0x04f4		VoC_sub32_rr(ACC0,REG67,RL7,IN_PARALLEL)	|	VoC_add32_rr(REG23,REG67,RL7,DEFAULT)
0xCAB748B3,	//0x04f6		VoC_sub32_rr(RL7,REG45,RL6,IN_PARALLEL)	|	VoC_add32_rr(REG67,REG45,RL6,DEFAULT)
0x05302B00,	//0x04f8		VoC_jump_lg(idct4X4_row_5)
		//0x04fa		idct4X4_row_4
0x5E5A0A2F,	//0x04fa		VoC_multf32_rd(RL7,REG5,0x5e5a)
0x072DE385,	//0x04fc		VoC_add16_rd(REG5,REG5,0x5e68)(lo)	|	VoC_not16_r(REG5,DEFAULT)
0x0A2E5E68,	//0x04fe		VoC_multf32_rd(RL6,REG5,0x5e5d)(lo)	|	VoC_add16_rd(REG5,REG5,0x5e68)(hi)
0xC0A75E5D,	//0x0500		VoC_add16_rr(REG7,REG2,REG4,DEFAULT)	|	VoC_multf32_rd(RL6,REG5,0x5e5d)(hi)
0x00000A86,	//0x0502		VoC_lw16i(REG6,0x0)
0xC2A57A1B,	//0x0504		VoC_sub16_rr(REG5,REG2,REG4,IN_PARALLEL)	|	VoC_shr32_ri(REG67,0x3,DEFAULT)
0x00000A84,	//0x0506		VoC_lw16i(REG4,0x0)
0x48F9FA1A,	//0x0508		VoC_add32_rr(REG23,REG67,RL7,DEFAULT)	|	VoC_shr32_ri(REG45,0x3,DEFAULT)
0x48B3CAFC,	//0x050a		VoC_add32_rr(REG67,REG45,RL6,DEFAULT)	|	VoC_sub32_rr(ACC0,REG67,RL7,IN_PARALLEL)
0x2B00CAB7,	//0x050c		VoC_jump_lg(idct4X4_row_5)(lo)	|	VoC_sub32_rr(RL7,REG45,RL6,IN_PARALLEL)
0xFFC00530,	//0x050e		VoC_NAD	|	VoC_jump_lg(idct4X4_row_5)(hi)
		//0x0510		idct4X4_row_3
0x05233183,	//0x0510		VoC_bez16_r(idct4X4_row_6,REG3)
0x5E5A0A1E,	//0x0512		VoC_multf32_rd(RL6,REG3,0x5e5a)
0x5E5D0A1F,	//0x0514		VoC_multf32_rd(RL7,REG3,0x5e5d)
0x0A86C0A7,	//0x0516		VoC_lw16i(REG6,0x0)(lo)	|	VoC_add16_rr(REG7,REG2,REG4,DEFAULT)
0x7A1B0000,	//0x0518		VoC_shr32_ri(REG67,0x3,DEFAULT)	|	VoC_lw16i(REG6,0x0)(hi)
0x0A84C2A5,	//0x051a		VoC_lw16i(REG4,0x0)(lo)	|	VoC_sub16_rr(REG5,REG2,REG4,IN_PARALLEL)
0xFA1A0000,	//0x051c		VoC_shr32_ri(REG45,0x3,DEFAULT)	|	VoC_lw16i(REG4,0x0)(hi)
0xCAFC48F9,	//0x051e		VoC_sub32_rr(ACC0,REG67,RL7,IN_PARALLEL)	|	VoC_add32_rr(REG23,REG67,RL7,DEFAULT)
0xCAB748B3,	//0x0520		VoC_sub32_rr(RL7,REG45,RL6,IN_PARALLEL)	|	VoC_add32_rr(REG67,REG45,RL6,DEFAULT)
0xC0A7E5CE,	//0x0522		VoC_add16_rr(REG7,REG2,REG4,DEFAULT)	|	VoC_jump(idct4X4_row_5)
		//0x0523		idct4X4_row_6
0x00000A86,	//0x0524		VoC_lw16i(REG6,0x0)
0xC2A57A1B,	//0x0526		VoC_sub16_rr(REG5,REG2,REG4,IN_PARALLEL)	|	VoC_shr32_ri(REG67,0x3,DEFAULT)
0x00000A84,	//0x0528		VoC_lw16i(REG4,0x0)
0x7F19FA1A,	//0x052a		VoC_movreg32(REG23,REG67,DEFAULT)	|	VoC_shr32_ri(REG45,0x3,DEFAULT)
0x7F13FF1C,	//0x052c		VoC_movreg32(REG67,REG45,DEFAULT)	|	VoC_movreg32(ACC0,REG67,IN_PARALLEL)
0xFFC0FF17,	//0x052e		VoC_NAD	|	VoC_movreg32(RL7,REG45,IN_PARALLEL)
		//0x0530		idct4X4_row_5
0x5E620909,	//0x0530		VoC_add32_rd(REG23,REG23,0x5e62)
0x5E620924,	//0x0532		VoC_add32_rd(ACC0,ACC0,0x5e62)
0xFA5C7A59,	//0x0534		VoC_shr32_ri(ACC0,0xb,IN_PARALLEL)	|	VoC_shr32_ri(REG23,0xb,DEFAULT)
0x5E62091B,	//0x0536		VoC_add32_rd(REG67,REG67,0x5e62)
0xF0057A5B,	//0x0538		VoC_lw16i_short(INC1,0x1,IN_PARALLEL)	|	VoC_shr32_ri(REG67,0xb,DEFAULT)
0x093FDF81,	//0x053a		VoC_add32_rd(RL7,RL7,0x5e62)(lo)	|	VoC_pop16(REG1,DEFAULT)
0x7A5F5E62,	//0x053c		VoC_shr32_ri(RL7,0xb,DEFAULT)	|	VoC_add32_rd(RL7,RL7,0x5e62)(hi)
0xDC96DC92,	//0x053e		VoC_sw16inc_p(REG6,REG1,DEFAULT)	|	VoC_sw16inc_p(REG2,REG1,IN_PARALLEL)
0xDC98DC9E,	//0x0540		VoC_sw16inc_p(ACC0_LO,REG1,DEFAULT)	|	VoC_sw16inc_p(RL7_LO,REG1,DEFAULT)
0x5E6A0709,	//0x0542		VoC_add16_rd(REG1,REG1,0x5e6a)
0xDFC1E580,	//0x0544		VoC_push16(REG1,DEFAULT)	|	VoC_return
		//0x0545		CII_mpeg4X4_idct_col
0xD893D892,	//0x0546		VoC_lw16inc_p(REG3,REG1,DEFAULT)	|	VoC_lw16inc_p(REG2,REG1,DEFAULT)
0xD895D894,	//0x0548		VoC_lw16inc_p(REG5,REG1,DEFAULT)	|	VoC_lw16inc_p(REG4,REG1,DEFAULT)
0x3185FFC0,	//0x054a		VoC_bez16_r(idct4X4_col_3,REG5)(lo)	|	VoC_NOP
0x31830580,	//0x054c		VoC_bez16_r(idct4X4_col_4,REG3)(lo)	|	VoC_bez16_r(idct4X4_col_3,REG5)(hi)
0xC0EE056A,	//0x054e		VoC_add16_rr(REG6,REG3,REG5,DEFAULT)	|	VoC_bez16_r(idct4X4_col_4,REG3)(hi)
0x0A33E385,	//0x0550		VoC_multf32_rd(REG67,REG6,0x5e5a)(lo)	|	VoC_not16_r(REG5,DEFAULT)
0x072D5E5A,	//0x0552		VoC_add16_rd(REG5,REG5,0x5e68)(lo)	|	VoC_multf32_rd(REG67,REG6,0x5e5a)(hi)
0x0A2E5E68,	//0x0554		VoC_multf32_rd(RL6,REG5,0x5e5b)(lo)	|	VoC_add16_rd(REG5,REG5,0x5e68)(hi)
0x0A1F5E5B,	//0x0556		VoC_multf32_rd(RL7,REG3,0x5e5c)(lo)	|	VoC_multf32_rd(RL6,REG5,0x5e5b)(hi)
0x42A55E5C,	//0x0558		VoC_sub16_rr(REG5,REG2,REG4,DEFAULT)	|	VoC_multf32_rd(RL7,REG3,0x5e5c)(hi)
0x49DFC99E,	//0x055a		VoC_add32_rr(RL7,RL7,REG67,DEFAULT)	|	VoC_add32_rr(RL6,RL6,REG67,IN_PARALLEL)
0x0A86C0A7,	//0x055c		VoC_lw16i(REG6,0x0)(lo)	|	VoC_add16_rr(REG7,REG2,REG4,IN_PARALLEL)
0xFA1B0000,	//0x055e		VoC_shr32_ri(REG67,0x3,DEFAULT)	|	VoC_lw16i(REG6,0x0)(hi)
0x00000A84,	//0x0560		VoC_lw16i(REG4,0x0)
0x48F9FA1A,	//0x0562		VoC_add32_rr(REG23,REG67,RL7,DEFAULT)	|	VoC_shr32_ri(REG45,0x3,DEFAULT)
0x48B3CAFC,	//0x0564		VoC_add32_rr(REG67,REG45,RL6,DEFAULT)	|	VoC_sub32_rr(ACC0,REG67,RL7,IN_PARALLEL)
0x2B00CAB7,	//0x0566		VoC_jump_lg(idct4X4_col_5)(lo)	|	VoC_sub32_rr(RL7,REG45,RL6,IN_PARALLEL)
0xFFC0059F,	//0x0568		VoC_NAD	|	VoC_jump_lg(idct4X4_col_5)(hi)
		//0x056a		idct4X4_col_4
0x5E5A0A2E,	//0x056a		VoC_multf32_rd(RL6,REG5,0x5e5a)
0x072DE385,	//0x056c		VoC_add16_rd(REG5,REG5,0x5e68)(lo)	|	VoC_not16_r(REG5,DEFAULT)
0x0A2F5E68,	//0x056e		VoC_multf32_rd(RL7,REG5,0x5e5d)(lo)	|	VoC_add16_rd(REG5,REG5,0x5e68)(hi)
0xC0A75E5D,	//0x0570		VoC_add16_rr(REG7,REG2,REG4,DEFAULT)	|	VoC_multf32_rd(RL7,REG5,0x5e5d)(hi)
0x00000A86,	//0x0572		VoC_lw16i(REG6,0x0)
0xC2A57A1B,	//0x0574		VoC_sub16_rr(REG5,REG2,REG4,IN_PARALLEL)	|	VoC_shr32_ri(REG67,0x3,DEFAULT)
0x00000A84,	//0x0576		VoC_lw16i(REG4,0x0)
0x48F1FA1A,	//0x0578		VoC_add32_rr(REG23,REG67,RL6,DEFAULT)	|	VoC_shr32_ri(REG45,0x3,DEFAULT)
0x48BBCAF4,	//0x057a		VoC_add32_rr(REG67,REG45,RL7,DEFAULT)	|	VoC_sub32_rr(ACC0,REG67,RL6,IN_PARALLEL)
0x2B00CABF,	//0x057c		VoC_jump_lg(idct4X4_col_5)(lo)	|	VoC_sub32_rr(RL7,REG45,RL7,IN_PARALLEL)
0xFFC0059F,	//0x057e		VoC_NAD	|	VoC_jump_lg(idct4X4_col_5)(hi)
		//0x0580		idct4X4_col_3
0x05933183,	//0x0580		VoC_bez16_r(idct4X4_col_6,REG3)
0x5E5A0A1E,	//0x0582		VoC_multf32_rd(RL6,REG3,0x5e5a)
0x5E5D0A1F,	//0x0584		VoC_multf32_rd(RL7,REG3,0x5e5d)
0x0A86C0A7,	//0x0586		VoC_lw16i(REG6,0x0)(lo)	|	VoC_add16_rr(REG7,REG2,REG4,DEFAULT)
0x7A1B0000,	//0x0588		VoC_shr32_ri(REG67,0x3,DEFAULT)	|	VoC_lw16i(REG6,0x0)(hi)
0x0A84C2A5,	//0x058a		VoC_lw16i(REG4,0x0)(lo)	|	VoC_sub16_rr(REG5,REG2,REG4,IN_PARALLEL)
0xFA1A0000,	//0x058c		VoC_shr32_ri(REG45,0x3,DEFAULT)	|	VoC_lw16i(REG4,0x0)(hi)
0xCAFC48F9,	//0x058e		VoC_sub32_rr(ACC0,REG67,RL7,IN_PARALLEL)	|	VoC_add32_rr(REG23,REG67,RL7,DEFAULT)
0xCAB748B3,	//0x0590		VoC_sub32_rr(RL7,REG45,RL6,IN_PARALLEL)	|	VoC_add32_rr(REG67,REG45,RL6,DEFAULT)
0xC0A7E5CD,	//0x0592		VoC_add16_rr(REG7,REG2,REG4,DEFAULT)	|	VoC_jump(idct4X4_col_5)
		//0x0593		idct4X4_col_6
0x00000A86,	//0x0594		VoC_lw16i(REG6,0x0)
0xC2A57A1B,	//0x0596		VoC_sub16_rr(REG5,REG2,REG4,IN_PARALLEL)	|	VoC_shr32_ri(REG67,0x3,DEFAULT)
0x00000A84,	//0x0598		VoC_lw16i(REG4,0x0)
0x7F19FA1A,	//0x059a		VoC_movreg32(REG23,REG67,DEFAULT)	|	VoC_shr32_ri(REG45,0x3,DEFAULT)
0x7F13FF1C,	//0x059c		VoC_movreg32(REG67,REG45,DEFAULT)	|	VoC_movreg32(ACC0,REG67,IN_PARALLEL)
0xDF81FF17,	//0x059e		VoC_pop16(REG1,DEFAULT)	|	VoC_movreg32(RL7,REG45,IN_PARALLEL)
		//0x059f		idct4X4_col_5
0xF72561E4,	//0x05a0		VoC_movreg16(REG5,ACC0_HI,IN_PARALLEL)	|	VoC_movreg16(REG4,RL7_HI,DEFAULT)
0x5E68070A,	//0x05a2		VoC_add16_rd(REG2,REG1,0x5e68)
0xF8177813,	//0x05a4		VoC_shr16_ri(REG7,0x2,IN_PARALLEL)	|	VoC_shr16_ri(REG3,0x2,DEFAULT)
0xF8157814,	//0x05a6		VoC_shr16_ri(REG5,0x2,IN_PARALLEL)	|	VoC_shr16_ri(REG4,0x2,DEFAULT)
0xDC97DC93,	//0x05a8		VoC_sw16inc_p(REG7,REG1,DEFAULT)	|	VoC_sw16inc_p(REG3,REG1,DEFAULT)
0xDC95DC94,	//0x05aa		VoC_sw16inc_p(REG5,REG1,DEFAULT)	|	VoC_sw16inc_p(REG4,REG1,DEFAULT)
0xE580E041,	//0x05ac		VoC_return	|	VoC_movreg16(REG1,REG2,DEFAULT)
		//0x05ae		CS_get_coeff
0xFFC0F15E,	//0x05ae		VoC_NOP	|	VoC_lw16i_short(WRAP2,0xa,DEFAULT)
0x62DDE242,	//0x05b0		VoC_rb_i(REG5,0x7,DEFAULT)	|	VoC_lbinc_p(REG2)
0x1502E036,	//0x05b2		VoC_sw16_d(REG2,0xcac)(lo)	|	VoC_lw16i_short(REG6,0x3,IN_PARALLEL)
0x35350CAC,	//0x05b4		VoC_be16_rr(decoder_mbintra1212,REG6,REG5)(lo)	|	VoC_sw16_d(REG2,0xcac)(hi)
0x62F005E1,	//0x05b6		VoC_rb_i(REG4,0xc,DEFAULT)	|	VoC_be16_rr(decoder_mbintra1212,REG6,REG5)(hi)
0xF027E005,	//0x05b8		VoC_lw16i_short(REG7,0x1,DEFAULT)	|	VoC_lw16i_short(REG5,0x0,IN_PARALLEL)
0x06740A86,	//0x05ba		VoC_lw16i(REG6,0x674)
0x1A840912,	//0x05bc		VoC_add32_rd(REG45,REG45,0x1a84)
0x1546FBF2,	//0x05be		VoC_sw16_d(REG6,0xffc3)(lo)	|	VoC_shr32_ri(REG45,0xfffffffe,DEFAULT)
0x15477FC3,	//0x05c0		VoC_sw16_d(REG7,0xffc2)(lo)	|	VoC_sw16_d(REG6,0xffc3)(hi)
0x15C27FC2,	//0x05c2		VoC_sw32_d(REG45,0xffc4)(lo)	|	VoC_sw16_d(REG7,0xffc2)(hi)
0xDE807FC4,	//0x05c4		VoC_cfg(0x0)	|	VoC_sw32_d(REG45,0xffc4)(hi)
0x1794FFC0,	//0x05c6		VoC_cfg_lg(0x8,)(lo)	|	VoC_NOP
0xFFC00008,	//0x05c8		VoC_NOP	|	VoC_cfg_lg(0x8,)(hi)
0x0CE81483,	//0x05ca		VoC_lw32_d(REG67,0xce8)
0xF94760E4,	//0x05cc		VoC_shru16_ri(REG7,0x8,IN_PARALLEL)	|	VoC_movreg16(REG4,REG7,DEFAULT)
0x06423187,	//0x05ce		VoC_bez16_r(decoder_mbintra1214,REG7)
0x00FF1604,	//0x05d0		VoC_and16_ri(REG4,0xff)
0xF94660C5,	//0x05d2		VoC_shru16_ri(REG6,0x8,IN_PARALLEL)	|	VoC_movreg16(REG5,REG6,DEFAULT)
0x00FF1605,	//0x05d4		VoC_and16_ri(REG5,0xff)
0xC14DF021,	//0x05d6		VoC_add16_rr(REG5,REG5,REG1,DEFAULT)	|	VoC_lw16i_short(REG1,0x1,DEFAULT)
0xE0016329,	//0x05d8		VoC_lw16i_short(REG1,0x0,IN_PARALLEL)	|	VoC_rbinc_r(REG5,REG5,DEFAULT)
0x00011605,	//0x05da		VoC_and16_ri(REG5,0x1)
0x06443185,	//0x05dc		VoC_bez16_r(decoder_mbintra1213,REG5)
0x2B00C27F,	//0x05de		VoC_jump_lg(decoder_mbintra1213)(lo)	|	VoC_sub16_rr(REG7,REG1,REG7,DEFAULT)
0xE29D0644,	//0x05e0		VoC_rbinc_i(REG5,0x7,DEFAULT)	|	VoC_jump_lg(decoder_mbintra1213)(hi)
		//0x05e1		decoder_mbintra1212
0xE02462C9,	//0x05e2		VoC_lw16i_short(REG4,0x2,IN_PARALLEL)	|	VoC_rb_i(REG5,0x2,DEFAULT)
0x062E342C,	//0x05e4		VoC_bgt16_rr(decoder_mbintra1215,REG5,REG4)
0x35ACE286,	//0x05e6		VoC_bne16_rr(decoder_mbintra1216,REG5,REG4)(lo)	|	VoC_rbinc_i(REG6,0x1,DEFAULT)
0xE28605EA,	//0x05e8		VoC_rbinc_i(REG6,0x1,DEFAULT)	|	VoC_bne16_rr(decoder_mbintra1216,REG5,REG4)(hi)
		//0x05ea		decoder_mbintra1216
0x62F0E242,	//0x05ea		VoC_rb_i(REG4,0xc,DEFAULT)	|	VoC_lbinc_p(REG2)
0x7027F6AF,	//0x05ec		VoC_lw16i_short(REG7,0x1,DEFAULT)	|	VoC_movreg16(RL7_HI,REG5,IN_PARALLEL)
0x0A86E005,	//0x05ee		VoC_lw16i(REG6,0x674)(lo)	|	VoC_lw16i_short(REG5,0x0,IN_PARALLEL)
0x09120674,	//0x05f0		VoC_add32_rd(REG45,REG45,0x1a84)(lo)	|	VoC_lw16i(REG6,0x674)(hi)
0xFBF21A84,	//0x05f2		VoC_shr32_ri(REG45,0xfffffffe,DEFAULT)	|	VoC_add32_rd(REG45,REG45,0x1a84)(hi)
0x7FC31546,	//0x05f4		VoC_sw16_d(REG6,0xffc3)
0x7FC21547,	//0x05f6		VoC_sw16_d(REG7,0xffc2)
0x7FC415C2,	//0x05f8		VoC_sw32_d(REG45,0xffc4)
0xFFC0DE80,	//0x05fa		VoC_NOP	|	VoC_cfg(0x0)
0x00081794,	//0x05fc		VoC_cfg_lg(0x8,)
0x0CAC1502,	//0x05fe		VoC_sw16_d(REG2,0xcac)
0x0CE81483,	//0x0600		VoC_lw32_d(REG67,0xce8)
0xF94760E4,	//0x0602		VoC_shru16_ri(REG7,0x8,IN_PARALLEL)	|	VoC_movreg16(REG4,REG7,DEFAULT)
0x06423187,	//0x0604		VoC_bez16_r(decoder_mbintra1214,REG7)
0x00FF1604,	//0x0606		VoC_and16_ri(REG4,0xff)
0xF94660C5,	//0x0608		VoC_shru16_ri(REG6,0x8,IN_PARALLEL)	|	VoC_movreg16(REG5,REG6,DEFAULT)
0x00FF1605,	//0x060a		VoC_and16_ri(REG5,0xff)
0xDF417021,	//0x060c		VoC_push32(REG23,IN_PARALLEL)	|	VoC_lw16i_short(REG1,0x1,DEFAULT)
0x3491E1E2,	//0x060e		VoC_bngt16_rr(decoder_mbintra1217,REG2,REG1)(lo)	|	VoC_movreg16(REG2,RL7_HI,DEFAULT)
0xE0C2061B,	//0x0610		VoC_movreg16(REG2,REG6,DEFAULT)	|	VoC_bngt16_rr(decoder_mbintra1217,REG2,REG1)(hi)
0x5FB80A83,	//0x0612		VoC_lw16i(REG3,0x5fb8)
0xC0D3F8D2,	//0x0614		VoC_add16_rr(REG3,REG3,REG2,DEFAULT)	|	VoC_shr16_ri(REG2,0xfffffffa,DEFAULT)
0xC10CC0FB,	//0x0616		VoC_add16_rr(REG4,REG4,REG1,DEFAULT)	|	VoC_add16_rr(REG3,REG3,REG7,DEFAULT)
0xC11CD833,	//0x0618		VoC_add16_rr(REG4,REG4,REG3,DEFAULT)	|	VoC_lw16_p(REG3,REG3,DEFAULT)
0xE0C2E5CA,	//0x061a		VoC_movreg16(REG2,REG6,DEFAULT)	|	VoC_jump(decoder_mbintra1218)
		//0x061b		decoder_mbintra1217
0x5F380A83,	//0x061c		VoC_lw16i(REG3,0x5f38)
0xC0D3F8D2,	//0x061e		VoC_add16_rr(REG3,REG3,REG2,DEFAULT)	|	VoC_shr16_ri(REG2,0xfffffffa,DEFAULT)
0xFFC0C0E3,	//0x0620		VoC_NOP	|	VoC_add16_rr(REG3,REG3,REG4,DEFAULT)
0xC1DFD833,	//0x0622		VoC_add16_rr(REG7,REG7,REG3,DEFAULT)	|	VoC_lw16_p(REG3,REG3,DEFAULT)
		//0x0624		decoder_mbintra1218
0xDF01414D,	//0x0624		VoC_pop32(REG23,IN_PARALLEL)	|	VoC_add16_rr(REG5,REG5,REG1,DEFAULT)
0xE0016329,	//0x0626		VoC_lw16i_short(REG1,0x0,IN_PARALLEL)	|	VoC_rbinc_r(REG5,REG5,DEFAULT)
0x00011605,	//0x0628		VoC_and16_ri(REG5,0x1)
0x06443185,	//0x062a		VoC_bez16_r(decoder_mbintra1213,REG5)
0xE5D7C27F,	//0x062c		VoC_jump(decoder_mbintra1213)	|	VoC_sub16_rr(REG7,REG1,REG7,DEFAULT)
		//0x062e		decoder_mbintra1215
0x0CAC1402,	//0x062e		VoC_lw16_d(REG2,0xcac)
0xE286E289,	//0x0630		VoC_rbinc_i(REG6,0x1,DEFAULT)	|	VoC_rbinc_i(REG5,0x2,DEFAULT)
0xE242E298,	//0x0632		VoC_lbinc_p(REG2)	|	VoC_rbinc_i(REG4,0x6,DEFAULT)
0xE2B3E285,	//0x0634		VoC_rbinc_i(REG7,0xc,DEFAULT)	|	VoC_rbinc_i(REG5,0x1,DEFAULT)
0x5FC6E285,	//0x0636		VoC_push16(REG6,DEFAULT)	|	VoC_rbinc_i(REG5,0x1,DEFAULT)
0xF007F6E6,	//0x0638		VoC_lw16i_short(REG7,0x0,DEFAULT)	|	VoC_movreg16(REG6,REG7,IN_PARALLEL)
0xFAA3FD63,	//0x063a		VoC_shr32_ri(REG67,0x14,DEFAULT)	|	VoC_shru32_ri(REG67,0xffffffec,DEFAULT)
0xDF8660C7,	//0x063c		VoC_pop16(REG6,IN_PARALLEL)	|	VoC_movreg16(REG7,REG6,DEFAULT)
0x0CAC1502,	//0x063e		VoC_sw16_d(REG2,0xcac)
0xFFC065C4,	//0x0640		VoC_NAD(IN_PARALLEL)	|	VoC_jump(decoder_mbintra1213)
		//0x0642		decoder_mbintra1214
0xE00777E4,	//0x0642		VoC_lw16i_short(REG7,0x0,IN_PARALLEL)	|	VoC_lw16i_short(REG4,0xffffffff,DEFAULT)
		//0x0644		decoder_mbintra1213
0xE580F01E,	//0x0644		VoC_return	|	VoC_lw16i_short(WRAP2,0x0,DEFAULT)
		//0x0646		CS_get_coeff_h263
0xFFC0F15E,	//0x0646		VoC_NOP	|	VoC_lw16i_short(WRAP2,0xa,DEFAULT)
0x62DDE242,	//0x0648		VoC_rb_i(REG5,0x7,DEFAULT)	|	VoC_lbinc_p(REG2)
0x1502E036,	//0x064a		VoC_sw16_d(REG2,0xcac)(lo)	|	VoC_lw16i_short(REG6,0x3,IN_PARALLEL)
0x35350CAC,	//0x064c		VoC_be16_rr(decoder_h263_mbintra1212,REG6,REG5)(lo)	|	VoC_sw16_d(REG2,0xcac)(hi)
0x62F00679,	//0x064e		VoC_rb_i(REG4,0xc,DEFAULT)	|	VoC_be16_rr(decoder_h263_mbintra1212,REG6,REG5)(hi)
0xF027E005,	//0x0650		VoC_lw16i_short(REG7,0x1,DEFAULT)	|	VoC_lw16i_short(REG5,0x0,IN_PARALLEL)
0x06740A86,	//0x0652		VoC_lw16i(REG6,0x674)
0x1A820912,	//0x0654		VoC_add32_rd(REG45,REG45,0x1a82)
0x1546FBF2,	//0x0656		VoC_sw16_d(REG6,0xffc3)(lo)	|	VoC_shr32_ri(REG45,0xfffffffe,DEFAULT)
0x15477FC3,	//0x0658		VoC_sw16_d(REG7,0xffc2)(lo)	|	VoC_sw16_d(REG6,0xffc3)(hi)
0x15C27FC2,	//0x065a		VoC_sw32_d(REG45,0xffc4)(lo)	|	VoC_sw16_d(REG7,0xffc2)(hi)
0xDE807FC4,	//0x065c		VoC_cfg(0x0)	|	VoC_sw32_d(REG45,0xffc4)(hi)
0x1794FFC0,	//0x065e		VoC_cfg_lg(0x8,)(lo)	|	VoC_NOP
0xFFC00008,	//0x0660		VoC_NOP	|	VoC_cfg_lg(0x8,)(hi)
0x0CE81483,	//0x0662		VoC_lw32_d(REG67,0xce8)
0xF94760E4,	//0x0664		VoC_shru16_ri(REG7,0x8,IN_PARALLEL)	|	VoC_movreg16(REG4,REG7,DEFAULT)
0x06DA3187,	//0x0666		VoC_bez16_r(decoder_h263_mbintra1214,REG7)
0x00FF1604,	//0x0668		VoC_and16_ri(REG4,0xff)
0xF94660C5,	//0x066a		VoC_shru16_ri(REG6,0x8,IN_PARALLEL)	|	VoC_movreg16(REG5,REG6,DEFAULT)
0x00FF1605,	//0x066c		VoC_and16_ri(REG5,0xff)
0xC14DF021,	//0x066e		VoC_add16_rr(REG5,REG5,REG1,DEFAULT)	|	VoC_lw16i_short(REG1,0x1,DEFAULT)
0xE0016329,	//0x0670		VoC_lw16i_short(REG1,0x0,IN_PARALLEL)	|	VoC_rbinc_r(REG5,REG5,DEFAULT)
0x00011605,	//0x0672		VoC_and16_ri(REG5,0x1)
0x06DC3185,	//0x0674		VoC_bez16_r(decoder_h263_mbintra1213,REG5)
0x2B00C27F,	//0x0676		VoC_jump_lg(decoder_h263_mbintra1213)(lo)	|	VoC_sub16_rr(REG7,REG1,REG7,DEFAULT)
0xE29D06DC,	//0x0678		VoC_rbinc_i(REG5,0x7,DEFAULT)	|	VoC_jump_lg(decoder_h263_mbintra1213)(hi)
		//0x0679		decoder_h263_mbintra1212
0xE02462C9,	//0x067a		VoC_lw16i_short(REG4,0x2,IN_PARALLEL)	|	VoC_rb_i(REG5,0x2,DEFAULT)
0x06C6342C,	//0x067c		VoC_bgt16_rr(decoder_h263_mbintra1215,REG5,REG4)
0x35ACE286,	//0x067e		VoC_bne16_rr(decoder_h263_mbintra1216,REG5,REG4)(lo)	|	VoC_rbinc_i(REG6,0x1,DEFAULT)
0xE2860682,	//0x0680		VoC_rbinc_i(REG6,0x1,DEFAULT)	|	VoC_bne16_rr(decoder_h263_mbintra1216,REG5,REG4)(hi)
		//0x0682		decoder_h263_mbintra1216
0x62F0E242,	//0x0682		VoC_rb_i(REG4,0xc,DEFAULT)	|	VoC_lbinc_p(REG2)
0x7027F6AF,	//0x0684		VoC_lw16i_short(REG7,0x1,DEFAULT)	|	VoC_movreg16(RL7_HI,REG5,IN_PARALLEL)
0x0A86E005,	//0x0686		VoC_lw16i(REG6,0x674)(lo)	|	VoC_lw16i_short(REG5,0x0,IN_PARALLEL)
0x09120674,	//0x0688		VoC_add32_rd(REG45,REG45,0x1a82)(lo)	|	VoC_lw16i(REG6,0x674)(hi)
0xFBF21A82,	//0x068a		VoC_shr32_ri(REG45,0xfffffffe,DEFAULT)	|	VoC_add32_rd(REG45,REG45,0x1a82)(hi)
0x7FC31546,	//0x068c		VoC_sw16_d(REG6,0xffc3)
0x7FC21547,	//0x068e		VoC_sw16_d(REG7,0xffc2)
0x7FC415C2,	//0x0690		VoC_sw32_d(REG45,0xffc4)
0xFFC0DE80,	//0x0692		VoC_NOP	|	VoC_cfg(0x0)
0x00081794,	//0x0694		VoC_cfg_lg(0x8,)
0x0CAC1502,	//0x0696		VoC_sw16_d(REG2,0xcac)
0x0CE81483,	//0x0698		VoC_lw32_d(REG67,0xce8)
0xF94760E4,	//0x069a		VoC_shru16_ri(REG7,0x8,IN_PARALLEL)	|	VoC_movreg16(REG4,REG7,DEFAULT)
0x06DA3187,	//0x069c		VoC_bez16_r(decoder_h263_mbintra1214,REG7)
0x00FF1604,	//0x069e		VoC_and16_ri(REG4,0xff)
0xF94660C5,	//0x06a0		VoC_shru16_ri(REG6,0x8,IN_PARALLEL)	|	VoC_movreg16(REG5,REG6,DEFAULT)
0x00FF1605,	//0x06a2		VoC_and16_ri(REG5,0xff)
0xDF417021,	//0x06a4		VoC_push32(REG23,IN_PARALLEL)	|	VoC_lw16i_short(REG1,0x1,DEFAULT)
0x3491E1E2,	//0x06a6		VoC_bngt16_rr(decoder_h263_mbintra1217,REG2,REG1)(lo)	|	VoC_movreg16(REG2,RL7_HI,DEFAULT)
0xE0C206B3,	//0x06a8		VoC_movreg16(REG2,REG6,DEFAULT)	|	VoC_bngt16_rr(decoder_h263_mbintra1217,REG2,REG1)(hi)
0x659E0A83,	//0x06aa		VoC_lw16i(REG3,0x659e)
0xC0D3F8D2,	//0x06ac		VoC_add16_rr(REG3,REG3,REG2,DEFAULT)	|	VoC_shr16_ri(REG2,0xfffffffa,DEFAULT)
0xC10CC0FB,	//0x06ae		VoC_add16_rr(REG4,REG4,REG1,DEFAULT)	|	VoC_add16_rr(REG3,REG3,REG7,DEFAULT)
0xC11CD833,	//0x06b0		VoC_add16_rr(REG4,REG4,REG3,DEFAULT)	|	VoC_lw16_p(REG3,REG3,DEFAULT)
0xE0C2E5CA,	//0x06b2		VoC_movreg16(REG2,REG6,DEFAULT)	|	VoC_jump(decoder_h263_mbintra1218)
		//0x06b3		decoder_h263_mbintra1217
0x651E0A83,	//0x06b4		VoC_lw16i(REG3,0x651e)
0xC0D3F8D2,	//0x06b6		VoC_add16_rr(REG3,REG3,REG2,DEFAULT)	|	VoC_shr16_ri(REG2,0xfffffffa,DEFAULT)
0xFFC0C0E3,	//0x06b8		VoC_NOP	|	VoC_add16_rr(REG3,REG3,REG4,DEFAULT)
0xC1DFD833,	//0x06ba		VoC_add16_rr(REG7,REG7,REG3,DEFAULT)	|	VoC_lw16_p(REG3,REG3,DEFAULT)
		//0x06bc		decoder_h263_mbintra1218
0xDF01414D,	//0x06bc		VoC_pop32(REG23,IN_PARALLEL)	|	VoC_add16_rr(REG5,REG5,REG1,DEFAULT)
0xE0016329,	//0x06be		VoC_lw16i_short(REG1,0x0,IN_PARALLEL)	|	VoC_rbinc_r(REG5,REG5,DEFAULT)
0x00011605,	//0x06c0		VoC_and16_ri(REG5,0x1)
0x06DC3185,	//0x06c2		VoC_bez16_r(decoder_h263_mbintra1213,REG5)
0xE5D7C27F,	//0x06c4		VoC_jump(decoder_h263_mbintra1213)	|	VoC_sub16_rr(REG7,REG1,REG7,DEFAULT)
		//0x06c6		decoder_h263_mbintra1215
0x0CAC1402,	//0x06c6		VoC_lw16_d(REG2,0xcac)
0xE286E289,	//0x06c8		VoC_rbinc_i(REG6,0x1,DEFAULT)	|	VoC_rbinc_i(REG5,0x2,DEFAULT)
0xE242E298,	//0x06ca		VoC_lbinc_p(REG2)	|	VoC_rbinc_i(REG4,0x6,DEFAULT)
0xE2B3E285,	//0x06cc		VoC_rbinc_i(REG7,0xc,DEFAULT)	|	VoC_rbinc_i(REG5,0x1,DEFAULT)
0x5FC6E285,	//0x06ce		VoC_push16(REG6,DEFAULT)	|	VoC_rbinc_i(REG5,0x1,DEFAULT)
0xF007F6E6,	//0x06d0		VoC_lw16i_short(REG7,0x0,DEFAULT)	|	VoC_movreg16(REG6,REG7,IN_PARALLEL)
0xFAA3FD63,	//0x06d2		VoC_shr32_ri(REG67,0x14,DEFAULT)	|	VoC_shru32_ri(REG67,0xffffffec,DEFAULT)
0xDF8660C7,	//0x06d4		VoC_pop16(REG6,IN_PARALLEL)	|	VoC_movreg16(REG7,REG6,DEFAULT)
0x0CAC1502,	//0x06d6		VoC_sw16_d(REG2,0xcac)
0xFFC065C4,	//0x06d8		VoC_NAD(IN_PARALLEL)	|	VoC_jump(decoder_h263_mbintra1213)
		//0x06da		decoder_h263_mbintra1214
0xE00777E4,	//0x06da		VoC_lw16i_short(REG7,0x0,IN_PARALLEL)	|	VoC_lw16i_short(REG4,0xffffffff,DEFAULT)
		//0x06dc		decoder_h263_mbintra1213
0xE580F01E,	//0x06dc		VoC_return	|	VoC_lw16i_short(WRAP2,0x0,DEFAULT)
		//0x06de		CS_decoder_mbintra
0x7000DFE9,	//0x06de		VoC_lw16i_short(REG0,0x0,DEFAULT)	|	VoC_push16(RA,DEFAULT)
0x1404E061,	//0x06e0		VoC_lw16_d(REG4,0xcad)(lo)	|	VoC_lw16i_short(REG1,0x6,IN_PARALLEL)
0x15020CAD,	//0x06e2		VoC_sw16_d(REG2,0xcac)(lo)	|	VoC_lw16_d(REG4,0xcad)(hi)
0x180B0CAC,	//0x06e4		VoC_lw16i_set_inc(REG3,0xcf0,0x2)(lo)	|	VoC_sw16_d(REG2,0xcac)(hi)
0xFF440CF0,	//0x06e6		VoC_lw32z(ACC0,DEFAULT)	|	VoC_lw16i_set_inc(REG3,0xcf0,0x2)(hi)
0x06EA2D81,	//0x06e8		VoC_loop_i(0x1,0xc0)
		//0x06ea		VoC_endloop1
0xFFC05DDC,	//0x06ea		VoC_NAD(IN_PARALLEL)	|	VoC_sw32inc_p(ACC0,REG3,DEFAULT)
		//0x06ec		decoder_mbintra100
0x099C3501,	//0x06ec		VoC_be16_rr(decoder_mbintra101,REG0,REG1)
0xE0365F40,	//0x06ee		VoC_lw16i_short(REG6,0x3,IN_PARALLEL)	|	VoC_push32(REG01,DEFAULT)
0x0CB31405,	//0x06f0		VoC_lw16_d(REG5,0xcb3)
0x00200A87,	//0x06f2		VoC_lw16i(REG7,0x20)
0x0CB21505,	//0x06f4		VoC_sw16_d(REG5,0xcb2)
0x5D6A0A82,	//0x06f6		VoC_lw16i(REG2,0x5d6a)
0x06FC3406,	//0x06f8		VoC_bgt16_rr(decoder_mbintra102,REG0,REG6)
0xFFC040BA,	//0x06fa		VoC_NAD(IN_PARALLEL)	|	VoC_add16_rr(REG2,REG2,REG7,DEFAULT)
		//0x06fc		decoder_mbintra102
0x0CAD0712,	//0x06fc		VoC_add16_rd(REG2,REG2,0xcad)
0x0CAD140B,	//0x06fe		VoC_lw16_d(ACC1_HI,0xcad)
0xF6015825,	//0x0700		VoC_movreg16(REG1,REG0,IN_PARALLEL)	|	VoC_lw16_p(REG5,REG2,DEFAULT)
0x0CC8150B,	//0x0702		VoC_sw16_d(ACC1_HI,0xcc8)
0x0CC61505,	//0x0704		VoC_sw16_d(REG5,0xcc6)
0x07153406,	//0x0706		VoC_bgt16_rr(decoder_mbintra103,REG0,REG6)
0x18D81402,	//0x0708		VoC_lw16_d(REG2,0x18d8)
0x18D91403,	//0x070a		VoC_lw16_d(REG3,0x18d9)
0x00011601,	//0x070c		VoC_and16_ri(REG1,0x1)
0x408AF9E9,	//0x070e		VoC_add16_rr(REG2,REG2,REG1,DEFAULT)	|	VoC_shru16_ri(REG1,0xfffffffd,DEFAULT)
0xF909F601,	//0x0710		VoC_shru16_ri(REG1,0x1,DEFAULT)	|	VoC_movreg16(REG1,REG0,IN_PARALLEL)
0xC0CBF9E9,	//0x0712		VoC_add16_rr(REG3,REG3,REG1,DEFAULT)	|	VoC_shru16_ri(REG1,0xfffffffd,DEFAULT)
0xF081E5CE,	//0x0714		VoC_lw16i_short(REG1,0x4,DEFAULT)	|	VoC_jump(decoder_mbintra104)
		//0x0715		decoder_mbintra103
0x071E3581,	//0x0716		VoC_bne16_rr(decoder_mbintra105,REG0,REG1)
0x18DA1402,	//0x0718		VoC_lw16_d(REG2,0x18da)
0x18DB1403,	//0x071a		VoC_lw16_d(REG3,0x18db)
0xFFC065C6,	//0x071c		VoC_NAD(IN_PARALLEL)	|	VoC_jump(decoder_mbintra104)
		//0x071e		decoder_mbintra105
0x18DC1402,	//0x071e		VoC_lw16_d(REG2,0x18dc)
0x18DD1403,	//0x0720		VoC_lw16_d(REG3,0x18dd)
		//0x0722		decoder_mbintra104
0xFF477F45,	//0x0722		VoC_lw32z(RL7,IN_PARALLEL)	|	VoC_lw32z(ACC1,DEFAULT)
0x0CAE1482,	//0x0724		VoC_lw32_d(REG45,0xcae)
0x0CB0082E,	//0x0726		VoC_mult16_rd(REG6,REG5,0xcb0)
0x0CB81407,	//0x0728		VoC_lw16_d(REG7,0xcb8)
0x34B7C1A6,	//0x072a		VoC_bngt16_rr(decoder_mbintra106,REG6,REG7)(lo)	|	VoC_add16_rr(REG6,REG6,REG4,DEFAULT)
0xF02A072E,	//0x072c		VoC_lw16i_short(ACC1_LO,0x1,DEFAULT)	|	VoC_bngt16_rr(decoder_mbintra106,REG6,REG7)(hi)
		//0x072e		decoder_mbintra106
0x0CB0073F,	//0x072e		VoC_add16_rd(REG7,REG7,0xcb0)
0x0734343E,	//0x0730		VoC_bgt16_rr(decoder_mbintra107,REG7,REG6)
0xFFC0702B,	//0x0732		VoC_NAD(IN_PARALLEL)	|	VoC_lw16i_short(ACC1_HI,0x1,DEFAULT)
		//0x0734		decoder_mbintra107
0x073834B7,	//0x0734		VoC_bngt16_rr(decoder_mbintra108,REG6,REG7)
0xFFC0702E,	//0x0736		VoC_NAD(IN_PARALLEL)	|	VoC_lw16i_short(RL7_LO,0x1,DEFAULT)
		//0x0738		decoder_mbintra108
0x00001805,	//0x0738		VoC_lw16i_set_inc(REG1,0x0,0x1)
0x04000A84,	//0x073a		VoC_lw16i(REG4,0x400)
0xF6896088,	//0x073c		VoC_movreg16(ACC0_HI,REG4,IN_PARALLEL)	|	VoC_movreg16(ACC0_LO,REG4,DEFAULT)
0x1581FF2B,	//0x073e		VoC_sw32_d(REG23,0xccc)(lo)	|	VoC_movreg32(REG67,ACC1,DEFAULT)
0xF1050CCC,	//0x0740		VoC_lw16i_short(REG5,0x8,DEFAULT)	|	VoC_sw32_d(REG23,0xccc)(hi)
0x075A3581,	//0x0742		VoC_bne16_rr(decoder_mbintra109,REG0,REG1)
0x074A3186,	//0x0744		VoC_bez16_r(decoder_mbintra1091,REG6)
0x3203D833,	//0x0746		VoC_bltz16_r(decoder_mbintra1091,REG3)(lo)	|	VoC_lw16_p(REG3,REG3,DEFAULT)
0xE064074A,	//0x0748		VoC_movreg16(REG4,REG3,DEFAULT)	|	VoC_bltz16_r(decoder_mbintra1091,REG3)(hi)
		//0x074a		decoder_mbintra1091
0x07503187,	//0x074a		VoC_bez16_r(decoder_mbintra1092,REG7)
0x3203D823,	//0x074c		VoC_bltz16_r(decoder_mbintra1092,REG3)(lo)	|	VoC_lw16_p(REG3,REG2,DEFAULT)
0xE0680750,	//0x074e		VoC_movreg16(ACC0_LO,REG3,DEFAULT)	|	VoC_bltz16_r(decoder_mbintra1092,REG3)(hi)
		//0x0750		decoder_mbintra1092
0xF7C342AA,	//0x0750		VoC_movreg16(REG3,RL7_LO,IN_PARALLEL)	|	VoC_sub16_rr(REG2,REG2,REG5,DEFAULT)
0x07583183,	//0x0752		VoC_bez16_r(decoder_mbintra1093,REG3)
0x3202D822,	//0x0754		VoC_bltz16_r(decoder_mbintra1093,REG2)(lo)	|	VoC_lw16_p(REG2,REG2,DEFAULT)
0xE0490758,	//0x0756		VoC_movreg16(ACC0_HI,REG2,DEFAULT)	|	VoC_bltz16_r(decoder_mbintra1093,REG2)(hi)
		//0x0758		decoder_mbintra1093
0x07C82B00,	//0x0758		VoC_jump_lg(decoder_mbintra114)
		//0x075a		decoder_mbintra109
0x3581DE08,	//0x075a		VoC_bne16_rr(decoder_mbintra110,REG0,REG1)(lo)	|	VoC_inc_p(REG1,DEFAULT)
0xD8330770,	//0x075c		VoC_lw16_p(REG3,REG3,DEFAULT)	|	VoC_bne16_rr(decoder_mbintra110,REG0,REG1)(hi)
0x07623203,	//0x075e		VoC_bltz16_r(decoder_mbintra1101,REG3)
0xFFC06064,	//0x0760		VoC_NAD(IN_PARALLEL)	|	VoC_movreg16(REG4,REG3,DEFAULT)
		//0x0762		decoder_mbintra1101
0x076E3187,	//0x0762		VoC_bez16_r(decoder_mbintra1102,REG7)
0xC2AAD823,	//0x0764		VoC_sub16_rr(REG2,REG2,REG5,DEFAULT)	|	VoC_lw16_p(REG3,REG2,DEFAULT)
0x07693203,	//0x0766		VoC_bltz16_r(decoder_mbintra1103,REG3)
0xD823E068,	//0x0768		VoC_lw16_p(REG3,REG2,DEFAULT)	|	VoC_movreg16(ACC0_LO,REG3,DEFAULT)
		//0x0769		decoder_mbintra1103
0x076E3203,	//0x076a		VoC_bltz16_r(decoder_mbintra1102,REG3)
0xFFC06069,	//0x076c		VoC_NAD(IN_PARALLEL)	|	VoC_movreg16(ACC0_HI,REG3,DEFAULT)
		//0x076e		decoder_mbintra1102
0x07C82B00,	//0x076e		VoC_jump_lg(decoder_mbintra114)
		//0x0770		decoder_mbintra110
0x3581DE08,	//0x0770		VoC_bne16_rr(decoder_mbintra111,REG0,REG1)(lo)	|	VoC_inc_p(REG1,DEFAULT)
0x31860786,	//0x0772		VoC_bez16_r(decoder_mbintra1113,REG6)(lo)	|	VoC_bne16_rr(decoder_mbintra111,REG0,REG1)(hi)
0xD833077F,	//0x0774		VoC_lw16_p(REG3,REG3,DEFAULT)	|	VoC_bez16_r(decoder_mbintra1113,REG6)(hi)
0x07793203,	//0x0776		VoC_bltz16_r(decoder_mbintra1112,REG3)
0xC2ABE064,	//0x0778		VoC_sub16_rr(REG3,REG2,REG5,DEFAULT)	|	VoC_movreg16(REG4,REG3,DEFAULT)
		//0x0779		decoder_mbintra1112
0xD833FFC0,	//0x077a		VoC_lw16_p(REG3,REG3,DEFAULT)	|	VoC_NOP
0x077F3203,	//0x077c		VoC_bltz16_r(decoder_mbintra1113,REG3)
0xD823E069,	//0x077e		VoC_lw16_p(REG3,REG2,DEFAULT)	|	VoC_movreg16(ACC0_HI,REG3,DEFAULT)
		//0x077f		decoder_mbintra1113
0x07843203,	//0x0780		VoC_bltz16_r(decoder_mbintra1111,REG3)
0xFFC06068,	//0x0782		VoC_NAD(IN_PARALLEL)	|	VoC_movreg16(ACC0_LO,REG3,DEFAULT)
		//0x0784		decoder_mbintra1111
0x07C82B00,	//0x0784		VoC_jump_lg(decoder_mbintra114)
		//0x0786		decoder_mbintra111
0x3581DE08,	//0x0786		VoC_bne16_rr(decoder_mbintra112,REG0,REG1)(lo)	|	VoC_inc_p(REG1,DEFAULT)
0xD833079A,	//0x0788		VoC_lw16_p(REG3,REG3,DEFAULT)	|	VoC_bne16_rr(decoder_mbintra112,REG0,REG1)(hi)
0x078D3203,	//0x078a		VoC_bltz16_r(decoder_mbintra1121,REG3)
0xD823E064,	//0x078c		VoC_lw16_p(REG3,REG2,DEFAULT)	|	VoC_movreg16(REG4,REG3,DEFAULT)
		//0x078d		decoder_mbintra1121
0x07913203,	//0x078e		VoC_bltz16_r(decoder_mbintra1122,REG3)
0xC2AAE068,	//0x0790		VoC_sub16_rr(REG2,REG2,REG5,DEFAULT)	|	VoC_movreg16(ACC0_LO,REG3,DEFAULT)
		//0x0791		decoder_mbintra1122
0xD823FFC0,	//0x0792		VoC_lw16_p(REG3,REG2,DEFAULT)	|	VoC_NOP
0x07983203,	//0x0794		VoC_bltz16_r(decoder_mbintra1123,REG3)
0xFFC06069,	//0x0796		VoC_NAD(IN_PARALLEL)	|	VoC_movreg16(ACC0_HI,REG3,DEFAULT)
		//0x0798		decoder_mbintra1123
0x07C82B00,	//0x0798		VoC_jump_lg(decoder_mbintra114)
		//0x079a		decoder_mbintra112
0x3581DE08,	//0x079a		VoC_bne16_rr(decoder_mbintra113,REG0,REG1)(lo)	|	VoC_inc_p(REG1,DEFAULT)
0x318607B4,	//0x079c		VoC_bez16_r(decoder_mbintra1131,REG6)(lo)	|	VoC_bne16_rr(decoder_mbintra113,REG0,REG1)(hi)
0xD83307A4,	//0x079e		VoC_lw16_p(REG3,REG3,DEFAULT)	|	VoC_bez16_r(decoder_mbintra1131,REG6)(hi)
0x07A43203,	//0x07a0		VoC_bltz16_r(decoder_mbintra1131,REG3)
0xFFC06064,	//0x07a2		VoC_NAD(IN_PARALLEL)	|	VoC_movreg16(REG4,REG3,DEFAULT)
		//0x07a4		decoder_mbintra1131
0x07AA3187,	//0x07a4		VoC_bez16_r(decoder_mbintra1132,REG7)
0x3203D823,	//0x07a6		VoC_bltz16_r(decoder_mbintra1132,REG3)(lo)	|	VoC_lw16_p(REG3,REG2,DEFAULT)
0xE06807AA,	//0x07a8		VoC_movreg16(ACC0_LO,REG3,DEFAULT)	|	VoC_bltz16_r(decoder_mbintra1132,REG3)(hi)
		//0x07aa		decoder_mbintra1132
0xF7C342AA,	//0x07aa		VoC_movreg16(REG3,RL7_LO,IN_PARALLEL)	|	VoC_sub16_rr(REG2,REG2,REG5,DEFAULT)
0x07B23183,	//0x07ac		VoC_bez16_r(decoder_mbintra1133,REG3)
0x3202D822,	//0x07ae		VoC_bltz16_r(decoder_mbintra1133,REG2)(lo)	|	VoC_lw16_p(REG2,REG2,DEFAULT)
0xE04907B2,	//0x07b0		VoC_movreg16(ACC0_HI,REG2,DEFAULT)	|	VoC_bltz16_r(decoder_mbintra1133,REG2)(hi)
		//0x07b2		decoder_mbintra1133
0xFFC065D6,	//0x07b2		VoC_NAD(IN_PARALLEL)	|	VoC_jump(decoder_mbintra114)
		//0x07b4		decoder_mbintra113
0x07BA3186,	//0x07b4		VoC_bez16_r(decoder_mbintra1141,REG6)
0x3203D833,	//0x07b6		VoC_bltz16_r(decoder_mbintra1141,REG3)(lo)	|	VoC_lw16_p(REG3,REG3,DEFAULT)
0xE06407BA,	//0x07b8		VoC_movreg16(REG4,REG3,DEFAULT)	|	VoC_bltz16_r(decoder_mbintra1141,REG3)(hi)
		//0x07ba		decoder_mbintra1141
0x07C03187,	//0x07ba		VoC_bez16_r(decoder_mbintra1142,REG7)
0x3203D823,	//0x07bc		VoC_bltz16_r(decoder_mbintra1142,REG3)(lo)	|	VoC_lw16_p(REG3,REG2,DEFAULT)
0xE06807C0,	//0x07be		VoC_movreg16(ACC0_LO,REG3,DEFAULT)	|	VoC_bltz16_r(decoder_mbintra1142,REG3)(hi)
		//0x07c0		decoder_mbintra1142
0xF7C342AA,	//0x07c0		VoC_movreg16(REG3,RL7_LO,IN_PARALLEL)	|	VoC_sub16_rr(REG2,REG2,REG5,DEFAULT)
0x07C83183,	//0x07c2		VoC_bez16_r(decoder_mbintra114,REG3)
0x3202D822,	//0x07c4		VoC_bltz16_r(decoder_mbintra114,REG2)(lo)	|	VoC_lw16_p(REG2,REG2,DEFAULT)
0xE04907C8,	//0x07c6		VoC_movreg16(ACC0_HI,REG2,DEFAULT)	|	VoC_bltz16_r(decoder_mbintra114,REG2)(hi)
		//0x07c8		decoder_mbintra114
0x43BAFF23,	//0x07c8		VoC_sub16_rr(REG2,REG6,REG7,DEFAULT)	|	VoC_movreg32(REG67,ACC0,DEFAULT)
0x5E42C339,	//0x07ca		VoC_abs16_r(REG2,DEFAULT)	|	VoC_sub16_rr(REG1,REG4,REG7,IN_PARALLEL)
0x1485DE41,	//0x07cc		VoC_lw32_d(ACC1,0xccc)(lo)	|	VoC_abs16_r(REG1,IN_PARALLEL)
0x34110CCC,	//0x07ce		VoC_bgt16_rr(decoder_mbintra117,REG2,REG1)(lo)	|	VoC_lw32_d(ACC1,0xccc)(hi)
0x704207E6,	//0x07d0		VoC_lw16i_short(REG2,0x2,DEFAULT)	|	VoC_bgt16_rr(decoder_mbintra117,REG2,REG1)(hi)
0x6083F765,	//0x07d2		VoC_movreg16(REG3,REG4,DEFAULT)	|	VoC_movreg16(REG5,ACC1_HI,IN_PARALLEL)
0xD855E004,	//0x07d4		VoC_lw16_p(REG5,REG5,DEFAULT)	|	VoC_lw16i_short(REG4,0x0,IN_PARALLEL)
0x07DA3245,	//0x07d6		VoC_bnltz16_r(decoder_mbintra1171,REG5)
0x0CB21504,	//0x07d8		VoC_sw16_d(REG4,0xcb2)
		//0x07da		decoder_mbintra1171
0xE0357024,	//0x07da		VoC_lw16i_short(REG5,0x3,IN_PARALLEL)	|	VoC_lw16i_short(REG4,0x1,DEFAULT)
0x1A931406,	//0x07dc		VoC_lw16_d(REG6,0x1a93)
0x07E43504,	//0x07de		VoC_be16_rr(decoder_mbintra1172,REG0,REG4)
0x07E43505,	//0x07e0		VoC_be16_rr(decoder_mbintra1172,REG0,REG5)
0x0CC81506,	//0x07e2		VoC_sw16_d(REG6,0xcc8)
		//0x07e4		decoder_mbintra1172
0xFFC065DA,	//0x07e4		VoC_NAD(IN_PARALLEL)	|	VoC_jump(decoder_mbintra118)
		//0x07e6		decoder_mbintra117
0xF7457022,	//0x07e6		VoC_movreg16(REG5,ACC1_LO,IN_PARALLEL)	|	VoC_lw16i_short(REG2,0x1,DEFAULT)
0xE0086103,	//0x07e8		VoC_lw16i_short(ACC0_LO,0x0,IN_PARALLEL)	|	VoC_movreg16(REG3,ACC0_LO,DEFAULT)
0x3245D855,	//0x07ea		VoC_bnltz16_r(decoder_mbintra1173,REG5)(lo)	|	VoC_lw16_p(REG5,REG5,DEFAULT)
0x150807F0,	//0x07ec		VoC_sw16_d(ACC0_LO,0xcb2)(lo)	|	VoC_bnltz16_r(decoder_mbintra1173,REG5)(hi)
0xFFC00CB2,	//0x07ee		VoC_NAD	|	VoC_sw16_d(ACC0_LO,0xcb2)(hi)
		//0x07f0		decoder_mbintra1173
0x1A940A86,	//0x07f0		VoC_lw16i(REG6,0x1a94)
0x0CAE0736,	//0x07f2		VoC_add16_rd(REG6,REG6,0xcae)
0xE0357044,	//0x07f4		VoC_lw16i_short(REG5,0x3,IN_PARALLEL)	|	VoC_lw16i_short(REG4,0x2,DEFAULT)
0x3504D866,	//0x07f6		VoC_be16_rr(decoder_mbintra118,REG0,REG4)(lo)	|	VoC_lw16_p(REG6,REG6,DEFAULT)
0x350507FE,	//0x07f8		VoC_be16_rr(decoder_mbintra118,REG0,REG5)(lo)	|	VoC_be16_rr(decoder_mbintra118,REG0,REG4)(hi)
0x150607FE,	//0x07fa		VoC_sw16_d(REG6,0xcc8)(lo)	|	VoC_be16_rr(decoder_mbintra118,REG0,REG5)(hi)
0xFFC00CC8,	//0x07fc		VoC_NAD	|	VoC_sw16_d(REG6,0xcc8)(hi)
		//0x07fe		decoder_mbintra118
0x0CC51503,	//0x07fe		VoC_sw16_d(REG3,0xcc5)
0x0CB36804,	//0x0800		VoC_bgtz16_d(decoder_mbintra119,0xcb3)
0xFFC07002,	//0x0802		VoC_NAD(IN_PARALLEL)	|	VoC_lw16i_short(REG2,0x0,DEFAULT)
		//0x0804		decoder_mbintra119
0x0CAD1404,	//0x0804		VoC_lw16_d(REG4,0xcad)
0xF4567005,	//0x0806		VoC_lw16i_short(WRAP2,0xa,IN_PARALLEL)	|	VoC_lw16i_short(REG5,0x0,DEFAULT)
0xF006700B,	//0x0808		VoC_lw16i_short(INC2,0x1,IN_PARALLEL)	|	VoC_lw16i_short(ACC1_HI,0x0,DEFAULT)
0x0CC21502,	//0x080a		VoC_sw16_d(REG2,0xcc2)
0x0CAC1402,	//0x080c		VoC_lw16_d(REG2,0xcac)
0x0CB46022,	//0x080e		VoC_blt32_rd(decoder_mbintra12014,REG45,0xcb4)
0x08662B00,	//0x0810		VoC_jump_lg(decoder_mbintra120)
		//0x0812		decoder_mbintra12014
0x7063E242,	//0x0812		VoC_lw16i_short(REG3,0x3,DEFAULT)	|	VoC_lbinc_p(REG2)
0x3403F406,	//0x0814		VoC_bgt16_rr(decoder_mbintra1201,REG0,REG3)(lo)	|	VoC_lw16i_short(WRAP2,0x0,IN_PARALLEL)
0xE2EC0831,	//0x0816		VoC_rb_i(REG4,0xb,DEFAULT)	|	VoC_bgt16_rr(decoder_mbintra1201,REG0,REG3)(hi)
0x01000A85,	//0x0818		VoC_lw16i(REG5,0x100)
0x08283425,	//0x081a		VoC_bgt16_rr(decoder_mbintra12011,REG4,REG5)
0x000C1FBD,	//0x081c		VoC_lw16i_set_inc(REG1,0xc,0xffffffff)
		//0x081e		decoder_mbintra12013
0x08243184,	//0x081e		VoC_bez16_r(decoder_mbintra12012,REG4)
0xF80C5E08,	//0x0820		VoC_shr16_ri(REG4,0x1,IN_PARALLEL)	|	VoC_inc_p(REG1,DEFAULT)
0xFFC065FC,	//0x0822		VoC_NAD(IN_PARALLEL)	|	VoC_jump(decoder_mbintra12013)
		//0x0824		decoder_mbintra12012
0xE013630A,	//0x0824		VoC_lw16i_short(REG3,0x1,IN_PARALLEL)	|	VoC_rbinc_r(REG6,REG1,DEFAULT)
0xE5DEC0CE,	//0x0826		VoC_jump(decoder_mbintra1202)	|	VoC_add16_rr(REG6,REG3,REG1,DEFAULT)
		//0x0828		decoder_mbintra12011
0xF8FCF844,	//0x0828		VoC_shr16_ri(REG4,0xffffffff,DEFAULT)	|	VoC_shr16_ri(REG4,0x8,DEFAULT)
0x5DAA0A81,	//0x082a		VoC_lw16i(REG1,0x5daa)
0xFFC0C061,	//0x082c		VoC_NOP	|	VoC_add16_rr(REG1,REG1,REG4,DEFAULT)
0xE33BD98B,	//0x082e		VoC_rbinc_r(REG7,REG7,DEFAULT)	|	VoC_lw32_p(REG67,REG1,DEFAULT)
0xE2F0E5D5,	//0x0830		VoC_rb_i(REG4,0xc,DEFAULT)	|	VoC_jump(decoder_mbintra1202)
		//0x0831		decoder_mbintra1201
0x04000A86,	//0x0832		VoC_lw16i(REG6,0x400)
0x08423426,	//0x0834		VoC_bgt16_rr(decoder_mbintra1204,REG4,REG6)
0x000D1FBD,	//0x0836		VoC_lw16i_set_inc(REG1,0xd,0xffffffff)
		//0x0838		decoder_mbintra1206
0x083E3184,	//0x0838		VoC_bez16_r(decoder_mbintra1205,REG4)
0xDE08790C,	//0x083a		VoC_inc_p(REG1,IN_PARALLEL)	|	VoC_shru16_ri(REG4,0x1,DEFAULT)
0xFFC065FC,	//0x083c		VoC_NAD(IN_PARALLEL)	|	VoC_jump(decoder_mbintra1206)
		//0x083e		decoder_mbintra1205
0xF6266308,	//0x083e		VoC_movreg16(REG6,REG1,IN_PARALLEL)	|	VoC_rbinc_r(REG4,REG1,DEFAULT)
0xFFC065C5,	//0x0840		VoC_NAD(IN_PARALLEL)	|	VoC_jump(decoder_mbintra1202)
		//0x0842		decoder_mbintra1204
0xE034628A,	//0x0842		VoC_lw16i_short(REG4,0x3,IN_PARALLEL)	|	VoC_rbinc_i(REG6,0x2,DEFAULT)
0xF15EC336,	//0x0844		VoC_lw16i_short(WRAP2,0xa,DEFAULT)	|	VoC_sub16_rr(REG6,REG4,REG6,DEFAULT)
		//0x0845		decoder_mbintra1202
0xDFC67005,	//0x0846		VoC_push16(REG6,IN_PARALLEL)	|	VoC_lw16i_short(REG5,0x0,DEFAULT)
0x085A3186,	//0x0848		VoC_bez16_r(decoder_mbintra1203,REG6)
0xE330E242,	//0x084a		VoC_rbinc_r(REG4,REG6,DEFAULT)	|	VoC_lbinc_p(REG2)
0xF8FC6085,	//0x084c		VoC_shr16_ri(REG4,0xffffffff,IN_PARALLEL)	|	VoC_movreg16(REG5,REG4,DEFAULT)
0x31C4FE34,	//0x084e		VoC_bnez16_r(decoder_mbintra1203,REG4)(lo)	|	VoC_shr16_rr(REG4,REG6,DEFAULT)
0x7007085A,	//0x0850		VoC_lw16i_short(REG7,0x0,DEFAULT)	|	VoC_bnez16_r(decoder_mbintra1203,REG4)(hi)
0xC3F6E014,	//0x0852		VoC_sub16_rr(REG6,REG7,REG6,DEFAULT)	|	VoC_lw16i_short(REG4,0x1,IN_PARALLEL)
0xE0137E34,	//0x0854		VoC_lw16i_short(REG3,0x1,IN_PARALLEL)	|	VoC_shr16_rr(REG4,REG6,DEFAULT)
0xC3F6431C,	//0x0856		VoC_sub16_rr(REG6,REG7,REG6,IN_PARALLEL)	|	VoC_sub16_rr(REG4,REG4,REG3,DEFAULT)
0xC3EDE4A5,	//0x0858		VoC_sub16_rr(REG5,REG7,REG5,DEFAULT)	|	VoC_xor16_rr(REG5,REG4,DEFAULT)
		//0x085a		decoder_mbintra1203
0xF4065F87,	//0x085a		VoC_lw16i_short(WRAP2,0x0,IN_PARALLEL)	|	VoC_pop16(REG7,DEFAULT)
0x0CAC1502,	//0x085c		VoC_sw16_d(REG2,0xcac)
0x0CF00A86,	//0x085e		VoC_lw16i(REG6,0xcf0)
0xF8D4E004,	//0x0860		VoC_shr16_ri(REG4,0xfffffffa,DEFAULT)	|	VoC_movreg16(REG4,REG0,DEFAULT)
0xF02BC1A4,	//0x0862		VoC_lw16i_short(ACC1_HI,0x1,DEFAULT)	|	VoC_add16_rr(REG4,REG6,REG4,DEFAULT)
0xFFC05C45,	//0x0864		VoC_NAD(IN_PARALLEL)	|	VoC_sw16_p(REG5,REG4,DEFAULT)
		//0x0866		decoder_mbintra120
0x0CC3150B,	//0x0866		VoC_sw16_d(ACC1_HI,0xcc3)
0x00200A84,	//0x0868		VoC_lw16i(REG4,0x20)
0x0CB61405,	//0x086a		VoC_lw16_d(REG5,0xcb6)
0xF4067E04,	//0x086c		VoC_lw16i_short(WRAP2,0x0,IN_PARALLEL)	|	VoC_shr16_rr(REG4,REG0,DEFAULT)
0x3184E42C,	//0x086e		VoC_bez16_r(decoder_mbintra121,REG4)(lo)	|	VoC_and16_rr(REG4,REG5,DEFAULT)
0x18070898,	//0x0870		VoC_lw16i_set_inc(REG3,0x5e78,0x1)(lo)	|	VoC_bez16_r(decoder_mbintra121,REG4)(hi)
0x14045E78,	//0x0872		VoC_lw16_d(REG4,0xcc2)(lo)	|	VoC_lw16i_set_inc(REG3,0x5e78,0x1)(hi)
0x78D40CC2,	//0x0874		VoC_shr16_ri(REG4,0xfffffffa,DEFAULT)	|	VoC_lw16_d(REG4,0xcc2)(hi)
0x40E3F601,	//0x0876		VoC_add16_rr(REG3,REG3,REG4,DEFAULT)	|	VoC_movreg16(REG1,REG0,IN_PARALLEL)
0x1402F8D1,	//0x0878		VoC_lw16_d(REG2,0xcac)(lo)	|	VoC_shr16_ri(REG1,0xfffffffa,IN_PARALLEL)
0x0A840CAC,	//0x087a		VoC_lw16i(REG4,0xcf0)(lo)	|	VoC_lw16_d(REG2,0xcac)(hi)
0xC10C0CF0,	//0x087c		VoC_add16_rr(REG4,REG4,REG1,DEFAULT)	|	VoC_lw16i(REG4,0xcf0)(hi)
0xF032E088,	//0x087e		VoC_lw16i_short(INC2,0x1,DEFAULT)	|	VoC_movreg16(ACC0_LO,REG4,DEFAULT)
0x0CC31409,	//0x0880		VoC_lw16_d(ACC0_HI,0xcc3)
		//0x0882		decoder_mbintra1211
0x05AE2B80,	//0x0882		VoC_jal(CS_get_coeff)
0x3525F7E5,	//0x0884		VoC_be16_rr(decoder_mbintra121,REG4,REG5)(lo)	|	VoC_lw16i_short(REG5,0xffffffff,DEFAULT)
0xE1250898,	//0x0886		VoC_movreg16(REG5,ACC0_HI,DEFAULT)	|	VoC_be16_rr(decoder_mbintra121,REG4,REG5)(hi)
0xE3F44165,	//0x0888		VoC_lw16i_short(REG4,0x3f,IN_PARALLEL)	|	VoC_add16_rr(REG5,REG5,REG4,DEFAULT)
0x0898342C,	//0x088a		VoC_bgt16_rr(decoder_mbintra121,REG5,REG4)
0xC0EB5FC3,	//0x088c		VoC_add16_rr(REG3,REG3,REG5,IN_PARALLEL)	|	VoC_push16(REG3,DEFAULT)
0xD834E101,	//0x088e		VoC_lw16_p(REG4,REG3,DEFAULT)	|	VoC_movreg16(REG1,ACC0_LO,DEFAULT)
0xE0144061,	//0x0890		VoC_lw16i_short(REG4,0x1,IN_PARALLEL)	|	VoC_add16_rr(REG1,REG1,REG4,DEFAULT)
0x60A9C165,	//0x0892		VoC_movreg16(ACC0_HI,REG5,DEFAULT)	|	VoC_add16_rr(REG5,REG5,REG4,DEFAULT)
0xDC17DF83,	//0x0894		VoC_sw16_p(REG7,REG1,DEFAULT)	|	VoC_pop16(REG3,IN_PARALLEL)
0x08823186,	//0x0896		VoC_bez16_r(decoder_mbintra1211,REG6)
		//0x0898		decoder_mbintra121
0xF8D1E001,	//0x0898		VoC_shr16_ri(REG1,0xfffffffa,DEFAULT)	|	VoC_movreg16(REG1,REG0,DEFAULT)
0x0CF00A84,	//0x089a		VoC_lw16i(REG4,0xcf0)
0xE0014064,	//0x089c		VoC_lw16i_short(REG1,0x0,IN_PARALLEL)	|	VoC_add16_rr(REG4,REG1,REG4,DEFAULT)
0x3406F066,	//0x089e		VoC_bgt16_rr(decoder_mbintra1210,REG0,REG6)(lo)	|	VoC_lw16i_short(REG6,0x3,DEFAULT)
0x0A8108A4,	//0x08a0		VoC_lw16i(REG1,0x20)(lo)	|	VoC_bgt16_rr(decoder_mbintra1210,REG0,REG6)(hi)
0xFFC00020,	//0x08a2		VoC_NAD	|	VoC_lw16i(REG1,0x20)(hi)
		//0x08a4		decoder_mbintra1210
0x5DBA0A85,	//0x08a4		VoC_lw16i(REG5,0x5dba)
0xD846DFC4,	//0x08a6		VoC_lw16_p(REG6,REG4,DEFAULT)	|	VoC_push16(REG4,DEFAULT)
0x0CAD072D,	//0x08a8		VoC_add16_rd(REG5,REG5,0xcad)
0xE00A414D,	//0x08aa		VoC_lw16i_short(ACC1_LO,0x0,IN_PARALLEL)	|	VoC_add16_rr(REG5,REG5,REG1,DEFAULT)
0x0CC51407,	//0x08ac		VoC_lw16_d(REG7,0xcc5)
0x4DEAD855,	//0x08ae		VoC_multf32_rr(REG45,REG7,REG5,DEFAULT)	|	VoC_lw16_p(REG5,REG5,DEFAULT)
0xF97FE01B,	//0x08b0		VoC_shru16_ri(REG7,0xf,DEFAULT)	|	VoC_lw16i_short(ACC1_HI,0x1,IN_PARALLEL)
0xC1BE48AA,	//0x08b2		VoC_add16_rr(REG6,REG6,REG7,IN_PARALLEL)	|	VoC_add32_rr(REG45,REG45,ACC1,DEFAULT)
0xC1A6FA8A,	//0x08b4		VoC_add16_rr(REG6,REG6,REG4,DEFAULT)	|	VoC_shr32_ri(REG45,0x11,DEFAULT)
0x0836DF84,	//0x08b6		VoC_mult16_rd(REG6,REG6,0xcc6)(lo)	|	VoC_pop16(REG4,DEFAULT)
0xDC460CC6,	//0x08b8		VoC_sw16_p(REG6,REG4,DEFAULT)	|	VoC_mult16_rd(REG6,REG6,0xcc6)(hi)
0x07FF0A87,	//0x08ba		VoC_lw16i(REG7,0x7ff)
0xDEFE7001,	//0x08bc		VoC_clipu16_rr(REG6,REG7,IN_PARALLEL)	|	VoC_lw16i_short(REG1,0x0,DEFAULT)
0x0CCC2006,	//0x08be		VoC_lw16d_set_inc(REG2,0xccc,0x1)
0x0CCD2007,	//0x08c0		VoC_lw16d_set_inc(REG3,0xccd,0x1)
0x0CC71506,	//0x08c2		VoC_sw16_d(REG6,0xcc7)
0xF60F6081,	//0x08c4		VoC_movreg16(RL7_HI,REG0,IN_PARALLEL)	|	VoC_movreg16(REG1,REG4,DEFAULT)
0xF0056020,	//0x08c6		VoC_lw16i_short(INC1,0x1,IN_PARALLEL)	|	VoC_movreg16(REG0,REG1,DEFAULT)
0xDE187110,	//0x08c8		VoC_inc_p(REG3,IN_PARALLEL)	|	VoC_lw16i_short(INC0,0x8,DEFAULT)
0xDE105E08,	//0x08ca		VoC_inc_p(REG2,IN_PARALLEL)	|	VoC_inc_p(REG1,DEFAULT)
0x6E09DE00,	//0x08cc		VoC_bnez16_d(decoder_mbintra122,0xcc2)(lo)	|	VoC_inc_p(REG0,DEFAULT)
0xE8E40CC2,	//0x08ce		VoC_loop_i_short(0x7,DEFAULT)	|	VoC_bnez16_d(decoder_mbintra122,0xcc2)(hi)
0xD885D894,	//0x08d0		VoC_lw16inc_p(REG5,REG0,DEFAULT)	|	VoC_lw16inc_p(REG4,REG1,DEFAULT)
0xDCB5DCA4,	//0x08d2		VoC_sw16inc_p(REG5,REG3,DEFAULT)	|	VoC_sw16inc_p(REG4,REG2,DEFAULT)
		//0x08d3		VoC_endloop0
0x09122B00,	//0x08d4		VoC_jump_lg(decoder_mbintra124)
		//0x08d6		decoder_mbintra122
0x45BCF024,	//0x08d6		VoC_bne16_rd(decoder_mbintra123,REG4,0xcc2)(lo)	|	VoC_lw16i_short(REG4,0x1,DEFAULT)
0x14040CC2,	//0x08d8		VoC_lw16_d(REG4,0xcad)(lo)	|	VoC_bne16_rd(decoder_mbintra123,REG4,0xcc2)(hi)
0x0A850CAD,	//0x08da		VoC_lw16i(REG5,0x5dfa)(lo)	|	VoC_lw16_d(REG4,0xcad)(hi)
0x412D5DFA,	//0x08dc		VoC_add16_rr(REG5,REG4,REG5,DEFAULT)	|	VoC_lw16i(REG5,0x5dfa)(hi)
0x68F3F80C,	//0x08de		VoC_loop_i_short(0x7,DEFAULT)	|	VoC_shr16_ri(REG4,0x1,IN_PARALLEL)
0xD826DF47,	//0x08e0		VoC_lw16_p(REG6,REG2,DEFAULT)	|	VoC_push32(RL7,IN_PARALLEL)
0x0CC80836,	//0x08e2		VoC_mult16_rd(REG6,REG6,0xcc8)
0xC1A6F027,	//0x08e4		VoC_add16_rr(REG6,REG6,REG4,DEFAULT)	|	VoC_lw16i_short(REG7,0x1,DEFAULT)
0x0B3F99AF,	//0x08e6		VoC_sub16_dr(REG7,0xcb2,REG7)(lo)	|	VoC_multf32_rp(RL7,REG6,REG5,DEFAULT)
0xFA7F0CB2,	//0x08e8		VoC_shr32_ri(RL7,0xf,DEFAULT)	|	VoC_sub16_dr(REG7,0xcb2,REG7)(hi)
0x818EE1C6,	//0x08ea		VoC_add16_rp(REG6,REG6,REG1,DEFAULT)	|	VoC_movreg16(REG6,RL7_LO,DEFAULT)
0x08EF3247,	//0x08ec		VoC_bnltz16_r(decoder_mbintra1231,REG7)
0xD887D816,	//0x08ee		VoC_lw16inc_p(REG7,REG0,DEFAULT)	|	VoC_lw16_p(REG6,REG1,DEFAULT)
		//0x08ef		decoder_mbintra1231
0xDCA6DC96,	//0x08f0		VoC_sw16inc_p(REG6,REG2,DEFAULT)	|	VoC_sw16inc_p(REG6,REG1,DEFAULT)
		//0x08f2		VoC_endloop0
0xDF07DCB7,	//0x08f2		VoC_pop32(RL7,DEFAULT)	|	VoC_sw16inc_p(REG7,REG3,DEFAULT)
0xFFC065DE,	//0x08f4		VoC_NAD(IN_PARALLEL)	|	VoC_jump(decoder_mbintra124)
		//0x08f6		decoder_mbintra123
0x0CAD1404,	//0x08f6		VoC_lw16_d(REG4,0xcad)
0x5DFA0A85,	//0x08f8		VoC_lw16i(REG5,0x5dfa)
0xF80C412D,	//0x08fa		VoC_shr16_ri(REG4,0x1,IN_PARALLEL)	|	VoC_add16_rr(REG5,REG4,REG5,DEFAULT)
0xDF4768F3,	//0x08fc		VoC_push32(RL7,IN_PARALLEL)	|	VoC_loop_i_short(0x7,DEFAULT)
0x0836D836,	//0x08fe		VoC_mult16_rd(REG6,REG6,0xcc8)(lo)	|	VoC_lw16_p(REG6,REG3,DEFAULT)
0xF0270CC8,	//0x0900		VoC_lw16i_short(REG7,0x1,DEFAULT)	|	VoC_mult16_rd(REG6,REG6,0xcc8)(hi)
0x99AFC1A6,	//0x0902		VoC_multf32_rp(RL7,REG6,REG5,DEFAULT)	|	VoC_add16_rr(REG6,REG6,REG4,DEFAULT)
0x0CB20B3F,	//0x0904		VoC_sub16_dr(REG7,0xcb2,REG7)
0xE1C6FA7F,	//0x0906		VoC_movreg16(REG6,RL7_LO,DEFAULT)	|	VoC_shr32_ri(RL7,0xf,DEFAULT)
0x32478186,	//0x0908		VoC_bnltz16_r(decoder_mbintra1241,REG7)(lo)	|	VoC_add16_rp(REG6,REG6,REG0,DEFAULT)
0xD806090C,	//0x090a		VoC_lw16_p(REG6,REG0,DEFAULT)	|	VoC_bnltz16_r(decoder_mbintra1241,REG7)(hi)
		//0x090c		decoder_mbintra1241
0xDC86D897,	//0x090c		VoC_sw16inc_p(REG6,REG0,DEFAULT)	|	VoC_lw16inc_p(REG7,REG1,DEFAULT)
0xDCA7DCB6,	//0x090e		VoC_sw16inc_p(REG7,REG2,DEFAULT)	|	VoC_sw16inc_p(REG6,REG3,DEFAULT)
		//0x090f		VoC_endloop0
0xFFC05F07,	//0x0910		VoC_NAD(IN_PARALLEL)	|	VoC_pop32(RL7,DEFAULT)
		//0x0912		decoder_mbintra124
0xE0847021,	//0x0912		VoC_lw16i_short(REG4,0x8,IN_PARALLEL)	|	VoC_lw16i_short(REG1,0x1,DEFAULT)
0x2006E1E0,	//0x0914		VoC_lw16d_set_inc(REG2,0xccc,0x1)(lo)	|	VoC_movreg16(REG0,RL7_HI,DEFAULT)
0x20070CCC,	//0x0916		VoC_lw16d_set_inc(REG3,0xccd,0x1)(lo)	|	VoC_lw16d_set_inc(REG2,0xccc,0x1)(hi)
0x42A50CCD,	//0x0918		VoC_sub16_rr(REG5,REG2,REG4,DEFAULT)	|	VoC_lw16d_set_inc(REG3,0xccd,0x1)(hi)
0x1406C2E4,	//0x091a		VoC_lw16_d(REG6,0xcc7)(lo)	|	VoC_sub16_rr(REG4,REG3,REG4,IN_PARALLEL)
0x35810CC7,	//0x091c		VoC_bne16_rr(decoder_mbintra125,REG0,REG1)(lo)	|	VoC_lw16_d(REG6,0xcc7)(hi)
0xD8370925,	//0x091e		VoC_lw16_p(REG7,REG3,DEFAULT)	|	VoC_bne16_rr(decoder_mbintra125,REG0,REG1)(hi)
0xDC57D82B,	//0x0920		VoC_sw16_p(REG7,REG5,DEFAULT)	|	VoC_lw16_p(ACC1_HI,REG2,DEFAULT)
0xDC26DC3B,	//0x0922		VoC_sw16_p(REG6,REG2,DEFAULT)	|	VoC_sw16_p(ACC1_HI,REG3,DEFAULT)
0xF061E5D0,	//0x0924		VoC_lw16i_short(REG1,0x3,DEFAULT)	|	VoC_jump(decoder_mbintra127)
		//0x0925		decoder_mbintra125
0x09303581,	//0x0926		VoC_bne16_rr(decoder_mbintra126,REG0,REG1)
0xD84AD837,	//0x0928		VoC_lw16_p(ACC1_LO,REG4,DEFAULT)	|	VoC_lw16_p(REG7,REG3,DEFAULT)
0xDC57D82B,	//0x092a		VoC_sw16_p(REG7,REG5,DEFAULT)	|	VoC_lw16_p(ACC1_HI,REG2,DEFAULT)
0xDC2ADC36,	//0x092c		VoC_sw16_p(ACC1_LO,REG2,DEFAULT)	|	VoC_sw16_p(REG6,REG3,DEFAULT)
0xE5C5DC4B,	//0x092e		VoC_jump(decoder_mbintra127)	|	VoC_sw16_p(ACC1_HI,REG4,DEFAULT)
		//0x0930		decoder_mbintra126
0xDC36D837,	//0x0930		VoC_sw16_p(REG6,REG3,DEFAULT)	|	VoC_lw16_p(REG7,REG3,DEFAULT)
0xFFC05C57,	//0x0932		VoC_NAD(IN_PARALLEL)	|	VoC_sw16_p(REG7,REG5,DEFAULT)
		//0x0934		decoder_mbintra127
0x0CAD1404,	//0x0934		VoC_lw16_d(REG4,0xcad)
0xF6866085,	//0x0936		VoC_movreg16(REG6,REG4,IN_PARALLEL)	|	VoC_movreg16(REG5,REG4,DEFAULT)
0x00011606,	//0x0938		VoC_and16_ri(REG6,0x1)
0xE01761E0,	//0x093a		VoC_lw16i_short(REG7,0x1,IN_PARALLEL)	|	VoC_movreg16(REG0,RL7_HI,DEFAULT)
0x0CF01806,	//0x093c		VoC_lw16i_set_inc(REG2,0xcf0,0x1)
0x0E701807,	//0x093e		VoC_lw16i_set_inc(REG3,0xe70,0x1)
0xC33C6001,	//0x0940		VoC_sub16_rr(REG4,REG4,REG7,IN_PARALLEL)	|	VoC_movreg16(REG1,REG0,DEFAULT)
0x78FDC134,	//0x0942		VoC_shr16_ri(REG5,0xffffffff,DEFAULT)	|	VoC_add16_rr(REG4,REG4,REG6,DEFAULT)
0xC08AF8D1,	//0x0944		VoC_add16_rr(REG2,REG2,REG1,DEFAULT)	|	VoC_shr16_ri(REG1,0xfffffffa,IN_PARALLEL)
0xD8A6C0CB,	//0x0946		VoC_lw16inc_p(REG6,REG2,DEFAULT)	|	VoC_add16_rr(REG3,REG3,REG1,DEFAULT)
0x0CC60836,	//0x0948		VoC_mult16_rd(REG6,REG6,0xcc6)
0x07FF0A87,	//0x094a		VoC_lw16i(REG7,0x7ff)
0xDEBE5FC3,	//0x094c		VoC_clip16_rr(REG6,REG7,IN_PARALLEL)	|	VoC_push16(REG3,DEFAULT)
0xDCB6FFC0,	//0x094e		VoC_sw16inc_p(REG6,REG3,DEFAULT)	|	VoC_NOP
0xD8A6EFF1,	//0x0950		VoC_lw16inc_p(REG6,REG2,DEFAULT)	|	VoC_loop_i_short(0x3f,DEFAULT)
0x095631C6,	//0x0952		VoC_bnez16_r(decoder_mbintra128,REG6)
0xE5CCDCB6,	//0x0954		VoC_jump(decoder_mbintra129)	|	VoC_sw16inc_p(REG6,REG3,DEFAULT)
		//0x0956		decoder_mbintra128
0xFFC0C5AE,	//0x0956		VoC_NOP	|	VoC_mult16_rr(REG6,REG6,REG5,DEFAULT)
0x095C3106,	//0x0958		VoC_bgtz16_r(decoder_mbintra1291,REG6)
0xC3A6C3A6,	//0x095a		VoC_sub16_rr(REG6,REG6,REG4,DEFAULT)	|	VoC_sub16_rr(REG6,REG6,REG4,DEFAULT)
		//0x095c		decoder_mbintra1291
0x5F40C1A6,	//0x095c		VoC_push32(REG01,DEFAULT)	|	VoC_add16_rr(REG6,REG6,REG4,DEFAULT)
0xDF00DEBE,	//0x095e		VoC_pop32(REG01,DEFAULT)	|	VoC_clip16_rr(REG6,REG7,IN_PARALLEL)
0xFFC0DCB6,	//0x0960		VoC_NOP	|	VoC_sw16inc_p(REG6,REG3,DEFAULT)
		//0x0961		decoder_mbintra129
		//0x0961		VoC_endloop0
0x20091401,	//0x0962		VoC_lw16_d(REG1,0x2009)
0x09843181,	//0x0964		VoC_bez16_r(CS_decoder_mb_decode_idct8X8,REG1)
0xF3FF5F81,	//0x0966		VoC_lw16i_short(INC3,0xffffffff,IN_PARALLEL)	|	VoC_pop16(REG1,DEFAULT)
0xDFC1DF46,	//0x0968		VoC_push16(REG1,DEFAULT)	|	VoC_push32(RL6,DEFAULT)
0x0712D812,	//0x096a		VoC_add16_rd(REG2,REG2,0x5e28)(lo)	|	VoC_lw16_p(REG2,REG1,DEFAULT)
0xFFC05E28,	//0x096c		VoC_NOP	|	VoC_add16_rd(REG2,REG2,0x5e28)(hi)
0xFFC05C12,	//0x096e		VoC_NAD(IN_PARALLEL)	|	VoC_sw16_p(REG2,REG1,DEFAULT)
0x09742C09,	//0x0970		VoC_loop_i(0x1,0x4)
0x04C52B80,	//0x0972		VoC_jal(CII_mpeg4X4_idct_row)
		//0x0974		VoC_endloop1
0xDF81FFC0,	//0x0974		VoC_pop16(REG1,DEFAULT)	|	VoC_NAD
0xFFC07111,	//0x0976		VoC_NAD(IN_PARALLEL)	|	VoC_lw16i_short(INC1,0x8,DEFAULT)
0x097C2C09,	//0x0978		VoC_loop_i(0x1,0x4)
0x05452B80,	//0x097a		VoC_jal(CII_mpeg4X4_idct_col)
		//0x097c		VoC_endloop1
0xDF06FFC0,	//0x097c		VoC_pop32(RL6,DEFAULT)	|	VoC_NAD
0xE0175F00,	//0x097e		VoC_lw16i_short(REG7,0x1,IN_PARALLEL)	|	VoC_pop32(REG01,DEFAULT)
0x2B00C038,	//0x0980		VoC_jump_lg(decoder_mbintra100)(lo)	|	VoC_add16_rr(REG0,REG0,REG7,DEFAULT)
0xFFC006EC,	//0x0982		VoC_NAD	|	VoC_jump_lg(decoder_mbintra100)(hi)
		//0x0984		CS_decoder_mb_decode_idct8X8
0xF3FF5F81,	//0x0984		VoC_lw16i_short(INC3,0xffffffff,IN_PARALLEL)	|	VoC_pop16(REG1,DEFAULT)
0xDFC1DF46,	//0x0986		VoC_push16(REG1,DEFAULT)	|	VoC_push32(RL6,DEFAULT)
0x098C2C11,	//0x0988		VoC_loop_i(0x1,0x8)
0x03A22B80,	//0x098a		VoC_jal(CII_mpeg4_idctrow)
		//0x098c		VoC_endloop1
0xDF81FFC0,	//0x098c		VoC_pop16(REG1,DEFAULT)	|	VoC_NAD
0xFFC07111,	//0x098e		VoC_NAD(IN_PARALLEL)	|	VoC_lw16i_short(INC1,0x8,DEFAULT)
0x09942C11,	//0x0990		VoC_loop_i(0x1,0x8)
0x04292B80,	//0x0992		VoC_jal(CII_mpeg4_idctcol)
		//0x0994		VoC_endloop1
0xDF06FFC0,	//0x0994		VoC_pop32(RL6,DEFAULT)	|	VoC_NAD
0xE0175F00,	//0x0996		VoC_lw16i_short(REG7,0x1,IN_PARALLEL)	|	VoC_pop32(REG01,DEFAULT)
0x2B00C038,	//0x0998		VoC_jump_lg(decoder_mbintra100)(lo)	|	VoC_add16_rr(REG0,REG0,REG7,DEFAULT)
0xFFC006EC,	//0x099a		VoC_NAD	|	VoC_jump_lg(decoder_mbintra100)(hi)
		//0x099c		decoder_mbintra101
0x20091401,	//0x099c		VoC_lw16_d(REG1,0x2009)
0x09F23181,	//0x099e		VoC_bez16_r(CS_decoder_mb_decode1011,REG1)
0x00FF0A84,	//0x09a0		VoC_lw16i(REG4,0xff)
0x0CF01804,	//0x09a2		VoC_lw16i_set_inc(REG0,0xcf0,0x1)
0x0E701809,	//0x09a4		VoC_lw16i_set_inc(REG1,0xe70,0x2)
0x09B82C08,	//0x09a6		VoC_loop_i(0x0,0x4)
0x09B72C09,	//0x09a8		VoC_loop_i(0x1,0x4)
0x59CBD9C9,	//0x09aa		VoC_lw32inc_p(REG67,REG1,DEFAULT)	|	VoC_lw32inc_p(REG23,REG1,DEFAULT)
0x0709DEE3,	//0x09ac		VoC_add16_rd(REG1,REG1,0x5e6a)(lo)	|	VoC_clipu16_rr(REG3,REG4,IN_PARALLEL)
0x79C35E6A,	//0x09ae		VoC_shru16_ri(REG3,0xfffffff8,DEFAULT)	|	VoC_add16_rd(REG1,REG1,0x5e6a)(hi)
0x645ADEE2,	//0x09b0		VoC_or16_rr(REG2,REG3,DEFAULT)	|	VoC_clipu16_rr(REG2,REG4,IN_PARALLEL)
0x79C7DEE7,	//0x09b2		VoC_shru16_ri(REG7,0xfffffff8,DEFAULT)	|	VoC_clipu16_rr(REG7,REG4,IN_PARALLEL)
0xE47EDEE6,	//0x09b4		VoC_or16_rr(REG6,REG7,DEFAULT)	|	VoC_clipu16_rr(REG6,REG4,IN_PARALLEL)
0xDC86DC82,	//0x09b6		VoC_sw16inc_p(REG6,REG0,DEFAULT)	|	VoC_sw16inc_p(REG2,REG0,DEFAULT)
		//0x09b7		VoC_endloop1
		//0x09b8		VoC_endloop0
0x5E600709,	//0x09b8		VoC_add16_rd(REG1,REG1,0x5e60)
0xDF40FFC0,	//0x09ba		VoC_push32(REG01,DEFAULT)	|	VoC_NOP
0x026B2B80,	//0x09bc		VoC_jal(Coolsand_MPEG4YDmaCmdSend)
0x0A84DF00,	//0x09be		VoC_lw16i(REG4,0xff)(lo)	|	VoC_pop32(REG01,DEFAULT)
0x2C0900FF,	//0x09c0		VoC_loop_i(0x1,0x4)(lo)	|	VoC_lw16i(REG4,0xff)(hi)
0xD9C909D0,	//0x09c2		VoC_lw32inc_p(REG23,REG1,DEFAULT)	|	VoC_loop_i(0x1,0x4)(hi)
0xDEE359CB,	//0x09c4		VoC_clipu16_rr(REG3,REG4,IN_PARALLEL)	|	VoC_lw32inc_p(REG67,REG1,DEFAULT)
0x5E6A0709,	//0x09c6		VoC_add16_rd(REG1,REG1,0x5e6a)
0xDEE279C3,	//0x09c8		VoC_clipu16_rr(REG2,REG4,IN_PARALLEL)	|	VoC_shru16_ri(REG3,0xfffffff8,DEFAULT)
0xDEE7645A,	//0x09ca		VoC_clipu16_rr(REG7,REG4,IN_PARALLEL)	|	VoC_or16_rr(REG2,REG3,DEFAULT)
0xDEE679C7,	//0x09cc		VoC_clipu16_rr(REG6,REG4,IN_PARALLEL)	|	VoC_shru16_ri(REG7,0xfffffff8,DEFAULT)
0xDC82E47E,	//0x09ce		VoC_sw16inc_p(REG2,REG0,DEFAULT)	|	VoC_or16_rr(REG6,REG7,DEFAULT)
		//0x09d0		VoC_endloop1
0x0709DC86,	//0x09d0		VoC_add16_rd(REG1,REG1,0x5e60)(lo)	|	VoC_sw16inc_p(REG6,REG0,DEFAULT)
0x2B805E60,	//0x09d2		VoC_jal(Coolsand_MPEG4WaiteLastDma)(lo)	|	VoC_add16_rd(REG1,REG1,0x5e60)(hi)
0xDF40030C,	//0x09d4		VoC_push32(REG01,DEFAULT)	|	VoC_jal(Coolsand_MPEG4WaiteLastDma)(hi)
0x02BE2B80,	//0x09d6		VoC_jal(Coolsand_MPEG4UDmaCmdSend)
0x0A84DF00,	//0x09d8		VoC_lw16i(REG4,0xff)(lo)	|	VoC_pop32(REG01,DEFAULT)
0x2C0900FF,	//0x09da		VoC_loop_i(0x1,0x4)(lo)	|	VoC_lw16i(REG4,0xff)(hi)
0xD9C909EA,	//0x09dc		VoC_lw32inc_p(REG23,REG1,DEFAULT)	|	VoC_loop_i(0x1,0x4)(hi)
0xDEE359CB,	//0x09de		VoC_clipu16_rr(REG3,REG4,IN_PARALLEL)	|	VoC_lw32inc_p(REG67,REG1,DEFAULT)
0x5E6A0709,	//0x09e0		VoC_add16_rd(REG1,REG1,0x5e6a)
0xDEE279C3,	//0x09e2		VoC_clipu16_rr(REG2,REG4,IN_PARALLEL)	|	VoC_shru16_ri(REG3,0xfffffff8,DEFAULT)
0xDEE7645A,	//0x09e4		VoC_clipu16_rr(REG7,REG4,IN_PARALLEL)	|	VoC_or16_rr(REG2,REG3,DEFAULT)
0xDEE679C7,	//0x09e6		VoC_clipu16_rr(REG6,REG4,IN_PARALLEL)	|	VoC_shru16_ri(REG7,0xfffffff8,DEFAULT)
0xDC82E47E,	//0x09e8		VoC_sw16inc_p(REG2,REG0,DEFAULT)	|	VoC_or16_rr(REG6,REG7,DEFAULT)
		//0x09ea		VoC_endloop1
0xFFC05C86,	//0x09ea		VoC_NAD(IN_PARALLEL)	|	VoC_sw16inc_p(REG6,REG0,DEFAULT)
0x030C2B80,	//0x09ec		VoC_jal(Coolsand_MPEG4WaiteLastDma)
0x02E52B80,	//0x09ee		VoC_jal(Coolsand_MPEG4VDmaCmdSend)
0xFFC065D6,	//0x09f0		VoC_NAD(IN_PARALLEL)	|	VoC_jump(CS_decoder_mb_decode1013)
		//0x09f2		CS_decoder_mb_decode1011
0x00FF0A84,	//0x09f2		VoC_lw16i(REG4,0xff)
0x0CF01804,	//0x09f4		VoC_lw16i_set_inc(REG0,0xcf0,0x1)
0x0E701809,	//0x09f6		VoC_lw16i_set_inc(REG1,0xe70,0x2)
0x0A052CC0,	//0x09f8		VoC_loop_i(0x0,0x60)
0x59CBD9C9,	//0x09fa		VoC_lw32inc_p(REG67,REG1,DEFAULT)	|	VoC_lw32inc_p(REG23,REG1,DEFAULT)
0x79C3DEE3,	//0x09fc		VoC_shru16_ri(REG3,0xfffffff8,DEFAULT)	|	VoC_clipu16_rr(REG3,REG4,IN_PARALLEL)
0x645ADEE2,	//0x09fe		VoC_or16_rr(REG2,REG3,DEFAULT)	|	VoC_clipu16_rr(REG2,REG4,IN_PARALLEL)
0x79C7DEE7,	//0x0a00		VoC_shru16_ri(REG7,0xfffffff8,DEFAULT)	|	VoC_clipu16_rr(REG7,REG4,IN_PARALLEL)
0xE47EDEE6,	//0x0a02		VoC_or16_rr(REG6,REG7,DEFAULT)	|	VoC_clipu16_rr(REG6,REG4,IN_PARALLEL)
0xDC86DC82,	//0x0a04		VoC_sw16inc_p(REG6,REG0,DEFAULT)	|	VoC_sw16inc_p(REG2,REG0,DEFAULT)
		//0x0a05		VoC_endloop0
		//0x0a06		CS_decoder_mb_decode1013
0xFFC0DFA9,	//0x0a06		VoC_NOP	|	VoC_pop16(RA,DEFAULT)
0xDF41E580,	//0x0a08		VoC_push32(REG23,DEFAULT)	|	VoC_return
		//0x0a09		CS_get_pmv2_part
0xCAB14AA0,	//0x0a0a		VoC_sub32_rr(REG23,REG45,RL6,IN_PARALLEL)	|	VoC_sub32_rr(REG01,REG45,ACC0,DEFAULT)
0x0A293300,	//0x0a0c		VoC_bez32_r(CS_get_pmv2_0_11,REG01)
0x0A293301,	//0x0a0e		VoC_bez32_r(CS_get_pmv2_0_11,REG23)
0xFAF97AF8,	//0x0a10		VoC_shr32_ri(REG23,0x1f,IN_PARALLEL)	|	VoC_shr32_ri(REG01,0x1f,DEFAULT)
0x1600CA08,	//0x0a12		VoC_and16_ri(REG0,0x1)(lo)	|	VoC_sub32_rr(REG01,REG01,REG23,DEFAULT)
0x31800001,	//0x0a14		VoC_bez16_r(CS_get_pmv2_0_05,REG0)(lo)	|	VoC_and16_ri(REG0,0x1)(hi)
0xFF140A1A,	//0x0a16		VoC_movreg32(ACC0,REG45,DEFAULT)	|	VoC_bez16_r(CS_get_pmv2_0_05,REG0)(hi)
0xFFC065D4,	//0x0a18		VoC_NAD(IN_PARALLEL)	|	VoC_jump(CS_get_pmv2_0_13)
		//0x0a1a		CS_get_pmv2_0_05
0xCB914BA0,	//0x0a1a		VoC_sub32_rr(REG23,RL6,REG45,IN_PARALLEL)	|	VoC_sub32_rr(REG01,RL6,ACC0,DEFAULT)
0x0A2B3300,	//0x0a1c		VoC_bez32_r(CS_get_pmv2_0_12,REG01)
0x0A2B3301,	//0x0a1e		VoC_bez32_r(CS_get_pmv2_0_12,REG23)
0xFAF97AF8,	//0x0a20		VoC_shr32_ri(REG23,0x1f,IN_PARALLEL)	|	VoC_shr32_ri(REG01,0x1f,DEFAULT)
0x1600CA08,	//0x0a22		VoC_and16_ri(REG0,0x1)(lo)	|	VoC_sub32_rr(REG01,REG01,REG23,DEFAULT)
0x31800001,	//0x0a24		VoC_bez16_r(CS_get_pmv2_0_13,REG0)(lo)	|	VoC_and16_ri(REG0,0x1)(hi)
0xFF340A2C,	//0x0a26		VoC_movreg32(ACC0,RL6,DEFAULT)	|	VoC_bez16_r(CS_get_pmv2_0_13,REG0)(hi)
0xFF14E5C4,	//0x0a28		VoC_movreg32(ACC0,REG45,DEFAULT)	|	VoC_jump(CS_get_pmv2_0_13)
		//0x0a29		CS_get_pmv2_0_11
0xFF34E5C2,	//0x0a2a		VoC_movreg32(ACC0,RL6,DEFAULT)	|	VoC_jump(CS_get_pmv2_0_13)
		//0x0a2b		CS_get_pmv2_0_12
		//0x0a2c		CS_get_pmv2_0_13
0xCAF94AE8,	//0x0a2c		VoC_sub32_rr(REG23,REG67,RL7,IN_PARALLEL)	|	VoC_sub32_rr(REG01,REG67,ACC1,DEFAULT)
0x0A4B3300,	//0x0a2e		VoC_bez32_r(CS_get_pmv2_0_21,REG01)
0x0A4B3301,	//0x0a30		VoC_bez32_r(CS_get_pmv2_0_21,REG23)
0xFAF97AF8,	//0x0a32		VoC_shr32_ri(REG23,0x1f,IN_PARALLEL)	|	VoC_shr32_ri(REG01,0x1f,DEFAULT)
0x1600CA08,	//0x0a34		VoC_and16_ri(REG0,0x1)(lo)	|	VoC_sub32_rr(REG01,REG01,REG23,DEFAULT)
0x31800001,	//0x0a36		VoC_bez16_r(CS_get_pmv2_0_07,REG0)(lo)	|	VoC_and16_ri(REG0,0x1)(hi)
0xFF1D0A3C,	//0x0a38		VoC_movreg32(ACC1,REG67,DEFAULT)	|	VoC_bez16_r(CS_get_pmv2_0_07,REG0)(hi)
0xFFC065D4,	//0x0a3a		VoC_NAD(IN_PARALLEL)	|	VoC_jump(CS_get_pmv2_0_23)
		//0x0a3c		CS_get_pmv2_0_07
0xCBD94BE8,	//0x0a3c		VoC_sub32_rr(REG23,RL7,REG67,IN_PARALLEL)	|	VoC_sub32_rr(REG01,RL7,ACC1,DEFAULT)
0x0A4D3300,	//0x0a3e		VoC_bez32_r(CS_get_pmv2_0_22,REG01)
0x0A4D3301,	//0x0a40		VoC_bez32_r(CS_get_pmv2_0_22,REG23)
0xFAF97AF8,	//0x0a42		VoC_shr32_ri(REG23,0x1f,IN_PARALLEL)	|	VoC_shr32_ri(REG01,0x1f,DEFAULT)
0x1600CA08,	//0x0a44		VoC_and16_ri(REG0,0x1)(lo)	|	VoC_sub32_rr(REG01,REG01,REG23,DEFAULT)
0x31800001,	//0x0a46		VoC_bez16_r(CS_get_pmv2_0_23,REG0)(lo)	|	VoC_and16_ri(REG0,0x1)(hi)
0xFF3D0A4E,	//0x0a48		VoC_movreg32(ACC1,RL7,DEFAULT)	|	VoC_bez16_r(CS_get_pmv2_0_23,REG0)(hi)
0xFF1DE5C4,	//0x0a4a		VoC_movreg32(ACC1,REG67,DEFAULT)	|	VoC_jump(CS_get_pmv2_0_23)
		//0x0a4b		CS_get_pmv2_0_21
0xFF3DE5C2,	//0x0a4c		VoC_movreg32(ACC1,RL7,DEFAULT)	|	VoC_jump(CS_get_pmv2_0_23)
		//0x0a4d		CS_get_pmv2_0_22
		//0x0a4e		CS_get_pmv2_0_23
0xE580DF01,	//0x0a4e		VoC_return	|	VoC_pop32(REG23,DEFAULT)
		//0x0a50		CS_get_pmv2_0
0x0ACFDFE9,	//0x0a50		VoC_lw16i(RL7_HI,0x8000)(lo)	|	VoC_push16(RA,DEFAULT)
0xF00E0000,	//0x0a52		VoC_lw16i_short(RL7_LO,0x0,DEFAULT)	|	VoC_lw16i(RL7_HI,0x8000)(hi)
0x00001807,	//0x0a54		VoC_lw16i_set_inc(REG3,0x0,0x1)
0xE0845F46,	//0x0a56		VoC_lw16i_short(REG4,0x8,IN_PARALLEL)	|	VoC_push32(RL6,DEFAULT)
0x0FFC1808,	//0x0a58		VoC_lw16i_set_inc(REG0,0xffc,0x2)
0x0CD01587,	//0x0a5a		VoC_sw32_d(RL7,0xcd0)
0xF00959C7,	//0x0a5c		VoC_lw16i_short(INC1,0x2,IN_PARALLEL)	|	VoC_lw32inc_p(RL7,REG0,DEFAULT)
0xFF457F44,	//0x0a5e		VoC_lw32z(ACC1,IN_PARALLEL)	|	VoC_lw32z(ACC0,DEFAULT)
0x0CD05837,	//0x0a60		VoC_be32_rd(CS_get_pmv2_0_01,RL7,0xcd0)
0xD9857F3C,	//0x0a62		VoC_lw32_p(ACC1,REG0,IN_PARALLEL)	|	VoC_movreg32(ACC0,RL7,DEFAULT)
0xFFC05E18,	//0x0a64		VoC_NAD(IN_PARALLEL)	|	VoC_inc_p(REG3,DEFAULT)
		//0x0a66		CS_get_pmv2_0_01
0x0CCE1480,	//0x0a66		VoC_lw32_d(REG01,0xcce)
0xC061C020,	//0x0a68		VoC_add16_rr(REG1,REG1,REG4,DEFAULT)	|	VoC_add16_rr(REG0,REG0,REG4,DEFAULT)
0xFF477F46,	//0x0a6a		VoC_lw32z(RL7,IN_PARALLEL)	|	VoC_lw32z(RL6,DEFAULT)
0x582AD9C2,	//0x0a6c		VoC_be32_rd(CS_get_pmv2_0_02,REG45,0xcd0)(lo)	|	VoC_lw32inc_p(REG45,REG0,DEFAULT)
0x7F160CD0,	//0x0a6e		VoC_movreg32(RL6,REG45,DEFAULT)	|	VoC_be32_rd(CS_get_pmv2_0_02,REG45,0xcd0)(hi)
0xDE18D987,	//0x0a70		VoC_inc_p(REG3,DEFAULT)	|	VoC_lw32_p(RL7,REG0,IN_PARALLEL)
		//0x0a72		CS_get_pmv2_0_02
0xFF435F46,	//0x0a72		VoC_lw32z(REG67,IN_PARALLEL)	|	VoC_push32(RL6,DEFAULT)
0xD9CA7F46,	//0x0a74		VoC_lw32inc_p(REG45,REG1,IN_PARALLEL)	|	VoC_lw32z(RL6,DEFAULT)
0x0CD05832,	//0x0a76		VoC_be32_rd(CS_get_pmv2_0_03,REG45,0xcd0)
0xD98B7F16,	//0x0a78		VoC_lw32_p(REG67,REG1,IN_PARALLEL)	|	VoC_movreg32(RL6,REG45,DEFAULT)
0xFFC05E18,	//0x0a7a		VoC_NAD(IN_PARALLEL)	|	VoC_inc_p(REG3,DEFAULT)
		//0x0a7c		CS_get_pmv2_0_03
0xDF067F32,	//0x0a7c		VoC_pop32(RL6,IN_PARALLEL)	|	VoC_movreg32(REG45,RL6,DEFAULT)
0x3418F020,	//0x0a7e		VoC_bgt16_rr(CS_get_pmv2_0_04,REG3,REG0)(lo)	|	VoC_lw16i_short(REG0,0x1,DEFAULT)
0x49340A86,	//0x0a80		VoC_add32_rr(ACC0,ACC0,RL6,DEFAULT)	|	VoC_bgt16_rr(CS_get_pmv2_0_04,REG3,REG0)(hi)
0x4914C97D,	//0x0a82		VoC_add32_rr(ACC0,ACC0,REG45,DEFAULT)	|	VoC_add32_rr(ACC1,ACC1,RL7,IN_PARALLEL)
0xE5C4C95D,	//0x0a84		VoC_jump(CS_get_pmv2_0_END)	|	VoC_add32_rr(ACC1,ACC1,REG67,IN_PARALLEL)
		//0x0a86		CS_get_pmv2_0_04
0x2B80FFC0,	//0x0a86		VoC_jal(CS_get_pmv2_part)(lo)	|	VoC_NOP
0xDFA90A09,	//0x0a88		VoC_pop16(RA,DEFAULT)	|	VoC_jal(CS_get_pmv2_part)(hi)
		//0x0a89		CS_get_pmv2_0_END
0xE580DF06,	//0x0a8a		VoC_return	|	VoC_pop32(RL6,DEFAULT)
		//0x0a8c		CS_get_pmv2_1
0x0ACFDFE9,	//0x0a8c		VoC_lw16i(RL7_HI,0x8000)(lo)	|	VoC_push16(RA,DEFAULT)
0xF00E0000,	//0x0a8e		VoC_lw16i_short(RL7_LO,0x0,DEFAULT)	|	VoC_lw16i(RL7_HI,0x8000)(hi)
0x00011807,	//0x0a90		VoC_lw16i_set_inc(REG3,0x1,0x1)
0xE0845F46,	//0x0a92		VoC_lw16i_short(REG4,0x8,IN_PARALLEL)	|	VoC_push32(RL6,DEFAULT)
0x0FF81808,	//0x0a94		VoC_lw16i_set_inc(REG0,0xff8,0x2)
0x0CD01587,	//0x0a96		VoC_sw32_d(RL7,0xcd0)
0xE0C559C4,	//0x0a98		VoC_lw16i_short(REG5,0xc,IN_PARALLEL)	|	VoC_lw32inc_p(ACC0,REG0,DEFAULT)
0xF0095985,	//0x0a9a		VoC_lw16i_short(INC1,0x2,IN_PARALLEL)	|	VoC_lw32_p(ACC1,REG0,DEFAULT)
0x0CCE1480,	//0x0a9c		VoC_lw32_d(REG01,0xcce)
0xC0614028,	//0x0a9e		VoC_add16_rr(REG1,REG1,REG4,IN_PARALLEL)	|	VoC_add16_rr(REG0,REG0,REG5,DEFAULT)
0xFF477F46,	//0x0aa0		VoC_lw32z(RL7,IN_PARALLEL)	|	VoC_lw32z(RL6,DEFAULT)
0x582AD9C2,	//0x0aa2		VoC_be32_rd(CS_get_pmv2_1_02,REG45,0xcd0)(lo)	|	VoC_lw32inc_p(REG45,REG0,DEFAULT)
0x7F160CD0,	//0x0aa4		VoC_movreg32(RL6,REG45,DEFAULT)	|	VoC_be32_rd(CS_get_pmv2_1_02,REG45,0xcd0)(hi)
0xDE18D987,	//0x0aa6		VoC_inc_p(REG3,DEFAULT)	|	VoC_lw32_p(RL7,REG0,IN_PARALLEL)
		//0x0aa8		CS_get_pmv2_1_02
0xFF435F46,	//0x0aa8		VoC_lw32z(REG67,IN_PARALLEL)	|	VoC_push32(RL6,DEFAULT)
0xD9CA7F46,	//0x0aaa		VoC_lw32inc_p(REG45,REG1,IN_PARALLEL)	|	VoC_lw32z(RL6,DEFAULT)
0x0CD05832,	//0x0aac		VoC_be32_rd(CS_get_pmv2_1_03,REG45,0xcd0)
0xD98B7F16,	//0x0aae		VoC_lw32_p(REG67,REG1,IN_PARALLEL)	|	VoC_movreg32(RL6,REG45,DEFAULT)
0xFFC05E18,	//0x0ab0		VoC_NAD(IN_PARALLEL)	|	VoC_inc_p(REG3,DEFAULT)
		//0x0ab2		CS_get_pmv2_1_03
0xDF067F32,	//0x0ab2		VoC_pop32(RL6,IN_PARALLEL)	|	VoC_movreg32(REG45,RL6,DEFAULT)
0x3418F020,	//0x0ab4		VoC_bgt16_rr(CS_get_pmv2_1_04,REG3,REG0)(lo)	|	VoC_lw16i_short(REG0,0x1,DEFAULT)
0x49340ABC,	//0x0ab6		VoC_add32_rr(ACC0,ACC0,RL6,DEFAULT)	|	VoC_bgt16_rr(CS_get_pmv2_1_04,REG3,REG0)(hi)
0x4914C97D,	//0x0ab8		VoC_add32_rr(ACC0,ACC0,REG45,DEFAULT)	|	VoC_add32_rr(ACC1,ACC1,RL7,IN_PARALLEL)
0xE5C4C95D,	//0x0aba		VoC_jump(CS_get_pmv2_1_END)	|	VoC_add32_rr(ACC1,ACC1,REG67,IN_PARALLEL)
		//0x0abc		CS_get_pmv2_1_04
0x2B80FFC0,	//0x0abc		VoC_jal(CS_get_pmv2_part)(lo)	|	VoC_NOP
0xDFA90A09,	//0x0abe		VoC_pop16(RA,DEFAULT)	|	VoC_jal(CS_get_pmv2_part)(hi)
		//0x0abf		CS_get_pmv2_1_END
0xE580DF06,	//0x0ac0		VoC_return	|	VoC_pop32(RL6,DEFAULT)
		//0x0ac2		CS_get_pmv2_2
0x0ACFDFE9,	//0x0ac2		VoC_lw16i(RL7_HI,0x8000)(lo)	|	VoC_push16(RA,DEFAULT)
0xF00E0000,	//0x0ac4		VoC_lw16i_short(RL7_LO,0x0,DEFAULT)	|	VoC_lw16i(RL7_HI,0x8000)(hi)
0x1808DF46,	//0x0ac6		VoC_lw16i_set_inc(REG0,0x1004,0x2)(lo)	|	VoC_push32(RL6,DEFAULT)
0x15871004,	//0x0ac8		VoC_sw32_d(RL7,0xcd0)(lo)	|	VoC_lw16i_set_inc(REG0,0x1004,0x2)(hi)
0x59C70CD0,	//0x0aca		VoC_lw32inc_p(RL7,REG0,DEFAULT)	|	VoC_sw32_d(RL7,0xcd0)(hi)
0x7F44F009,	//0x0acc		VoC_lw32z(ACC0,DEFAULT)	|	VoC_lw16i_short(INC1,0x2,IN_PARALLEL)
0x582FFF45,	//0x0ace		VoC_be32_rd(CS_get_pmv2_2_01,RL7,0xcd0)(lo)	|	VoC_lw32z(ACC1,IN_PARALLEL)
0x7F3C0CD0,	//0x0ad0		VoC_movreg32(ACC0,RL7,DEFAULT)	|	VoC_be32_rd(CS_get_pmv2_2_01,RL7,0xcd0)(hi)
0xDE18D985,	//0x0ad2		VoC_inc_p(REG3,DEFAULT)	|	VoC_lw32_p(ACC1,REG0,IN_PARALLEL)
		//0x0ad4		CS_get_pmv2_2_01
0x0FF81808,	//0x0ad4		VoC_lw16i_set_inc(REG0,0xff8,0x2)
0xD9C6FFC0,	//0x0ad6		VoC_lw32inc_p(RL6,REG0,DEFAULT)	|	VoC_NOP
0xD9C2D9C7,	//0x0ad8		VoC_lw32inc_p(REG45,REG0,DEFAULT)	|	VoC_lw32inc_p(RL7,REG0,DEFAULT)
0x2B80D983,	//0x0ada		VoC_jal(CS_get_pmv2_part)(lo)	|	VoC_lw32_p(REG67,REG0,DEFAULT)
0xDFA90A09,	//0x0adc		VoC_pop16(RA,DEFAULT)	|	VoC_jal(CS_get_pmv2_part)(hi)
0xE580DF06,	//0x0ade		VoC_return	|	VoC_pop32(RL6,DEFAULT)
		//0x0ae0		CS_get_pmv2_3
0x1808DFE9,	//0x0ae0		VoC_lw16i_set_inc(REG0,0xff8,0x2)(lo)	|	VoC_push16(RA,DEFAULT)
0xDF460FF8,	//0x0ae2		VoC_push32(RL6,DEFAULT)	|	VoC_lw16i_set_inc(REG0,0xff8,0x2)(hi)
0xD9C7D9C6,	//0x0ae4		VoC_lw32inc_p(RL7,REG0,DEFAULT)	|	VoC_lw32inc_p(RL6,REG0,DEFAULT)
0xD9C3D9C2,	//0x0ae6		VoC_lw32inc_p(REG67,REG0,DEFAULT)	|	VoC_lw32inc_p(REG45,REG0,DEFAULT)
0xD985D9C4,	//0x0ae8		VoC_lw32_p(ACC1,REG0,DEFAULT)	|	VoC_lw32inc_p(ACC0,REG0,DEFAULT)
0x0A092B80,	//0x0aea		VoC_jal(CS_get_pmv2_part)
0xDF06DFA9,	//0x0aec		VoC_pop32(RL6,DEFAULT)	|	VoC_pop16(RA,DEFAULT)
0xE2F3E580,	//0x0aee		VoC_rb_i(REG7,0xc,DEFAULT)	|	VoC_return
		//0x0aef		CS_dec_mv_part
0xE02660E0,	//0x0af0		VoC_lw16i_short(REG6,0x2,IN_PARALLEL)	|	VoC_movreg16(REG0,REG7,DEFAULT)
0x02000A87,	//0x0af2		VoC_lw16i(REG7,0x200)
0x0B003438,	//0x0af4		VoC_bgt16_rr(CS_dec_mv_part03,REG7,REG0)
0xC230F840,	//0x0af6		VoC_sub16_rr(REG0,REG0,REG6,DEFAULT)	|	VoC_shr16_ri(REG0,0x8,DEFAULT)
0x0A84F8F8,	//0x0af8		VoC_lw16i(REG4,0x62ba)(lo)	|	VoC_shr16_ri(REG0,0xffffffff,DEFAULT)
0xC10462BA,	//0x0afa		VoC_add16_rr(REG4,REG4,REG0,DEFAULT)	|	VoC_lw16i(REG4,0x62ba)(hi)
0xD9A2FFC0,	//0x0afc		VoC_lw32_p(REG45,REG4,DEFAULT)	|	VoC_NOP
0xE5D8E329,	//0x0afe		VoC_jump(CS_dec_mv_part05)	|	VoC_rbinc_r(REG5,REG5,DEFAULT)
		//0x0b00		CS_dec_mv_part03
0x3438F817,	//0x0b00		VoC_bgt16_rr(CS_dec_mv_part04,REG7,REG0)(lo)	|	VoC_shr16_ri(REG7,0x2,DEFAULT)
0x78100B0E,	//0x0b02		VoC_shr16_ri(REG0,0x2,DEFAULT)	|	VoC_bgt16_rr(CS_dec_mv_part04,REG7,REG0)(hi)
0xC238F817,	//0x0b04		VoC_sub16_rr(REG0,REG0,REG7,DEFAULT)	|	VoC_shr16_ri(REG7,0x2,IN_PARALLEL)
0x0A84F8F8,	//0x0b06		VoC_lw16i(REG4,0x62d6)(lo)	|	VoC_shr16_ri(REG0,0xffffffff,DEFAULT)
0xC10462D6,	//0x0b08		VoC_add16_rr(REG4,REG4,REG0,DEFAULT)	|	VoC_lw16i(REG4,0x62d6)(hi)
0xD9A2FFC0,	//0x0b0a		VoC_lw32_p(REG45,REG4,DEFAULT)	|	VoC_NOP
0xE5CAE329,	//0x0b0c		VoC_jump(CS_dec_mv_part05)	|	VoC_rbinc_r(REG5,REG5,DEFAULT)
		//0x0b0e		CS_dec_mv_part04
0xC238F087,	//0x0b0e		VoC_sub16_rr(REG0,REG0,REG7,DEFAULT)	|	VoC_lw16i_short(REG7,0x4,DEFAULT)
0x0A84F8F8,	//0x0b10		VoC_lw16i(REG4,0x6396)(lo)	|	VoC_shr16_ri(REG0,0xffffffff,DEFAULT)
0xC1046396,	//0x0b12		VoC_add16_rr(REG4,REG4,REG0,DEFAULT)	|	VoC_lw16i(REG4,0x6396)(hi)
0xD9A2FFC0,	//0x0b14		VoC_lw32_p(REG45,REG4,DEFAULT)	|	VoC_NOP
0xE242E329,	//0x0b16		VoC_lbinc_p(REG2)	|	VoC_rbinc_r(REG5,REG5,DEFAULT)
		//0x0b17		CS_dec_mv_part05
0x0FF01480,	//0x0b18		VoC_lw32_d(REG01,0xff0)
0xE0176301,	//0x0b1a		VoC_lw16i_short(REG7,0x1,IN_PARALLEL)	|	VoC_rbinc_r(REG5,REG0,DEFAULT)
0x0B233104,	//0x0b1c		VoC_bgtz16_r(CS_dec_mv_part06,REG4)
0xC50CC13C,	//0x0b1e		VoC_mult16_rr(REG4,REG4,REG1,DEFAULT)	|	VoC_add16_rr(REG4,REG4,REG7,DEFAULT)
0xC32CC17D,	//0x0b20		VoC_sub16_rr(REG4,REG4,REG5,DEFAULT)	|	VoC_add16_rr(REG5,REG5,REG7,DEFAULT)
0xC33CE5C5,	//0x0b22		VoC_sub16_rr(REG4,REG4,REG7,DEFAULT)	|	VoC_jump(CS_dec_mv_part07)
		//0x0b23		CS_dec_mv_part06
0xC17DC50C,	//0x0b24		VoC_add16_rr(REG5,REG5,REG7,DEFAULT)	|	VoC_mult16_rr(REG4,REG4,REG1,DEFAULT)
0xFFC0C12C,	//0x0b26		VoC_NOP	|	VoC_add16_rr(REG4,REG4,REG5,DEFAULT)
		//0x0b27		CS_dec_mv_part07
0xFFC06580,	//0x0b28		VoC_NAD(IN_PARALLEL)	|	VoC_return
		//0x0b2a		CS_dec_mv
0xF4565FE9,	//0x0b2a		VoC_lw16i_short(WRAP2,0xa,IN_PARALLEL)	|	VoC_push16(RA,DEFAULT)
0x0CBA1404,	//0x0b2c		VoC_lw16_d(REG4,0xcba)
0xE0157027,	//0x0b2e		VoC_lw16i_short(REG5,0x1,IN_PARALLEL)	|	VoC_lw16i_short(REG7,0x1,DEFAULT)
0xE0064338,	//0x0b30		VoC_lw16i_short(REG6,0x0,IN_PARALLEL)	|	VoC_sub16_rr(REG0,REG4,REG7,DEFAULT)
0xFE0FC381,	//0x0b32		VoC_shr16_rr(REG7,REG1,DEFAULT)	|	VoC_sub16_rr(REG1,REG6,REG0,DEFAULT)
0xF6E178DF,	//0x0b34		VoC_movreg16(REG1,REG7,IN_PARALLEL)	|	VoC_shr16_ri(REG7,0xfffffffb,DEFAULT)
0xF6E343BE,	//0x0b36		VoC_movreg16(REG3,REG7,IN_PARALLEL)	|	VoC_sub16_rr(REG6,REG6,REG7,DEFAULT)
0x0FF01580,	//0x0b38		VoC_sw32_d(REG01,0xff0)
0xC3EF78FB,	//0x0b3a		VoC_sub16_rr(REG7,REG7,REG5,IN_PARALLEL)	|	VoC_shr16_ri(REG3,0xffffffff,DEFAULT)
0xDF43E242,	//0x0b3c		VoC_push32(REG67,DEFAULT)	|	VoC_lbinc_p(REG2)
0x0B52350D,	//0x0b3e		VoC_be16_rr(CS_dec_mv01,REG1,REG5)
0x6080E284,	//0x0b40		VoC_movreg16(REG0,REG4,DEFAULT)	|	VoC_rbinc_i(REG4,0x1,DEFAULT)
0x31C0E004,	//0x0b42		VoC_bnez16_r(CS_dec_mv02,REG0)(lo)	|	VoC_lw16i_short(REG4,0x0,IN_PARALLEL)
0x2B800B47,	//0x0b44		VoC_jal(CS_dec_mv_part)(lo)	|	VoC_bnez16_r(CS_dec_mv02,REG0)(hi)
0xE08E0AEF,	//0x0b46		VoC_movreg16(RL7_LO,REG4,DEFAULT)	|	VoC_jal(CS_dec_mv_part)(hi)
		//0x0b47		CS_dec_mv02
0xE284E242,	//0x0b48		VoC_rbinc_i(REG4,0x1,DEFAULT)	|	VoC_lbinc_p(REG2)
0xE0046080,	//0x0b4a		VoC_lw16i_short(REG4,0x0,IN_PARALLEL)	|	VoC_movreg16(REG0,REG4,DEFAULT)
0x0B5031C0,	//0x0b4c		VoC_bnez16_r(CS_dec_mv03,REG0)
0x0AEF2B80,	//0x0b4e		VoC_jal(CS_dec_mv_part)
		//0x0b50		CS_dec_mv03
0xE5D3E08F,	//0x0b50		VoC_jump(CS_dec_mvend)	|	VoC_movreg16(RL7_HI,REG4,DEFAULT)
		//0x0b52		CS_dec_mv01
0x6080E284,	//0x0b52		VoC_movreg16(REG0,REG4,DEFAULT)	|	VoC_rbinc_i(REG4,0x1,DEFAULT)
0x31C0E004,	//0x0b54		VoC_bnez16_r(CS_dec_mv12,REG0)(lo)	|	VoC_lw16i_short(REG4,0x0,IN_PARALLEL)
0x2B800B59,	//0x0b56		VoC_jal(CS_dec_mv_part)(lo)	|	VoC_bnez16_r(CS_dec_mv12,REG0)(hi)
0xE08E0AEF,	//0x0b58		VoC_movreg16(RL7_LO,REG4,DEFAULT)	|	VoC_jal(CS_dec_mv_part)(hi)
		//0x0b59		CS_dec_mv12
0xE284E242,	//0x0b5a		VoC_rbinc_i(REG4,0x1,DEFAULT)	|	VoC_lbinc_p(REG2)
0xE0046080,	//0x0b5c		VoC_lw16i_short(REG4,0x0,IN_PARALLEL)	|	VoC_movreg16(REG0,REG4,DEFAULT)
0x0B6231C0,	//0x0b5e		VoC_bnez16_r(CS_dec_mv13,REG0)
0x0AEF2B80,	//0x0b60		VoC_jal(CS_dec_mv_part)
		//0x0b62		CS_dec_mv13
0xFFC0608F,	//0x0b62		VoC_NAD(IN_PARALLEL)	|	VoC_movreg16(RL7_HI,REG4,DEFAULT)
		//0x0b64		CS_dec_mvend
0xF7067F3A,	//0x0b64		VoC_movreg16(REG6,ACC0_LO,IN_PARALLEL)	|	VoC_movreg32(REG45,RL7,DEFAULT)
0xC1346147,	//0x0b66		VoC_add16_rr(REG4,REG4,REG6,IN_PARALLEL)	|	VoC_movreg16(REG7,ACC1_LO,DEFAULT)
0xDF00417D,	//0x0b68		VoC_pop32(REG01,IN_PARALLEL)	|	VoC_add16_rr(REG5,REG5,REG7,DEFAULT)
0xC3474306,	//0x0b6a		VoC_sub16_rr(REG7,REG5,REG0,IN_PARALLEL)	|	VoC_sub16_rr(REG6,REG4,REG0,DEFAULT)
0xF87F787E,	//0x0b6c		VoC_shr16_ri(REG7,0xf,IN_PARALLEL)	|	VoC_shr16_ri(REG6,0xf,DEFAULT)
0xE41FE41E,	//0x0b6e		VoC_and16_rr(REG7,REG3,DEFAULT)	|	VoC_and16_rr(REG6,REG3,DEFAULT)
0xC17D4134,	//0x0b70		VoC_add16_rr(REG5,REG5,REG7,IN_PARALLEL)	|	VoC_add16_rr(REG4,REG4,REG6,DEFAULT)
0xC26F4266,	//0x0b72		VoC_sub16_rr(REG7,REG1,REG5,IN_PARALLEL)	|	VoC_sub16_rr(REG6,REG1,REG4,DEFAULT)
0xF87F787E,	//0x0b74		VoC_shr16_ri(REG7,0xf,IN_PARALLEL)	|	VoC_shr16_ri(REG6,0xf,DEFAULT)
0xE41FE41E,	//0x0b76		VoC_and16_rr(REG7,REG3,DEFAULT)	|	VoC_and16_rr(REG6,REG3,DEFAULT)
0xF4065FA9,	//0x0b78		VoC_lw16i_short(WRAP2,0x0,IN_PARALLEL)	|	VoC_pop16(RA,DEFAULT)
0xC37D4334,	//0x0b7a		VoC_sub16_rr(REG5,REG5,REG7,IN_PARALLEL)	|	VoC_sub16_rr(REG4,REG4,REG6,DEFAULT)
0xDFE9E580,	//0x0b7c		VoC_push16(RA,DEFAULT)	|	VoC_return
		//0x0b7d		CS_put_h264_chroma_mc8_8_c
0x5E6B1400,	//0x0b7e		VoC_lw16_d(REG0,0x5e6b)
0xC23A4231,	//0x0b80		VoC_sub16_rr(REG2,REG0,REG7,IN_PARALLEL)	|	VoC_sub16_rr(REG1,REG0,REG6,DEFAULT)
0xC5BD447C,	//0x0b82		VoC_mult16_rr(REG5,REG6,REG7,IN_PARALLEL)	|	VoC_mult16_rr(REG4,REG1,REG7,DEFAULT)
0xC48A4593,	//0x0b84		VoC_mult16_rr(REG2,REG2,REG1,IN_PARALLEL)	|	VoC_mult16_rr(REG3,REG6,REG2,DEFAULT)
0x18DE1805,	//0x0b86		VoC_lw16i_set_inc(REG1,0x18de,0x1)
0xF7406166,	//0x0b88		VoC_movreg16(REG0,ACC1_LO,IN_PARALLEL)	|	VoC_movreg16(REG6,ACC1_HI,DEFAULT)
0x3105C071,	//0x0b8a		VoC_bgtz16_r(CS_dec_mb_inter1v_lowres_1_D_1,REG5)(lo)	|	VoC_add16_rr(REG1,REG1,REG6,DEFAULT)
0xC0E30C26,	//0x0b8c		VoC_add16_rr(REG3,REG3,REG4,DEFAULT)	|	VoC_bgtz16_r(CS_dec_mb_inter1v_lowres_1_D_1,REG5)(hi)
0x0BD43104,	//0x0b8e		VoC_bgtz16_r(CS_dec_mb_inter1v_lowres_1_C_1,REG4)
0x00000A86,	//0x0b90		VoC_lw16i(REG6,0x0)
0x0BCF2C10,	//0x0b92		VoC_loop_i(0x0,0x8)
0x0BCC2C05,	//0x0b94		VoC_loop_i(0x1,0x2)
0x5895D894,	//0x0b96		VoC_lw16inc_p(REG5,REG1,DEFAULT)	|	VoC_lw16inc_p(REG4,REG1,DEFAULT)
0xC4EFC4A4,	//0x0b98		VoC_mult16_rr(REG7,REG3,REG5,DEFAULT)	|	VoC_mult16_rr(REG4,REG2,REG4,IN_PARALLEL)
0x5E600724,	//0x0b9a		VoC_add16_rd(REG4,REG4,0x5e60)
0xF834C13C,	//0x0b9c		VoC_shr16_ri(REG4,0x6,DEFAULT)	|	VoC_add16_rr(REG4,REG4,REG7,DEFAULT)
0x5E6E2804,	//0x0b9e		VoC_and16_rd(REG4,0x5e6e)
0x5894E088,	//0x0ba0		VoC_lw16inc_p(REG4,REG1,DEFAULT)	|	VoC_movreg16(ACC0_LO,REG4,DEFAULT)
0xC4E7C4AD,	//0x0ba2		VoC_mult16_rr(REG7,REG3,REG4,DEFAULT)	|	VoC_mult16_rr(REG5,REG2,REG5,IN_PARALLEL)
0x5E60072D,	//0x0ba4		VoC_add16_rd(REG5,REG5,0x5e60)
0xF9F5C17D,	//0x0ba6		VoC_shru16_ri(REG5,0xfffffffe,DEFAULT)	|	VoC_add16_rr(REG5,REG5,REG7,DEFAULT)
0x5E6F2805,	//0x0ba8		VoC_and16_rd(REG5,0x5e6f)
0xE46FE107,	//0x0baa		VoC_or16_rr(REG7,REG5,DEFAULT)	|	VoC_movreg16(REG7,ACC0_LO,DEFAULT)
0x5C87D895,	//0x0bac		VoC_sw16inc_p(REG7,REG0,DEFAULT)	|	VoC_lw16inc_p(REG5,REG1,DEFAULT)
0xC4EFC4A4,	//0x0bae		VoC_mult16_rr(REG7,REG3,REG5,DEFAULT)	|	VoC_mult16_rr(REG4,REG2,REG4,IN_PARALLEL)
0x5E600724,	//0x0bb0		VoC_add16_rd(REG4,REG4,0x5e60)
0xF934C13C,	//0x0bb2		VoC_shru16_ri(REG4,0x6,DEFAULT)	|	VoC_add16_rr(REG4,REG4,REG7,DEFAULT)
0x5E6E2804,	//0x0bb4		VoC_and16_rd(REG4,0x5e6e)
0x5814E088,	//0x0bb6		VoC_lw16_p(REG4,REG1,DEFAULT)	|	VoC_movreg16(ACC0_LO,REG4,DEFAULT)
0xC4E4C4AD,	//0x0bb8		VoC_mult16_rr(REG4,REG3,REG4,DEFAULT)	|	VoC_mult16_rr(REG5,REG2,REG5,IN_PARALLEL)
0x5E60072D,	//0x0bba		VoC_add16_rd(REG5,REG5,0x5e60)
0xF9F5C165,	//0x0bbc		VoC_shru16_ri(REG5,0xfffffffe,DEFAULT)	|	VoC_add16_rr(REG5,REG5,REG4,DEFAULT)
0x5E6F2805,	//0x0bbe		VoC_and16_rd(REG5,0x5e6f)
0xE46FE107,	//0x0bc0		VoC_or16_rr(REG7,REG5,DEFAULT)	|	VoC_movreg16(REG7,ACC0_LO,DEFAULT)
0x5E680736,	//0x0bc2		VoC_add16_rd(REG6,REG6,0x5e68)
0x442EDC87,	//0x0bc4		VoC_bne16_rd(CS_dec_mb_inter1v_lowres_8_to_4_0,REG6,0x5e6b)(lo)	|	VoC_sw16inc_p(REG7,REG0,DEFAULT)
0x07005E6B,	//0x0bc6		VoC_add16_rd(REG0,REG0,0x5e6b)(lo)	|	VoC_bne16_rd(CS_dec_mb_inter1v_lowres_8_to_4_0,REG6,0x5e6b)(hi)
0xFFC05E6B,	//0x0bc8		VoC_NAD	|	VoC_add16_rd(REG0,REG0,0x5e6b)(hi)
		//0x0bca		CS_dec_mb_inter1v_lowres_8_to_4_0
0x00060A85,	//0x0bca		VoC_lw16i(REG5,0x6)
		//0x0bcc		VoC_endloop1
0x0709C028,	//0x0bcc		VoC_add16_rd(REG1,REG1,0x5e6a)(lo)	|	VoC_add16_rr(REG0,REG0,REG5,DEFAULT)
0x07805E6A,	//0x0bce		VoC_sub16_rd(REG0,REG0,0x5e6d)(lo)	|	VoC_add16_rd(REG1,REG1,0x5e6a)(hi)
		//0x0bcf		VoC_endloop0
0x2B005E6D,	//0x0bd0		VoC_jump_lg(CS_put_h264_chroma_mc8_8_c_end)(lo)	|	VoC_sub16_rd(REG0,REG0,0x5e6d)(hi)
0xFFC00C9A,	//0x0bd2		VoC_NAD	|	VoC_jump_lg(CS_put_h264_chroma_mc8_8_c_end)(hi)
		//0x0bd4		CS_dec_mb_inter1v_lowres_1_C_1
0x00000A86,	//0x0bd4		VoC_lw16i(REG6,0x0)
0x0C212C10,	//0x0bd6		VoC_loop_i(0x0,0x8)
0x0C1E2C05,	//0x0bd8		VoC_loop_i(0x1,0x2)
0xD896DFC6,	//0x0bda		VoC_lw16inc_p(REG6,REG1,DEFAULT)	|	VoC_push16(REG6,DEFAULT)
0xD89AD899,	//0x0bdc		VoC_lw16inc_p(ACC1_LO,REG1,DEFAULT)	|	VoC_lw16inc_p(ACC0_HI,REG1,DEFAULT)
0x0709D89B,	//0x0bde		VoC_add16_rd(REG1,REG1,0x5e6b)(lo)	|	VoC_lw16inc_p(ACC1_HI,REG1,DEFAULT)
0xFFC05E6B,	//0x0be0		VoC_NOP	|	VoC_add16_rd(REG1,REG1,0x5e6b)(hi)
0xD89DD897,	//0x0be2		VoC_lw16inc_p(RL6_HI,REG1,DEFAULT)	|	VoC_lw16inc_p(REG7,REG1,DEFAULT)
0xD89FD89E,	//0x0be4		VoC_lw16inc_p(RL7_HI,REG1,DEFAULT)	|	VoC_lw16inc_p(RL7_LO,REG1,DEFAULT)
0x5E6B0789,	//0x0be6		VoC_sub16_rd(REG1,REG1,0x5e6b)
0x5E6A0789,	//0x0be8		VoC_sub16_rd(REG1,REG1,0x5e6a)
0xC4FCC4B6,	//0x0bea		VoC_mult16_rr(REG4,REG3,REG7,DEFAULT)	|	VoC_mult16_rr(REG6,REG2,REG6,DEFAULT)
0x5E600736,	//0x0bec		VoC_add16_rd(REG6,REG6,0x5e60)
0xF934C134,	//0x0bee		VoC_shru16_ri(REG4,0x6,DEFAULT)	|	VoC_add16_rr(REG4,REG4,REG6,DEFAULT)
0x5E6E2804,	//0x0bf0		VoC_and16_rd(REG4,0x5e6e)
0xF7A76126,	//0x0bf2		VoC_movreg16(REG7,RL6_HI,IN_PARALLEL)	|	VoC_movreg16(REG6,ACC0_HI,DEFAULT)
0xC4FDC4B6,	//0x0bf4		VoC_mult16_rr(REG5,REG3,REG7,DEFAULT)	|	VoC_mult16_rr(REG6,REG2,REG6,DEFAULT)
0x5E600736,	//0x0bf6		VoC_add16_rd(REG6,REG6,0x5e60)
0xF9F5C175,	//0x0bf8		VoC_shru16_ri(REG5,0xfffffffe,DEFAULT)	|	VoC_add16_rr(REG5,REG5,REG6,DEFAULT)
0x5E6F2805,	//0x0bfa		VoC_and16_rd(REG5,0x5e6f)
0x6146E46C,	//0x0bfc		VoC_movreg16(REG6,ACC1_LO,DEFAULT)	|	VoC_or16_rr(REG4,REG5,DEFAULT)
0x5C84F7C7,	//0x0bfe		VoC_sw16inc_p(REG4,REG0,DEFAULT)	|	VoC_movreg16(REG7,RL7_LO,IN_PARALLEL)
0xC4FCC4B6,	//0x0c00		VoC_mult16_rr(REG4,REG3,REG7,DEFAULT)	|	VoC_mult16_rr(REG6,REG2,REG6,IN_PARALLEL)
0x5E600736,	//0x0c02		VoC_add16_rd(REG6,REG6,0x5e60)
0xF934C134,	//0x0c04		VoC_shru16_ri(REG4,0x6,DEFAULT)	|	VoC_add16_rr(REG4,REG4,REG6,DEFAULT)
0x5E6E2804,	//0x0c06		VoC_and16_rd(REG4,0x5e6e)
0xF7E76166,	//0x0c08		VoC_movreg16(REG7,RL7_HI,IN_PARALLEL)	|	VoC_movreg16(REG6,ACC1_HI,DEFAULT)
0xC4FDC4B6,	//0x0c0a		VoC_mult16_rr(REG5,REG3,REG7,DEFAULT)	|	VoC_mult16_rr(REG6,REG2,REG6,DEFAULT)
0x5E600736,	//0x0c0c		VoC_add16_rd(REG6,REG6,0x5e60)
0xF9F5C175,	//0x0c0e		VoC_shru16_ri(REG5,0xfffffffe,DEFAULT)	|	VoC_add16_rr(REG5,REG5,REG6,DEFAULT)
0x5E6F2805,	//0x0c10		VoC_and16_rd(REG5,0x5e6f)
0xDF86E46C,	//0x0c12		VoC_pop16(REG6,DEFAULT)	|	VoC_or16_rr(REG4,REG5,DEFAULT)
0x5E680736,	//0x0c14		VoC_add16_rd(REG6,REG6,0x5e68)
0x442EDC84,	//0x0c16		VoC_bne16_rd(CS_dec_mb_inter1v_lowres_8_to_4_1,REG6,0x5e6b)(lo)	|	VoC_sw16inc_p(REG4,REG0,DEFAULT)
0x07005E6B,	//0x0c18		VoC_add16_rd(REG0,REG0,0x5e6b)(lo)	|	VoC_bne16_rd(CS_dec_mb_inter1v_lowres_8_to_4_1,REG6,0x5e6b)(hi)
0xFFC05E6B,	//0x0c1a		VoC_NAD	|	VoC_add16_rd(REG0,REG0,0x5e6b)(hi)
		//0x0c1c		CS_dec_mb_inter1v_lowres_8_to_4_1
0x00060A85,	//0x0c1c		VoC_lw16i(REG5,0x6)
		//0x0c1e		VoC_endloop1
0x0709C028,	//0x0c1e		VoC_add16_rd(REG1,REG1,0x5e6a)(lo)	|	VoC_add16_rr(REG0,REG0,REG5,DEFAULT)
0x07805E6A,	//0x0c20		VoC_sub16_rd(REG0,REG0,0x5e6d)(lo)	|	VoC_add16_rd(REG1,REG1,0x5e6a)(hi)
		//0x0c21		VoC_endloop0
0x2B005E6D,	//0x0c22		VoC_jump_lg(CS_put_h264_chroma_mc8_8_c_end)(lo)	|	VoC_sub16_rd(REG0,REG0,0x5e6d)(hi)
0xFFC00C9A,	//0x0c24		VoC_NAD	|	VoC_jump_lg(CS_put_h264_chroma_mc8_8_c_end)(hi)
		//0x0c26		CS_dec_mb_inter1v_lowres_1_D_1
0x00000A86,	//0x0c26		VoC_lw16i(REG6,0x0)
0x0C982C10,	//0x0c28		VoC_loop_i(0x0,0x8)
0x0C942C05,	//0x0c2a		VoC_loop_i(0x1,0x2)
0xD898DFC6,	//0x0c2c		VoC_lw16inc_p(ACC0_LO,REG1,DEFAULT)	|	VoC_push16(REG6,DEFAULT)
0xD89AD899,	//0x0c2e		VoC_lw16inc_p(ACC1_LO,REG1,DEFAULT)	|	VoC_lw16inc_p(ACC0_HI,REG1,DEFAULT)
0xD816D89B,	//0x0c30		VoC_lw16_p(REG6,REG1,DEFAULT)	|	VoC_lw16inc_p(ACC1_HI,REG1,DEFAULT)
0x5E6B0709,	//0x0c32		VoC_add16_rd(REG1,REG1,0x5e6b)
0xD89CFFC0,	//0x0c34		VoC_lw16inc_p(RL6_LO,REG1,DEFAULT)	|	VoC_NOP
0xD89ED89D,	//0x0c36		VoC_lw16inc_p(RL7_LO,REG1,DEFAULT)	|	VoC_lw16inc_p(RL6_HI,REG1,DEFAULT)
0xD817D89F,	//0x0c38		VoC_lw16_p(REG7,REG1,DEFAULT)	|	VoC_lw16inc_p(RL7_HI,REG1,DEFAULT)
0xDFC7DFC1,	//0x0c3a		VoC_push16(REG7,DEFAULT)	|	VoC_push16(REG1,DEFAULT)
0x6127DFC6,	//0x0c3c		VoC_movreg16(REG7,ACC0_HI,DEFAULT)	|	VoC_push16(REG6,DEFAULT)
0x44B6F706,	//0x0c3e		VoC_mult16_rr(REG6,REG2,REG6,DEFAULT)	|	VoC_movreg16(REG6,ACC0_LO,IN_PARALLEL)
0xFFC0C4FF,	//0x0c40		VoC_NOP	|	VoC_mult16_rr(REG7,REG3,REG7,IN_PARALLEL)
0xF78641B9,	//0x0c42		VoC_movreg16(REG6,RL6_LO,IN_PARALLEL)	|	VoC_add16_rr(REG1,REG6,REG7,DEFAULT)
0xC53661A7,	//0x0c44		VoC_mult16_rr(REG6,REG4,REG6,IN_PARALLEL)	|	VoC_movreg16(REG7,RL6_HI,DEFAULT)
0x0736C57F,	//0x0c46		VoC_add16_rd(REG6,REG6,0x5e60)(lo)	|	VoC_mult16_rr(REG7,REG5,REG7,DEFAULT)
0xC1BE5E60,	//0x0c48		VoC_add16_rr(REG6,REG6,REG7,DEFAULT)	|	VoC_add16_rd(REG6,REG6,0x5e60)(hi)
0xF936C18E,	//0x0c4a		VoC_shru16_ri(REG6,0x6,DEFAULT)	|	VoC_add16_rr(REG6,REG6,REG1,DEFAULT)
0x5E6E2806,	//0x0c4c		VoC_and16_rd(REG6,0x5e6e)
0xF72660C8,	//0x0c4e		VoC_movreg16(REG6,ACC0_HI,IN_PARALLEL)	|	VoC_movreg16(ACC0_LO,REG6,DEFAULT)
0xC4B66147,	//0x0c50		VoC_mult16_rr(REG6,REG2,REG6,IN_PARALLEL)	|	VoC_movreg16(REG7,ACC1_LO,DEFAULT)
0xFFC0C4FF,	//0x0c52		VoC_NOP	|	VoC_mult16_rr(REG7,REG3,REG7,DEFAULT)
0xF7A641B9,	//0x0c54		VoC_movreg16(REG6,RL6_HI,IN_PARALLEL)	|	VoC_add16_rr(REG1,REG6,REG7,DEFAULT)
0xC53661C7,	//0x0c56		VoC_mult16_rr(REG6,REG4,REG6,IN_PARALLEL)	|	VoC_movreg16(REG7,RL7_LO,DEFAULT)
0x0736C57F,	//0x0c58		VoC_add16_rd(REG6,REG6,0x5e60)(lo)	|	VoC_mult16_rr(REG7,REG5,REG7,DEFAULT)
0xC1F65E60,	//0x0c5a		VoC_add16_rr(REG6,REG7,REG6,DEFAULT)	|	VoC_add16_rd(REG6,REG6,0x5e60)(hi)
0xF9F7C18F,	//0x0c5c		VoC_shru16_ri(REG7,0xfffffffe,DEFAULT)	|	VoC_add16_rr(REG7,REG6,REG1,DEFAULT)
0x5E6F2807,	//0x0c5e		VoC_and16_rd(REG7,0x5e6f)
0xE47EE106,	//0x0c60		VoC_or16_rr(REG6,REG7,DEFAULT)	|	VoC_movreg16(REG6,ACC0_LO,DEFAULT)
0x5C86E167,	//0x0c62		VoC_sw16inc_p(REG6,REG0,DEFAULT)	|	VoC_movreg16(REG7,ACC1_HI,DEFAULT)
0x44B6F746,	//0x0c64		VoC_mult16_rr(REG6,REG2,REG6,DEFAULT)	|	VoC_movreg16(REG6,ACC1_LO,IN_PARALLEL)
0xFFC0C4FF,	//0x0c66		VoC_NOP	|	VoC_mult16_rr(REG7,REG3,REG7,IN_PARALLEL)
0x61C6C1B9,	//0x0c68		VoC_movreg16(REG6,RL7_LO,DEFAULT)	|	VoC_add16_rr(REG1,REG6,REG7,DEFAULT)
0xC536F7E7,	//0x0c6a		VoC_mult16_rr(REG6,REG4,REG6,DEFAULT)	|	VoC_movreg16(REG7,RL7_HI,IN_PARALLEL)
0x0736C57F,	//0x0c6c		VoC_add16_rd(REG6,REG6,0x5e60)(lo)	|	VoC_mult16_rr(REG7,REG5,REG7,DEFAULT)
0xC18E5E60,	//0x0c6e		VoC_add16_rr(REG6,REG6,REG1,DEFAULT)	|	VoC_add16_rd(REG6,REG6,0x5e60)(hi)
0xF936C1BE,	//0x0c70		VoC_shru16_ri(REG6,0x6,DEFAULT)	|	VoC_add16_rr(REG6,REG6,REG7,DEFAULT)
0x5E6E2806,	//0x0c72		VoC_and16_rd(REG6,0x5e6e)
0xF76760C8,	//0x0c74		VoC_movreg16(REG7,ACC1_HI,IN_PARALLEL)	|	VoC_movreg16(ACC0_LO,REG6,DEFAULT)
0x44BFDF86,	//0x0c76		VoC_mult16_rr(REG7,REG2,REG7,DEFAULT)	|	VoC_pop16(REG6,DEFAULT)
0xFFC0C4F6,	//0x0c78		VoC_NOP	|	VoC_mult16_rr(REG6,REG3,REG6,IN_PARALLEL)
0xF7E641B9,	//0x0c7a		VoC_movreg16(REG6,RL7_HI,IN_PARALLEL)	|	VoC_add16_rr(REG1,REG6,REG7,DEFAULT)
0xC536DF87,	//0x0c7c		VoC_mult16_rr(REG6,REG4,REG6,DEFAULT)	|	VoC_pop16(REG7,DEFAULT)
0x0736C57F,	//0x0c7e		VoC_add16_rd(REG6,REG6,0x5e60)(lo)	|	VoC_mult16_rr(REG7,REG5,REG7,DEFAULT)
0xC1F65E60,	//0x0c80		VoC_add16_rr(REG6,REG7,REG6,DEFAULT)	|	VoC_add16_rd(REG6,REG6,0x5e60)(hi)
0xF9F7C18F,	//0x0c82		VoC_shru16_ri(REG7,0xfffffffe,DEFAULT)	|	VoC_add16_rr(REG7,REG6,REG1,DEFAULT)
0x5E6F2807,	//0x0c84		VoC_and16_rd(REG7,0x5e6f)
0xDF816106,	//0x0c86		VoC_pop16(REG1,IN_PARALLEL)	|	VoC_movreg16(REG6,ACC0_LO,DEFAULT)
0x0A87E47E,	//0x0c88		VoC_lw16i(REG7,0xc)(lo)	|	VoC_or16_rr(REG6,REG7,DEFAULT)
0x4279000C,	//0x0c8a		VoC_sub16_rr(REG1,REG1,REG7,DEFAULT)	|	VoC_lw16i(REG7,0xc)(hi)
0xDF86DC86,	//0x0c8c		VoC_pop16(REG6,DEFAULT)	|	VoC_sw16inc_p(REG6,REG0,IN_PARALLEL)
0x5E680736,	//0x0c8e		VoC_add16_rd(REG6,REG6,0x5e68)
0x5E6B4426,	//0x0c90		VoC_bne16_rd(CS_dec_mb_inter1v_lowres_8_to_4_2,REG6,0x5e6b)
0x5E6B0700,	//0x0c92		VoC_add16_rd(REG0,REG0,0x5e6b)
		//0x0c94		CS_dec_mb_inter1v_lowres_8_to_4_2
		//0x0c94		VoC_endloop1
0x5E6C0700,	//0x0c94		VoC_add16_rd(REG0,REG0,0x5e6c)
0x5E6A0709,	//0x0c96		VoC_add16_rd(REG1,REG1,0x5e6a)
		//0x0c98		VoC_endloop0
0x5E6D0780,	//0x0c98		VoC_sub16_rd(REG0,REG0,0x5e6d)
		//0x0c9a		CS_put_h264_chroma_mc8_8_c_end
0xFFC0DFA9,	//0x0c9a		VoC_NOP	|	VoC_pop16(RA,DEFAULT)
0xDFE9E580,	//0x0c9c		VoC_push16(RA,DEFAULT)	|	VoC_return
		//0x0c9d		CS_put_h264_chroma_mc4_8_c
0x5E6B1400,	//0x0c9e		VoC_lw16_d(REG0,0x5e6b)
0xC23A4231,	//0x0ca0		VoC_sub16_rr(REG2,REG0,REG7,IN_PARALLEL)	|	VoC_sub16_rr(REG1,REG0,REG6,DEFAULT)
0xC5BD447C,	//0x0ca2		VoC_mult16_rr(REG5,REG6,REG7,IN_PARALLEL)	|	VoC_mult16_rr(REG4,REG1,REG7,DEFAULT)
0xC48A4593,	//0x0ca4		VoC_mult16_rr(REG2,REG2,REG1,IN_PARALLEL)	|	VoC_mult16_rr(REG3,REG6,REG2,DEFAULT)
0xF7406166,	//0x0ca6		VoC_movreg16(REG0,ACC1_LO,IN_PARALLEL)	|	VoC_movreg16(REG6,ACC1_HI,DEFAULT)
0xC18EE101,	//0x0ca8		VoC_add16_rr(REG6,REG6,REG1,DEFAULT)	|	VoC_movreg16(REG1,ACC0_LO,DEFAULT)
0x19A61805,	//0x0caa		VoC_lw16i_set_inc(REG1,0x19a6,0x1)
0x3105C071,	//0x0cac		VoC_bgtz16_r(CS_dec_mb_inter4v_lowres_1_D_1,REG5)(lo)	|	VoC_add16_rr(REG1,REG1,REG6,DEFAULT)
0xC0E30D1E,	//0x0cae		VoC_add16_rr(REG3,REG3,REG4,DEFAULT)	|	VoC_bgtz16_r(CS_dec_mb_inter4v_lowres_1_D_1,REG5)(hi)
0x0CE23104,	//0x0cb0		VoC_bgtz16_r(CS_dec_mb_inter4v_lowres_1_C_1,REG4)
0x0CDE2C08,	//0x0cb2		VoC_loop_i(0x0,0x4)
0xD897D896,	//0x0cb4		VoC_lw16inc_p(REG7,REG1,DEFAULT)	|	VoC_lw16inc_p(REG6,REG1,DEFAULT)
0xC4FCC4B6,	//0x0cb6		VoC_mult16_rr(REG4,REG3,REG7,DEFAULT)	|	VoC_mult16_rr(REG6,REG2,REG6,DEFAULT)
0x5E600736,	//0x0cb8		VoC_add16_rd(REG6,REG6,0x5e60)
0xF834C134,	//0x0cba		VoC_shr16_ri(REG4,0x6,DEFAULT)	|	VoC_add16_rr(REG4,REG4,REG6,DEFAULT)
0x5E6E2804,	//0x0cbc		VoC_and16_rd(REG4,0x5e6e)
0xC4BF5896,	//0x0cbe		VoC_mult16_rr(REG7,REG2,REG7,IN_PARALLEL)	|	VoC_lw16inc_p(REG6,REG1,DEFAULT)
0x073FC4F5,	//0x0cc0		VoC_add16_rd(REG7,REG7,0x5e60)(lo)	|	VoC_mult16_rr(REG5,REG3,REG6,DEFAULT)
0xC17D5E60,	//0x0cc2		VoC_add16_rr(REG5,REG5,REG7,DEFAULT)	|	VoC_add16_rd(REG7,REG7,0x5e60)(hi)
0x2805F9F5,	//0x0cc4		VoC_and16_rd(REG5,0x5e6f)(lo)	|	VoC_shru16_ri(REG5,0xfffffffe,DEFAULT)
0xE46C5E6F,	//0x0cc6		VoC_or16_rr(REG4,REG5,DEFAULT)	|	VoC_and16_rd(REG5,0x5e6f)(hi)
0x5C84D897,	//0x0cc8		VoC_sw16inc_p(REG4,REG0,DEFAULT)	|	VoC_lw16inc_p(REG7,REG1,DEFAULT)
0xC4FCC4B6,	//0x0cca		VoC_mult16_rr(REG4,REG3,REG7,DEFAULT)	|	VoC_mult16_rr(REG6,REG2,REG6,IN_PARALLEL)
0x5E600736,	//0x0ccc		VoC_add16_rd(REG6,REG6,0x5e60)
0xF934C134,	//0x0cce		VoC_shru16_ri(REG4,0x6,DEFAULT)	|	VoC_add16_rr(REG4,REG4,REG6,DEFAULT)
0x5E6E2804,	//0x0cd0		VoC_and16_rd(REG4,0x5e6e)
0xC4BF5816,	//0x0cd2		VoC_mult16_rr(REG7,REG2,REG7,IN_PARALLEL)	|	VoC_lw16_p(REG6,REG1,DEFAULT)
0x073FC4F5,	//0x0cd4		VoC_add16_rd(REG7,REG7,0x5e60)(lo)	|	VoC_mult16_rr(REG5,REG3,REG6,DEFAULT)
0xC17D5E60,	//0x0cd6		VoC_add16_rr(REG5,REG5,REG7,DEFAULT)	|	VoC_add16_rd(REG7,REG7,0x5e60)(hi)
0x2805F9F5,	//0x0cd8		VoC_and16_rd(REG5,0x5e6f)(lo)	|	VoC_shru16_ri(REG5,0xfffffffe,DEFAULT)
0xE46C5E6F,	//0x0cda		VoC_or16_rr(REG4,REG5,DEFAULT)	|	VoC_and16_rd(REG5,0x5e6f)(hi)
0x5E6A0709,	//0x0cdc		VoC_add16_rd(REG1,REG1,0x5e6a)
		//0x0cde		VoC_endloop0
0x2B00DC84,	//0x0cde		VoC_jump_lg(CS_put_h264_chroma_mc4_8_c_end)(lo)	|	VoC_sw16inc_p(REG4,REG0,DEFAULT)
0xFFC00D7F,	//0x0ce0		VoC_NAD	|	VoC_jump_lg(CS_put_h264_chroma_mc4_8_c_end)(hi)
		//0x0ce2		CS_dec_mb_inter4v_lowres_1_C_1
0x0D1B2C08,	//0x0ce2		VoC_loop_i(0x0,0x4)
0xD899D896,	//0x0ce4		VoC_lw16inc_p(ACC0_HI,REG1,DEFAULT)	|	VoC_lw16inc_p(REG6,REG1,DEFAULT)
0xD89BD89A,	//0x0ce6		VoC_lw16inc_p(ACC1_HI,REG1,DEFAULT)	|	VoC_lw16inc_p(ACC1_LO,REG1,DEFAULT)
0x5E6A0709,	//0x0ce8		VoC_add16_rd(REG1,REG1,0x5e6a)
0xD897FFC0,	//0x0cea		VoC_lw16inc_p(REG7,REG1,DEFAULT)	|	VoC_NOP
0xD89ED89D,	//0x0cec		VoC_lw16inc_p(RL7_LO,REG1,DEFAULT)	|	VoC_lw16inc_p(RL6_HI,REG1,DEFAULT)
0x44B6D89F,	//0x0cee		VoC_mult16_rr(REG6,REG2,REG6,DEFAULT)	|	VoC_lw16inc_p(RL7_HI,REG1,DEFAULT)
0x0789C4FC,	//0x0cf0		VoC_sub16_rd(REG1,REG1,0x5e6a)(lo)	|	VoC_mult16_rr(REG4,REG3,REG7,IN_PARALLEL)
0x07365E6A,	//0x0cf2		VoC_add16_rd(REG6,REG6,0x5e60)(lo)	|	VoC_sub16_rd(REG1,REG1,0x5e6a)(hi)
0xC1345E60,	//0x0cf4		VoC_add16_rr(REG4,REG4,REG6,DEFAULT)	|	VoC_add16_rd(REG6,REG6,0x5e60)(hi)
0x2804F934,	//0x0cf6		VoC_and16_rd(REG4,0x5e6e)(lo)	|	VoC_shru16_ri(REG4,0x6,DEFAULT)
0x61265E6E,	//0x0cf8		VoC_movreg16(REG6,ACC0_HI,DEFAULT)	|	VoC_and16_rd(REG4,0x5e6e)(hi)
0xC4B6F7A7,	//0x0cfa		VoC_mult16_rr(REG6,REG2,REG6,DEFAULT)	|	VoC_movreg16(REG7,RL6_HI,IN_PARALLEL)
0x0736C4FD,	//0x0cfc		VoC_add16_rd(REG6,REG6,0x5e60)(lo)	|	VoC_mult16_rr(REG5,REG3,REG7,DEFAULT)
0xC1755E60,	//0x0cfe		VoC_add16_rr(REG5,REG5,REG6,DEFAULT)	|	VoC_add16_rd(REG6,REG6,0x5e60)(hi)
0x2805F9F5,	//0x0d00		VoC_and16_rd(REG5,0x5e6f)(lo)	|	VoC_shru16_ri(REG5,0xfffffffe,DEFAULT)
0xE46C5E6F,	//0x0d02		VoC_or16_rr(REG4,REG5,DEFAULT)	|	VoC_and16_rd(REG5,0x5e6f)(hi)
0xF7C76146,	//0x0d04		VoC_movreg16(REG7,RL7_LO,IN_PARALLEL)	|	VoC_movreg16(REG6,ACC1_LO,DEFAULT)
0xC4B65C84,	//0x0d06		VoC_mult16_rr(REG6,REG2,REG6,IN_PARALLEL)	|	VoC_sw16inc_p(REG4,REG0,DEFAULT)
0x0736C4FC,	//0x0d08		VoC_add16_rd(REG6,REG6,0x5e60)(lo)	|	VoC_mult16_rr(REG4,REG3,REG7,DEFAULT)
0xC1345E60,	//0x0d0a		VoC_add16_rr(REG4,REG4,REG6,DEFAULT)	|	VoC_add16_rd(REG6,REG6,0x5e60)(hi)
0x2804F934,	//0x0d0c		VoC_and16_rd(REG4,0x5e6e)(lo)	|	VoC_shru16_ri(REG4,0x6,DEFAULT)
0x61665E6E,	//0x0d0e		VoC_movreg16(REG6,ACC1_HI,DEFAULT)	|	VoC_and16_rd(REG4,0x5e6e)(hi)
0xC4B6F7E7,	//0x0d10		VoC_mult16_rr(REG6,REG2,REG6,DEFAULT)	|	VoC_movreg16(REG7,RL7_HI,IN_PARALLEL)
0x0736C4FD,	//0x0d12		VoC_add16_rd(REG6,REG6,0x5e60)(lo)	|	VoC_mult16_rr(REG5,REG3,REG7,DEFAULT)
0xC1755E60,	//0x0d14		VoC_add16_rr(REG5,REG5,REG6,DEFAULT)	|	VoC_add16_rd(REG6,REG6,0x5e60)(hi)
0x2805F9F5,	//0x0d16		VoC_and16_rd(REG5,0x5e6f)(lo)	|	VoC_shru16_ri(REG5,0xfffffffe,DEFAULT)
0xE46C5E6F,	//0x0d18		VoC_or16_rr(REG4,REG5,DEFAULT)	|	VoC_and16_rd(REG5,0x5e6f)(hi)
0xDC84FFC0,	//0x0d1a		VoC_sw16inc_p(REG4,REG0,DEFAULT)	|	VoC_NOP
		//0x0d1b		VoC_endloop0
0x0D7F2B00,	//0x0d1c		VoC_jump_lg(CS_put_h264_chroma_mc4_8_c_end)
		//0x0d1e		CS_dec_mb_inter4v_lowres_1_D_1
0x0D7E2C08,	//0x0d1e		VoC_loop_i(0x0,0x4)
0xD899D898,	//0x0d20		VoC_lw16inc_p(ACC0_HI,REG1,DEFAULT)	|	VoC_lw16inc_p(ACC0_LO,REG1,DEFAULT)
0xD89BD89A,	//0x0d22		VoC_lw16inc_p(ACC1_HI,REG1,DEFAULT)	|	VoC_lw16inc_p(ACC1_LO,REG1,DEFAULT)
0x0709D816,	//0x0d24		VoC_add16_rd(REG1,REG1,0x5e6a)(lo)	|	VoC_lw16_p(REG6,REG1,DEFAULT)
0xFFC05E6A,	//0x0d26		VoC_NOP	|	VoC_add16_rd(REG1,REG1,0x5e6a)(hi)
0xD89DD89C,	//0x0d28		VoC_lw16inc_p(RL6_HI,REG1,DEFAULT)	|	VoC_lw16inc_p(RL6_LO,REG1,DEFAULT)
0xD89FD89E,	//0x0d2a		VoC_lw16inc_p(RL7_HI,REG1,DEFAULT)	|	VoC_lw16inc_p(RL7_LO,REG1,DEFAULT)
0xDFC1D817,	//0x0d2c		VoC_push16(REG1,DEFAULT)	|	VoC_lw16_p(REG7,REG1,DEFAULT)
0xDFC6DFC7,	//0x0d2e		VoC_push16(REG6,DEFAULT)	|	VoC_push16(REG7,DEFAULT)
0xF7066127,	//0x0d30		VoC_movreg16(REG6,ACC0_LO,IN_PARALLEL)	|	VoC_movreg16(REG7,ACC0_HI,DEFAULT)
0xC4FF44B6,	//0x0d32		VoC_mult16_rr(REG7,REG3,REG7,IN_PARALLEL)	|	VoC_mult16_rr(REG6,REG2,REG6,DEFAULT)
0x41B9FFC0,	//0x0d34		VoC_add16_rr(REG1,REG6,REG7,DEFAULT)	|	VoC_NOP
0x61A7F786,	//0x0d36		VoC_movreg16(REG7,RL6_HI,DEFAULT)	|	VoC_movreg16(REG6,RL6_LO,IN_PARALLEL)
0xC57FC536,	//0x0d38		VoC_mult16_rr(REG7,REG5,REG7,DEFAULT)	|	VoC_mult16_rr(REG6,REG4,REG6,IN_PARALLEL)
0x5E600736,	//0x0d3a		VoC_add16_rd(REG6,REG6,0x5e60)
0xC18EC1BE,	//0x0d3c		VoC_add16_rr(REG6,REG6,REG1,DEFAULT)	|	VoC_add16_rr(REG6,REG6,REG7,DEFAULT)
0x2806F936,	//0x0d3e		VoC_and16_rd(REG6,0x5e6e)(lo)	|	VoC_shru16_ri(REG6,0x6,DEFAULT)
0xE0C85E6E,	//0x0d40		VoC_movreg16(ACC0_LO,REG6,DEFAULT)	|	VoC_and16_rd(REG6,0x5e6e)(hi)
0xF7476126,	//0x0d42		VoC_movreg16(REG7,ACC1_LO,IN_PARALLEL)	|	VoC_movreg16(REG6,ACC0_HI,DEFAULT)
0xC4FF44B6,	//0x0d44		VoC_mult16_rr(REG7,REG3,REG7,IN_PARALLEL)	|	VoC_mult16_rr(REG6,REG2,REG6,DEFAULT)
0x41B9FFC0,	//0x0d46		VoC_add16_rr(REG1,REG6,REG7,DEFAULT)	|	VoC_NOP
0x61C7F7A6,	//0x0d48		VoC_movreg16(REG7,RL7_LO,DEFAULT)	|	VoC_movreg16(REG6,RL6_HI,IN_PARALLEL)
0xC57FC536,	//0x0d4a		VoC_mult16_rr(REG7,REG5,REG7,DEFAULT)	|	VoC_mult16_rr(REG6,REG4,REG6,IN_PARALLEL)
0x5E600736,	//0x0d4c		VoC_add16_rd(REG6,REG6,0x5e60)
0xC18FC1F6,	//0x0d4e		VoC_add16_rr(REG7,REG6,REG1,DEFAULT)	|	VoC_add16_rr(REG6,REG7,REG6,DEFAULT)
0x2807F9F7,	//0x0d50		VoC_and16_rd(REG7,0x5e6f)(lo)	|	VoC_shru16_ri(REG7,0xfffffffe,DEFAULT)
0xE1065E6F,	//0x0d52		VoC_movreg16(REG6,ACC0_LO,DEFAULT)	|	VoC_and16_rd(REG7,0x5e6f)(hi)
0xE167E47E,	//0x0d54		VoC_movreg16(REG7,ACC1_HI,DEFAULT)	|	VoC_or16_rr(REG6,REG7,DEFAULT)
0xE146DC86,	//0x0d56		VoC_movreg16(REG6,ACC1_LO,DEFAULT)	|	VoC_sw16inc_p(REG6,REG0,DEFAULT)
0xC4FF44B6,	//0x0d58		VoC_mult16_rr(REG7,REG3,REG7,IN_PARALLEL)	|	VoC_mult16_rr(REG6,REG2,REG6,DEFAULT)
0x41B9FFC0,	//0x0d5a		VoC_add16_rr(REG1,REG6,REG7,DEFAULT)	|	VoC_NOP
0x61E7F7C6,	//0x0d5c		VoC_movreg16(REG7,RL7_HI,DEFAULT)	|	VoC_movreg16(REG6,RL7_LO,IN_PARALLEL)
0xC57FC536,	//0x0d5e		VoC_mult16_rr(REG7,REG5,REG7,DEFAULT)	|	VoC_mult16_rr(REG6,REG4,REG6,IN_PARALLEL)
0x5E600736,	//0x0d60		VoC_add16_rd(REG6,REG6,0x5e60)
0xC1BEC18E,	//0x0d62		VoC_add16_rr(REG6,REG6,REG7,DEFAULT)	|	VoC_add16_rr(REG6,REG6,REG1,DEFAULT)
0x2806F936,	//0x0d64		VoC_and16_rd(REG6,0x5e6e)(lo)	|	VoC_shru16_ri(REG6,0x6,DEFAULT)
0x60C85E6E,	//0x0d66		VoC_movreg16(ACC0_LO,REG6,DEFAULT)	|	VoC_and16_rd(REG6,0x5e6e)(hi)
0xDF86F767,	//0x0d68		VoC_pop16(REG6,DEFAULT)	|	VoC_movreg16(REG7,ACC1_HI,IN_PARALLEL)
0xC4F6C4BF,	//0x0d6a		VoC_mult16_rr(REG6,REG3,REG6,DEFAULT)	|	VoC_mult16_rr(REG7,REG2,REG7,DEFAULT)
0xC1B9FFC0,	//0x0d6c		VoC_add16_rr(REG1,REG6,REG7,DEFAULT)	|	VoC_NOP
0xDF8761E6,	//0x0d6e		VoC_pop16(REG7,IN_PARALLEL)	|	VoC_movreg16(REG6,RL7_HI,DEFAULT)
0xC57FC536,	//0x0d70		VoC_mult16_rr(REG7,REG5,REG7,DEFAULT)	|	VoC_mult16_rr(REG6,REG4,REG6,DEFAULT)
0x5E600736,	//0x0d72		VoC_add16_rd(REG6,REG6,0x5e60)
0xC18FC1F6,	//0x0d74		VoC_add16_rr(REG7,REG6,REG1,DEFAULT)	|	VoC_add16_rr(REG6,REG7,REG6,DEFAULT)
0x2807F9F7,	//0x0d76		VoC_and16_rd(REG7,0x5e6f)(lo)	|	VoC_shru16_ri(REG7,0xfffffffe,DEFAULT)
0x61065E6F,	//0x0d78		VoC_movreg16(REG6,ACC0_LO,DEFAULT)	|	VoC_and16_rd(REG7,0x5e6f)(hi)
0xE47EDF81,	//0x0d7a		VoC_or16_rr(REG6,REG7,DEFAULT)	|	VoC_pop16(REG1,IN_PARALLEL)
0x5E6A0789,	//0x0d7c		VoC_sub16_rd(REG1,REG1,0x5e6a)
		//0x0d7e		VoC_endloop0
0xDFA9DC86,	//0x0d7e		VoC_pop16(RA,DEFAULT)	|	VoC_sw16inc_p(REG6,REG0,DEFAULT)
		//0x0d7f		CS_put_h264_chroma_mc4_8_c_end
0xE580FFC0,	//0x0d80		VoC_return	|	VoC_NOP
		//0x0d82		CS_mp4_qpel16_h_lowpass16X16
0x6022DFE9,	//0x0d82		VoC_movreg16(REG2,REG1,DEFAULT)	|	VoC_push16(RA,DEFAULT)
0x7031F006,	//0x0d84		VoC_lw16i_short(INC1,0x1,DEFAULT)	|	VoC_lw16i_short(INC2,0x1,IN_PARALLEL)
0x5E10F004,	//0x0d86		VoC_inc_p(REG2,DEFAULT)	|	VoC_lw16i_short(INC0,0x1,IN_PARALLEL)
0x0A85F401,	//0x0d88		VoC_lw16i(REG5,0xff)(lo)	|	VoC_lw16i_short(FORMAT32,0x0,IN_PARALLEL)
0x2E1800FF,	//0x0d8a		VoC_loop_r(0,REG3)(lo)	|	VoC_lw16i(REG5,0xff)(hi)
0xD8930E49,	//0x0d8c		VoC_lw16inc_p(REG3,REG1,DEFAULT)	|	VoC_loop_r(0,REG3)(hi)
0xF66A02D4,	//0x0d8e		VoC_movreg16(ACC1_LO,REG3,IN_PARALLEL)	|	VoC_add16inc_rp(REG4,REG3,REG2,DEFAULT)
0x5E760A24,	//0x0d90		VoC_multf32_rd(ACC0,REG4,0x5e76)
0x0F2082D4,	//0x0d92		VoC_msu32_rd(REG4,0x5e6c)(lo)	|	VoC_add16inc_rp(REG4,REG3,REG2,DEFAULT)
0xD8935E6C,	//0x0d94		VoC_lw16inc_p(REG3,REG1,DEFAULT)	|	VoC_msu32_rd(REG4,0x5e6c)(hi)
0xF66B02D4,	//0x0d96		VoC_movreg16(ACC1_HI,REG3,IN_PARALLEL)	|	VoC_add16inc_rp(REG4,REG3,REG2,DEFAULT)
0x5E660E20,	//0x0d98		VoC_mac32_rd(REG4,0x5e66)
0x80D4D893,	//0x0d9a		VoC_add16_rp(REG4,REG3,REG2,DEFAULT)	|	VoC_lw16inc_p(REG3,REG1,DEFAULT)
0x5E7207A4,	//0x0d9c		VoC_sub16_rd(REG4,REG4,0x5e72)
0x5E680F20,	//0x0d9e		VoC_msu32_rd(REG4,0x5e68)
0x5E690792,	//0x0da0		VoC_sub16_rd(REG2,REG2,0x5e69)
0xE126FBAC,	//0x0da2		VoC_movreg16(REG6,ACC0_HI,DEFAULT)	|	VoC_shr32_ri(ACC0,0xfffffff5,DEFAULT)
0xDEEE7FC0,	//0x0da4		VoC_clipu16_rr(REG6,REG5,IN_PARALLEL)	|	VoC_NOP
0xDC86FFC0,	//0x0da6		VoC_sw16inc_p(REG6,REG0,DEFAULT)	|	VoC_NOP
0x8314E164,	//0x0da8		VoC_add16inc_rp(REG4,REG4,REG2,DEFAULT)	|	VoC_movreg16(REG4,ACC1_HI,DEFAULT)
0x5E760A24,	//0x0daa		VoC_multf32_rd(ACC0,REG4,0x5e76)
0x8317E144,	//0x0dac		VoC_add16inc_rp(REG7,REG4,REG2,DEFAULT)	|	VoC_movreg16(REG4,ACC1_LO,DEFAULT)
0x5E6C0F38,	//0x0dae		VoC_msu32_rd(REG7,0x5e6c)
0x0E208314,	//0x0db0		VoC_mac32_rd(REG4,0x5e66)(lo)	|	VoC_add16inc_rp(REG4,REG4,REG2,DEFAULT)
0xE1645E66,	//0x0db2		VoC_movreg16(REG4,ACC1_HI,DEFAULT)	|	VoC_mac32_rd(REG4,0x5e66)(hi)
0x07A48114,	//0x0db4		VoC_sub16_rd(REG4,REG4,0x5e72)(lo)	|	VoC_add16_rp(REG4,REG4,REG2,DEFAULT)
0x0F205E72,	//0x0db6		VoC_msu32_rd(REG4,0x5e68)(lo)	|	VoC_sub16_rd(REG4,REG4,0x5e72)(hi)
0x07925E68,	//0x0db8		VoC_sub16_rd(REG2,REG2,0x5e69)(lo)	|	VoC_msu32_rd(REG4,0x5e68)(hi)
0xFBAC5E69,	//0x0dba		VoC_shr32_ri(ACC0,0xfffffff5,DEFAULT)	|	VoC_sub16_rd(REG2,REG2,0x5e69)(hi)
0x7FC0E126,	//0x0dbc		VoC_NOP	|	VoC_movreg16(REG6,ACC0_HI,DEFAULT)
0xFFC0DEEE,	//0x0dbe		VoC_NOP	|	VoC_clipu16_rr(REG6,REG5,IN_PARALLEL)
0x82D4DC86,	//0x0dc0		VoC_add16inc_rp(REG4,REG3,REG2,DEFAULT)	|	VoC_sw16inc_p(REG6,REG0,DEFAULT)
0x5E760A24,	//0x0dc2		VoC_multf32_rd(ACC0,REG4,0x5e76)
0x8314E164,	//0x0dc4		VoC_add16inc_rp(REG4,REG4,REG2,DEFAULT)	|	VoC_movreg16(REG4,ACC1_HI,DEFAULT)
0x5E6C0F20,	//0x0dc6		VoC_msu32_rd(REG4,0x5e6c)
0x8317E144,	//0x0dc8		VoC_add16inc_rp(REG7,REG4,REG2,DEFAULT)	|	VoC_movreg16(REG4,ACC1_LO,DEFAULT)
0x5E660E38,	//0x0dca		VoC_mac32_rd(REG7,0x5e66)
0x07A48114,	//0x0dcc		VoC_sub16_rd(REG4,REG4,0x5e72)(lo)	|	VoC_add16_rp(REG4,REG4,REG2,DEFAULT)
0x0F205E72,	//0x0dce		VoC_msu32_rd(REG4,0x5e68)(lo)	|	VoC_sub16_rd(REG4,REG4,0x5e72)(hi)
0xF7F15E68,	//0x0dd0		VoC_lw16i_short(INC1,0xffffffff,DEFAULT)	|	VoC_msu32_rd(REG4,0x5e68)(hi)
0xE126FBAC,	//0x0dd2		VoC_movreg16(REG6,ACC0_HI,DEFAULT)	|	VoC_shr32_ri(ACC0,0xfffffff5,DEFAULT)
0xDEEE7FC0,	//0x0dd4		VoC_clipu16_rr(REG6,REG5,IN_PARALLEL)	|	VoC_NOP
0x5E690792,	//0x0dd6		VoC_sub16_rd(REG2,REG2,0x5e69)
0x2C15DC86,	//0x0dd8		VoC_loop_i(0x1,0xa)(lo)	|	VoC_sw16inc_p(REG6,REG0,DEFAULT)
0xD8940DF5,	//0x0dda		VoC_lw16inc_p(REG4,REG1,DEFAULT)	|	VoC_loop_i(0x1,0xa)(hi)
0x0A248314,	//0x0ddc		VoC_multf32_rd(ACC0,REG4,0x5e76)(lo)	|	VoC_add16inc_rp(REG4,REG4,REG2,DEFAULT)
0xD8945E76,	//0x0dde		VoC_lw16inc_p(REG4,REG1,DEFAULT)	|	VoC_multf32_rd(ACC0,REG4,0x5e76)(hi)
0x0F208314,	//0x0de0		VoC_msu32_rd(REG4,0x5e6c)(lo)	|	VoC_add16inc_rp(REG4,REG4,REG2,DEFAULT)
0xD8945E6C,	//0x0de2		VoC_lw16inc_p(REG4,REG1,DEFAULT)	|	VoC_msu32_rd(REG4,0x5e6c)(hi)
0x0E208314,	//0x0de4		VoC_mac32_rd(REG4,0x5e66)(lo)	|	VoC_add16inc_rp(REG4,REG4,REG2,DEFAULT)
0xD8145E66,	//0x0de6		VoC_lw16_p(REG4,REG1,DEFAULT)	|	VoC_mac32_rd(REG4,0x5e66)(hi)
0x07A48114,	//0x0de8		VoC_sub16_rd(REG4,REG4,0x5e72)(lo)	|	VoC_add16_rp(REG4,REG4,REG2,DEFAULT)
0x0F205E72,	//0x0dea		VoC_msu32_rd(REG4,0x5e68)(lo)	|	VoC_sub16_rd(REG4,REG4,0x5e72)(hi)
0x07095E68,	//0x0dec		VoC_add16_rd(REG1,REG1,0x5e6a)(lo)	|	VoC_msu32_rd(REG4,0x5e68)(hi)
0xFBAC5E6A,	//0x0dee		VoC_shr32_ri(ACC0,0xfffffff5,DEFAULT)	|	VoC_add16_rd(REG1,REG1,0x5e6a)(hi)
0x7FC0E126,	//0x0df0		VoC_NOP	|	VoC_movreg16(REG6,ACC0_HI,DEFAULT)
0x0792DEEE,	//0x0df2		VoC_sub16_rd(REG2,REG2,0x5e69)(lo)	|	VoC_clipu16_rr(REG6,REG5,IN_PARALLEL)
0xDC865E69,	//0x0df4		VoC_sw16inc_p(REG6,REG0,DEFAULT)	|	VoC_sub16_rd(REG2,REG2,0x5e69)(hi)
		//0x0df5		VoC_endloop1
0x608AD8A4,	//0x0df6		VoC_movreg16(ACC1_LO,REG4,DEFAULT)	|	VoC_lw16inc_p(REG4,REG2,DEFAULT)
0x0A24830C,	//0x0df8		VoC_multf32_rd(ACC0,REG4,0x5e76)(lo)	|	VoC_add16inc_rp(REG4,REG4,REG1,IN_PARALLEL)
0xD8A45E76,	//0x0dfa		VoC_lw16inc_p(REG4,REG2,DEFAULT)	|	VoC_multf32_rd(ACC0,REG4,0x5e76)(hi)
0x830C608B,	//0x0dfc		VoC_add16inc_rp(REG4,REG4,REG1,IN_PARALLEL)	|	VoC_movreg16(ACC1_HI,REG4,DEFAULT)
0x5E6C0F20,	//0x0dfe		VoC_msu32_rd(REG4,0x5e6c)
0x82CCD823,	//0x0e00		VoC_add16inc_rp(REG4,REG3,REG1,DEFAULT)	|	VoC_lw16_p(REG3,REG2,DEFAULT)
0x5E660E20,	//0x0e02		VoC_mac32_rd(REG4,0x5e66)
0x07A480CC,	//0x0e04		VoC_sub16_rd(REG4,REG4,0x5e72)(lo)	|	VoC_add16_rp(REG4,REG3,REG1,DEFAULT)
0x0F205E72,	//0x0e06		VoC_msu32_rd(REG4,0x5e68)(lo)	|	VoC_sub16_rd(REG4,REG4,0x5e72)(hi)
0x07095E68,	//0x0e08		VoC_add16_rd(REG1,REG1,0x5e6a)(lo)	|	VoC_msu32_rd(REG4,0x5e68)(hi)
0xFBAC5E6A,	//0x0e0a		VoC_shr32_ri(ACC0,0xfffffff5,DEFAULT)	|	VoC_add16_rd(REG1,REG1,0x5e6a)(hi)
0x7FC0E126,	//0x0e0c		VoC_NOP	|	VoC_movreg16(REG6,ACC0_HI,DEFAULT)
0xFFC0DEEE,	//0x0e0e		VoC_NOP	|	VoC_clipu16_rr(REG6,REG5,IN_PARALLEL)
0xE164DC86,	//0x0e10		VoC_movreg16(REG4,ACC1_HI,DEFAULT)	|	VoC_sw16inc_p(REG6,REG0,DEFAULT)
0x0A24830C,	//0x0e12		VoC_multf32_rd(ACC0,REG4,0x5e76)(lo)	|	VoC_add16inc_rp(REG4,REG4,REG1,DEFAULT)
0x82CF5E76,	//0x0e14		VoC_add16inc_rp(REG7,REG3,REG1,DEFAULT)	|	VoC_multf32_rd(ACC0,REG4,0x5e76)(hi)
0x5E6C0F38,	//0x0e16		VoC_msu32_rd(REG7,0x5e6c)
0x0E2082CC,	//0x0e18		VoC_mac32_rd(REG4,0x5e66)(lo)	|	VoC_add16inc_rp(REG4,REG3,REG1,DEFAULT)
0xE1645E66,	//0x0e1a		VoC_movreg16(REG4,ACC1_HI,DEFAULT)	|	VoC_mac32_rd(REG4,0x5e66)(hi)
0x07A4810C,	//0x0e1c		VoC_sub16_rd(REG4,REG4,0x5e72)(lo)	|	VoC_add16_rp(REG4,REG4,REG1,DEFAULT)
0x0F205E72,	//0x0e1e		VoC_msu32_rd(REG4,0x5e68)(lo)	|	VoC_sub16_rd(REG4,REG4,0x5e72)(hi)
0x07095E68,	//0x0e20		VoC_add16_rd(REG1,REG1,0x5e6a)(lo)	|	VoC_msu32_rd(REG4,0x5e68)(hi)
0xFBAC5E6A,	//0x0e22		VoC_shr32_ri(ACC0,0xfffffff5,DEFAULT)	|	VoC_add16_rd(REG1,REG1,0x5e6a)(hi)
0x7FC0E126,	//0x0e24		VoC_NOP	|	VoC_movreg16(REG6,ACC0_HI,DEFAULT)
0xFFC0DEEE,	//0x0e26		VoC_NOP	|	VoC_clipu16_rr(REG6,REG5,IN_PARALLEL)
0x82CCDC86,	//0x0e28		VoC_add16inc_rp(REG4,REG3,REG1,DEFAULT)	|	VoC_sw16inc_p(REG6,REG0,DEFAULT)
0x5E760A24,	//0x0e2a		VoC_multf32_rd(ACC0,REG4,0x5e76)
0x0F2082CC,	//0x0e2c		VoC_msu32_rd(REG4,0x5e6c)(lo)	|	VoC_add16inc_rp(REG4,REG3,REG1,DEFAULT)
0xE1645E6C,	//0x0e2e		VoC_movreg16(REG4,ACC1_HI,DEFAULT)	|	VoC_msu32_rd(REG4,0x5e6c)(hi)
0x0E38830F,	//0x0e30		VoC_mac32_rd(REG7,0x5e66)(lo)	|	VoC_add16inc_rp(REG7,REG4,REG1,DEFAULT)
0xE1445E66,	//0x0e32		VoC_movreg16(REG4,ACC1_LO,DEFAULT)	|	VoC_mac32_rd(REG7,0x5e66)(hi)
0x07A4810C,	//0x0e34		VoC_sub16_rd(REG4,REG4,0x5e72)(lo)	|	VoC_add16_rp(REG4,REG4,REG1,DEFAULT)
0x0F205E72,	//0x0e36		VoC_msu32_rd(REG4,0x5e68)(lo)	|	VoC_sub16_rd(REG4,REG4,0x5e72)(hi)
0x07095E68,	//0x0e38		VoC_add16_rd(REG1,REG1,0x5e6a)(lo)	|	VoC_msu32_rd(REG4,0x5e68)(hi)
0xFBAC5E6A,	//0x0e3a		VoC_shr32_ri(ACC0,0xfffffff5,DEFAULT)	|	VoC_add16_rd(REG1,REG1,0x5e6a)(hi)
0x7FC0E126,	//0x0e3c		VoC_NOP	|	VoC_movreg16(REG6,ACC0_HI,DEFAULT)
0xFFC0DEEE,	//0x0e3e		VoC_NOP	|	VoC_clipu16_rr(REG6,REG5,IN_PARALLEL)
0xF031DC86,	//0x0e40		VoC_lw16i_short(INC1,0x1,DEFAULT)	|	VoC_sw16inc_p(REG6,REG0,DEFAULT)
0x5E720789,	//0x0e42		VoC_sub16_rd(REG1,REG1,0x5e72)
0x5E720780,	//0x0e44		VoC_sub16_rd(REG0,REG0,0x5e72)
0x4079FF3B,	//0x0e46		VoC_add16_rr(REG1,REG1,REG7,DEFAULT)	|	VoC_movreg32(REG67,RL7,DEFAULT)
0x070AC030,	//0x0e48		VoC_add16_rd(REG2,REG1,0x5e68)(lo)	|	VoC_add16_rr(REG0,REG0,REG6,IN_PARALLEL)
		//0x0e49		VoC_endloop0
0xDFA95E68,	//0x0e4a		VoC_pop16(RA,DEFAULT)	|	VoC_add16_rd(REG2,REG1,0x5e68)(hi)
0xE580FFC0,	//0x0e4c		VoC_return	|	VoC_NOP
		//0x0e4e		CS_mp4_qpel16_v_lowpass16X16
0x6022DFE9,	//0x0e4e		VoC_movreg16(REG2,REG1,DEFAULT)	|	VoC_push16(RA,DEFAULT)
0x61F1F7D0,	//0x0e50		VoC_movreg16(INC1,RL7_HI,DEFAULT)	|	VoC_movreg16(INC0,RL7_LO,IN_PARALLEL)
0xF019F7F2,	//0x0e52		VoC_lw16i_short(FORMAT32,0x0,DEFAULT)	|	VoC_movreg16(INC2,RL7_HI,IN_PARALLEL)
0xC0B2E1E6,	//0x0e54		VoC_add16_rr(REG2,REG2,REG6,DEFAULT)	|	VoC_movreg16(REG6,RL7_HI,DEFAULT)
0x20381506,	//0x0e56		VoC_sw16_d(REG6,0x2038)
0x00FF0A85,	//0x0e58		VoC_lw16i(REG5,0xff)
0x0F2B2C20,	//0x0e5a		VoC_loop_i(0x0,0x10)
0x02D4D893,	//0x0e5c		VoC_add16inc_rp(REG4,REG3,REG2,DEFAULT)	|	VoC_lw16inc_p(REG3,REG1,DEFAULT)
0x0A24F66A,	//0x0e5e		VoC_multf32_rd(ACC0,REG4,0x5e76)(lo)	|	VoC_movreg16(ACC1_LO,REG3,IN_PARALLEL)
0x82D45E76,	//0x0e60		VoC_add16inc_rp(REG4,REG3,REG2,DEFAULT)	|	VoC_multf32_rd(ACC0,REG4,0x5e76)(hi)
0x5E6C0F20,	//0x0e62		VoC_msu32_rd(REG4,0x5e6c)
0x02D4D893,	//0x0e64		VoC_add16inc_rp(REG4,REG3,REG2,DEFAULT)	|	VoC_lw16inc_p(REG3,REG1,DEFAULT)
0x0E20F66B,	//0x0e66		VoC_mac32_rd(REG4,0x5e66)(lo)	|	VoC_movreg16(ACC1_HI,REG3,IN_PARALLEL)
0xD8935E66,	//0x0e68		VoC_lw16inc_p(REG3,REG1,DEFAULT)	|	VoC_mac32_rd(REG4,0x5e66)(hi)
0x07A480D4,	//0x0e6a		VoC_sub16_rd(REG4,REG4,0x5e72)(lo)	|	VoC_add16_rp(REG4,REG3,REG2,DEFAULT)
0x0F205E72,	//0x0e6c		VoC_msu32_rd(REG4,0x5e68)(lo)	|	VoC_sub16_rd(REG4,REG4,0x5e72)(hi)
0xF0475E68,	//0x0e6e		VoC_lw16i_short(REG7,0x2,DEFAULT)	|	VoC_msu32_rd(REG4,0x5e68)(hi)
0x2038083F,	//0x0e70		VoC_mult16_rd(REG7,REG7,0x2038)
0xE126FBAC,	//0x0e72		VoC_movreg16(REG6,ACC0_HI,DEFAULT)	|	VoC_shr32_ri(ACC0,0xfffffff5,DEFAULT)
0xDEEE7FC0,	//0x0e74		VoC_clipu16_rr(REG6,REG5,IN_PARALLEL)	|	VoC_NOP
0xDC86C2BA,	//0x0e76		VoC_sw16inc_p(REG6,REG0,DEFAULT)	|	VoC_sub16_rr(REG2,REG2,REG7,DEFAULT)
0x8314E164,	//0x0e78		VoC_add16inc_rp(REG4,REG4,REG2,DEFAULT)	|	VoC_movreg16(REG4,ACC1_HI,DEFAULT)
0x5E760A24,	//0x0e7a		VoC_multf32_rd(ACC0,REG4,0x5e76)
0x8317E144,	//0x0e7c		VoC_add16inc_rp(REG7,REG4,REG2,DEFAULT)	|	VoC_movreg16(REG4,ACC1_LO,DEFAULT)
0x5E6C0F38,	//0x0e7e		VoC_msu32_rd(REG7,0x5e6c)
0x0E208314,	//0x0e80		VoC_mac32_rd(REG4,0x5e66)(lo)	|	VoC_add16inc_rp(REG4,REG4,REG2,DEFAULT)
0xE1645E66,	//0x0e82		VoC_movreg16(REG4,ACC1_HI,DEFAULT)	|	VoC_mac32_rd(REG4,0x5e66)(hi)
0x07A48114,	//0x0e84		VoC_sub16_rd(REG4,REG4,0x5e72)(lo)	|	VoC_add16_rp(REG4,REG4,REG2,DEFAULT)
0x0F205E72,	//0x0e86		VoC_msu32_rd(REG4,0x5e68)(lo)	|	VoC_sub16_rd(REG4,REG4,0x5e72)(hi)
0xF0475E68,	//0x0e88		VoC_lw16i_short(REG7,0x2,DEFAULT)	|	VoC_msu32_rd(REG4,0x5e68)(hi)
0x2038083F,	//0x0e8a		VoC_mult16_rd(REG7,REG7,0x2038)
0xE126FBAC,	//0x0e8c		VoC_movreg16(REG6,ACC0_HI,DEFAULT)	|	VoC_shr32_ri(ACC0,0xfffffff5,DEFAULT)
0xDEEE7FC0,	//0x0e8e		VoC_clipu16_rr(REG6,REG5,IN_PARALLEL)	|	VoC_NOP
0xDC86C2BA,	//0x0e90		VoC_sw16inc_p(REG6,REG0,DEFAULT)	|	VoC_sub16_rr(REG2,REG2,REG7,DEFAULT)
0x0A2482D4,	//0x0e92		VoC_multf32_rd(ACC0,REG4,0x5e76)(lo)	|	VoC_add16inc_rp(REG4,REG3,REG2,DEFAULT)
0xE1645E76,	//0x0e94		VoC_movreg16(REG4,ACC1_HI,DEFAULT)	|	VoC_multf32_rd(ACC0,REG4,0x5e76)(hi)
0x0F208314,	//0x0e96		VoC_msu32_rd(REG4,0x5e6c)(lo)	|	VoC_add16inc_rp(REG4,REG4,REG2,DEFAULT)
0xE1445E6C,	//0x0e98		VoC_movreg16(REG4,ACC1_LO,DEFAULT)	|	VoC_msu32_rd(REG4,0x5e6c)(hi)
0x0E388317,	//0x0e9a		VoC_mac32_rd(REG7,0x5e66)(lo)	|	VoC_add16inc_rp(REG7,REG4,REG2,DEFAULT)
0x81145E66,	//0x0e9c		VoC_add16_rp(REG4,REG4,REG2,DEFAULT)	|	VoC_mac32_rd(REG7,0x5e66)(hi)
0x5E7207A4,	//0x0e9e		VoC_sub16_rd(REG4,REG4,0x5e72)
0x5E680F20,	//0x0ea0		VoC_msu32_rd(REG4,0x5e68)
0xE0277006,	//0x0ea2		VoC_lw16i_short(REG7,0x2,IN_PARALLEL)	|	VoC_lw16i_short(REG6,0x0,DEFAULT)
0x203807B6,	//0x0ea4		VoC_sub16_rd(REG6,REG6,0x2038)
0x083FE0D1,	//0x0ea6		VoC_mult16_rd(REG7,REG7,0x2038)(lo)	|	VoC_movreg16(INC1,REG6,DEFAULT)
0xFBAC2038,	//0x0ea8		VoC_shr32_ri(ACC0,0xfffffff5,DEFAULT)	|	VoC_mult16_rd(REG7,REG7,0x2038)(hi)
0x7FC0E126,	//0x0eaa		VoC_NOP	|	VoC_movreg16(REG6,ACC0_HI,DEFAULT)
0xC2BADEEE,	//0x0eac		VoC_sub16_rr(REG2,REG2,REG7,DEFAULT)	|	VoC_clipu16_rr(REG6,REG5,IN_PARALLEL)
0x2C15DC86,	//0x0eae		VoC_loop_i(0x1,0xa)(lo)	|	VoC_sw16inc_p(REG6,REG0,DEFAULT)
0xD8940ECF,	//0x0eb0		VoC_lw16inc_p(REG4,REG1,DEFAULT)	|	VoC_loop_i(0x1,0xa)(hi)
0x0A248314,	//0x0eb2		VoC_multf32_rd(ACC0,REG4,0x5e76)(lo)	|	VoC_add16inc_rp(REG4,REG4,REG2,DEFAULT)
0xD8945E76,	//0x0eb4		VoC_lw16inc_p(REG4,REG1,DEFAULT)	|	VoC_multf32_rd(ACC0,REG4,0x5e76)(hi)
0x0F208314,	//0x0eb6		VoC_msu32_rd(REG4,0x5e6c)(lo)	|	VoC_add16inc_rp(REG4,REG4,REG2,DEFAULT)
0xD8945E6C,	//0x0eb8		VoC_lw16inc_p(REG4,REG1,DEFAULT)	|	VoC_msu32_rd(REG4,0x5e6c)(hi)
0x0E208314,	//0x0eba		VoC_mac32_rd(REG4,0x5e66)(lo)	|	VoC_add16inc_rp(REG4,REG4,REG2,DEFAULT)
0xD8145E66,	//0x0ebc		VoC_lw16_p(REG4,REG1,DEFAULT)	|	VoC_mac32_rd(REG4,0x5e66)(hi)
0x07A48114,	//0x0ebe		VoC_sub16_rd(REG4,REG4,0x5e72)(lo)	|	VoC_add16_rp(REG4,REG4,REG2,DEFAULT)
0x0F205E72,	//0x0ec0		VoC_msu32_rd(REG4,0x5e68)(lo)	|	VoC_sub16_rd(REG4,REG4,0x5e72)(hi)
0x70865E68,	//0x0ec2		VoC_lw16i_short(REG6,0x4,DEFAULT)	|	VoC_msu32_rd(REG4,0x5e68)(hi)
0x0836E027,	//0x0ec4		VoC_mult16_rd(REG6,REG6,0x2038)(lo)	|	VoC_lw16i_short(REG7,0x2,IN_PARALLEL)
0x083F2038,	//0x0ec6		VoC_mult16_rd(REG7,REG7,0x2038)(lo)	|	VoC_mult16_rd(REG6,REG6,0x2038)(hi)
0xC0712038,	//0x0ec8		VoC_add16_rr(REG1,REG1,REG6,DEFAULT)	|	VoC_mult16_rd(REG7,REG7,0x2038)(hi)
0xE126FBAC,	//0x0eca		VoC_movreg16(REG6,ACC0_HI,DEFAULT)	|	VoC_shr32_ri(ACC0,0xfffffff5,DEFAULT)
0xDEEE7FC0,	//0x0ecc		VoC_clipu16_rr(REG6,REG5,IN_PARALLEL)	|	VoC_NOP
0xDC86C2BA,	//0x0ece		VoC_sw16inc_p(REG6,REG0,DEFAULT)	|	VoC_sub16_rr(REG2,REG2,REG7,DEFAULT)
		//0x0ecf		VoC_endloop1
0x608AD8A4,	//0x0ed0		VoC_movreg16(ACC1_LO,REG4,DEFAULT)	|	VoC_lw16inc_p(REG4,REG2,DEFAULT)
0x0A24830C,	//0x0ed2		VoC_multf32_rd(ACC0,REG4,0x5e76)(lo)	|	VoC_add16inc_rp(REG4,REG4,REG1,IN_PARALLEL)
0xD8A45E76,	//0x0ed4		VoC_lw16inc_p(REG4,REG2,DEFAULT)	|	VoC_multf32_rd(ACC0,REG4,0x5e76)(hi)
0x830C608B,	//0x0ed6		VoC_add16inc_rp(REG4,REG4,REG1,IN_PARALLEL)	|	VoC_movreg16(ACC1_HI,REG4,DEFAULT)
0x5E6C0F20,	//0x0ed8		VoC_msu32_rd(REG4,0x5e6c)
0x82CCD823,	//0x0eda		VoC_add16inc_rp(REG4,REG3,REG1,DEFAULT)	|	VoC_lw16_p(REG3,REG2,DEFAULT)
0x5E660E20,	//0x0edc		VoC_mac32_rd(REG4,0x5e66)
0x07A480CC,	//0x0ede		VoC_sub16_rd(REG4,REG4,0x5e72)(lo)	|	VoC_add16_rp(REG4,REG3,REG1,DEFAULT)
0x0F205E72,	//0x0ee0		VoC_msu32_rd(REG4,0x5e68)(lo)	|	VoC_sub16_rd(REG4,REG4,0x5e72)(hi)
0xF0875E68,	//0x0ee2		VoC_lw16i_short(REG7,0x4,DEFAULT)	|	VoC_msu32_rd(REG4,0x5e68)(hi)
0x2038083F,	//0x0ee4		VoC_mult16_rd(REG7,REG7,0x2038)
0xE126FBAC,	//0x0ee6		VoC_movreg16(REG6,ACC0_HI,DEFAULT)	|	VoC_shr32_ri(ACC0,0xfffffff5,DEFAULT)
0xDEEE7FC0,	//0x0ee8		VoC_clipu16_rr(REG6,REG5,IN_PARALLEL)	|	VoC_NOP
0xDC86C079,	//0x0eea		VoC_sw16inc_p(REG6,REG0,DEFAULT)	|	VoC_add16_rr(REG1,REG1,REG7,DEFAULT)
0x830FE164,	//0x0eec		VoC_add16inc_rp(REG7,REG4,REG1,DEFAULT)	|	VoC_movreg16(REG4,ACC1_HI,DEFAULT)
0x5E760A3C,	//0x0eee		VoC_multf32_rd(ACC0,REG7,0x5e76)
0x0F3882CF,	//0x0ef0		VoC_msu32_rd(REG7,0x5e6c)(lo)	|	VoC_add16inc_rp(REG7,REG3,REG1,DEFAULT)
0x82CF5E6C,	//0x0ef2		VoC_add16inc_rp(REG7,REG3,REG1,DEFAULT)	|	VoC_msu32_rd(REG7,0x5e6c)(hi)
0x5E660E38,	//0x0ef4		VoC_mac32_rd(REG7,0x5e66)
0x07A4810C,	//0x0ef6		VoC_sub16_rd(REG4,REG4,0x5e72)(lo)	|	VoC_add16_rp(REG4,REG4,REG1,DEFAULT)
0x0F205E72,	//0x0ef8		VoC_msu32_rd(REG4,0x5e68)(lo)	|	VoC_sub16_rd(REG4,REG4,0x5e72)(hi)
0xF0875E68,	//0x0efa		VoC_lw16i_short(REG7,0x4,DEFAULT)	|	VoC_msu32_rd(REG4,0x5e68)(hi)
0x2038083F,	//0x0efc		VoC_mult16_rd(REG7,REG7,0x2038)
0xE126FBAC,	//0x0efe		VoC_movreg16(REG6,ACC0_HI,DEFAULT)	|	VoC_shr32_ri(ACC0,0xfffffff5,DEFAULT)
0xDEEE7FC0,	//0x0f00		VoC_clipu16_rr(REG6,REG5,IN_PARALLEL)	|	VoC_NOP
0xDC86C079,	//0x0f02		VoC_sw16inc_p(REG6,REG0,DEFAULT)	|	VoC_add16_rr(REG1,REG1,REG7,DEFAULT)
0x0A2482CC,	//0x0f04		VoC_multf32_rd(ACC0,REG4,0x5e76)(lo)	|	VoC_add16inc_rp(REG4,REG3,REG1,DEFAULT)
0x82CC5E76,	//0x0f06		VoC_add16inc_rp(REG4,REG3,REG1,DEFAULT)	|	VoC_multf32_rd(ACC0,REG4,0x5e76)(hi)
0x5E6C0F20,	//0x0f08		VoC_msu32_rd(REG4,0x5e6c)
0x830FE164,	//0x0f0a		VoC_add16inc_rp(REG7,REG4,REG1,DEFAULT)	|	VoC_movreg16(REG4,ACC1_HI,DEFAULT)
0x5E660E38,	//0x0f0c		VoC_mac32_rd(REG7,0x5e66)
0x810CE144,	//0x0f0e		VoC_add16_rp(REG4,REG4,REG1,DEFAULT)	|	VoC_movreg16(REG4,ACC1_LO,DEFAULT)
0x5E7207A4,	//0x0f10		VoC_sub16_rd(REG4,REG4,0x5e72)
0x5E680F20,	//0x0f12		VoC_msu32_rd(REG4,0x5e68)
0x083FF087,	//0x0f14		VoC_mult16_rd(REG7,REG7,0x2038)(lo)	|	VoC_lw16i_short(REG7,0x4,DEFAULT)
0xFBAC2038,	//0x0f16		VoC_shr32_ri(ACC0,0xfffffff5,DEFAULT)	|	VoC_mult16_rd(REG7,REG7,0x2038)(hi)
0x7FC0E126,	//0x0f18		VoC_NOP	|	VoC_movreg16(REG6,ACC0_HI,DEFAULT)
0xC079DEEE,	//0x0f1a		VoC_add16_rr(REG1,REG1,REG7,DEFAULT)	|	VoC_clipu16_rr(REG6,REG5,IN_PARALLEL)
0xF206DC86,	//0x0f1c		VoC_lw16i_short(REG6,0x10,DEFAULT)	|	VoC_sw16inc_p(REG6,REG0,DEFAULT)
0xF7E461C3,	//0x0f1e		VoC_movreg16(REG4,RL7_HI,IN_PARALLEL)	|	VoC_movreg16(REG3,RL7_LO,DEFAULT)
0xC59E45A7,	//0x0f20		VoC_mult16_rr(REG6,REG6,REG3,IN_PARALLEL)	|	VoC_mult16_rr(REG7,REG6,REG4,DEFAULT)
0x5E680709,	//0x0f22		VoC_add16_rd(REG1,REG1,0x5e68)
0x5E680700,	//0x0f24		VoC_add16_rd(REG0,REG0,0x5e68)
0xC2304279,	//0x0f26		VoC_sub16_rr(REG0,REG0,REG6,IN_PARALLEL)	|	VoC_sub16_rr(REG1,REG1,REG7,DEFAULT)
0x1411E022,	//0x0f28		VoC_lw16_d(INC1,0x2038)(lo)	|	VoC_movreg16(REG2,REG1,DEFAULT)
0xDE102038,	//0x0f2a		VoC_inc_p(REG2,DEFAULT)	|	VoC_lw16_d(INC1,0x2038)(hi)
		//0x0f2b		VoC_endloop0
0xFFC0DFA9,	//0x0f2c		VoC_NOP	|	VoC_pop16(RA,DEFAULT)
0xDFE9E580,	//0x0f2e		VoC_push16(RA,DEFAULT)	|	VoC_return
		//0x0f2f		CS_mp4_qpel16X16_add
0xF0057030,	//0x0f30		VoC_lw16i_short(INC1,0x1,IN_PARALLEL)	|	VoC_lw16i_short(INC0,0x1,DEFAULT)
0xFFC07F3B,	//0x0f32		VoC_NAD(IN_PARALLEL)	|	VoC_movreg32(REG67,RL7,DEFAULT)
0x0F432E18,	//0x0f34		VoC_loop_r(0,REG3)
0x0F3F2C21,	//0x0f36		VoC_loop_i(0x1,0x10)
0xD805D894,	//0x0f38		VoC_lw16_p(REG5,REG0,DEFAULT)	|	VoC_lw16inc_p(REG4,REG1,DEFAULT)
0xC12C7022,	//0x0f3a		VoC_add16_rr(REG4,REG4,REG5,IN_PARALLEL)	|	VoC_lw16i_short(REG2,0x1,DEFAULT)
0xF80CC114,	//0x0f3c		VoC_shr16_ri(REG4,0x1,DEFAULT)	|	VoC_add16_rr(REG4,REG4,REG2,DEFAULT)
0xDC84FFC0,	//0x0f3e		VoC_sw16inc_p(REG4,REG0,DEFAULT)	|	VoC_NOP
		//0x0f3f		VoC_endloop1
0x4374F205,	//0x0f40		VoC_sub16_rr(REG4,REG5,REG6,DEFAULT)	|	VoC_lw16i_short(REG5,0x10,DEFAULT)
0x4220C37D,	//0x0f42		VoC_sub16_rr(REG0,REG0,REG4,DEFAULT)	|	VoC_sub16_rr(REG5,REG5,REG7,IN_PARALLEL)
		//0x0f43		VoC_endloop0
0xDFA9C269,	//0x0f44		VoC_pop16(RA,DEFAULT)	|	VoC_sub16_rr(REG1,REG1,REG5,IN_PARALLEL)
0xE580FFC0,	//0x0f46		VoC_return	|	VoC_NOP
		//0x0f48		CS_mp4_f_b_interpolate_add
0x1804DFE9,	//0x0f48		VoC_lw16i_set_inc(REG0,0xcf0,0x1)(lo)	|	VoC_push16(RA,DEFAULT)
0x18050CF0,	//0x0f4a		VoC_lw16i_set_inc(REG1,0xe70,0x1)(lo)	|	VoC_lw16i_set_inc(REG0,0xcf0,0x1)(hi)
0x0A860E70,	//0x0f4c		VoC_lw16i(REG6,0xff)(lo)	|	VoC_lw16i_set_inc(REG1,0xe70,0x1)(hi)
0xF02700FF,	//0x0f4e		VoC_lw16i_short(REG7,0x1,DEFAULT)	|	VoC_lw16i(REG6,0xff)(hi)
0x0F652D80,	//0x0f50		VoC_loop_i(0x0,0xc0)
0xD894D802,	//0x0f52		VoC_lw16inc_p(REG4,REG1,DEFAULT)	|	VoC_lw16_p(REG2,REG0,DEFAULT)
0xF6856043,	//0x0f54		VoC_movreg16(REG5,REG4,IN_PARALLEL)	|	VoC_movreg16(REG3,REG2,DEFAULT)
0xE434E432,	//0x0f56		VoC_and16_rr(REG4,REG6,DEFAULT)	|	VoC_and16_rr(REG2,REG6,DEFAULT)
0xF9457943,	//0x0f58		VoC_shru16_ri(REG5,0x8,IN_PARALLEL)	|	VoC_shru16_ri(REG3,0x8,DEFAULT)
0xC112415B,	//0x0f5a		VoC_add16_rr(REG2,REG4,REG2,IN_PARALLEL)	|	VoC_add16_rr(REG3,REG5,REG3,DEFAULT)
0xC1D241DB,	//0x0f5c		VoC_add16_rr(REG2,REG7,REG2,IN_PARALLEL)	|	VoC_add16_rr(REG3,REG7,REG3,DEFAULT)
0x780AF80B,	//0x0f5e		VoC_shr16_ri(REG2,0x1,DEFAULT)	|	VoC_shr16_ri(REG3,0x1,DEFAULT)
0x79C3DEF3,	//0x0f60		VoC_shru16_ri(REG3,0xfffffff8,DEFAULT)	|	VoC_clipu16_rr(REG3,REG6,IN_PARALLEL)
0xE45ADEF2,	//0x0f62		VoC_or16_rr(REG2,REG3,DEFAULT)	|	VoC_clipu16_rr(REG2,REG6,IN_PARALLEL)
0xDC82FFC0,	//0x0f64		VoC_sw16inc_p(REG2,REG0,DEFAULT)	|	VoC_NOP
		//0x0f65		VoC_endloop0
0xFFC0DFA9,	//0x0f66		VoC_NOP	|	VoC_pop16(RA,DEFAULT)
0xDFE9E580,	//0x0f68		VoC_push16(RA,DEFAULT)	|	VoC_return
		//0x0f69		CS_mp4_qpel16X16_to_8X8X4
0xF0057030,	//0x0f6a		VoC_lw16i_short(INC1,0x1,IN_PARALLEL)	|	VoC_lw16i_short(INC0,0x1,DEFAULT)
0xF0077032,	//0x0f6c		VoC_lw16i_short(INC3,0x1,IN_PARALLEL)	|	VoC_lw16i_short(INC2,0x1,DEFAULT)
0x150EFF01,	//0x0f6e		VoC_sw16_d(RL7_LO,0x2039)(lo)	|	VoC_movreg32(REG23,REG01,DEFAULT)
0x150F2039,	//0x0f70		VoC_sw16_d(RL7_HI,0x2038)(lo)	|	VoC_sw16_d(RL7_LO,0x2039)(hi)
0x70442038,	//0x0f72		VoC_lw16i_short(REG4,0x2,DEFAULT)	|	VoC_sw16_d(RL7_HI,0x2038)(hi)
0x0824E085,	//0x0f74		VoC_mult16_rd(REG4,REG4,0x2039)(lo)	|	VoC_lw16i_short(REG5,0x8,IN_PARALLEL)
0x082D2039,	//0x0f76		VoC_mult16_rd(REG5,REG5,0x2038)(lo)	|	VoC_mult16_rd(REG4,REG4,0x2039)(hi)
0xC0A22038,	//0x0f78		VoC_add16_rr(REG2,REG2,REG4,DEFAULT)	|	VoC_mult16_rd(REG5,REG5,0x2038)(hi)
0xFFC040EB,	//0x0f7a		VoC_NAD(IN_PARALLEL)	|	VoC_add16_rr(REG3,REG3,REG5,DEFAULT)
0x0FA22C10,	//0x0f7c		VoC_loop_i(0x0,0x8)
0x0F892C09,	//0x0f7e		VoC_loop_i(0x1,0x4)
0xD895D894,	//0x0f80		VoC_lw16inc_p(REG5,REG1,DEFAULT)	|	VoC_lw16inc_p(REG4,REG1,DEFAULT)
0xD8B7D8B6,	//0x0f82		VoC_lw16inc_p(REG7,REG3,DEFAULT)	|	VoC_lw16inc_p(REG6,REG3,DEFAULT)
0xF9C779C5,	//0x0f84		VoC_shru16_ri(REG7,0xfffffff8,IN_PARALLEL)	|	VoC_shru16_ri(REG5,0xfffffff8,DEFAULT)
0xE47EE46C,	//0x0f86		VoC_or16_rr(REG6,REG7,DEFAULT)	|	VoC_or16_rr(REG4,REG5,DEFAULT)
0xDCA6DC84,	//0x0f88		VoC_sw16inc_p(REG6,REG2,DEFAULT)	|	VoC_sw16inc_p(REG4,REG0,DEFAULT)
		//0x0f89		VoC_endloop1
0x07A4F084,	//0x0f8a		VoC_sub16_rd(REG4,REG4,0x2039)(lo)	|	VoC_lw16i_short(REG4,0x4,DEFAULT)
0x42202039,	//0x0f8c		VoC_sub16_rr(REG0,REG0,REG4,DEFAULT)	|	VoC_sub16_rd(REG4,REG4,0x2039)(hi)
0x2C09C2A2,	//0x0f8e		VoC_loop_i(0x1,0x4)(lo)	|	VoC_sub16_rr(REG2,REG2,REG4,IN_PARALLEL)
0xD8940F9A,	//0x0f90		VoC_lw16inc_p(REG4,REG1,DEFAULT)	|	VoC_loop_i(0x1,0x4)(hi)
0xD8B6D895,	//0x0f92		VoC_lw16inc_p(REG6,REG3,DEFAULT)	|	VoC_lw16inc_p(REG5,REG1,DEFAULT)
0x79C5D8B7,	//0x0f94		VoC_shru16_ri(REG5,0xfffffff8,DEFAULT)	|	VoC_lw16inc_p(REG7,REG3,DEFAULT)
0xE46CF9C7,	//0x0f96		VoC_or16_rr(REG4,REG5,DEFAULT)	|	VoC_shru16_ri(REG7,0xfffffff8,IN_PARALLEL)
0xDC84E47E,	//0x0f98		VoC_sw16inc_p(REG4,REG0,DEFAULT)	|	VoC_or16_rr(REG6,REG7,DEFAULT)
		//0x0f9a		VoC_endloop1
0xF204DCA6,	//0x0f9a		VoC_lw16i_short(REG4,0x10,DEFAULT)	|	VoC_sw16inc_p(REG6,REG2,DEFAULT)
0x203807A4,	//0x0f9c		VoC_sub16_rd(REG4,REG4,0x2038)
0x20390780,	//0x0f9e		VoC_sub16_rd(REG0,REG0,0x2039)
0x20390792,	//0x0fa0		VoC_sub16_rd(REG2,REG2,0x2039)
		//0x0fa2		VoC_endloop0
0xC2E34261,	//0x0fa2		VoC_sub16_rr(REG3,REG3,REG4,IN_PARALLEL)	|	VoC_sub16_rr(REG1,REG1,REG4,DEFAULT)
0xFFC0DFA9,	//0x0fa4		VoC_NOP	|	VoC_pop16(RA,DEFAULT)
0xDFE9E580,	//0x0fa6		VoC_push16(RA,DEFAULT)	|	VoC_return
		//0x0fa7		CS_mp4_qpel16_mv1_data_dma_in
0x0CBC1400,	//0x0fa8		VoC_lw16_d(REG0,0xcbc)
0xE1217810,	//0x0faa		VoC_lw16i_short(REG1,0x12,IN_PARALLEL)	|	VoC_shr16_ri(REG0,0x2,DEFAULT)
0x0C6F0A82,	//0x0fac		VoC_lw16i(REG2,0xc6f)
0xC218F0A3,	//0x0fae		VoC_sub16_rr(REG0,REG0,REG3,DEFAULT)	|	VoC_lw16i_short(REG3,0x5,DEFAULT)
0x0A8DF00C,	//0x0fb0		VoC_lw16i(RL6_HI,0x1000)(lo)	|	VoC_lw16i_short(RL6_LO,0x0,DEFAULT)
0x2B801000,	//0x0fb2		VoC_jal(Coolsand_MPEG4Run2DDma)(lo)	|	VoC_lw16i(RL6_HI,0x1000)(hi)
0xDFA9024F,	//0x0fb4		VoC_pop16(RA,DEFAULT)	|	VoC_jal(Coolsand_MPEG4Run2DDma)(hi)
0xE580FFC0,	//0x0fb6		VoC_return	|	VoC_NOP
		//0x0fb8		CS_mp4_qpel16_mc
0xFFC05FE9,	//0x0fb8		VoC_NAD(IN_PARALLEL)	|	VoC_push16(RA,DEFAULT)
0x0FA72B80,	//0x0fba		VoC_jal(CS_mp4_qpel16_mv1_data_dma_in)
0xF7037062,	//0x0fbc		VoC_movreg16(REG3,ACC0_LO,IN_PARALLEL)	|	VoC_lw16i_short(REG2,0x3,DEFAULT)
0x0A81E413,	//0x0fbe		VoC_lw16i(REG1,0x18de)(lo)	|	VoC_and16_rr(REG3,REG2,DEFAULT)
0x0A8018DE,	//0x0fc0		VoC_lw16i(REG0,0xd60)(lo)	|	VoC_lw16i(REG1,0x18de)(hi)
0xC0C90D60,	//0x0fc2		VoC_add16_rr(REG1,REG3,REG1,DEFAULT)	|	VoC_lw16i(REG0,0xd60)(hi)
0xE113728F,	//0x0fc4		VoC_lw16i_short(REG3,0x11,IN_PARALLEL)	|	VoC_lw16i_short(RL7_HI,0x14,DEFAULT)
0xDFC0F20E,	//0x0fc6		VoC_push16(REG0,DEFAULT)	|	VoC_lw16i_short(RL7_LO,0x10,DEFAULT)
0x6C11DFC1,	//0x0fc8		VoC_bez16_d(CS_mp4_qpel16_h_end,0x2034)(lo)	|	VoC_push16(REG1,DEFAULT)
0x2B802034,	//0x0fca		VoC_jal(CS_mp4_qpel16_h_lowpass16X16)(lo)	|	VoC_bez16_d(CS_mp4_qpel16_h_end,0x2034)(hi)
0xF0430D82,	//0x0fcc		VoC_lw16i_short(REG3,0x2,DEFAULT)	|	VoC_jal(CS_mp4_qpel16_h_lowpass16X16)(hi)
0x203440A3,	//0x0fce		VoC_be16_rd(CS_mp4_qpel16_h_end,REG3,0x2034)
0xD6207023,	//0x0fd0		VoC_lw16_sd(REG0,0x1,IN_PARALLEL)	|	VoC_lw16i_short(REG3,0x1,DEFAULT)
0x4023D611,	//0x0fd2		VoC_be16_rd(CS_mp4_qpel16_h_add,REG3,0x2034)(lo)	|	VoC_lw16_sd(REG1,0x0,DEFAULT)
0x07092034,	//0x0fd4		VoC_add16_rd(REG1,REG1,0x5e68)(lo)	|	VoC_be16_rd(CS_mp4_qpel16_h_add,REG3,0x2034)(hi)
0xF2235E68,	//0x0fd6		VoC_lw16i_short(REG3,0x11,DEFAULT)	|	VoC_add16_rd(REG1,REG1,0x5e68)(hi)
		//0x0fd7		CS_mp4_qpel16_h_add
0x0F2F2B80,	//0x0fd8		VoC_jal(CS_mp4_qpel16X16_add)
		//0x0fda		CS_mp4_qpel16_h_end
0x20356C1C,	//0x0fda		VoC_bez16_d(CS_mp4_qpel16_v_end,0x2035)
0x20346C0A,	//0x0fdc		VoC_bez16_d(CS_mp4_qpel16_not_change_bufer,0x2034)
0x602EFF38,	//0x0fde		VoC_movreg16(RL7_LO,REG1,DEFAULT)	|	VoC_movreg32(REG01,RL7,DEFAULT)
0xDF80F60F,	//0x0fe0		VoC_pop16(REG0,DEFAULT)	|	VoC_movreg16(RL7_HI,REG0,IN_PARALLEL)
0xDFC0DF81,	//0x0fe2		VoC_push16(REG0,DEFAULT)	|	VoC_pop16(REG1,DEFAULT)
0xFFC05FC1,	//0x0fe4		VoC_NAD(IN_PARALLEL)	|	VoC_push16(REG1,DEFAULT)
		//0x0fe6		CS_mp4_qpel16_not_change_bufer
0x0E4E2B80,	//0x0fe6		VoC_jal(CS_mp4_qpel16_v_lowpass16X16)
0x40ABF043,	//0x0fe8		VoC_be16_rd(CS_mp4_qpel16_v_end,REG3,0x2035)(lo)	|	VoC_lw16i_short(REG3,0x2,DEFAULT)
0x70232035,	//0x0fea		VoC_lw16i_short(REG3,0x1,DEFAULT)	|	VoC_be16_rd(CS_mp4_qpel16_v_end,REG3,0x2035)(hi)
0x5611D620,	//0x0fec		VoC_lw16_sd(REG1,0x0,DEFAULT)	|	VoC_lw16_sd(REG0,0x1,IN_PARALLEL)
0x401BF7E4,	//0x0fee		VoC_be16_rd(CS_mp4_qpel16_v_add,REG3,0x2035)(lo)	|	VoC_movreg16(REG4,RL7_HI,IN_PARALLEL)
0xC0612035,	//0x0ff0		VoC_add16_rr(REG1,REG1,REG4,DEFAULT)	|	VoC_be16_rd(CS_mp4_qpel16_v_add,REG3,0x2035)(hi)
		//0x0ff2		CS_mp4_qpel16_v_add
0xFFC07203,	//0x0ff2		VoC_NAD(IN_PARALLEL)	|	VoC_lw16i_short(REG3,0x10,DEFAULT)
0x0F2F2B80,	//0x0ff4		VoC_jal(CS_mp4_qpel16X16_add)
		//0x0ff6		CS_mp4_qpel16_v_end
0xE20E61CF,	//0x0ff6		VoC_lw16i_short(RL7_LO,0x20,IN_PARALLEL)	|	VoC_movreg16(RL7_HI,RL7_LO,DEFAULT)
0x0CF00A80,	//0x0ff8		VoC_lw16i(REG0,0xcf0)
0x2B80D621,	//0x0ffa		VoC_jal(CS_mp4_qpel16X16_to_8X8X4)(lo)	|	VoC_lw16_sd(REG1,0x1,DEFAULT)
0xDF800F69,	//0x0ffc		VoC_pop16(REG0,DEFAULT)	|	VoC_jal(CS_mp4_qpel16X16_to_8X8X4)(hi)
0xDFA9DF81,	//0x0ffe		VoC_pop16(RA,DEFAULT)	|	VoC_pop16(REG1,DEFAULT)
0xE580FFC0,	//0x1000		VoC_return	|	VoC_NOP
		//0x1002		CS_transfer16x16_copy_c
0xFF235FE9,	//0x1002		VoC_movreg32(REG67,ACC0,IN_PARALLEL)	|	VoC_push16(RA,DEFAULT)
0xE0007A14,	//0x1004		VoC_lw16i_short(REG0,0x0,IN_PARALLEL)	|	VoC_shr32_ri(ACC0,0x2,DEFAULT)
0x4AE3FBF4,	//0x1006		VoC_sub32_rr(REG67,REG67,ACC0,DEFAULT)	|	VoC_shr32_ri(ACC0,0xfffffffe,DEFAULT)
0x7050DF46,	//0x1008		VoC_lw16i_short(INC0,0x2,DEFAULT)	|	VoC_push32(RL6,IN_PARALLEL)
0x3586DFC2,	//0x100a		VoC_bne16_rr(CS_transfer16x16_copy_c01,REG0,REG6)(lo)	|	VoC_push16(REG2,IN_PARALLEL)
0x1400102F,	//0x100c		VoC_lw16_d(REG0,0xcbc)(lo)	|	VoC_bne16_rr(CS_transfer16x16_copy_c01,REG0,REG6)(hi)
0x78100CBC,	//0x100e		VoC_shr16_ri(REG0,0x2,DEFAULT)	|	VoC_lw16_d(REG0,0xcbc)(hi)
0x0A82E101,	//0x1010		VoC_lw16i(REG2,0xc6f)(lo)	|	VoC_lw16i_short(REG1,0x10,IN_PARALLEL)
0xF0830C6F,	//0x1012		VoC_lw16i_short(REG3,0x4,DEFAULT)	|	VoC_lw16i(REG2,0xc6f)(hi)
0xFF464218,	//0x1014		VoC_lw32z(RL6,IN_PARALLEL)	|	VoC_sub16_rr(REG0,REG0,REG3,DEFAULT)
0x024F2B80,	//0x1016		VoC_jal(Coolsand_MPEG4Run2DDma)
0x0CF01808,	//0x1018		VoC_lw16i_set_inc(REG0,0xcf0,0x2)
0x0D10180B,	//0x101a		VoC_lw16i_set_inc(REG3,0xd10,0x2)
0x18DE1809,	//0x101c		VoC_lw16i_set_inc(REG1,0x18de,0x2)
0x102B2C05,	//0x101e		VoC_loop_i(0x1,0x2)
0xD9CCE908,	//0x1020		VoC_lw32inc_p(ACC0,REG1,DEFAULT)	|	VoC_loop_i_short(0x8,DEFAULT)
0xDDC4D9CD,	//0x1022		VoC_sw32inc_p(ACC0,REG0,DEFAULT)	|	VoC_lw32inc_p(ACC1,REG1,DEFAULT)
0xD9CCDDC5,	//0x1024		VoC_lw32inc_p(ACC0,REG1,DEFAULT)	|	VoC_sw32inc_p(ACC1,REG0,DEFAULT)
0xDDDCD9CD,	//0x1026		VoC_sw32inc_p(ACC0,REG3,DEFAULT)	|	VoC_lw32inc_p(ACC1,REG1,DEFAULT)
		//0x1028		VoC_endloop0
0x1808DDDD,	//0x1028		VoC_lw16i_set_inc(REG0,0xd30,0x2)(lo)	|	VoC_sw32inc_p(ACC1,REG3,DEFAULT)
0x180B0D30,	//0x102a		VoC_lw16i_set_inc(REG3,0xd50,0x2)(lo)	|	VoC_lw16i_set_inc(REG0,0xd30,0x2)(hi)
		//0x102b		VoC_endloop1
0x2B000D50,	//0x102c		VoC_jump_lg(CS_transfer16x16_copy_c03)(lo)	|	VoC_lw16i_set_inc(REG3,0xd50,0x2)(hi)
0xDE0010BA,	//0x102e		VoC_inc_p(REG0,DEFAULT)	|	VoC_jump_lg(CS_transfer16x16_copy_c03)(hi)
		//0x102f		CS_transfer16x16_copy_c01
0x105E3586,	//0x1030		VoC_bne16_rr(CS_transfer16x16_copy_c02,REG0,REG6)
0x0CBC1400,	//0x1032		VoC_lw16_d(REG0,0xcbc)
0xFA147810,	//0x1034		VoC_shr32_ri(ACC0,0x2,IN_PARALLEL)	|	VoC_shr16_ri(REG0,0x2,DEFAULT)
0xE1417BF4,	//0x1036		VoC_lw16i_short(REG1,0x14,IN_PARALLEL)	|	VoC_shr32_ri(ACC0,0xfffffffe,DEFAULT)
0x0C6F0A82,	//0x1038		VoC_lw16i(REG2,0xc6f)
0x4218F0A3,	//0x103a		VoC_sub16_rr(REG0,REG0,REG3,DEFAULT)	|	VoC_lw16i_short(REG3,0x5,DEFAULT)
0xFFC0FF46,	//0x103c		VoC_NAD	|	VoC_lw32z(RL6,IN_PARALLEL)
0x024F2B80,	//0x103e		VoC_jal(Coolsand_MPEG4Run2DDma)
0x0CF01808,	//0x1040		VoC_lw16i_set_inc(REG0,0xcf0,0x2)
0x0D10180B,	//0x1042		VoC_lw16i_set_inc(REG3,0xd10,0x2)
0x18DE1805,	//0x1044		VoC_lw16i_set_inc(REG1,0x18de,0x1)
0x10592C05,	//0x1046		VoC_loop_i(0x1,0x2)
0xDE08E90E,	//0x1048		VoC_inc_p(REG1,DEFAULT)	|	VoC_loop_i_short(0x8,DEFAULT)
0xD897D896,	//0x104a		VoC_lw16inc_p(REG7,REG1,DEFAULT)	|	VoC_lw16inc_p(REG6,REG1,DEFAULT)
0xD895D894,	//0x104c		VoC_lw16inc_p(REG5,REG1,DEFAULT)	|	VoC_lw16inc_p(REG4,REG1,DEFAULT)
0xDDC2DDC3,	//0x104e		VoC_sw32inc_p(REG45,REG0,DEFAULT)	|	VoC_sw32inc_p(REG67,REG0,DEFAULT)
0xD897D896,	//0x1050		VoC_lw16inc_p(REG7,REG1,DEFAULT)	|	VoC_lw16inc_p(REG6,REG1,DEFAULT)
0xD895D894,	//0x1052		VoC_lw16inc_p(REG5,REG1,DEFAULT)	|	VoC_lw16inc_p(REG4,REG1,DEFAULT)
0xDDDADDDB,	//0x1054		VoC_sw32inc_p(REG45,REG3,DEFAULT)	|	VoC_sw32inc_p(REG67,REG3,DEFAULT)
		//0x1056		VoC_endloop0
0x1808DE08,	//0x1056		VoC_lw16i_set_inc(REG0,0xd30,0x2)(lo)	|	VoC_inc_p(REG1,DEFAULT)
0x180B0D30,	//0x1058		VoC_lw16i_set_inc(REG3,0xd50,0x2)(lo)	|	VoC_lw16i_set_inc(REG0,0xd30,0x2)(hi)
		//0x1059		VoC_endloop1
0x2B000D50,	//0x105a		VoC_jump_lg(CS_transfer16x16_copy_c03)(lo)	|	VoC_lw16i_set_inc(REG3,0xd50,0x2)(hi)
0xFFC010BA,	//0x105c		VoC_NAD	|	VoC_jump_lg(CS_transfer16x16_copy_c03)(hi)
		//0x105e		CS_transfer16x16_copy_c02
0x0CBC1400,	//0x105e		VoC_lw16_d(REG0,0xcbc)
0xFA147810,	//0x1060		VoC_shr32_ri(ACC0,0x2,IN_PARALLEL)	|	VoC_shr16_ri(REG0,0x2,DEFAULT)
0xE1417BF4,	//0x1062		VoC_lw16i_short(REG1,0x14,IN_PARALLEL)	|	VoC_shr32_ri(ACC0,0xfffffffe,DEFAULT)
0x0C6F0A82,	//0x1064		VoC_lw16i(REG2,0xc6f)
0x4218F0A3,	//0x1066		VoC_sub16_rr(REG0,REG0,REG3,DEFAULT)	|	VoC_lw16i_short(REG3,0x5,DEFAULT)
0x0A8DE00C,	//0x1068		VoC_lw16i(RL6_HI,0x1000)(lo)	|	VoC_lw16i_short(RL6_LO,0x0,IN_PARALLEL)
0xFFC01000,	//0x106a		VoC_NAD	|	VoC_lw16i(RL6_HI,0x1000)(hi)
0x024F2B80,	//0x106c		VoC_jal(Coolsand_MPEG4Run2DDma)
0x0CF01804,	//0x106e		VoC_lw16i_set_inc(REG0,0xcf0,0x1)
0x0D101807,	//0x1070		VoC_lw16i_set_inc(REG3,0xd10,0x1)
0x18DE1805,	//0x1072		VoC_lw16i_set_inc(REG1,0x18de,0x1)
0xFFC04071,	//0x1074		VoC_NAD(IN_PARALLEL)	|	VoC_add16_rr(REG1,REG1,REG6,DEFAULT)
0x10B82C05,	//0x1076		VoC_loop_i(0x1,0x2)
0x10B42C10,	//0x1078		VoC_loop_i(0x0,0x8)
0xD897D896,	//0x107a		VoC_lw16inc_p(REG7,REG1,DEFAULT)	|	VoC_lw16inc_p(REG6,REG1,DEFAULT)
0x00FF1606,	//0x107c		VoC_and16_ri(REG6,0xff)
0xD89479C7,	//0x107e		VoC_lw16inc_p(REG4,REG1,IN_PARALLEL)	|	VoC_shru16_ri(REG7,0xfffffff8,DEFAULT)
0xD895647E,	//0x1080		VoC_lw16inc_p(REG5,REG1,IN_PARALLEL)	|	VoC_or16_rr(REG6,REG7,DEFAULT)
0x00FF1604,	//0x1082		VoC_and16_ri(REG4,0xff)
0xDC8679C5,	//0x1084		VoC_sw16inc_p(REG6,REG0,IN_PARALLEL)	|	VoC_shru16_ri(REG5,0xfffffff8,DEFAULT)
0xD896646C,	//0x1086		VoC_lw16inc_p(REG6,REG1,IN_PARALLEL)	|	VoC_or16_rr(REG4,REG5,DEFAULT)
0x00FF1606,	//0x1088		VoC_and16_ri(REG6,0xff)
0xDC84D897,	//0x108a		VoC_sw16inc_p(REG4,REG0,DEFAULT)	|	VoC_lw16inc_p(REG7,REG1,DEFAULT)
0xD89479C7,	//0x108c		VoC_lw16inc_p(REG4,REG1,IN_PARALLEL)	|	VoC_shru16_ri(REG7,0xfffffff8,DEFAULT)
0xD895647E,	//0x108e		VoC_lw16inc_p(REG5,REG1,IN_PARALLEL)	|	VoC_or16_rr(REG6,REG7,DEFAULT)
0x00FF1604,	//0x1090		VoC_and16_ri(REG4,0xff)
0xDC8679C5,	//0x1092		VoC_sw16inc_p(REG6,REG0,IN_PARALLEL)	|	VoC_shru16_ri(REG5,0xfffffff8,DEFAULT)
0xD896646C,	//0x1094		VoC_lw16inc_p(REG6,REG1,IN_PARALLEL)	|	VoC_or16_rr(REG4,REG5,DEFAULT)
0x00FF1606,	//0x1096		VoC_and16_ri(REG6,0xff)
0xDC84D897,	//0x1098		VoC_sw16inc_p(REG4,REG0,DEFAULT)	|	VoC_lw16inc_p(REG7,REG1,DEFAULT)
0xD89479C7,	//0x109a		VoC_lw16inc_p(REG4,REG1,IN_PARALLEL)	|	VoC_shru16_ri(REG7,0xfffffff8,DEFAULT)
0xD895647E,	//0x109c		VoC_lw16inc_p(REG5,REG1,IN_PARALLEL)	|	VoC_or16_rr(REG6,REG7,DEFAULT)
0x00FF1604,	//0x109e		VoC_and16_ri(REG4,0xff)
0xDCB679C5,	//0x10a0		VoC_sw16inc_p(REG6,REG3,IN_PARALLEL)	|	VoC_shru16_ri(REG5,0xfffffff8,DEFAULT)
0xD896646C,	//0x10a2		VoC_lw16inc_p(REG6,REG1,IN_PARALLEL)	|	VoC_or16_rr(REG4,REG5,DEFAULT)
0x00FF1606,	//0x10a4		VoC_and16_ri(REG6,0xff)
0xDCB4D897,	//0x10a6		VoC_sw16inc_p(REG4,REG3,DEFAULT)	|	VoC_lw16inc_p(REG7,REG1,DEFAULT)
0xD89479C7,	//0x10a8		VoC_lw16inc_p(REG4,REG1,IN_PARALLEL)	|	VoC_shru16_ri(REG7,0xfffffff8,DEFAULT)
0xD895647E,	//0x10aa		VoC_lw16inc_p(REG5,REG1,IN_PARALLEL)	|	VoC_or16_rr(REG6,REG7,DEFAULT)
0x00FF1604,	//0x10ac		VoC_and16_ri(REG4,0xff)
0xDCB679C5,	//0x10ae		VoC_sw16inc_p(REG6,REG3,IN_PARALLEL)	|	VoC_shru16_ri(REG5,0xfffffff8,DEFAULT)
0x646CDE08,	//0x10b0		VoC_or16_rr(REG4,REG5,DEFAULT)	|	VoC_inc_p(REG1,DEFAULT)
0xDE08DE08,	//0x10b2		VoC_inc_p(REG1,DEFAULT)	|	VoC_inc_p(REG1,IN_PARALLEL)
		//0x10b4		VoC_endloop0
0xDCB45E08,	//0x10b4		VoC_sw16inc_p(REG4,REG3,IN_PARALLEL)	|	VoC_inc_p(REG1,DEFAULT)
0x0D301804,	//0x10b6		VoC_lw16i_set_inc(REG0,0xd30,0x1)
		//0x10b8		VoC_endloop1
0x0D501807,	//0x10b8		VoC_lw16i_set_inc(REG3,0xd50,0x1)
		//0x10ba		CS_transfer16x16_copy_c03
0xDFA9DF82,	//0x10ba		VoC_pop16(RA,DEFAULT)	|	VoC_pop16(REG2,DEFAULT)
0xE580DF06,	//0x10bc		VoC_return	|	VoC_pop32(RL6,DEFAULT)
		//0x10be		CS_interpolate16x16_halfpel_v_c
0xFF235FE9,	//0x10be		VoC_movreg32(REG67,ACC0,IN_PARALLEL)	|	VoC_push16(RA,DEFAULT)
0xE0007A13,	//0x10c0		VoC_lw16i_short(REG0,0x0,IN_PARALLEL)	|	VoC_shr32_ri(REG67,0x2,DEFAULT)
0xF0087BF3,	//0x10c2		VoC_lw16i_short(INC0,0x2,IN_PARALLEL)	|	VoC_shr32_ri(REG67,0xfffffffe,DEFAULT)
0xDF464B1B,	//0x10c4		VoC_push32(RL6,IN_PARALLEL)	|	VoC_sub32_rr(REG67,ACC0,REG67,DEFAULT)
0x1400DFC2,	//0x10c6		VoC_lw16_d(REG0,0xcbc)(lo)	|	VoC_push16(REG2,DEFAULT)
0x78100CBC,	//0x10c8		VoC_shr16_ri(REG0,0x2,DEFAULT)	|	VoC_lw16_d(REG0,0xcbc)(hi)
0x7BF4FA14,	//0x10ca		VoC_shr32_ri(ACC0,0xfffffffe,DEFAULT)	|	VoC_shr32_ri(ACC0,0x2,IN_PARALLEL)
0x0A82E141,	//0x10cc		VoC_lw16i(REG2,0xc6f)(lo)	|	VoC_lw16i_short(REG1,0x14,IN_PARALLEL)
0xF0A30C6F,	//0x10ce		VoC_lw16i_short(REG3,0x5,DEFAULT)	|	VoC_lw16i(REG2,0xc6f)(hi)
0xE00C4218,	//0x10d0		VoC_lw16i_short(RL6_LO,0x0,IN_PARALLEL)	|	VoC_sub16_rr(REG0,REG0,REG3,DEFAULT)
0x10000A8D,	//0x10d2		VoC_lw16i(RL6_HI,0x1000)
0x024F2B80,	//0x10d4		VoC_jal(Coolsand_MPEG4Run2DDma)
0x0CF01804,	//0x10d6		VoC_lw16i_set_inc(REG0,0xcf0,0x1)
0x0D101807,	//0x10d8		VoC_lw16i_set_inc(REG3,0xd10,0x1)
0x18DE1805,	//0x10da		VoC_lw16i_set_inc(REG1,0x18de,0x1)
0xE1444071,	//0x10dc		VoC_lw16i_short(REG4,0x14,IN_PARALLEL)	|	VoC_add16_rr(REG1,REG1,REG6,DEFAULT)
0xE0144062,	//0x10de		VoC_lw16i_short(REG4,0x1,IN_PARALLEL)	|	VoC_add16_rr(REG2,REG1,REG4,DEFAULT)
0x0CBB07A4,	//0x10e0		VoC_sub16_rd(REG4,REG4,0xcbb)
0xE0457032,	//0x10e2		VoC_lw16i_short(REG5,0x4,IN_PARALLEL)	|	VoC_lw16i_short(INC2,0x1,DEFAULT)
0x11042C11,	//0x10e4		VoC_loop_i(0x1,0x8)
0xD896E88E,	//0x10e6		VoC_lw16inc_p(REG6,REG1,DEFAULT)	|	VoC_loop_i_short(0x4,DEFAULT)
0x41A68396,	//0x10e8		VoC_add16_rr(REG6,REG6,REG4,DEFAULT)	|	VoC_add16inc_rp(REG6,REG6,REG2,DEFAULT)
0x03D7D897,	//0x10ea		VoC_add16inc_rp(REG7,REG7,REG2,DEFAULT)	|	VoC_lw16inc_p(REG7,REG1,IN_PARALLEL)
0xC1E7F80E,	//0x10ec		VoC_add16_rr(REG7,REG7,REG4,DEFAULT)	|	VoC_shr16_ri(REG6,0x1,IN_PARALLEL)
0x1606F80F,	//0x10ee		VoC_and16_ri(REG6,0xff)(lo)	|	VoC_shr16_ri(REG7,0x1,DEFAULT)
0xF9C700FF,	//0x10f0		VoC_shru16_ri(REG7,0xfffffff8,DEFAULT)	|	VoC_and16_ri(REG6,0xff)(hi)
0xFFC0E47E,	//0x10f2		VoC_NOP	|	VoC_or16_rr(REG6,REG7,DEFAULT)
		//0x10f4		VoC_endloop0
0xE88EDC86,	//0x10f4		VoC_loop_i_short(0x4,DEFAULT)	|	VoC_sw16inc_p(REG6,REG0,DEFAULT)
0x8396D896,	//0x10f6		VoC_add16inc_rp(REG6,REG6,REG2,DEFAULT)	|	VoC_lw16inc_p(REG6,REG1,DEFAULT)
0xD89741A6,	//0x10f8		VoC_lw16inc_p(REG7,REG1,IN_PARALLEL)	|	VoC_add16_rr(REG6,REG6,REG4,DEFAULT)
0xF80E03D7,	//0x10fa		VoC_shr16_ri(REG6,0x1,IN_PARALLEL)	|	VoC_add16inc_rp(REG7,REG7,REG2,DEFAULT)
0xF80FC1E7,	//0x10fc		VoC_shr16_ri(REG7,0x1,DEFAULT)	|	VoC_add16_rr(REG7,REG7,REG4,DEFAULT)
0x00FF1606,	//0x10fe		VoC_and16_ri(REG6,0xff)
0xE47EF9C7,	//0x1100		VoC_or16_rr(REG6,REG7,DEFAULT)	|	VoC_shru16_ri(REG7,0xfffffff8,DEFAULT)
0xDCB6FFC0,	//0x1102		VoC_sw16inc_p(REG6,REG3,DEFAULT)	|	VoC_NOP
		//0x1103		VoC_endloop0
		//0x1104		VoC_endloop1
0xC0AA4069,	//0x1104		VoC_add16_rr(REG2,REG2,REG5,IN_PARALLEL)	|	VoC_add16_rr(REG1,REG1,REG5,DEFAULT)
0x0D301804,	//0x1106		VoC_lw16i_set_inc(REG0,0xd30,0x1)
0x0D501807,	//0x1108		VoC_lw16i_set_inc(REG3,0xd50,0x1)
0x112A2C11,	//0x110a		VoC_loop_i(0x1,0x8)
0xD896E88E,	//0x110c		VoC_lw16inc_p(REG6,REG1,DEFAULT)	|	VoC_loop_i_short(0x4,DEFAULT)
0x41A68396,	//0x110e		VoC_add16_rr(REG6,REG6,REG4,DEFAULT)	|	VoC_add16inc_rp(REG6,REG6,REG2,DEFAULT)
0x03D7D897,	//0x1110		VoC_add16inc_rp(REG7,REG7,REG2,DEFAULT)	|	VoC_lw16inc_p(REG7,REG1,IN_PARALLEL)
0xC1E7F80E,	//0x1112		VoC_add16_rr(REG7,REG7,REG4,DEFAULT)	|	VoC_shr16_ri(REG6,0x1,IN_PARALLEL)
0x1606F80F,	//0x1114		VoC_and16_ri(REG6,0xff)(lo)	|	VoC_shr16_ri(REG7,0x1,DEFAULT)
0xF9C700FF,	//0x1116		VoC_shru16_ri(REG7,0xfffffff8,DEFAULT)	|	VoC_and16_ri(REG6,0xff)(hi)
0xFFC0E47E,	//0x1118		VoC_NOP	|	VoC_or16_rr(REG6,REG7,DEFAULT)
		//0x111a		VoC_endloop0
0xE88EDC86,	//0x111a		VoC_loop_i_short(0x4,DEFAULT)	|	VoC_sw16inc_p(REG6,REG0,DEFAULT)
0x8396D896,	//0x111c		VoC_add16inc_rp(REG6,REG6,REG2,DEFAULT)	|	VoC_lw16inc_p(REG6,REG1,DEFAULT)
0xD89741A6,	//0x111e		VoC_lw16inc_p(REG7,REG1,IN_PARALLEL)	|	VoC_add16_rr(REG6,REG6,REG4,DEFAULT)
0xF80E03D7,	//0x1120		VoC_shr16_ri(REG6,0x1,IN_PARALLEL)	|	VoC_add16inc_rp(REG7,REG7,REG2,DEFAULT)
0xF80FC1E7,	//0x1122		VoC_shr16_ri(REG7,0x1,DEFAULT)	|	VoC_add16_rr(REG7,REG7,REG4,DEFAULT)
0x00FF1606,	//0x1124		VoC_and16_ri(REG6,0xff)
0xE47EF9C7,	//0x1126		VoC_or16_rr(REG6,REG7,DEFAULT)	|	VoC_shru16_ri(REG7,0xfffffff8,DEFAULT)
0xDCB6FFC0,	//0x1128		VoC_sw16inc_p(REG6,REG3,DEFAULT)	|	VoC_NOP
		//0x1129		VoC_endloop0
		//0x112a		VoC_endloop1
0xC0AA4069,	//0x112a		VoC_add16_rr(REG2,REG2,REG5,IN_PARALLEL)	|	VoC_add16_rr(REG1,REG1,REG5,DEFAULT)
0xDFA9DF82,	//0x112c		VoC_pop16(RA,DEFAULT)	|	VoC_pop16(REG2,DEFAULT)
0xE580DF06,	//0x112e		VoC_return	|	VoC_pop32(RL6,DEFAULT)
		//0x1130		CS_interpolate16x16_halfpel_h_c
0xFF235FE9,	//0x1130		VoC_movreg32(REG67,ACC0,IN_PARALLEL)	|	VoC_push16(RA,DEFAULT)
0xE0007A13,	//0x1132		VoC_lw16i_short(REG0,0x0,IN_PARALLEL)	|	VoC_shr32_ri(REG67,0x2,DEFAULT)
0xF0087BF3,	//0x1134		VoC_lw16i_short(INC0,0x2,IN_PARALLEL)	|	VoC_shr32_ri(REG67,0xfffffffe,DEFAULT)
0xDF464B1B,	//0x1136		VoC_push32(RL6,IN_PARALLEL)	|	VoC_sub32_rr(REG67,ACC0,REG67,DEFAULT)
0x1400DFC2,	//0x1138		VoC_lw16_d(REG0,0xcbc)(lo)	|	VoC_push16(REG2,DEFAULT)
0x78100CBC,	//0x113a		VoC_shr16_ri(REG0,0x2,DEFAULT)	|	VoC_lw16_d(REG0,0xcbc)(hi)
0x7BF4FA14,	//0x113c		VoC_shr32_ri(ACC0,0xfffffffe,DEFAULT)	|	VoC_shr32_ri(ACC0,0x2,IN_PARALLEL)
0x0A82E141,	//0x113e		VoC_lw16i(REG2,0xc6f)(lo)	|	VoC_lw16i_short(REG1,0x14,IN_PARALLEL)
0xF0A30C6F,	//0x1140		VoC_lw16i_short(REG3,0x5,DEFAULT)	|	VoC_lw16i(REG2,0xc6f)(hi)
0xE00C4218,	//0x1142		VoC_lw16i_short(RL6_LO,0x0,IN_PARALLEL)	|	VoC_sub16_rr(REG0,REG0,REG3,DEFAULT)
0x10000A8D,	//0x1144		VoC_lw16i(RL6_HI,0x1000)
0x024F2B80,	//0x1146		VoC_jal(Coolsand_MPEG4Run2DDma)
0x0CF01804,	//0x1148		VoC_lw16i_set_inc(REG0,0xcf0,0x1)
0x0D101807,	//0x114a		VoC_lw16i_set_inc(REG3,0xd10,0x1)
0x18DE1805,	//0x114c		VoC_lw16i_set_inc(REG1,0x18de,0x1)
0xE1444071,	//0x114e		VoC_lw16i_short(REG4,0x14,IN_PARALLEL)	|	VoC_add16_rr(REG1,REG1,REG6,DEFAULT)
0xE0144062,	//0x1150		VoC_lw16i_short(REG4,0x1,IN_PARALLEL)	|	VoC_add16_rr(REG2,REG1,REG4,DEFAULT)
0x0CBB07A4,	//0x1152		VoC_sub16_rd(REG4,REG4,0xcbb)
0xF085F032,	//0x1154		VoC_lw16i_short(REG5,0x4,DEFAULT)	|	VoC_lw16i_short(INC2,0x1,DEFAULT)
0x11762C11,	//0x1156		VoC_loop_i(0x1,0x8)
0xD896E88E,	//0x1158		VoC_lw16inc_p(REG6,REG1,DEFAULT)	|	VoC_loop_i_short(0x4,DEFAULT)
0x41A6818E,	//0x115a		VoC_add16_rr(REG6,REG6,REG4,DEFAULT)	|	VoC_add16_rp(REG6,REG6,REG1,DEFAULT)
0x01CFD897,	//0x115c		VoC_add16_rp(REG7,REG7,REG1,DEFAULT)	|	VoC_lw16inc_p(REG7,REG1,IN_PARALLEL)
0xC1E7F80E,	//0x115e		VoC_add16_rr(REG7,REG7,REG4,DEFAULT)	|	VoC_shr16_ri(REG6,0x1,IN_PARALLEL)
0x1606F80F,	//0x1160		VoC_and16_ri(REG6,0xff)(lo)	|	VoC_shr16_ri(REG7,0x1,DEFAULT)
0xF9C700FF,	//0x1162		VoC_shru16_ri(REG7,0xfffffff8,DEFAULT)	|	VoC_and16_ri(REG6,0xff)(hi)
0xFFC0E47E,	//0x1164		VoC_NOP	|	VoC_or16_rr(REG6,REG7,DEFAULT)
		//0x1166		VoC_endloop0
0xE88EDC86,	//0x1166		VoC_loop_i_short(0x4,DEFAULT)	|	VoC_sw16inc_p(REG6,REG0,DEFAULT)
0x818ED896,	//0x1168		VoC_add16_rp(REG6,REG6,REG1,DEFAULT)	|	VoC_lw16inc_p(REG6,REG1,DEFAULT)
0xD89741A6,	//0x116a		VoC_lw16inc_p(REG7,REG1,IN_PARALLEL)	|	VoC_add16_rr(REG6,REG6,REG4,DEFAULT)
0xF80E01CF,	//0x116c		VoC_shr16_ri(REG6,0x1,IN_PARALLEL)	|	VoC_add16_rp(REG7,REG7,REG1,DEFAULT)
0xF80FC1E7,	//0x116e		VoC_shr16_ri(REG7,0x1,DEFAULT)	|	VoC_add16_rr(REG7,REG7,REG4,DEFAULT)
0x00FF1606,	//0x1170		VoC_and16_ri(REG6,0xff)
0xE47EF9C7,	//0x1172		VoC_or16_rr(REG6,REG7,DEFAULT)	|	VoC_shru16_ri(REG7,0xfffffff8,DEFAULT)
0xDCB6FFC0,	//0x1174		VoC_sw16inc_p(REG6,REG3,DEFAULT)	|	VoC_NOP
		//0x1175		VoC_endloop0
		//0x1176		VoC_endloop1
0x1804C069,	//0x1176		VoC_lw16i_set_inc(REG0,0xd30,0x1)(lo)	|	VoC_add16_rr(REG1,REG1,REG5,DEFAULT)
0x18070D30,	//0x1178		VoC_lw16i_set_inc(REG3,0xd50,0x1)(lo)	|	VoC_lw16i_set_inc(REG0,0xd30,0x1)(hi)
0x2C110D50,	//0x117a		VoC_loop_i(0x1,0x8)(lo)	|	VoC_lw16i_set_inc(REG3,0xd50,0x1)(hi)
0xE88E119B,	//0x117c		VoC_loop_i_short(0x4,DEFAULT)	|	VoC_loop_i(0x1,0x8)(hi)
0x818ED896,	//0x117e		VoC_add16_rp(REG6,REG6,REG1,DEFAULT)	|	VoC_lw16inc_p(REG6,REG1,DEFAULT)
0xD89741A6,	//0x1180		VoC_lw16inc_p(REG7,REG1,IN_PARALLEL)	|	VoC_add16_rr(REG6,REG6,REG4,DEFAULT)
0xF80E01CF,	//0x1182		VoC_shr16_ri(REG6,0x1,IN_PARALLEL)	|	VoC_add16_rp(REG7,REG7,REG1,DEFAULT)
0xF80FC1E7,	//0x1184		VoC_shr16_ri(REG7,0x1,DEFAULT)	|	VoC_add16_rr(REG7,REG7,REG4,DEFAULT)
0x00FF1606,	//0x1186		VoC_and16_ri(REG6,0xff)
0xE47EF9C7,	//0x1188		VoC_or16_rr(REG6,REG7,DEFAULT)	|	VoC_shru16_ri(REG7,0xfffffff8,DEFAULT)
0xDC86FFC0,	//0x118a		VoC_sw16inc_p(REG6,REG0,DEFAULT)	|	VoC_NOP
		//0x118b		VoC_endloop0
0xD896E88E,	//0x118c		VoC_lw16inc_p(REG6,REG1,DEFAULT)	|	VoC_loop_i_short(0x4,DEFAULT)
0x41A6818E,	//0x118e		VoC_add16_rr(REG6,REG6,REG4,DEFAULT)	|	VoC_add16_rp(REG6,REG6,REG1,DEFAULT)
0x01CFD897,	//0x1190		VoC_add16_rp(REG7,REG7,REG1,DEFAULT)	|	VoC_lw16inc_p(REG7,REG1,IN_PARALLEL)
0xC1E7F80E,	//0x1192		VoC_add16_rr(REG7,REG7,REG4,DEFAULT)	|	VoC_shr16_ri(REG6,0x1,IN_PARALLEL)
0x1606F80F,	//0x1194		VoC_and16_ri(REG6,0xff)(lo)	|	VoC_shr16_ri(REG7,0x1,DEFAULT)
0xF9C700FF,	//0x1196		VoC_shru16_ri(REG7,0xfffffff8,DEFAULT)	|	VoC_and16_ri(REG6,0xff)(hi)
0xFFC0E47E,	//0x1198		VoC_NOP	|	VoC_or16_rr(REG6,REG7,DEFAULT)
		//0x119a		VoC_endloop0
0xC069DCB6,	//0x119a		VoC_add16_rr(REG1,REG1,REG5,DEFAULT)	|	VoC_sw16inc_p(REG6,REG3,DEFAULT)
		//0x119b		VoC_endloop1
0xDFA9DF82,	//0x119c		VoC_pop16(RA,DEFAULT)	|	VoC_pop16(REG2,DEFAULT)
0xE580DF06,	//0x119e		VoC_return	|	VoC_pop32(RL6,DEFAULT)
		//0x11a0		CS_interpolate16x16_halfpel_hv_c
0xFF235FE9,	//0x11a0		VoC_movreg32(REG67,ACC0,IN_PARALLEL)	|	VoC_push16(RA,DEFAULT)
0xE0007A13,	//0x11a2		VoC_lw16i_short(REG0,0x0,IN_PARALLEL)	|	VoC_shr32_ri(REG67,0x2,DEFAULT)
0xF0087BF3,	//0x11a4		VoC_lw16i_short(INC0,0x2,IN_PARALLEL)	|	VoC_shr32_ri(REG67,0xfffffffe,DEFAULT)
0xDF464B1B,	//0x11a6		VoC_push32(RL6,IN_PARALLEL)	|	VoC_sub32_rr(REG67,ACC0,REG67,DEFAULT)
0x1400DFC2,	//0x11a8		VoC_lw16_d(REG0,0xcbc)(lo)	|	VoC_push16(REG2,DEFAULT)
0x78100CBC,	//0x11aa		VoC_shr16_ri(REG0,0x2,DEFAULT)	|	VoC_lw16_d(REG0,0xcbc)(hi)
0x7BF4FA14,	//0x11ac		VoC_shr32_ri(ACC0,0xfffffffe,DEFAULT)	|	VoC_shr32_ri(ACC0,0x2,IN_PARALLEL)
0x0A82E141,	//0x11ae		VoC_lw16i(REG2,0xc6f)(lo)	|	VoC_lw16i_short(REG1,0x14,IN_PARALLEL)
0xF0A30C6F,	//0x11b0		VoC_lw16i_short(REG3,0x5,DEFAULT)	|	VoC_lw16i(REG2,0xc6f)(hi)
0xE00C4218,	//0x11b2		VoC_lw16i_short(RL6_LO,0x0,IN_PARALLEL)	|	VoC_sub16_rr(REG0,REG0,REG3,DEFAULT)
0x10000A8D,	//0x11b4		VoC_lw16i(RL6_HI,0x1000)
0x024F2B80,	//0x11b6		VoC_jal(Coolsand_MPEG4Run2DDma)
0x0CF01804,	//0x11b8		VoC_lw16i_set_inc(REG0,0xcf0,0x1)
0x0D101807,	//0x11ba		VoC_lw16i_set_inc(REG3,0xd10,0x1)
0x18DE1805,	//0x11bc		VoC_lw16i_set_inc(REG1,0x18de,0x1)
0xE1444071,	//0x11be		VoC_lw16i_short(REG4,0x14,IN_PARALLEL)	|	VoC_add16_rr(REG1,REG1,REG6,DEFAULT)
0xE0244062,	//0x11c0		VoC_lw16i_short(REG4,0x2,IN_PARALLEL)	|	VoC_add16_rr(REG2,REG1,REG4,DEFAULT)
0x0CBB07A4,	//0x11c2		VoC_sub16_rd(REG4,REG4,0xcbb)
0xF085F032,	//0x11c4		VoC_lw16i_short(REG5,0x4,DEFAULT)	|	VoC_lw16i_short(INC2,0x1,DEFAULT)
0x11EE2C11,	//0x11c6		VoC_loop_i(0x1,0x8)
0xD896E892,	//0x11c8		VoC_lw16inc_p(REG6,REG1,DEFAULT)	|	VoC_loop_i_short(0x4,DEFAULT)
0x8396818E,	//0x11ca		VoC_add16inc_rp(REG6,REG6,REG2,DEFAULT)	|	VoC_add16_rp(REG6,REG6,REG1,DEFAULT)
0x41A68196,	//0x11cc		VoC_add16_rr(REG6,REG6,REG4,DEFAULT)	|	VoC_add16_rp(REG6,REG6,REG2,DEFAULT)
0x81CFD897,	//0x11ce		VoC_add16_rp(REG7,REG7,REG1,DEFAULT)	|	VoC_lw16inc_p(REG7,REG1,IN_PARALLEL)
0x81D783D7,	//0x11d0		VoC_add16_rp(REG7,REG7,REG2,DEFAULT)	|	VoC_add16inc_rp(REG7,REG7,REG2,DEFAULT)
0xF81641E7,	//0x11d2		VoC_shr16_ri(REG6,0x2,IN_PARALLEL)	|	VoC_add16_rr(REG7,REG7,REG4,DEFAULT)
0x1606F817,	//0x11d4		VoC_and16_ri(REG6,0xff)(lo)	|	VoC_shr16_ri(REG7,0x2,DEFAULT)
0xF9C700FF,	//0x11d6		VoC_shru16_ri(REG7,0xfffffff8,DEFAULT)	|	VoC_and16_ri(REG6,0xff)(hi)
0xFFC0E47E,	//0x11d8		VoC_NOP	|	VoC_or16_rr(REG6,REG7,DEFAULT)
		//0x11da		VoC_endloop0
0xE892DC86,	//0x11da		VoC_loop_i_short(0x4,DEFAULT)	|	VoC_sw16inc_p(REG6,REG0,DEFAULT)
0x818ED896,	//0x11dc		VoC_add16_rp(REG6,REG6,REG1,DEFAULT)	|	VoC_lw16inc_p(REG6,REG1,DEFAULT)
0x81968396,	//0x11de		VoC_add16_rp(REG6,REG6,REG2,DEFAULT)	|	VoC_add16inc_rp(REG6,REG6,REG2,DEFAULT)
0xD89741A6,	//0x11e0		VoC_lw16inc_p(REG7,REG1,IN_PARALLEL)	|	VoC_add16_rr(REG6,REG6,REG4,DEFAULT)
0x83D781CF,	//0x11e2		VoC_add16inc_rp(REG7,REG7,REG2,DEFAULT)	|	VoC_add16_rp(REG7,REG7,REG1,DEFAULT)
0x41E781D7,	//0x11e4		VoC_add16_rr(REG7,REG7,REG4,DEFAULT)	|	VoC_add16_rp(REG7,REG7,REG2,DEFAULT)
0xF817F816,	//0x11e6		VoC_shr16_ri(REG7,0x2,DEFAULT)	|	VoC_shr16_ri(REG6,0x2,IN_PARALLEL)
0x00FF1606,	//0x11e8		VoC_and16_ri(REG6,0xff)
0xE47EF9C7,	//0x11ea		VoC_or16_rr(REG6,REG7,DEFAULT)	|	VoC_shru16_ri(REG7,0xfffffff8,DEFAULT)
0xDCB6FFC0,	//0x11ec		VoC_sw16inc_p(REG6,REG3,DEFAULT)	|	VoC_NOP
		//0x11ed		VoC_endloop0
		//0x11ee		VoC_endloop1
0xC0AA4069,	//0x11ee		VoC_add16_rr(REG2,REG2,REG5,IN_PARALLEL)	|	VoC_add16_rr(REG1,REG1,REG5,DEFAULT)
0x0D301804,	//0x11f0		VoC_lw16i_set_inc(REG0,0xd30,0x1)
0x0D501807,	//0x11f2		VoC_lw16i_set_inc(REG3,0xd50,0x1)
0x121C2C11,	//0x11f4		VoC_loop_i(0x1,0x8)
0xD896E892,	//0x11f6		VoC_lw16inc_p(REG6,REG1,DEFAULT)	|	VoC_loop_i_short(0x4,DEFAULT)
0x8396818E,	//0x11f8		VoC_add16inc_rp(REG6,REG6,REG2,DEFAULT)	|	VoC_add16_rp(REG6,REG6,REG1,DEFAULT)
0x41A68196,	//0x11fa		VoC_add16_rr(REG6,REG6,REG4,DEFAULT)	|	VoC_add16_rp(REG6,REG6,REG2,DEFAULT)
0x81CFD897,	//0x11fc		VoC_add16_rp(REG7,REG7,REG1,DEFAULT)	|	VoC_lw16inc_p(REG7,REG1,IN_PARALLEL)
0x81D783D7,	//0x11fe		VoC_add16_rp(REG7,REG7,REG2,DEFAULT)	|	VoC_add16inc_rp(REG7,REG7,REG2,DEFAULT)
0xF81641E7,	//0x1200		VoC_shr16_ri(REG6,0x2,IN_PARALLEL)	|	VoC_add16_rr(REG7,REG7,REG4,DEFAULT)
0x1606F817,	//0x1202		VoC_and16_ri(REG6,0xff)(lo)	|	VoC_shr16_ri(REG7,0x2,DEFAULT)
0xF9C700FF,	//0x1204		VoC_shru16_ri(REG7,0xfffffff8,DEFAULT)	|	VoC_and16_ri(REG6,0xff)(hi)
0xFFC0E47E,	//0x1206		VoC_NOP	|	VoC_or16_rr(REG6,REG7,DEFAULT)
		//0x1208		VoC_endloop0
0xE892DC86,	//0x1208		VoC_loop_i_short(0x4,DEFAULT)	|	VoC_sw16inc_p(REG6,REG0,DEFAULT)
0x818ED896,	//0x120a		VoC_add16_rp(REG6,REG6,REG1,DEFAULT)	|	VoC_lw16inc_p(REG6,REG1,DEFAULT)
0x81968396,	//0x120c		VoC_add16_rp(REG6,REG6,REG2,DEFAULT)	|	VoC_add16inc_rp(REG6,REG6,REG2,DEFAULT)
0xD89741A6,	//0x120e		VoC_lw16inc_p(REG7,REG1,IN_PARALLEL)	|	VoC_add16_rr(REG6,REG6,REG4,DEFAULT)
0x83D781CF,	//0x1210		VoC_add16inc_rp(REG7,REG7,REG2,DEFAULT)	|	VoC_add16_rp(REG7,REG7,REG1,DEFAULT)
0x41E781D7,	//0x1212		VoC_add16_rr(REG7,REG7,REG4,DEFAULT)	|	VoC_add16_rp(REG7,REG7,REG2,DEFAULT)
0xF817F816,	//0x1214		VoC_shr16_ri(REG7,0x2,DEFAULT)	|	VoC_shr16_ri(REG6,0x2,IN_PARALLEL)
0x00FF1606,	//0x1216		VoC_and16_ri(REG6,0xff)
0xE47EF9C7,	//0x1218		VoC_or16_rr(REG6,REG7,DEFAULT)	|	VoC_shru16_ri(REG7,0xfffffff8,DEFAULT)
0xDCB6FFC0,	//0x121a		VoC_sw16inc_p(REG6,REG3,DEFAULT)	|	VoC_NOP
		//0x121b		VoC_endloop0
		//0x121c		VoC_endloop1
0xC0AA4069,	//0x121c		VoC_add16_rr(REG2,REG2,REG5,IN_PARALLEL)	|	VoC_add16_rr(REG1,REG1,REG5,DEFAULT)
0xDFA9DF82,	//0x121e		VoC_pop16(RA,DEFAULT)	|	VoC_pop16(REG2,DEFAULT)
0xE580DF06,	//0x1220		VoC_return	|	VoC_pop32(RL6,DEFAULT)
		//0x1222		CS_interpolate16x16_switch
0xFF1A5FE9,	//0x1222		VoC_movreg32(REG45,REG67,IN_PARALLEL)	|	VoC_push16(RA,DEFAULT)
0x00011606,	//0x1224		VoC_and16_ri(REG6,0x1)
0x00011607,	//0x1226		VoC_and16_ri(REG7,0x1)
0xF80D78FE,	//0x1228		VoC_shr16_ri(REG5,0x1,IN_PARALLEL)	|	VoC_shr16_ri(REG6,0xffffffff,DEFAULT)
0x0CBC0E28,	//0x122a		VoC_mac32_rd(REG5,0xcbc)
0xF685647E,	//0x122c		VoC_movreg16(REG5,REG4,IN_PARALLEL)	|	VoC_or16_rr(REG6,REG7,DEFAULT)
0x00001804,	//0x122e		VoC_lw16i_set_inc(REG0,0x0,0x1)
0xC914FA8A,	//0x1230		VoC_add32_rr(ACC0,ACC0,REG45,DEFAULT)	|	VoC_shr32_ri(REG45,0x11,DEFAULT)
0x12373586,	//0x1232		VoC_bne16_rr(CS_interpolate16x16_switch01,REG0,REG6)
0x10022B80,	//0x1234		VoC_jal(CS_transfer16x16_copy_c)
0xDE00E5D0,	//0x1236		VoC_inc_p(REG0,DEFAULT)	|	VoC_jump(CS_interpolate16x16_switch04)
		//0x1237		CS_interpolate16x16_switch01
0x123D3586,	//0x1238		VoC_bne16_rr(CS_interpolate16x16_switch02,REG0,REG6)
0x10BE2B80,	//0x123a		VoC_jal(CS_interpolate16x16_halfpel_v_c)
0xDE00E5CA,	//0x123c		VoC_inc_p(REG0,DEFAULT)	|	VoC_jump(CS_interpolate16x16_switch04)
		//0x123d		CS_interpolate16x16_switch02
0x12443586,	//0x123e		VoC_bne16_rr(CS_interpolate16x16_switch03,REG0,REG6)
0x11302B80,	//0x1240		VoC_jal(CS_interpolate16x16_halfpel_h_c)
0xFFC065C4,	//0x1242		VoC_NAD(IN_PARALLEL)	|	VoC_jump(CS_interpolate16x16_switch04)
		//0x1244		CS_interpolate16x16_switch03
0x11A02B80,	//0x1244		VoC_jal(CS_interpolate16x16_halfpel_hv_c)
		//0x1246		CS_interpolate16x16_switch04
0xFFC0DFA9,	//0x1246		VoC_NOP	|	VoC_pop16(RA,DEFAULT)
0xFFC06580,	//0x1248		VoC_NAD(IN_PARALLEL)	|	VoC_return
		//0x124a		CS_interpolate16x16_quarterpel
0xF4015FE9,	//0x124a		VoC_lw16i_short(FORMAT32,0x0,IN_PARALLEL)	|	VoC_push16(RA,DEFAULT)
0xFF1A5F46,	//0x124c		VoC_movreg32(REG45,REG67,IN_PARALLEL)	|	VoC_push32(RL6,DEFAULT)
0x00031606,	//0x124e		VoC_and16_ri(REG6,0x3)
0x00031607,	//0x1250		VoC_and16_ri(REG7,0x3)
0xF81578F7,	//0x1252		VoC_shr16_ri(REG5,0x2,IN_PARALLEL)	|	VoC_shr16_ri(REG7,0xfffffffe,DEFAULT)
0x0CBC0E28,	//0x1254		VoC_mac32_rd(REG5,0xcbc)
0xF685647E,	//0x1256		VoC_movreg16(REG5,REG4,IN_PARALLEL)	|	VoC_or16_rr(REG6,REG7,DEFAULT)
0xE0007A92,	//0x1258		VoC_lw16i_short(REG0,0x0,IN_PARALLEL)	|	VoC_shr32_ri(REG45,0x12,DEFAULT)
0x3586C914,	//0x125a		VoC_bne16_rr(CS_interpolate16x16_quarterpel01,REG0,REG6)(lo)	|	VoC_add32_rr(ACC0,ACC0,REG45,DEFAULT)
0x2B801260,	//0x125c		VoC_jal(CS_transfer16x16_copy_c)(lo)	|	VoC_bne16_rr(CS_interpolate16x16_quarterpel01,REG0,REG6)(hi)
0xE5CB1002,	//0x125e		VoC_jump(CS_interpolate16x16_quarterpel_end1)	|	VoC_jal(CS_transfer16x16_copy_c)(hi)
		//0x1260		CS_interpolate16x16_quarterpel01
0x1602E0C2,	//0x1260		VoC_and16_ri(REG2,0x3)(lo)	|	VoC_movreg16(REG2,REG6,DEFAULT)
0xF8160003,	//0x1262		VoC_shr16_ri(REG6,0x2,DEFAULT)	|	VoC_and16_ri(REG2,0x3)(hi)
0x20341502,	//0x1264		VoC_sw16_d(REG2,0x2034)
0x20351506,	//0x1266		VoC_sw16_d(REG6,0x2035)
0x0FB82B80,	//0x1268		VoC_jal(CS_mp4_qpel16_mc)
		//0x126a		CS_interpolate16x16_quarterpel_end1
0xDFA9DF06,	//0x126a		VoC_pop16(RA,DEFAULT)	|	VoC_pop32(RL6,DEFAULT)
0xE580FFC0,	//0x126c		VoC_return	|	VoC_NOP
		//0x126e		CS_transfer8x8_copy_c
0xFF235FE9,	//0x126e		VoC_movreg32(REG67,ACC0,IN_PARALLEL)	|	VoC_push16(RA,DEFAULT)
0xE0007A14,	//0x1270		VoC_lw16i_short(REG0,0x0,IN_PARALLEL)	|	VoC_shr32_ri(ACC0,0x2,DEFAULT)
0xF0087BF4,	//0x1272		VoC_lw16i_short(INC0,0x2,IN_PARALLEL)	|	VoC_shr32_ri(ACC0,0xfffffffe,DEFAULT)
0xDF464AE3,	//0x1274		VoC_push32(RL6,IN_PARALLEL)	|	VoC_sub32_rr(REG67,REG67,ACC0,DEFAULT)
0x3586DFC2,	//0x1276		VoC_bne16_rr(CS_transfer8x8_copy_c01,REG0,REG6)(lo)	|	VoC_push16(REG2,DEFAULT)
0x1400128F,	//0x1278		VoC_lw16_d(REG0,0xce6)(lo)	|	VoC_bne16_rr(CS_transfer8x8_copy_c01,REG0,REG6)(hi)
0x78100CE6,	//0x127a		VoC_shr16_ri(REG0,0x2,DEFAULT)	|	VoC_lw16_d(REG0,0xce6)(hi)
0x0A82E081,	//0x127c		VoC_lw16i(REG2,0xc6f)(lo)	|	VoC_lw16i_short(REG1,0x8,IN_PARALLEL)
0x70430C6F,	//0x127e		VoC_lw16i_short(REG3,0x2,DEFAULT)	|	VoC_lw16i(REG2,0xc6f)(hi)
0x4218F008,	//0x1280		VoC_sub16_rr(REG0,REG0,REG3,DEFAULT)	|	VoC_lw16i_short(INC0,0x2,IN_PARALLEL)
0x2B80FF46,	//0x1282		VoC_jal(Coolsand_MPEG4Run2DDma)(lo)	|	VoC_lw32z(RL6,IN_PARALLEL)
0xE1C0024F,	//0x1284		VoC_movreg16(REG0,RL7_LO,DEFAULT)	|	VoC_jal(Coolsand_MPEG4Run2DDma)(hi)
0x18DE1809,	//0x1286		VoC_lw16i_set_inc(REG1,0x18de,0x2)
0xD9CCE904,	//0x1288		VoC_lw32inc_p(ACC0,REG1,DEFAULT)	|	VoC_loop_i_short(0x8,DEFAULT)
0xDDC4D9CD,	//0x128a		VoC_sw32inc_p(ACC0,REG0,DEFAULT)	|	VoC_lw32inc_p(ACC1,REG1,DEFAULT)
		//0x128c		VoC_endloop0
0x2B00DDC5,	//0x128c		VoC_jump_lg(CS_transfer8x8_copy_c03)(lo)	|	VoC_sw32inc_p(ACC1,REG0,DEFAULT)
0xDE0012E2,	//0x128e		VoC_inc_p(REG0,DEFAULT)	|	VoC_jump_lg(CS_transfer8x8_copy_c03)(hi)
		//0x128f		CS_transfer8x8_copy_c01
0x12AE3586,	//0x1290		VoC_bne16_rr(CS_transfer8x8_copy_c02,REG0,REG6)
0x0CE61400,	//0x1292		VoC_lw16_d(REG0,0xce6)
0xFA147810,	//0x1294		VoC_shr32_ri(ACC0,0x2,IN_PARALLEL)	|	VoC_shr16_ri(REG0,0x2,DEFAULT)
0xE0817BF4,	//0x1296		VoC_lw16i_short(REG1,0x8,IN_PARALLEL)	|	VoC_shr32_ri(ACC0,0xfffffffe,DEFAULT)
0x0C6F0A82,	//0x1298		VoC_lw16i(REG2,0xc6f)
0x4218F063,	//0x129a		VoC_sub16_rr(REG0,REG0,REG3,DEFAULT)	|	VoC_lw16i_short(REG3,0x3,DEFAULT)
0x2B80FF46,	//0x129c		VoC_jal(Coolsand_MPEG4Run2DDma)(lo)	|	VoC_lw32z(RL6,IN_PARALLEL)
0xE1C0024F,	//0x129e		VoC_movreg16(REG0,RL7_LO,DEFAULT)	|	VoC_jal(Coolsand_MPEG4Run2DDma)(hi)
0x18DE1805,	//0x12a0		VoC_lw16i_set_inc(REG1,0x18de,0x1)
0xDE08E908,	//0x12a2		VoC_inc_p(REG1,DEFAULT)	|	VoC_loop_i_short(0x8,DEFAULT)
0xD897D896,	//0x12a4		VoC_lw16inc_p(REG7,REG1,DEFAULT)	|	VoC_lw16inc_p(REG6,REG1,DEFAULT)
0xD895D894,	//0x12a6		VoC_lw16inc_p(REG5,REG1,DEFAULT)	|	VoC_lw16inc_p(REG4,REG1,DEFAULT)
0xDDC2DDC3,	//0x12a8		VoC_sw32inc_p(REG45,REG0,DEFAULT)	|	VoC_sw32inc_p(REG67,REG0,DEFAULT)
		//0x12aa		VoC_endloop0
0x2B00DE08,	//0x12aa		VoC_jump_lg(CS_transfer8x8_copy_c03)(lo)	|	VoC_inc_p(REG1,DEFAULT)
0xFFC012E2,	//0x12ac		VoC_NAD	|	VoC_jump_lg(CS_transfer8x8_copy_c03)(hi)
		//0x12ae		CS_transfer8x8_copy_c02
0x0CE61400,	//0x12ae		VoC_lw16_d(REG0,0xce6)
0xFA147810,	//0x12b0		VoC_shr32_ri(ACC0,0x2,IN_PARALLEL)	|	VoC_shr16_ri(REG0,0x2,DEFAULT)
0xE0817BF4,	//0x12b2		VoC_lw16i_short(REG1,0x8,IN_PARALLEL)	|	VoC_shr32_ri(ACC0,0xfffffffe,DEFAULT)
0x0C6F0A82,	//0x12b4		VoC_lw16i(REG2,0xc6f)
0x4218F063,	//0x12b6		VoC_sub16_rr(REG0,REG0,REG3,DEFAULT)	|	VoC_lw16i_short(REG3,0x3,DEFAULT)
0x0A8DE00C,	//0x12b8		VoC_lw16i(RL6_HI,0x1000)(lo)	|	VoC_lw16i_short(RL6_LO,0x0,IN_PARALLEL)
0xFFC01000,	//0x12ba		VoC_NAD	|	VoC_lw16i(RL6_HI,0x1000)(hi)
0x024F2B80,	//0x12bc		VoC_jal(Coolsand_MPEG4Run2DDma)
0xF00461C0,	//0x12be		VoC_lw16i_short(INC0,0x1,IN_PARALLEL)	|	VoC_movreg16(REG0,RL7_LO,DEFAULT)
0x18DE1805,	//0x12c0		VoC_lw16i_set_inc(REG1,0x18de,0x1)
0xE0434071,	//0x12c2		VoC_lw16i_short(REG3,0x4,IN_PARALLEL)	|	VoC_add16_rr(REG1,REG1,REG6,DEFAULT)
0xD896E91D,	//0x12c4		VoC_lw16inc_p(REG6,REG1,DEFAULT)	|	VoC_loop_i_short(0x8,DEFAULT)
0x1606D897,	//0x12c6		VoC_and16_ri(REG6,0xff)(lo)	|	VoC_lw16inc_p(REG7,REG1,DEFAULT)
0x79C700FF,	//0x12c8		VoC_shru16_ri(REG7,0xfffffff8,DEFAULT)	|	VoC_and16_ri(REG6,0xff)(hi)
0x647ED894,	//0x12ca		VoC_or16_rr(REG6,REG7,DEFAULT)	|	VoC_lw16inc_p(REG4,REG1,IN_PARALLEL)
0x1604D895,	//0x12cc		VoC_and16_ri(REG4,0xff)(lo)	|	VoC_lw16inc_p(REG5,REG1,IN_PARALLEL)
0x79C500FF,	//0x12ce		VoC_shru16_ri(REG5,0xfffffff8,DEFAULT)	|	VoC_and16_ri(REG4,0xff)(hi)
0x646CDC86,	//0x12d0		VoC_or16_rr(REG4,REG5,DEFAULT)	|	VoC_sw16inc_p(REG6,REG0,IN_PARALLEL)
0x1606D896,	//0x12d2		VoC_and16_ri(REG6,0xff)(lo)	|	VoC_lw16inc_p(REG6,REG1,IN_PARALLEL)
0xD89700FF,	//0x12d4		VoC_lw16inc_p(REG7,REG1,DEFAULT)	|	VoC_and16_ri(REG6,0xff)(hi)
0x79C7DC84,	//0x12d6		VoC_shru16_ri(REG7,0xfffffff8,DEFAULT)	|	VoC_sw16inc_p(REG4,REG0,DEFAULT)
0x647ED894,	//0x12d8		VoC_or16_rr(REG6,REG7,DEFAULT)	|	VoC_lw16inc_p(REG4,REG1,IN_PARALLEL)
0x1604D895,	//0x12da		VoC_and16_ri(REG4,0xff)(lo)	|	VoC_lw16inc_p(REG5,REG1,IN_PARALLEL)
0x79C500FF,	//0x12dc		VoC_shru16_ri(REG5,0xfffffff8,DEFAULT)	|	VoC_and16_ri(REG4,0xff)(hi)
0xE46CDC86,	//0x12de		VoC_or16_rr(REG4,REG5,DEFAULT)	|	VoC_sw16inc_p(REG6,REG0,IN_PARALLEL)
0xDC84C059,	//0x12e0		VoC_sw16inc_p(REG4,REG0,DEFAULT)	|	VoC_add16_rr(REG1,REG1,REG3,DEFAULT)
		//0x12e1		VoC_endloop0
		//0x12e2		CS_transfer8x8_copy_c03
0xDFA9DF82,	//0x12e2		VoC_pop16(RA,DEFAULT)	|	VoC_pop16(REG2,DEFAULT)
0xE580DF06,	//0x12e4		VoC_return	|	VoC_pop32(RL6,DEFAULT)
		//0x12e6		CS_interpolate8x8_halfpel_v_c
0xFF235FE9,	//0x12e6		VoC_movreg32(REG67,ACC0,IN_PARALLEL)	|	VoC_push16(RA,DEFAULT)
0xE0007A13,	//0x12e8		VoC_lw16i_short(REG0,0x0,IN_PARALLEL)	|	VoC_shr32_ri(REG67,0x2,DEFAULT)
0xF0047BF3,	//0x12ea		VoC_lw16i_short(INC0,0x1,IN_PARALLEL)	|	VoC_shr32_ri(REG67,0xfffffffe,DEFAULT)
0xDF464B1B,	//0x12ec		VoC_push32(RL6,IN_PARALLEL)	|	VoC_sub32_rr(REG67,ACC0,REG67,DEFAULT)
0x1400DFC2,	//0x12ee		VoC_lw16_d(REG0,0xce6)(lo)	|	VoC_push16(REG2,DEFAULT)
0x78100CE6,	//0x12f0		VoC_shr16_ri(REG0,0x2,DEFAULT)	|	VoC_lw16_d(REG0,0xce6)(hi)
0x7BF4FA14,	//0x12f2		VoC_shr32_ri(ACC0,0xfffffffe,DEFAULT)	|	VoC_shr32_ri(ACC0,0x2,IN_PARALLEL)
0x0A82E091,	//0x12f4		VoC_lw16i(REG2,0xc6f)(lo)	|	VoC_lw16i_short(REG1,0x9,IN_PARALLEL)
0xF0630C6F,	//0x12f6		VoC_lw16i_short(REG3,0x3,DEFAULT)	|	VoC_lw16i(REG2,0xc6f)(hi)
0xE00C4218,	//0x12f8		VoC_lw16i_short(RL6_LO,0x0,IN_PARALLEL)	|	VoC_sub16_rr(REG0,REG0,REG3,DEFAULT)
0x10000A8D,	//0x12fa		VoC_lw16i(RL6_HI,0x1000)
0x024F2B80,	//0x12fc		VoC_jal(Coolsand_MPEG4Run2DDma)
0x1805E1C0,	//0x12fe		VoC_lw16i_set_inc(REG1,0x18de,0x1)(lo)	|	VoC_movreg16(REG0,RL7_LO,DEFAULT)
0x407118DE,	//0x1300		VoC_add16_rr(REG1,REG1,REG6,DEFAULT)	|	VoC_lw16i_set_inc(REG1,0x18de,0x1)(hi)
0x4062E0C4,	//0x1302		VoC_add16_rr(REG2,REG1,REG4,DEFAULT)	|	VoC_lw16i_short(REG4,0xc,IN_PARALLEL)
0x07A4E014,	//0x1304		VoC_sub16_rd(REG4,REG4,0xcbb)(lo)	|	VoC_lw16i_short(REG4,0x1,IN_PARALLEL)
0x70320CBB,	//0x1306		VoC_lw16i_short(INC2,0x1,DEFAULT)	|	VoC_sub16_rd(REG4,REG4,0xcbb)(hi)
0x2C11E045,	//0x1308		VoC_loop_i(0x1,0x8)(lo)	|	VoC_lw16i_short(REG5,0x4,IN_PARALLEL)
0xE88E131A,	//0x130a		VoC_loop_i_short(0x4,DEFAULT)	|	VoC_loop_i(0x1,0x8)(hi)
0x8396D896,	//0x130c		VoC_add16inc_rp(REG6,REG6,REG2,DEFAULT)	|	VoC_lw16inc_p(REG6,REG1,DEFAULT)
0xD89741A6,	//0x130e		VoC_lw16inc_p(REG7,REG1,IN_PARALLEL)	|	VoC_add16_rr(REG6,REG6,REG4,DEFAULT)
0xF80E03D7,	//0x1310		VoC_shr16_ri(REG6,0x1,IN_PARALLEL)	|	VoC_add16inc_rp(REG7,REG7,REG2,DEFAULT)
0xF80FC1E7,	//0x1312		VoC_shr16_ri(REG7,0x1,DEFAULT)	|	VoC_add16_rr(REG7,REG7,REG4,DEFAULT)
0x00FF1606,	//0x1314		VoC_and16_ri(REG6,0xff)
0xE47EF9C7,	//0x1316		VoC_or16_rr(REG6,REG7,DEFAULT)	|	VoC_shru16_ri(REG7,0xfffffff8,DEFAULT)
0xDC86FFC0,	//0x1318		VoC_sw16inc_p(REG6,REG0,DEFAULT)	|	VoC_NOP
		//0x1319		VoC_endloop0
		//0x131a		VoC_endloop1
0xC0AA4069,	//0x131a		VoC_add16_rr(REG2,REG2,REG5,IN_PARALLEL)	|	VoC_add16_rr(REG1,REG1,REG5,DEFAULT)
0xDFA9DF82,	//0x131c		VoC_pop16(RA,DEFAULT)	|	VoC_pop16(REG2,DEFAULT)
0xE580DF06,	//0x131e		VoC_return	|	VoC_pop32(RL6,DEFAULT)
		//0x1320		CS_interpolate8x8_halfpel_h_c
0xFF235FE9,	//0x1320		VoC_movreg32(REG67,ACC0,IN_PARALLEL)	|	VoC_push16(RA,DEFAULT)
0xE0007A13,	//0x1322		VoC_lw16i_short(REG0,0x0,IN_PARALLEL)	|	VoC_shr32_ri(REG67,0x2,DEFAULT)
0xF0047BF3,	//0x1324		VoC_lw16i_short(INC0,0x1,IN_PARALLEL)	|	VoC_shr32_ri(REG67,0xfffffffe,DEFAULT)
0xDF464B1B,	//0x1326		VoC_push32(RL6,IN_PARALLEL)	|	VoC_sub32_rr(REG67,ACC0,REG67,DEFAULT)
0x1400DFC2,	//0x1328		VoC_lw16_d(REG0,0xce6)(lo)	|	VoC_push16(REG2,DEFAULT)
0x78100CE6,	//0x132a		VoC_shr16_ri(REG0,0x2,DEFAULT)	|	VoC_lw16_d(REG0,0xce6)(hi)
0x7BF4FA14,	//0x132c		VoC_shr32_ri(ACC0,0xfffffffe,DEFAULT)	|	VoC_shr32_ri(ACC0,0x2,IN_PARALLEL)
0x0A82E081,	//0x132e		VoC_lw16i(REG2,0xc6f)(lo)	|	VoC_lw16i_short(REG1,0x8,IN_PARALLEL)
0xF0630C6F,	//0x1330		VoC_lw16i_short(REG3,0x3,DEFAULT)	|	VoC_lw16i(REG2,0xc6f)(hi)
0xE00C4218,	//0x1332		VoC_lw16i_short(RL6_LO,0x0,IN_PARALLEL)	|	VoC_sub16_rr(REG0,REG0,REG3,DEFAULT)
0x10000A8D,	//0x1334		VoC_lw16i(RL6_HI,0x1000)
0x024F2B80,	//0x1336		VoC_jal(Coolsand_MPEG4Run2DDma)
0x1805E1C0,	//0x1338		VoC_lw16i_set_inc(REG1,0x18de,0x1)(lo)	|	VoC_movreg16(REG0,RL7_LO,DEFAULT)
0x407118DE,	//0x133a		VoC_add16_rr(REG1,REG1,REG6,DEFAULT)	|	VoC_lw16i_set_inc(REG1,0x18de,0x1)(hi)
0x4062E0C4,	//0x133c		VoC_add16_rr(REG2,REG1,REG4,DEFAULT)	|	VoC_lw16i_short(REG4,0xc,IN_PARALLEL)
0x07A4E014,	//0x133e		VoC_sub16_rd(REG4,REG4,0xcbb)(lo)	|	VoC_lw16i_short(REG4,0x1,IN_PARALLEL)
0x70320CBB,	//0x1340		VoC_lw16i_short(INC2,0x1,DEFAULT)	|	VoC_sub16_rd(REG4,REG4,0xcbb)(hi)
0x2C11E045,	//0x1342		VoC_loop_i(0x1,0x8)(lo)	|	VoC_lw16i_short(REG5,0x4,IN_PARALLEL)
0xE88E1354,	//0x1344		VoC_loop_i_short(0x4,DEFAULT)	|	VoC_loop_i(0x1,0x8)(hi)
0x818ED896,	//0x1346		VoC_add16_rp(REG6,REG6,REG1,DEFAULT)	|	VoC_lw16inc_p(REG6,REG1,DEFAULT)
0xD89741A6,	//0x1348		VoC_lw16inc_p(REG7,REG1,IN_PARALLEL)	|	VoC_add16_rr(REG6,REG6,REG4,DEFAULT)
0xF80E01CF,	//0x134a		VoC_shr16_ri(REG6,0x1,IN_PARALLEL)	|	VoC_add16_rp(REG7,REG7,REG1,DEFAULT)
0xF80FC1E7,	//0x134c		VoC_shr16_ri(REG7,0x1,DEFAULT)	|	VoC_add16_rr(REG7,REG7,REG4,DEFAULT)
0x00FF1606,	//0x134e		VoC_and16_ri(REG6,0xff)
0xE47EF9C7,	//0x1350		VoC_or16_rr(REG6,REG7,DEFAULT)	|	VoC_shru16_ri(REG7,0xfffffff8,DEFAULT)
0xDC86FFC0,	//0x1352		VoC_sw16inc_p(REG6,REG0,DEFAULT)	|	VoC_NOP
		//0x1353		VoC_endloop0
		//0x1354		VoC_endloop1
0xDF82C069,	//0x1354		VoC_pop16(REG2,DEFAULT)	|	VoC_add16_rr(REG1,REG1,REG5,DEFAULT)
0xDF06DFA9,	//0x1356		VoC_pop32(RL6,DEFAULT)	|	VoC_pop16(RA,DEFAULT)
0xFFC06580,	//0x1358		VoC_NAD(IN_PARALLEL)	|	VoC_return
		//0x135a		CS_interpolate8x8_halfpel_hv_c
0xFF235FE9,	//0x135a		VoC_movreg32(REG67,ACC0,IN_PARALLEL)	|	VoC_push16(RA,DEFAULT)
0xE0007A14,	//0x135c		VoC_lw16i_short(REG0,0x0,IN_PARALLEL)	|	VoC_shr32_ri(ACC0,0x2,DEFAULT)
0xF0047BF4,	//0x135e		VoC_lw16i_short(INC0,0x1,IN_PARALLEL)	|	VoC_shr32_ri(ACC0,0xfffffffe,DEFAULT)
0xDF464AE3,	//0x1360		VoC_push32(RL6,IN_PARALLEL)	|	VoC_sub32_rr(REG67,REG67,ACC0,DEFAULT)
0x1400DFC2,	//0x1362		VoC_lw16_d(REG0,0xce6)(lo)	|	VoC_push16(REG2,DEFAULT)
0x78100CE6,	//0x1364		VoC_shr16_ri(REG0,0x2,DEFAULT)	|	VoC_lw16_d(REG0,0xce6)(hi)
0x0A82E091,	//0x1366		VoC_lw16i(REG2,0xc6f)(lo)	|	VoC_lw16i_short(REG1,0x9,IN_PARALLEL)
0xF0630C6F,	//0x1368		VoC_lw16i_short(REG3,0x3,DEFAULT)	|	VoC_lw16i(REG2,0xc6f)(hi)
0xE00C4218,	//0x136a		VoC_lw16i_short(RL6_LO,0x0,IN_PARALLEL)	|	VoC_sub16_rr(REG0,REG0,REG3,DEFAULT)
0x10000A8D,	//0x136c		VoC_lw16i(RL6_HI,0x1000)
0x024F2B80,	//0x136e		VoC_jal(Coolsand_MPEG4Run2DDma)
0x00200A83,	//0x1370		VoC_lw16i(REG3,0x20)
0x401BE1C0,	//0x1372		VoC_add16_rr(REG3,REG0,REG3,DEFAULT)	|	VoC_movreg16(REG0,RL7_LO,DEFAULT)
0x1805F004,	//0x1374		VoC_lw16i_set_inc(REG1,0x18de,0x1)(lo)	|	VoC_lw16i_short(INC0,0x1,IN_PARALLEL)
0x407118DE,	//0x1376		VoC_add16_rr(REG1,REG1,REG6,DEFAULT)	|	VoC_lw16i_set_inc(REG1,0x18de,0x1)(hi)
0x4062E0C4,	//0x1378		VoC_add16_rr(REG2,REG1,REG4,DEFAULT)	|	VoC_lw16i_short(REG4,0xc,IN_PARALLEL)
0x07A4E024,	//0x137a		VoC_sub16_rd(REG4,REG4,0xcbb)(lo)	|	VoC_lw16i_short(REG4,0x2,IN_PARALLEL)
0x70320CBB,	//0x137c		VoC_lw16i_short(INC2,0x1,DEFAULT)	|	VoC_sub16_rd(REG4,REG4,0xcbb)(hi)
0xF085F007,	//0x137e		VoC_lw16i_short(REG5,0x4,DEFAULT)	|	VoC_lw16i_short(INC3,0x1,IN_PARALLEL)
0x13952C11,	//0x1380		VoC_loop_i(0x1,0x8)
0xD896E892,	//0x1382		VoC_lw16inc_p(REG6,REG1,DEFAULT)	|	VoC_loop_i_short(0x4,DEFAULT)
0x8396818E,	//0x1384		VoC_add16inc_rp(REG6,REG6,REG2,DEFAULT)	|	VoC_add16_rp(REG6,REG6,REG1,DEFAULT)
0x41A68196,	//0x1386		VoC_add16_rr(REG6,REG6,REG4,DEFAULT)	|	VoC_add16_rp(REG6,REG6,REG2,DEFAULT)
0x81CFD897,	//0x1388		VoC_add16_rp(REG7,REG7,REG1,DEFAULT)	|	VoC_lw16inc_p(REG7,REG1,IN_PARALLEL)
0x81D783D7,	//0x138a		VoC_add16_rp(REG7,REG7,REG2,DEFAULT)	|	VoC_add16inc_rp(REG7,REG7,REG2,DEFAULT)
0xF81641E7,	//0x138c		VoC_shr16_ri(REG6,0x2,IN_PARALLEL)	|	VoC_add16_rr(REG7,REG7,REG4,DEFAULT)
0x1606F817,	//0x138e		VoC_and16_ri(REG6,0xff)(lo)	|	VoC_shr16_ri(REG7,0x2,DEFAULT)
0xF9C700FF,	//0x1390		VoC_shru16_ri(REG7,0xfffffff8,DEFAULT)	|	VoC_and16_ri(REG6,0xff)(hi)
0xFFC0E47E,	//0x1392		VoC_NOP	|	VoC_or16_rr(REG6,REG7,DEFAULT)
		//0x1394		VoC_endloop0
0x4069DC86,	//0x1394		VoC_add16_rr(REG1,REG1,REG5,DEFAULT)	|	VoC_sw16inc_p(REG6,REG0,DEFAULT)
		//0x1395		VoC_endloop1
0xDF82C0AA,	//0x1396		VoC_pop16(REG2,DEFAULT)	|	VoC_add16_rr(REG2,REG2,REG5,IN_PARALLEL)
0xDF06DFA9,	//0x1398		VoC_pop32(RL6,DEFAULT)	|	VoC_pop16(RA,DEFAULT)
0xDFE9E580,	//0x139a		VoC_push16(RA,DEFAULT)	|	VoC_return
		//0x139b		CS_interpolate8x8_switch
0x1606FF1A,	//0x139c		VoC_and16_ri(REG6,0x1)(lo)	|	VoC_movreg32(REG45,REG67,DEFAULT)
0x16070001,	//0x139e		VoC_and16_ri(REG7,0x1)(lo)	|	VoC_and16_ri(REG6,0x1)(hi)
0x78FE0001,	//0x13a0		VoC_shr16_ri(REG6,0xffffffff,DEFAULT)	|	VoC_and16_ri(REG7,0x1)(hi)
0x0E28F80D,	//0x13a2		VoC_mac32_rd(REG5,0xce6)(lo)	|	VoC_shr16_ri(REG5,0x1,IN_PARALLEL)
0x647E0CE6,	//0x13a4		VoC_or16_rr(REG6,REG7,DEFAULT)	|	VoC_mac32_rd(REG5,0xce6)(hi)
0x1804F685,	//0x13a6		VoC_lw16i_set_inc(REG0,0x0,0x1)(lo)	|	VoC_movreg16(REG5,REG4,IN_PARALLEL)
0xFA8A0000,	//0x13a8		VoC_shr32_ri(REG45,0x11,DEFAULT)	|	VoC_lw16i_set_inc(REG0,0x0,0x1)(hi)
0x3586C914,	//0x13aa		VoC_bne16_rr(CS_interpolate8x8_switch01,REG0,REG6)(lo)	|	VoC_add32_rr(ACC0,ACC0,REG45,DEFAULT)
0x2B8013B0,	//0x13ac		VoC_jal(CS_transfer8x8_copy_c)(lo)	|	VoC_bne16_rr(CS_interpolate8x8_switch01,REG0,REG6)(hi)
0xE5CF126E,	//0x13ae		VoC_jump(CS_interpolate8x8_switch04)	|	VoC_jal(CS_transfer8x8_copy_c)(hi)
		//0x13b0		CS_interpolate8x8_switch01
0x3586DE00,	//0x13b0		VoC_bne16_rr(CS_interpolate8x8_switch02,REG0,REG6)(lo)	|	VoC_inc_p(REG0,DEFAULT)
0x2B8013B6,	//0x13b2		VoC_jal(CS_interpolate8x8_halfpel_v_c)(lo)	|	VoC_bne16_rr(CS_interpolate8x8_switch02,REG0,REG6)(hi)
0xE5C912E6,	//0x13b4		VoC_jump(CS_interpolate8x8_switch04)	|	VoC_jal(CS_interpolate8x8_halfpel_v_c)(hi)
		//0x13b6		CS_interpolate8x8_switch02
0x3586DE00,	//0x13b6		VoC_bne16_rr(CS_interpolate8x8_switch03,REG0,REG6)(lo)	|	VoC_inc_p(REG0,DEFAULT)
0x2B8013BC,	//0x13b8		VoC_jal(CS_interpolate8x8_halfpel_h_c)(lo)	|	VoC_bne16_rr(CS_interpolate8x8_switch03,REG0,REG6)(hi)
0xE5C31320,	//0x13ba		VoC_jump(CS_interpolate8x8_switch04)	|	VoC_jal(CS_interpolate8x8_halfpel_h_c)(hi)
		//0x13bc		CS_interpolate8x8_switch03
0x135A2B80,	//0x13bc		VoC_jal(CS_interpolate8x8_halfpel_hv_c)
		//0x13be		CS_interpolate8x8_switch04
0xFFC0DFA9,	//0x13be		VoC_NOP	|	VoC_pop16(RA,DEFAULT)
0xDFE9E580,	//0x13c0		VoC_push16(RA,DEFAULT)	|	VoC_return
		//0x13c1		CS_mp4_qpel8X8S_to_8X8B
0xF0057030,	//0x13c2		VoC_lw16i_short(INC1,0x1,IN_PARALLEL)	|	VoC_lw16i_short(INC0,0x1,DEFAULT)
0xF0077032,	//0x13c4		VoC_lw16i_short(INC3,0x1,IN_PARALLEL)	|	VoC_lw16i_short(INC2,0x1,DEFAULT)
0x150FFF01,	//0x13c6		VoC_sw16_d(RL7_HI,0x2038)(lo)	|	VoC_movreg32(REG23,REG01,DEFAULT)
0x72042038,	//0x13c8		VoC_lw16i_short(REG4,0x10,DEFAULT)	|	VoC_sw16_d(RL7_HI,0x2038)(hi)
0x082DE045,	//0x13ca		VoC_mult16_rd(REG5,REG5,0x2038)(lo)	|	VoC_lw16i_short(REG5,0x4,IN_PARALLEL)
0xC0A22038,	//0x13cc		VoC_add16_rr(REG2,REG2,REG4,DEFAULT)	|	VoC_mult16_rd(REG5,REG5,0x2038)(hi)
0xFFC040EB,	//0x13ce		VoC_NAD(IN_PARALLEL)	|	VoC_add16_rr(REG3,REG3,REG5,DEFAULT)
0x13E12C08,	//0x13d0		VoC_loop_i(0x0,0x4)
0x13DD2C09,	//0x13d2		VoC_loop_i(0x1,0x4)
0xD895D894,	//0x13d4		VoC_lw16inc_p(REG5,REG1,DEFAULT)	|	VoC_lw16inc_p(REG4,REG1,DEFAULT)
0xD8B7D8B6,	//0x13d6		VoC_lw16inc_p(REG7,REG3,DEFAULT)	|	VoC_lw16inc_p(REG6,REG3,DEFAULT)
0xF9C779C5,	//0x13d8		VoC_shru16_ri(REG7,0xfffffff8,IN_PARALLEL)	|	VoC_shru16_ri(REG5,0xfffffff8,DEFAULT)
0xE47EE46C,	//0x13da		VoC_or16_rr(REG6,REG7,DEFAULT)	|	VoC_or16_rr(REG4,REG5,DEFAULT)
0xDCA6DC84,	//0x13dc		VoC_sw16inc_p(REG6,REG2,DEFAULT)	|	VoC_sw16inc_p(REG4,REG0,DEFAULT)
		//0x13dd		VoC_endloop1
0x07A4F104,	//0x13de		VoC_sub16_rd(REG4,REG4,0x2038)(lo)	|	VoC_lw16i_short(REG4,0x8,DEFAULT)
0x42612038,	//0x13e0		VoC_sub16_rr(REG1,REG1,REG4,DEFAULT)	|	VoC_sub16_rd(REG4,REG4,0x2038)(hi)
		//0x13e1		VoC_endloop0
0xDFA9C2E3,	//0x13e2		VoC_pop16(RA,DEFAULT)	|	VoC_sub16_rr(REG3,REG3,REG4,IN_PARALLEL)
0xE580FFC0,	//0x13e4		VoC_return	|	VoC_NOP
		//0x13e6		CS_mp4_qpel8_mv4_data_dma_in
0x1400DFE9,	//0x13e6		VoC_lw16_d(REG0,0xcbc)(lo)	|	VoC_push16(RA,DEFAULT)
0x78100CBC,	//0x13e8		VoC_shr16_ri(REG0,0x2,DEFAULT)	|	VoC_lw16_d(REG0,0xcbc)(hi)
0x0A82E091,	//0x13ea		VoC_lw16i(REG2,0xc6f)(lo)	|	VoC_lw16i_short(REG1,0x9,IN_PARALLEL)
0xF0630C6F,	//0x13ec		VoC_lw16i_short(REG3,0x3,DEFAULT)	|	VoC_lw16i(REG2,0xc6f)(hi)
0xF00CC218,	//0x13ee		VoC_lw16i_short(RL6_LO,0x0,DEFAULT)	|	VoC_sub16_rr(REG0,REG0,REG3,DEFAULT)
0x10000A8D,	//0x13f0		VoC_lw16i(RL6_HI,0x1000)
0x024F2B80,	//0x13f2		VoC_jal(Coolsand_MPEG4Run2DDma)
0xFFC0DFA9,	//0x13f4		VoC_NOP	|	VoC_pop16(RA,DEFAULT)
0xDFE9E580,	//0x13f6		VoC_push16(RA,DEFAULT)	|	VoC_return
		//0x13f7		CS_mp4_qpel8_h_lowpass8X8
0xF0066022,	//0x13f8		VoC_lw16i_short(INC2,0x1,IN_PARALLEL)	|	VoC_movreg16(REG2,REG1,DEFAULT)
0xF0047031,	//0x13fa		VoC_lw16i_short(INC0,0x1,IN_PARALLEL)	|	VoC_lw16i_short(INC1,0x1,DEFAULT)
0xF4015E10,	//0x13fc		VoC_lw16i_short(FORMAT32,0x0,IN_PARALLEL)	|	VoC_inc_p(REG2,DEFAULT)
0x00FF0A85,	//0x13fe		VoC_lw16i(REG5,0xff)
0x14BE2E18,	//0x1400		VoC_loop_r(0,REG3)
0x02D4D893,	//0x1402		VoC_add16inc_rp(REG4,REG3,REG2,DEFAULT)	|	VoC_lw16inc_p(REG3,REG1,DEFAULT)
0x0A24F66A,	//0x1404		VoC_multf32_rd(ACC0,REG4,0x5e76)(lo)	|	VoC_movreg16(ACC1_LO,REG3,IN_PARALLEL)
0x82D45E76,	//0x1406		VoC_add16inc_rp(REG4,REG3,REG2,DEFAULT)	|	VoC_multf32_rd(ACC0,REG4,0x5e76)(hi)
0x5E6C0F20,	//0x1408		VoC_msu32_rd(REG4,0x5e6c)
0x02D4D893,	//0x140a		VoC_add16inc_rp(REG4,REG3,REG2,DEFAULT)	|	VoC_lw16inc_p(REG3,REG1,DEFAULT)
0x0E20F66B,	//0x140c		VoC_mac32_rd(REG4,0x5e66)(lo)	|	VoC_movreg16(ACC1_HI,REG3,IN_PARALLEL)
0xD8935E66,	//0x140e		VoC_lw16inc_p(REG3,REG1,DEFAULT)	|	VoC_mac32_rd(REG4,0x5e66)(hi)
0x07A480D4,	//0x1410		VoC_sub16_rd(REG4,REG4,0x5e72)(lo)	|	VoC_add16_rp(REG4,REG3,REG2,DEFAULT)
0x0F205E72,	//0x1412		VoC_msu32_rd(REG4,0x5e68)(lo)	|	VoC_sub16_rd(REG4,REG4,0x5e72)(hi)
0x07925E68,	//0x1414		VoC_sub16_rd(REG2,REG2,0x5e69)(lo)	|	VoC_msu32_rd(REG4,0x5e68)(hi)
0xFBAC5E69,	//0x1416		VoC_shr32_ri(ACC0,0xfffffff5,DEFAULT)	|	VoC_sub16_rd(REG2,REG2,0x5e69)(hi)
0x7FC0E126,	//0x1418		VoC_NOP	|	VoC_movreg16(REG6,ACC0_HI,DEFAULT)
0xFFC0DEEE,	//0x141a		VoC_NOP	|	VoC_clipu16_rr(REG6,REG5,IN_PARALLEL)
0xE164DC86,	//0x141c		VoC_movreg16(REG4,ACC1_HI,DEFAULT)	|	VoC_sw16inc_p(REG6,REG0,DEFAULT)
0x0A248314,	//0x141e		VoC_multf32_rd(ACC0,REG4,0x5e76)(lo)	|	VoC_add16inc_rp(REG4,REG4,REG2,DEFAULT)
0xE1445E76,	//0x1420		VoC_movreg16(REG4,ACC1_LO,DEFAULT)	|	VoC_multf32_rd(ACC0,REG4,0x5e76)(hi)
0x0F388317,	//0x1422		VoC_msu32_rd(REG7,0x5e6c)(lo)	|	VoC_add16inc_rp(REG7,REG4,REG2,DEFAULT)
0x83145E6C,	//0x1424		VoC_add16inc_rp(REG4,REG4,REG2,DEFAULT)	|	VoC_msu32_rd(REG7,0x5e6c)(hi)
0x5E660E20,	//0x1426		VoC_mac32_rd(REG4,0x5e66)
0x8114E164,	//0x1428		VoC_add16_rp(REG4,REG4,REG2,DEFAULT)	|	VoC_movreg16(REG4,ACC1_HI,DEFAULT)
0x5E7207A4,	//0x142a		VoC_sub16_rd(REG4,REG4,0x5e72)
0x5E680F20,	//0x142c		VoC_msu32_rd(REG4,0x5e68)
0x5E690792,	//0x142e		VoC_sub16_rd(REG2,REG2,0x5e69)
0xE126FBAC,	//0x1430		VoC_movreg16(REG6,ACC0_HI,DEFAULT)	|	VoC_shr32_ri(ACC0,0xfffffff5,DEFAULT)
0xDEEE7FC0,	//0x1432		VoC_clipu16_rr(REG6,REG5,IN_PARALLEL)	|	VoC_NOP
0xDC86FFC0,	//0x1434		VoC_sw16inc_p(REG6,REG0,DEFAULT)	|	VoC_NOP
0x0A2482D4,	//0x1436		VoC_multf32_rd(ACC0,REG4,0x5e76)(lo)	|	VoC_add16inc_rp(REG4,REG3,REG2,DEFAULT)
0xE1645E76,	//0x1438		VoC_movreg16(REG4,ACC1_HI,DEFAULT)	|	VoC_multf32_rd(ACC0,REG4,0x5e76)(hi)
0x0F208314,	//0x143a		VoC_msu32_rd(REG4,0x5e6c)(lo)	|	VoC_add16inc_rp(REG4,REG4,REG2,DEFAULT)
0xE1445E6C,	//0x143c		VoC_movreg16(REG4,ACC1_LO,DEFAULT)	|	VoC_msu32_rd(REG4,0x5e6c)(hi)
0x0E388317,	//0x143e		VoC_mac32_rd(REG7,0x5e66)(lo)	|	VoC_add16inc_rp(REG7,REG4,REG2,DEFAULT)
0x81145E66,	//0x1440		VoC_add16_rp(REG4,REG4,REG2,DEFAULT)	|	VoC_mac32_rd(REG7,0x5e66)(hi)
0x5E7207A4,	//0x1442		VoC_sub16_rd(REG4,REG4,0x5e72)
0x5E680F20,	//0x1444		VoC_msu32_rd(REG4,0x5e68)
0xFBACF7F1,	//0x1446		VoC_shr32_ri(ACC0,0xfffffff5,DEFAULT)	|	VoC_lw16i_short(INC1,0xffffffff,DEFAULT)
0x7FC0E126,	//0x1448		VoC_NOP	|	VoC_movreg16(REG6,ACC0_HI,DEFAULT)
0x0792DEEE,	//0x144a		VoC_sub16_rd(REG2,REG2,0x5e69)(lo)	|	VoC_clipu16_rr(REG6,REG5,IN_PARALLEL)
0xDC865E69,	//0x144c		VoC_sw16inc_p(REG6,REG0,DEFAULT)	|	VoC_sub16_rd(REG2,REG2,0x5e69)(hi)
0x146A2C05,	//0x144e		VoC_loop_i(0x1,0x2)
0x8314D894,	//0x1450		VoC_add16inc_rp(REG4,REG4,REG2,DEFAULT)	|	VoC_lw16inc_p(REG4,REG1,DEFAULT)
0x5E760A24,	//0x1452		VoC_multf32_rd(ACC0,REG4,0x5e76)
0x8314D894,	//0x1454		VoC_add16inc_rp(REG4,REG4,REG2,DEFAULT)	|	VoC_lw16inc_p(REG4,REG1,DEFAULT)
0x5E6C0F20,	//0x1456		VoC_msu32_rd(REG4,0x5e6c)
0x8314D894,	//0x1458		VoC_add16inc_rp(REG4,REG4,REG2,DEFAULT)	|	VoC_lw16inc_p(REG4,REG1,DEFAULT)
0x5E660E20,	//0x145a		VoC_mac32_rd(REG4,0x5e66)
0x8114D814,	//0x145c		VoC_add16_rp(REG4,REG4,REG2,DEFAULT)	|	VoC_lw16_p(REG4,REG1,DEFAULT)
0x5E7207A4,	//0x145e		VoC_sub16_rd(REG4,REG4,0x5e72)
0x5E680F20,	//0x1460		VoC_msu32_rd(REG4,0x5e68)
0x5E6A0709,	//0x1462		VoC_add16_rd(REG1,REG1,0x5e6a)
0xE126FBAC,	//0x1464		VoC_movreg16(REG6,ACC0_HI,DEFAULT)	|	VoC_shr32_ri(ACC0,0xfffffff5,DEFAULT)
0xDEEE7FC0,	//0x1466		VoC_clipu16_rr(REG6,REG5,IN_PARALLEL)	|	VoC_NOP
0x5E690792,	//0x1468		VoC_sub16_rd(REG2,REG2,0x5e69)
		//0x146a		VoC_endloop1
0xD8A4DC86,	//0x146a		VoC_lw16inc_p(REG4,REG2,DEFAULT)	|	VoC_sw16inc_p(REG6,REG0,DEFAULT)
0x830C608A,	//0x146c		VoC_add16inc_rp(REG4,REG4,REG1,IN_PARALLEL)	|	VoC_movreg16(ACC1_LO,REG4,DEFAULT)
0x5E760A24,	//0x146e		VoC_multf32_rd(ACC0,REG4,0x5e76)
0x608BD8A4,	//0x1470		VoC_movreg16(ACC1_HI,REG4,DEFAULT)	|	VoC_lw16inc_p(REG4,REG2,DEFAULT)
0x0F20830C,	//0x1472		VoC_msu32_rd(REG4,0x5e6c)(lo)	|	VoC_add16inc_rp(REG4,REG4,REG1,IN_PARALLEL)
0xD8235E6C,	//0x1474		VoC_lw16_p(REG3,REG2,DEFAULT)	|	VoC_msu32_rd(REG4,0x5e6c)(hi)
0x0E2082CC,	//0x1476		VoC_mac32_rd(REG4,0x5e66)(lo)	|	VoC_add16inc_rp(REG4,REG3,REG1,DEFAULT)
0x80CC5E66,	//0x1478		VoC_add16_rp(REG4,REG3,REG1,DEFAULT)	|	VoC_mac32_rd(REG4,0x5e66)(hi)
0x5E7207A4,	//0x147a		VoC_sub16_rd(REG4,REG4,0x5e72)
0x5E680F20,	//0x147c		VoC_msu32_rd(REG4,0x5e68)
0x5E6A0709,	//0x147e		VoC_add16_rd(REG1,REG1,0x5e6a)
0xE126FBAC,	//0x1480		VoC_movreg16(REG6,ACC0_HI,DEFAULT)	|	VoC_shr32_ri(ACC0,0xfffffff5,DEFAULT)
0xDEEE7FC0,	//0x1482		VoC_clipu16_rr(REG6,REG5,IN_PARALLEL)	|	VoC_NOP
0xDC86FFC0,	//0x1484		VoC_sw16inc_p(REG6,REG0,DEFAULT)	|	VoC_NOP
0x830CE164,	//0x1486		VoC_add16inc_rp(REG4,REG4,REG1,DEFAULT)	|	VoC_movreg16(REG4,ACC1_HI,DEFAULT)
0x5E760A24,	//0x1488		VoC_multf32_rd(ACC0,REG4,0x5e76)
0x0F3882CF,	//0x148a		VoC_msu32_rd(REG7,0x5e6c)(lo)	|	VoC_add16inc_rp(REG7,REG3,REG1,DEFAULT)
0x82CC5E6C,	//0x148c		VoC_add16inc_rp(REG4,REG3,REG1,DEFAULT)	|	VoC_msu32_rd(REG7,0x5e6c)(hi)
0x5E660E20,	//0x148e		VoC_mac32_rd(REG4,0x5e66)
0x810CE164,	//0x1490		VoC_add16_rp(REG4,REG4,REG1,DEFAULT)	|	VoC_movreg16(REG4,ACC1_HI,DEFAULT)
0x5E7207A4,	//0x1492		VoC_sub16_rd(REG4,REG4,0x5e72)
0x5E680F20,	//0x1494		VoC_msu32_rd(REG4,0x5e68)
0x5E6A0709,	//0x1496		VoC_add16_rd(REG1,REG1,0x5e6a)
0xE126FBAC,	//0x1498		VoC_movreg16(REG6,ACC0_HI,DEFAULT)	|	VoC_shr32_ri(ACC0,0xfffffff5,DEFAULT)
0xDEEE7FC0,	//0x149a		VoC_clipu16_rr(REG6,REG5,IN_PARALLEL)	|	VoC_NOP
0xDC86FFC0,	//0x149c		VoC_sw16inc_p(REG6,REG0,DEFAULT)	|	VoC_NOP
0x0A2482CC,	//0x149e		VoC_multf32_rd(ACC0,REG4,0x5e76)(lo)	|	VoC_add16inc_rp(REG4,REG3,REG1,DEFAULT)
0x82CC5E76,	//0x14a0		VoC_add16inc_rp(REG4,REG3,REG1,DEFAULT)	|	VoC_multf32_rd(ACC0,REG4,0x5e76)(hi)
0x5E6C0F20,	//0x14a2		VoC_msu32_rd(REG4,0x5e6c)
0x830FE164,	//0x14a4		VoC_add16inc_rp(REG7,REG4,REG1,DEFAULT)	|	VoC_movreg16(REG4,ACC1_HI,DEFAULT)
0x5E660E38,	//0x14a6		VoC_mac32_rd(REG7,0x5e66)
0x810CE144,	//0x14a8		VoC_add16_rp(REG4,REG4,REG1,DEFAULT)	|	VoC_movreg16(REG4,ACC1_LO,DEFAULT)
0x5E7207A4,	//0x14aa		VoC_sub16_rd(REG4,REG4,0x5e72)
0x5E680F20,	//0x14ac		VoC_msu32_rd(REG4,0x5e68)
0x5E6A0709,	//0x14ae		VoC_add16_rd(REG1,REG1,0x5e6a)
0xE126FBAC,	//0x14b0		VoC_movreg16(REG6,ACC0_HI,DEFAULT)	|	VoC_shr32_ri(ACC0,0xfffffff5,DEFAULT)
0xDEEE7FC0,	//0x14b2		VoC_clipu16_rr(REG6,REG5,IN_PARALLEL)	|	VoC_NOP
0xDC86FFC0,	//0x14b4		VoC_sw16inc_p(REG6,REG0,DEFAULT)	|	VoC_NOP
0x0789F031,	//0x14b6		VoC_sub16_rd(REG1,REG1,0x5e6b)(lo)	|	VoC_lw16i_short(INC1,0x1,DEFAULT)
0x07805E6B,	//0x14b8		VoC_sub16_rd(REG0,REG0,0x5e6b)(lo)	|	VoC_sub16_rd(REG1,REG1,0x5e6b)(hi)
0xFF3B5E6B,	//0x14ba		VoC_movreg32(REG67,RL7,DEFAULT)	|	VoC_sub16_rd(REG0,REG0,0x5e6b)(hi)
0xC0304079,	//0x14bc		VoC_add16_rr(REG0,REG0,REG6,IN_PARALLEL)	|	VoC_add16_rr(REG1,REG1,REG7,DEFAULT)
		//0x14be		VoC_endloop0
0x5E68070A,	//0x14be		VoC_add16_rd(REG2,REG1,0x5e68)
0xFFC0DFA9,	//0x14c0		VoC_NOP	|	VoC_pop16(RA,DEFAULT)
0xDFE9E580,	//0x14c2		VoC_push16(RA,DEFAULT)	|	VoC_return
		//0x14c3		CS_mp4_qpel8_v_lowpass8X8
0xF7D06022,	//0x14c4		VoC_movreg16(INC0,RL7_LO,IN_PARALLEL)	|	VoC_movreg16(REG2,REG1,DEFAULT)
0xF7F261F1,	//0x14c6		VoC_movreg16(INC2,RL7_HI,IN_PARALLEL)	|	VoC_movreg16(INC1,RL7_HI,DEFAULT)
0xE1E6F019,	//0x14c8		VoC_movreg16(REG6,RL7_HI,DEFAULT)	|	VoC_lw16i_short(FORMAT32,0x0,DEFAULT)
0x1506C0B2,	//0x14ca		VoC_sw16_d(REG6,0x2038)(lo)	|	VoC_add16_rr(REG2,REG2,REG6,DEFAULT)
0x0A852038,	//0x14cc		VoC_lw16i(REG5,0xff)(lo)	|	VoC_sw16_d(REG6,0x2038)(hi)
0x2C1000FF,	//0x14ce		VoC_loop_i(0x0,0x8)(lo)	|	VoC_lw16i(REG5,0xff)(hi)
0xD89315A0,	//0x14d0		VoC_lw16inc_p(REG3,REG1,DEFAULT)	|	VoC_loop_i(0x0,0x8)(hi)
0xF66A02D4,	//0x14d2		VoC_movreg16(ACC1_LO,REG3,IN_PARALLEL)	|	VoC_add16inc_rp(REG4,REG3,REG2,DEFAULT)
0x5E760A24,	//0x14d4		VoC_multf32_rd(ACC0,REG4,0x5e76)
0x0F2082D4,	//0x14d6		VoC_msu32_rd(REG4,0x5e6c)(lo)	|	VoC_add16inc_rp(REG4,REG3,REG2,DEFAULT)
0xD8935E6C,	//0x14d8		VoC_lw16inc_p(REG3,REG1,DEFAULT)	|	VoC_msu32_rd(REG4,0x5e6c)(hi)
0xF66B02D4,	//0x14da		VoC_movreg16(ACC1_HI,REG3,IN_PARALLEL)	|	VoC_add16inc_rp(REG4,REG3,REG2,DEFAULT)
0x5E660E20,	//0x14dc		VoC_mac32_rd(REG4,0x5e66)
0x80D4D893,	//0x14de		VoC_add16_rp(REG4,REG3,REG2,DEFAULT)	|	VoC_lw16inc_p(REG3,REG1,DEFAULT)
0x5E7207A4,	//0x14e0		VoC_sub16_rd(REG4,REG4,0x5e72)
0x5E680F20,	//0x14e2		VoC_msu32_rd(REG4,0x5e68)
0x083FF047,	//0x14e4		VoC_mult16_rd(REG7,REG7,0x2038)(lo)	|	VoC_lw16i_short(REG7,0x2,DEFAULT)
0xFBAC2038,	//0x14e6		VoC_shr32_ri(ACC0,0xfffffff5,DEFAULT)	|	VoC_mult16_rd(REG7,REG7,0x2038)(hi)
0x7FC0E126,	//0x14e8		VoC_NOP	|	VoC_movreg16(REG6,ACC0_HI,DEFAULT)
0xC2BADEEE,	//0x14ea		VoC_sub16_rr(REG2,REG2,REG7,DEFAULT)	|	VoC_clipu16_rr(REG6,REG5,IN_PARALLEL)
0xE164DC86,	//0x14ec		VoC_movreg16(REG4,ACC1_HI,DEFAULT)	|	VoC_sw16inc_p(REG6,REG0,DEFAULT)
0x0A248314,	//0x14ee		VoC_multf32_rd(ACC0,REG4,0x5e76)(lo)	|	VoC_add16inc_rp(REG4,REG4,REG2,DEFAULT)
0xE1445E76,	//0x14f0		VoC_movreg16(REG4,ACC1_LO,DEFAULT)	|	VoC_multf32_rd(ACC0,REG4,0x5e76)(hi)
0x0F388317,	//0x14f2		VoC_msu32_rd(REG7,0x5e6c)(lo)	|	VoC_add16inc_rp(REG7,REG4,REG2,DEFAULT)
0x83145E6C,	//0x14f4		VoC_add16inc_rp(REG4,REG4,REG2,DEFAULT)	|	VoC_msu32_rd(REG7,0x5e6c)(hi)
0x5E660E20,	//0x14f6		VoC_mac32_rd(REG4,0x5e66)
0x8114E164,	//0x14f8		VoC_add16_rp(REG4,REG4,REG2,DEFAULT)	|	VoC_movreg16(REG4,ACC1_HI,DEFAULT)
0x5E7207A4,	//0x14fa		VoC_sub16_rd(REG4,REG4,0x5e72)
0x5E680F20,	//0x14fc		VoC_msu32_rd(REG4,0x5e68)
0x083FF047,	//0x14fe		VoC_mult16_rd(REG7,REG7,0x2038)(lo)	|	VoC_lw16i_short(REG7,0x2,DEFAULT)
0xFBAC2038,	//0x1500		VoC_shr32_ri(ACC0,0xfffffff5,DEFAULT)	|	VoC_mult16_rd(REG7,REG7,0x2038)(hi)
0x7FC0E126,	//0x1502		VoC_NOP	|	VoC_movreg16(REG6,ACC0_HI,DEFAULT)
0xC2BADEEE,	//0x1504		VoC_sub16_rr(REG2,REG2,REG7,DEFAULT)	|	VoC_clipu16_rr(REG6,REG5,IN_PARALLEL)
0x82D4DC86,	//0x1506		VoC_add16inc_rp(REG4,REG3,REG2,DEFAULT)	|	VoC_sw16inc_p(REG6,REG0,DEFAULT)
0x5E760A24,	//0x1508		VoC_multf32_rd(ACC0,REG4,0x5e76)
0x8314E164,	//0x150a		VoC_add16inc_rp(REG4,REG4,REG2,DEFAULT)	|	VoC_movreg16(REG4,ACC1_HI,DEFAULT)
0x5E6C0F20,	//0x150c		VoC_msu32_rd(REG4,0x5e6c)
0x8317E144,	//0x150e		VoC_add16inc_rp(REG7,REG4,REG2,DEFAULT)	|	VoC_movreg16(REG4,ACC1_LO,DEFAULT)
0x5E660E38,	//0x1510		VoC_mac32_rd(REG7,0x5e66)
0x07A48114,	//0x1512		VoC_sub16_rd(REG4,REG4,0x5e72)(lo)	|	VoC_add16_rp(REG4,REG4,REG2,DEFAULT)
0x0F205E72,	//0x1514		VoC_msu32_rd(REG4,0x5e68)(lo)	|	VoC_sub16_rd(REG4,REG4,0x5e72)(hi)
0x70065E68,	//0x1516		VoC_lw16i_short(REG6,0x0,DEFAULT)	|	VoC_msu32_rd(REG4,0x5e68)(hi)
0x07B6E027,	//0x1518		VoC_sub16_rd(REG6,REG6,0x2038)(lo)	|	VoC_lw16i_short(REG7,0x2,IN_PARALLEL)
0xE0D12038,	//0x151a		VoC_movreg16(INC1,REG6,DEFAULT)	|	VoC_sub16_rd(REG6,REG6,0x2038)(hi)
0x2038083F,	//0x151c		VoC_mult16_rd(REG7,REG7,0x2038)
0xE126FBAC,	//0x151e		VoC_movreg16(REG6,ACC0_HI,DEFAULT)	|	VoC_shr32_ri(ACC0,0xfffffff5,DEFAULT)
0xDEEE7FC0,	//0x1520		VoC_clipu16_rr(REG6,REG5,IN_PARALLEL)	|	VoC_NOP
0xDC86C2BA,	//0x1522		VoC_sw16inc_p(REG6,REG0,DEFAULT)	|	VoC_sub16_rr(REG2,REG2,REG7,DEFAULT)
0x15442C05,	//0x1524		VoC_loop_i(0x1,0x2)
0x8314D894,	//0x1526		VoC_add16inc_rp(REG4,REG4,REG2,DEFAULT)	|	VoC_lw16inc_p(REG4,REG1,DEFAULT)
0x5E760A24,	//0x1528		VoC_multf32_rd(ACC0,REG4,0x5e76)
0x8314D894,	//0x152a		VoC_add16inc_rp(REG4,REG4,REG2,DEFAULT)	|	VoC_lw16inc_p(REG4,REG1,DEFAULT)
0x5E6C0F20,	//0x152c		VoC_msu32_rd(REG4,0x5e6c)
0x8314D894,	//0x152e		VoC_add16inc_rp(REG4,REG4,REG2,DEFAULT)	|	VoC_lw16inc_p(REG4,REG1,DEFAULT)
0x5E660E20,	//0x1530		VoC_mac32_rd(REG4,0x5e66)
0x8114D814,	//0x1532		VoC_add16_rp(REG4,REG4,REG2,DEFAULT)	|	VoC_lw16_p(REG4,REG1,DEFAULT)
0x5E7207A4,	//0x1534		VoC_sub16_rd(REG4,REG4,0x5e72)
0x5E680F20,	//0x1536		VoC_msu32_rd(REG4,0x5e68)
0xE0277086,	//0x1538		VoC_lw16i_short(REG7,0x2,IN_PARALLEL)	|	VoC_lw16i_short(REG6,0x4,DEFAULT)
0x20380836,	//0x153a		VoC_mult16_rd(REG6,REG6,0x2038)
0x2038083F,	//0x153c		VoC_mult16_rd(REG7,REG7,0x2038)
0xFBACC071,	//0x153e		VoC_shr32_ri(ACC0,0xfffffff5,DEFAULT)	|	VoC_add16_rr(REG1,REG1,REG6,DEFAULT)
0x7FC0E126,	//0x1540		VoC_NOP	|	VoC_movreg16(REG6,ACC0_HI,DEFAULT)
0xC2BADEEE,	//0x1542		VoC_sub16_rr(REG2,REG2,REG7,DEFAULT)	|	VoC_clipu16_rr(REG6,REG5,IN_PARALLEL)
		//0x1544		VoC_endloop1
0xD8A4DC86,	//0x1544		VoC_lw16inc_p(REG4,REG2,DEFAULT)	|	VoC_sw16inc_p(REG6,REG0,DEFAULT)
0x830C608A,	//0x1546		VoC_add16inc_rp(REG4,REG4,REG1,IN_PARALLEL)	|	VoC_movreg16(ACC1_LO,REG4,DEFAULT)
0x5E760A24,	//0x1548		VoC_multf32_rd(ACC0,REG4,0x5e76)
0x608BD8A4,	//0x154a		VoC_movreg16(ACC1_HI,REG4,DEFAULT)	|	VoC_lw16inc_p(REG4,REG2,DEFAULT)
0x0F20830C,	//0x154c		VoC_msu32_rd(REG4,0x5e6c)(lo)	|	VoC_add16inc_rp(REG4,REG4,REG1,IN_PARALLEL)
0xD8235E6C,	//0x154e		VoC_lw16_p(REG3,REG2,DEFAULT)	|	VoC_msu32_rd(REG4,0x5e6c)(hi)
0x0E2082CC,	//0x1550		VoC_mac32_rd(REG4,0x5e66)(lo)	|	VoC_add16inc_rp(REG4,REG3,REG1,DEFAULT)
0x80CC5E66,	//0x1552		VoC_add16_rp(REG4,REG3,REG1,DEFAULT)	|	VoC_mac32_rd(REG4,0x5e66)(hi)
0x5E7207A4,	//0x1554		VoC_sub16_rd(REG4,REG4,0x5e72)
0x5E680F20,	//0x1556		VoC_msu32_rd(REG4,0x5e68)
0x083FF087,	//0x1558		VoC_mult16_rd(REG7,REG7,0x2038)(lo)	|	VoC_lw16i_short(REG7,0x4,DEFAULT)
0xFBAC2038,	//0x155a		VoC_shr32_ri(ACC0,0xfffffff5,DEFAULT)	|	VoC_mult16_rd(REG7,REG7,0x2038)(hi)
0x7FC0E126,	//0x155c		VoC_NOP	|	VoC_movreg16(REG6,ACC0_HI,DEFAULT)
0xC079DEEE,	//0x155e		VoC_add16_rr(REG1,REG1,REG7,DEFAULT)	|	VoC_clipu16_rr(REG6,REG5,IN_PARALLEL)
0xE164DC86,	//0x1560		VoC_movreg16(REG4,ACC1_HI,DEFAULT)	|	VoC_sw16inc_p(REG6,REG0,DEFAULT)
0x0A3C830F,	//0x1562		VoC_multf32_rd(ACC0,REG7,0x5e76)(lo)	|	VoC_add16inc_rp(REG7,REG4,REG1,DEFAULT)
0x82CF5E76,	//0x1564		VoC_add16inc_rp(REG7,REG3,REG1,DEFAULT)	|	VoC_multf32_rd(ACC0,REG7,0x5e76)(hi)
0x5E6C0F38,	//0x1566		VoC_msu32_rd(REG7,0x5e6c)
0x0E3882CF,	//0x1568		VoC_mac32_rd(REG7,0x5e66)(lo)	|	VoC_add16inc_rp(REG7,REG3,REG1,DEFAULT)
0x810C5E66,	//0x156a		VoC_add16_rp(REG4,REG4,REG1,DEFAULT)	|	VoC_mac32_rd(REG7,0x5e66)(hi)
0x5E7207A4,	//0x156c		VoC_sub16_rd(REG4,REG4,0x5e72)
0x5E680F20,	//0x156e		VoC_msu32_rd(REG4,0x5e68)
0x083FF087,	//0x1570		VoC_mult16_rd(REG7,REG7,0x2038)(lo)	|	VoC_lw16i_short(REG7,0x4,DEFAULT)
0xFBAC2038,	//0x1572		VoC_shr32_ri(ACC0,0xfffffff5,DEFAULT)	|	VoC_mult16_rd(REG7,REG7,0x2038)(hi)
0x7FC0E126,	//0x1574		VoC_NOP	|	VoC_movreg16(REG6,ACC0_HI,DEFAULT)
0xC079DEEE,	//0x1576		VoC_add16_rr(REG1,REG1,REG7,DEFAULT)	|	VoC_clipu16_rr(REG6,REG5,IN_PARALLEL)
0x82CCDC86,	//0x1578		VoC_add16inc_rp(REG4,REG3,REG1,DEFAULT)	|	VoC_sw16inc_p(REG6,REG0,DEFAULT)
0x5E760A24,	//0x157a		VoC_multf32_rd(ACC0,REG4,0x5e76)
0x0F2082CC,	//0x157c		VoC_msu32_rd(REG4,0x5e6c)(lo)	|	VoC_add16inc_rp(REG4,REG3,REG1,DEFAULT)
0xE1645E6C,	//0x157e		VoC_movreg16(REG4,ACC1_HI,DEFAULT)	|	VoC_msu32_rd(REG4,0x5e6c)(hi)
0x0E38830F,	//0x1580		VoC_mac32_rd(REG7,0x5e66)(lo)	|	VoC_add16inc_rp(REG7,REG4,REG1,DEFAULT)
0xE1445E66,	//0x1582		VoC_movreg16(REG4,ACC1_LO,DEFAULT)	|	VoC_mac32_rd(REG7,0x5e66)(hi)
0x07A4810C,	//0x1584		VoC_sub16_rd(REG4,REG4,0x5e72)(lo)	|	VoC_add16_rp(REG4,REG4,REG1,DEFAULT)
0x0F205E72,	//0x1586		VoC_msu32_rd(REG4,0x5e68)(lo)	|	VoC_sub16_rd(REG4,REG4,0x5e72)(hi)
0xF0875E68,	//0x1588		VoC_lw16i_short(REG7,0x4,DEFAULT)	|	VoC_msu32_rd(REG4,0x5e68)(hi)
0x2038083F,	//0x158a		VoC_mult16_rd(REG7,REG7,0x2038)
0xE126FBAC,	//0x158c		VoC_movreg16(REG6,ACC0_HI,DEFAULT)	|	VoC_shr32_ri(ACC0,0xfffffff5,DEFAULT)
0xDEEE7FC0,	//0x158e		VoC_clipu16_rr(REG6,REG5,IN_PARALLEL)	|	VoC_NOP
0xDC86C079,	//0x1590		VoC_sw16inc_p(REG6,REG0,DEFAULT)	|	VoC_add16_rr(REG1,REG1,REG7,DEFAULT)
0x61C3F106,	//0x1592		VoC_movreg16(REG3,RL7_LO,DEFAULT)	|	VoC_lw16i_short(REG6,0x8,DEFAULT)
0x45A7F7E4,	//0x1594		VoC_mult16_rr(REG7,REG6,REG4,DEFAULT)	|	VoC_movreg16(REG4,RL7_HI,IN_PARALLEL)
0x0709C59E,	//0x1596		VoC_add16_rd(REG1,REG1,0x5e68)(lo)	|	VoC_mult16_rr(REG6,REG6,REG3,IN_PARALLEL)
0x07005E68,	//0x1598		VoC_add16_rd(REG0,REG0,0x5e68)(lo)	|	VoC_add16_rd(REG1,REG1,0x5e68)(hi)
0x42795E68,	//0x159a		VoC_sub16_rr(REG1,REG1,REG7,DEFAULT)	|	VoC_add16_rd(REG0,REG0,0x5e68)(hi)
0xE022C230,	//0x159c		VoC_movreg16(REG2,REG1,DEFAULT)	|	VoC_sub16_rr(REG0,REG0,REG6,IN_PARALLEL)
0x20381411,	//0x159e		VoC_lw16_d(INC1,0x2038)
		//0x15a0		VoC_endloop0
0xDFA9DE10,	//0x15a0		VoC_pop16(RA,DEFAULT)	|	VoC_inc_p(REG2,DEFAULT)
0xE580FFC0,	//0x15a2		VoC_return	|	VoC_NOP
		//0x15a4		CS_mp4_qpel8X8_add
0x7030DFE9,	//0x15a4		VoC_lw16i_short(INC0,0x1,DEFAULT)	|	VoC_push16(RA,DEFAULT)
0xFF3BF005,	//0x15a6		VoC_movreg32(REG67,RL7,DEFAULT)	|	VoC_lw16i_short(INC1,0x1,IN_PARALLEL)
0x15B72E18,	//0x15a8		VoC_loop_r(0,REG3)
0x15B32C11,	//0x15aa		VoC_loop_i(0x1,0x8)
0xD805D894,	//0x15ac		VoC_lw16_p(REG5,REG0,DEFAULT)	|	VoC_lw16inc_p(REG4,REG1,DEFAULT)
0xC12C7022,	//0x15ae		VoC_add16_rr(REG4,REG4,REG5,IN_PARALLEL)	|	VoC_lw16i_short(REG2,0x1,DEFAULT)
0xF80CC114,	//0x15b0		VoC_shr16_ri(REG4,0x1,DEFAULT)	|	VoC_add16_rr(REG4,REG4,REG2,DEFAULT)
0xDC84FFC0,	//0x15b2		VoC_sw16inc_p(REG4,REG0,DEFAULT)	|	VoC_NOP
		//0x15b3		VoC_endloop1
0x4374F105,	//0x15b4		VoC_sub16_rr(REG4,REG5,REG6,DEFAULT)	|	VoC_lw16i_short(REG5,0x8,DEFAULT)
0x4220C37D,	//0x15b6		VoC_sub16_rr(REG0,REG0,REG4,DEFAULT)	|	VoC_sub16_rr(REG5,REG5,REG7,IN_PARALLEL)
		//0x15b7		VoC_endloop0
0xDFA9C269,	//0x15b8		VoC_pop16(RA,DEFAULT)	|	VoC_sub16_rr(REG1,REG1,REG5,IN_PARALLEL)
0xE580FFC0,	//0x15ba		VoC_return	|	VoC_NOP
		//0x15bc		CS_mp4_qpel8_mc
0xFFC05FE9,	//0x15bc		VoC_NAD(IN_PARALLEL)	|	VoC_push16(RA,DEFAULT)
0x13E62B80,	//0x15be		VoC_jal(CS_mp4_qpel8_mv4_data_dma_in)
0xF7037062,	//0x15c0		VoC_movreg16(REG3,ACC0_LO,IN_PARALLEL)	|	VoC_lw16i_short(REG2,0x3,DEFAULT)
0xF7CC6413,	//0x15c2		VoC_movreg16(RL6_LO,RL7_LO,IN_PARALLEL)	|	VoC_and16_rr(REG3,REG2,DEFAULT)
0x18DE0A81,	//0x15c4		VoC_lw16i(REG1,0x18de)
0x0A80C0C9,	//0x15c6		VoC_lw16i(REG0,0xd70)(lo)	|	VoC_add16_rr(REG1,REG3,REG1,DEFAULT)
0x718F0D70,	//0x15c8		VoC_lw16i_short(RL7_HI,0xc,DEFAULT)	|	VoC_lw16i(REG0,0xd70)(hi)
0xF10EE093,	//0x15ca		VoC_lw16i_short(RL7_LO,0x8,DEFAULT)	|	VoC_lw16i_short(REG3,0x9,IN_PARALLEL)
0xDFC1DFC0,	//0x15cc		VoC_push16(REG1,DEFAULT)	|	VoC_push16(REG0,DEFAULT)
0x20346C12,	//0x15ce		VoC_bez16_d(CS_mp4_qpel8_h_end,0x2034)
0x13F72B80,	//0x15d0		VoC_jal(CS_mp4_qpel8_h_lowpass8X8)
0x40ABF043,	//0x15d2		VoC_be16_rd(CS_mp4_qpel8_h_end,REG3,0x2034)(lo)	|	VoC_lw16i_short(REG3,0x2,DEFAULT)
0x70232034,	//0x15d4		VoC_lw16i_short(REG3,0x1,DEFAULT)	|	VoC_be16_rd(CS_mp4_qpel8_h_end,REG3,0x2034)(hi)
0xD611D620,	//0x15d6		VoC_lw16_sd(REG1,0x0,DEFAULT)	|	VoC_lw16_sd(REG0,0x1,IN_PARALLEL)
0x20344023,	//0x15d8		VoC_be16_rd(CS_mp4_qpel8_h_add,REG3,0x2034)
0x5E680709,	//0x15da		VoC_add16_rd(REG1,REG1,0x5e68)
		//0x15dc		CS_mp4_qpel8_h_add
0xFFC07123,	//0x15dc		VoC_NAD(IN_PARALLEL)	|	VoC_lw16i_short(REG3,0x9,DEFAULT)
0x15A42B80,	//0x15de		VoC_jal(CS_mp4_qpel8X8_add)
		//0x15e0		CS_mp4_qpel8_h_end
0x20356C1C,	//0x15e0		VoC_bez16_d(CS_mp4_qpel8_v_end,0x2035)
0x20346C0A,	//0x15e2		VoC_bez16_d(CS_mp4_qpel8_not_change_bufer,0x2034)
0x602EFF38,	//0x15e4		VoC_movreg16(RL7_LO,REG1,DEFAULT)	|	VoC_movreg32(REG01,RL7,DEFAULT)
0xDF80F60F,	//0x15e6		VoC_pop16(REG0,DEFAULT)	|	VoC_movreg16(RL7_HI,REG0,IN_PARALLEL)
0xDFC0DF81,	//0x15e8		VoC_push16(REG0,DEFAULT)	|	VoC_pop16(REG1,DEFAULT)
0xFFC05FC1,	//0x15ea		VoC_NAD(IN_PARALLEL)	|	VoC_push16(REG1,DEFAULT)
		//0x15ec		CS_mp4_qpel8_not_change_bufer
0x14C32B80,	//0x15ec		VoC_jal(CS_mp4_qpel8_v_lowpass8X8)
0x40ABF043,	//0x15ee		VoC_be16_rd(CS_mp4_qpel8_v_end,REG3,0x2035)(lo)	|	VoC_lw16i_short(REG3,0x2,DEFAULT)
0x70232035,	//0x15f0		VoC_lw16i_short(REG3,0x1,DEFAULT)	|	VoC_be16_rd(CS_mp4_qpel8_v_end,REG3,0x2035)(hi)
0x5611D620,	//0x15f2		VoC_lw16_sd(REG1,0x0,DEFAULT)	|	VoC_lw16_sd(REG0,0x1,IN_PARALLEL)
0x401BF7E4,	//0x15f4		VoC_be16_rd(CS_mp4_qpel8_v_add,REG3,0x2035)(lo)	|	VoC_movreg16(REG4,RL7_HI,IN_PARALLEL)
0xC0612035,	//0x15f6		VoC_add16_rr(REG1,REG1,REG4,DEFAULT)	|	VoC_be16_rd(CS_mp4_qpel8_v_add,REG3,0x2035)(hi)
		//0x15f8		CS_mp4_qpel8_v_add
0xFFC07103,	//0x15f8		VoC_NAD(IN_PARALLEL)	|	VoC_lw16i_short(REG3,0x8,DEFAULT)
0x15A42B80,	//0x15fa		VoC_jal(CS_mp4_qpel8X8_add)
		//0x15fc		CS_mp4_qpel8_v_end
0xF78061CF,	//0x15fc		VoC_movreg16(REG0,RL6_LO,IN_PARALLEL)	|	VoC_movreg16(RL7_HI,RL7_LO,DEFAULT)
0x2B80D621,	//0x15fe		VoC_jal(CS_mp4_qpel8X8S_to_8X8B)(lo)	|	VoC_lw16_sd(REG1,0x1,DEFAULT)
0xDF8013C1,	//0x1600		VoC_pop16(REG0,DEFAULT)	|	VoC_jal(CS_mp4_qpel8X8S_to_8X8B)(hi)
0xDFA9DF81,	//0x1602		VoC_pop16(RA,DEFAULT)	|	VoC_pop16(REG1,DEFAULT)
0xE580FFC0,	//0x1604		VoC_return	|	VoC_NOP
		//0x1606		CS_mp4_qpel8_mc00_c
0xFFC05FE9,	//0x1606		VoC_NAD(IN_PARALLEL)	|	VoC_push16(RA,DEFAULT)
0x13E62B80,	//0x1608		VoC_jal(CS_mp4_qpel8_mv4_data_dma_in)
0xF7037062,	//0x160a		VoC_movreg16(REG3,ACC0_LO,IN_PARALLEL)	|	VoC_lw16i_short(REG2,0x3,DEFAULT)
0x0A81E413,	//0x160c		VoC_lw16i(REG1,0x18de)(lo)	|	VoC_and16_rr(REG3,REG2,DEFAULT)
0x40C918DE,	//0x160e		VoC_add16_rr(REG1,REG3,REG1,DEFAULT)	|	VoC_lw16i(REG1,0x18de)(hi)
0x6023F7C0,	//0x1610		VoC_movreg16(REG3,REG1,DEFAULT)	|	VoC_movreg16(REG0,RL7_LO,IN_PARALLEL)
0x7030F602,	//0x1612		VoC_lw16i_short(INC0,0x1,DEFAULT)	|	VoC_movreg16(REG2,REG0,IN_PARALLEL)
0x7032F005,	//0x1614		VoC_lw16i_short(INC2,0x1,DEFAULT)	|	VoC_lw16i_short(INC1,0x1,IN_PARALLEL)
0x7204F007,	//0x1616		VoC_lw16i_short(REG4,0x10,DEFAULT)	|	VoC_lw16i_short(INC3,0x1,IN_PARALLEL)
0x40A2E305,	//0x1618		VoC_add16_rr(REG2,REG2,REG4,DEFAULT)	|	VoC_lw16i_short(REG5,0x30,IN_PARALLEL)
0xFFC0C0EB,	//0x161a		VoC_NAD	|	VoC_add16_rr(REG3,REG3,REG5,IN_PARALLEL)
0x162B2C08,	//0x161c		VoC_loop_i(0x0,0x4)
0x16292C09,	//0x161e		VoC_loop_i(0x1,0x4)
0xD895D894,	//0x1620		VoC_lw16inc_p(REG5,REG1,DEFAULT)	|	VoC_lw16inc_p(REG4,REG1,DEFAULT)
0xD8B7D8B6,	//0x1622		VoC_lw16inc_p(REG7,REG3,DEFAULT)	|	VoC_lw16inc_p(REG6,REG3,DEFAULT)
0xF9C779C5,	//0x1624		VoC_shru16_ri(REG7,0xfffffff8,IN_PARALLEL)	|	VoC_shru16_ri(REG5,0xfffffff8,DEFAULT)
0xE47EE46C,	//0x1626		VoC_or16_rr(REG6,REG7,DEFAULT)	|	VoC_or16_rr(REG4,REG5,DEFAULT)
0xDCA6DC84,	//0x1628		VoC_sw16inc_p(REG6,REG2,DEFAULT)	|	VoC_sw16inc_p(REG4,REG0,DEFAULT)
		//0x1629		VoC_endloop1
0x4061F084,	//0x162a		VoC_add16_rr(REG1,REG1,REG4,DEFAULT)	|	VoC_lw16i_short(REG4,0x4,DEFAULT)
		//0x162b		VoC_endloop0
0xDFA9C0E3,	//0x162c		VoC_pop16(RA,DEFAULT)	|	VoC_add16_rr(REG3,REG3,REG4,IN_PARALLEL)
0xE580FFC0,	//0x162e		VoC_return	|	VoC_NOP
		//0x1630		CS_interpolate8x8_quarterpel
0xF4015FE9,	//0x1630		VoC_lw16i_short(FORMAT32,0x0,IN_PARALLEL)	|	VoC_push16(RA,DEFAULT)
0xFF1A5F46,	//0x1632		VoC_movreg32(REG45,REG67,IN_PARALLEL)	|	VoC_push32(RL6,DEFAULT)
0x00031606,	//0x1634		VoC_and16_ri(REG6,0x3)
0x00031607,	//0x1636		VoC_and16_ri(REG7,0x3)
0xF81578F7,	//0x1638		VoC_shr16_ri(REG5,0x2,IN_PARALLEL)	|	VoC_shr16_ri(REG7,0xfffffffe,DEFAULT)
0x0CBC0E28,	//0x163a		VoC_mac32_rd(REG5,0xcbc)
0xF685647E,	//0x163c		VoC_movreg16(REG5,REG4,IN_PARALLEL)	|	VoC_or16_rr(REG6,REG7,DEFAULT)
0xE0007A92,	//0x163e		VoC_lw16i_short(REG0,0x0,IN_PARALLEL)	|	VoC_shr32_ri(REG45,0x12,DEFAULT)
0x3586C914,	//0x1640		VoC_bne16_rr(CS_interpolate8x8_quarterpel01,REG0,REG6)(lo)	|	VoC_add32_rr(ACC0,ACC0,REG45,DEFAULT)
0x2B801646,	//0x1642		VoC_jal(CS_mp4_qpel8_mc00_c)(lo)	|	VoC_bne16_rr(CS_interpolate8x8_quarterpel01,REG0,REG6)(hi)
0xE5CB1606,	//0x1644		VoC_jump(CS_interpolate8x8_quarterpel_end0)	|	VoC_jal(CS_mp4_qpel8_mc00_c)(hi)
		//0x1646		CS_interpolate8x8_quarterpel01
0x1602E0C2,	//0x1646		VoC_and16_ri(REG2,0x3)(lo)	|	VoC_movreg16(REG2,REG6,DEFAULT)
0xF8160003,	//0x1648		VoC_shr16_ri(REG6,0x2,DEFAULT)	|	VoC_and16_ri(REG2,0x3)(hi)
0x20341502,	//0x164a		VoC_sw16_d(REG2,0x2034)
0x20351506,	//0x164c		VoC_sw16_d(REG6,0x2035)
0x15BC2B80,	//0x164e		VoC_jal(CS_mp4_qpel8_mc)
		//0x1650		CS_interpolate8x8_quarterpel_end0
0xDFA9DF06,	//0x1650		VoC_pop16(RA,DEFAULT)	|	VoC_pop32(RL6,DEFAULT)
0xE580FFC0,	//0x1652		VoC_return	|	VoC_NOP
		//0x1654		VOC_MPEG4_DIV_S
0xE0125FE9,	//0x1654		VoC_lw16i_short(REG2,0x1,IN_PARALLEL)	|	VoC_push16(RA,DEFAULT)
0x166E3725,	//0x1656		VoC_be32_rr(CII_DIV_S_bgtzend,ACC0,ACC1)
0x00001806,	//0x1658		VoC_lw16i_set_inc(REG2,0x0,0x1)
0xFF467F43,	//0x165a		VoC_lw32z(RL6,IN_PARALLEL)	|	VoC_lw32z(REG67,DEFAULT)
0x16603284,	//0x165c		VoC_bgtz32_r(CII_DIV_S_bgtz0,ACC0)
0xCBA47026,	//0x165e		VoC_sub32_rr(ACC0,RL6,ACC0,IN_PARALLEL)	|	VoC_lw16i_short(REG6,0x1,DEFAULT)
		//0x1660		CII_DIV_S_bgtz0
0x16643285,	//0x1660		VoC_bgtz32_r(CII_DIV_S_bgtz1,ACC1)
0xCBAD7027,	//0x1662		VoC_sub32_rr(ACC1,RL6,ACC1,IN_PARALLEL)	|	VoC_lw16i_short(REG7,0x1,DEFAULT)
		//0x1664		CII_DIV_S_bgtz1
0x3384CB2C,	//0x1664		VoC_bltz32_r(CII_DIV_S_bgtz2,ACC0)(lo)	|	VoC_sub32_rr(ACC0,ACC0,ACC1,DEFAULT)
0xDE10166A,	//0x1666		VoC_inc_p(REG2,DEFAULT)	|	VoC_bltz32_r(CII_DIV_S_bgtz2,ACC0)(hi)
0xFFC065FC,	//0x1668		VoC_NAD(IN_PARALLEL)	|	VoC_jump(CII_DIV_S_bgtz1)
		//0x166a		CII_DIV_S_bgtz2
0x166E3537,	//0x166a		VoC_be16_rr(CII_DIV_S_bgtzend,REG6,REG7)
0xC392F006,	//0x166c		VoC_sub16_rr(REG2,REG6,REG2,DEFAULT)	|	VoC_lw16i_short(REG6,0x0,DEFAULT)
		//0x166e		CII_DIV_S_bgtzend
0xFFC0DFA9,	//0x166e		VoC_NOP	|	VoC_pop16(RA,DEFAULT)
0xFFC06580,	//0x1670		VoC_NAD(IN_PARALLEL)	|	VoC_return
		//0x1672		CS_transfer_16to8add_c
0x00FF0A87,	//0x1672		VoC_lw16i(REG7,0xff)
0xD814EC12,	//0x1674		VoC_lw16_p(REG4,REG1,DEFAULT)	|	VoC_loop_i_short(0x20,DEFAULT)
0xF9446085,	//0x1676		VoC_shru16_ri(REG4,0x8,IN_PARALLEL)	|	VoC_movreg16(REG5,REG4,DEFAULT)
0x00FF1605,	//0x1678		VoC_and16_ri(REG5,0xff)
0x03048345,	//0x167a		VoC_add16inc_rp(REG4,REG4,REG0,DEFAULT)	|	VoC_add16inc_rp(REG5,REG5,REG0,DEFAULT)
0x1605DEFD,	//0x167c		VoC_and16_ri(REG5,0xff)(lo)	|	VoC_clipu16_rr(REG5,REG7,IN_PARALLEL)
0x702600FF,	//0x167e		VoC_lw16i_short(REG6,0x1,DEFAULT)	|	VoC_and16_ri(REG5,0xff)(hi)
0x1604DEFC,	//0x1680		VoC_and16_ri(REG4,0xff)(lo)	|	VoC_clipu16_rr(REG4,REG7,IN_PARALLEL)
0xF9C400FF,	//0x1682		VoC_shru16_ri(REG4,0xfffffff8,DEFAULT)	|	VoC_and16_ri(REG4,0xff)(hi)
0xFFC0E46C,	//0x1684		VoC_NOP	|	VoC_or16_rr(REG4,REG5,DEFAULT)
		//0x1686		VoC_endloop0
0xE580DC94,	//0x1686		VoC_return	|	VoC_sw16inc_p(REG4,REG1,DEFAULT)
		//0x1688		CS_add_pixels_clamped4_c
0x00FF0A87,	//0x1688		VoC_lw16i(REG7,0xff)
0x169F2C09,	//0x168a		VoC_loop_i(0x1,0x4)
0xD814E852,	//0x168c		VoC_lw16_p(REG4,REG1,DEFAULT)	|	VoC_loop_i_short(0x2,DEFAULT)
0xF9446085,	//0x168e		VoC_shru16_ri(REG4,0x8,IN_PARALLEL)	|	VoC_movreg16(REG5,REG4,DEFAULT)
0x00FF1605,	//0x1690		VoC_and16_ri(REG5,0xff)
0x03048345,	//0x1692		VoC_add16inc_rp(REG4,REG4,REG0,DEFAULT)	|	VoC_add16inc_rp(REG5,REG5,REG0,DEFAULT)
0x1605DEFD,	//0x1694		VoC_and16_ri(REG5,0xff)(lo)	|	VoC_clipu16_rr(REG5,REG7,IN_PARALLEL)
0x702600FF,	//0x1696		VoC_lw16i_short(REG6,0x1,DEFAULT)	|	VoC_and16_ri(REG5,0xff)(hi)
0x1604DEFC,	//0x1698		VoC_and16_ri(REG4,0xff)(lo)	|	VoC_clipu16_rr(REG4,REG7,IN_PARALLEL)
0xF9C400FF,	//0x169a		VoC_shru16_ri(REG4,0xfffffff8,DEFAULT)	|	VoC_and16_ri(REG4,0xff)(hi)
0xFFC0E46C,	//0x169c		VoC_NOP	|	VoC_or16_rr(REG4,REG5,DEFAULT)
		//0x169e		VoC_endloop0
0x0700DC94,	//0x169e		VoC_add16_rd(REG0,REG0,0x5e6a)(lo)	|	VoC_sw16inc_p(REG4,REG1,DEFAULT)
		//0x169f		VoC_endloop1
0xE5805E6A,	//0x16a0		VoC_return	|	VoC_add16_rd(REG0,REG0,0x5e6a)(hi)
		//0x16a2		CS_get_inter_block_h263
0x1404DFE9,	//0x16a2		VoC_lw16_d(REG4,0xcad)(lo)	|	VoC_push16(RA,DEFAULT)
0x60860CAD,	//0x16a4		VoC_movreg16(REG6,REG4,DEFAULT)	|	VoC_lw16_d(REG4,0xcad)(hi)
0x78FEF687,	//0x16a6		VoC_shr16_ri(REG6,0xffffffff,DEFAULT)	|	VoC_movreg16(REG7,REG4,IN_PARALLEL)
0x641CE013,	//0x16a8		VoC_and16_rr(REG4,REG3,DEFAULT)	|	VoC_lw16i_short(REG3,0x1,IN_PARALLEL)
0x31C4E009,	//0x16aa		VoC_bnez16_r(CS_get_inter_block_h263_13,REG4)(lo)	|	VoC_lw16i_short(ACC0_HI,0x0,IN_PARALLEL)
0xC3DF16AE,	//0x16ac		VoC_sub16_rr(REG7,REG7,REG3,DEFAULT)	|	VoC_bnez16_r(CS_get_inter_block_h263_13,REG4)(hi)
		//0x16ae		CS_get_inter_block_h263_13
0x5E781807,	//0x16ae		VoC_lw16i_set_inc(REG3,0x5e78,0x1)
0x0FF01583,	//0x16b0		VoC_sw32_d(REG67,0xff0)
0xFFC07032,	//0x16b2		VoC_NAD(IN_PARALLEL)	|	VoC_lw16i_short(INC2,0x1,DEFAULT)
		//0x16b4		CS_get_inter_block_h263_11
0x06462B80,	//0x16b4		VoC_jal(CS_get_coeff_h263)
0x3525F7E5,	//0x16b6		VoC_be16_rr(CS_get_inter_block_h263_12,REG4,REG5)(lo)	|	VoC_lw16i_short(REG5,0xffffffff,DEFAULT)
0xE12516D8,	//0x16b8		VoC_movreg16(REG5,ACC0_HI,DEFAULT)	|	VoC_be16_rr(CS_get_inter_block_h263_12,REG4,REG5)(hi)
0x5FC3C165,	//0x16ba		VoC_push16(REG3,DEFAULT)	|	VoC_add16_rr(REG5,REG5,REG4,DEFAULT)
0x0A81C0EB,	//0x16bc		VoC_lw16i(REG1,0xe70)(lo)	|	VoC_add16_rr(REG3,REG3,REG5,IN_PARALLEL)
0xD8340E70,	//0x16be		VoC_lw16_p(REG4,REG3,DEFAULT)	|	VoC_lw16i(REG1,0xe70)(hi)
0xE0144061,	//0x16c0		VoC_lw16i_short(REG4,0x1,IN_PARALLEL)	|	VoC_add16_rr(REG1,REG1,REG4,DEFAULT)
0x60A9C165,	//0x16c2		VoC_movreg16(ACC0_HI,REG5,DEFAULT)	|	VoC_add16_rr(REG5,REG5,REG4,DEFAULT)
0x083FDF83,	//0x16c4		VoC_mult16_rd(REG7,REG7,0xff0)(lo)	|	VoC_pop16(REG3,IN_PARALLEL)
0x31070FF0,	//0x16c6		VoC_bgtz16_r(CS_get_inter_block_h263_14,REG7)(lo)	|	VoC_mult16_rd(REG7,REG7,0xff0)(hi)
0x07BF16CE,	//0x16c8		VoC_sub16_rd(REG7,REG7,0xff1)(lo)	|	VoC_bgtz16_r(CS_get_inter_block_h263_14,REG7)(hi)
0x07BF0FF1,	//0x16ca		VoC_sub16_rd(REG7,REG7,0xff1)(lo)	|	VoC_sub16_rd(REG7,REG7,0xff1)(hi)
0xFFC00FF1,	//0x16cc		VoC_NAD	|	VoC_sub16_rd(REG7,REG7,0xff1)(hi)
		//0x16ce		CS_get_inter_block_h263_14
0x0FF1073F,	//0x16ce		VoC_add16_rd(REG7,REG7,0xff1)
0x07FF0A85,	//0x16d0		VoC_lw16i(REG5,0x7ff)
0xDEAF7031,	//0x16d2		VoC_clip16_rr(REG7,REG5,IN_PARALLEL)	|	VoC_lw16i_short(INC1,0x1,DEFAULT)
0xDC17FFC0,	//0x16d4		VoC_sw16_p(REG7,REG1,DEFAULT)	|	VoC_NOP
0x16B43186,	//0x16d6		VoC_bez16_r(CS_get_inter_block_h263_11,REG6)
		//0x16d8		CS_get_inter_block_h263_12
0xFFC0DFA9,	//0x16d8		VoC_NOP	|	VoC_pop16(RA,DEFAULT)
0xFFC06580,	//0x16da		VoC_NAD(IN_PARALLEL)	|	VoC_return
		//0x16dc		CS_decoder_mb_decode
0xFF445FE9,	//0x16dc		VoC_lw32z(ACC0,IN_PARALLEL)	|	VoC_push16(RA,DEFAULT)
0x0CF0180B,	//0x16de		VoC_lw16i_set_inc(REG3,0xcf0,0x2)
0xE0617000,	//0x16e0		VoC_lw16i_short(REG1,0x6,IN_PARALLEL)	|	VoC_lw16i_short(REG0,0x0,DEFAULT)
0x1500F030,	//0x16e2		VoC_sw16_d(REG0,0x2008)(lo)	|	VoC_lw16i_short(INC0,0x1,DEFAULT)
0x15002008,	//0x16e4		VoC_sw16_d(REG0,0x2010)(lo)	|	VoC_sw16_d(REG0,0x2008)(hi)
0x15002010,	//0x16e6		VoC_sw16_d(REG0,0x2011)(lo)	|	VoC_sw16_d(REG0,0x2010)(hi)
0xFFC02011,	//0x16e8		VoC_NAD	|	VoC_sw16_d(REG0,0x2011)(hi)
		//0x16ea		CS_decoder_mb_decode03
0x17943501,	//0x16ea		VoC_be16_rr(CS_decoder_mb_decode01,REG0,REG1)
0xE2045F40,	//0x16ec		VoC_lw16i_short(REG4,0x20,IN_PARALLEL)	|	VoC_push32(REG01,DEFAULT)
0xF66E7E04,	//0x16ee		VoC_movreg16(RL7_LO,REG3,IN_PARALLEL)	|	VoC_shr16_rr(REG4,REG0,DEFAULT)
0x0CB62804,	//0x16f0		VoC_and16_rd(REG4,0xcb6)
0x1504FFC0,	//0x16f2		VoC_sw16_d(REG4,0x2010)(lo)	|	VoC_NOP
0x31C42010,	//0x16f4		VoC_bnez16_r(CS_decoder_mb_inter_decode_cbp_1,REG4)(lo)	|	VoC_sw16_d(REG4,0x2010)(hi)
0x6E1316FC,	//0x16f6		VoC_bnez16_d(CS_decoder_mb_decode_4X4,0x2009)(lo)	|	VoC_bnez16_r(CS_decoder_mb_inter_decode_cbp_1,REG4)(hi)
0x2B002009,	//0x16f8		VoC_jump_lg(CS_decoder_mb_decode02)(lo)	|	VoC_bnez16_d(CS_decoder_mb_decode_4X4,0x2009)(hi)
0xFFC0178A,	//0x16fa		VoC_NAD	|	VoC_jump_lg(CS_decoder_mb_decode02)(hi)
		//0x16fc		CS_decoder_mb_inter_decode_cbp_1
0x0E701809,	//0x16fc		VoC_lw16i_set_inc(REG1,0xe70,0x2)
0xFFC0FF44,	//0x16fe		VoC_NOP	|	VoC_lw32z(ACC0,DEFAULT)
0x17022D81,	//0x1700		VoC_loop_i(0x1,0xc0)
		//0x1702		VoC_endloop1
0xFFC05DCC,	//0x1702		VoC_NAD(IN_PARALLEL)	|	VoC_sw32inc_p(ACC0,REG1,DEFAULT)
0x16A22B80,	//0x1704		VoC_jal(CS_get_inter_block_h263)
0x20096E04,	//0x1706		VoC_bnez16_d(CS_decoder_mb_decode_4X4,0x2009)
0x176A2B00,	//0x1708		VoC_jump_lg(CS_decoder_mb_decode_8X8)
		//0x170a		CS_decoder_mb_decode_4X4
0x0A81D908,	//0x170a		VoC_lw16i(REG1,0x4)(lo)	|	VoC_lw32_sd(REG01,0x0,DEFAULT)
0x35010004,	//0x170c		VoC_be16_rr(CS_decoder_mb_decode_dma_out_y,REG0,REG1)(lo)	|	VoC_lw16i(REG1,0x4)(hi)
0x0A811714,	//0x170e		VoC_lw16i(REG1,0x5)(lo)	|	VoC_be16_rr(CS_decoder_mb_decode_dma_out_y,REG0,REG1)(hi)
0x35010005,	//0x1710		VoC_be16_rr(CS_decoder_mb_decode_dma_out_u,REG0,REG1)(lo)	|	VoC_lw16i(REG1,0x5)(hi)
0xE5DB1720,	//0x1712		VoC_jump(CS_decoder_mb_inter_decode_cbp_2)	|	VoC_be16_rr(CS_decoder_mb_decode_dma_out_u,REG0,REG1)(hi)
		//0x1714		CS_decoder_mb_decode_dma_out_y
0xDF475FC2,	//0x1714		VoC_push32(RL7,IN_PARALLEL)	|	VoC_push16(REG2,DEFAULT)
0x026B2B80,	//0x1716		VoC_jal(Coolsand_MPEG4YDmaCmdSend)
0x7FFF0AC2,	//0x1718		VoC_lw16i(REG2,0xffff)
0x1502FFC0,	//0x171a		VoC_sw16_d(REG2,0x2008)(lo)	|	VoC_NOP
0x5F072008,	//0x171c		VoC_pop32(RL7,DEFAULT)	|	VoC_sw16_d(REG2,0x2008)(hi)
0xE5CFDF82,	//0x171e		VoC_jump(CS_decoder_mb_inter_decode_cbp_2)	|	VoC_pop16(REG2,IN_PARALLEL)
		//0x1720		CS_decoder_mb_decode_dma_out_u
0xDF475FC2,	//0x1720		VoC_push32(RL7,IN_PARALLEL)	|	VoC_push16(REG2,DEFAULT)
0x02BE2B80,	//0x1722		VoC_jal(Coolsand_MPEG4UDmaCmdSend)
0x7FFF0AC2,	//0x1724		VoC_lw16i(REG2,0xffff)
0x1502FFC0,	//0x1726		VoC_sw16_d(REG2,0x2011)(lo)	|	VoC_NOP
0x15022011,	//0x1728		VoC_sw16_d(REG2,0x2008)(lo)	|	VoC_sw16_d(REG2,0x2011)(hi)
0x5F072008,	//0x172a		VoC_pop32(RL7,DEFAULT)	|	VoC_sw16_d(REG2,0x2008)(hi)
0xFFC0DF82,	//0x172c		VoC_NAD	|	VoC_pop16(REG2,IN_PARALLEL)
		//0x172e		CS_decoder_mb_inter_decode_cbp_2
0x20106C28,	//0x172e		VoC_bez16_d(CS_decoder_mb_inter_decode_cbp_3,0x2010)
0x0E700A81,	//0x1730		VoC_lw16i(REG1,0xe70)
0xDFC2F7F3,	//0x1732		VoC_push16(REG2,DEFAULT)	|	VoC_lw16i_short(INC3,0xffffffff,DEFAULT)
0x1402DF46,	//0x1734		VoC_lw16_d(REG2,0xe70)(lo)	|	VoC_push32(RL6,DEFAULT)
0x07120E70,	//0x1736		VoC_add16_rd(REG2,REG2,0x5e28)(lo)	|	VoC_lw16_d(REG2,0xe70)(hi)
0x5FC15E28,	//0x1738		VoC_push16(REG1,DEFAULT)	|	VoC_add16_rd(REG2,REG2,0x5e28)(hi)
0x1502DF47,	//0x173a		VoC_sw16_d(REG2,0xe70)(lo)	|	VoC_push32(RL7,IN_PARALLEL)
0xFFC00E70,	//0x173c		VoC_NAD	|	VoC_sw16_d(REG2,0xe70)(hi)
0x17422C09,	//0x173e		VoC_loop_i(0x1,0x4)
0x04C52B80,	//0x1740		VoC_jal(CII_mpeg4X4_idct_row)
		//0x1742		VoC_endloop1
0xDF81FFC0,	//0x1742		VoC_pop16(REG1,DEFAULT)	|	VoC_NAD
0xFFC07111,	//0x1744		VoC_NAD(IN_PARALLEL)	|	VoC_lw16i_short(INC1,0x8,DEFAULT)
0x174A2C09,	//0x1746		VoC_loop_i(0x1,0x4)
0x05452B80,	//0x1748		VoC_jal(CII_mpeg4X4_idct_col)
		//0x174a		VoC_endloop1
0xDF82FFC0,	//0x174a		VoC_pop16(REG2,DEFAULT)	|	VoC_NAD
0x5F06DF07,	//0x174c		VoC_pop32(RL6,DEFAULT)	|	VoC_pop32(RL7,DEFAULT)
0x1804F006,	//0x174e		VoC_lw16i_set_inc(REG0,0xe70,0x1)(lo)	|	VoC_lw16i_short(INC2,0x1,IN_PARALLEL)
0x61C10E70,	//0x1750		VoC_movreg16(REG1,RL7_LO,DEFAULT)	|	VoC_lw16i_set_inc(REG0,0xe70,0x1)(hi)
0xFFC0F005,	//0x1752		VoC_NAD	|	VoC_lw16i_short(INC1,0x1,IN_PARALLEL)
0x16882B80,	//0x1754		VoC_jal(CS_add_pixels_clamped4_c)
		//0x1756		CS_decoder_mb_inter_decode_cbp_3
0x20086C34,	//0x1756		VoC_bez16_d(CS_decoder_mb_decode02,0x2008)
0x00000A80,	//0x1758		VoC_lw16i(REG0,0x0)
0x1500FFC0,	//0x175a		VoC_sw16_d(REG0,0x2008)(lo)	|	VoC_NOP
0xFFC02008,	//0x175c		VoC_NAD	|	VoC_sw16_d(REG0,0x2008)(hi)
0x030C2B80,	//0x175e		VoC_jal(Coolsand_MPEG4WaiteLastDma)
0x20116C2A,	//0x1760		VoC_bez16_d(CS_decoder_mb_decode02,0x2011)
0xDF475FC2,	//0x1762		VoC_push32(RL7,IN_PARALLEL)	|	VoC_push16(REG2,DEFAULT)
0x02E52B80,	//0x1764		VoC_jal(Coolsand_MPEG4VDmaCmdSend)
0xDF825F07,	//0x1766		VoC_pop16(REG2,IN_PARALLEL)	|	VoC_pop32(RL7,DEFAULT)
0x178A2B00,	//0x1768		VoC_jump_lg(CS_decoder_mb_decode02)
		//0x176a		CS_decoder_mb_decode_8X8
0x0E700A81,	//0x176a		VoC_lw16i(REG1,0xe70)
0xF3FF5FC2,	//0x176c		VoC_lw16i_short(INC3,0xffffffff,IN_PARALLEL)	|	VoC_push16(REG2,DEFAULT)
0x5FC1DF46,	//0x176e		VoC_push16(REG1,DEFAULT)	|	VoC_push32(RL6,DEFAULT)
0xFFC0DF47,	//0x1770		VoC_NAD	|	VoC_push32(RL7,IN_PARALLEL)
0x17762C11,	//0x1772		VoC_loop_i(0x1,0x8)
0x03A22B80,	//0x1774		VoC_jal(CII_mpeg4_idctrow)
		//0x1776		VoC_endloop1
0xDF81FFC0,	//0x1776		VoC_pop16(REG1,DEFAULT)	|	VoC_NAD
0xFFC07111,	//0x1778		VoC_NAD(IN_PARALLEL)	|	VoC_lw16i_short(INC1,0x8,DEFAULT)
0x177E2C11,	//0x177a		VoC_loop_i(0x1,0x8)
0x04292B80,	//0x177c		VoC_jal(CII_mpeg4_idctcol)
		//0x177e		VoC_endloop1
0x5F82FFC0,	//0x177e		VoC_pop16(REG2,DEFAULT)	|	VoC_NAD
0x5F06DF07,	//0x1780		VoC_pop32(RL6,DEFAULT)	|	VoC_pop32(RL7,IN_PARALLEL)
0x1804F006,	//0x1782		VoC_lw16i_set_inc(REG0,0xe70,0x1)(lo)	|	VoC_lw16i_short(INC2,0x1,IN_PARALLEL)
0x61C10E70,	//0x1784		VoC_movreg16(REG1,RL7_LO,DEFAULT)	|	VoC_lw16i_set_inc(REG0,0xe70,0x1)(hi)
0xFFC0F005,	//0x1786		VoC_NAD	|	VoC_lw16i_short(INC1,0x1,IN_PARALLEL)
0x16722B80,	//0x1788		VoC_jal(CS_transfer_16to8add_c)
		//0x178a		CS_decoder_mb_decode02
0xE20461C3,	//0x178a		VoC_lw16i_short(REG4,0x20,IN_PARALLEL)	|	VoC_movreg16(REG3,RL7_LO,DEFAULT)
0x20096C03,	//0x178c		VoC_bez16_d(CS_decoder_mb_decode_lowres0_00,0x2009)
0xDF00F104,	//0x178e		VoC_pop32(REG01,DEFAULT)	|	VoC_lw16i_short(REG4,0x8,DEFAULT)
		//0x178f		CS_decoder_mb_decode_lowres0_00
0xDE00C0E3,	//0x1790		VoC_inc_p(REG0,DEFAULT)	|	VoC_add16_rr(REG3,REG3,REG4,DEFAULT)
0x16EA2B00,	//0x1792		VoC_jump_lg(CS_decoder_mb_decode03)
		//0x1794		CS_decoder_mb_decode01
0xFFC0DFA9,	//0x1794		VoC_NOP	|	VoC_pop16(RA,DEFAULT)
0xDFE9E580,	//0x1796		VoC_push16(RA,DEFAULT)	|	VoC_return
		//0x1797		CS_dec_mb_inter1v
0x0A502B80,	//0x1798		VoC_jal(CS_get_pmv2_0)
0x0B2A2B80,	//0x179a		VoC_jal(CS_dec_mv)
0xF6AB6089,	//0x179c		VoC_movreg16(ACC1_HI,REG5,IN_PARALLEL)	|	VoC_movreg16(ACC0_HI,REG4,DEFAULT)
0xFA857A84,	//0x179e		VoC_shr32_ri(ACC1,0x10,IN_PARALLEL)	|	VoC_shr32_ri(ACC0,0x10,DEFAULT)
0x0CAE1404,	//0x17a0		VoC_lw16_d(REG4,0xcae)
0x1808F8EC,	//0x17a2		VoC_lw16i_set_inc(REG0,0x12e8,0x2)(lo)	|	VoC_shr16_ri(REG4,0xfffffffd,DEFAULT)
0x200912E8,	//0x17a4		VoC_lw16d_set_inc(REG1,0xcce,0x2)(lo)	|	VoC_lw16i_set_inc(REG0,0x12e8,0x2)(hi)
0x18070CCE,	//0x17a6		VoC_lw16i_set_inc(REG3,0x206c,0x1)(lo)	|	VoC_lw16d_set_inc(REG1,0xcce,0x2)(hi)
0xC11B206C,	//0x17a8		VoC_add16_rr(REG3,REG4,REG3,DEFAULT)	|	VoC_lw16i_set_inc(REG3,0x206c,0x1)(hi)
0xDDC4E884,	//0x17aa		VoC_sw32inc_p(ACC0,REG0,DEFAULT)	|	VoC_loop_i_short(0x4,DEFAULT)
0xDCB8DDC5,	//0x17ac		VoC_sw16inc_p(ACC0_LO,REG3,DEFAULT)	|	VoC_sw32inc_p(ACC1,REG0,DEFAULT)
		//0x17ae		VoC_endloop0
0xDE085CBA,	//0x17ae		VoC_inc_p(REG1,IN_PARALLEL)	|	VoC_sw16inc_p(ACC1_LO,REG3,DEFAULT)
0x0FF8180B,	//0x17b0		VoC_lw16i_set_inc(REG3,0xff8,0x2)
0xDDCCE842,	//0x17b2		VoC_sw32inc_p(ACC0,REG1,DEFAULT)	|	VoC_loop_i_short(0x2,DEFAULT)
		//0x17b4		VoC_endloop0
0xDE185DCD,	//0x17b4		VoC_inc_p(REG3,IN_PARALLEL)	|	VoC_sw32inc_p(ACC1,REG1,DEFAULT)
0xDDDDDDDC,	//0x17b6		VoC_sw32inc_p(ACC1,REG3,DEFAULT)	|	VoC_sw32inc_p(ACC0,REG3,DEFAULT)
0xDE18DE18,	//0x17b8		VoC_inc_p(REG3,DEFAULT)	|	VoC_inc_p(REG3,DEFAULT)
0xDDDDDDDC,	//0x17ba		VoC_sw32inc_p(ACC1,REG3,DEFAULT)	|	VoC_sw32inc_p(ACC0,REG3,DEFAULT)
0x20096E04,	//0x17bc		VoC_bnez16_d(CS_dec_mb_inter1v_lowres_1,0x2009)
0x188C2B00,	//0x17be		VoC_jump_lg(CS_dec_mb_inter1v_lowres_0)
		//0x17c0		CS_dec_mb_inter1v_lowres_1
0xDF46DFC2,	//0x17c0		VoC_push32(RL6,DEFAULT)	|	VoC_push16(REG2,DEFAULT)
0x1481DF47,	//0x17c2		VoC_lw32_d(REG23,0xcae)(lo)	|	VoC_push32(RL7,DEFAULT)
0x18090CAE,	//0x17c4		VoC_lw16i_set_inc(REG1,0x12e8,0x2)(lo)	|	VoC_lw32_d(REG23,0xcae)(hi)
0xFDE912E8,	//0x17c6		VoC_shru32_ri(REG23,0xfffffffd,DEFAULT)	|	VoC_lw16i_set_inc(REG1,0x12e8,0x2)(hi)
0xD895D894,	//0x17c8		VoC_lw16inc_p(REG5,REG1,DEFAULT)	|	VoC_lw16inc_p(REG4,REG1,DEFAULT)
0x0CBE1400,	//0x17ca		VoC_lw16_d(REG0,0xcbe)
0xE0117F13,	//0x17cc		VoC_lw16i_short(REG1,0x1,IN_PARALLEL)	|	VoC_movreg32(REG67,REG45,DEFAULT)
0xF8157814,	//0x17ce		VoC_shr16_ri(REG5,0x2,IN_PARALLEL)	|	VoC_shr16_ri(REG4,0x2,DEFAULT)
0xF8085F43,	//0x17d0		VoC_shr16_ri(REG0,0x1,IN_PARALLEL)	|	VoC_push32(REG67,DEFAULT)
0xC0EB40A2,	//0x17d2		VoC_add16_rr(REG3,REG3,REG5,IN_PARALLEL)	|	VoC_add16_rr(REG2,REG2,REG4,DEFAULT)
0x0CBF1404,	//0x17d4		VoC_lw16_d(REG4,0xcbf)
0x00031606,	//0x17d6		VoC_and16_ri(REG6,0x3)
0x00031607,	//0x17d8		VoC_and16_ri(REG7,0x3)
0xF80C4208,	//0x17da		VoC_shr16_ri(REG4,0x1,IN_PARALLEL)	|	VoC_sub16_rr(REG0,REG0,REG1,DEFAULT)
0x17DF3490,	//0x17dc		VoC_bngt16_rr(CS_dec_mb_inter1v_lowres_1_srcx_in_range,REG2,REG0)
0xC30CE002,	//0x17de		VoC_sub16_rr(REG4,REG4,REG1,DEFAULT)	|	VoC_movreg16(REG2,REG0,DEFAULT)
		//0x17df		CS_dec_mb_inter1v_lowres_1_srcx_in_range
0x17E4349C,	//0x17e0		VoC_bngt16_rr(CS_dec_mb_inter1v_lowres_1_srcy_in_range,REG3,REG4)
0xFFC06083,	//0x17e2		VoC_NAD(IN_PARALLEL)	|	VoC_movreg16(REG3,REG4,DEFAULT)
		//0x17e4		CS_dec_mb_inter1v_lowres_1_srcy_in_range
0x0CBC1400,	//0x17e4		VoC_lw16_d(REG0,0xcbc)
0xCC1A5F41,	//0x17e6		VoC_multf32_rr(REG45,REG0,REG3,IN_PARALLEL)	|	VoC_push32(REG23,DEFAULT)
0xFA81E043,	//0x17e8		VoC_shr32_ri(REG23,0x10,DEFAULT)	|	VoC_movreg16(REG3,REG2,DEFAULT)
0x0CF00A8A,	//0x17ea		VoC_lw16i(ACC1_LO,0xcf0)
0x1A7A1484,	//0x17ec		VoC_lw32_d(ACC0,0x1a7a)
0xC88A7BF4,	//0x17ee		VoC_add32_rr(REG45,REG45,REG23,IN_PARALLEL)	|	VoC_shr32_ri(ACC0,0xfffffffe,DEFAULT)
0xC8A27BFB,	//0x17f0		VoC_add32_rr(REG45,REG45,ACC0,IN_PARALLEL)	|	VoC_shr32_ri(REG67,0xffffffff,DEFAULT)
0x2982FF14,	//0x17f2		VoC_and32_rd(REG45,0x5e66)(lo)	|	VoC_movreg32(ACC0,REG45,DEFAULT)
0xE08B5E66,	//0x17f4		VoC_movreg16(ACC1_HI,REG4,DEFAULT)	|	VoC_and32_rd(REG45,0x5e66)(hi)
0x0CBC1400,	//0x17f6		VoC_lw16_d(REG0,0xcbc)
0xE0917810,	//0x17f8		VoC_lw16i_short(REG1,0x9,IN_PARALLEL)	|	VoC_shr16_ri(REG0,0x2,DEFAULT)
0x0C6F0A82,	//0x17fa		VoC_lw16i(REG2,0xc6f)
0xF0047063,	//0x17fc		VoC_lw16i_short(INC0,0x1,IN_PARALLEL)	|	VoC_lw16i_short(REG3,0x3,DEFAULT)
0x0A8DFF46,	//0x17fe		VoC_lw16i(RL6_HI,0x1000)(lo)	|	VoC_lw32z(RL6,DEFAULT)
0xC2181000,	//0x1800		VoC_sub16_rr(REG0,REG0,REG3,DEFAULT)	|	VoC_lw16i(RL6_HI,0x1000)(hi)
0x025F2B80,	//0x1802		VoC_jal(Coolsand_MPEG4Run2DDmaCmdSend)
0x200C1583,	//0x1804		VoC_sw32_d(REG67,0x200c)
0x200E1585,	//0x1806		VoC_sw32_d(ACC1,0x200e)
0xDF03DF01,	//0x1808		VoC_pop32(REG67,DEFAULT)	|	VoC_pop32(REG23,DEFAULT)
0xF80B780A,	//0x180a		VoC_shr16_ri(REG3,0x1,IN_PARALLEL)	|	VoC_shr16_ri(REG2,0x1,DEFAULT)
0x1400FF1A,	//0x180c		VoC_lw16_d(REG0,0xcbc)(lo)	|	VoC_movreg32(REG45,REG67,DEFAULT)
0x780C0CBC,	//0x180e		VoC_shr16_ri(REG4,0x1,DEFAULT)	|	VoC_lw16_d(REG0,0xcbc)(hi)
0x1606F80D,	//0x1810		VoC_and16_ri(REG6,0x1)(lo)	|	VoC_shr16_ri(REG5,0x1,IN_PARALLEL)
0x16070001,	//0x1812		VoC_and16_ri(REG7,0x1)(lo)	|	VoC_and16_ri(REG6,0x1)(hi)
0x16040001,	//0x1814		VoC_and16_ri(REG4,0x3)(lo)	|	VoC_and16_ri(REG7,0x1)(hi)
0x16050003,	//0x1816		VoC_and16_ri(REG5,0x3)(lo)	|	VoC_and16_ri(REG4,0x3)(hi)
0xF8080003,	//0x1818		VoC_shr16_ri(REG0,0x1,DEFAULT)	|	VoC_and16_ri(REG5,0x3)(hi)
0x0A8AE513,	//0x181a		VoC_lw16i(ACC1_LO,0xd10)(lo)	|	VoC_or32_rr(REG67,REG45,DEFAULT)
0xCC1A0D10,	//0x181c		VoC_multf32_rr(REG45,REG0,REG3,DEFAULT)	|	VoC_lw16i(ACC1_LO,0xd10)(hi)
0xFA81E043,	//0x181e		VoC_shr32_ri(REG23,0x10,DEFAULT)	|	VoC_movreg16(REG3,REG2,DEFAULT)
0x1A7C1484,	//0x1820		VoC_lw32_d(ACC0,0x1a7c)
0xFBFB488A,	//0x1822		VoC_shr32_ri(REG67,0xffffffff,IN_PARALLEL)	|	VoC_add32_rr(REG45,REG45,REG23,DEFAULT)
0x1582FBF4,	//0x1824		VoC_sw32_d(REG45,0xcd4)(lo)	|	VoC_shr32_ri(ACC0,0xfffffffe,DEFAULT)
0xC8A20CD4,	//0x1826		VoC_add32_rr(REG45,REG45,ACC0,DEFAULT)	|	VoC_sw32_d(REG45,0xcd4)(hi)
0x2982FF14,	//0x1828		VoC_and32_rd(REG45,0x5e66)(lo)	|	VoC_movreg32(ACC0,REG45,DEFAULT)
0xE08B5E66,	//0x182a		VoC_movreg16(ACC1_HI,REG4,DEFAULT)	|	VoC_and32_rd(REG45,0x5e66)(hi)
0xDF45DF43,	//0x182c		VoC_push32(ACC1,DEFAULT)	|	VoC_push32(REG67,DEFAULT)
0x030C2B80,	//0x182e		VoC_jal(Coolsand_MPEG4WaiteLastDma)
0x0CBC1400,	//0x1830		VoC_lw16_d(REG0,0xcbc)
0xE0517818,	//0x1832		VoC_lw16i_short(REG1,0x5,IN_PARALLEL)	|	VoC_shr16_ri(REG0,0x3,DEFAULT)
0x0CD30A82,	//0x1834		VoC_lw16i(REG2,0xcd3)
0xF0047043,	//0x1836		VoC_lw16i_short(INC0,0x1,IN_PARALLEL)	|	VoC_lw16i_short(REG3,0x2,DEFAULT)
0x0A8DFF46,	//0x1838		VoC_lw16i(RL6_HI,0x1000)(lo)	|	VoC_lw32z(RL6,DEFAULT)
0xC2181000,	//0x183a		VoC_sub16_rr(REG0,REG0,REG3,DEFAULT)	|	VoC_lw16i(RL6_HI,0x1000)(hi)
0x025F2B80,	//0x183c		VoC_jal(Coolsand_MPEG4Run2DDmaCmdSend)
0x200C1483,	//0x183e		VoC_lw32_d(REG67,0x200c)
0x200E1485,	//0x1840		VoC_lw32_d(ACC1,0x200e)
0x0B7D2B80,	//0x1842		VoC_jal(CS_put_h264_chroma_mc8_8_c)
0x030C2B80,	//0x1844		VoC_jal(Coolsand_MPEG4WaiteLastDma)
0x0CB66E04,	//0x1846		VoC_bnez16_d(CS_dec_mb_inter1v_lowres_1_not_dma_now0,0xcb6)
0x026B2B80,	//0x1848		VoC_jal(Coolsand_MPEG4YDmaCmdSend)
		//0x184a		CS_dec_mb_inter1v_lowres_1_not_dma_now0
0x0CD41482,	//0x184a		VoC_lw32_d(REG45,0xcd4)
0x0D180A8A,	//0x184c		VoC_lw16i(ACC1_LO,0xd18)
0x1A7E1484,	//0x184e		VoC_lw32_d(ACC0,0x1a7e)
0xC8A2FDF4,	//0x1850		VoC_add32_rr(REG45,REG45,ACC0,DEFAULT)	|	VoC_shru32_ri(ACC0,0xfffffffe,DEFAULT)
0x6E05FF14,	//0x1852		VoC_bnez16_d(CS_dec_mb_inter1v_lowres_1_not_dma_now00,0xcb6)(lo)	|	VoC_movreg32(ACC0,REG45,DEFAULT)
0xFFC00CB6,	//0x1854		VoC_NAD	|	VoC_bnez16_d(CS_dec_mb_inter1v_lowres_1_not_dma_now00,0xcb6)(hi)
0x030C2B80,	//0x1856		VoC_jal(Coolsand_MPEG4WaiteLastDma)
		//0x1858		CS_dec_mb_inter1v_lowres_1_not_dma_now00
0x0CBC1400,	//0x1858		VoC_lw16_d(REG0,0xcbc)
0xE0517818,	//0x185a		VoC_lw16i_short(REG1,0x5,IN_PARALLEL)	|	VoC_shr16_ri(REG0,0x3,DEFAULT)
0x0CE70A82,	//0x185c		VoC_lw16i(REG2,0xce7)
0xF0047043,	//0x185e		VoC_lw16i_short(INC0,0x1,IN_PARALLEL)	|	VoC_lw16i_short(REG3,0x2,DEFAULT)
0x0A8DFF46,	//0x1860		VoC_lw16i(RL6_HI,0x1000)(lo)	|	VoC_lw32z(RL6,DEFAULT)
0xC2181000,	//0x1862		VoC_sub16_rr(REG0,REG0,REG3,DEFAULT)	|	VoC_lw16i(RL6_HI,0x1000)(hi)
0x025F2B80,	//0x1864		VoC_jal(Coolsand_MPEG4Run2DDmaCmdSend)
0x200A150A,	//0x1866		VoC_sw16_d(ACC1_LO,0x200a)
0xD913D90D,	//0x1868		VoC_lw32_sd(REG67,0x1,DEFAULT)	|	VoC_lw32_sd(ACC1,0x0,DEFAULT)
0x00000A88,	//0x186a		VoC_lw16i(ACC0_LO,0x0)
0x0C9D2B80,	//0x186c		VoC_jal(CS_put_h264_chroma_mc4_8_c)
0x030C2B80,	//0x186e		VoC_jal(Coolsand_MPEG4WaiteLastDma)
0x0CB66E04,	//0x1870		VoC_bnez16_d(CS_dec_mb_inter1v_lowres_1_not_dma_now1,0xcb6)
0x02BE2B80,	//0x1872		VoC_jal(Coolsand_MPEG4UDmaCmdSend)
		//0x1874		CS_dec_mb_inter1v_lowres_1_not_dma_now1
0xDF03DF05,	//0x1874		VoC_pop32(REG67,DEFAULT)	|	VoC_pop32(ACC1,DEFAULT)
0x00280A88,	//0x1876		VoC_lw16i(ACC0_LO,0x28)
0x200A140A,	//0x1878		VoC_lw16_d(ACC1_LO,0x200a)
0x0C9D2B80,	//0x187a		VoC_jal(CS_put_h264_chroma_mc4_8_c)
0x0CB66E06,	//0x187c		VoC_bnez16_d(CS_dec_mb_inter1v_lowres_1_not_dma_now2,0xcb6)
0x030C2B80,	//0x187e		VoC_jal(Coolsand_MPEG4WaiteLastDma)
0x02E52B80,	//0x1880		VoC_jal(Coolsand_MPEG4VDmaCmdSend)
		//0x1882		CS_dec_mb_inter1v_lowres_1_not_dma_now2
0x5F06DF07,	//0x1882		VoC_pop32(RL6,DEFAULT)	|	VoC_pop32(RL7,DEFAULT)
0x6E03DF82,	//0x1884		VoC_bnez16_d(CS_dec_mb_inter1v_lowres_1_cbp_1,0xcb6)(lo)	|	VoC_pop16(REG2,IN_PARALLEL)
0xE5C30CB6,	//0x1886		VoC_jump(CS_dec_mb_inter1v_lowres_1_cbp2)	|	VoC_bnez16_d(CS_dec_mb_inter1v_lowres_1_cbp_1,0xcb6)(hi)
		//0x1888		CS_dec_mb_inter1v_lowres_1_cbp_1
0x16DC2B80,	//0x1888		VoC_jal(CS_decoder_mb_decode)
		//0x188a		CS_dec_mb_inter1v_lowres_1_cbp2
0x19112B00,	//0x188a		VoC_jump_lg(CS_dec_mb_inter1v07)
		//0x188c		CS_dec_mb_inter1v_lowres_0
0x1482DFC2,	//0x188c		VoC_lw32_d(REG45,0xcae)(lo)	|	VoC_push16(REG2,DEFAULT)
0x78E40CAE,	//0x188e		VoC_shr16_ri(REG4,0xfffffffc,DEFAULT)	|	VoC_lw32_d(REG45,0xcae)(hi)
0x180BF8E5,	//0x1890		VoC_lw16i_set_inc(REG3,0x12e8,0x2)(lo)	|	VoC_shr16_ri(REG5,0xfffffffc,IN_PARALLEL)
0x0B2612E8,	//0x1892		VoC_sub16_dr(REG6,0xcbe,REG4)(lo)	|	VoC_lw16i_set_inc(REG3,0x12e8,0x2)(hi)
0xF7E20CBE,	//0x1894		VoC_lw16i_short(REG2,0xffffffff,DEFAULT)	|	VoC_sub16_dr(REG6,0xcbe,REG4)(hi)
0x20320792,	//0x1896		VoC_sub16_rd(REG2,REG2,0x2032)
0xE1077E16,	//0x1898		VoC_lw16i_short(REG7,0x10,IN_PARALLEL)	|	VoC_shr16_rr(REG6,REG2,DEFAULT)
0x7E17C1E7,	//0x189a		VoC_shr16_rr(REG7,REG2,DEFAULT)	|	VoC_add16_rr(REG7,REG7,REG4,DEFAULT)
0xC1C7D8B0,	//0x189c		VoC_add16_rr(REG7,REG7,REG0,DEFAULT)	|	VoC_lw16inc_p(REG0,REG3,IN_PARALLEL)
0x18A13107,	//0x189e		VoC_bgtz16_r(CS_dec_mb_inter1v01,REG7)
0xC237C238,	//0x18a0		VoC_sub16_rr(REG7,REG0,REG6,DEFAULT)	|	VoC_sub16_rr(REG0,REG0,REG7,DEFAULT)
		//0x18a1		CS_dec_mb_inter1v01
0x18A63107,	//0x18a2		VoC_bgtz16_r(CS_dec_mb_inter1v02,REG7)
0xFFC041BE,	//0x18a4		VoC_NAD(IN_PARALLEL)	|	VoC_add16_rr(REG6,REG6,REG7,DEFAULT)
		//0x18a6		CS_dec_mb_inter1v02
0xD8B07201,	//0x18a6		VoC_lw16inc_p(REG0,REG3,IN_PARALLEL)	|	VoC_lw16i_short(REG1,0x10,DEFAULT)
0xFE11C069,	//0x18a8		VoC_shr16_rr(REG1,REG2,DEFAULT)	|	VoC_add16_rr(REG1,REG1,REG5,DEFAULT)
0x3101C041,	//0x18aa		VoC_bgtz16_r(CS_dec_mb_inter1v03,REG1)(lo)	|	VoC_add16_rr(REG1,REG1,REG0,DEFAULT)
0xC20818AE,	//0x18ac		VoC_sub16_rr(REG0,REG0,REG1,DEFAULT)	|	VoC_bgtz16_r(CS_dec_mb_inter1v03,REG1)(hi)
		//0x18ae		CS_dec_mb_inter1v03
0x0CBF0B2F,	//0x18ae		VoC_sub16_dr(REG7,0xcbf,REG5)
0xC239FE17,	//0x18b0		VoC_sub16_rr(REG1,REG0,REG7,DEFAULT)	|	VoC_shr16_rr(REG7,REG2,DEFAULT)
0x18B63101,	//0x18b2		VoC_bgtz16_r(CS_dec_mb_inter1v04,REG1)
0xFFC041CF,	//0x18b4		VoC_NAD(IN_PARALLEL)	|	VoC_add16_rr(REG7,REG7,REG1,DEFAULT)
		//0x18b6		CS_dec_mb_inter1v04
0x20321402,	//0x18b6		VoC_lw16_d(REG2,0x2032)
0x3106FF18,	//0x18b8		VoC_bgtz16_r(CS_dec_mb_inter1v_compensation_x,REG6)(lo)	|	VoC_movreg32(REG01,REG67,DEFAULT)
0x070018BE,	//0x18ba		VoC_add16_rd(REG0,REG0,0x2032)(lo)	|	VoC_bgtz16_r(CS_dec_mb_inter1v_compensation_x,REG6)(hi)
0xFFC02032,	//0x18bc		VoC_NAD	|	VoC_add16_rd(REG0,REG0,0x2032)(hi)
		//0x18be		CS_dec_mb_inter1v_compensation_x
0x18C23107,	//0x18be		VoC_bgtz16_r(CS_dec_mb_inter1v_compensation_y,REG7)
0x20320709,	//0x18c0		VoC_add16_rd(REG1,REG1,0x2032)
		//0x18c2		CS_dec_mb_inter1v_compensation_y
0xFE117E10,	//0x18c2		VoC_shr16_rr(REG1,REG2,IN_PARALLEL)	|	VoC_shr16_rr(REG0,REG2,DEFAULT)
0xE0137F02,	//0x18c4		VoC_lw16i_short(REG3,0x1,IN_PARALLEL)	|	VoC_movreg32(REG45,REG01,DEFAULT)
0xF8097808,	//0x18c6		VoC_shr16_ri(REG1,0x1,IN_PARALLEL)	|	VoC_shr16_ri(REG0,0x1,DEFAULT)
0x00031604,	//0x18c8		VoC_and16_ri(REG4,0x3)
0x00031605,	//0x18ca		VoC_and16_ri(REG5,0x3)
0x18D035A3,	//0x18cc		VoC_bne16_rr(CS_dec_mb_inter1v05,REG4,REG3)
0xFFC04018,	//0x18ce		VoC_NAD(IN_PARALLEL)	|	VoC_add16_rr(REG0,REG0,REG3,DEFAULT)
		//0x18d0		CS_dec_mb_inter1v05
0x18D435AB,	//0x18d0		VoC_bne16_rr(CS_dec_mb_inter1v06,REG5,REG3)
0xFFC04059,	//0x18d2		VoC_NAD(IN_PARALLEL)	|	VoC_add16_rr(REG1,REG1,REG3,DEFAULT)
		//0x18d4		CS_dec_mb_inter1v06
0x0CAE1482,	//0x18d4		VoC_lw32_d(REG45,0xcae)
0x0CBC082D,	//0x18d6		VoC_mult16_rd(REG5,REG5,0xcbc)
0x412CFFC0,	//0x18d8		VoC_add16_rr(REG4,REG4,REG5,DEFAULT)	|	VoC_NOP
0x1580E005,	//0x18da		VoC_sw32_d(REG01,0xcd2)(lo)	|	VoC_lw16i_short(REG5,0x0,IN_PARALLEL)
0xFBF20CD2,	//0x18dc		VoC_shr32_ri(REG45,0xfffffffe,DEFAULT)	|	VoC_sw32_d(REG01,0xcd2)(hi)
0x1A7A0914,	//0x18de		VoC_add32_rd(ACC0,REG45,0x1a7a)
0xDF427BF4,	//0x18e0		VoC_push32(REG45,IN_PARALLEL)	|	VoC_shr32_ri(ACC0,0xfffffffe,DEFAULT)
0x20326C06,	//0x18e2		VoC_bez16_d(CS_dec_mb_inter1v_quarterpel_0,0x2032)
0x124A2B80,	//0x18e4		VoC_jal(CS_interpolate16x16_quarterpel)
0xFFC065C4,	//0x18e6		VoC_NAD(IN_PARALLEL)	|	VoC_jump(CS_dec_mb_inter1v_interpolate16x16_end)
		//0x18e8		CS_dec_mb_inter1v_quarterpel_0
0x12222B80,	//0x18e8		VoC_jal(CS_interpolate16x16_switch)
		//0x18ea		CS_dec_mb_inter1v_interpolate16x16_end
0x0D700A8E,	//0x18ea		VoC_lw16i(RL7_LO,0xd70)
0xFA12DF02,	//0x18ec		VoC_shr32_ri(REG45,0x2,DEFAULT)	|	VoC_pop32(REG45,DEFAULT)
0x0CAE0724,	//0x18ee		VoC_add16_rd(REG4,REG4,0xcae)
0x0CC01403,	//0x18f0		VoC_lw16_d(REG3,0xcc0)
0x0CC01403,	//0x18f2		VoC_lw16_d(REG3,0xcc0)
0x1A7C0914,	//0x18f4		VoC_add32_rd(ACC0,REG45,0x1a7c)
0xDF42FBF4,	//0x18f6		VoC_push32(REG45,DEFAULT)	|	VoC_shr32_ri(ACC0,0xfffffffe,DEFAULT)
0x0CD21483,	//0x18f8		VoC_lw32_d(REG67,0xcd2)
0x0CE61503,	//0x18fa		VoC_sw16_d(REG3,0xce6)
0x139B2B80,	//0x18fc		VoC_jal(CS_interpolate8x8_switch)
0x0D900A8E,	//0x18fe		VoC_lw16i(RL7_LO,0xd90)
0x0914DF02,	//0x1900		VoC_add32_rd(ACC0,REG45,0x1a7e)(lo)	|	VoC_pop32(REG45,DEFAULT)
0x14031A7E,	//0x1902		VoC_lw16_d(REG3,0xcc1)(lo)	|	VoC_add32_rd(ACC0,REG45,0x1a7e)(hi)
0xFBF40CC1,	//0x1904		VoC_shr32_ri(ACC0,0xfffffffe,DEFAULT)	|	VoC_lw16_d(REG3,0xcc1)(hi)
0x0CD21483,	//0x1906		VoC_lw32_d(REG67,0xcd2)
0x0CE61503,	//0x1908		VoC_sw16_d(REG3,0xce6)
0x139B2B80,	//0x190a		VoC_jal(CS_interpolate8x8_switch)
0x6C04DF82,	//0x190c		VoC_bez16_d(CS_dec_mb_inter1v07,0xcb6)(lo)	|	VoC_pop16(REG2,DEFAULT)
0x2B800CB6,	//0x190e		VoC_jal(CS_decoder_mb_decode)(lo)	|	VoC_bez16_d(CS_dec_mb_inter1v07,0xcb6)(hi)
0xDFA916DC,	//0x1910		VoC_pop16(RA,DEFAULT)	|	VoC_jal(CS_decoder_mb_decode)(hi)
		//0x1911		CS_dec_mb_inter1v07
0xE580FFC0,	//0x1912		VoC_return	|	VoC_NOP
		//0x1914		CS_mult16X32
0x7F45DFE9,	//0x1914		VoC_lw32z(ACC1,DEFAULT)	|	VoC_push16(RA,DEFAULT)
0x3105F665,	//0x1916		VoC_bgtz16_r(CS_dec_mb_gmc_16x16_0,REG5)(lo)	|	VoC_movreg16(REG5,REG3,IN_PARALLEL)
0xCB49191A,	//0x1918		VoC_sub32_rr(REG23,ACC1,REG23,DEFAULT)	|	VoC_bgtz16_r(CS_dec_mb_gmc_16x16_0,REG5)(hi)
		//0x191a		CS_dec_mb_gmc_16x16_0
0xF90AFBF9,	//0x191a		VoC_shru16_ri(REG2,0x1,DEFAULT)	|	VoC_shr32_ri(REG23,0xffffffff,DEFAULT)
0xCC11CC1B,	//0x191c		VoC_multf32_rr(REG23,REG0,REG2,DEFAULT)	|	VoC_multf32_rr(REG67,REG0,REG3,DEFAULT)
0xC859FB8B,	//0x191e		VoC_add32_rr(REG23,REG23,REG67,DEFAULT)	|	VoC_shr32_ri(REG67,0xfffffff1,DEFAULT)
0x19233105,	//0x1920		VoC_bgtz16_r(CS_dec_mb_gmc_16x16_1,REG5)
0xDFA9CB49,	//0x1922		VoC_pop16(RA,DEFAULT)	|	VoC_sub32_rr(REG23,ACC1,REG23,DEFAULT)
		//0x1923		CS_dec_mb_gmc_16x16_1
0xE580FFC0,	//0x1924		VoC_return	|	VoC_NOP
		//0x1926		CS_dec_mb_gmc_16x16
0x7064DFE9,	//0x1926		VoC_lw16i_short(REG4,0x3,DEFAULT)	|	VoC_push16(RA,DEFAULT)
0x7F44F5E1,	//0x1928		VoC_lw32z(ACC0,DEFAULT)	|	VoC_lw16i_short(FORMAT32,0xfffffffc,IN_PARALLEL)
0x07A4FF45,	//0x192a		VoC_sub16_rd(REG4,REG4,0x21dd)(lo)	|	VoC_lw32z(ACC1,IN_PARALLEL)
0x140521DD,	//0x192c		VoC_lw16_d(REG5,0xcbb)(lo)	|	VoC_sub16_rd(REG4,REG4,0x21dd)(hi)
0x15040CBB,	//0x192e		VoC_sw16_d(REG4,0x2010)(lo)	|	VoC_lw16_d(REG5,0xcbb)(hi)
0xF8FC2010,	//0x1930		VoC_shr16_ri(REG4,0xffffffff,DEFAULT)	|	VoC_sw16_d(REG4,0x2010)(hi)
0x0A84FE25,	//0x1932		VoC_lw16i(REG4,0x80)(lo)	|	VoC_shr16_rr(REG5,REG4,DEFAULT)
0xC32D0080,	//0x1934		VoC_sub16_rr(REG5,REG4,REG5,DEFAULT)	|	VoC_lw16i(REG4,0x80)(hi)
0x1480E0A9,	//0x1936		VoC_lw32_d(REG01,0xcae)(lo)	|	VoC_movreg16(ACC0_HI,REG5,DEFAULT)
0x14810CAE,	//0x1938		VoC_lw32_d(REG23,0x21e0)(lo)	|	VoC_lw32_d(REG01,0xcae)(hi)
0xDF4421E0,	//0x193a		VoC_push32(ACC0,DEFAULT)	|	VoC_lw32_d(REG23,0x21e0)(hi)
0x19142B80,	//0x193c		VoC_jal(CS_mult16X32)
0xF6207F0C,	//0x193e		VoC_movreg16(REG0,REG1,IN_PARALLEL)	|	VoC_movreg32(ACC0,REG23,DEFAULT)
0x21E21481,	//0x1940		VoC_lw32_d(REG23,0x21e2)
0x19142B80,	//0x1942		VoC_jal(CS_mult16X32)
0x0924C864,	//0x1944		VoC_add32_rd(ACC0,ACC0,0x21e8)(lo)	|	VoC_add32_rr(ACC0,REG23,ACC0,DEFAULT)
0x148021E8,	//0x1946		VoC_lw32_d(REG01,0xcae)(lo)	|	VoC_add32_rd(ACC0,ACC0,0x21e8)(hi)
0x14810CAE,	//0x1948		VoC_lw32_d(REG23,0x21e4)(lo)	|	VoC_lw32_d(REG01,0xcae)(hi)
0x158421E4,	//0x194a		VoC_sw32_d(ACC0,0x2034)(lo)	|	VoC_lw32_d(REG23,0x21e4)(hi)
0x15842034,	//0x194c		VoC_sw32_d(ACC0,0x200a)(lo)	|	VoC_sw32_d(ACC0,0x2034)(hi)
0xFFC0200A,	//0x194e		VoC_NAD	|	VoC_sw32_d(ACC0,0x200a)(hi)
0x19142B80,	//0x1950		VoC_jal(CS_mult16X32)
0xF6207F0F,	//0x1952		VoC_movreg16(REG0,REG1,IN_PARALLEL)	|	VoC_movreg32(RL7,REG23,DEFAULT)
0x21E61481,	//0x1954		VoC_lw32_d(REG23,0x21e6)
0x19142B80,	//0x1956		VoC_jal(CS_mult16X32)
0x093FC87F,	//0x1958		VoC_add32_rd(RL7,RL7,0x21ea)(lo)	|	VoC_add32_rr(RL7,REG23,RL7,DEFAULT)
0xF00421EA,	//0x195a		VoC_lw16i_short(REG4,0x0,DEFAULT)	|	VoC_add32_rd(RL7,RL7,0x21ea)(hi)
0x201007A4,	//0x195c		VoC_sub16_rd(REG4,REG4,0x2010)
0x20361587,	//0x195e		VoC_sw32_d(RL7,0x2036)
0x200C1587,	//0x1960		VoC_sw32_d(RL7,0x200c)
0xFA877A84,	//0x1962		VoC_shr32_ri(RL7,0x10,IN_PARALLEL)	|	VoC_shr32_ri(ACC0,0x10,DEFAULT)
0xFEA77EA4,	//0x1964		VoC_shr32_rr(RL7,REG4,IN_PARALLEL)	|	VoC_shr32_rr(ACC0,REG4,DEFAULT)
0xFA277A24,	//0x1966		VoC_shr32_ri(RL7,0x4,IN_PARALLEL)	|	VoC_shr32_ri(ACC0,0x4,DEFAULT)
0x196C33C4,	//0x1968		VoC_bnltz32_r(CS_dec_mb_gmc_src_u_16X16_addr_bgt0,ACC0)
0xFFC07F44,	//0x196a		VoC_NAD(IN_PARALLEL)	|	VoC_lw32z(ACC0,DEFAULT)
		//0x196c		CS_dec_mb_gmc_src_u_16X16_addr_bgt0
0x197033C7,	//0x196c		VoC_bnltz32_r(CS_dec_mb_gmc_src_v_16X16_addr_bgt0,RL7)
0xFFC07F47,	//0x196e		VoC_NAD(IN_PARALLEL)	|	VoC_lw32z(RL7,DEFAULT)
		//0x1970		CS_dec_mb_gmc_src_v_16X16_addr_bgt0
0x0CBE140A,	//0x1970		VoC_lw16_d(ACC1_LO,0xcbe)
0x197636A5,	//0x1972		VoC_bngt32_rr(CS_dec_mb_gmc_src_u_16X16_addr_bgt1,ACC0,ACC1)
0xFFC07F2C,	//0x1974		VoC_NAD(IN_PARALLEL)	|	VoC_movreg32(ACC0,ACC1,DEFAULT)
		//0x1976		CS_dec_mb_gmc_src_u_16X16_addr_bgt1
0x0CBF140A,	//0x1976		VoC_lw16_d(ACC1_LO,0xcbf)
0x197C362F,	//0x1978		VoC_bgt32_rr(CS_dec_mb_gmc_src_v_16X16_addr_bgt1,ACC1,RL7)
0xCB7FF04E,	//0x197a		VoC_sub32_rr(RL7,ACC1,RL7,DEFAULT)	|	VoC_lw16i_short(RL7_LO,0x2,DEFAULT)
		//0x197c		CS_dec_mb_gmc_src_v_16X16_addr_bgt1
0x21F71508,	//0x197c		VoC_sw16_d(ACC0_LO,0x21f7)
0x21F8150E,	//0x197e		VoC_sw16_d(RL7_LO,0x21f8)
0x1A7A1485,	//0x1980		VoC_lw32_d(ACC1,0x1a7a)
0xC92CFBF5,	//0x1982		VoC_add32_rr(ACC0,ACC0,ACC1,DEFAULT)	|	VoC_shr32_ri(ACC1,0xfffffffe,DEFAULT)
0xF40161C0,	//0x1984		VoC_lw16i_short(FORMAT32,0x0,IN_PARALLEL)	|	VoC_movreg16(REG0,RL7_LO,DEFAULT)
0x0CBC0E00,	//0x1986		VoC_mac32_rd(REG0,0xcbc)
0x0FA72B80,	//0x1988		VoC_jal(CS_mp4_qpel16_mv1_data_dma_in)
0xF7037062,	//0x198a		VoC_movreg16(REG3,ACC0_LO,IN_PARALLEL)	|	VoC_lw16i_short(REG2,0x3,DEFAULT)
0x1804E413,	//0x198c		VoC_lw16i_set_inc(REG0,0xd70,0x1)(lo)	|	VoC_and16_rr(REG3,REG2,DEFAULT)
0x18050D70,	//0x198e		VoC_lw16i_set_inc(REG1,0x18de,0x1)(lo)	|	VoC_lw16i_set_inc(REG0,0xd70,0x1)(hi)
0xC05918DE,	//0x1990		VoC_add16_rr(REG1,REG1,REG3,DEFAULT)	|	VoC_lw16i_set_inc(REG1,0x18de,0x1)(hi)
0x20341484,	//0x1992		VoC_lw32_d(ACC0,0x2034)
0x20361485,	//0x1994		VoC_lw32_d(ACC1,0x2036)
0x21FA1501,	//0x1996		VoC_sw16_d(REG1,0x21fa)
0x1A0A2C20,	//0x1998		VoC_loop_i(0x0,0x10)
0x21F21584,	//0x199a		VoC_sw32_d(ACC0,0x21f2)
0x21F41585,	//0x199c		VoC_sw32_d(ACC1,0x21f4)
0x19FF2C21,	//0x199e		VoC_loop_i(0x1,0x10)
0x21F21484,	//0x19a0		VoC_lw32_d(ACC0,0x21f2)
0x21F41485,	//0x19a2		VoC_lw32_d(ACC1,0x21f4)
0xF7676126,	//0x19a4		VoC_movreg16(REG7,ACC1_HI,IN_PARALLEL)	|	VoC_movreg16(REG6,ACC0_HI,DEFAULT)
0x07A4F004,	//0x19a6		VoC_sub16_rd(REG4,REG4,0x2010)(lo)	|	VoC_lw16i_short(REG4,0x0,DEFAULT)
0x7E262010,	//0x19a8		VoC_shr16_rr(REG6,REG4,DEFAULT)	|	VoC_sub16_rd(REG4,REG4,0x2010)(hi)
0x0924FE27,	//0x19aa		VoC_add32_rd(ACC0,ACC0,0x21e0)(lo)	|	VoC_shr16_rr(REG7,REG4,IN_PARALLEL)
0x092D21E0,	//0x19ac		VoC_add32_rd(ACC1,ACC1,0x21e4)(lo)	|	VoC_add32_rd(ACC0,ACC0,0x21e0)(hi)
0x158421E4,	//0x19ae		VoC_sw32_d(ACC0,0x21f2)(lo)	|	VoC_add32_rd(ACC1,ACC1,0x21e4)(hi)
0x158521F2,	//0x19b0		VoC_sw32_d(ACC1,0x21f4)(lo)	|	VoC_sw32_d(ACC0,0x21f2)(hi)
0xE0C421F4,	//0x19b2		VoC_movreg16(REG4,REG6,DEFAULT)	|	VoC_sw32_d(ACC1,0x21f4)(hi)
0x000F1604,	//0x19b4		VoC_and16_ri(REG4,0xf)
0x5E720B25,	//0x19b6		VoC_sub16_dr(REG5,0x5e72,REG4)
0xF826FF16,	//0x19b8		VoC_shr16_ri(REG6,0x4,DEFAULT)	|	VoC_movreg32(RL6,REG45,DEFAULT)
0x21F707B6,	//0x19ba		VoC_sub16_rd(REG6,REG6,0x21f7)
0x5E723C86,	//0x19bc		VoC_bngt16_rd(CS_dec_mb_gmc_u_blt_w,REG6,0x5e72)
0x5E721406,	//0x19be		VoC_lw16_d(REG6,0x5e72)
0xE00C720D,	//0x19c0		VoC_lw16i_short(RL6_LO,0x0,IN_PARALLEL)	|	VoC_lw16i_short(RL6_HI,0x10,DEFAULT)
0xFFC065C7,	//0x19c2		VoC_NAD(IN_PARALLEL)	|	VoC_jump(CS_dec_mb_gmc_u_end)
		//0x19c4		CS_dec_mb_gmc_u_blt_w
0x19C93246,	//0x19c4		VoC_bnltz16_r(CS_dec_mb_gmc_u_end,REG6)
0x720DF006,	//0x19c6		VoC_lw16i_short(RL6_HI,0x10,DEFAULT)	|	VoC_lw16i_short(REG6,0x0,DEFAULT)
0xE0E4E00C,	//0x19c8		VoC_movreg16(REG4,REG7,DEFAULT)	|	VoC_lw16i_short(RL6_LO,0x0,IN_PARALLEL)
		//0x19c9		CS_dec_mb_gmc_u_end
0x000F1604,	//0x19ca		VoC_and16_ri(REG4,0xf)
0x5E720B25,	//0x19cc		VoC_sub16_dr(REG5,0x5e72,REG4)
0xF827FF17,	//0x19ce		VoC_shr16_ri(REG7,0x4,DEFAULT)	|	VoC_movreg32(RL7,REG45,DEFAULT)
0x21F807BF,	//0x19d0		VoC_sub16_rd(REG7,REG7,0x21f8)
0x5E723C87,	//0x19d2		VoC_bngt16_rd(CS_dec_mb_gmc_v_blt_w,REG7,0x5e72)
0x5E721407,	//0x19d4		VoC_lw16_d(REG7,0x5e72)
0xE00E720F,	//0x19d6		VoC_lw16i_short(RL7_LO,0x0,IN_PARALLEL)	|	VoC_lw16i_short(RL7_HI,0x10,DEFAULT)
0xFFC065C8,	//0x19d8		VoC_NAD(IN_PARALLEL)	|	VoC_jump(CS_dec_mb_gmc_v_end)
		//0x19da		CS_dec_mb_gmc_v_blt_w
0x19E03247,	//0x19da		VoC_bnltz16_r(CS_dec_mb_gmc_v_end,REG7)
0x720FF007,	//0x19dc		VoC_lw16i_short(RL7_HI,0x10,DEFAULT)	|	VoC_lw16i_short(REG7,0x0,DEFAULT)
0xFFC0E00E,	//0x19de		VoC_NAD	|	VoC_lw16i_short(RL7_LO,0x0,IN_PARALLEL)
		//0x19e0		CS_dec_mb_gmc_v_end
0x5E76083F,	//0x19e0		VoC_mult16_rd(REG7,REG7,0x5e76)
0x21FA1401,	//0x19e2		VoC_lw16_d(REG1,0x21fa)
0xC079C189,	//0x19e4		VoC_add16_rr(REG1,REG1,REG7,DEFAULT)	|	VoC_add16_rr(REG1,REG6,REG1,DEFAULT)
0x5E76070F,	//0x19e6		VoC_add16_rd(REG7,REG1,0x5e76)
0xFF325892,	//0x19e8		VoC_movreg32(REG45,RL6,IN_PARALLEL)	|	VoC_lw16inc_p(REG2,REG1,DEFAULT)
0xC4AA5876,	//0x19ea		VoC_mult16_rr(REG2,REG2,REG5,IN_PARALLEL)	|	VoC_lw16_p(REG6,REG7,DEFAULT)
0x5E76070F,	//0x19ec		VoC_add16_rd(REG7,REG1,0x5e76)
0xC5AE5813,	//0x19ee		VoC_mult16_rr(REG6,REG6,REG5,IN_PARALLEL)	|	VoC_lw16_p(REG3,REG1,DEFAULT)
0xC4E35877,	//0x19f0		VoC_mult16_rr(REG3,REG3,REG4,IN_PARALLEL)	|	VoC_lw16_p(REG7,REG7,DEFAULT)
0xD90CC5E7,	//0x19f2		VoC_lw32_sd(ACC0,0x0,DEFAULT)	|	VoC_mult16_rr(REG7,REG7,REG4,DEFAULT)
0xFF3A409A,	//0x19f4		VoC_movreg32(REG45,RL7,IN_PARALLEL)	|	VoC_add16_rr(REG2,REG2,REG3,DEFAULT)
0xF40141BB,	//0x19f6		VoC_lw16i_short(FORMAT32,0x0,IN_PARALLEL)	|	VoC_add16_rr(REG3,REG6,REG7,DEFAULT)
0x4CE1CCAB,	//0x19f8		VoC_multf32_rr(REG23,REG3,REG4,DEFAULT)	|	VoC_multf32_rr(REG67,REG2,REG5,DEFAULT)
0xC91BFA84,	//0x19fa		VoC_add32_rr(REG67,ACC0,REG67,DEFAULT)	|	VoC_shr32_ri(ACC0,0x10,IN_PARALLEL)
0xF942C8C9,	//0x19fc		VoC_shru16_ri(REG2,0x8,DEFAULT)	|	VoC_add32_rr(REG23,REG67,REG23,DEFAULT)
0xDC82FFC0,	//0x19fe		VoC_sw16inc_p(REG2,REG0,DEFAULT)	|	VoC_NOP
		//0x19ff		VoC_endloop1
0x20341484,	//0x1a00		VoC_lw32_d(ACC0,0x2034)
0x20361485,	//0x1a02		VoC_lw32_d(ACC1,0x2036)
0x21E20924,	//0x1a04		VoC_add32_rd(ACC0,ACC0,0x21e2)
0x21E6092D,	//0x1a06		VoC_add32_rd(ACC1,ACC1,0x21e6)
0x20341584,	//0x1a08		VoC_sw32_d(ACC0,0x2034)
		//0x1a0a		VoC_endloop0
0x20361585,	//0x1a0a		VoC_sw32_d(ACC1,0x2036)
0xDFA95F04,	//0x1a0c		VoC_pop16(RA,IN_PARALLEL)	|	VoC_pop32(ACC0,DEFAULT)
0xE580FFC0,	//0x1a0e		VoC_return	|	VoC_NOP
		//0x1a10		CS_dec_mb_gmc_8x8
0xF185DFE9,	//0x1a10		VoC_lw16i_short(REG5,0xc,DEFAULT)	|	VoC_push16(RA,DEFAULT)
0xFF457F44,	//0x1a12		VoC_lw32z(ACC1,IN_PARALLEL)	|	VoC_lw32z(ACC0,DEFAULT)
0x21FA1505,	//0x1a14		VoC_sw16_d(REG5,0x21fa)
0x0CBB1405,	//0x1a16		VoC_lw16_d(REG5,0xcbb)
0x0CBC1400,	//0x1a18		VoC_lw16_d(REG0,0xcbc)
0x7E25F8FC,	//0x1a1a		VoC_shr16_rr(REG5,REG4,DEFAULT)	|	VoC_shr16_ri(REG4,0xffffffff,DEFAULT)
0x0A84F808,	//0x1a1c		VoC_lw16i(REG4,0x80)(lo)	|	VoC_shr16_ri(REG0,0x1,IN_PARALLEL)
0xC32D0080,	//0x1a1e		VoC_sub16_rr(REG5,REG4,REG5,DEFAULT)	|	VoC_lw16i(REG4,0x80)(hi)
0x1500E0A9,	//0x1a20		VoC_sw16_d(REG0,0xce6)(lo)	|	VoC_movreg16(ACC0_HI,REG5,DEFAULT)
0xDF440CE6,	//0x1a22		VoC_push32(ACC0,DEFAULT)	|	VoC_sw16_d(REG0,0xce6)(hi)
0x200A1484,	//0x1a24		VoC_lw32_d(ACC0,0x200a)
0x200C1487,	//0x1a26		VoC_lw32_d(RL7,0x200c)
0x21E809A4,	//0x1a28		VoC_sub32_rd(ACC0,ACC0,0x21e8)
0x21EA09BF,	//0x1a2a		VoC_sub32_rd(RL7,RL7,0x21ea)
0xFA0F7A0C,	//0x1a2c		VoC_shr32_ri(RL7,0x1,IN_PARALLEL)	|	VoC_shr32_ri(ACC0,0x1,DEFAULT)
0x21EC0924,	//0x1a2e		VoC_add32_rd(ACC0,ACC0,0x21ec)
0x21EE093F,	//0x1a30		VoC_add32_rd(RL7,RL7,0x21ee)
0x07A4F004,	//0x1a32		VoC_sub16_rd(REG4,REG4,0x2010)(lo)	|	VoC_lw16i_short(REG4,0x0,DEFAULT)
0x15042010,	//0x1a34		VoC_sw16_d(REG4,0x21fb)(lo)	|	VoC_sub16_rd(REG4,REG4,0x2010)(hi)
0x158421FB,	//0x1a36		VoC_sw32_d(ACC0,0x2034)(lo)	|	VoC_sw16_d(REG4,0x21fb)(hi)
0x15872034,	//0x1a38		VoC_sw32_d(RL7,0x2036)(lo)	|	VoC_sw32_d(ACC0,0x2034)(hi)
0x7A842036,	//0x1a3a		VoC_shr32_ri(ACC0,0x10,DEFAULT)	|	VoC_sw32_d(RL7,0x2036)(hi)
0x7EA4FA87,	//0x1a3c		VoC_shr32_rr(ACC0,REG4,DEFAULT)	|	VoC_shr32_ri(RL7,0x10,IN_PARALLEL)
0x7A24FEA7,	//0x1a3e		VoC_shr32_ri(ACC0,0x4,DEFAULT)	|	VoC_shr32_rr(RL7,REG4,IN_PARALLEL)
0x33C4FA27,	//0x1a40		VoC_bnltz32_r(CS_dec_mb_gmc_src_u_8X8_addr_bgt0,ACC0)(lo)	|	VoC_shr32_ri(RL7,0x4,IN_PARALLEL)
0xFF441A44,	//0x1a42		VoC_lw32z(ACC0,DEFAULT)	|	VoC_bnltz32_r(CS_dec_mb_gmc_src_u_8X8_addr_bgt0,ACC0)(hi)
		//0x1a44		CS_dec_mb_gmc_src_u_8X8_addr_bgt0
0x1A4833C7,	//0x1a44		VoC_bnltz32_r(CS_dec_mb_gmc_src_v_8X8_addr_bgt0,RL7)
0xFFC07F47,	//0x1a46		VoC_NAD(IN_PARALLEL)	|	VoC_lw32z(RL7,DEFAULT)
		//0x1a48		CS_dec_mb_gmc_src_v_8X8_addr_bgt0
0x0CBE140A,	//0x1a48		VoC_lw16_d(ACC1_LO,0xcbe)
0x36A5FA0D,	//0x1a4a		VoC_bngt32_rr(CS_dec_mb_gmc_src_u_8X8_addr_bgt1,ACC0,ACC1)(lo)	|	VoC_shr32_ri(ACC1,0x1,DEFAULT)
0xFF2C1A4E,	//0x1a4c		VoC_movreg32(ACC0,ACC1,DEFAULT)	|	VoC_bngt32_rr(CS_dec_mb_gmc_src_u_8X8_addr_bgt1,ACC0,ACC1)(hi)
		//0x1a4e		CS_dec_mb_gmc_src_u_8X8_addr_bgt1
0x0CBF140A,	//0x1a4e		VoC_lw16_d(ACC1_LO,0xcbf)
0x362FFA0D,	//0x1a50		VoC_bgt32_rr(CS_dec_mb_gmc_src_v_8X8_addr_bgt1,ACC1,RL7)(lo)	|	VoC_shr32_ri(ACC1,0x1,DEFAULT)
0xF04E1A56,	//0x1a52		VoC_lw16i_short(RL7_LO,0x2,DEFAULT)	|	VoC_bgt32_rr(CS_dec_mb_gmc_src_v_8X8_addr_bgt1,ACC1,RL7)(hi)
0xFFC04B7F,	//0x1a54		VoC_NAD(IN_PARALLEL)	|	VoC_sub32_rr(RL7,ACC1,RL7,DEFAULT)
		//0x1a56		CS_dec_mb_gmc_src_v_8X8_addr_bgt1
0x1A7C1485,	//0x1a56		VoC_lw32_d(ACC1,0x1a7c)
0x1A7E1481,	//0x1a58		VoC_lw32_d(REG23,0x1a7e)
0xFBF17BF5,	//0x1a5a		VoC_shr32_ri(REG23,0xfffffffe,IN_PARALLEL)	|	VoC_shr32_ri(ACC1,0xfffffffe,DEFAULT)
0x1508CA69,	//0x1a5c		VoC_sw16_d(ACC0_LO,0x21f7)(lo)	|	VoC_sub32_rr(REG23,REG23,ACC1,DEFAULT)
0x150E21F7,	//0x1a5e		VoC_sw16_d(RL7_LO,0x21f8)(lo)	|	VoC_sw16_d(ACC0_LO,0x21f7)(hi)
0x5F4121F8,	//0x1a60		VoC_push32(REG23,DEFAULT)	|	VoC_sw16_d(RL7_LO,0x21f8)(hi)
0x61C0C92C,	//0x1a62		VoC_movreg16(REG0,RL7_LO,DEFAULT)	|	VoC_add32_rr(ACC0,ACC0,ACC1,IN_PARALLEL)
0x0E00F401,	//0x1a64		VoC_mac32_rd(REG0,0xce6)(lo)	|	VoC_lw16i_short(FORMAT32,0x0,IN_PARALLEL)
0x14000CE6,	//0x1a66		VoC_lw16_d(REG0,0xce6)(lo)	|	VoC_mac32_rd(REG0,0xce6)(hi)
0x78100CE6,	//0x1a68		VoC_shr16_ri(REG0,0x2,DEFAULT)	|	VoC_lw16_d(REG0,0xce6)(hi)
0x0A82E0A1,	//0x1a6a		VoC_lw16i(REG2,0xc6f)(lo)	|	VoC_lw16i_short(REG1,0xa,IN_PARALLEL)
0xF0630C6F,	//0x1a6c		VoC_lw16i_short(REG3,0x3,DEFAULT)	|	VoC_lw16i(REG2,0xc6f)(hi)
0xF00CC218,	//0x1a6e		VoC_lw16i_short(RL6_LO,0x0,DEFAULT)	|	VoC_sub16_rr(REG0,REG0,REG3,DEFAULT)
0x10000A8D,	//0x1a70		VoC_lw16i(RL6_HI,0x1000)
0x024F2B80,	//0x1a72		VoC_jal(Coolsand_MPEG4Run2DDma)
0x0A82DF05,	//0x1a74		VoC_lw16i(REG2,0xcd3)(lo)	|	VoC_pop32(ACC1,DEFAULT)
0xC92C0CD3,	//0x1a76		VoC_add32_rr(ACC0,ACC0,ACC1,DEFAULT)	|	VoC_lw16i(REG2,0xcd3)(hi)
0x024F2B80,	//0x1a78		VoC_jal(Coolsand_MPEG4Run2DDma)
0xF7037062,	//0x1a7a		VoC_movreg16(REG3,ACC0_LO,IN_PARALLEL)	|	VoC_lw16i_short(REG2,0x3,DEFAULT)
0x1804E413,	//0x1a7c		VoC_lw16i_set_inc(REG0,0xd70,0x1)(lo)	|	VoC_and16_rr(REG3,REG2,DEFAULT)
0x18050D70,	//0x1a7e		VoC_lw16i_set_inc(REG1,0x18de,0x1)(lo)	|	VoC_lw16i_set_inc(REG0,0xd70,0x1)(hi)
0xC05918DE,	//0x1a80		VoC_add16_rr(REG1,REG1,REG3,DEFAULT)	|	VoC_lw16i_set_inc(REG1,0x18de,0x1)(hi)
0x20341484,	//0x1a82		VoC_lw32_d(ACC0,0x2034)
0x20361485,	//0x1a84		VoC_lw32_d(ACC1,0x2036)
0x21FC1501,	//0x1a86		VoC_sw16_d(REG1,0x21fc)
0x1B212C10,	//0x1a88		VoC_loop_i(0x0,0x8)
0x21F21584,	//0x1a8a		VoC_sw32_d(ACC0,0x21f2)
0x21F41585,	//0x1a8c		VoC_sw32_d(ACC1,0x21f4)
0x1B162C11,	//0x1a8e		VoC_loop_i(0x1,0x8)
0x21F21484,	//0x1a90		VoC_lw32_d(ACC0,0x21f2)
0x21F41485,	//0x1a92		VoC_lw32_d(ACC1,0x21f4)
0xF7676126,	//0x1a94		VoC_movreg16(REG7,ACC1_HI,IN_PARALLEL)	|	VoC_movreg16(REG6,ACC0_HI,DEFAULT)
0x07A4F004,	//0x1a96		VoC_sub16_rd(REG4,REG4,0x2010)(lo)	|	VoC_lw16i_short(REG4,0x0,DEFAULT)
0x7E262010,	//0x1a98		VoC_shr16_rr(REG6,REG4,DEFAULT)	|	VoC_sub16_rd(REG4,REG4,0x2010)(hi)
0x0924FE27,	//0x1a9a		VoC_add32_rd(ACC0,ACC0,0x21e0)(lo)	|	VoC_shr16_rr(REG7,REG4,IN_PARALLEL)
0x092D21E0,	//0x1a9c		VoC_add32_rd(ACC1,ACC1,0x21e4)(lo)	|	VoC_add32_rd(ACC0,ACC0,0x21e0)(hi)
0x158421E4,	//0x1a9e		VoC_sw32_d(ACC0,0x21f2)(lo)	|	VoC_add32_rd(ACC1,ACC1,0x21e4)(hi)
0x158521F2,	//0x1aa0		VoC_sw32_d(ACC1,0x21f4)(lo)	|	VoC_sw32_d(ACC0,0x21f2)(hi)
0xE0C421F4,	//0x1aa2		VoC_movreg16(REG4,REG6,DEFAULT)	|	VoC_sw32_d(ACC1,0x21f4)(hi)
0x000F1604,	//0x1aa4		VoC_and16_ri(REG4,0xf)
0x5E720B25,	//0x1aa6		VoC_sub16_dr(REG5,0x5e72,REG4)
0xF826FF16,	//0x1aa8		VoC_shr16_ri(REG6,0x4,DEFAULT)	|	VoC_movreg32(RL6,REG45,DEFAULT)
0x21F707B6,	//0x1aaa		VoC_sub16_rd(REG6,REG6,0x21f7)
0x5E6B3C86,	//0x1aac		VoC_bngt16_rd(CS_dec_mb_gmc_uv_u_blt_w,REG6,0x5e6b)
0x5E6B1406,	//0x1aae		VoC_lw16_d(REG6,0x5e6b)
0xE00C720D,	//0x1ab0		VoC_lw16i_short(RL6_LO,0x0,IN_PARALLEL)	|	VoC_lw16i_short(RL6_HI,0x10,DEFAULT)
0xFFC065C7,	//0x1ab2		VoC_NAD(IN_PARALLEL)	|	VoC_jump(CS_dec_mb_gmc_uv_u_end)
		//0x1ab4		CS_dec_mb_gmc_uv_u_blt_w
0x1AB93246,	//0x1ab4		VoC_bnltz16_r(CS_dec_mb_gmc_uv_u_end,REG6)
0x720DF006,	//0x1ab6		VoC_lw16i_short(RL6_HI,0x10,DEFAULT)	|	VoC_lw16i_short(REG6,0x0,DEFAULT)
0xE0E4E00C,	//0x1ab8		VoC_movreg16(REG4,REG7,DEFAULT)	|	VoC_lw16i_short(RL6_LO,0x0,IN_PARALLEL)
		//0x1ab9		CS_dec_mb_gmc_uv_u_end
0x000F1604,	//0x1aba		VoC_and16_ri(REG4,0xf)
0x5E720B25,	//0x1abc		VoC_sub16_dr(REG5,0x5e72,REG4)
0xF827FF17,	//0x1abe		VoC_shr16_ri(REG7,0x4,DEFAULT)	|	VoC_movreg32(RL7,REG45,DEFAULT)
0x21F807BF,	//0x1ac0		VoC_sub16_rd(REG7,REG7,0x21f8)
0x5E6B3C87,	//0x1ac2		VoC_bngt16_rd(CS_dec_mb_gmc_uv_v_blt_w,REG7,0x5e6b)
0x5E6B1407,	//0x1ac4		VoC_lw16_d(REG7,0x5e6b)
0xE00E720F,	//0x1ac6		VoC_lw16i_short(RL7_LO,0x0,IN_PARALLEL)	|	VoC_lw16i_short(RL7_HI,0x10,DEFAULT)
0xFFC065C8,	//0x1ac8		VoC_NAD(IN_PARALLEL)	|	VoC_jump(CS_dec_mb_gmc_uv_v_end)
		//0x1aca		CS_dec_mb_gmc_uv_v_blt_w
0x1AD03247,	//0x1aca		VoC_bnltz16_r(CS_dec_mb_gmc_uv_v_end,REG7)
0x720FF007,	//0x1acc		VoC_lw16i_short(RL7_HI,0x10,DEFAULT)	|	VoC_lw16i_short(REG7,0x0,DEFAULT)
0xFFC0E00E,	//0x1ace		VoC_NAD	|	VoC_lw16i_short(RL7_LO,0x0,IN_PARALLEL)
		//0x1ad0		CS_dec_mb_gmc_uv_v_end
0x21FA083F,	//0x1ad0		VoC_mult16_rd(REG7,REG7,0x21fa)
0x21FC1401,	//0x1ad2		VoC_lw16_d(REG1,0x21fc)
0x4079C189,	//0x1ad4		VoC_add16_rr(REG1,REG1,REG7,DEFAULT)	|	VoC_add16_rr(REG1,REG6,REG1,DEFAULT)
0xE5C5FF45,	//0x1ad6		VoC_jump(CS_dec_mb_gmc_uv_caculate)	|	VoC_lw32z(ACC1,IN_PARALLEL)
		//0x1ad8		CS_dec_mb_gmc_uv_caculate_begain
0x00C70A82,	//0x1ad8		VoC_lw16i(REG2,0xc7)
0xC051E04A,	//0x1ada		VoC_add16_rr(REG1,REG1,REG2,DEFAULT)	|	VoC_movreg16(ACC1_LO,REG2,DEFAULT)
		//0x1adc		CS_dec_mb_gmc_uv_caculate
0x21FA070F,	//0x1adc		VoC_add16_rd(REG7,REG1,0x21fa)
0xFF325892,	//0x1ade		VoC_movreg32(REG45,RL6,IN_PARALLEL)	|	VoC_lw16inc_p(REG2,REG1,DEFAULT)
0xC4AA5876,	//0x1ae0		VoC_mult16_rr(REG2,REG2,REG5,IN_PARALLEL)	|	VoC_lw16_p(REG6,REG7,DEFAULT)
0x21FA070F,	//0x1ae2		VoC_add16_rd(REG7,REG1,0x21fa)
0xC5AE5813,	//0x1ae4		VoC_mult16_rr(REG6,REG6,REG5,IN_PARALLEL)	|	VoC_lw16_p(REG3,REG1,DEFAULT)
0xC4E35877,	//0x1ae6		VoC_mult16_rr(REG3,REG3,REG4,IN_PARALLEL)	|	VoC_lw16_p(REG7,REG7,DEFAULT)
0xD90CC5E7,	//0x1ae8		VoC_lw32_sd(ACC0,0x0,DEFAULT)	|	VoC_mult16_rr(REG7,REG7,REG4,DEFAULT)
0xFF3A409A,	//0x1aea		VoC_movreg32(REG45,RL7,IN_PARALLEL)	|	VoC_add16_rr(REG2,REG2,REG3,DEFAULT)
0xF40141BB,	//0x1aec		VoC_lw16i_short(FORMAT32,0x0,IN_PARALLEL)	|	VoC_add16_rr(REG3,REG6,REG7,DEFAULT)
0x4CE1CCAB,	//0x1aee		VoC_multf32_rr(REG23,REG3,REG4,DEFAULT)	|	VoC_multf32_rr(REG67,REG2,REG5,DEFAULT)
0xC91BFA84,	//0x1af0		VoC_add32_rr(REG67,ACC0,REG67,DEFAULT)	|	VoC_shr32_ri(ACC0,0x10,IN_PARALLEL)
0x6C0FC8C9,	//0x1af2		VoC_bez16_d(CS_dec_mb_gmc_uv_not_sw,0x21fb)(lo)	|	VoC_add32_rr(REG23,REG67,REG23,DEFAULT)
0xD62321FB,	//0x1af4		VoC_lw16_sd(REG3,0x1,DEFAULT)	|	VoC_bez16_d(CS_dec_mb_gmc_uv_not_sw,0x21fb)(hi)
0x1AFC3305,	//0x1af6		VoC_bez32_r(CS_dec_mb_gmc_uv_pop_u,ACC1)
0xE1F45F83,	//0x1af8		VoC_lw16i_short(REG4,0x1f,IN_PARALLEL)	|	VoC_pop16(REG3,DEFAULT)
0xC0205F86,	//0x1afa		VoC_add16_rr(REG0,REG0,REG4,IN_PARALLEL)	|	VoC_pop16(REG6,DEFAULT)
		//0x1afc		CS_dec_mb_gmc_uv_pop_u
0x7F001642,	//0x1afc		VoC_and16_ri(REG2,0xff00)
0xFFC0E45A,	//0x1afe		VoC_NOP	|	VoC_or16_rr(REG2,REG3,DEFAULT)
0xE5C5DC82,	//0x1b00		VoC_jump(CS_dec_mb_gmc_uv_sw)	|	VoC_sw16inc_p(REG2,REG0,DEFAULT)
		//0x1b02		CS_dec_mb_gmc_uv_not_sw
0xFFC0FA41,	//0x1b02		VoC_NOP	|	VoC_shr32_ri(REG23,0x8,DEFAULT)
0xFFC05FC2,	//0x1b04		VoC_NAD(IN_PARALLEL)	|	VoC_push16(REG2,DEFAULT)
		//0x1b06		CS_dec_mb_gmc_uv_sw
0x1AD83305,	//0x1b06		VoC_bez32_r(CS_dec_mb_gmc_uv_caculate_begain,ACC1)
0x00C80A82,	//0x1b08		VoC_lw16i(REG2,0xc8)
0x6C09C251,	//0x1b0a		VoC_bez16_d(CS_dec_mb_gmc_uv_change_flag0,0x21fb)(lo)	|	VoC_sub16_rr(REG1,REG1,REG2,DEFAULT)
0x0A8321FB,	//0x1b0c		VoC_lw16i(REG3,0x20)(lo)	|	VoC_bez16_d(CS_dec_mb_gmc_uv_change_flag0,0x21fb)(hi)
0xF0040020,	//0x1b0e		VoC_lw16i_short(REG4,0x0,DEFAULT)	|	VoC_lw16i(REG3,0x20)(hi)
0x1504C218,	//0x1b10		VoC_sw16_d(REG4,0x21fb)(lo)	|	VoC_sub16_rr(REG0,REG0,REG3,DEFAULT)
0xE5C321FB,	//0x1b12		VoC_jump(CS_dec_mb_gmc_uv_change_flag1)	|	VoC_sw16_d(REG4,0x21fb)(hi)
		//0x1b14		CS_dec_mb_gmc_uv_change_flag0
0x21FB1502,	//0x1b14		VoC_sw16_d(REG2,0x21fb)
		//0x1b16		CS_dec_mb_gmc_uv_change_flag1
		//0x1b16		VoC_endloop1
0x1484FFC0,	//0x1b16		VoC_lw32_d(ACC0,0x2034)(lo)	|	VoC_NOP
0x14852034,	//0x1b18		VoC_lw32_d(ACC1,0x2036)(lo)	|	VoC_lw32_d(ACC0,0x2034)(hi)
0x09242036,	//0x1b1a		VoC_add32_rd(ACC0,ACC0,0x21e2)(lo)	|	VoC_lw32_d(ACC1,0x2036)(hi)
0x092D21E2,	//0x1b1c		VoC_add32_rd(ACC1,ACC1,0x21e6)(lo)	|	VoC_add32_rd(ACC0,ACC0,0x21e2)(hi)
0x158421E6,	//0x1b1e		VoC_sw32_d(ACC0,0x2034)(lo)	|	VoC_add32_rd(ACC1,ACC1,0x21e6)(hi)
0x15852034,	//0x1b20		VoC_sw32_d(ACC1,0x2036)(lo)	|	VoC_sw32_d(ACC0,0x2034)(hi)
		//0x1b21		VoC_endloop0
0x5F042036,	//0x1b22		VoC_pop32(ACC0,DEFAULT)	|	VoC_sw32_d(ACC1,0x2036)(hi)
0xFFC0DFA9,	//0x1b24		VoC_NOP	|	VoC_pop16(RA,IN_PARALLEL)
0xDFE9E580,	//0x1b26		VoC_push16(RA,DEFAULT)	|	VoC_return
		//0x1b27		CS_dec_mb_gmc_average_mv
0x200A1484,	//0x1b28		VoC_lw32_d(ACC0,0x200a)
0x200C1486,	//0x1b2a		VoC_lw32_d(RL6,0x200c)
0xFF417F40,	//0x1b2c		VoC_lw32z(REG23,IN_PARALLEL)	|	VoC_lw32z(REG01,DEFAULT)
0xFF437F42,	//0x1b2e		VoC_lw32z(REG67,IN_PARALLEL)	|	VoC_lw32z(REG45,DEFAULT)
0x1B422C20,	//0x1b30		VoC_loop_i(0x0,0x10)
0xFF377F25,	//0x1b32		VoC_movreg32(RL7,RL6,IN_PARALLEL)	|	VoC_movreg32(ACC1,ACC0,DEFAULT)
0x1B3E2C21,	//0x1b34		VoC_loop_i(0x1,0x10)
0xF7E76165,	//0x1b36		VoC_movreg16(REG7,RL7_HI,IN_PARALLEL)	|	VoC_movreg16(REG5,ACC1_HI,DEFAULT)
0xFA837A82,	//0x1b38		VoC_shr32_ri(REG67,0x10,IN_PARALLEL)	|	VoC_shr32_ri(REG45,0x10,DEFAULT)
0xC8594810,	//0x1b3a		VoC_add32_rr(REG23,REG23,REG67,IN_PARALLEL)	|	VoC_add32_rr(REG01,REG01,REG45,DEFAULT)
0x21E0092D,	//0x1b3c		VoC_add32_rd(ACC1,ACC1,0x21e0)
		//0x1b3e		VoC_endloop1
0x21E4093F,	//0x1b3e		VoC_add32_rd(RL7,RL7,0x21e4)
0x21E20924,	//0x1b40		VoC_add32_rd(ACC0,ACC0,0x21e2)
		//0x1b42		VoC_endloop0
0x21E60936,	//0x1b42		VoC_add32_rd(RL6,RL6,0x21e6)
0x0A87F766,	//0x1b44		VoC_lw16i(REG7,0x78)(lo)	|	VoC_lw16i_short(REG6,0xfffffffb,DEFAULT)
0x07B60078,	//0x1b46		VoC_sub16_rd(REG6,REG6,0x21dd)(lo)	|	VoC_lw16i(REG7,0x78)(hi)
0x148221DD,	//0x1b48		VoC_lw32_d(REG45,0xcae)(lo)	|	VoC_sub16_rd(REG6,REG6,0x21dd)(hi)
0x7DC20CAE,	//0x1b4a		VoC_shru32_ri(REG45,0xfffffff8,DEFAULT)	|	VoC_lw32_d(REG45,0xcae)(hi)
0x413CFF44,	//0x1b4c		VoC_add16_rr(REG4,REG4,REG7,DEFAULT)	|	VoC_lw32z(ACC0,IN_PARALLEL)
0x60A8C17D,	//0x1b4e		VoC_movreg16(ACC0_LO,REG5,DEFAULT)	|	VoC_add16_rr(REG5,REG5,REG7,IN_PARALLEL)
0x7EB2E005,	//0x1b50		VoC_shr32_rr(REG45,REG6,DEFAULT)	|	VoC_lw16i_short(REG5,0x0,IN_PARALLEL)
0x4A10FEB4,	//0x1b52		VoC_sub32_rr(REG01,REG01,REG45,DEFAULT)	|	VoC_shr32_rr(ACC0,REG6,IN_PARALLEL)
0x7F44CA61,	//0x1b54		VoC_lw32z(ACC0,DEFAULT)	|	VoC_sub32_rr(REG23,REG23,ACC0,IN_PARALLEL)
0x7028E084,	//0x1b56		VoC_lw16i_short(ACC0_LO,0x1,DEFAULT)	|	VoC_lw16i_short(REG4,0x8,IN_PARALLEL)
0xFF25E005,	//0x1b58		VoC_movreg32(ACC1,ACC0,DEFAULT)	|	VoC_lw16i_short(REG5,0x0,IN_PARALLEL)
0x21DD0724,	//0x1b5a		VoC_add16_rd(REG4,REG4,0x21dd)
0x20320B24,	//0x1b5c		VoC_sub16_dr(REG4,0x2032,REG4)
0xFA0CFEA4,	//0x1b5e		VoC_shr32_ri(ACC0,0x1,DEFAULT)	|	VoC_shr32_rr(ACC0,REG4,DEFAULT)
0xC3647F23,	//0x1b60		VoC_sub16_rr(REG4,REG5,REG4,IN_PARALLEL)	|	VoC_movreg32(REG67,ACC0,DEFAULT)
0x1B653280,	//0x1b62		VoC_bgtz32_r(CS_dec_mb_gmc_average_mv_x,REG01)
0xC820CB2C,	//0x1b64		VoC_add32_rr(REG01,REG01,ACC0,DEFAULT)	|	VoC_sub32_rr(ACC0,ACC0,ACC1,DEFAULT)
		//0x1b65		CS_dec_mb_gmc_average_mv_x
0x3281FEA0,	//0x1b66		VoC_bgtz32_r(CS_dec_mb_gmc_average_mv_y,REG23)(lo)	|	VoC_shr32_rr(REG01,REG4,DEFAULT)
0xCAEB1B6A,	//0x1b68		VoC_sub32_rr(REG67,REG67,ACC1,DEFAULT)	|	VoC_bgtz32_r(CS_dec_mb_gmc_average_mv_y,REG23)(hi)
		//0x1b6a		CS_dec_mb_gmc_average_mv_y
0xFEA1C859,	//0x1b6a		VoC_shr32_rr(REG23,REG4,DEFAULT)	|	VoC_add32_rr(REG23,REG23,REG67,DEFAULT)
0xFFC0DFA9,	//0x1b6c		VoC_NOP	|	VoC_pop16(RA,DEFAULT)
0xDFE9E580,	//0x1b6e		VoC_push16(RA,DEFAULT)	|	VoC_return
		//0x1b6f		CS_dec_mb_gmc
0xDF465FC2,	//0x1b70		VoC_push32(RL6,IN_PARALLEL)	|	VoC_push16(REG2,DEFAULT)
0x19262B80,	//0x1b72		VoC_jal(CS_dec_mb_gmc_16x16)
0xE20E720F,	//0x1b74		VoC_lw16i_short(RL7_LO,0x20,IN_PARALLEL)	|	VoC_lw16i_short(RL7_HI,0x10,DEFAULT)
0x0CF00A80,	//0x1b76		VoC_lw16i(REG0,0xcf0)
0x0D700A81,	//0x1b78		VoC_lw16i(REG1,0xd70)
0x0F692B80,	//0x1b7a		VoC_jal(CS_mp4_qpel16X16_to_8X8X4)
0x1A102B80,	//0x1b7c		VoC_jal(CS_dec_mb_gmc_8x8)
0x1B272B80,	//0x1b7e		VoC_jal(CS_dec_mb_gmc_average_mv)
0xEFC57024,	//0x1b80		VoC_lw16i_short(REG5,0xfffffffc,IN_PARALLEL)	|	VoC_lw16i_short(REG4,0x1,DEFAULT)
0x0CBA07AD,	//0x1b82		VoC_sub16_rd(REG5,REG5,0xcba)
0xE0067E2C,	//0x1b84		VoC_lw16i_short(REG6,0x0,IN_PARALLEL)	|	VoC_shr16_rr(REG4,REG5,DEFAULT)
0xE01543A6,	//0x1b86		VoC_lw16i_short(REG5,0x1,IN_PARALLEL)	|	VoC_sub16_rr(REG6,REG6,REG4,DEFAULT)
0x1B8E3420,	//0x1b88		VoC_bgt16_rr(RDA_MPEG4_DEC_GMC_1Pt_X0,REG4,REG0)
0xC228E080,	//0x1b8a		VoC_sub16_rr(REG0,REG0,REG5,DEFAULT)	|	VoC_movreg16(REG0,REG4,DEFAULT)
0xFFC065C6,	//0x1b8c		VoC_NAD(IN_PARALLEL)	|	VoC_jump(RDA_MPEG4_DEC_GMC_1Pt_X_end)
		//0x1b8e		RDA_MPEG4_DEC_GMC_1Pt_X0
0x1B923406,	//0x1b8e		VoC_bgt16_rr(RDA_MPEG4_DEC_GMC_1Pt_X_end,REG0,REG6)
0xFFC060C0,	//0x1b90		VoC_NAD(IN_PARALLEL)	|	VoC_movreg16(REG0,REG6,DEFAULT)
		//0x1b92		RDA_MPEG4_DEC_GMC_1Pt_X_end
0x1B963422,	//0x1b92		VoC_bgt16_rr(RDA_MPEG4_DEC_GMC_1Pt_Y0,REG4,REG2)
0xE5C5E082,	//0x1b94		VoC_jump(RDA_MPEG4_DEC_GMC_1Pt_Y_end)	|	VoC_movreg16(REG2,REG4,DEFAULT)
		//0x1b96		RDA_MPEG4_DEC_GMC_1Pt_Y0
0x1B9A3416,	//0x1b96		VoC_bgt16_rr(RDA_MPEG4_DEC_GMC_1Pt_Y_end,REG2,REG6)
0xFFC060C2,	//0x1b98		VoC_NAD(IN_PARALLEL)	|	VoC_movreg16(REG2,REG6,DEFAULT)
		//0x1b9a		RDA_MPEG4_DEC_GMC_1Pt_Y_end
0xF64B6009,	//0x1b9a		VoC_movreg16(ACC1_HI,REG2,IN_PARALLEL)	|	VoC_movreg16(ACC0_HI,REG0,DEFAULT)
0xFA857A84,	//0x1b9c		VoC_shr32_ri(ACC1,0x10,IN_PARALLEL)	|	VoC_shr32_ri(ACC0,0x10,DEFAULT)
0x0CAE1404,	//0x1b9e		VoC_lw16_d(REG4,0xcae)
0x1808F8EC,	//0x1ba0		VoC_lw16i_set_inc(REG0,0x12e8,0x2)(lo)	|	VoC_shr16_ri(REG4,0xfffffffd,DEFAULT)
0x200912E8,	//0x1ba2		VoC_lw16d_set_inc(REG1,0xcce,0x2)(lo)	|	VoC_lw16i_set_inc(REG0,0x12e8,0x2)(hi)
0x18070CCE,	//0x1ba4		VoC_lw16i_set_inc(REG3,0x206c,0x1)(lo)	|	VoC_lw16d_set_inc(REG1,0xcce,0x2)(hi)
0xC11B206C,	//0x1ba6		VoC_add16_rr(REG3,REG4,REG3,DEFAULT)	|	VoC_lw16i_set_inc(REG3,0x206c,0x1)(hi)
0xDDC4E884,	//0x1ba8		VoC_sw32inc_p(ACC0,REG0,DEFAULT)	|	VoC_loop_i_short(0x4,DEFAULT)
0xDCB8DDC5,	//0x1baa		VoC_sw16inc_p(ACC0_LO,REG3,DEFAULT)	|	VoC_sw32inc_p(ACC1,REG0,DEFAULT)
		//0x1bac		VoC_endloop0
0xDE085CBA,	//0x1bac		VoC_inc_p(REG1,IN_PARALLEL)	|	VoC_sw16inc_p(ACC1_LO,REG3,DEFAULT)
0x0FF8180B,	//0x1bae		VoC_lw16i_set_inc(REG3,0xff8,0x2)
0xDDCCE842,	//0x1bb0		VoC_sw32inc_p(ACC0,REG1,DEFAULT)	|	VoC_loop_i_short(0x2,DEFAULT)
		//0x1bb2		VoC_endloop0
0xDE185DCD,	//0x1bb2		VoC_inc_p(REG3,IN_PARALLEL)	|	VoC_sw32inc_p(ACC1,REG1,DEFAULT)
0xDDDDDDDC,	//0x1bb4		VoC_sw32inc_p(ACC1,REG3,DEFAULT)	|	VoC_sw32inc_p(ACC0,REG3,DEFAULT)
0xDE18DE18,	//0x1bb6		VoC_inc_p(REG3,DEFAULT)	|	VoC_inc_p(REG3,DEFAULT)
0x5DDDDDDC,	//0x1bb8		VoC_sw32inc_p(ACC1,REG3,DEFAULT)	|	VoC_sw32inc_p(ACC0,REG3,DEFAULT)
0x5F06F401,	//0x1bba		VoC_pop32(RL6,DEFAULT)	|	VoC_lw16i_short(FORMAT32,0x0,IN_PARALLEL)
0x6C04DF82,	//0x1bbc		VoC_bez16_d(RDA_MPEG4_DEC_GMC_end,0xcb6)(lo)	|	VoC_pop16(REG2,IN_PARALLEL)
0x2B800CB6,	//0x1bbe		VoC_jal(CS_decoder_mb_decode)(lo)	|	VoC_bez16_d(RDA_MPEG4_DEC_GMC_end,0xcb6)(hi)
0xDFA916DC,	//0x1bc0		VoC_pop16(RA,DEFAULT)	|	VoC_jal(CS_decoder_mb_decode)(hi)
		//0x1bc1		RDA_MPEG4_DEC_GMC_end
0xE580FFC0,	//0x1bc2		VoC_return	|	VoC_NOP
		//0x1bc4		CS_dec_mb_inter4v
0xFFC05FE9,	//0x1bc4		VoC_NAD(IN_PARALLEL)	|	VoC_push16(RA,DEFAULT)
0x0A502B80,	//0x1bc6		VoC_jal(CS_get_pmv2_0)
0x0B2A2B80,	//0x1bc8		VoC_jal(CS_dec_mv)
0x0CAE1401,	//0x1bca		VoC_lw16_d(REG1,0xcae)
0x0FF81808,	//0x1bcc		VoC_lw16i_set_inc(REG0,0xff8,0x2)
0x206C1807,	//0x1bce		VoC_lw16i_set_inc(REG3,0x206c,0x1)
0xFA826087,	//0x1bd0		VoC_shr32_ri(REG45,0x10,IN_PARALLEL)	|	VoC_movreg16(REG7,REG4,DEFAULT)
0xF8E97A83,	//0x1bd2		VoC_shr16_ri(REG1,0xfffffffd,IN_PARALLEL)	|	VoC_shr32_ri(REG67,0x10,DEFAULT)
0x2009C05B,	//0x1bd4		VoC_lw16d_set_inc(REG1,0xcce,0x2)(lo)	|	VoC_add16_rr(REG3,REG1,REG3,DEFAULT)
0x15830CCE,	//0x1bd6		VoC_sw32_d(REG67,0x12e8)(lo)	|	VoC_lw16d_set_inc(REG1,0xcce,0x2)(hi)
0x158212E8,	//0x1bd8		VoC_sw32_d(REG45,0x12ea)(lo)	|	VoC_sw32_d(REG67,0x12e8)(hi)
0xDDC312EA,	//0x1bda		VoC_sw32inc_p(REG67,REG0,DEFAULT)	|	VoC_sw32_d(REG45,0x12ea)(hi)
0xDDCBDDC2,	//0x1bdc		VoC_sw32inc_p(REG67,REG1,DEFAULT)	|	VoC_sw32inc_p(REG45,REG0,DEFAULT)
0xDCB6DDCA,	//0x1bde		VoC_sw16inc_p(REG6,REG3,DEFAULT)	|	VoC_sw32inc_p(REG45,REG1,DEFAULT)
0xDF40DCB4,	//0x1be0		VoC_push32(REG01,DEFAULT)	|	VoC_sw16inc_p(REG4,REG3,DEFAULT)
0xFFC05FC3,	//0x1be2		VoC_NAD(IN_PARALLEL)	|	VoC_push16(REG3,DEFAULT)
0x0A8C2B80,	//0x1be4		VoC_jal(CS_get_pmv2_1)
0x0B2A2B80,	//0x1be6		VoC_jal(CS_dec_mv)
0xDF83DF00,	//0x1be8		VoC_pop16(REG3,DEFAULT)	|	VoC_pop32(REG01,DEFAULT)
0xFA826087,	//0x1bea		VoC_shr32_ri(REG45,0x10,IN_PARALLEL)	|	VoC_movreg16(REG7,REG4,DEFAULT)
0x1582FA83,	//0x1bec		VoC_sw32_d(REG45,0x12ee)(lo)	|	VoC_shr32_ri(REG67,0x10,DEFAULT)
0x158312EE,	//0x1bee		VoC_sw32_d(REG67,0x12ec)(lo)	|	VoC_sw32_d(REG45,0x12ee)(hi)
0xDDC312EC,	//0x1bf0		VoC_sw32inc_p(REG67,REG0,DEFAULT)	|	VoC_sw32_d(REG67,0x12ec)(hi)
0xDDCBDDC2,	//0x1bf2		VoC_sw32inc_p(REG67,REG1,DEFAULT)	|	VoC_sw32inc_p(REG45,REG0,DEFAULT)
0xDCB6DDCA,	//0x1bf4		VoC_sw16inc_p(REG6,REG3,DEFAULT)	|	VoC_sw32inc_p(REG45,REG1,DEFAULT)
0xDF40DCB4,	//0x1bf6		VoC_push32(REG01,DEFAULT)	|	VoC_sw16inc_p(REG4,REG3,DEFAULT)
0xFFC05FC3,	//0x1bf8		VoC_NAD(IN_PARALLEL)	|	VoC_push16(REG3,DEFAULT)
0x0AC22B80,	//0x1bfa		VoC_jal(CS_get_pmv2_2)
0x0B2A2B80,	//0x1bfc		VoC_jal(CS_dec_mv)
0xDF83DF00,	//0x1bfe		VoC_pop16(REG3,DEFAULT)	|	VoC_pop32(REG01,DEFAULT)
0xFA826087,	//0x1c00		VoC_shr32_ri(REG45,0x10,IN_PARALLEL)	|	VoC_movreg16(REG7,REG4,DEFAULT)
0x1582FA83,	//0x1c02		VoC_sw32_d(REG45,0x12f2)(lo)	|	VoC_shr32_ri(REG67,0x10,DEFAULT)
0x158312F2,	//0x1c04		VoC_sw32_d(REG67,0x12f0)(lo)	|	VoC_sw32_d(REG45,0x12f2)(hi)
0xDDC312F0,	//0x1c06		VoC_sw32inc_p(REG67,REG0,DEFAULT)	|	VoC_sw32_d(REG67,0x12f0)(hi)
0xDDCBDDC2,	//0x1c08		VoC_sw32inc_p(REG67,REG1,DEFAULT)	|	VoC_sw32inc_p(REG45,REG0,DEFAULT)
0xDCB6DDCA,	//0x1c0a		VoC_sw16inc_p(REG6,REG3,DEFAULT)	|	VoC_sw32inc_p(REG45,REG1,DEFAULT)
0xDF40DCB4,	//0x1c0c		VoC_push32(REG01,DEFAULT)	|	VoC_sw16inc_p(REG4,REG3,DEFAULT)
0xFFC05FC3,	//0x1c0e		VoC_NAD(IN_PARALLEL)	|	VoC_push16(REG3,DEFAULT)
0x0AE02B80,	//0x1c10		VoC_jal(CS_get_pmv2_3)
0x0B2A2B80,	//0x1c12		VoC_jal(CS_dec_mv)
0xDF83DF00,	//0x1c14		VoC_pop16(REG3,DEFAULT)	|	VoC_pop32(REG01,DEFAULT)
0xFA826087,	//0x1c16		VoC_shr32_ri(REG45,0x10,IN_PARALLEL)	|	VoC_movreg16(REG7,REG4,DEFAULT)
0x1582FA83,	//0x1c18		VoC_sw32_d(REG45,0x12f6)(lo)	|	VoC_shr32_ri(REG67,0x10,DEFAULT)
0x158312F6,	//0x1c1a		VoC_sw32_d(REG67,0x12f4)(lo)	|	VoC_sw32_d(REG45,0x12f6)(hi)
0xDDC312F4,	//0x1c1c		VoC_sw32inc_p(REG67,REG0,DEFAULT)	|	VoC_sw32_d(REG67,0x12f4)(hi)
0xDDCBDDC2,	//0x1c1e		VoC_sw32inc_p(REG67,REG1,DEFAULT)	|	VoC_sw32inc_p(REG45,REG0,DEFAULT)
0xDCB6DDCA,	//0x1c20		VoC_sw16inc_p(REG6,REG3,DEFAULT)	|	VoC_sw32inc_p(REG45,REG1,DEFAULT)
0x6E04DCB4,	//0x1c22		VoC_bnez16_d(CS_dec_mb_inter4v_lowres_1,0x2009)(lo)	|	VoC_sw16inc_p(REG4,REG3,DEFAULT)
0x2B002009,	//0x1c24		VoC_jump_lg(CS_dec_mb_inter4v_lowres_0)(lo)	|	VoC_bnez16_d(CS_dec_mb_inter4v_lowres_1,0x2009)(hi)
0xDFC21E1C,	//0x1c26		VoC_push16(REG2,DEFAULT)	|	VoC_jump_lg(CS_dec_mb_inter4v_lowres_0)(hi)
		//0x1c27		CS_dec_mb_inter4v_lowres_1
0xDF47DF46,	//0x1c28		VoC_push32(RL7,DEFAULT)	|	VoC_push32(RL6,DEFAULT)
0x0CAE1481,	//0x1c2a		VoC_lw32_d(REG23,0xcae)
0x12E81809,	//0x1c2c		VoC_lw16i_set_inc(REG1,0x12e8,0x2)
0xD894FDE9,	//0x1c2e		VoC_lw16inc_p(REG4,REG1,DEFAULT)	|	VoC_shru32_ri(REG23,0xfffffffd,DEFAULT)
0x1581D895,	//0x1c30		VoC_sw32_d(REG23,0xcd8)(lo)	|	VoC_lw16inc_p(REG5,REG1,DEFAULT)
0xFF130CD8,	//0x1c32		VoC_movreg32(REG67,REG45,DEFAULT)	|	VoC_sw32_d(REG23,0xcd8)(hi)
0x200A1501,	//0x1c34		VoC_sw16_d(REG1,0x200a)
0xF8157814,	//0x1c36		VoC_shr16_ri(REG5,0x2,IN_PARALLEL)	|	VoC_shr16_ri(REG4,0x2,DEFAULT)
0xC0EB40A2,	//0x1c38		VoC_add16_rr(REG3,REG3,REG5,IN_PARALLEL)	|	VoC_add16_rr(REG2,REG2,REG4,DEFAULT)
0x0CBE1480,	//0x1c3a		VoC_lw32_d(REG01,0xcbe)
0x7808F024,	//0x1c3c		VoC_shr16_ri(REG0,0x1,DEFAULT)	|	VoC_lw16i_short(REG4,0x1,DEFAULT)
0x4220F809,	//0x1c3e		VoC_sub16_rr(REG0,REG0,REG4,DEFAULT)	|	VoC_shr16_ri(REG1,0x1,IN_PARALLEL)
0x3490C261,	//0x1c40		VoC_bngt16_rr(CS_dec_mb_inter4v_lowres_1_srcx_in_range00,REG2,REG0)(lo)	|	VoC_sub16_rr(REG1,REG1,REG4,IN_PARALLEL)
0xE0021C44,	//0x1c42		VoC_movreg16(REG2,REG0,DEFAULT)	|	VoC_bngt16_rr(CS_dec_mb_inter4v_lowres_1_srcx_in_range00,REG2,REG0)(hi)
		//0x1c44		CS_dec_mb_inter4v_lowres_1_srcx_in_range00
0x1C483499,	//0x1c44		VoC_bngt16_rr(CS_dec_mb_inter4v_lowres_1_srcy_in_range00,REG3,REG1)
0xFFC06023,	//0x1c46		VoC_NAD(IN_PARALLEL)	|	VoC_movreg16(REG3,REG1,DEFAULT)
		//0x1c48		CS_dec_mb_inter4v_lowres_1_srcy_in_range00
0x0CBC1400,	//0x1c48		VoC_lw16_d(REG0,0xcbc)
0xE043CC1A,	//0x1c4a		VoC_movreg16(REG3,REG2,DEFAULT)	|	VoC_multf32_rr(REG45,REG0,REG3,DEFAULT)
0x1606FA81,	//0x1c4c		VoC_and16_ri(REG6,0x3)(lo)	|	VoC_shr32_ri(REG23,0x10,DEFAULT)
0x16070003,	//0x1c4e		VoC_and16_ri(REG7,0x3)(lo)	|	VoC_and16_ri(REG6,0x3)(hi)
0x488A0003,	//0x1c50		VoC_add32_rr(REG45,REG45,REG23,DEFAULT)	|	VoC_and16_ri(REG7,0x3)(hi)
0x0A8AFBFB,	//0x1c52		VoC_lw16i(ACC1_LO,0xcf0)(lo)	|	VoC_shr32_ri(REG67,0xffffffff,IN_PARALLEL)
0x14840CF0,	//0x1c54		VoC_lw32_d(ACC0,0x1a7a)(lo)	|	VoC_lw16i(ACC1_LO,0xcf0)(hi)
0xFBF41A7A,	//0x1c56		VoC_shr32_ri(ACC0,0xfffffffe,DEFAULT)	|	VoC_lw32_d(ACC0,0x1a7a)(hi)
0xFF14C8A2,	//0x1c58		VoC_movreg32(ACC0,REG45,DEFAULT)	|	VoC_add32_rr(REG45,REG45,ACC0,DEFAULT)
0x5E662982,	//0x1c5a		VoC_and32_rd(REG45,0x5e66)
0x1400E08B,	//0x1c5c		VoC_lw16_d(REG0,0xcbc)(lo)	|	VoC_movreg16(ACC1_HI,REG4,DEFAULT)
0x78100CBC,	//0x1c5e		VoC_shr16_ri(REG0,0x2,DEFAULT)	|	VoC_lw16_d(REG0,0xcbc)(hi)
0x0A82E051,	//0x1c60		VoC_lw16i(REG2,0xcbf)(lo)	|	VoC_lw16i_short(REG1,0x5,IN_PARALLEL)
0x70430CBF,	//0x1c62		VoC_lw16i_short(REG3,0x2,DEFAULT)	|	VoC_lw16i(REG2,0xcbf)(hi)
0xFF46F004,	//0x1c64		VoC_lw32z(RL6,DEFAULT)	|	VoC_lw16i_short(INC0,0x1,IN_PARALLEL)
0x10000A8D,	//0x1c66		VoC_lw16i(RL6_HI,0x1000)
0xFFC04218,	//0x1c68		VoC_NAD(IN_PARALLEL)	|	VoC_sub16_rr(REG0,REG0,REG3,DEFAULT)
0x025F2B80,	//0x1c6a		VoC_jal(Coolsand_MPEG4Run2DDmaCmdSend)
0x200C1583,	//0x1c6c		VoC_sw32_d(REG67,0x200c)
0x200E1585,	//0x1c6e		VoC_sw32_d(ACC1,0x200e)
0x0CD81481,	//0x1c70		VoC_lw32_d(REG23,0xcd8)
0x200A1401,	//0x1c72		VoC_lw16_d(REG1,0x200a)
0x5E691411,	//0x1c74		VoC_lw16_d(INC1,0x5e69)
0x5E6A0712,	//0x1c76		VoC_add16_rd(REG2,REG2,0x5e6a)
0xD895D894,	//0x1c78		VoC_lw16inc_p(REG5,REG1,DEFAULT)	|	VoC_lw16inc_p(REG4,REG1,DEFAULT)
0x1501FFC0,	//0x1c7a		VoC_sw16_d(REG1,0x200a)(lo)	|	VoC_NOP
0xFF13200A,	//0x1c7c		VoC_movreg32(REG67,REG45,DEFAULT)	|	VoC_sw16_d(REG1,0x200a)(hi)
0xF8157814,	//0x1c7e		VoC_shr16_ri(REG5,0x2,IN_PARALLEL)	|	VoC_shr16_ri(REG4,0x2,DEFAULT)
0xC0EB40A2,	//0x1c80		VoC_add16_rr(REG3,REG3,REG5,IN_PARALLEL)	|	VoC_add16_rr(REG2,REG2,REG4,DEFAULT)
0x0CBE1480,	//0x1c82		VoC_lw32_d(REG01,0xcbe)
0x7808F024,	//0x1c84		VoC_shr16_ri(REG0,0x1,DEFAULT)	|	VoC_lw16i_short(REG4,0x1,DEFAULT)
0x4220F809,	//0x1c86		VoC_sub16_rr(REG0,REG0,REG4,DEFAULT)	|	VoC_shr16_ri(REG1,0x1,IN_PARALLEL)
0x3490C261,	//0x1c88		VoC_bngt16_rr(CS_dec_mb_inter4v_lowres_1_srcx_in_range01,REG2,REG0)(lo)	|	VoC_sub16_rr(REG1,REG1,REG4,IN_PARALLEL)
0xE0021C8C,	//0x1c8a		VoC_movreg16(REG2,REG0,DEFAULT)	|	VoC_bngt16_rr(CS_dec_mb_inter4v_lowres_1_srcx_in_range01,REG2,REG0)(hi)
		//0x1c8c		CS_dec_mb_inter4v_lowres_1_srcx_in_range01
0x1C903499,	//0x1c8c		VoC_bngt16_rr(CS_dec_mb_inter4v_lowres_1_srcy_in_range01,REG3,REG1)
0xFFC06023,	//0x1c8e		VoC_NAD(IN_PARALLEL)	|	VoC_movreg16(REG3,REG1,DEFAULT)
		//0x1c90		CS_dec_mb_inter4v_lowres_1_srcy_in_range01
0x0CBC1400,	//0x1c90		VoC_lw16_d(REG0,0xcbc)
0x0CF80A8A,	//0x1c92		VoC_lw16i(ACC1_LO,0xcf8)
0xE043CC1A,	//0x1c94		VoC_movreg16(REG3,REG2,DEFAULT)	|	VoC_multf32_rr(REG45,REG0,REG3,DEFAULT)
0x1606FA81,	//0x1c96		VoC_and16_ri(REG6,0x3)(lo)	|	VoC_shr32_ri(REG23,0x10,DEFAULT)
0x16070003,	//0x1c98		VoC_and16_ri(REG7,0x3)(lo)	|	VoC_and16_ri(REG6,0x3)(hi)
0x488A0003,	//0x1c9a		VoC_add32_rr(REG45,REG45,REG23,DEFAULT)	|	VoC_and16_ri(REG7,0x3)(hi)
0x1484FBFB,	//0x1c9c		VoC_lw32_d(ACC0,0x1a7a)(lo)	|	VoC_shr32_ri(REG67,0xffffffff,IN_PARALLEL)
0xFBF41A7A,	//0x1c9e		VoC_shr32_ri(ACC0,0xfffffffe,DEFAULT)	|	VoC_lw32_d(ACC0,0x1a7a)(hi)
0xFF14C8A2,	//0x1ca0		VoC_movreg32(ACC0,REG45,DEFAULT)	|	VoC_add32_rr(REG45,REG45,ACC0,DEFAULT)
0x5E662982,	//0x1ca2		VoC_and32_rd(REG45,0x5e66)
0xFFC0608B,	//0x1ca4		VoC_NAD(IN_PARALLEL)	|	VoC_movreg16(ACC1_HI,REG4,DEFAULT)
0x030C2B80,	//0x1ca6		VoC_jal(Coolsand_MPEG4WaiteLastDma)
0x0CBC1400,	//0x1ca8		VoC_lw16_d(REG0,0xcbc)
0xE0517810,	//0x1caa		VoC_lw16i_short(REG1,0x5,IN_PARALLEL)	|	VoC_shr16_ri(REG0,0x2,DEFAULT)
0x0CD30A82,	//0x1cac		VoC_lw16i(REG2,0xcd3)
0xF0047043,	//0x1cae		VoC_lw16i_short(INC0,0x1,IN_PARALLEL)	|	VoC_lw16i_short(REG3,0x2,DEFAULT)
0x0A8DFF46,	//0x1cb0		VoC_lw16i(RL6_HI,0x1000)(lo)	|	VoC_lw32z(RL6,DEFAULT)
0xC2181000,	//0x1cb2		VoC_sub16_rr(REG0,REG0,REG3,DEFAULT)	|	VoC_lw16i(RL6_HI,0x1000)(hi)
0x025F2B80,	//0x1cb4		VoC_jal(Coolsand_MPEG4Run2DDmaCmdSend)
0xDF45DF43,	//0x1cb6		VoC_push32(ACC1,DEFAULT)	|	VoC_push32(REG67,DEFAULT)
0x200C1483,	//0x1cb8		VoC_lw32_d(REG67,0x200c)
0x200E1485,	//0x1cba		VoC_lw32_d(ACC1,0x200e)
0x7FD80AC8,	//0x1cbc		VoC_lw16i(ACC0_LO,0xffffffd8)
0x0C9D2B80,	//0x1cbe		VoC_jal(CS_put_h264_chroma_mc4_8_c)
0x0CD81481,	//0x1cc0		VoC_lw32_d(REG23,0xcd8)
0x5E691411,	//0x1cc2		VoC_lw16_d(INC1,0x5e69)
0x200A1401,	//0x1cc4		VoC_lw16_d(REG1,0x200a)
0x5E6A071B,	//0x1cc6		VoC_add16_rd(REG3,REG3,0x5e6a)
0xD895D894,	//0x1cc8		VoC_lw16inc_p(REG5,REG1,DEFAULT)	|	VoC_lw16inc_p(REG4,REG1,DEFAULT)
0x1501FFC0,	//0x1cca		VoC_sw16_d(REG1,0x200a)(lo)	|	VoC_NOP
0xFF13200A,	//0x1ccc		VoC_movreg32(REG67,REG45,DEFAULT)	|	VoC_sw16_d(REG1,0x200a)(hi)
0xF8157814,	//0x1cce		VoC_shr16_ri(REG5,0x2,IN_PARALLEL)	|	VoC_shr16_ri(REG4,0x2,DEFAULT)
0xC0EB40A2,	//0x1cd0		VoC_add16_rr(REG3,REG3,REG5,IN_PARALLEL)	|	VoC_add16_rr(REG2,REG2,REG4,DEFAULT)
0x0CBE1480,	//0x1cd2		VoC_lw32_d(REG01,0xcbe)
0x7808F024,	//0x1cd4		VoC_shr16_ri(REG0,0x1,DEFAULT)	|	VoC_lw16i_short(REG4,0x1,DEFAULT)
0x4220F809,	//0x1cd6		VoC_sub16_rr(REG0,REG0,REG4,DEFAULT)	|	VoC_shr16_ri(REG1,0x1,IN_PARALLEL)
0x3490C261,	//0x1cd8		VoC_bngt16_rr(CS_dec_mb_inter4v_lowres_1_srcx_in_range10,REG2,REG0)(lo)	|	VoC_sub16_rr(REG1,REG1,REG4,IN_PARALLEL)
0xE0021CDC,	//0x1cda		VoC_movreg16(REG2,REG0,DEFAULT)	|	VoC_bngt16_rr(CS_dec_mb_inter4v_lowres_1_srcx_in_range10,REG2,REG0)(hi)
		//0x1cdc		CS_dec_mb_inter4v_lowres_1_srcx_in_range10
0x1CE03499,	//0x1cdc		VoC_bngt16_rr(CS_dec_mb_inter4v_lowres_1_srcy_in_range10,REG3,REG1)
0xFFC06023,	//0x1cde		VoC_NAD(IN_PARALLEL)	|	VoC_movreg16(REG3,REG1,DEFAULT)
		//0x1ce0		CS_dec_mb_inter4v_lowres_1_srcy_in_range10
0x0CBC1400,	//0x1ce0		VoC_lw16_d(REG0,0xcbc)
0x0D000A8A,	//0x1ce2		VoC_lw16i(ACC1_LO,0xd00)
0xE043CC1A,	//0x1ce4		VoC_movreg16(REG3,REG2,DEFAULT)	|	VoC_multf32_rr(REG45,REG0,REG3,DEFAULT)
0x1606FA81,	//0x1ce6		VoC_and16_ri(REG6,0x3)(lo)	|	VoC_shr32_ri(REG23,0x10,DEFAULT)
0x16070003,	//0x1ce8		VoC_and16_ri(REG7,0x3)(lo)	|	VoC_and16_ri(REG6,0x3)(hi)
0x488A0003,	//0x1cea		VoC_add32_rr(REG45,REG45,REG23,DEFAULT)	|	VoC_and16_ri(REG7,0x3)(hi)
0x1484FBFB,	//0x1cec		VoC_lw32_d(ACC0,0x1a7a)(lo)	|	VoC_shr32_ri(REG67,0xffffffff,IN_PARALLEL)
0xFBF41A7A,	//0x1cee		VoC_shr32_ri(ACC0,0xfffffffe,DEFAULT)	|	VoC_lw32_d(ACC0,0x1a7a)(hi)
0xFF14C8A2,	//0x1cf0		VoC_movreg32(ACC0,REG45,DEFAULT)	|	VoC_add32_rr(REG45,REG45,ACC0,DEFAULT)
0x5E662982,	//0x1cf2		VoC_and32_rd(REG45,0x5e66)
0xFFC0608B,	//0x1cf4		VoC_NAD(IN_PARALLEL)	|	VoC_movreg16(ACC1_HI,REG4,DEFAULT)
0x030C2B80,	//0x1cf6		VoC_jal(Coolsand_MPEG4WaiteLastDma)
0x0CBC1400,	//0x1cf8		VoC_lw16_d(REG0,0xcbc)
0xE0517810,	//0x1cfa		VoC_lw16i_short(REG1,0x5,IN_PARALLEL)	|	VoC_shr16_ri(REG0,0x2,DEFAULT)
0x0CE70A82,	//0x1cfc		VoC_lw16i(REG2,0xce7)
0xF0047043,	//0x1cfe		VoC_lw16i_short(INC0,0x1,IN_PARALLEL)	|	VoC_lw16i_short(REG3,0x2,DEFAULT)
0x0A8DFF46,	//0x1d00		VoC_lw16i(RL6_HI,0x1000)(lo)	|	VoC_lw32z(RL6,DEFAULT)
0xC2181000,	//0x1d02		VoC_sub16_rr(REG0,REG0,REG3,DEFAULT)	|	VoC_lw16i(RL6_HI,0x1000)(hi)
0x025F2B80,	//0x1d04		VoC_jal(Coolsand_MPEG4Run2DDmaCmdSend)
0x200C1583,	//0x1d06		VoC_sw32_d(REG67,0x200c)
0x200E1585,	//0x1d08		VoC_sw32_d(ACC1,0x200e)
0xDF03DF05,	//0x1d0a		VoC_pop32(REG67,DEFAULT)	|	VoC_pop32(ACC1,DEFAULT)
0x00000A88,	//0x1d0c		VoC_lw16i(ACC0_LO,0x0)
0x0C9D2B80,	//0x1d0e		VoC_jal(CS_put_h264_chroma_mc4_8_c)
0x0CD81481,	//0x1d10		VoC_lw32_d(REG23,0xcd8)
0x200A1401,	//0x1d12		VoC_lw16_d(REG1,0x200a)
0x5E691411,	//0x1d14		VoC_lw16_d(INC1,0x5e69)
0x5E6A0712,	//0x1d16		VoC_add16_rd(REG2,REG2,0x5e6a)
0x5E6A071B,	//0x1d18		VoC_add16_rd(REG3,REG3,0x5e6a)
0xD895D894,	//0x1d1a		VoC_lw16inc_p(REG5,REG1,DEFAULT)	|	VoC_lw16inc_p(REG4,REG1,DEFAULT)
0x7814FF13,	//0x1d1c		VoC_shr16_ri(REG4,0x2,DEFAULT)	|	VoC_movreg32(REG67,REG45,DEFAULT)
0x40A2F815,	//0x1d1e		VoC_add16_rr(REG2,REG2,REG4,DEFAULT)	|	VoC_shr16_ri(REG5,0x2,IN_PARALLEL)
0x1480C0EB,	//0x1d20		VoC_lw32_d(REG01,0xcbe)(lo)	|	VoC_add16_rr(REG3,REG3,REG5,IN_PARALLEL)
0xF0240CBE,	//0x1d22		VoC_lw16i_short(REG4,0x1,DEFAULT)	|	VoC_lw32_d(REG01,0xcbe)(hi)
0xF8097808,	//0x1d24		VoC_shr16_ri(REG1,0x1,IN_PARALLEL)	|	VoC_shr16_ri(REG0,0x1,DEFAULT)
0xC2614220,	//0x1d26		VoC_sub16_rr(REG1,REG1,REG4,IN_PARALLEL)	|	VoC_sub16_rr(REG0,REG0,REG4,DEFAULT)
0x1D2C3490,	//0x1d28		VoC_bngt16_rr(CS_dec_mb_inter4v_lowres_1_srcx_in_range11,REG2,REG0)
0xFFC06002,	//0x1d2a		VoC_NAD(IN_PARALLEL)	|	VoC_movreg16(REG2,REG0,DEFAULT)
		//0x1d2c		CS_dec_mb_inter4v_lowres_1_srcx_in_range11
0x1D303499,	//0x1d2c		VoC_bngt16_rr(CS_dec_mb_inter4v_lowres_1_srcy_in_range11,REG3,REG1)
0xFFC06023,	//0x1d2e		VoC_NAD(IN_PARALLEL)	|	VoC_movreg16(REG3,REG1,DEFAULT)
		//0x1d30		CS_dec_mb_inter4v_lowres_1_srcy_in_range11
0x0CBC1400,	//0x1d30		VoC_lw16_d(REG0,0xcbc)
0x0D080A8A,	//0x1d32		VoC_lw16i(ACC1_LO,0xd08)
0xE043CC1A,	//0x1d34		VoC_movreg16(REG3,REG2,DEFAULT)	|	VoC_multf32_rr(REG45,REG0,REG3,DEFAULT)
0x1606FA81,	//0x1d36		VoC_and16_ri(REG6,0x3)(lo)	|	VoC_shr32_ri(REG23,0x10,DEFAULT)
0x16070003,	//0x1d38		VoC_and16_ri(REG7,0x3)(lo)	|	VoC_and16_ri(REG6,0x3)(hi)
0x488A0003,	//0x1d3a		VoC_add32_rr(REG45,REG45,REG23,DEFAULT)	|	VoC_and16_ri(REG7,0x3)(hi)
0x1484FBFB,	//0x1d3c		VoC_lw32_d(ACC0,0x1a7a)(lo)	|	VoC_shr32_ri(REG67,0xffffffff,IN_PARALLEL)
0xFBF41A7A,	//0x1d3e		VoC_shr32_ri(ACC0,0xfffffffe,DEFAULT)	|	VoC_lw32_d(ACC0,0x1a7a)(hi)
0xFF14C8A2,	//0x1d40		VoC_movreg32(ACC0,REG45,DEFAULT)	|	VoC_add32_rr(REG45,REG45,ACC0,DEFAULT)
0x5E662982,	//0x1d42		VoC_and32_rd(REG45,0x5e66)
0xFFC0608B,	//0x1d44		VoC_NAD(IN_PARALLEL)	|	VoC_movreg16(ACC1_HI,REG4,DEFAULT)
0x030C2B80,	//0x1d46		VoC_jal(Coolsand_MPEG4WaiteLastDma)
0x0CBC1400,	//0x1d48		VoC_lw16_d(REG0,0xcbc)
0xE0517810,	//0x1d4a		VoC_lw16i_short(REG1,0x5,IN_PARALLEL)	|	VoC_shr16_ri(REG0,0x2,DEFAULT)
0x0CFB0A82,	//0x1d4c		VoC_lw16i(REG2,0xcfb)
0xF0047043,	//0x1d4e		VoC_lw16i_short(INC0,0x1,IN_PARALLEL)	|	VoC_lw16i_short(REG3,0x2,DEFAULT)
0x0A8DFF46,	//0x1d50		VoC_lw16i(RL6_HI,0x1000)(lo)	|	VoC_lw32z(RL6,DEFAULT)
0xC2181000,	//0x1d52		VoC_sub16_rr(REG0,REG0,REG3,DEFAULT)	|	VoC_lw16i(RL6_HI,0x1000)(hi)
0x025F2B80,	//0x1d54		VoC_jal(Coolsand_MPEG4Run2DDmaCmdSend)
0xDF45DF43,	//0x1d56		VoC_push32(ACC1,DEFAULT)	|	VoC_push32(REG67,DEFAULT)
0x200C1483,	//0x1d58		VoC_lw32_d(REG67,0x200c)
0x200E1485,	//0x1d5a		VoC_lw32_d(ACC1,0x200e)
0x00280A88,	//0x1d5c		VoC_lw16i(ACC0_LO,0x28)
0x0C9D2B80,	//0x1d5e		VoC_jal(CS_put_h264_chroma_mc4_8_c)
0x12E81809,	//0x1d60		VoC_lw16i_set_inc(REG1,0x12e8,0x2)
0x5E711402,	//0x1d62		VoC_lw16_d(REG2,0x5e71)
0xD895D894,	//0x1d64		VoC_lw16inc_p(REG5,REG1,DEFAULT)	|	VoC_lw16inc_p(REG4,REG1,DEFAULT)
0xD897D896,	//0x1d66		VoC_lw16inc_p(REG7,REG1,DEFAULT)	|	VoC_lw16inc_p(REG6,REG1,DEFAULT)
0x417DC134,	//0x1d68		VoC_add16_rr(REG5,REG5,REG7,DEFAULT)	|	VoC_add16_rr(REG4,REG4,REG6,DEFAULT)
0xD897D896,	//0x1d6a		VoC_lw16inc_p(REG7,REG1,DEFAULT)	|	VoC_lw16inc_p(REG6,REG1,IN_PARALLEL)
0x417DC134,	//0x1d6c		VoC_add16_rr(REG5,REG5,REG7,DEFAULT)	|	VoC_add16_rr(REG4,REG4,REG6,DEFAULT)
0xD897D896,	//0x1d6e		VoC_lw16inc_p(REG7,REG1,DEFAULT)	|	VoC_lw16inc_p(REG6,REG1,IN_PARALLEL)
0xC17DC134,	//0x1d70		VoC_add16_rr(REG5,REG5,REG7,DEFAULT)	|	VoC_add16_rr(REG4,REG4,REG6,DEFAULT)
0xF6437F13,	//0x1d72		VoC_movreg16(REG3,REG2,IN_PARALLEL)	|	VoC_movreg32(REG67,REG45,DEFAULT)
0x5E702806,	//0x1d74		VoC_and16_rd(REG6,0x5e70)
0x5E702807,	//0x1d76		VoC_and16_rd(REG7,0x5e70)
0xF81C7E72,	//0x1d78		VoC_shr16_ri(REG4,0x3,IN_PARALLEL)	|	VoC_shru16_rr(REG2,REG6,DEFAULT)
0x5E682802,	//0x1d7a		VoC_and16_rd(REG2,0x5e68)
0xF81D7E7B,	//0x1d7c		VoC_shr16_ri(REG5,0x3,IN_PARALLEL)	|	VoC_shru16_rr(REG3,REG7,DEFAULT)
0x5E682803,	//0x1d7e		VoC_and16_rd(REG3,0x5e68)
0xC0ED40A4,	//0x1d80		VoC_add16_rr(REG5,REG3,REG5,IN_PARALLEL)	|	VoC_add16_rr(REG4,REG2,REG4,DEFAULT)
0x0CAE1481,	//0x1d82		VoC_lw32_d(REG23,0xcae)
0x79F2FF13,	//0x1d84		VoC_shru16_ri(REG2,0xfffffffe,DEFAULT)	|	VoC_movreg32(REG67,REG45,DEFAULT)
0x1480F9F3,	//0x1d86		VoC_lw32_d(REG01,0xcbe)(lo)	|	VoC_shru16_ri(REG3,0xfffffffe,IN_PARALLEL)
0x78140CBE,	//0x1d88		VoC_shr16_ri(REG4,0x2,DEFAULT)	|	VoC_lw32_d(REG01,0xcbe)(hi)
0x7810F815,	//0x1d8a		VoC_shr16_ri(REG0,0x2,DEFAULT)	|	VoC_shr16_ri(REG5,0x2,IN_PARALLEL)
0x40A2F811,	//0x1d8c		VoC_add16_rr(REG2,REG2,REG4,DEFAULT)	|	VoC_shr16_ri(REG1,0x2,IN_PARALLEL)
0x0780C0EB,	//0x1d8e		VoC_sub16_rd(REG0,REG0,0x5e68)(lo)	|	VoC_add16_rr(REG3,REG3,REG5,IN_PARALLEL)
0x07895E68,	//0x1d90		VoC_sub16_rd(REG1,REG1,0x5e68)(lo)	|	VoC_sub16_rd(REG0,REG0,0x5e68)(hi)
0x34905E68,	//0x1d92		VoC_bngt16_rr(CS_dec_mb_inter4v_lowres_1_uvsrcx_in_range,REG2,REG0)(lo)	|	VoC_sub16_rd(REG1,REG1,0x5e68)(hi)
0xE0021D96,	//0x1d94		VoC_movreg16(REG2,REG0,DEFAULT)	|	VoC_bngt16_rr(CS_dec_mb_inter4v_lowres_1_uvsrcx_in_range,REG2,REG0)(hi)
		//0x1d96		CS_dec_mb_inter4v_lowres_1_uvsrcx_in_range
0x1D9A3499,	//0x1d96		VoC_bngt16_rr(CS_dec_mb_inter4v_lowres_1_uvsrcy_in_range,REG3,REG1)
0xFFC06023,	//0x1d98		VoC_NAD(IN_PARALLEL)	|	VoC_movreg16(REG3,REG1,DEFAULT)
		//0x1d9a		CS_dec_mb_inter4v_lowres_1_uvsrcy_in_range
0x0CBC1400,	//0x1d9a		VoC_lw16_d(REG0,0xcbc)
0x0D100A8A,	//0x1d9c		VoC_lw16i(ACC1_LO,0xd10)
0xCC1AF808,	//0x1d9e		VoC_multf32_rr(REG45,REG0,REG3,DEFAULT)	|	VoC_shr16_ri(REG0,0x1,DEFAULT)
0xFA81E043,	//0x1da0		VoC_shr32_ri(REG23,0x10,DEFAULT)	|	VoC_movreg16(REG3,REG2,DEFAULT)
0x00031606,	//0x1da2		VoC_and16_ri(REG6,0x3)
0x00031607,	//0x1da4		VoC_and16_ri(REG7,0x3)
0xFBFBC88A,	//0x1da6		VoC_shr32_ri(REG67,0xffffffff,DEFAULT)	|	VoC_add32_rr(REG45,REG45,REG23,DEFAULT)
0x0CD41582,	//0x1da8		VoC_sw32_d(REG45,0xcd4)
0x1A7C1484,	//0x1daa		VoC_lw32_d(ACC0,0x1a7c)
0xC8A2FBF4,	//0x1dac		VoC_add32_rr(REG45,REG45,ACC0,DEFAULT)	|	VoC_shr32_ri(ACC0,0xfffffffe,DEFAULT)
0x2982FF14,	//0x1dae		VoC_and32_rd(REG45,0x5e66)(lo)	|	VoC_movreg32(ACC0,REG45,DEFAULT)
0xE08B5E66,	//0x1db0		VoC_movreg16(ACC1_HI,REG4,DEFAULT)	|	VoC_and32_rd(REG45,0x5e66)(hi)
0x030C2B80,	//0x1db2		VoC_jal(Coolsand_MPEG4WaiteLastDma)
0x0CBC1400,	//0x1db4		VoC_lw16_d(REG0,0xcbc)
0xE0517818,	//0x1db6		VoC_lw16i_short(REG1,0x5,IN_PARALLEL)	|	VoC_shr16_ri(REG0,0x3,DEFAULT)
0x0D0F0A82,	//0x1db8		VoC_lw16i(REG2,0xd0f)
0xF0047043,	//0x1dba		VoC_lw16i_short(INC0,0x1,IN_PARALLEL)	|	VoC_lw16i_short(REG3,0x2,DEFAULT)
0x0A8DFF46,	//0x1dbc		VoC_lw16i(RL6_HI,0x1000)(lo)	|	VoC_lw32z(RL6,DEFAULT)
0xC2181000,	//0x1dbe		VoC_sub16_rr(REG0,REG0,REG3,DEFAULT)	|	VoC_lw16i(RL6_HI,0x1000)(hi)
0x025F2B80,	//0x1dc0		VoC_jal(Coolsand_MPEG4Run2DDmaCmdSend)
0x200C1583,	//0x1dc2		VoC_sw32_d(REG67,0x200c)
0x200E1585,	//0x1dc4		VoC_sw32_d(ACC1,0x200e)
0xDF03DF05,	//0x1dc6		VoC_pop32(REG67,DEFAULT)	|	VoC_pop32(ACC1,DEFAULT)
0x00500A88,	//0x1dc8		VoC_lw16i(ACC0_LO,0x50)
0x0C9D2B80,	//0x1dca		VoC_jal(CS_put_h264_chroma_mc4_8_c)
0xFFC0DE80,	//0x1dcc		VoC_NOP	|	VoC_cfg(0x0)
0x00081794,	//0x1dce		VoC_cfg_lg(0x8,)
0x0CB66E04,	//0x1dd0		VoC_bnez16_d(CS_dec_mb_inter4v_lowres_1_not_dma_now0,0xcb6)
0x026B2B80,	//0x1dd2		VoC_jal(Coolsand_MPEG4YDmaCmdSend)
		//0x1dd4		CS_dec_mb_inter4v_lowres_1_not_dma_now0
0x0CD41482,	//0x1dd4		VoC_lw32_d(REG45,0xcd4)
0x0D180A8A,	//0x1dd6		VoC_lw16i(ACC1_LO,0xd18)
0x1A7E1484,	//0x1dd8		VoC_lw32_d(ACC0,0x1a7e)
0xC8A2FBF4,	//0x1dda		VoC_add32_rr(REG45,REG45,ACC0,DEFAULT)	|	VoC_shr32_ri(ACC0,0xfffffffe,DEFAULT)
0x150AFF14,	//0x1ddc		VoC_sw16_d(ACC1_LO,0x200a)(lo)	|	VoC_movreg32(ACC0,REG45,DEFAULT)
0x6E05200A,	//0x1dde		VoC_bnez16_d(CS_dec_mb_inter4v_lowres_1_not_dma_now00,0xcb6)(lo)	|	VoC_sw16_d(ACC1_LO,0x200a)(hi)
0xFFC00CB6,	//0x1de0		VoC_NAD	|	VoC_bnez16_d(CS_dec_mb_inter4v_lowres_1_not_dma_now00,0xcb6)(hi)
0x030C2B80,	//0x1de2		VoC_jal(Coolsand_MPEG4WaiteLastDma)
		//0x1de4		CS_dec_mb_inter4v_lowres_1_not_dma_now00
0x0CBC1400,	//0x1de4		VoC_lw16_d(REG0,0xcbc)
0xE0517818,	//0x1de6		VoC_lw16i_short(REG1,0x5,IN_PARALLEL)	|	VoC_shr16_ri(REG0,0x3,DEFAULT)
0x0D230A82,	//0x1de8		VoC_lw16i(REG2,0xd23)
0xF0047043,	//0x1dea		VoC_lw16i_short(INC0,0x1,IN_PARALLEL)	|	VoC_lw16i_short(REG3,0x2,DEFAULT)
0x0A8DFF46,	//0x1dec		VoC_lw16i(RL6_HI,0x1000)(lo)	|	VoC_lw32z(RL6,DEFAULT)
0xC2181000,	//0x1dee		VoC_sub16_rr(REG0,REG0,REG3,DEFAULT)	|	VoC_lw16i(RL6_HI,0x1000)(hi)
0x025F2B80,	//0x1df0		VoC_jal(Coolsand_MPEG4Run2DDmaCmdSend)
0x200C1483,	//0x1df2		VoC_lw32_d(REG67,0x200c)
0x200E1485,	//0x1df4		VoC_lw32_d(ACC1,0x200e)
0x00780A88,	//0x1df6		VoC_lw16i(ACC0_LO,0x78)
0x0C9D2B80,	//0x1df8		VoC_jal(CS_put_h264_chroma_mc4_8_c)
0x030C2B80,	//0x1dfa		VoC_jal(Coolsand_MPEG4WaiteLastDma)
0x0CB66E04,	//0x1dfc		VoC_bnez16_d(CS_dec_mb_inter4v_lowres_1_not_dma_now1,0xcb6)
0x02BE2B80,	//0x1dfe		VoC_jal(Coolsand_MPEG4UDmaCmdSend)
		//0x1e00		CS_dec_mb_inter4v_lowres_1_not_dma_now1
0x200C1483,	//0x1e00		VoC_lw32_d(REG67,0x200c)
0x200E1485,	//0x1e02		VoC_lw32_d(ACC1,0x200e)
0x00A00A88,	//0x1e04		VoC_lw16i(ACC0_LO,0xa0)
0x200A140A,	//0x1e06		VoC_lw16_d(ACC1_LO,0x200a)
0x0C9D2B80,	//0x1e08		VoC_jal(CS_put_h264_chroma_mc4_8_c)
0x0CB66E06,	//0x1e0a		VoC_bnez16_d(CS_dec_mb_inter4v_lowres_1_not_dma_now10,0xcb6)
0x030C2B80,	//0x1e0c		VoC_jal(Coolsand_MPEG4WaiteLastDma)
0x02E52B80,	//0x1e0e		VoC_jal(Coolsand_MPEG4VDmaCmdSend)
		//0x1e10		CS_dec_mb_inter4v_lowres_1_not_dma_now10
0x5F06DF07,	//0x1e10		VoC_pop32(RL6,DEFAULT)	|	VoC_pop32(RL7,DEFAULT)
0x6E05DF82,	//0x1e12		VoC_bnez16_d(CS_dec_mb_inter4v_lowres_1_cbp_1,0xcb6)(lo)	|	VoC_pop16(REG2,IN_PARALLEL)
0x2B000CB6,	//0x1e14		VoC_jump_lg(CS_dec_mb_inter4v07)(lo)	|	VoC_bnez16_d(CS_dec_mb_inter4v_lowres_1_cbp_1,0xcb6)(hi)
0xFFC01F76,	//0x1e16		VoC_NAD	|	VoC_jump_lg(CS_dec_mb_inter4v07)(hi)
		//0x1e18		CS_dec_mb_inter4v_lowres_1_cbp_1
0x16DC2B80,	//0x1e18		VoC_jal(CS_decoder_mb_decode)
0x1F762B00,	//0x1e1a		VoC_jump_lg(CS_dec_mb_inter4v07)
		//0x1e1c		CS_dec_mb_inter4v_lowres_0
0x0CAE1482,	//0x1e1c		VoC_lw32_d(REG45,0xcae)
0xF8E578E4,	//0x1e1e		VoC_shr16_ri(REG5,0xfffffffc,IN_PARALLEL)	|	VoC_shr16_ri(REG4,0xfffffffc,DEFAULT)
0x0CBC0A2B,	//0x1e20		VoC_multf32_rd(REG67,REG5,0xcbc)
0xF6A37005,	//0x1e22		VoC_movreg16(REG3,REG5,IN_PARALLEL)	|	VoC_lw16i_short(REG5,0x0,DEFAULT)
0xC8D0C8D3,	//0x1e24		VoC_add32_rr(REG01,REG67,REG45,DEFAULT)	|	VoC_add32_rr(REG67,REG67,REG45,DEFAULT)
0x1583FA10,	//0x1e26		VoC_sw32_d(REG67,0xcd4)(lo)	|	VoC_shr32_ri(REG01,0x2,DEFAULT)
0x15800CD4,	//0x1e28		VoC_sw32_d(REG01,0xcd6)(lo)	|	VoC_sw32_d(REG67,0xcd4)(hi)
0x72030CD6,	//0x1e2a		VoC_lw16i_short(REG3,0x10,DEFAULT)	|	VoC_sw32_d(REG01,0xcd6)(hi)
0x40E6F665,	//0x1e2c		VoC_add16_rr(REG6,REG3,REG4,DEFAULT)	|	VoC_movreg16(REG5,REG3,IN_PARALLEL)
0xF7E3C0E8,	//0x1e2e		VoC_lw16i_short(REG3,0xffffffff,DEFAULT)	|	VoC_add16_rr(REG0,REG3,REG5,IN_PARALLEL)
0x2032079B,	//0x1e30		VoC_sub16_rd(REG3,REG3,0x2032)
0xFE187E1E,	//0x1e32		VoC_shr16_rr(REG0,REG3,IN_PARALLEL)	|	VoC_shr16_rr(REG6,REG3,DEFAULT)
0x0CBE0B27,	//0x1e34		VoC_sub16_dr(REG7,0xcbe,REG4)
0x0CBF0B29,	//0x1e36		VoC_sub16_dr(REG1,0xcbf,REG5)
0xFE197E1F,	//0x1e38		VoC_shr16_rr(REG1,REG3,IN_PARALLEL)	|	VoC_shr16_rr(REG7,REG3,DEFAULT)
0x0CD81804,	//0x1e3a		VoC_lw16i_set_inc(REG0,0xcd8,0x1)
0x0CE41580,	//0x1e3c		VoC_sw32_d(REG01,0xce4)
0x12E81809,	//0x1e3e		VoC_lw16i_set_inc(REG1,0x12e8,0x2)
0x0CE21583,	//0x1e40		VoC_sw32_d(REG67,0xce2)
0xE89BFFC0,	//0x1e42		VoC_loop_i_short(0x4,DEFAULT)	|	VoC_NAD
0x0CE21807,	//0x1e44		VoC_lw16i_set_inc(REG3,0xce2,0x1)
0x839FD896,	//0x1e46		VoC_add16inc_rp(REG7,REG6,REG3,DEFAULT)	|	VoC_lw16inc_p(REG6,REG1,DEFAULT)
0x1E4B3247,	//0x1e48		VoC_bnltz16_r(CS_dec_mb_inter4v100,REG7)
0x859EC3BE,	//0x1e4a		VoC_sub16_rp(REG6,REG6,REG3,DEFAULT)	|	VoC_sub16_rr(REG6,REG6,REG7,DEFAULT)
		//0x1e4b		CS_dec_mb_inter4v100
0x3246D8B7,	//0x1e4c		VoC_bnltz16_r(CS_dec_mb_inter4v101,REG6)(lo)	|	VoC_lw16inc_p(REG7,REG3,DEFAULT)
0xC1F71E50,	//0x1e4e		VoC_add16_rr(REG7,REG7,REG6,DEFAULT)	|	VoC_bnltz16_r(CS_dec_mb_inter4v101,REG6)(hi)
		//0x1e50		CS_dec_mb_inter4v101
0x0CE41807,	//0x1e50		VoC_lw16i_set_inc(REG3,0xce4,0x1)
0xD896DC87,	//0x1e52		VoC_lw16inc_p(REG6,REG1,DEFAULT)	|	VoC_sw16inc_p(REG7,REG0,DEFAULT)
0x3247839F,	//0x1e54		VoC_bnltz16_r(CS_dec_mb_inter4v102,REG7)(lo)	|	VoC_add16inc_rp(REG7,REG6,REG3,DEFAULT)
0xC3BE1E58,	//0x1e56		VoC_sub16_rr(REG6,REG6,REG7,DEFAULT)	|	VoC_bnltz16_r(CS_dec_mb_inter4v102,REG7)(hi)
		//0x1e58		CS_dec_mb_inter4v102
0xD8B7859E,	//0x1e58		VoC_lw16inc_p(REG7,REG3,DEFAULT)	|	VoC_sub16_rp(REG6,REG6,REG3,DEFAULT)
0x1E5D3246,	//0x1e5a		VoC_bnltz16_r(CS_dec_mb_inter4v103,REG6)
0xFFC0C1F7,	//0x1e5c		VoC_NOP	|	VoC_add16_rr(REG7,REG7,REG6,DEFAULT)
		//0x1e5d		CS_dec_mb_inter4v103
		//0x1e5e		VoC_endloop0
0x1805DC87,	//0x1e5e		VoC_lw16i_set_inc(REG1,0xcd8,0x1)(lo)	|	VoC_sw16inc_p(REG7,REG0,DEFAULT)
0x6E0C0CD8,	//0x1e60		VoC_bnez16_d(CS_dec_mb_inter4v_quarterpel_1_dxdy,0x2032)(lo)	|	VoC_lw16i_set_inc(REG1,0xcd8,0x1)(hi)
0xD8962032,	//0x1e62		VoC_lw16inc_p(REG6,REG1,DEFAULT)	|	VoC_bnez16_d(CS_dec_mb_inter4v_quarterpel_1_dxdy,0x2032)(hi)
0x838ED897,	//0x1e64		VoC_add16inc_rp(REG6,REG6,REG1,DEFAULT)	|	VoC_lw16inc_p(REG7,REG1,DEFAULT)
0x838E83CF,	//0x1e66		VoC_add16inc_rp(REG6,REG6,REG1,DEFAULT)	|	VoC_add16inc_rp(REG7,REG7,REG1,DEFAULT)
0x838E83CF,	//0x1e68		VoC_add16inc_rp(REG6,REG6,REG1,DEFAULT)	|	VoC_add16inc_rp(REG7,REG7,REG1,DEFAULT)
0x2B0083CF,	//0x1e6a		VoC_jump_lg(CS_dec_mb_inter4v_quarterpel_dx_dy_end)(lo)	|	VoC_add16inc_rp(REG7,REG7,REG1,DEFAULT)
0xD8961EA4,	//0x1e6c		VoC_lw16inc_p(REG6,REG1,DEFAULT)	|	VoC_jump_lg(CS_dec_mb_inter4v_quarterpel_dx_dy_end)(hi)
		//0x1e6d		CS_dec_mb_inter4v_quarterpel_1_dxdy
0xD894D897,	//0x1e6e		VoC_lw16inc_p(REG4,REG1,DEFAULT)	|	VoC_lw16inc_p(REG7,REG1,DEFAULT)
0x3106D895,	//0x1e70		VoC_bgtz16_r(CS_dec_mb_inter4v_compensation_x0,REG6)(lo)	|	VoC_lw16inc_p(REG5,REG1,DEFAULT)
0x07361E76,	//0x1e72		VoC_add16_rd(REG6,REG6,0x2032)(lo)	|	VoC_bgtz16_r(CS_dec_mb_inter4v_compensation_x0,REG6)(hi)
0xFFC02032,	//0x1e74		VoC_NAD	|	VoC_add16_rd(REG6,REG6,0x2032)(hi)
		//0x1e76		CS_dec_mb_inter4v_compensation_x0
0x1E7A3107,	//0x1e76		VoC_bgtz16_r(CS_dec_mb_inter4v_compensation_y0,REG7)
0x2032073F,	//0x1e78		VoC_add16_rd(REG7,REG7,0x2032)
		//0x1e7a		CS_dec_mb_inter4v_compensation_y0
0x1E7E3104,	//0x1e7a		VoC_bgtz16_r(CS_dec_mb_inter4v_compensation_x1,REG4)
0x20320724,	//0x1e7c		VoC_add16_rd(REG4,REG4,0x2032)
		//0x1e7e		CS_dec_mb_inter4v_compensation_x1
0x1E823105,	//0x1e7e		VoC_bgtz16_r(CS_dec_mb_inter4v_compensation_y1,REG5)
0x2032072D,	//0x1e80		VoC_add16_rd(REG5,REG5,0x2032)
		//0x1e82		CS_dec_mb_inter4v_compensation_y1
0xF80F780E,	//0x1e82		VoC_shr16_ri(REG7,0x1,IN_PARALLEL)	|	VoC_shr16_ri(REG6,0x1,DEFAULT)
0xF80D780C,	//0x1e84		VoC_shr16_ri(REG5,0x1,IN_PARALLEL)	|	VoC_shr16_ri(REG4,0x1,DEFAULT)
0xC1EF41A6,	//0x1e86		VoC_add16_rr(REG7,REG7,REG5,IN_PARALLEL)	|	VoC_add16_rr(REG6,REG6,REG4,DEFAULT)
0xD895D894,	//0x1e88		VoC_lw16inc_p(REG5,REG1,DEFAULT)	|	VoC_lw16inc_p(REG4,REG1,DEFAULT)
0x1E8E3104,	//0x1e8a		VoC_bgtz16_r(CS_dec_mb_inter4v_compensation_x2,REG4)
0x20320724,	//0x1e8c		VoC_add16_rd(REG4,REG4,0x2032)
		//0x1e8e		CS_dec_mb_inter4v_compensation_x2
0x1E923105,	//0x1e8e		VoC_bgtz16_r(CS_dec_mb_inter4v_compensation_y2,REG5)
0x2032072D,	//0x1e90		VoC_add16_rd(REG5,REG5,0x2032)
		//0x1e92		CS_dec_mb_inter4v_compensation_y2
0xF80D780C,	//0x1e92		VoC_shr16_ri(REG5,0x1,IN_PARALLEL)	|	VoC_shr16_ri(REG4,0x1,DEFAULT)
0xC1EF41A6,	//0x1e94		VoC_add16_rr(REG7,REG7,REG5,IN_PARALLEL)	|	VoC_add16_rr(REG6,REG6,REG4,DEFAULT)
0xD895D894,	//0x1e96		VoC_lw16inc_p(REG5,REG1,DEFAULT)	|	VoC_lw16inc_p(REG4,REG1,DEFAULT)
0x1E9C3104,	//0x1e98		VoC_bgtz16_r(CS_dec_mb_inter4v_compensation_x3,REG4)
0x20320724,	//0x1e9a		VoC_add16_rd(REG4,REG4,0x2032)
		//0x1e9c		CS_dec_mb_inter4v_compensation_x3
0x1EA03105,	//0x1e9c		VoC_bgtz16_r(CS_dec_mb_inter4v_compensation_y3,REG5)
0x2032072D,	//0x1e9e		VoC_add16_rd(REG5,REG5,0x2032)
		//0x1ea0		CS_dec_mb_inter4v_compensation_y3
0xF80D780C,	//0x1ea0		VoC_shr16_ri(REG5,0x1,IN_PARALLEL)	|	VoC_shr16_ri(REG4,0x1,DEFAULT)
0xC1EF41A6,	//0x1ea2		VoC_add16_rr(REG7,REG7,REG5,IN_PARALLEL)	|	VoC_add16_rr(REG6,REG6,REG4,DEFAULT)
		//0x1ea4		CS_dec_mb_inter4v_quarterpel_dx_dy_end
0x1604FF1A,	//0x1ea4		VoC_and16_ri(REG4,0xf)(lo)	|	VoC_movreg32(REG45,REG67,DEFAULT)
0x1605000F,	//0x1ea6		VoC_and16_ri(REG5,0xf)(lo)	|	VoC_and16_ri(REG4,0xf)(hi)
0x0A83000F,	//0x1ea8		VoC_lw16i(REG3,0x650e)(lo)	|	VoC_and16_ri(REG5,0xf)(hi)
0x411C650E,	//0x1eaa		VoC_add16_rr(REG4,REG4,REG3,DEFAULT)	|	VoC_lw16i(REG3,0x650e)(hi)
0x781EC15D,	//0x1eac		VoC_shr16_ri(REG6,0x3,DEFAULT)	|	VoC_add16_rr(REG5,REG5,REG3,IN_PARALLEL)
0x81A6F81F,	//0x1eae		VoC_add16_rp(REG6,REG6,REG4,DEFAULT)	|	VoC_shr16_ri(REG7,0x3,IN_PARALLEL)
0xDC8681EF,	//0x1eb0		VoC_sw16inc_p(REG6,REG0,DEFAULT)	|	VoC_add16_rp(REG7,REG7,REG5,DEFAULT)
0xDFC2DC87,	//0x1eb2		VoC_push16(REG2,DEFAULT)	|	VoC_sw16inc_p(REG7,REG0,DEFAULT)
0x1404DF46,	//0x1eb4		VoC_lw16_d(REG4,0x2032)(lo)	|	VoC_push32(RL6,DEFAULT)
0x31842032,	//0x1eb6		VoC_bez16_r(CS_dec_mb_inter4v_quarterpel_1,REG4)(lo)	|	VoC_lw16_d(REG4,0x2032)(hi)
0x0A8E1EFE,	//0x1eb8		VoC_lw16i(RL7_LO,0xcf0)(lo)	|	VoC_bez16_r(CS_dec_mb_inter4v_quarterpel_1,REG4)(hi)
0x14820CF0,	//0x1eba		VoC_lw32_d(REG45,0xcd4)(lo)	|	VoC_lw16i(RL7_LO,0xcf0)(hi)
0x14830CD4,	//0x1ebc		VoC_lw32_d(REG67,0xcd8)(lo)	|	VoC_lw32_d(REG45,0xcd4)(hi)
0xFA120CD8,	//0x1ebe		VoC_shr32_ri(REG45,0x2,DEFAULT)	|	VoC_lw32_d(REG67,0xcd8)(hi)
0x1A7A0914,	//0x1ec0		VoC_add32_rd(ACC0,REG45,0x1a7a)
0xFFC07BF4,	//0x1ec2		VoC_NAD(IN_PARALLEL)	|	VoC_shr32_ri(ACC0,0xfffffffe,DEFAULT)
0x16302B80,	//0x1ec4		VoC_jal(CS_interpolate8x8_quarterpel)
0x0D100A8E,	//0x1ec6		VoC_lw16i(RL7_LO,0xd10)
0x0CD41482,	//0x1ec8		VoC_lw32_d(REG45,0xcd4)
0x0CDA1483,	//0x1eca		VoC_lw32_d(REG67,0xcda)
0x7009FA12,	//0x1ecc		VoC_lw16i_short(ACC0_HI,0x0,DEFAULT)	|	VoC_shr32_ri(REG45,0x2,DEFAULT)
0xC8A2E028,	//0x1ece		VoC_add32_rr(REG45,REG45,ACC0,DEFAULT)	|	VoC_lw16i_short(ACC0_LO,0x2,IN_PARALLEL)
0x1A7A0914,	//0x1ed0		VoC_add32_rd(ACC0,REG45,0x1a7a)
0xFFC07BF4,	//0x1ed2		VoC_NAD(IN_PARALLEL)	|	VoC_shr32_ri(ACC0,0xfffffffe,DEFAULT)
0x16302B80,	//0x1ed4		VoC_jal(CS_interpolate8x8_quarterpel)
0x0D300A8E,	//0x1ed6		VoC_lw16i(RL7_LO,0xd30)
0x0CD41482,	//0x1ed8		VoC_lw32_d(REG45,0xcd4)
0x0CBC1406,	//0x1eda		VoC_lw16_d(REG6,0xcbc)
0xE00778FE,	//0x1edc		VoC_lw16i_short(REG7,0x0,IN_PARALLEL)	|	VoC_shr16_ri(REG6,0xffffffff,DEFAULT)
0xC89AFA12,	//0x1ede		VoC_add32_rr(REG45,REG45,REG67,DEFAULT)	|	VoC_shr32_ri(REG45,0x2,DEFAULT)
0x1A7A0914,	//0x1ee0		VoC_add32_rd(ACC0,REG45,0x1a7a)
0x1483FBF4,	//0x1ee2		VoC_lw32_d(REG67,0xcdc)(lo)	|	VoC_shr32_ri(ACC0,0xfffffffe,DEFAULT)
0xFFC00CDC,	//0x1ee4		VoC_NAD	|	VoC_lw32_d(REG67,0xcdc)(hi)
0x16302B80,	//0x1ee6		VoC_jal(CS_interpolate8x8_quarterpel)
0x0D500A8E,	//0x1ee8		VoC_lw16i(RL7_LO,0xd50)
0x0CD41482,	//0x1eea		VoC_lw32_d(REG45,0xcd4)
0x0CBC1406,	//0x1eec		VoC_lw16_d(REG6,0xcbc)
0xE00778FE,	//0x1eee		VoC_lw16i_short(REG7,0x0,IN_PARALLEL)	|	VoC_shr16_ri(REG6,0xffffffff,DEFAULT)
0xC89AFA12,	//0x1ef0		VoC_add32_rr(REG45,REG45,REG67,DEFAULT)	|	VoC_shr32_ri(REG45,0x2,DEFAULT)
0xE0287009,	//0x1ef2		VoC_lw16i_short(ACC0_LO,0x2,IN_PARALLEL)	|	VoC_lw16i_short(ACC0_HI,0x0,DEFAULT)
0x0914C8A2,	//0x1ef4		VoC_add32_rd(ACC0,REG45,0x1a7a)(lo)	|	VoC_add32_rr(REG45,REG45,ACC0,DEFAULT)
0xFBF41A7A,	//0x1ef6		VoC_shr32_ri(ACC0,0xfffffffe,DEFAULT)	|	VoC_add32_rd(ACC0,REG45,0x1a7a)(hi)
0x0CDE1483,	//0x1ef8		VoC_lw32_d(REG67,0xcde)
0x16302B80,	//0x1efa		VoC_jal(CS_interpolate8x8_quarterpel)
0x1F502B00,	//0x1efc		VoC_jump_lg(CS_dec_mb_inter4v_interpolate8x8_end)
		//0x1efe		CS_dec_mb_inter4v_quarterpel_1
0x0CF00A8E,	//0x1efe		VoC_lw16i(RL7_LO,0xcf0)
0x0CD41482,	//0x1f00		VoC_lw32_d(REG45,0xcd4)
0x0CD81483,	//0x1f02		VoC_lw32_d(REG67,0xcd8)
0x0914FA12,	//0x1f04		VoC_add32_rd(ACC0,REG45,0x1a7a)(lo)	|	VoC_shr32_ri(REG45,0x2,DEFAULT)
0x14031A7A,	//0x1f06		VoC_lw16_d(REG3,0xcbc)(lo)	|	VoC_add32_rd(ACC0,REG45,0x1a7a)(hi)
0xFBF40CBC,	//0x1f08		VoC_shr32_ri(ACC0,0xfffffffe,DEFAULT)	|	VoC_lw16_d(REG3,0xcbc)(hi)
0x0CE61503,	//0x1f0a		VoC_sw16_d(REG3,0xce6)
0x139B2B80,	//0x1f0c		VoC_jal(CS_interpolate8x8_switch)
0x0D100A8E,	//0x1f0e		VoC_lw16i(RL7_LO,0xd10)
0x0CD41482,	//0x1f10		VoC_lw32_d(REG45,0xcd4)
0x0CDA1483,	//0x1f12		VoC_lw32_d(REG67,0xcda)
0x7009FA12,	//0x1f14		VoC_lw16i_short(ACC0_HI,0x0,DEFAULT)	|	VoC_shr32_ri(REG45,0x2,DEFAULT)
0xC8A2E028,	//0x1f16		VoC_add32_rr(REG45,REG45,ACC0,DEFAULT)	|	VoC_lw16i_short(ACC0_LO,0x2,IN_PARALLEL)
0x1A7A0914,	//0x1f18		VoC_add32_rd(ACC0,REG45,0x1a7a)
0x0CBC1403,	//0x1f1a		VoC_lw16_d(REG3,0xcbc)
0x1503FBF4,	//0x1f1c		VoC_sw16_d(REG3,0xce6)(lo)	|	VoC_shr32_ri(ACC0,0xfffffffe,DEFAULT)
0xFFC00CE6,	//0x1f1e		VoC_NAD	|	VoC_sw16_d(REG3,0xce6)(hi)
0x139B2B80,	//0x1f20		VoC_jal(CS_interpolate8x8_switch)
0x0D300A8E,	//0x1f22		VoC_lw16i(RL7_LO,0xd30)
0x0CD41482,	//0x1f24		VoC_lw32_d(REG45,0xcd4)
0x0CBC1406,	//0x1f26		VoC_lw16_d(REG6,0xcbc)
0xE00778FE,	//0x1f28		VoC_lw16i_short(REG7,0x0,IN_PARALLEL)	|	VoC_shr16_ri(REG6,0xffffffff,DEFAULT)
0xC89AFA12,	//0x1f2a		VoC_add32_rr(REG45,REG45,REG67,DEFAULT)	|	VoC_shr32_ri(REG45,0x2,DEFAULT)
0x1A7A0914,	//0x1f2c		VoC_add32_rd(ACC0,REG45,0x1a7a)
0x1403FBF4,	//0x1f2e		VoC_lw16_d(REG3,0xcbc)(lo)	|	VoC_shr32_ri(ACC0,0xfffffffe,DEFAULT)
0x14830CBC,	//0x1f30		VoC_lw32_d(REG67,0xcdc)(lo)	|	VoC_lw16_d(REG3,0xcbc)(hi)
0x15030CDC,	//0x1f32		VoC_sw16_d(REG3,0xce6)(lo)	|	VoC_lw32_d(REG67,0xcdc)(hi)
0xFFC00CE6,	//0x1f34		VoC_NAD	|	VoC_sw16_d(REG3,0xce6)(hi)
0x139B2B80,	//0x1f36		VoC_jal(CS_interpolate8x8_switch)
0x0D500A8E,	//0x1f38		VoC_lw16i(RL7_LO,0xd50)
0x0CD41482,	//0x1f3a		VoC_lw32_d(REG45,0xcd4)
0x0CBC1406,	//0x1f3c		VoC_lw16_d(REG6,0xcbc)
0xE00778FE,	//0x1f3e		VoC_lw16i_short(REG7,0x0,IN_PARALLEL)	|	VoC_shr16_ri(REG6,0xffffffff,DEFAULT)
0xC89AFA12,	//0x1f40		VoC_add32_rr(REG45,REG45,REG67,DEFAULT)	|	VoC_shr32_ri(REG45,0x2,DEFAULT)
0xE0287009,	//0x1f42		VoC_lw16i_short(ACC0_LO,0x2,IN_PARALLEL)	|	VoC_lw16i_short(ACC0_HI,0x0,DEFAULT)
0x0914C8A2,	//0x1f44		VoC_add32_rd(ACC0,REG45,0x1a7a)(lo)	|	VoC_add32_rr(REG45,REG45,ACC0,DEFAULT)
0xFBF41A7A,	//0x1f46		VoC_shr32_ri(ACC0,0xfffffffe,DEFAULT)	|	VoC_add32_rd(ACC0,REG45,0x1a7a)(hi)
0x0CBC1403,	//0x1f48		VoC_lw16_d(REG3,0xcbc)
0x0CDE1483,	//0x1f4a		VoC_lw32_d(REG67,0xcde)
0x0CE61503,	//0x1f4c		VoC_sw16_d(REG3,0xce6)
0x139B2B80,	//0x1f4e		VoC_jal(CS_interpolate8x8_switch)
		//0x1f50		CS_dec_mb_inter4v_interpolate8x8_end
0x0D700A8E,	//0x1f50		VoC_lw16i(RL7_LO,0xd70)
0x0CD61482,	//0x1f52		VoC_lw32_d(REG45,0xcd6)
0x1403FA12,	//0x1f54		VoC_lw16_d(REG3,0xcc0)(lo)	|	VoC_shr32_ri(REG45,0x2,DEFAULT)
0x09140CC0,	//0x1f56		VoC_add32_rd(ACC0,REG45,0x1a7c)(lo)	|	VoC_lw16_d(REG3,0xcc0)(hi)
0xFBF41A7C,	//0x1f58		VoC_shr32_ri(ACC0,0xfffffffe,DEFAULT)	|	VoC_add32_rd(ACC0,REG45,0x1a7c)(hi)
0x0CE01483,	//0x1f5a		VoC_lw32_d(REG67,0xce0)
0x0CE61503,	//0x1f5c		VoC_sw16_d(REG3,0xce6)
0x139B2B80,	//0x1f5e		VoC_jal(CS_interpolate8x8_switch)
0x0D900A8E,	//0x1f60		VoC_lw16i(RL7_LO,0xd90)
0x0CD61482,	//0x1f62		VoC_lw32_d(REG45,0xcd6)
0x0914FA12,	//0x1f64		VoC_add32_rd(ACC0,REG45,0x1a7e)(lo)	|	VoC_shr32_ri(REG45,0x2,DEFAULT)
0x14031A7E,	//0x1f66		VoC_lw16_d(REG3,0xcc1)(lo)	|	VoC_add32_rd(ACC0,REG45,0x1a7e)(hi)
0xFBF40CC1,	//0x1f68		VoC_shr32_ri(ACC0,0xfffffffe,DEFAULT)	|	VoC_lw16_d(REG3,0xcc1)(hi)
0x0CE01483,	//0x1f6a		VoC_lw32_d(REG67,0xce0)
0x0CE61503,	//0x1f6c		VoC_sw16_d(REG3,0xce6)
0x139B2B80,	//0x1f6e		VoC_jal(CS_interpolate8x8_switch)
0xDF82DF06,	//0x1f70		VoC_pop16(REG2,DEFAULT)	|	VoC_pop32(RL6,DEFAULT)
0x0CB66C04,	//0x1f72		VoC_bez16_d(CS_dec_mb_inter4v07,0xcb6)
0x16DC2B80,	//0x1f74		VoC_jal(CS_decoder_mb_decode)
		//0x1f76		CS_dec_mb_inter4v07
0xFFC0DFA9,	//0x1f76		VoC_NOP	|	VoC_pop16(RA,DEFAULT)
0xDFE9E580,	//0x1f78		VoC_push16(RA,DEFAULT)	|	VoC_return
		//0x1f79		CS_dec_mb_bframe_inter1v
0x1482DFC2,	//0x1f7a		VoC_lw32_d(REG45,0xcae)(lo)	|	VoC_push16(REG2,DEFAULT)
0x78E40CAE,	//0x1f7c		VoC_shr16_ri(REG4,0xfffffffc,DEFAULT)	|	VoC_lw32_d(REG45,0xcae)(hi)
0x1807F8E5,	//0x1f7e		VoC_lw16i_set_inc(REG3,0x12e8,0x1)(lo)	|	VoC_shr16_ri(REG5,0xfffffffc,IN_PARALLEL)
0x0B2612E8,	//0x1f80		VoC_sub16_dr(REG6,0xcbe,REG4)(lo)	|	VoC_lw16i_set_inc(REG3,0x12e8,0x1)(hi)
0xF7E20CBE,	//0x1f82		VoC_lw16i_short(REG2,0xffffffff,DEFAULT)	|	VoC_sub16_dr(REG6,0xcbe,REG4)(hi)
0x20320792,	//0x1f84		VoC_sub16_rd(REG2,REG2,0x2032)
0xE1077E16,	//0x1f86		VoC_lw16i_short(REG7,0x10,IN_PARALLEL)	|	VoC_shr16_rr(REG6,REG2,DEFAULT)
0x7E17C1E7,	//0x1f88		VoC_shr16_rr(REG7,REG2,DEFAULT)	|	VoC_add16_rr(REG7,REG7,REG4,DEFAULT)
0xC1C7D8B0,	//0x1f8a		VoC_add16_rr(REG7,REG7,REG0,DEFAULT)	|	VoC_lw16inc_p(REG0,REG3,IN_PARALLEL)
0x1F8F3107,	//0x1f8c		VoC_bgtz16_r(CS_dec_brame_mb_inter1v01,REG7)
0xC237C238,	//0x1f8e		VoC_sub16_rr(REG7,REG0,REG6,DEFAULT)	|	VoC_sub16_rr(REG0,REG0,REG7,DEFAULT)
		//0x1f8f		CS_dec_brame_mb_inter1v01
0x1F943107,	//0x1f90		VoC_bgtz16_r(CS_dec_brame_mb_inter1v02,REG7)
0xFFC041BE,	//0x1f92		VoC_NAD(IN_PARALLEL)	|	VoC_add16_rr(REG6,REG6,REG7,DEFAULT)
		//0x1f94		CS_dec_brame_mb_inter1v02
0xD8B07201,	//0x1f94		VoC_lw16inc_p(REG0,REG3,IN_PARALLEL)	|	VoC_lw16i_short(REG1,0x10,DEFAULT)
0xFE11C069,	//0x1f96		VoC_shr16_rr(REG1,REG2,DEFAULT)	|	VoC_add16_rr(REG1,REG1,REG5,DEFAULT)
0x3101C041,	//0x1f98		VoC_bgtz16_r(CS_dec_brame_mb_inter1v03,REG1)(lo)	|	VoC_add16_rr(REG1,REG1,REG0,DEFAULT)
0xC2081F9C,	//0x1f9a		VoC_sub16_rr(REG0,REG0,REG1,DEFAULT)	|	VoC_bgtz16_r(CS_dec_brame_mb_inter1v03,REG1)(hi)
		//0x1f9c		CS_dec_brame_mb_inter1v03
0x0CBF0B2F,	//0x1f9c		VoC_sub16_dr(REG7,0xcbf,REG5)
0xC239FE17,	//0x1f9e		VoC_sub16_rr(REG1,REG0,REG7,DEFAULT)	|	VoC_shr16_rr(REG7,REG2,DEFAULT)
0x1FA43101,	//0x1fa0		VoC_bgtz16_r(CS_dec_brame_mb_inter1v04,REG1)
0xFFC041CF,	//0x1fa2		VoC_NAD(IN_PARALLEL)	|	VoC_add16_rr(REG7,REG7,REG1,DEFAULT)
		//0x1fa4		CS_dec_brame_mb_inter1v04
0x20321402,	//0x1fa4		VoC_lw16_d(REG2,0x2032)
0x3106FF18,	//0x1fa6		VoC_bgtz16_r(CS_dec_brame_mb_inter1v_compensation_x,REG6)(lo)	|	VoC_movreg32(REG01,REG67,DEFAULT)
0x07001FAC,	//0x1fa8		VoC_add16_rd(REG0,REG0,0x2032)(lo)	|	VoC_bgtz16_r(CS_dec_brame_mb_inter1v_compensation_x,REG6)(hi)
0xFFC02032,	//0x1faa		VoC_NAD	|	VoC_add16_rd(REG0,REG0,0x2032)(hi)
		//0x1fac		CS_dec_brame_mb_inter1v_compensation_x
0x1FB03107,	//0x1fac		VoC_bgtz16_r(CS_dec_brame_mb_inter1v_compensation_y,REG7)
0x20320709,	//0x1fae		VoC_add16_rd(REG1,REG1,0x2032)
		//0x1fb0		CS_dec_brame_mb_inter1v_compensation_y
0xFE117E10,	//0x1fb0		VoC_shr16_rr(REG1,REG2,IN_PARALLEL)	|	VoC_shr16_rr(REG0,REG2,DEFAULT)
0xE0137F02,	//0x1fb2		VoC_lw16i_short(REG3,0x1,IN_PARALLEL)	|	VoC_movreg32(REG45,REG01,DEFAULT)
0xF8097808,	//0x1fb4		VoC_shr16_ri(REG1,0x1,IN_PARALLEL)	|	VoC_shr16_ri(REG0,0x1,DEFAULT)
0x00031604,	//0x1fb6		VoC_and16_ri(REG4,0x3)
0x00031605,	//0x1fb8		VoC_and16_ri(REG5,0x3)
0x1FBE35A3,	//0x1fba		VoC_bne16_rr(CS_dec_brame_mb_inter1v05,REG4,REG3)
0xFFC04018,	//0x1fbc		VoC_NAD(IN_PARALLEL)	|	VoC_add16_rr(REG0,REG0,REG3,DEFAULT)
		//0x1fbe		CS_dec_brame_mb_inter1v05
0x1FC235AB,	//0x1fbe		VoC_bne16_rr(CS_dec_brame_mb_inter1v06,REG5,REG3)
0xFFC04059,	//0x1fc0		VoC_NAD(IN_PARALLEL)	|	VoC_add16_rr(REG1,REG1,REG3,DEFAULT)
		//0x1fc2		CS_dec_brame_mb_inter1v06
0x0CAE1482,	//0x1fc2		VoC_lw32_d(REG45,0xcae)
0x0CBC082D,	//0x1fc4		VoC_mult16_rd(REG5,REG5,0xcbc)
0x412CFFC0,	//0x1fc6		VoC_add16_rr(REG4,REG4,REG5,DEFAULT)	|	VoC_NOP
0x1580E005,	//0x1fc8		VoC_sw32_d(REG01,0xcd2)(lo)	|	VoC_lw16i_short(REG5,0x0,IN_PARALLEL)
0xFBF20CD2,	//0x1fca		VoC_shr32_ri(REG45,0xfffffffe,DEFAULT)	|	VoC_sw32_d(REG01,0xcd2)(hi)
0x1A7A0914,	//0x1fcc		VoC_add32_rd(ACC0,REG45,0x1a7a)
0xDF427BF4,	//0x1fce		VoC_push32(REG45,IN_PARALLEL)	|	VoC_shr32_ri(ACC0,0xfffffffe,DEFAULT)
0x20326C06,	//0x1fd0		VoC_bez16_d(CS_dec_brame_mb_inter1v_quarterpel_0,0x2032)
0x124A2B80,	//0x1fd2		VoC_jal(CS_interpolate16x16_quarterpel)
0xFFC065C4,	//0x1fd4		VoC_NAD(IN_PARALLEL)	|	VoC_jump(CS_dec_brame_mb_inter1v_interpolate16x16_end)
		//0x1fd6		CS_dec_brame_mb_inter1v_quarterpel_0
0x12222B80,	//0x1fd6		VoC_jal(CS_interpolate16x16_switch)
		//0x1fd8		CS_dec_brame_mb_inter1v_interpolate16x16_end
0x0D700A8E,	//0x1fd8		VoC_lw16i(RL7_LO,0xd70)
0xFA12DF02,	//0x1fda		VoC_shr32_ri(REG45,0x2,DEFAULT)	|	VoC_pop32(REG45,DEFAULT)
0x0CAE0724,	//0x1fdc		VoC_add16_rd(REG4,REG4,0xcae)
0x0CC01403,	//0x1fde		VoC_lw16_d(REG3,0xcc0)
0x1A7C0914,	//0x1fe0		VoC_add32_rd(ACC0,REG45,0x1a7c)
0xDF42FBF4,	//0x1fe2		VoC_push32(REG45,DEFAULT)	|	VoC_shr32_ri(ACC0,0xfffffffe,DEFAULT)
0x0CD21483,	//0x1fe4		VoC_lw32_d(REG67,0xcd2)
0x0CE61503,	//0x1fe6		VoC_sw16_d(REG3,0xce6)
0x139B2B80,	//0x1fe8		VoC_jal(CS_interpolate8x8_switch)
0x0D900A8E,	//0x1fea		VoC_lw16i(RL7_LO,0xd90)
0x0914DF02,	//0x1fec		VoC_add32_rd(ACC0,REG45,0x1a7e)(lo)	|	VoC_pop32(REG45,DEFAULT)
0xFBF41A7E,	//0x1fee		VoC_shr32_ri(ACC0,0xfffffffe,DEFAULT)	|	VoC_add32_rd(ACC0,REG45,0x1a7e)(hi)
0x0CD21483,	//0x1ff0		VoC_lw32_d(REG67,0xcd2)
0x139B2B80,	//0x1ff2		VoC_jal(CS_interpolate8x8_switch)
0x6C04DF82,	//0x1ff4		VoC_bez16_d(CS_dec_brame_mb_inter1v07,0xcb6)(lo)	|	VoC_pop16(REG2,DEFAULT)
0x2B800CB6,	//0x1ff6		VoC_jal(CS_decoder_mb_decode)(lo)	|	VoC_bez16_d(CS_dec_brame_mb_inter1v07,0xcb6)(hi)
0xDFA916DC,	//0x1ff8		VoC_pop16(RA,DEFAULT)	|	VoC_jal(CS_decoder_mb_decode)(hi)
		//0x1ff9		CS_dec_brame_mb_inter1v07
0xE580FFC0,	//0x1ffa		VoC_return	|	VoC_NOP
		//0x1ffc		CS_dec_mb_bframe_inter4v
0xDFC2DFE9,	//0x1ffc		VoC_push16(REG2,DEFAULT)	|	VoC_push16(RA,DEFAULT)
0x0CAE1482,	//0x1ffe		VoC_lw32_d(REG45,0xcae)
0xF8E578E4,	//0x2000		VoC_shr16_ri(REG5,0xfffffffc,IN_PARALLEL)	|	VoC_shr16_ri(REG4,0xfffffffc,DEFAULT)
0x0CBC0A2B,	//0x2002		VoC_multf32_rd(REG67,REG5,0xcbc)
0xF6A37005,	//0x2004		VoC_movreg16(REG3,REG5,IN_PARALLEL)	|	VoC_lw16i_short(REG5,0x0,DEFAULT)
0xC8D0C8D3,	//0x2006		VoC_add32_rr(REG01,REG67,REG45,DEFAULT)	|	VoC_add32_rr(REG67,REG67,REG45,DEFAULT)
0x1583FA10,	//0x2008		VoC_sw32_d(REG67,0xcd4)(lo)	|	VoC_shr32_ri(REG01,0x2,DEFAULT)
0x15800CD4,	//0x200a		VoC_sw32_d(REG01,0xcd6)(lo)	|	VoC_sw32_d(REG67,0xcd4)(hi)
0x72030CD6,	//0x200c		VoC_lw16i_short(REG3,0x10,DEFAULT)	|	VoC_sw32_d(REG01,0xcd6)(hi)
0x40E6F665,	//0x200e		VoC_add16_rr(REG6,REG3,REG4,DEFAULT)	|	VoC_movreg16(REG5,REG3,IN_PARALLEL)
0xF7E3C0E8,	//0x2010		VoC_lw16i_short(REG3,0xffffffff,DEFAULT)	|	VoC_add16_rr(REG0,REG3,REG5,IN_PARALLEL)
0x2032079B,	//0x2012		VoC_sub16_rd(REG3,REG3,0x2032)
0xFE187E1E,	//0x2014		VoC_shr16_rr(REG0,REG3,IN_PARALLEL)	|	VoC_shr16_rr(REG6,REG3,DEFAULT)
0x0CBE0B27,	//0x2016		VoC_sub16_dr(REG7,0xcbe,REG4)
0x0CBF0B29,	//0x2018		VoC_sub16_dr(REG1,0xcbf,REG5)
0xFE197E1F,	//0x201a		VoC_shr16_rr(REG1,REG3,IN_PARALLEL)	|	VoC_shr16_rr(REG7,REG3,DEFAULT)
0x0CD81804,	//0x201c		VoC_lw16i_set_inc(REG0,0xcd8,0x1)
0x0CE41580,	//0x201e		VoC_sw32_d(REG01,0xce4)
0x12E81805,	//0x2020		VoC_lw16i_set_inc(REG1,0x12e8,0x1)
0x0CE21583,	//0x2022		VoC_sw32_d(REG67,0xce2)
0x20452C05,	//0x2024		VoC_loop_i(0x1,0x2)
0xE89BFFC0,	//0x2026		VoC_loop_i_short(0x4,DEFAULT)	|	VoC_NAD
0x0CE21807,	//0x2028		VoC_lw16i_set_inc(REG3,0xce2,0x1)
0x839FD896,	//0x202a		VoC_add16inc_rp(REG7,REG6,REG3,DEFAULT)	|	VoC_lw16inc_p(REG6,REG1,DEFAULT)
0x202F3247,	//0x202c		VoC_bnltz16_r(CS_dec_brame_mb_inter4v100,REG7)
0x859EC3BE,	//0x202e		VoC_sub16_rp(REG6,REG6,REG3,DEFAULT)	|	VoC_sub16_rr(REG6,REG6,REG7,DEFAULT)
		//0x202f		CS_dec_brame_mb_inter4v100
0x3246D8B7,	//0x2030		VoC_bnltz16_r(CS_dec_brame_mb_inter4v101,REG6)(lo)	|	VoC_lw16inc_p(REG7,REG3,DEFAULT)
0xC1F72034,	//0x2032		VoC_add16_rr(REG7,REG7,REG6,DEFAULT)	|	VoC_bnltz16_r(CS_dec_brame_mb_inter4v101,REG6)(hi)
		//0x2034		CS_dec_brame_mb_inter4v101
0x0CE41807,	//0x2034		VoC_lw16i_set_inc(REG3,0xce4,0x1)
0xD896DC87,	//0x2036		VoC_lw16inc_p(REG6,REG1,DEFAULT)	|	VoC_sw16inc_p(REG7,REG0,DEFAULT)
0x3247839F,	//0x2038		VoC_bnltz16_r(CS_dec_brame_mb_inter4v102,REG7)(lo)	|	VoC_add16inc_rp(REG7,REG6,REG3,DEFAULT)
0xC3BE203C,	//0x203a		VoC_sub16_rr(REG6,REG6,REG7,DEFAULT)	|	VoC_bnltz16_r(CS_dec_brame_mb_inter4v102,REG7)(hi)
		//0x203c		CS_dec_brame_mb_inter4v102
0xD8B7859E,	//0x203c		VoC_lw16inc_p(REG7,REG3,DEFAULT)	|	VoC_sub16_rp(REG6,REG6,REG3,DEFAULT)
0x20413246,	//0x203e		VoC_bnltz16_r(CS_dec_brame_mb_inter4v103,REG6)
0xFFC0C1F7,	//0x2040		VoC_NOP	|	VoC_add16_rr(REG7,REG7,REG6,DEFAULT)
		//0x2041		CS_dec_brame_mb_inter4v103
		//0x2042		VoC_endloop0
0x1804DC87,	//0x2042		VoC_lw16i_set_inc(REG0,0x201a,0x1)(lo)	|	VoC_sw16inc_p(REG7,REG0,DEFAULT)
0x1805201A,	//0x2044		VoC_lw16i_set_inc(REG1,0x2012,0x1)(lo)	|	VoC_lw16i_set_inc(REG0,0x201a,0x1)(hi)
		//0x2045		VoC_endloop1
0x18052012,	//0x2046		VoC_lw16i_set_inc(REG1,0xcd8,0x1)(lo)	|	VoC_lw16i_set_inc(REG1,0x2012,0x1)(hi)
0x18040CD8,	//0x2048		VoC_lw16i_set_inc(REG0,0xce0,0x1)(lo)	|	VoC_lw16i_set_inc(REG1,0xcd8,0x1)(hi)
0xFFC00CE0,	//0x204a		VoC_NAD	|	VoC_lw16i_set_inc(REG0,0xce0,0x1)(hi)
0x20A12C04,	//0x204c		VoC_loop_i(0x0,0x2)
0x20326E0C,	//0x204e		VoC_bnez16_d(CS_dec_brame_mb_inter4v_quarterpel_1_dxdy,0x2032)
0xD897D896,	//0x2050		VoC_lw16inc_p(REG7,REG1,DEFAULT)	|	VoC_lw16inc_p(REG6,REG1,DEFAULT)
0x83CF838E,	//0x2052		VoC_add16inc_rp(REG7,REG7,REG1,DEFAULT)	|	VoC_add16inc_rp(REG6,REG6,REG1,DEFAULT)
0x83CF838E,	//0x2054		VoC_add16inc_rp(REG7,REG7,REG1,DEFAULT)	|	VoC_add16inc_rp(REG6,REG6,REG1,DEFAULT)
0x83CF838E,	//0x2056		VoC_add16inc_rp(REG7,REG7,REG1,DEFAULT)	|	VoC_add16inc_rp(REG6,REG6,REG1,DEFAULT)
0x20902B00,	//0x2058		VoC_jump_lg(CS_dec_brame_mb_inter4v_quarterpel_dx_dy_end)
		//0x205a		CS_dec_brame_mb_inter4v_quarterpel_1_dxdy
0xD897D896,	//0x205a		VoC_lw16inc_p(REG7,REG1,DEFAULT)	|	VoC_lw16inc_p(REG6,REG1,DEFAULT)
0xD895D894,	//0x205c		VoC_lw16inc_p(REG5,REG1,DEFAULT)	|	VoC_lw16inc_p(REG4,REG1,DEFAULT)
0x20623106,	//0x205e		VoC_bgtz16_r(CS_dec_brame_mb_inter4v_compensation_x0,REG6)
0x20320736,	//0x2060		VoC_add16_rd(REG6,REG6,0x2032)
		//0x2062		CS_dec_brame_mb_inter4v_compensation_x0
0x20663107,	//0x2062		VoC_bgtz16_r(CS_dec_brame_mb_inter4v_compensation_y0,REG7)
0x2032073F,	//0x2064		VoC_add16_rd(REG7,REG7,0x2032)
		//0x2066		CS_dec_brame_mb_inter4v_compensation_y0
0x206A3104,	//0x2066		VoC_bgtz16_r(CS_dec_brame_mb_inter4v_compensation_x1,REG4)
0x20320724,	//0x2068		VoC_add16_rd(REG4,REG4,0x2032)
		//0x206a		CS_dec_brame_mb_inter4v_compensation_x1
0x206E3105,	//0x206a		VoC_bgtz16_r(CS_dec_brame_mb_inter4v_compensation_y1,REG5)
0x2032072D,	//0x206c		VoC_add16_rd(REG5,REG5,0x2032)
		//0x206e		CS_dec_brame_mb_inter4v_compensation_y1
0xF80F780E,	//0x206e		VoC_shr16_ri(REG7,0x1,IN_PARALLEL)	|	VoC_shr16_ri(REG6,0x1,DEFAULT)
0xF80D780C,	//0x2070		VoC_shr16_ri(REG5,0x1,IN_PARALLEL)	|	VoC_shr16_ri(REG4,0x1,DEFAULT)
0xC1EF41A6,	//0x2072		VoC_add16_rr(REG7,REG7,REG5,IN_PARALLEL)	|	VoC_add16_rr(REG6,REG6,REG4,DEFAULT)
0xD895D894,	//0x2074		VoC_lw16inc_p(REG5,REG1,DEFAULT)	|	VoC_lw16inc_p(REG4,REG1,DEFAULT)
0x207A3104,	//0x2076		VoC_bgtz16_r(CS_dec_brame_mb_inter4v_compensation_x2,REG4)
0x20320724,	//0x2078		VoC_add16_rd(REG4,REG4,0x2032)
		//0x207a		CS_dec_brame_mb_inter4v_compensation_x2
0x207E3105,	//0x207a		VoC_bgtz16_r(CS_dec_brame_mb_inter4v_compensation_y2,REG5)
0x2032072D,	//0x207c		VoC_add16_rd(REG5,REG5,0x2032)
		//0x207e		CS_dec_brame_mb_inter4v_compensation_y2
0xF80D780C,	//0x207e		VoC_shr16_ri(REG5,0x1,IN_PARALLEL)	|	VoC_shr16_ri(REG4,0x1,DEFAULT)
0xC1EF41A6,	//0x2080		VoC_add16_rr(REG7,REG7,REG5,IN_PARALLEL)	|	VoC_add16_rr(REG6,REG6,REG4,DEFAULT)
0xD895D894,	//0x2082		VoC_lw16inc_p(REG5,REG1,DEFAULT)	|	VoC_lw16inc_p(REG4,REG1,DEFAULT)
0x20883104,	//0x2084		VoC_bgtz16_r(CS_dec_brame_mb_inter4v_compensation_x3,REG4)
0x20320724,	//0x2086		VoC_add16_rd(REG4,REG4,0x2032)
		//0x2088		CS_dec_brame_mb_inter4v_compensation_x3
0x208C3105,	//0x2088		VoC_bgtz16_r(CS_dec_brame_mb_inter4v_compensation_y3,REG5)
0x2032072D,	//0x208a		VoC_add16_rd(REG5,REG5,0x2032)
		//0x208c		CS_dec_brame_mb_inter4v_compensation_y3
0xF80D780C,	//0x208c		VoC_shr16_ri(REG5,0x1,IN_PARALLEL)	|	VoC_shr16_ri(REG4,0x1,DEFAULT)
0xC1EF41A6,	//0x208e		VoC_add16_rr(REG7,REG7,REG5,IN_PARALLEL)	|	VoC_add16_rr(REG6,REG6,REG4,DEFAULT)
		//0x2090		CS_dec_brame_mb_inter4v_quarterpel_dx_dy_end
0x1604FF1A,	//0x2090		VoC_and16_ri(REG4,0xf)(lo)	|	VoC_movreg32(REG45,REG67,DEFAULT)
0x1605000F,	//0x2092		VoC_and16_ri(REG5,0xf)(lo)	|	VoC_and16_ri(REG4,0xf)(hi)
0x0A83000F,	//0x2094		VoC_lw16i(REG3,0x650e)(lo)	|	VoC_and16_ri(REG5,0xf)(hi)
0x411C650E,	//0x2096		VoC_add16_rr(REG4,REG4,REG3,DEFAULT)	|	VoC_lw16i(REG3,0x650e)(hi)
0x781EC15D,	//0x2098		VoC_shr16_ri(REG6,0x3,DEFAULT)	|	VoC_add16_rr(REG5,REG5,REG3,IN_PARALLEL)
0x81A6F81F,	//0x209a		VoC_add16_rp(REG6,REG6,REG4,DEFAULT)	|	VoC_shr16_ri(REG7,0x3,IN_PARALLEL)
0xDC8681EF,	//0x209c		VoC_sw16inc_p(REG6,REG0,DEFAULT)	|	VoC_add16_rp(REG7,REG7,REG5,DEFAULT)
0x1805DC87,	//0x209e		VoC_lw16i_set_inc(REG1,0x201a,0x1)(lo)	|	VoC_sw16inc_p(REG7,REG0,DEFAULT)
0x1804201A,	//0x20a0		VoC_lw16i_set_inc(REG0,0x2022,0x1)(lo)	|	VoC_lw16i_set_inc(REG1,0x201a,0x1)(hi)
		//0x20a1		VoC_endloop0
0x14042022,	//0x20a2		VoC_lw16_d(REG4,0x2032)(lo)	|	VoC_lw16i_set_inc(REG0,0x2022,0x1)(hi)
0x31842032,	//0x20a4		VoC_bez16_r(CS_dec_brame_mb_inter4v_quarterpel_1,REG4)(lo)	|	VoC_lw16_d(REG4,0x2032)(hi)
0x14822106,	//0x20a6		VoC_lw32_d(REG45,0xcd4)(lo)	|	VoC_bez16_r(CS_dec_brame_mb_inter4v_quarterpel_1,REG4)(hi)
0x14830CD4,	//0x20a8		VoC_lw32_d(REG67,0xcd8)(lo)	|	VoC_lw32_d(REG45,0xcd4)(hi)
0xFA120CD8,	//0x20aa		VoC_shr32_ri(REG45,0x2,DEFAULT)	|	VoC_lw32_d(REG67,0xcd8)(hi)
0x20240914,	//0x20ac		VoC_add32_rd(ACC0,REG45,0x2024)
0x0A8EFBF4,	//0x20ae		VoC_lw16i(RL7_LO,0xcf0)(lo)	|	VoC_shr32_ri(ACC0,0xfffffffe,DEFAULT)
0xDF440CF0,	//0x20b0		VoC_push32(ACC0,DEFAULT)	|	VoC_lw16i(RL7_LO,0xcf0)(hi)
0x16302B80,	//0x20b2		VoC_jal(CS_interpolate8x8_quarterpel)
0x1483D90C,	//0x20b4		VoC_lw32_d(REG67,0xcda)(lo)	|	VoC_lw32_sd(ACC0,0x0,DEFAULT)
0x71040CDA,	//0x20b6		VoC_lw16i_short(REG4,0x8,DEFAULT)	|	VoC_lw32_d(REG67,0xcda)(hi)
0xC914E005,	//0x20b8		VoC_add32_rr(ACC0,ACC0,REG45,DEFAULT)	|	VoC_lw16i_short(REG5,0x0,IN_PARALLEL)
0x0D100A8E,	//0x20ba		VoC_lw16i(RL7_LO,0xd10)
0x16302B80,	//0x20bc		VoC_jal(CS_interpolate8x8_quarterpel)
0x0A8EDF04,	//0x20be		VoC_lw16i(RL7_LO,0xd30)(lo)	|	VoC_pop32(ACC0,DEFAULT)
0x14060D30,	//0x20c0		VoC_lw16_d(REG6,0xcbc)(lo)	|	VoC_lw16i(RL7_LO,0xd30)(hi)
0x78EE0CBC,	//0x20c2		VoC_shr16_ri(REG6,0xfffffffd,DEFAULT)	|	VoC_lw16_d(REG6,0xcbc)(hi)
0xC91CE007,	//0x20c4		VoC_add32_rr(ACC0,ACC0,REG67,DEFAULT)	|	VoC_lw16i_short(REG7,0x0,IN_PARALLEL)
0x0CDC1483,	//0x20c6		VoC_lw32_d(REG67,0xcdc)
0x2B80DF44,	//0x20c8		VoC_jal(CS_interpolate8x8_quarterpel)(lo)	|	VoC_push32(ACC0,DEFAULT)
0xDF041630,	//0x20ca		VoC_pop32(ACC0,DEFAULT)	|	VoC_jal(CS_interpolate8x8_quarterpel)(hi)
0x0D500A8E,	//0x20cc		VoC_lw16i(RL7_LO,0xd50)
0xE0057104,	//0x20ce		VoC_lw16i_short(REG5,0x0,IN_PARALLEL)	|	VoC_lw16i_short(REG4,0x8,DEFAULT)
0x1483C914,	//0x20d0		VoC_lw32_d(REG67,0xcde)(lo)	|	VoC_add32_rr(ACC0,ACC0,REG45,DEFAULT)
0xFFC00CDE,	//0x20d2		VoC_NAD	|	VoC_lw32_d(REG67,0xcde)(hi)
0x16302B80,	//0x20d4		VoC_jal(CS_interpolate8x8_quarterpel)
0x0CD41482,	//0x20d6		VoC_lw32_d(REG45,0xcd4)
0x201A1483,	//0x20d8		VoC_lw32_d(REG67,0x201a)
0x0914FA12,	//0x20da		VoC_add32_rd(ACC0,REG45,0x202a)(lo)	|	VoC_shr32_ri(REG45,0x2,DEFAULT)
0xFBF4202A,	//0x20dc		VoC_shr32_ri(ACC0,0xfffffffe,DEFAULT)	|	VoC_add32_rd(ACC0,REG45,0x202a)(hi)
0x0E700A8E,	//0x20de		VoC_lw16i(RL7_LO,0xe70)
0x2B80DF44,	//0x20e0		VoC_jal(CS_interpolate8x8_quarterpel)(lo)	|	VoC_push32(ACC0,DEFAULT)
0xD90C1630,	//0x20e2		VoC_lw32_sd(ACC0,0x0,DEFAULT)	|	VoC_jal(CS_interpolate8x8_quarterpel)(hi)
0x201C1483,	//0x20e4		VoC_lw32_d(REG67,0x201c)
0xE0057104,	//0x20e6		VoC_lw16i_short(REG5,0x0,IN_PARALLEL)	|	VoC_lw16i_short(REG4,0x8,DEFAULT)
0x0A8EC914,	//0x20e8		VoC_lw16i(RL7_LO,0xe90)(lo)	|	VoC_add32_rr(ACC0,ACC0,REG45,DEFAULT)
0x2B800E90,	//0x20ea		VoC_jal(CS_interpolate8x8_quarterpel)(lo)	|	VoC_lw16i(RL7_LO,0xe90)(hi)
0xDF041630,	//0x20ec		VoC_pop32(ACC0,DEFAULT)	|	VoC_jal(CS_interpolate8x8_quarterpel)(hi)
0x0EB00A8E,	//0x20ee		VoC_lw16i(RL7_LO,0xeb0)
0x0CBC1406,	//0x20f0		VoC_lw16_d(REG6,0xcbc)
0xE00778EE,	//0x20f2		VoC_lw16i_short(REG7,0x0,IN_PARALLEL)	|	VoC_shr16_ri(REG6,0xfffffffd,DEFAULT)
0x1483C91C,	//0x20f4		VoC_lw32_d(REG67,0x201e)(lo)	|	VoC_add32_rr(ACC0,ACC0,REG67,DEFAULT)
0xDF44201E,	//0x20f6		VoC_push32(ACC0,DEFAULT)	|	VoC_lw32_d(REG67,0x201e)(hi)
0x16302B80,	//0x20f8		VoC_jal(CS_interpolate8x8_quarterpel)
0x0A8EDF04,	//0x20fa		VoC_lw16i(RL7_LO,0xed0)(lo)	|	VoC_pop32(ACC0,DEFAULT)
0x71040ED0,	//0x20fc		VoC_lw16i_short(REG4,0x8,DEFAULT)	|	VoC_lw16i(RL7_LO,0xed0)(hi)
0xC914E005,	//0x20fe		VoC_add32_rr(ACC0,ACC0,REG45,DEFAULT)	|	VoC_lw16i_short(REG5,0x0,IN_PARALLEL)
0x20201483,	//0x2100		VoC_lw32_d(REG67,0x2020)
0x16302B80,	//0x2102		VoC_jal(CS_interpolate8x8_quarterpel)
0x21662B00,	//0x2104		VoC_jump_lg(CS_dec_brame_mb_inter4v_interpolate8x8_end)
		//0x2106		CS_dec_brame_mb_inter4v_quarterpel_1
0x0CF00A8E,	//0x2106		VoC_lw16i(RL7_LO,0xcf0)
0x0CD41482,	//0x2108		VoC_lw32_d(REG45,0xcd4)
0x0CD81483,	//0x210a		VoC_lw32_d(REG67,0xcd8)
0x0914FA12,	//0x210c		VoC_add32_rd(ACC0,REG45,0x2024)(lo)	|	VoC_shr32_ri(REG45,0x2,DEFAULT)
0x14032024,	//0x210e		VoC_lw16_d(REG3,0xcbc)(lo)	|	VoC_add32_rd(ACC0,REG45,0x2024)(hi)
0xFBF40CBC,	//0x2110		VoC_shr32_ri(ACC0,0xfffffffe,DEFAULT)	|	VoC_lw16_d(REG3,0xcbc)(hi)
0x0CE61503,	//0x2112		VoC_sw16_d(REG3,0xce6)
0x2B80DF44,	//0x2114		VoC_jal(CS_interpolate8x8_switch)(lo)	|	VoC_push32(ACC0,DEFAULT)
0xD90C139B,	//0x2116		VoC_lw32_sd(ACC0,0x0,DEFAULT)	|	VoC_jal(CS_interpolate8x8_switch)(hi)
0x0CDA1483,	//0x2118		VoC_lw32_d(REG67,0xcda)
0xE0057104,	//0x211a		VoC_lw16i_short(REG5,0x0,IN_PARALLEL)	|	VoC_lw16i_short(REG4,0x8,DEFAULT)
0x0A8EC914,	//0x211c		VoC_lw16i(RL7_LO,0xd10)(lo)	|	VoC_add32_rr(ACC0,ACC0,REG45,DEFAULT)
0x2B800D10,	//0x211e		VoC_jal(CS_interpolate8x8_switch)(lo)	|	VoC_lw16i(RL7_LO,0xd10)(hi)
0xDF04139B,	//0x2120		VoC_pop32(ACC0,DEFAULT)	|	VoC_jal(CS_interpolate8x8_switch)(hi)
0x0D300A8E,	//0x2122		VoC_lw16i(RL7_LO,0xd30)
0x0CBC1406,	//0x2124		VoC_lw16_d(REG6,0xcbc)
0xE00778EE,	//0x2126		VoC_lw16i_short(REG7,0x0,IN_PARALLEL)	|	VoC_shr16_ri(REG6,0xfffffffd,DEFAULT)
0x1483C91C,	//0x2128		VoC_lw32_d(REG67,0xcdc)(lo)	|	VoC_add32_rr(ACC0,ACC0,REG67,DEFAULT)
0xDF440CDC,	//0x212a		VoC_push32(ACC0,DEFAULT)	|	VoC_lw32_d(REG67,0xcdc)(hi)
0x139B2B80,	//0x212c		VoC_jal(CS_interpolate8x8_switch)
0x0A8EDF04,	//0x212e		VoC_lw16i(RL7_LO,0xd50)(lo)	|	VoC_pop32(ACC0,DEFAULT)
0x71040D50,	//0x2130		VoC_lw16i_short(REG4,0x8,DEFAULT)	|	VoC_lw16i(RL7_LO,0xd50)(hi)
0xC914E005,	//0x2132		VoC_add32_rr(ACC0,ACC0,REG45,DEFAULT)	|	VoC_lw16i_short(REG5,0x0,IN_PARALLEL)
0x0CDE1483,	//0x2134		VoC_lw32_d(REG67,0xcde)
0x139B2B80,	//0x2136		VoC_jal(CS_interpolate8x8_switch)
0x0CD41482,	//0x2138		VoC_lw32_d(REG45,0xcd4)
0x201A1483,	//0x213a		VoC_lw32_d(REG67,0x201a)
0x0914FA12,	//0x213c		VoC_add32_rd(ACC0,REG45,0x202a)(lo)	|	VoC_shr32_ri(REG45,0x2,DEFAULT)
0xFBF4202A,	//0x213e		VoC_shr32_ri(ACC0,0xfffffffe,DEFAULT)	|	VoC_add32_rd(ACC0,REG45,0x202a)(hi)
0x0E700A8E,	//0x2140		VoC_lw16i(RL7_LO,0xe70)
0x2B80DF44,	//0x2142		VoC_jal(CS_interpolate8x8_switch)(lo)	|	VoC_push32(ACC0,DEFAULT)
0xD90C139B,	//0x2144		VoC_lw32_sd(ACC0,0x0,DEFAULT)	|	VoC_jal(CS_interpolate8x8_switch)(hi)
0x201C1483,	//0x2146		VoC_lw32_d(REG67,0x201c)
0xE0057104,	//0x2148		VoC_lw16i_short(REG5,0x0,IN_PARALLEL)	|	VoC_lw16i_short(REG4,0x8,DEFAULT)
0x0A8EC914,	//0x214a		VoC_lw16i(RL7_LO,0xe90)(lo)	|	VoC_add32_rr(ACC0,ACC0,REG45,DEFAULT)
0x2B800E90,	//0x214c		VoC_jal(CS_interpolate8x8_switch)(lo)	|	VoC_lw16i(RL7_LO,0xe90)(hi)
0xDF04139B,	//0x214e		VoC_pop32(ACC0,DEFAULT)	|	VoC_jal(CS_interpolate8x8_switch)(hi)
0x0EB00A8E,	//0x2150		VoC_lw16i(RL7_LO,0xeb0)
0x0CBC1406,	//0x2152		VoC_lw16_d(REG6,0xcbc)
0xE00778EE,	//0x2154		VoC_lw16i_short(REG7,0x0,IN_PARALLEL)	|	VoC_shr16_ri(REG6,0xfffffffd,DEFAULT)
0x1483C91C,	//0x2156		VoC_lw32_d(REG67,0x201e)(lo)	|	VoC_add32_rr(ACC0,ACC0,REG67,DEFAULT)
0xDF44201E,	//0x2158		VoC_push32(ACC0,DEFAULT)	|	VoC_lw32_d(REG67,0x201e)(hi)
0x139B2B80,	//0x215a		VoC_jal(CS_interpolate8x8_switch)
0x0A8EDF04,	//0x215c		VoC_lw16i(RL7_LO,0xed0)(lo)	|	VoC_pop32(ACC0,DEFAULT)
0x71040ED0,	//0x215e		VoC_lw16i_short(REG4,0x8,DEFAULT)	|	VoC_lw16i(RL7_LO,0xed0)(hi)
0xC914E005,	//0x2160		VoC_add32_rr(ACC0,ACC0,REG45,DEFAULT)	|	VoC_lw16i_short(REG5,0x0,IN_PARALLEL)
0x20201483,	//0x2162		VoC_lw32_d(REG67,0x2020)
0x139B2B80,	//0x2164		VoC_jal(CS_interpolate8x8_switch)
		//0x2166		CS_dec_brame_mb_inter4v_interpolate8x8_end
0x0D700A8E,	//0x2166		VoC_lw16i(RL7_LO,0xd70)
0x0CD61482,	//0x2168		VoC_lw32_d(REG45,0xcd6)
0x1403FA12,	//0x216a		VoC_lw16_d(REG3,0xcc0)(lo)	|	VoC_shr32_ri(REG45,0x2,DEFAULT)
0x09140CC0,	//0x216c		VoC_add32_rd(ACC0,REG45,0x2026)(lo)	|	VoC_lw16_d(REG3,0xcc0)(hi)
0xFBF42026,	//0x216e		VoC_shr32_ri(ACC0,0xfffffffe,DEFAULT)	|	VoC_add32_rd(ACC0,REG45,0x2026)(hi)
0x0CE01483,	//0x2170		VoC_lw32_d(REG67,0xce0)
0x0CE61503,	//0x2172		VoC_sw16_d(REG3,0xce6)
0x139B2B80,	//0x2174		VoC_jal(CS_interpolate8x8_switch)
0x0D900A8E,	//0x2176		VoC_lw16i(RL7_LO,0xd90)
0x0CD61482,	//0x2178		VoC_lw32_d(REG45,0xcd6)
0x0914FA12,	//0x217a		VoC_add32_rd(ACC0,REG45,0x2028)(lo)	|	VoC_shr32_ri(REG45,0x2,DEFAULT)
0xFBF42028,	//0x217c		VoC_shr32_ri(ACC0,0xfffffffe,DEFAULT)	|	VoC_add32_rd(ACC0,REG45,0x2028)(hi)
0x0CE01483,	//0x217e		VoC_lw32_d(REG67,0xce0)
0x139B2B80,	//0x2180		VoC_jal(CS_interpolate8x8_switch)
0x0EF00A8E,	//0x2182		VoC_lw16i(RL7_LO,0xef0)
0x0CD61482,	//0x2184		VoC_lw32_d(REG45,0xcd6)
0x1403FA12,	//0x2186		VoC_lw16_d(REG3,0xcc0)(lo)	|	VoC_shr32_ri(REG45,0x2,DEFAULT)
0x09140CC0,	//0x2188		VoC_add32_rd(ACC0,REG45,0x202c)(lo)	|	VoC_lw16_d(REG3,0xcc0)(hi)
0xFBF4202C,	//0x218a		VoC_shr32_ri(ACC0,0xfffffffe,DEFAULT)	|	VoC_add32_rd(ACC0,REG45,0x202c)(hi)
0x20221483,	//0x218c		VoC_lw32_d(REG67,0x2022)
0x0CE61503,	//0x218e		VoC_sw16_d(REG3,0xce6)
0x139B2B80,	//0x2190		VoC_jal(CS_interpolate8x8_switch)
0x0F100A8E,	//0x2192		VoC_lw16i(RL7_LO,0xf10)
0x0CD61482,	//0x2194		VoC_lw32_d(REG45,0xcd6)
0x0914FA12,	//0x2196		VoC_add32_rd(ACC0,REG45,0x202e)(lo)	|	VoC_shr32_ri(REG45,0x2,DEFAULT)
0xFBF4202E,	//0x2198		VoC_shr32_ri(ACC0,0xfffffffe,DEFAULT)	|	VoC_add32_rd(ACC0,REG45,0x202e)(hi)
0x20221483,	//0x219a		VoC_lw32_d(REG67,0x2022)
0x139B2B80,	//0x219c		VoC_jal(CS_interpolate8x8_switch)
0x0F482B80,	//0x219e		VoC_jal(CS_mp4_f_b_interpolate_add)
0x6C04DF82,	//0x21a0		VoC_bez16_d(CS_dec_brame_mb_inter4v07,0xcb6)(lo)	|	VoC_pop16(REG2,DEFAULT)
0x2B800CB6,	//0x21a2		VoC_jal(CS_decoder_mb_decode)(lo)	|	VoC_bez16_d(CS_dec_brame_mb_inter4v07,0xcb6)(hi)
0xDFA916DC,	//0x21a4		VoC_pop16(RA,DEFAULT)	|	VoC_jal(CS_decoder_mb_decode)(hi)
		//0x21a5		CS_dec_brame_mb_inter4v07
0xE580FFC0,	//0x21a6		VoC_return	|	VoC_NOP
		//0x21a8		CS_mpeg4_mbdec
0x0A9CDFE9,	//0x21a8		VoC_lw16i(WRAP0,0x0)(lo)	|	VoC_push16(RA,DEFAULT)
0x0A9D0000,	//0x21aa		VoC_lw16i(WRAP1,0x0)(lo)	|	VoC_lw16i(WRAP0,0x0)(hi)
0x0A9E0000,	//0x21ac		VoC_lw16i(WRAP2,0x0)(lo)	|	VoC_lw16i(WRAP1,0x0)(hi)
0x0A9F0000,	//0x21ae		VoC_lw16i(WRAP3,0x0)(lo)	|	VoC_lw16i(WRAP2,0x0)(hi)
0x70180000,	//0x21b0		VoC_lw16i_short(FORMAT16,0x0,DEFAULT)	|	VoC_lw16i(WRAP3,0x0)(hi)
0x1486F401,	//0x21b2		VoC_lw32_d(RL6,0xcec)(lo)	|	VoC_lw16i_short(FORMAT32,0x0,IN_PARALLEL)
0x141B0CEC,	//0x21b4		VoC_lw16_d(BITCACHE,0xcea)(lo)	|	VoC_lw32_d(RL6,0xcec)(hi)
0x0A820CEA,	//0x21b6		VoC_lw16i(REG2,0xe00)(lo)	|	VoC_lw16_d(BITCACHE,0xcea)(hi)
0x0A830E00,	//0x21b8		VoC_lw16i(REG3,0x200)(lo)	|	VoC_lw16i(REG2,0xe00)(hi)
0x14820200,	//0x21ba		VoC_lw32_d(REG45,0xcee)(lo)	|	VoC_lw16i(REG3,0x200)(hi)
0x7BF20CEE,	//0x21bc		VoC_shr32_ri(REG45,0xfffffffe,DEFAULT)	|	VoC_lw32_d(REG45,0xcee)(hi)
0xFFC0E007,	//0x21be		VoC_NAD	|	VoC_lw16i_short(REG7,0x0,IN_PARALLEL)
0x02302B80,	//0x21c0		VoC_jal(Coolsand_MPEG4RunDma)
0x1C000A82,	//0x21c2		VoC_lw16i(REG2,0x1c00)
0x7FFF0AC0,	//0x21c4		VoC_lw16i(REG0,0xffff)
0x0CAC1502,	//0x21c6		VoC_sw16_d(REG2,0xcac)
0x08000A86,	//0x21c8		VoC_lw16i(REG6,0x800)
0xFF44489A,	//0x21ca		VoC_lw32z(ACC0,IN_PARALLEL)	|	VoC_add32_rr(REG45,REG45,REG67,DEFAULT)
0x1A901500,	//0x21cc		VoC_sw16_d(REG0,0x1a90)
0x1A8E1584,	//0x21ce		VoC_sw32_d(ACC0,0x1a8e)
0x0CEE1582,	//0x21d0		VoC_sw32_d(REG45,0xcee)
0x1A911507,	//0x21d2		VoC_sw16_d(REG7,0x1a91)
0x44BAF022,	//0x21d4		VoC_bne16_rd(MPEG4_not_need_mv_buf,REG2,0x1a6e)(lo)	|	VoC_lw16i_short(REG2,0x1,DEFAULT)
0x0A821A6E,	//0x21d6		VoC_lw16i(REG2,0x7fc)(lo)	|	VoC_bne16_rd(MPEG4_not_need_mv_buf,REG2,0x1a6e)(hi)
0x140307FC,	//0x21d8		VoC_lw16_d(REG3,0xcb0)(lo)	|	VoC_lw16i(REG2,0x7fc)(hi)
0x78EB0CB0,	//0x21da		VoC_shr16_ri(REG3,0xfffffffd,DEFAULT)	|	VoC_lw16_d(REG3,0xcb0)(hi)
0x1482E106,	//0x21dc		VoC_lw32_d(REG45,0x1a80)(lo)	|	VoC_lw16i_short(REG6,0x10,IN_PARALLEL)
0x40F31A80,	//0x21de		VoC_add16_rr(REG3,REG3,REG6,DEFAULT)	|	VoC_lw32_d(REG45,0x1a80)(hi)
0xFFC0FBF2,	//0x21e0		VoC_NAD	|	VoC_shr32_ri(REG45,0xfffffffe,IN_PARALLEL)
0x02302B80,	//0x21e2		VoC_jal(Coolsand_MPEG4RunDma)
		//0x21e4		MPEG4_not_need_mv_buf
		//0x21e4		MPEG4_MB_LOOP_XY_START
0x7FFF0AC0,	//0x21e4		VoC_lw16i(REG0,0xffff)
0x1A904138,	//0x21e6		VoC_be16_rd(MPEG4_BS_ENOUGH,REG0,0x1a90)
0x1A901401,	//0x21e8		VoC_lw16_d(REG1,0x1a90)
0xE00778C1,	//0x21ea		VoC_lw16i_short(REG7,0x0,IN_PARALLEL)	|	VoC_shr16_ri(REG1,0xfffffff8,DEFAULT)
0x0E000A82,	//0x21ec		VoC_lw16i(REG2,0xe00)
0x0A83C08A,	//0x21ee		VoC_lw16i(REG3,0x100)(lo)	|	VoC_add16_rr(REG2,REG2,REG1,DEFAULT)
0x14820100,	//0x21f0		VoC_lw32_d(REG45,0xcee)(lo)	|	VoC_lw16i(REG3,0x100)(hi)
0xFFC00CEE,	//0x21f2		VoC_NAD	|	VoC_lw32_d(REG45,0xcee)(hi)
0x023C2B80,	//0x21f4		VoC_jal(Coolsand_MPEG4RunDmaCmdSend)
0x04000A86,	//0x21f6		VoC_lw16i(REG6,0x400)
0x1500C89A,	//0x21f8		VoC_sw16_d(REG0,0x1a90)(lo)	|	VoC_add32_rr(REG45,REG45,REG67,DEFAULT)
0x15821A90,	//0x21fa		VoC_sw32_d(REG45,0xcee)(lo)	|	VoC_sw16_d(REG0,0x1a90)(hi)
0xF0020CEE,	//0x21fc		VoC_lw16i_short(REG2,0x0,DEFAULT)	|	VoC_sw32_d(REG45,0xcee)(hi)
		//0x21fd		MPEG4_BS_ENOUGH
0x1A6E1404,	//0x21fe		VoC_lw16_d(REG4,0x1a6e)
0x25F23514,	//0x2200		VoC_be16_rr(mb_dec_for_I,REG2,REG4)
0x3514F022,	//0x2202		VoC_be16_rr(mb_dec_for_P,REG2,REG4)(lo)	|	VoC_lw16i_short(REG2,0x1,DEFAULT)
0xF04223A0,	//0x2204		VoC_lw16i_short(REG2,0x2,DEFAULT)	|	VoC_be16_rr(mb_dec_for_P,REG2,REG4)(hi)
0x22083514,	//0x2206		VoC_be16_rr(mb_dec_for_B,REG2,REG4)
		//0x2208		mb_dec_for_B
0x20086C04,	//0x2208		VoC_bez16_d(Decoder_bframe_notwaite_bs_dma,0x2008)
0x02452B80,	//0x220a		VoC_jal(Coolsand_MPEG4BsWaitLastDma)
		//0x220c		Decoder_bframe_notwaite_bs_dma
0x0CAE6E2C,	//0x220c		VoC_bnez16_d(mpeg4_dma_in_mode_mvs_for_b_end,0xcae)
0x0CAF1400,	//0x220e		VoC_lw16_d(REG0,0xcaf)
0x0CB01402,	//0x2210		VoC_lw16_d(REG2,0xcb0)
0xE0016043,	//0x2212		VoC_lw16i_short(REG1,0x0,IN_PARALLEL)	|	VoC_movreg16(REG3,REG2,DEFAULT)
0x1602FF44,	//0x2214		VoC_and16_ri(REG2,0x1)(lo)	|	VoC_lw32z(ACC0,DEFAULT)
0x15840001,	//0x2216		VoC_sw32_d(ACC0,0x21d6)(lo)	|	VoC_and16_ri(REG2,0x1)(hi)
0x158421D6,	//0x2218		VoC_sw32_d(ACC0,0x21d8)(lo)	|	VoC_sw32_d(ACC0,0x21d6)(hi)
0x409C21D8,	//0x221a		VoC_add16_rr(REG4,REG2,REG3,DEFAULT)	|	VoC_sw32_d(ACC0,0x21d8)(hi)
0x4420F80B,	//0x221c		VoC_mult16_rr(REG0,REG0,REG4,DEFAULT)	|	VoC_shr16_ri(REG3,0x1,IN_PARALLEL)
0x0A82C09B,	//0x221e		VoC_lw16i(REG2,0x203e)(lo)	|	VoC_add16_rr(REG3,REG2,REG3,IN_PARALLEL)
0xFBF8203E,	//0x2220		VoC_shr32_ri(REG01,0xffffffff,DEFAULT)	|	VoC_lw16i(REG2,0x203e)(hi)
0x203A0902,	//0x2222		VoC_add32_rd(REG45,REG01,0x203a)
0xFFC0780A,	//0x2224		VoC_NAD(IN_PARALLEL)	|	VoC_shr16_ri(REG2,0x1,DEFAULT)
0x02302B80,	//0x2226		VoC_jal(Coolsand_MPEG4RunDma)
0x0CAF1400,	//0x2228		VoC_lw16_d(REG0,0xcaf)
0x0CB01403,	//0x222a		VoC_lw16_d(REG3,0xcb0)
0x0A82F8EB,	//0x222c		VoC_lw16i(REG2,0x206c)(lo)	|	VoC_shr16_ri(REG3,0xfffffffd,DEFAULT)
0x4418206C,	//0x222e		VoC_mult16_rr(REG0,REG0,REG3,DEFAULT)	|	VoC_lw16i(REG2,0x206c)(hi)
0x780BF80A,	//0x2230		VoC_shr16_ri(REG3,0x1,DEFAULT)	|	VoC_shr16_ri(REG2,0x1,IN_PARALLEL)
0xFBF8E001,	//0x2232		VoC_shr32_ri(REG01,0xffffffff,DEFAULT)	|	VoC_lw16i_short(REG1,0x0,IN_PARALLEL)
0x203C0902,	//0x2234		VoC_add32_rd(REG45,REG01,0x203c)
0x02302B80,	//0x2236		VoC_jal(Coolsand_MPEG4RunDma)
		//0x2238		mpeg4_dma_in_mode_mvs_for_b_end
0x203E0A80,	//0x2238		VoC_lw16i(REG0,0x203e)
0x0CAE0700,	//0x223a		VoC_add16_rd(REG0,REG0,0xcae)
0xD801FFC0,	//0x223c		VoC_lw16_p(REG1,REG0,DEFAULT)	|	VoC_NOP
0x22683181,	//0x223e		VoC_bez16_r(Decoder_bframe_mode_not_coded_end,REG1)
0x0CAE1482,	//0x2240		VoC_lw32_d(REG45,0xcae)
0x0CBC082D,	//0x2242		VoC_mult16_rd(REG5,REG5,0xcbc)
0x412CFFC0,	//0x2244		VoC_add16_rr(REG4,REG4,REG5,DEFAULT)	|	VoC_NOP
0xFBF2E005,	//0x2246		VoC_shr32_ri(REG45,0xfffffffe,DEFAULT)	|	VoC_lw16i_short(REG5,0x0,IN_PARALLEL)
0x20240914,	//0x2248		VoC_add32_rd(ACC0,REG45,0x2024)
0xDF427BF4,	//0x224a		VoC_push32(REG45,IN_PARALLEL)	|	VoC_shr32_ri(ACC0,0xfffffffe,DEFAULT)
0x10022B80,	//0x224c		VoC_jal(CS_transfer16x16_copy_c)
0x20261484,	//0x224e		VoC_lw32_d(ACC0,0x2026)
0x0D700A8E,	//0x2250		VoC_lw16i(RL7_LO,0xd70)
0xFA12D90A,	//0x2252		VoC_shr32_ri(REG45,0x2,DEFAULT)	|	VoC_lw32_sd(REG45,0x0,DEFAULT)
0x0CAE0724,	//0x2254		VoC_add16_rd(REG4,REG4,0xcae)
0xFBF4C914,	//0x2256		VoC_shr32_ri(ACC0,0xfffffffe,DEFAULT)	|	VoC_add32_rr(ACC0,ACC0,REG45,DEFAULT)
0x126E2B80,	//0x2258		VoC_jal(CS_transfer8x8_copy_c)
0x20281484,	//0x225a		VoC_lw32_d(ACC0,0x2028)
0x0D900A8E,	//0x225c		VoC_lw16i(RL7_LO,0xd90)
0xFA12DF02,	//0x225e		VoC_shr32_ri(REG45,0x2,DEFAULT)	|	VoC_pop32(REG45,DEFAULT)
0x0CAE0724,	//0x2260		VoC_add16_rd(REG4,REG4,0xcae)
0xFBF4C914,	//0x2262		VoC_shr32_ri(ACC0,0xfffffffe,DEFAULT)	|	VoC_add32_rr(ACC0,ACC0,REG45,DEFAULT)
0x126E2B80,	//0x2264		VoC_jal(CS_transfer8x8_copy_c)
0x26862B00,	//0x2266		VoC_jump_lg(mb_dec_end)
		//0x2268		Decoder_bframe_mode_not_coded_end
0x0CAC1402,	//0x2268		VoC_lw16_d(REG2,0xcac)
0x1403F032,	//0x226a		VoC_lw16_d(REG3,0x2033)(lo)	|	VoC_lw16i_short(INC2,0x1,DEFAULT)
0xFFC02033,	//0x226c		VoC_NAD	|	VoC_lw16_d(REG3,0x2033)(hi)
0x03122B80,	//0x226e		VoC_jal(CS_check_resync_marker)
0x228A3183,	//0x2270		VoC_bez16_r(decoder_bframe1001,REG3)
0x20331403,	//0x2272		VoC_lw16_d(REG3,0x2033)
0x03402B80,	//0x2274		VoC_jal(CS_read_video_packet_header)
0x1507E0E0,	//0x2276		VoC_sw16_d(REG7,0xcb8)(lo)	|	VoC_movreg16(REG0,REG7,DEFAULT)
0x18050CB8,	//0x2278		VoC_lw16i_set_inc(REG1,0x0,0x1)(lo)	|	VoC_sw16_d(REG7,0xcb8)(hi)
0x14060000,	//0x227a		VoC_lw16_d(REG6,0xcb0)(lo)	|	VoC_lw16i_set_inc(REG1,0x0,0x1)(hi)
0xC3F70CB0,	//0x227c		VoC_sub16_rr(REG7,REG7,REG6,DEFAULT)	|	VoC_lw16_d(REG6,0xcb0)(hi)
		//0x227d		decoder_bframe1003
0x22823207,	//0x227e		VoC_bltz16_r(decoder_bframe1002,REG7)
0xE5FCDE08,	//0x2280		VoC_jump(decoder_bframe1003)	|	VoC_inc_p(REG1,DEFAULT)
		//0x2282		decoder_bframe1002
0x22863430,	//0x2282		VoC_bgt16_rr(decoder_bframe1004,REG6,REG0)
0xE5FDC230,	//0x2284		VoC_jump(decoder_bframe1002)	|	VoC_sub16_rr(REG0,REG0,REG6,DEFAULT)
		//0x2286		decoder_bframe1004
0xF6C377E4,	//0x2286		VoC_movreg16(REG3,REG6,IN_PARALLEL)	|	VoC_lw16i_short(REG4,0xffffffff,DEFAULT)
0x26862B00,	//0x2288		VoC_jump_lg(mb_dec_end)
		//0x228a		decoder_bframe1001
0x31C6E286,	//0x228a		VoC_bnez16_r(VoC_jude_temp_code_1,REG6)(lo)	|	VoC_rbinc_i(REG6,0x1,DEFAULT)
0xE28422BD,	//0x228c		VoC_rbinc_i(REG4,0x1,DEFAULT)	|	VoC_bnez16_r(VoC_jude_temp_code_1,REG6)(hi)
0x00001804,	//0x228e		VoC_lw16i_set_inc(REG0,0x0,0x1)
		//0x2290		Bframe_get_mbtype_begain
0x31C5E285,	//0x2290		VoC_bnez16_r(Bframe_get_mbtype_end,REG5)(lo)	|	VoC_rbinc_i(REG5,0x1,DEFAULT)
0xDE002298,	//0x2292		VoC_inc_p(REG0,DEFAULT)	|	VoC_bnez16_r(Bframe_get_mbtype_end,REG5)(hi)
0x5E663FA0,	//0x2294		VoC_bngt16_rd(Bframe_get_mbtype_begain,REG0,0x5e66)
0x7FFF0AC0,	//0x2296		VoC_lw16i(REG0,0xffff)
		//0x2298		Bframe_get_mbtype_end
0x31C4F005,	//0x2298		VoC_bnez16_r(Bframe_get_cbp,REG4)(lo)	|	VoC_lw16i_short(REG5,0x0,DEFAULT)
0xE299229E,	//0x229a		VoC_rbinc_i(REG5,0x6,DEFAULT)	|	VoC_bnez16_r(Bframe_get_cbp,REG4)(hi)
0xFFC07FC0,	//0x229c		VoC_NAD(IN_PARALLEL)	|	VoC_NOP
		//0x229e		Bframe_get_cbp
0x0CB61505,	//0x229e		VoC_sw16_d(REG5,0xcb6)
0x22C13185,	//0x22a0		VoC_bez16_r(VoC_jude_temp_code_end,REG5)
0x22C13180,	//0x22a2		VoC_bez16_r(VoC_jude_temp_code_end,REG0)
0xE0036284,	//0x22a4		VoC_lw16i_short(REG3,0x0,IN_PARALLEL)	|	VoC_rbinc_i(REG4,0x1,DEFAULT)
0x22AE3184,	//0x22a6		VoC_bez16_r(Bframe_get_dbquant,REG4)
0xE0236284,	//0x22a8		VoC_lw16i_short(REG3,0x2,IN_PARALLEL)	|	VoC_rbinc_i(REG4,0x1,DEFAULT)
0x22AE31C4,	//0x22aa		VoC_bnez16_r(Bframe_get_dbquant,REG4)
0xFFC077C3,	//0x22ac		VoC_NAD(IN_PARALLEL)	|	VoC_lw16i_short(REG3,0xfffffffe,DEFAULT)
		//0x22ae		Bframe_get_dbquant
0x0CAD071C,	//0x22ae		VoC_add16_rd(REG4,REG3,0xcad)
0x5E683824,	//0x22b0		VoC_bgt16_rd(Bframe_get_dbquant_bgt_1,REG4,0x5e68)
0xE5C7F024,	//0x22b2		VoC_jump(Bframe_get_dbquant_bgt_2)	|	VoC_lw16i_short(REG4,0x1,DEFAULT)
		//0x22b4		Bframe_get_dbquant_bgt_1
0x342CF3E5,	//0x22b4		VoC_bgt16_rr(Bframe_get_dbquant_bgt_2,REG5,REG4)(lo)	|	VoC_lw16i_short(REG5,0x1f,DEFAULT)
0xF3E422BA,	//0x22b6		VoC_lw16i_short(REG4,0x1f,DEFAULT)	|	VoC_bgt16_rr(Bframe_get_dbquant_bgt_2,REG5,REG4)(hi)
0xFFC07FC0,	//0x22b8		VoC_NAD(IN_PARALLEL)	|	VoC_NOP
		//0x22ba		Bframe_get_dbquant_bgt_2
0x0CAD1504,	//0x22ba		VoC_sw16_d(REG4,0xcad)
0xF004E5C5,	//0x22bc		VoC_lw16i_short(REG4,0x0,DEFAULT)	|	VoC_jump(VoC_jude_temp_code_end)
		//0x22bd		VoC_jude_temp_code_1
0x1504F080,	//0x22be		VoC_sw16_d(REG4,0xcb6)(lo)	|	VoC_lw16i_short(REG0,0x4,DEFAULT)
0xFF420CB6,	//0x22c0		VoC_lw32z(REG45,DEFAULT)	|	VoC_sw16_d(REG4,0xcb6)(hi)
		//0x22c1		VoC_jude_temp_code_end
0x22D03180,	//0x22c2		VoC_bez16_r(VoC_bframe_MODE_DIRECT,REG0)
0x3503F083,	//0x22c4		VoC_be16_rr(VoC_bframe_MODE_DIRECT_NONE_MV,REG0,REG3)(lo)	|	VoC_lw16i_short(REG3,0x4,DEFAULT)
0xF02322D8,	//0x22c6		VoC_lw16i_short(REG3,0x1,DEFAULT)	|	VoC_be16_rr(VoC_bframe_MODE_DIRECT_NONE_MV,REG0,REG3)(hi)
0x232E3503,	//0x22c8		VoC_be16_rr(VoC_bframe_MODE_INTERPOLATE,REG0,REG3)
0x3503F043,	//0x22ca		VoC_be16_rr(VoC_bframe_MODE_BACKWARD,REG0,REG3)(lo)	|	VoC_lw16i_short(REG3,0x2,DEFAULT)
0xF0632358,	//0x22cc		VoC_lw16i_short(REG3,0x3,DEFAULT)	|	VoC_be16_rr(VoC_bframe_MODE_BACKWARD,REG0,REG3)(hi)
0x237C3503,	//0x22ce		VoC_be16_rr(VoC_bframe_MODE_FORWARD,REG0,REG3)
		//0x22d0		VoC_bframe_MODE_DIRECT
0x7F44F024,	//0x22d0		VoC_lw32z(ACC0,DEFAULT)	|	VoC_lw16i_short(REG4,0x1,DEFAULT)
0x1504FF45,	//0x22d2		VoC_sw16_d(REG4,0xcba)(lo)	|	VoC_lw32z(ACC1,IN_PARALLEL)
0xFFC00CBA,	//0x22d4		VoC_NAD	|	VoC_sw16_d(REG4,0xcba)(hi)
0x0B2A2B80,	//0x22d6		VoC_jal(CS_dec_mv)
		//0x22d8		VoC_bframe_MODE_DIRECT_NONE_MV
0xDF465FC2,	//0x22d8		VoC_push32(RL6,IN_PARALLEL)	|	VoC_push16(REG2,DEFAULT)
0x0CAE1401,	//0x22da		VoC_lw16_d(REG1,0xcae)
0x206C0A83,	//0x22dc		VoC_lw16i(REG3,0x206c)
0xF40179E9,	//0x22de		VoC_lw16i_short(FORMAT32,0x0,IN_PARALLEL)	|	VoC_shru16_ri(REG1,0xfffffffd,DEFAULT)
0xF0054059,	//0x22e0		VoC_lw16i_short(INC1,0x1,IN_PARALLEL)	|	VoC_add16_rr(REG1,REG1,REG3,DEFAULT)
0x12E81804,	//0x22e2		VoC_lw16i_set_inc(REG0,0x12e8,0x1)
0x20121807,	//0x22e4		VoC_lw16i_set_inc(REG3,0x2012,0x1)
0x23242C08,	//0x22e6		VoC_loop_i(0x0,0x4)
0x0A34D896,	//0x22e8		VoC_multf32_rd(ACC0,REG6,0x21da)(lo)	|	VoC_lw16inc_p(REG6,REG1,DEFAULT)
0x140B21DA,	//0x22ea		VoC_lw16_d(ACC1_HI,0x21db)(lo)	|	VoC_multf32_rd(ACC0,REG6,0x21da)(hi)
0xFA8521DB,	//0x22ec		VoC_shr32_ri(ACC1,0x10,DEFAULT)	|	VoC_lw16_d(ACC1_HI,0x21db)(hi)
0x16542B80,	//0x22ee		VoC_jal(VOC_MPEG4_DIV_S)
0xE04EC0A2,	//0x22f0		VoC_movreg16(RL7_LO,REG2,DEFAULT)	|	VoC_add16_rr(REG2,REG2,REG4,DEFAULT)
0xD816DC82,	//0x22f2		VoC_lw16_p(REG6,REG1,DEFAULT)	|	VoC_sw16inc_p(REG2,REG0,DEFAULT)
0x21DA0A34,	//0x22f4		VoC_multf32_rd(ACC0,REG6,0x21da)
0x21DB140B,	//0x22f6		VoC_lw16_d(ACC1_HI,0x21db)
0x2B80FA85,	//0x22f8		VoC_jal(VOC_MPEG4_DIV_S)(lo)	|	VoC_shr32_ri(ACC1,0x10,DEFAULT)
0xC0AA1654,	//0x22fa		VoC_add16_rr(REG2,REG2,REG5,DEFAULT)	|	VoC_jal(VOC_MPEG4_DIV_S)(hi)
0x5E680789,	//0x22fc		VoC_sub16_rd(REG1,REG1,0x5e68)
0xDC82E04F,	//0x22fe		VoC_sw16inc_p(REG2,REG0,DEFAULT)	|	VoC_movreg16(RL7_HI,REG2,DEFAULT)
0x31C4D896,	//0x2300		VoC_bnez16_r(VoC_bframe_MODE_DIRECT_NONE_MV_X,REG4)(lo)	|	VoC_lw16inc_p(REG6,REG1,DEFAULT)
0x1407230F,	//0x2302		VoC_lw16_d(REG7,0x21da)(lo)	|	VoC_bnez16_r(VoC_bframe_MODE_DIRECT_NONE_MV_X,REG4)(hi)
0x07BF21DA,	//0x2304		VoC_sub16_rd(REG7,REG7,0x21db)(lo)	|	VoC_lw16_d(REG7,0x21da)(hi)
0xCDBC21DB,	//0x2306		VoC_multf32_rr(ACC0,REG6,REG7,DEFAULT)	|	VoC_sub16_rd(REG7,REG7,0x21db)(hi)
0x21DB140B,	//0x2308		VoC_lw16_d(ACC1_HI,0x21db)
0x2B80FA85,	//0x230a		VoC_jal(VOC_MPEG4_DIV_S)(lo)	|	VoC_shr32_ri(ACC1,0x10,DEFAULT)
0xDCB21654,	//0x230c		VoC_sw16inc_p(REG2,REG3,DEFAULT)	|	VoC_jal(VOC_MPEG4_DIV_S)(hi)
0xE1C7E5C5,	//0x230e		VoC_movreg16(REG7,RL7_LO,DEFAULT)	|	VoC_jump(VoC_bframe_MODE_DIRECT_NONE_MV_X_end)
		//0x230f		VoC_bframe_MODE_DIRECT_NONE_MV_X
0xFFC0C3F7,	//0x2310		VoC_NOP	|	VoC_sub16_rr(REG7,REG7,REG6,DEFAULT)
0xD896DCB7,	//0x2312		VoC_lw16inc_p(REG6,REG1,DEFAULT)	|	VoC_sw16inc_p(REG7,REG3,DEFAULT)
		//0x2313		VoC_bframe_MODE_DIRECT_NONE_MV_X_end
0x232131C5,	//0x2314		VoC_bnez16_r(VoC_bframe_MODE_DIRECT_NONE_MV_Y,REG5)
0x21DA1407,	//0x2316		VoC_lw16_d(REG7,0x21da)
0x21DB07BF,	//0x2318		VoC_sub16_rd(REG7,REG7,0x21db)
0x140BCDBC,	//0x231a		VoC_lw16_d(ACC1_HI,0x21db)(lo)	|	VoC_multf32_rr(ACC0,REG6,REG7,DEFAULT)
0xFA8521DB,	//0x231c		VoC_shr32_ri(ACC1,0x10,DEFAULT)	|	VoC_lw16_d(ACC1_HI,0x21db)(hi)
0x16542B80,	//0x231e		VoC_jal(VOC_MPEG4_DIV_S)
0xE1E2E5C4,	//0x2320		VoC_movreg16(REG2,RL7_HI,DEFAULT)	|	VoC_jump(VoC_bframe_MODE_DIRECT_NONE_MV_end)
		//0x2321		VoC_bframe_MODE_DIRECT_NONE_MV_Y
0xFFC0C2B2,	//0x2322		VoC_NOP	|	VoC_sub16_rr(REG2,REG2,REG6,DEFAULT)
		//0x2324		VoC_bframe_MODE_DIRECT_NONE_MV_end
		//0x2324		VoC_endloop0
0x5F82DCB2,	//0x2324		VoC_pop16(REG2,DEFAULT)	|	VoC_sw16inc_p(REG2,REG3,DEFAULT)
0xFFC0DF06,	//0x2326		VoC_NAD	|	VoC_pop32(RL6,IN_PARALLEL)
0x1FFC2B80,	//0x2328		VoC_jal(CS_dec_mb_bframe_inter4v)
0x0CAC1502,	//0x232a		VoC_sw16_d(REG2,0xcac)
0x26862B00,	//0x232c		VoC_jump_lg(mb_dec_end)
		//0x232e		VoC_bframe_MODE_INTERPOLATE
0x21D41404,	//0x232e		VoC_lw16_d(REG4,0x21d4)
0x21D61484,	//0x2330		VoC_lw32_d(ACC0,0x21d6)
0x1504E12A,	//0x2332		VoC_sw16_d(REG4,0xcba)(lo)	|	VoC_movreg16(ACC1_LO,ACC0_HI,DEFAULT)
0xFFC00CBA,	//0x2334		VoC_NAD	|	VoC_sw16_d(REG4,0xcba)(hi)
0x0B2A2B80,	//0x2336		VoC_jal(CS_dec_mv)
0x12E81808,	//0x2338		VoC_lw16i_set_inc(REG0,0x12e8,0x2)
0x21D61582,	//0x233a		VoC_sw32_d(REG45,0x21d6)
0xDDC2DDC2,	//0x233c		VoC_sw32inc_p(REG45,REG0,DEFAULT)	|	VoC_sw32inc_p(REG45,REG0,DEFAULT)
0xDDC2DDC2,	//0x233e		VoC_sw32inc_p(REG45,REG0,DEFAULT)	|	VoC_sw32inc_p(REG45,REG0,DEFAULT)
0x21D51404,	//0x2340		VoC_lw16_d(REG4,0x21d5)
0x21D81484,	//0x2342		VoC_lw32_d(ACC0,0x21d8)
0x1504E12A,	//0x2344		VoC_sw16_d(REG4,0xcba)(lo)	|	VoC_movreg16(ACC1_LO,ACC0_HI,DEFAULT)
0xFFC00CBA,	//0x2346		VoC_NAD	|	VoC_sw16_d(REG4,0xcba)(hi)
0x0B2A2B80,	//0x2348		VoC_jal(CS_dec_mv)
0x20121808,	//0x234a		VoC_lw16i_set_inc(REG0,0x2012,0x2)
0x21D81582,	//0x234c		VoC_sw32_d(REG45,0x21d8)
0xDDC2DDC2,	//0x234e		VoC_sw32inc_p(REG45,REG0,DEFAULT)	|	VoC_sw32inc_p(REG45,REG0,DEFAULT)
0xDDC2DDC2,	//0x2350		VoC_sw32inc_p(REG45,REG0,DEFAULT)	|	VoC_sw32inc_p(REG45,REG0,DEFAULT)
0x1FFC2B80,	//0x2352		VoC_jal(CS_dec_mb_bframe_inter4v)
0x0CAC1502,	//0x2354		VoC_sw16_d(REG2,0xcac)
0x26862B00,	//0x2356		VoC_jump_lg(mb_dec_end)
		//0x2358		VoC_bframe_MODE_BACKWARD
0x21D51404,	//0x2358		VoC_lw16_d(REG4,0x21d5)
0x21D81484,	//0x235a		VoC_lw32_d(ACC0,0x21d8)
0x1504E12A,	//0x235c		VoC_sw16_d(REG4,0xcba)(lo)	|	VoC_movreg16(ACC1_LO,ACC0_HI,DEFAULT)
0xFFC00CBA,	//0x235e		VoC_NAD	|	VoC_sw16_d(REG4,0xcba)(hi)
0x0B2A2B80,	//0x2360		VoC_jal(CS_dec_mv)
0x12E81808,	//0x2362		VoC_lw16i_set_inc(REG0,0x12e8,0x2)
0x21D81582,	//0x2364		VoC_sw32_d(REG45,0x21d8)
0xDDC2DDC2,	//0x2366		VoC_sw32inc_p(REG45,REG0,DEFAULT)	|	VoC_sw32inc_p(REG45,REG0,DEFAULT)
0xDDC2DDC2,	//0x2368		VoC_sw32inc_p(REG45,REG0,DEFAULT)	|	VoC_sw32inc_p(REG45,REG0,DEFAULT)
0x202A1484,	//0x236a		VoC_lw32_d(ACC0,0x202a)
0x202C1485,	//0x236c		VoC_lw32_d(ACC1,0x202c)
0x202E1480,	//0x236e		VoC_lw32_d(REG01,0x202e)
0x1A7A1584,	//0x2370		VoC_sw32_d(ACC0,0x1a7a)
0x1A7C1585,	//0x2372		VoC_sw32_d(ACC1,0x1a7c)
0x1A7E1580,	//0x2374		VoC_sw32_d(REG01,0x1a7e)
0x1F792B80,	//0x2376		VoC_jal(CS_dec_mb_bframe_inter1v)
0x0CAC1502,	//0x2378		VoC_sw16_d(REG2,0xcac)
0x26862B00,	//0x237a		VoC_jump_lg(mb_dec_end)
		//0x237c		VoC_bframe_MODE_FORWARD
0x21D41404,	//0x237c		VoC_lw16_d(REG4,0x21d4)
0x21D61484,	//0x237e		VoC_lw32_d(ACC0,0x21d6)
0x1504E12A,	//0x2380		VoC_sw16_d(REG4,0xcba)(lo)	|	VoC_movreg16(ACC1_LO,ACC0_HI,DEFAULT)
0xFFC00CBA,	//0x2382		VoC_NAD	|	VoC_sw16_d(REG4,0xcba)(hi)
0x0B2A2B80,	//0x2384		VoC_jal(CS_dec_mv)
0x12E81808,	//0x2386		VoC_lw16i_set_inc(REG0,0x12e8,0x2)
0x21D61582,	//0x2388		VoC_sw32_d(REG45,0x21d6)
0xDDC2DDC2,	//0x238a		VoC_sw32inc_p(REG45,REG0,DEFAULT)	|	VoC_sw32inc_p(REG45,REG0,DEFAULT)
0xDDC2DDC2,	//0x238c		VoC_sw32inc_p(REG45,REG0,DEFAULT)	|	VoC_sw32inc_p(REG45,REG0,DEFAULT)
0x20241484,	//0x238e		VoC_lw32_d(ACC0,0x2024)
0x20261485,	//0x2390		VoC_lw32_d(ACC1,0x2026)
0x20281480,	//0x2392		VoC_lw32_d(REG01,0x2028)
0x1A7A1584,	//0x2394		VoC_sw32_d(ACC0,0x1a7a)
0x1A7C1585,	//0x2396		VoC_sw32_d(ACC1,0x1a7c)
0x1A7E1580,	//0x2398		VoC_sw32_d(REG01,0x1a7e)
0x1F792B80,	//0x239a		VoC_jal(CS_dec_mb_bframe_inter1v)
0x0CAC1502,	//0x239c		VoC_sw16_d(REG2,0xcac)
0x26862B00,	//0x239e		VoC_jump_lg(mb_dec_end)
		//0x23a0		mb_dec_for_P
0x0CAE1404,	//0x23a0		VoC_lw16_d(REG4,0xcae)
0x203E0A83,	//0x23a2		VoC_lw16i(REG3,0x203e)
0xC0E3F000,	//0x23a4		VoC_add16_rr(REG3,REG3,REG4,DEFAULT)	|	VoC_lw16i_short(REG0,0x0,DEFAULT)
0xDC30F205,	//0x23a6		VoC_sw16_p(REG0,REG3,DEFAULT)	|	VoC_lw16i_short(REG5,0x10,DEFAULT)
0x21F11500,	//0x23a8		VoC_sw16_d(REG0,0x21f1)
0x0CB61500,	//0x23aa		VoC_sw16_d(REG0,0xcb6)
0x0CAC1402,	//0x23ac		VoC_lw16_d(REG2,0xcac)
0x0FF80A86,	//0x23ae		VoC_lw16i(REG6,0xff8)
0xF8E47027,	//0x23b0		VoC_shr16_ri(REG4,0xfffffffc,IN_PARALLEL)	|	VoC_lw16i_short(REG7,0x1,DEFAULT)
0xF00641A0,	//0x23b2		VoC_lw16i_short(INC2,0x1,IN_PARALLEL)	|	VoC_add16_rr(REG0,REG6,REG4,DEFAULT)
0xF4564028,	//0x23b4		VoC_lw16i_short(WRAP2,0xa,IN_PARALLEL)	|	VoC_add16_rr(REG0,REG0,REG5,DEFAULT)
0xE242C029,	//0x23b6		VoC_lbinc_p(REG2)	|	VoC_add16_rr(REG1,REG0,REG5,DEFAULT)
0x1580E2EA,	//0x23b8		VoC_sw32_d(REG01,0xcce)(lo)	|	VoC_rb_i(REG6,0xa,DEFAULT)
0x35B70CCE,	//0x23ba		VoC_bne16_rr(Decoder_pframe_101,REG6,REG7)(lo)	|	VoC_sw32_d(REG01,0xcce)(hi)
0xE2EA23C0,	//0x23bc		VoC_rb_i(REG6,0xa,DEFAULT)	|	VoC_bne16_rr(Decoder_pframe_101,REG6,REG7)(hi)
0xE2EAE242,	//0x23be		VoC_rb_i(REG6,0xa,DEFAULT)	|	VoC_lbinc_p(REG2)
		//0x23c0		Decoder_pframe_101
0x0B23F024,	//0x23c0		VoC_sub16_dr(REG3,0xcba,REG4)(lo)	|	VoC_lw16i_short(REG4,0x1,DEFAULT)
0xFFC00CBA,	//0x23c2		VoC_NAD	|	VoC_sub16_dr(REG3,0xcba,REG4)(hi)
0x03122B80,	//0x23c4		VoC_jal(CS_check_resync_marker)
0x20086C04,	//0x23c6		VoC_bez16_d(Decoder_pframe_notwaite_bs_dma,0x2008)
0x02452B80,	//0x23c8		VoC_jal(Coolsand_MPEG4BsWaitLastDma)
		//0x23ca		Decoder_pframe_notwaite_bs_dma
0x23FC3183,	//0x23ca		VoC_bez16_r(decoder_pframe1001,REG3)
0x0B1BF023,	//0x23cc		VoC_sub16_dr(REG3,0xcba,REG3)(lo)	|	VoC_lw16i_short(REG3,0x1,DEFAULT)
0x2B800CBA,	//0x23ce		VoC_jal(CS_read_video_packet_header)(lo)	|	VoC_sub16_dr(REG3,0xcba,REG3)(hi)
0xE0E00340,	//0x23d0		VoC_movreg16(REG0,REG7,DEFAULT)	|	VoC_jal(CS_read_video_packet_header)(hi)
0x0CB81507,	//0x23d2		VoC_sw16_d(REG7,0xcb8)
0x00001805,	//0x23d4		VoC_lw16i_set_inc(REG1,0x0,0x1)
0x0CB01406,	//0x23d6		VoC_lw16_d(REG6,0xcb0)
		//0x23d8		decoder_pframe1003
0x3207C3F7,	//0x23d8		VoC_bltz16_r(decoder_pframe1002,REG7)(lo)	|	VoC_sub16_rr(REG7,REG7,REG6,DEFAULT)
0xDE0823DE,	//0x23da		VoC_inc_p(REG1,DEFAULT)	|	VoC_bltz16_r(decoder_pframe1002,REG7)(hi)
0xFFC065FC,	//0x23dc		VoC_NAD(IN_PARALLEL)	|	VoC_jump(decoder_pframe1003)
		//0x23de		decoder_pframe1002
0x23E23430,	//0x23de		VoC_bgt16_rr(decoder_pframe1004,REG6,REG0)
0xE5FDC230,	//0x23e0		VoC_jump(decoder_pframe1002)	|	VoC_sub16_rr(REG0,REG0,REG6,DEFAULT)
		//0x23e2		decoder_pframe1004
0xF6C377E4,	//0x23e2		VoC_movreg16(REG3,REG6,IN_PARALLEL)	|	VoC_lw16i_short(REG4,0xffffffff,DEFAULT)
0xE07578F3,	//0x23e4		VoC_lw16i_short(REG5,0x7,IN_PARALLEL)	|	VoC_shr16_ri(REG3,0xfffffffe,DEFAULT)
0x12F81820,	//0x23e6		VoC_lw16i_set_inc(REG0,0x12f8,0x8)
0xFF4440EB,	//0x23e8		VoC_lw32z(ACC0,IN_PARALLEL)	|	VoC_add16_rr(REG3,REG3,REG5,DEFAULT)
0x23EC2E18,	//0x23ea		VoC_loop_r(0,REG3)
		//0x23ec		VoC_endloop0
0xE0155C84,	//0x23ec		VoC_lw16i_short(REG5,0x1,IN_PARALLEL)	|	VoC_sw16inc_p(REG4,REG0,DEFAULT)
0x0FFC1810,	//0x23ee		VoC_lw16i_set_inc(REG0,0xffc,0x4)
0x00000AC9,	//0x23f0		VoC_lw16i(ACC0_HI,0x8000)
0xDDC4C1AE,	//0x23f2		VoC_sw32inc_p(ACC0,REG0,DEFAULT)	|	VoC_add16_rr(REG6,REG6,REG5,DEFAULT)
0xDDC4DE00,	//0x23f4		VoC_sw32inc_p(ACC0,REG0,DEFAULT)	|	VoC_inc_p(REG0,DEFAULT)
0x23FB2E30,	//0x23f6		VoC_loop_r(0,REG6)
0xDE00DE00,	//0x23f8		VoC_inc_p(REG0,DEFAULT)	|	VoC_inc_p(REG0,DEFAULT)
0xDDC4DDC4,	//0x23fa		VoC_sw32inc_p(ACC0,REG0,DEFAULT)	|	VoC_sw32inc_p(ACC0,REG0,DEFAULT)
		//0x23fb		VoC_endloop0
		//0x23fc		decoder_pframe1001
0x0CB01404,	//0x23fc		VoC_lw16_d(REG4,0xcb0)
0xF8E45FC2,	//0x23fe		VoC_shr16_ri(REG4,0xfffffffc,IN_PARALLEL)	|	VoC_push16(REG2,DEFAULT)
0x12F80A80,	//0x2400		VoC_lw16i(REG0,0x12f8)
0x0CAE1401,	//0x2402		VoC_lw16_d(REG1,0xcae)
0xE08278E1,	//0x2404		VoC_lw16i_short(REG2,0x8,IN_PARALLEL)	|	VoC_shr16_ri(REG1,0xfffffffc,DEFAULT)
0xC010400E,	//0x2406		VoC_add16_rr(REG0,REG0,REG2,IN_PARALLEL)	|	VoC_add16_rr(REG6,REG0,REG1,DEFAULT)
0xC0204196,	//0x2408		VoC_add16_rr(REG0,REG0,REG4,IN_PARALLEL)	|	VoC_add16_rr(REG6,REG6,REG2,DEFAULT)
0xE1827809,	//0x240a		VoC_lw16i_short(REG2,0x18,IN_PARALLEL)	|	VoC_shr16_ri(REG1,0x1,DEFAULT)
0x18D81506,	//0x240c		VoC_sw16_d(REG6,0x18d8)
0x18D91500,	//0x240e		VoC_sw16_d(REG0,0x18d9)
0xF80C4010,	//0x2410		VoC_shr16_ri(REG4,0x1,IN_PARALLEL)	|	VoC_add16_rr(REG0,REG0,REG2,DEFAULT)
0xC020400E,	//0x2412		VoC_add16_rr(REG0,REG0,REG4,IN_PARALLEL)	|	VoC_add16_rr(REG6,REG0,REG1,DEFAULT)
0xE1024025,	//0x2414		VoC_lw16i_short(REG2,0x10,IN_PARALLEL)	|	VoC_add16_rr(REG5,REG0,REG4,DEFAULT)
0xC1554013,	//0x2416		VoC_add16_rr(REG5,REG5,REG2,IN_PARALLEL)	|	VoC_add16_rr(REG3,REG0,REG2,DEFAULT)
0xDF8240CB,	//0x2418		VoC_pop16(REG2,IN_PARALLEL)	|	VoC_add16_rr(REG3,REG3,REG1,DEFAULT)
0x18DA1506,	//0x241a		VoC_sw16_d(REG6,0x18da)
0x18DB1500,	//0x241c		VoC_sw16_d(REG0,0x18db)
0x18DC1503,	//0x241e		VoC_sw16_d(REG3,0x18dc)
0x18DD1505,	//0x2420		VoC_sw16_d(REG5,0x18dd)
0x31C6E286,	//0x2422		VoC_bnez16_r(Decoder_pframe_not_coded,REG6)(lo)	|	VoC_rbinc_i(REG6,0x1,DEFAULT)
0x62E424DC,	//0x2424		VoC_rb_i(REG4,0x9,DEFAULT)	|	VoC_bnez16_r(Decoder_pframe_not_coded,REG6)(hi)
0x0A83E005,	//0x2426		VoC_lw16i(REG3,0x100)(lo)	|	VoC_lw16i_short(REG5,0x0,IN_PARALLEL)
0x34230100,	//0x2428		VoC_bgt16_rr(Decoder_pframe_103,REG4,REG3)(lo)	|	VoC_lw16i(REG3,0x100)(hi)
0xE083242C,	//0x242a		VoC_movreg16(REG3,REG4,DEFAULT)	|	VoC_bgt16_rr(Decoder_pframe_103,REG4,REG3)(hi)
		//0x242c		Decoder_pframe_103
0x0CB31505,	//0x242c		VoC_sw16_d(REG5,0xcb3)
0x60380A84,	//0x242e		VoC_lw16i(REG4,0x6038)
0xC0E3F8FB,	//0x2430		VoC_add16_rr(REG3,REG3,REG4,DEFAULT)	|	VoC_shr16_ri(REG3,0xffffffff,DEFAULT)
0xD99AFFC0,	//0x2432		VoC_lw32_p(REG45,REG3,DEFAULT)	|	VoC_NOP
0xF6866329,	//0x2434		VoC_movreg16(REG6,REG4,IN_PARALLEL)	|	VoC_rbinc_r(REG5,REG5,DEFAULT)
0x00071606,	//0x2436		VoC_and16_ri(REG6,0x7)
0xE0157824,	//0x2438		VoC_lw16i_short(REG5,0x1,IN_PARALLEL)	|	VoC_shr16_ri(REG4,0x4,DEFAULT)
0xE0417060,	//0x243a		VoC_lw16i_short(REG1,0x4,IN_PARALLEL)	|	VoC_lw16i_short(REG0,0x3,DEFAULT)
0x24423530,	//0x243c		VoC_be16_rr(Decoder_pframe_104,REG6,REG0)
0x24423531,	//0x243e		VoC_be16_rr(Decoder_pframe_104,REG6,REG1)
0xFFC07005,	//0x2440		VoC_NAD(IN_PARALLEL)	|	VoC_lw16i_short(REG5,0x0,DEFAULT)
		//0x2442		Decoder_pframe_104
0x244A3185,	//0x2442		VoC_bez16_r(Decoder_pframe_105,REG5)
0xFFC0E287,	//0x2444		VoC_NOP	|	VoC_rbinc_i(REG7,0x1,DEFAULT)
0x0CB31507,	//0x2446		VoC_sw16_d(REG7,0xcb3)
0xFFC065CB,	//0x2448		VoC_NAD(IN_PARALLEL)	|	VoC_jump(Decoder_pframe_GMC_jude_end)
		//0x244a		Decoder_pframe_105
0x21F06C09,	//0x244a		VoC_bez16_d(Decoder_pframe_GMC_jude_end,0x21f0)
0x3430F020,	//0x244c		VoC_bgt16_rr(Decoder_pframe_GMC_jude_end,REG6,REG0)(lo)	|	VoC_lw16i_short(REG0,0x1,DEFAULT)
0xE2872453,	//0x244e		VoC_rbinc_i(REG7,0x1,DEFAULT)	|	VoC_bgt16_rr(Decoder_pframe_GMC_jude_end,REG6,REG0)(hi)
0x1507FFC0,	//0x2450		VoC_sw16_d(REG7,0x21f1)(lo)	|	VoC_NOP
0xF15E21F1,	//0x2452		VoC_lw16i_short(WRAP2,0xa,DEFAULT)	|	VoC_sw16_d(REG7,0x21f1)(hi)
		//0x2453		Decoder_pframe_GMC_jude_end
0xE242FFC0,	//0x2454		VoC_lbinc_p(REG2)	|	VoC_NOP
0xF40662DB,	//0x2456		VoC_lw16i_short(WRAP2,0x0,IN_PARALLEL)	|	VoC_rb_i(REG7,0x6,DEFAULT)
0xF6CF78FF,	//0x2458		VoC_movreg16(RL7_HI,REG6,IN_PARALLEL)	|	VoC_shr16_ri(REG7,0xffffffff,DEFAULT)
0x623A0A83,	//0x245a		VoC_lw16i(REG3,0x623a)
0xFFC0C0FB,	//0x245c		VoC_NOP	|	VoC_add16_rr(REG3,REG3,REG7,DEFAULT)
0xE010599B,	//0x245e		VoC_lw16i_short(REG0,0x1,IN_PARALLEL)	|	VoC_lw32_p(REG67,REG3,DEFAULT)
0xC340633B,	//0x2460		VoC_sub16_rr(REG0,REG5,REG0,IN_PARALLEL)	|	VoC_rbinc_r(REG7,REG7,DEFAULT)
0x3240F1E1,	//0x2462		VoC_bnltz16_r(Decoder_pframe_106,REG0)(lo)	|	VoC_lw16i_short(REG1,0xf,DEFAULT)
0xC2762466,	//0x2464		VoC_sub16_rr(REG6,REG1,REG6,DEFAULT)	|	VoC_bnltz16_r(Decoder_pframe_106,REG0)(hi)
		//0x2466		Decoder_pframe_106
0x78F6F15E,	//0x2466		VoC_shr16_ri(REG6,0xfffffffe,DEFAULT)	|	VoC_lw16i_short(WRAP2,0xa,DEFAULT)
0x6466E010,	//0x2468		VoC_or16_rr(REG6,REG4,DEFAULT)	|	VoC_lw16i_short(REG0,0x1,IN_PARALLEL)
0xE242E041,	//0x246a		VoC_lbinc_p(REG2)	|	VoC_lw16i_short(REG1,0x4,IN_PARALLEL)
0xF40661E4,	//0x246c		VoC_lw16i_short(WRAP2,0x0,IN_PARALLEL)	|	VoC_movreg16(REG4,RL7_HI,DEFAULT)
0x0CB61506,	//0x246e		VoC_sw16_d(REG6,0xcb6)
0x0CAD1405,	//0x2470		VoC_lw16_d(REG5,0xcad)
0x24783520,	//0x2472		VoC_be16_rr(Decoder_pframe_107,REG4,REG0)
0x24783521,	//0x2474		VoC_be16_rr(Decoder_pframe_107,REG4,REG1)
0xFFC065D3,	//0x2476		VoC_NAD(IN_PARALLEL)	|	VoC_jump(Decoder_pframe_108)
		//0x2478		Decoder_pframe_107
0xEFF06289,	//0x2478		VoC_lw16i_short(REG0,0xffffffff,IN_PARALLEL)	|	VoC_rbinc_i(REG5,0x2,DEFAULT)
0x3429F021,	//0x247a		VoC_bgt16_rr(Decoder_pframe_109,REG5,REG1)(lo)	|	VoC_lw16i_short(REG1,0x1,DEFAULT)
0xC22D247F,	//0x247c		VoC_sub16_rr(REG5,REG0,REG5,DEFAULT)	|	VoC_bgt16_rr(Decoder_pframe_109,REG5,REG1)(hi)
0xC34DE5C2,	//0x247e		VoC_sub16_rr(REG5,REG5,REG1,DEFAULT)	|	VoC_jump(Decoder_pframe_110)
		//0x247f		Decoder_pframe_109
		//0x2480		Decoder_pframe_110
0x0CAD072D,	//0x2480		VoC_add16_rd(REG5,REG5,0xcad)
0x3405F3E0,	//0x2482		VoC_bgt16_rr(Decoder_pframe_111,REG0,REG5)(lo)	|	VoC_lw16i_short(REG0,0x1f,DEFAULT)
0xE0052486,	//0x2484		VoC_movreg16(REG5,REG0,DEFAULT)	|	VoC_bgt16_rr(Decoder_pframe_111,REG0,REG5)(hi)
		//0x2486		Decoder_pframe_111
0x24893429,	//0x2486		VoC_bgt16_rr(Decoder_pframe_108,REG5,REG1)
0xF040E025,	//0x2488		VoC_lw16i_short(REG0,0x2,DEFAULT)	|	VoC_movreg16(REG5,REG1,DEFAULT)
		//0x2489		Decoder_pframe_108
0x0CAD1505,	//0x248a		VoC_sw16_d(REG5,0xcad)
0x21F16C06,	//0x248c		VoC_bez16_d(Decoder_pframe_gmc_end,0x21f1)
0x1B6F2B80,	//0x248e		VoC_jal(CS_dec_mb_gmc)
0xFFC065CC,	//0x2490		VoC_NAD(IN_PARALLEL)	|	VoC_jump(Decoder_pframe_114)
		//0x2492		Decoder_pframe_gmc_end
0x24BE3420,	//0x2492		VoC_bgt16_rr(Decoder_pframe_112,REG4,REG0)
0x3521F041,	//0x2494		VoC_be16_rr(Decoder_pframe_113,REG4,REG1)(lo)	|	VoC_lw16i_short(REG1,0x2,DEFAULT)
0x2B80249A,	//0x2496		VoC_jal(CS_dec_mb_inter1v)(lo)	|	VoC_be16_rr(Decoder_pframe_113,REG4,REG1)(hi)
0xE5C31797,	//0x2498		VoC_jump(Decoder_pframe_114)	|	VoC_jal(CS_dec_mb_inter1v)(hi)
		//0x249a		Decoder_pframe_113
0x1BC42B80,	//0x249a		VoC_jal(CS_dec_mb_inter4v)
		//0x249c		Decoder_pframe_114
0xE08377E7,	//0x249c		VoC_lw16i_short(REG3,0x8,IN_PARALLEL)	|	VoC_lw16i_short(REG7,0xffffffff,DEFAULT)
0x18D91404,	//0x249e		VoC_lw16_d(REG4,0x18d9)
0x18D81405,	//0x24a0		VoC_lw16_d(REG5,0x18d8)
0xDC47411E,	//0x24a2		VoC_sw16_p(REG7,REG4,IN_PARALLEL)	|	VoC_add16_rr(REG6,REG4,REG3,DEFAULT)
0xDC57435C,	//0x24a4		VoC_sw16_p(REG7,REG5,IN_PARALLEL)	|	VoC_sub16_rr(REG4,REG5,REG3,DEFAULT)
0x18DA1405,	//0x24a6		VoC_lw16_d(REG5,0x18da)
0xC35D5868,	//0x24a8		VoC_sub16_rr(REG5,REG5,REG3,IN_PARALLEL)	|	VoC_lw16_p(ACC0_LO,REG6,DEFAULT)
0x1406DC67,	//0x24aa		VoC_lw16_d(REG6,0x18db)(lo)	|	VoC_sw16_p(REG7,REG6,DEFAULT)
0xDC4818DB,	//0x24ac		VoC_sw16_p(ACC0_LO,REG4,DEFAULT)	|	VoC_lw16_d(REG6,0x18db)(hi)
0x18DC1404,	//0x24ae		VoC_lw16_d(REG4,0x18dc)
0xC31C5868,	//0x24b0		VoC_sub16_rr(REG4,REG4,REG3,IN_PARALLEL)	|	VoC_lw16_p(ACC0_LO,REG6,DEFAULT)
0x1406DC67,	//0x24b2		VoC_lw16_d(REG6,0x18dd)(lo)	|	VoC_sw16_p(REG7,REG6,DEFAULT)
0xDC5818DD,	//0x24b4		VoC_sw16_p(ACC0_LO,REG5,DEFAULT)	|	VoC_lw16_d(REG6,0x18dd)(hi)
0xDC67D868,	//0x24b6		VoC_sw16_p(REG7,REG6,DEFAULT)	|	VoC_lw16_p(ACC0_LO,REG6,DEFAULT)
0x1502DC48,	//0x24b8		VoC_sw16_d(REG2,0xcac)(lo)	|	VoC_sw16_p(ACC0_LO,REG4,DEFAULT)
0x2B000CAC,	//0x24ba		VoC_jump_lg(mb_dec_end)(lo)	|	VoC_sw16_d(REG2,0xcac)(hi)
0xFFC02686,	//0x24bc		VoC_NAD	|	VoC_jump_lg(mb_dec_end)(hi)
		//0x24be		Decoder_pframe_112
0xE0847F44,	//0x24be		VoC_lw16i_short(REG4,0x8,IN_PARALLEL)	|	VoC_lw32z(ACC0,DEFAULT)
0x180BF085,	//0x24c0		VoC_lw16i_set_inc(REG3,0x12e8,0x2)(lo)	|	VoC_lw16i_short(REG5,0x4,DEFAULT)
0x180812E8,	//0x24c2		VoC_lw16i_set_inc(REG0,0xffc,0x2)(lo)	|	VoC_lw16i_set_inc(REG3,0x12e8,0x2)(hi)
0x20090FFC,	//0x24c4		VoC_lw16d_set_inc(REG1,0xcce,0x2)(lo)	|	VoC_lw16i_set_inc(REG0,0xffc,0x2)(hi)
0x68470CCE,	//0x24c6		VoC_loop_i_short(0x2,DEFAULT)	|	VoC_lw16d_set_inc(REG1,0xcce,0x2)(hi)
0xDDDCC061,	//0x24c8		VoC_sw32inc_p(ACC0,REG3,DEFAULT)	|	VoC_add16_rr(REG1,REG1,REG4,IN_PARALLEL)
0xDDC4DDC4,	//0x24ca		VoC_sw32inc_p(ACC0,REG0,DEFAULT)	|	VoC_sw32inc_p(ACC0,REG0,DEFAULT)
0xC0285DCC,	//0x24cc		VoC_add16_rr(REG0,REG0,REG5,IN_PARALLEL)	|	VoC_sw32inc_p(ACC0,REG1,DEFAULT)
		//0x24ce		VoC_endloop0
0x1404DDCC,	//0x24ce		VoC_lw16_d(REG4,0xcae)(lo)	|	VoC_sw32inc_p(ACC0,REG1,DEFAULT)
0xF8EC0CAE,	//0x24d0		VoC_shr16_ri(REG4,0xfffffffd,DEFAULT)	|	VoC_lw16_d(REG4,0xcae)(hi)
0x206C180B,	//0x24d2		VoC_lw16i_set_inc(REG3,0x206c,0x2)
0xE842C11B,	//0x24d4		VoC_loop_i_short(0x2,DEFAULT)	|	VoC_add16_rr(REG3,REG4,REG3,DEFAULT)
0xDDDCDDDC,	//0x24d6		VoC_sw32inc_p(ACC0,REG3,DEFAULT)	|	VoC_sw32inc_p(ACC0,REG3,DEFAULT)
		//0x24d7		VoC_endloop0
0x06DE2B80,	//0x24d8		VoC_jal(CS_decoder_mbintra)
0x26862B00,	//0x24da		VoC_jump_lg(mb_dec_end)
		//0x24dc		Decoder_pframe_not_coded
0x0CAC1502,	//0x24dc		VoC_sw16_d(REG2,0xcac)
0x21F06C06,	//0x24de		VoC_bez16_d(Decoder_pframe_not_coded_gmc_end,0x21f0)
0x1B6F2B80,	//0x24e0		VoC_jal(CS_dec_mb_gmc)
0x25D22B00,	//0x24e2		VoC_jump_lg(CS_dec_mb_inter_notcode_lowres_end)
		//0x24e4		Decoder_pframe_not_coded_gmc_end
0xE0847F44,	//0x24e4		VoC_lw16i_short(REG4,0x8,IN_PARALLEL)	|	VoC_lw32z(ACC0,DEFAULT)
0x180BF085,	//0x24e6		VoC_lw16i_set_inc(REG3,0x12e8,0x2)(lo)	|	VoC_lw16i_short(REG5,0x4,DEFAULT)
0x180812E8,	//0x24e8		VoC_lw16i_set_inc(REG0,0xffc,0x2)(lo)	|	VoC_lw16i_set_inc(REG3,0x12e8,0x2)(hi)
0x20090FFC,	//0x24ea		VoC_lw16d_set_inc(REG1,0xcce,0x2)(lo)	|	VoC_lw16i_set_inc(REG0,0xffc,0x2)(hi)
0x68470CCE,	//0x24ec		VoC_loop_i_short(0x2,DEFAULT)	|	VoC_lw16d_set_inc(REG1,0xcce,0x2)(hi)
0xDDDCC061,	//0x24ee		VoC_sw32inc_p(ACC0,REG3,DEFAULT)	|	VoC_add16_rr(REG1,REG1,REG4,IN_PARALLEL)
0xDDC4DDC4,	//0x24f0		VoC_sw32inc_p(ACC0,REG0,DEFAULT)	|	VoC_sw32inc_p(ACC0,REG0,DEFAULT)
0xC0285DCC,	//0x24f2		VoC_add16_rr(REG0,REG0,REG5,IN_PARALLEL)	|	VoC_sw32inc_p(ACC0,REG1,DEFAULT)
		//0x24f4		VoC_endloop0
0x1401DDCC,	//0x24f4		VoC_lw16_d(REG1,0xcae)(lo)	|	VoC_sw32inc_p(ACC0,REG1,DEFAULT)
0x18070CAE,	//0x24f6		VoC_lw16i_set_inc(REG3,0x203e,0x1)(lo)	|	VoC_lw16_d(REG1,0xcae)(hi)
0x7200203E,	//0x24f8		VoC_lw16i_short(REG0,0x10,DEFAULT)	|	VoC_lw16i_set_inc(REG3,0x203e,0x1)(hi)
0xF8E9C0CB,	//0x24fa		VoC_shr16_ri(REG1,0xfffffffd,DEFAULT)	|	VoC_add16_rr(REG3,REG3,REG1,IN_PARALLEL)
0x180BDC30,	//0x24fc		VoC_lw16i_set_inc(REG3,0x206c,0x2)(lo)	|	VoC_sw16_p(REG0,REG3,DEFAULT)
0xC0CB206C,	//0x24fe		VoC_add16_rr(REG3,REG3,REG1,DEFAULT)	|	VoC_lw16i_set_inc(REG3,0x206c,0x2)(hi)
0xDDDCE842,	//0x2500		VoC_sw32inc_p(ACC0,REG3,DEFAULT)	|	VoC_loop_i_short(0x2,DEFAULT)
		//0x2502		VoC_endloop0
0x6E04DDDC,	//0x2502		VoC_bnez16_d(CS_dec_mb_inter_notcode_lowres_1,0x2009)(lo)	|	VoC_sw32inc_p(ACC0,REG3,DEFAULT)
0x2B002009,	//0x2504		VoC_jump_lg(CS_dec_mb_inter_notcode_lowres_0)(lo)	|	VoC_bnez16_d(CS_dec_mb_inter_notcode_lowres_1,0x2009)(hi)
0xDF4625A0,	//0x2506		VoC_push32(RL6,DEFAULT)	|	VoC_jump_lg(CS_dec_mb_inter_notcode_lowres_0)(hi)
		//0x2507		CS_dec_mb_inter_notcode_lowres_1
0x1481DF47,	//0x2508		VoC_lw32_d(REG23,0xcae)(lo)	|	VoC_push32(RL7,DEFAULT)
0x18090CAE,	//0x250a		VoC_lw16i_set_inc(REG1,0x12e8,0x2)(lo)	|	VoC_lw32_d(REG23,0xcae)(hi)
0xFDE912E8,	//0x250c		VoC_shru32_ri(REG23,0xfffffffd,DEFAULT)	|	VoC_lw16i_set_inc(REG1,0x12e8,0x2)(hi)
0xD897D896,	//0x250e		VoC_lw16inc_p(REG7,REG1,DEFAULT)	|	VoC_lw16inc_p(REG6,REG1,DEFAULT)
0x0CBC1400,	//0x2510		VoC_lw16_d(REG0,0xcbc)
0xDF43FBFB,	//0x2512		VoC_push32(REG67,DEFAULT)	|	VoC_shr32_ri(REG67,0xffffffff,DEFAULT)
0xCC1ADF41,	//0x2514		VoC_multf32_rr(REG45,REG0,REG3,DEFAULT)	|	VoC_push32(REG23,DEFAULT)
0xFA81E043,	//0x2516		VoC_shr32_ri(REG23,0x10,DEFAULT)	|	VoC_movreg16(REG3,REG2,DEFAULT)
0x0CF00A8A,	//0x2518		VoC_lw16i(ACC1_LO,0xcf0)
0x1484C88A,	//0x251a		VoC_lw32_d(ACC0,0x1a7a)(lo)	|	VoC_add32_rr(REG45,REG45,REG23,DEFAULT)
0xFBF41A7A,	//0x251c		VoC_shr32_ri(ACC0,0xfffffffe,DEFAULT)	|	VoC_lw32_d(ACC0,0x1a7a)(hi)
0xFF14C8A2,	//0x251e		VoC_movreg32(ACC0,REG45,DEFAULT)	|	VoC_add32_rr(REG45,REG45,ACC0,DEFAULT)
0x5E662982,	//0x2520		VoC_and32_rd(REG45,0x5e66)
0x1400E08B,	//0x2522		VoC_lw16_d(REG0,0xcbc)(lo)	|	VoC_movreg16(ACC1_HI,REG4,DEFAULT)
0x78100CBC,	//0x2524		VoC_shr16_ri(REG0,0x2,DEFAULT)	|	VoC_lw16_d(REG0,0xcbc)(hi)
0x0A82E091,	//0x2526		VoC_lw16i(REG2,0xc6f)(lo)	|	VoC_lw16i_short(REG1,0x9,IN_PARALLEL)
0x70630C6F,	//0x2528		VoC_lw16i_short(REG3,0x3,DEFAULT)	|	VoC_lw16i(REG2,0xc6f)(hi)
0xFF46F004,	//0x252a		VoC_lw32z(RL6,DEFAULT)	|	VoC_lw16i_short(INC0,0x1,IN_PARALLEL)
0x10000A8D,	//0x252c		VoC_lw16i(RL6_HI,0x1000)
0xFFC04218,	//0x252e		VoC_NAD(IN_PARALLEL)	|	VoC_sub16_rr(REG0,REG0,REG3,DEFAULT)
0x025F2B80,	//0x2530		VoC_jal(Coolsand_MPEG4Run2DDmaCmdSend)
0x200C1583,	//0x2532		VoC_sw32_d(REG67,0x200c)
0x200E1585,	//0x2534		VoC_sw32_d(ACC1,0x200e)
0xDF03DF01,	//0x2536		VoC_pop32(REG67,DEFAULT)	|	VoC_pop32(REG23,DEFAULT)
0xF80B780A,	//0x2538		VoC_shr16_ri(REG3,0x1,IN_PARALLEL)	|	VoC_shr16_ri(REG2,0x1,DEFAULT)
0x0CBC1400,	//0x253a		VoC_lw16_d(REG0,0xcbc)
0x0A8AF808,	//0x253c		VoC_lw16i(ACC1_LO,0xd10)(lo)	|	VoC_shr16_ri(REG0,0x1,DEFAULT)
0xCC1A0D10,	//0x253e		VoC_multf32_rr(REG45,REG0,REG3,DEFAULT)	|	VoC_lw16i(ACC1_LO,0xd10)(hi)
0xFA81E043,	//0x2540		VoC_shr32_ri(REG23,0x10,DEFAULT)	|	VoC_movreg16(REG3,REG2,DEFAULT)
0x1A7C1484,	//0x2542		VoC_lw32_d(ACC0,0x1a7c)
0xFBFBC88A,	//0x2544		VoC_shr32_ri(REG67,0xffffffff,DEFAULT)	|	VoC_add32_rr(REG45,REG45,REG23,DEFAULT)
0x0CD41582,	//0x2546		VoC_sw32_d(REG45,0xcd4)
0xC8A2FBF4,	//0x2548		VoC_add32_rr(REG45,REG45,ACC0,DEFAULT)	|	VoC_shr32_ri(ACC0,0xfffffffe,DEFAULT)
0x2982FF14,	//0x254a		VoC_and32_rd(REG45,0x5e66)(lo)	|	VoC_movreg32(ACC0,REG45,DEFAULT)
0xE08B5E66,	//0x254c		VoC_movreg16(ACC1_HI,REG4,DEFAULT)	|	VoC_and32_rd(REG45,0x5e66)(hi)
0x030C2B80,	//0x254e		VoC_jal(Coolsand_MPEG4WaiteLastDma)
0x0CBC1400,	//0x2550		VoC_lw16_d(REG0,0xcbc)
0xE0517818,	//0x2552		VoC_lw16i_short(REG1,0x5,IN_PARALLEL)	|	VoC_shr16_ri(REG0,0x3,DEFAULT)
0x0CD30A82,	//0x2554		VoC_lw16i(REG2,0xcd3)
0xF0047043,	//0x2556		VoC_lw16i_short(INC0,0x1,IN_PARALLEL)	|	VoC_lw16i_short(REG3,0x2,DEFAULT)
0x0A8DFF46,	//0x2558		VoC_lw16i(RL6_HI,0x1000)(lo)	|	VoC_lw32z(RL6,DEFAULT)
0xC2181000,	//0x255a		VoC_sub16_rr(REG0,REG0,REG3,DEFAULT)	|	VoC_lw16i(RL6_HI,0x1000)(hi)
0x025F2B80,	//0x255c		VoC_jal(Coolsand_MPEG4Run2DDmaCmdSend)
0xDF45DF43,	//0x255e		VoC_push32(ACC1,DEFAULT)	|	VoC_push32(REG67,DEFAULT)
0x200C1483,	//0x2560		VoC_lw32_d(REG67,0x200c)
0x200E1485,	//0x2562		VoC_lw32_d(ACC1,0x200e)
0x0B7D2B80,	//0x2564		VoC_jal(CS_put_h264_chroma_mc8_8_c)
0x030C2B80,	//0x2566		VoC_jal(Coolsand_MPEG4WaiteLastDma)
0x026B2B80,	//0x2568		VoC_jal(Coolsand_MPEG4YDmaCmdSend)
0x0CD41482,	//0x256a		VoC_lw32_d(REG45,0xcd4)
0x0D180A8A,	//0x256c		VoC_lw16i(ACC1_LO,0xd18)
0x1A7E1484,	//0x256e		VoC_lw32_d(ACC0,0x1a7e)
0xC8A2FDF4,	//0x2570		VoC_add32_rr(REG45,REG45,ACC0,DEFAULT)	|	VoC_shru32_ri(ACC0,0xfffffffe,DEFAULT)
0xFFC07F14,	//0x2572		VoC_NAD(IN_PARALLEL)	|	VoC_movreg32(ACC0,REG45,DEFAULT)
0x030C2B80,	//0x2574		VoC_jal(Coolsand_MPEG4WaiteLastDma)
0x0CBC1400,	//0x2576		VoC_lw16_d(REG0,0xcbc)
0xE0517818,	//0x2578		VoC_lw16i_short(REG1,0x5,IN_PARALLEL)	|	VoC_shr16_ri(REG0,0x3,DEFAULT)
0x0CE70A82,	//0x257a		VoC_lw16i(REG2,0xce7)
0xF0047043,	//0x257c		VoC_lw16i_short(INC0,0x1,IN_PARALLEL)	|	VoC_lw16i_short(REG3,0x2,DEFAULT)
0x0A8DFF46,	//0x257e		VoC_lw16i(RL6_HI,0x1000)(lo)	|	VoC_lw32z(RL6,DEFAULT)
0xC2181000,	//0x2580		VoC_sub16_rr(REG0,REG0,REG3,DEFAULT)	|	VoC_lw16i(RL6_HI,0x1000)(hi)
0x025F2B80,	//0x2582		VoC_jal(Coolsand_MPEG4Run2DDmaCmdSend)
0x200A150A,	//0x2584		VoC_sw16_d(ACC1_LO,0x200a)
0xD913D90D,	//0x2586		VoC_lw32_sd(REG67,0x1,DEFAULT)	|	VoC_lw32_sd(ACC1,0x0,DEFAULT)
0x00000A88,	//0x2588		VoC_lw16i(ACC0_LO,0x0)
0x0C9D2B80,	//0x258a		VoC_jal(CS_put_h264_chroma_mc4_8_c)
0x030C2B80,	//0x258c		VoC_jal(Coolsand_MPEG4WaiteLastDma)
0x02BE2B80,	//0x258e		VoC_jal(Coolsand_MPEG4UDmaCmdSend)
0xDF03DF05,	//0x2590		VoC_pop32(REG67,DEFAULT)	|	VoC_pop32(ACC1,DEFAULT)
0x00280A88,	//0x2592		VoC_lw16i(ACC0_LO,0x28)
0x200A140A,	//0x2594		VoC_lw16_d(ACC1_LO,0x200a)
0x0C9D2B80,	//0x2596		VoC_jal(CS_put_h264_chroma_mc4_8_c)
0x030C2B80,	//0x2598		VoC_jal(Coolsand_MPEG4WaiteLastDma)
0x02E52B80,	//0x259a		VoC_jal(Coolsand_MPEG4VDmaCmdSend)
0xDF06DF07,	//0x259c		VoC_pop32(RL6,DEFAULT)	|	VoC_pop32(RL7,DEFAULT)
0x25D22B00,	//0x259e		VoC_jump_lg(CS_dec_mb_inter_notcode_lowres_end)
		//0x25a0		CS_dec_mb_inter_notcode_lowres_0
0x0CAE1482,	//0x25a0		VoC_lw32_d(REG45,0xcae)
0x0CBC082D,	//0x25a2		VoC_mult16_rd(REG5,REG5,0xcbc)
0x0CAC1502,	//0x25a4		VoC_sw16_d(REG2,0xcac)
0xE005412C,	//0x25a6		VoC_lw16i_short(REG5,0x0,IN_PARALLEL)	|	VoC_add16_rr(REG4,REG4,REG5,DEFAULT)
0x0914FBF2,	//0x25a8		VoC_add32_rd(ACC0,REG45,0x1a7a)(lo)	|	VoC_shr32_ri(REG45,0xfffffffe,DEFAULT)
0x7BF41A7A,	//0x25aa		VoC_shr32_ri(ACC0,0xfffffffe,DEFAULT)	|	VoC_add32_rd(ACC0,REG45,0x1a7a)(hi)
0xDF42FF43,	//0x25ac		VoC_push32(REG45,DEFAULT)	|	VoC_lw32z(REG67,IN_PARALLEL)
0x12222B80,	//0x25ae		VoC_jal(CS_interpolate16x16_switch)
0x0D700A8E,	//0x25b0		VoC_lw16i(RL7_LO,0xd70)
0xFA12DF02,	//0x25b2		VoC_shr32_ri(REG45,0x2,DEFAULT)	|	VoC_pop32(REG45,DEFAULT)
0x0CAE0724,	//0x25b4		VoC_add16_rd(REG4,REG4,0xcae)
0x0CC01403,	//0x25b6		VoC_lw16_d(REG3,0xcc0)
0x0CC01403,	//0x25b8		VoC_lw16_d(REG3,0xcc0)
0x1A7C0914,	//0x25ba		VoC_add32_rd(ACC0,REG45,0x1a7c)
0x5F42FBF4,	//0x25bc		VoC_push32(REG45,DEFAULT)	|	VoC_shr32_ri(ACC0,0xfffffffe,DEFAULT)
0x1503FF43,	//0x25be		VoC_sw16_d(REG3,0xce6)(lo)	|	VoC_lw32z(REG67,IN_PARALLEL)
0xFFC00CE6,	//0x25c0		VoC_NAD	|	VoC_sw16_d(REG3,0xce6)(hi)
0x139B2B80,	//0x25c2		VoC_jal(CS_interpolate8x8_switch)
0x0D900A8E,	//0x25c4		VoC_lw16i(RL7_LO,0xd90)
0x0914DF02,	//0x25c6		VoC_add32_rd(ACC0,REG45,0x1a7e)(lo)	|	VoC_pop32(REG45,DEFAULT)
0x14031A7E,	//0x25c8		VoC_lw16_d(REG3,0xcc1)(lo)	|	VoC_add32_rd(ACC0,REG45,0x1a7e)(hi)
0x7BF40CC1,	//0x25ca		VoC_shr32_ri(ACC0,0xfffffffe,DEFAULT)	|	VoC_lw16_d(REG3,0xcc1)(hi)
0x1503FF43,	//0x25cc		VoC_sw16_d(REG3,0xce6)(lo)	|	VoC_lw32z(REG67,IN_PARALLEL)
0xFFC00CE6,	//0x25ce		VoC_NAD	|	VoC_sw16_d(REG3,0xce6)(hi)
0x139B2B80,	//0x25d0		VoC_jal(CS_interpolate8x8_switch)
		//0x25d2		CS_dec_mb_inter_notcode_lowres_end
0xE08377E7,	//0x25d2		VoC_lw16i_short(REG3,0x8,IN_PARALLEL)	|	VoC_lw16i_short(REG7,0xffffffff,DEFAULT)
0x18D91404,	//0x25d4		VoC_lw16_d(REG4,0x18d9)
0x18D81405,	//0x25d6		VoC_lw16_d(REG5,0x18d8)
0xDC47411E,	//0x25d8		VoC_sw16_p(REG7,REG4,IN_PARALLEL)	|	VoC_add16_rr(REG6,REG4,REG3,DEFAULT)
0xDC57435C,	//0x25da		VoC_sw16_p(REG7,REG5,IN_PARALLEL)	|	VoC_sub16_rr(REG4,REG5,REG3,DEFAULT)
0x18DA1405,	//0x25dc		VoC_lw16_d(REG5,0x18da)
0xC35D5868,	//0x25de		VoC_sub16_rr(REG5,REG5,REG3,IN_PARALLEL)	|	VoC_lw16_p(ACC0_LO,REG6,DEFAULT)
0x1406DC67,	//0x25e0		VoC_lw16_d(REG6,0x18db)(lo)	|	VoC_sw16_p(REG7,REG6,DEFAULT)
0xDC4818DB,	//0x25e2		VoC_sw16_p(ACC0_LO,REG4,DEFAULT)	|	VoC_lw16_d(REG6,0x18db)(hi)
0x18DC1404,	//0x25e4		VoC_lw16_d(REG4,0x18dc)
0xC31C5868,	//0x25e6		VoC_sub16_rr(REG4,REG4,REG3,IN_PARALLEL)	|	VoC_lw16_p(ACC0_LO,REG6,DEFAULT)
0x1406DC67,	//0x25e8		VoC_lw16_d(REG6,0x18dd)(lo)	|	VoC_sw16_p(REG7,REG6,DEFAULT)
0xDC5818DD,	//0x25ea		VoC_sw16_p(ACC0_LO,REG5,DEFAULT)	|	VoC_lw16_d(REG6,0x18dd)(hi)
0xDC67D868,	//0x25ec		VoC_sw16_p(REG7,REG6,DEFAULT)	|	VoC_lw16_p(ACC0_LO,REG6,DEFAULT)
0x2B00DC48,	//0x25ee		VoC_jump_lg(mb_dec_end)(lo)	|	VoC_sw16_p(ACC0_LO,REG4,DEFAULT)
0xFFC02686,	//0x25f0		VoC_NAD	|	VoC_jump_lg(mb_dec_end)(hi)
		//0x25f2		mb_dec_for_I
0x0CAC1402,	//0x25f2		VoC_lw16_d(REG2,0xcac)
0xF4567032,	//0x25f4		VoC_lw16i_short(WRAP2,0xa,IN_PARALLEL)	|	VoC_lw16i_short(INC2,0x1,DEFAULT)
0xE242F027,	//0x25f6		VoC_lbinc_p(REG2)	|	VoC_lw16i_short(REG7,0x1,DEFAULT)
0x35B7E2E6,	//0x25f8		VoC_bne16_rr(decoder_iframe100,REG6,REG7)(lo)	|	VoC_rb_i(REG6,0x9,DEFAULT)
0xE2A625FE,	//0x25fa		VoC_rbinc_i(REG6,0x9,DEFAULT)	|	VoC_bne16_rr(decoder_iframe100,REG6,REG7)(hi)
0xE2E6E242,	//0x25fc		VoC_rb_i(REG6,0x9,DEFAULT)	|	VoC_lbinc_p(REG2)
		//0x25fe		decoder_iframe100
0xFFC07003,	//0x25fe		VoC_NAD(IN_PARALLEL)	|	VoC_lw16i_short(REG3,0x0,DEFAULT)
0x03122B80,	//0x2600		VoC_jal(CS_check_resync_marker)
0x20086C04,	//0x2602		VoC_bez16_d(Decoder_iframe_notwaite_bs_dma,0x2008)
0x02452B80,	//0x2604		VoC_jal(Coolsand_MPEG4BsWaitLastDma)
		//0x2606		Decoder_iframe_notwaite_bs_dma
0x261E3183,	//0x2606		VoC_bez16_r(decoder_iframe1001,REG3)
0x2B80F003,	//0x2608		VoC_jal(CS_read_video_packet_header)(lo)	|	VoC_lw16i_short(REG3,0x0,DEFAULT)
0xE0E00340,	//0x260a		VoC_movreg16(REG0,REG7,DEFAULT)	|	VoC_jal(CS_read_video_packet_header)(hi)
0x0CB81507,	//0x260c		VoC_sw16_d(REG7,0xcb8)
0x00001805,	//0x260e		VoC_lw16i_set_inc(REG1,0x0,0x1)
0x0CB01406,	//0x2610		VoC_lw16_d(REG6,0xcb0)
		//0x2612		decoder_iframe1003
0x3207C3F7,	//0x2612		VoC_bltz16_r(decoder_iframe1002,REG7)(lo)	|	VoC_sub16_rr(REG7,REG7,REG6,DEFAULT)
0xDE082618,	//0x2614		VoC_inc_p(REG1,DEFAULT)	|	VoC_bltz16_r(decoder_iframe1002,REG7)(hi)
0xFFC065FC,	//0x2616		VoC_NAD(IN_PARALLEL)	|	VoC_jump(decoder_iframe1003)
		//0x2618		decoder_iframe1002
0x261C3430,	//0x2618		VoC_bgt16_rr(decoder_iframe1004,REG6,REG0)
0xE5FDC230,	//0x261a		VoC_jump(decoder_iframe1002)	|	VoC_sub16_rr(REG0,REG0,REG6,DEFAULT)
		//0x261c		decoder_iframe1004
0xFFC07FC0,	//0x261c		VoC_NAD(IN_PARALLEL)	|	VoC_NOP
		//0x261e		decoder_iframe1001
0x0CB01404,	//0x261e		VoC_lw16_d(REG4,0xcb0)
0xF8E45FC2,	//0x2620		VoC_shr16_ri(REG4,0xfffffffc,IN_PARALLEL)	|	VoC_push16(REG2,DEFAULT)
0x12F80A80,	//0x2622		VoC_lw16i(REG0,0x12f8)
0x0CAE1401,	//0x2624		VoC_lw16_d(REG1,0xcae)
0xE08278E1,	//0x2626		VoC_lw16i_short(REG2,0x8,IN_PARALLEL)	|	VoC_shr16_ri(REG1,0xfffffffc,DEFAULT)
0xC010400E,	//0x2628		VoC_add16_rr(REG0,REG0,REG2,IN_PARALLEL)	|	VoC_add16_rr(REG6,REG0,REG1,DEFAULT)
0xC0204196,	//0x262a		VoC_add16_rr(REG0,REG0,REG4,IN_PARALLEL)	|	VoC_add16_rr(REG6,REG6,REG2,DEFAULT)
0xE1827809,	//0x262c		VoC_lw16i_short(REG2,0x18,IN_PARALLEL)	|	VoC_shr16_ri(REG1,0x1,DEFAULT)
0x18D81506,	//0x262e		VoC_sw16_d(REG6,0x18d8)
0x18D91500,	//0x2630		VoC_sw16_d(REG0,0x18d9)
0xF80C4010,	//0x2632		VoC_shr16_ri(REG4,0x1,IN_PARALLEL)	|	VoC_add16_rr(REG0,REG0,REG2,DEFAULT)
0xC020400E,	//0x2634		VoC_add16_rr(REG0,REG0,REG4,IN_PARALLEL)	|	VoC_add16_rr(REG6,REG0,REG1,DEFAULT)
0xE1024025,	//0x2636		VoC_lw16i_short(REG2,0x10,IN_PARALLEL)	|	VoC_add16_rr(REG5,REG0,REG4,DEFAULT)
0xC1554013,	//0x2638		VoC_add16_rr(REG5,REG5,REG2,IN_PARALLEL)	|	VoC_add16_rr(REG3,REG0,REG2,DEFAULT)
0xDF8240CB,	//0x263a		VoC_pop16(REG2,IN_PARALLEL)	|	VoC_add16_rr(REG3,REG3,REG1,DEFAULT)
0x18DA1506,	//0x263c		VoC_sw16_d(REG6,0x18da)
0x18DB1500,	//0x263e		VoC_sw16_d(REG0,0x18db)
0x18DC1503,	//0x2640		VoC_sw16_d(REG3,0x18dc)
0x18DD1505,	//0x2642		VoC_sw16_d(REG5,0x18dd)
0xFFC0F15E,	//0x2644		VoC_NOP	|	VoC_lw16i_short(WRAP2,0xa,DEFAULT)
0xE2E6E242,	//0x2646		VoC_rb_i(REG6,0x9,DEFAULT)	|	VoC_lbinc_p(REG2)
0xF8FEF81E,	//0x2648		VoC_shr16_ri(REG6,0xffffffff,DEFAULT)	|	VoC_shr16_ri(REG6,0x3,DEFAULT)
0x648E0A83,	//0x264a		VoC_lw16i(REG3,0x648e)
0xE242C0F3,	//0x264c		VoC_lbinc_p(REG2)	|	VoC_add16_rr(REG3,REG3,REG6,DEFAULT)
0xE077599A,	//0x264e		VoC_lw16i_short(REG7,0x7,IN_PARALLEL)	|	VoC_lw32_p(REG45,REG3,DEFAULT)
0xF6866329,	//0x2650		VoC_movreg16(REG6,REG4,IN_PARALLEL)	|	VoC_rbinc_r(REG5,REG5,DEFAULT)
0xF826643C,	//0x2652		VoC_shr16_ri(REG6,0x4,IN_PARALLEL)	|	VoC_and16_rr(REG4,REG7,DEFAULT)
0x6287E242,	//0x2654		VoC_rbinc_i(REG7,0x1,DEFAULT)	|	VoC_lbinc_p(REG2)
0x62DBF406,	//0x2656		VoC_rb_i(REG7,0x6,DEFAULT)	|	VoC_lw16i_short(WRAP2,0x0,IN_PARALLEL)
0xF8FFF6E3,	//0x2658		VoC_shr16_ri(REG7,0xffffffff,DEFAULT)	|	VoC_movreg16(REG3,REG7,IN_PARALLEL)
0x623A0A80,	//0x265a		VoC_lw16i(REG0,0x623a)
0x1503C038,	//0x265c		VoC_sw16_d(REG3,0xcb3)(lo)	|	VoC_add16_rr(REG0,REG0,REG7,DEFAULT)
0xD9800CB3,	//0x265e		VoC_lw32_p(REG01,REG0,DEFAULT)	|	VoC_sw16_d(REG3,0xcb3)(hi)
0x78F0E30B,	//0x2660		VoC_shr16_ri(REG0,0xfffffffe,DEFAULT)	|	VoC_rbinc_r(REG7,REG1,DEFAULT)
0xE470F6E1,	//0x2662		VoC_or16_rr(REG0,REG6,DEFAULT)	|	VoC_movreg16(REG1,REG7,IN_PARALLEL)
0x1500F087,	//0x2664		VoC_sw16_d(REG0,0xcb6)(lo)	|	VoC_lw16i_short(REG7,0x4,DEFAULT)
0x14030CB6,	//0x2666		VoC_lw16_d(REG3,0xcad)(lo)	|	VoC_sw16_d(REG0,0xcb6)(hi)
0x35A70CAD,	//0x2668		VoC_bne16_rr(decoder_iframe101,REG4,REG7)(lo)	|	VoC_lw16_d(REG3,0xcad)(hi)
0xE28B267D,	//0x266a		VoC_rbinc_i(REG7,0x2,DEFAULT)	|	VoC_bne16_rr(decoder_iframe101,REG4,REG7)(hi)
0xEFF060E3,	//0x266c		VoC_lw16i_short(REG0,0xffffffff,IN_PARALLEL)	|	VoC_movreg16(REG3,REG7,DEFAULT)
0x3419F021,	//0x266e		VoC_bgt16_rr(Decoder_iframe_109,REG3,REG1)(lo)	|	VoC_lw16i_short(REG1,0x1,DEFAULT)
0xC21B2673,	//0x2670		VoC_sub16_rr(REG3,REG0,REG3,DEFAULT)	|	VoC_bgt16_rr(Decoder_iframe_109,REG3,REG1)(hi)
0xC2CBE5C2,	//0x2672		VoC_sub16_rr(REG3,REG3,REG1,DEFAULT)	|	VoC_jump(Decoder_iframe_110)
		//0x2673		Decoder_iframe_109
		//0x2674		Decoder_iframe_110
0x0CAD071B,	//0x2674		VoC_add16_rd(REG3,REG3,0xcad)
0x3403F3E0,	//0x2676		VoC_bgt16_rr(Decoder_iframe_111,REG0,REG3)(lo)	|	VoC_lw16i_short(REG0,0x1f,DEFAULT)
0xE003267A,	//0x2678		VoC_movreg16(REG3,REG0,DEFAULT)	|	VoC_bgt16_rr(Decoder_iframe_111,REG0,REG3)(hi)
		//0x267a		Decoder_iframe_111
0x267D3419,	//0x267a		VoC_bgt16_rr(decoder_iframe101,REG3,REG1)
0xF15EE023,	//0x267c		VoC_lw16i_short(WRAP2,0xa,DEFAULT)	|	VoC_movreg16(REG3,REG1,DEFAULT)
		//0x267d		decoder_iframe101
0xE242FFC0,	//0x267e		VoC_lbinc_p(REG2)	|	VoC_NOP
0x1503F01E,	//0x2680		VoC_sw16_d(REG3,0xcad)(lo)	|	VoC_lw16i_short(WRAP2,0x0,DEFAULT)
0xFFC00CAD,	//0x2682		VoC_NAD	|	VoC_sw16_d(REG3,0xcad)(hi)
0x06DE2B80,	//0x2684		VoC_jal(CS_decoder_mbintra)
		//0x2686		mb_dec_end
0x0CAD1400,	//0x2686		VoC_lw16_d(REG0,0xcad)
0x1A940A81,	//0x2688		VoC_lw16i(REG1,0x1a94)
0x0CAE0709,	//0x268a		VoC_add16_rd(REG1,REG1,0xcae)
0x1A931500,	//0x268c		VoC_sw16_d(REG0,0x1a93)
0x1400DC10,	//0x268e		VoC_lw16_d(REG0,0xcac)(lo)	|	VoC_sw16_p(REG0,REG1,DEFAULT)
0x0A810CAC,	//0x2690		VoC_lw16i(REG1,0x1e00)(lo)	|	VoC_lw16_d(REG0,0xcac)(hi)
0x14021E00,	//0x2692		VoC_lw16_d(REG2,0x1a8e)(lo)	|	VoC_lw16i(REG1,0x1e00)(hi)
0x16021A8E,	//0x2694		VoC_and16_ri(REG2,0x1)(lo)	|	VoC_lw16_d(REG2,0x1a8e)(hi)
0x31C20001,	//0x2696		VoC_bnez16_r(MPEG4_BS_CONSUME_0,REG2)(lo)	|	VoC_and16_ri(REG2,0x1)(hi)
0x340826A4,	//0x2698		VoC_bgt16_rr(MPEG4_BS_CONSUME_1,REG1,REG0)(lo)	|	VoC_bnez16_r(MPEG4_BS_CONSUME_0,REG2)(hi)
0xF02326AC,	//0x269a		VoC_lw16i_short(REG3,0x1,DEFAULT)	|	VoC_bgt16_rr(MPEG4_BS_CONSUME_1,REG1,REG0)(hi)
0x1A8E071B,	//0x269c		VoC_add16_rd(REG3,REG3,0x1a8e)
0x1A901502,	//0x269e		VoC_sw16_d(REG2,0x1a90)
0x1A8E1503,	//0x26a0		VoC_sw16_d(REG3,0x1a8e)
0xFFC065CA,	//0x26a2		VoC_NAD(IN_PARALLEL)	|	VoC_jump(MPEG4_BS_CONSUME_1)
		//0x26a4		MPEG4_BS_CONSUME_0
0x26AC3488,	//0x26a4		VoC_bngt16_rr(MPEG4_BS_CONSUME_1,REG1,REG0)
0x1A8E0713,	//0x26a6		VoC_add16_rd(REG3,REG2,0x1a8e)
0x1A901502,	//0x26a8		VoC_sw16_d(REG2,0x1a90)
0x1A8E1503,	//0x26aa		VoC_sw16_d(REG3,0x1a8e)
		//0x26ac		MPEG4_BS_CONSUME_1
0x20091401,	//0x26ac		VoC_lw16_d(REG1,0x2009)
0x26B93181,	//0x26ae		VoC_bez16_r(MPEG4_DMA_lowres0_OUT,REG1)
0x030C2B80,	//0x26b0		VoC_jal(Coolsand_MPEG4WaiteLastDma)
0x1401F020,	//0x26b2		VoC_lw16_d(REG1,0x1a91)(lo)	|	VoC_lw16i_short(REG0,0x1,DEFAULT)
0x31C11A91,	//0x26b4		VoC_bnez16_r(MPEG4_MB_LOOP_Y_END,REG1)(lo)	|	VoC_lw16_d(REG1,0x1a91)(hi)
0x2B0027C0,	//0x26b6		VoC_jump_lg(MPEG4_MB_FOR_LOOP)(lo)	|	VoC_bnez16_r(MPEG4_MB_LOOP_Y_END,REG1)(hi)
0xF00E2742,	//0x26b8		VoC_lw16i_short(RL7_LO,0x0,DEFAULT)	|	VoC_jump_lg(MPEG4_MB_FOR_LOOP)(hi)
		//0x26b9		MPEG4_DMA_lowres0_OUT
0x40000A8F,	//0x26ba		VoC_lw16i(RL7_HI,0x4000)
0x00100A84,	//0x26bc		VoC_lw16i(REG4,0x10)
0x1A701484,	//0x26be		VoC_lw32_d(ACC0,0x1a70)
0x0CAE1406,	//0x26c0		VoC_lw16_d(REG6,0xcae)
0xE00778E6,	//0x26c2		VoC_lw16i_short(REG7,0x0,IN_PARALLEL)	|	VoC_shr16_ri(REG6,0xfffffffc,DEFAULT)
0x1400C91C,	//0x26c4		VoC_lw16_d(REG0,0xcbc)(lo)	|	VoC_add32_rr(ACC0,ACC0,REG67,DEFAULT)
0x0A820CBC,	//0x26c6		VoC_lw16i(REG2,0x678)(lo)	|	VoC_lw16_d(REG0,0xcbc)(hi)
0x71060678,	//0x26c8		VoC_lw16i_short(REG6,0x8,DEFAULT)	|	VoC_lw16i(REG2,0x678)(hi)
0x78EDF605,	//0x26ca		VoC_shr16_ri(REG5,0xfffffffd,DEFAULT)	|	VoC_movreg16(REG5,REG0,IN_PARALLEL)
0xF043E007,	//0x26cc		VoC_lw16i_short(REG3,0x2,DEFAULT)	|	VoC_lw16i_short(REG7,0x0,IN_PARALLEL)
0xF810653C,	//0x26ce		VoC_shr16_ri(REG0,0x2,IN_PARALLEL)	|	VoC_or32_rr(ACC0,RL7,DEFAULT)
0xC2187101,	//0x26d0		VoC_sub16_rr(REG0,REG0,REG3,IN_PARALLEL)	|	VoC_lw16i_short(REG1,0x8,DEFAULT)
0x7FC31542,	//0x26d2		VoC_sw16_d(REG2,0xffc3)
0x7FC21543,	//0x26d4		VoC_sw16_d(REG3,0xffc2)
0x7FC81540,	//0x26d6		VoC_sw16_d(REG0,0xffc8)
0x7FC91541,	//0x26d8		VoC_sw16_d(REG1,0xffc9)
0x7FC415C4,	//0x26da		VoC_sw32_d(ACC0,0xffc4)
0x40A2DE80,	//0x26dc		VoC_add16_rr(REG2,REG2,REG4,DEFAULT)	|	VoC_cfg(0x0)
0x1794C91C,	//0x26de		VoC_cfg_lg(0x8,)(lo)	|	VoC_add32_rr(ACC0,ACC0,REG67,IN_PARALLEL)
0xC3760008,	//0x26e0		VoC_sub16_rr(REG6,REG5,REG6,DEFAULT)	|	VoC_cfg_lg(0x8,)(hi)
0x7FC81540,	//0x26e2		VoC_sw16_d(REG0,0xffc8)
0x7FC91541,	//0x26e4		VoC_sw16_d(REG1,0xffc9)
0x7FC31542,	//0x26e6		VoC_sw16_d(REG2,0xffc3)
0x7FC21543,	//0x26e8		VoC_sw16_d(REG3,0xffc2)
0x7FC415C4,	//0x26ea		VoC_sw32_d(ACC0,0xffc4)
0x40A2DE80,	//0x26ec		VoC_add16_rr(REG2,REG2,REG4,DEFAULT)	|	VoC_cfg(0x0)
0x1794C91C,	//0x26ee		VoC_cfg_lg(0x8,)(lo)	|	VoC_add32_rr(ACC0,ACC0,REG67,IN_PARALLEL)
0xF1060008,	//0x26f0		VoC_lw16i_short(REG6,0x8,DEFAULT)	|	VoC_cfg_lg(0x8,)(hi)
0x7FC81540,	//0x26f2		VoC_sw16_d(REG0,0xffc8)
0x7FC91541,	//0x26f4		VoC_sw16_d(REG1,0xffc9)
0x7FC31542,	//0x26f6		VoC_sw16_d(REG2,0xffc3)
0x7FC21543,	//0x26f8		VoC_sw16_d(REG3,0xffc2)
0x7FC415C4,	//0x26fa		VoC_sw32_d(ACC0,0xffc4)
0x40A2DE80,	//0x26fc		VoC_add16_rr(REG2,REG2,REG4,DEFAULT)	|	VoC_cfg(0x0)
0x1794C91C,	//0x26fe		VoC_cfg_lg(0x8,)(lo)	|	VoC_add32_rr(ACC0,ACC0,REG67,IN_PARALLEL)
0x15400008,	//0x2700		VoC_sw16_d(REG0,0xffc8)(lo)	|	VoC_cfg_lg(0x8,)(hi)
0x15417FC8,	//0x2702		VoC_sw16_d(REG1,0xffc9)(lo)	|	VoC_sw16_d(REG0,0xffc8)(hi)
0x15427FC9,	//0x2704		VoC_sw16_d(REG2,0xffc3)(lo)	|	VoC_sw16_d(REG1,0xffc9)(hi)
0x15437FC3,	//0x2706		VoC_sw16_d(REG3,0xffc2)(lo)	|	VoC_sw16_d(REG2,0xffc3)(hi)
0x15C47FC2,	//0x2708		VoC_sw32_d(ACC0,0xffc4)(lo)	|	VoC_sw16_d(REG3,0xffc2)(hi)
0xDE807FC4,	//0x270a		VoC_cfg(0x0)	|	VoC_sw32_d(ACC0,0xffc4)(hi)
0xE02540A2,	//0x270c		VoC_lw16i_short(REG5,0x2,IN_PARALLEL)	|	VoC_add16_rr(REG2,REG2,REG4,DEFAULT)
0x00081794,	//0x270e		VoC_cfg_lg(0x8,)
0x0CBC1400,	//0x2710		VoC_lw16_d(REG0,0xcbc)
0x1A721484,	//0x2712		VoC_lw32_d(ACC0,0x1a72)
0x0CAE1406,	//0x2714		VoC_lw16_d(REG6,0xcae)
0xE00778EE,	//0x2716		VoC_lw16i_short(REG7,0x0,IN_PARALLEL)	|	VoC_shr16_ri(REG6,0xfffffffd,DEFAULT)
0xF818491C,	//0x2718		VoC_shr16_ri(REG0,0x3,IN_PARALLEL)	|	VoC_add32_rr(ACC0,ACC0,REG67,DEFAULT)
0xE53CC228,	//0x271a		VoC_or32_rr(ACC0,RL7,DEFAULT)	|	VoC_sub16_rr(REG0,REG0,REG5,DEFAULT)
0x7FC81540,	//0x271c		VoC_sw16_d(REG0,0xffc8)
0x7FC91541,	//0x271e		VoC_sw16_d(REG1,0xffc9)
0x7FC31542,	//0x2720		VoC_sw16_d(REG2,0xffc3)
0x7FC21543,	//0x2722		VoC_sw16_d(REG3,0xffc2)
0x7FC415C4,	//0x2724		VoC_sw32_d(ACC0,0xffc4)
0x1A741484,	//0x2726		VoC_lw32_d(ACC0,0x1a74)
0xFFC0DE80,	//0x2728		VoC_NOP	|	VoC_cfg(0x0)
0x00081794,	//0x272a		VoC_cfg_lg(0x8,)
0xC0A2491C,	//0x272c		VoC_add16_rr(REG2,REG2,REG4,IN_PARALLEL)	|	VoC_add32_rr(ACC0,ACC0,REG67,DEFAULT)
0x1540E53C,	//0x272e		VoC_sw16_d(REG0,0xffc8)(lo)	|	VoC_or32_rr(ACC0,RL7,DEFAULT)
0x15417FC8,	//0x2730		VoC_sw16_d(REG1,0xffc9)(lo)	|	VoC_sw16_d(REG0,0xffc8)(hi)
0x15427FC9,	//0x2732		VoC_sw16_d(REG2,0xffc3)(lo)	|	VoC_sw16_d(REG1,0xffc9)(hi)
0x15437FC3,	//0x2734		VoC_sw16_d(REG3,0xffc2)(lo)	|	VoC_sw16_d(REG2,0xffc3)(hi)
0x15C47FC2,	//0x2736		VoC_sw32_d(ACC0,0xffc4)(lo)	|	VoC_sw16_d(REG3,0xffc2)(hi)
0xDE807FC4,	//0x2738		VoC_cfg(0x0)	|	VoC_sw32_d(ACC0,0xffc4)(hi)
0x1794F020,	//0x273a		VoC_cfg_lg(0x8,)(lo)	|	VoC_lw16i_short(REG0,0x1,DEFAULT)
0x14010008,	//0x273c		VoC_lw16_d(REG1,0x1a91)(lo)	|	VoC_cfg_lg(0x8,)(hi)
0x31C11A91,	//0x273e		VoC_bnez16_r(MPEG4_MB_LOOP_Y_END,REG1)(lo)	|	VoC_lw16_d(REG1,0x1a91)(hi)
0xFFC027C0,	//0x2740		VoC_NAD	|	VoC_bnez16_r(MPEG4_MB_LOOP_Y_END,REG1)(hi)
		//0x2742		MPEG4_MB_FOR_LOOP
0x0CAE0700,	//0x2742		VoC_add16_rd(REG0,REG0,0xcae)
0x0CB04C30,	//0x2744		VoC_bnlt16_rd(MPEG4_MB_LOOP_X_END,REG0,0xcb0)
0x0CAE1500,	//0x2746		VoC_sw16_d(REG0,0xcae)
0x21E42B00,	//0x2748		VoC_jump_lg(MPEG4_MB_LOOP_XY_START)
		//0x274a		MPEG4_MB_LOOP_X_END
0x1A6E1404,	//0x274a		VoC_lw16_d(REG4,0x1a6e)
0x3514F022,	//0x274c		VoC_be16_rr(mb_dma_out_mode_mvs_for_b,REG2,REG4)(lo)	|	VoC_lw16i_short(REG2,0x1,DEFAULT)
0x2B002752,	//0x274e		VoC_jump_lg(mb_process_mode_mvs_for_b_end)(lo)	|	VoC_be16_rr(mb_dma_out_mode_mvs_for_b,REG2,REG4)(hi)
0xFFC0277C,	//0x2750		VoC_NAD	|	VoC_jump_lg(mb_process_mode_mvs_for_b_end)(hi)
		//0x2752		mb_dma_out_mode_mvs_for_b
0x40000A8F,	//0x2752		VoC_lw16i(RL7_HI,0x4000)
0x1400F00E,	//0x2754		VoC_lw16_d(REG0,0xcaf)(lo)	|	VoC_lw16i_short(RL7_LO,0x0,DEFAULT)
0x14020CAF,	//0x2756		VoC_lw16_d(REG2,0xcb0)(lo)	|	VoC_lw16_d(REG0,0xcaf)(hi)
0x60430CB0,	//0x2758		VoC_movreg16(REG3,REG2,DEFAULT)	|	VoC_lw16_d(REG2,0xcb0)(hi)
0x1602E001,	//0x275a		VoC_and16_ri(REG2,0x1)(lo)	|	VoC_lw16i_short(REG1,0x0,IN_PARALLEL)
0x409C0001,	//0x275c		VoC_add16_rr(REG4,REG2,REG3,DEFAULT)	|	VoC_and16_ri(REG2,0x1)(hi)
0x4420F80B,	//0x275e		VoC_mult16_rr(REG0,REG0,REG4,DEFAULT)	|	VoC_shr16_ri(REG3,0x1,IN_PARALLEL)
0x0A82C09B,	//0x2760		VoC_lw16i(REG2,0x203e)(lo)	|	VoC_add16_rr(REG3,REG2,REG3,IN_PARALLEL)
0xFBF8203E,	//0x2762		VoC_shr32_ri(REG01,0xffffffff,DEFAULT)	|	VoC_lw16i(REG2,0x203e)(hi)
0x203A0902,	//0x2764		VoC_add32_rd(REG45,REG01,0x203a)
0xF80A653A,	//0x2766		VoC_shr16_ri(REG2,0x1,IN_PARALLEL)	|	VoC_or32_rr(REG45,RL7,DEFAULT)
0x02302B80,	//0x2768		VoC_jal(Coolsand_MPEG4RunDma)
0x0CAF1400,	//0x276a		VoC_lw16_d(REG0,0xcaf)
0x0CB01403,	//0x276c		VoC_lw16_d(REG3,0xcb0)
0x0A82F8EB,	//0x276e		VoC_lw16i(REG2,0x206c)(lo)	|	VoC_shr16_ri(REG3,0xfffffffd,DEFAULT)
0x4418206C,	//0x2770		VoC_mult16_rr(REG0,REG0,REG3,DEFAULT)	|	VoC_lw16i(REG2,0x206c)(hi)
0x780BF80A,	//0x2772		VoC_shr16_ri(REG3,0x1,DEFAULT)	|	VoC_shr16_ri(REG2,0x1,IN_PARALLEL)
0xFBF8E001,	//0x2774		VoC_shr32_ri(REG01,0xffffffff,DEFAULT)	|	VoC_lw16i_short(REG1,0x0,IN_PARALLEL)
0x203C0902,	//0x2776		VoC_add32_rd(REG45,REG01,0x203c)
0xFFC0653A,	//0x2778		VoC_NAD(IN_PARALLEL)	|	VoC_or32_rr(REG45,RL7,DEFAULT)
0x02302B80,	//0x277a		VoC_jal(Coolsand_MPEG4RunDma)
		//0x277c		mb_process_mode_mvs_for_b_end
0xE0107002,	//0x277c		VoC_lw16i_short(REG0,0x1,IN_PARALLEL)	|	VoC_lw16i_short(REG2,0x0,DEFAULT)
0x0CAF0700,	//0x277e		VoC_add16_rd(REG0,REG0,0xcaf)
0x0CB11403,	//0x2780		VoC_lw16_d(REG3,0xcb1)
0x27C03498,	//0x2782		VoC_bngt16_rr(MPEG4_MB_LOOP_Y_END,REG3,REG0)
0x0CAE1502,	//0x2784		VoC_sw16_d(REG2,0xcae)
0x0CAF1500,	//0x2786		VoC_sw16_d(REG0,0xcaf)
0x18D91400,	//0x2788		VoC_lw16_d(REG0,0x18d9)
0xEFF27101,	//0x278a		VoC_lw16i_short(REG2,0xffffffff,IN_PARALLEL)	|	VoC_lw16i_short(REG1,0x8,DEFAULT)
0xC00C420B,	//0x278c		VoC_add16_rr(REG4,REG0,REG1,IN_PARALLEL)	|	VoC_sub16_rr(REG3,REG0,REG1,DEFAULT)
0x18DB1405,	//0x278e		VoC_lw16_d(REG5,0x18db)
0x18DD1406,	//0x2790		VoC_lw16_d(REG6,0x18dd)
0xC34F5848,	//0x2792		VoC_sub16_rr(REG7,REG5,REG1,IN_PARALLEL)	|	VoC_lw16_p(ACC0_LO,REG4,DEFAULT)
0xC3885C02,	//0x2794		VoC_sub16_rr(REG0,REG6,REG1,IN_PARALLEL)	|	VoC_sw16_p(REG2,REG0,DEFAULT)
0xD858DC38,	//0x2796		VoC_lw16_p(ACC0_LO,REG5,DEFAULT)	|	VoC_sw16_p(ACC0_LO,REG3,DEFAULT)
0xD861DC42,	//0x2798		VoC_lw16_p(REG1,REG6,DEFAULT)	|	VoC_sw16_p(REG2,REG4,DEFAULT)
0xDC01DC78,	//0x279a		VoC_sw16_p(REG1,REG0,DEFAULT)	|	VoC_sw16_p(ACC0_LO,REG7,DEFAULT)
0xFF445C52,	//0x279c		VoC_lw32z(ACC0,IN_PARALLEL)	|	VoC_sw16_p(REG2,REG5,DEFAULT)
0x0AC9DC62,	//0x279e		VoC_lw16i(ACC0_HI,0x8000)(lo)	|	VoC_sw16_p(REG2,REG6,DEFAULT)
0x6C070000,	//0x27a0		VoC_bez16_d(MPEG4_NOT_update_pMVBuffPred,0x1a6e)(lo)	|	VoC_lw16i(ACC0_HI,0x8000)(hi)
0x15841A6E,	//0x27a2		VoC_sw32_d(ACC0,0xffc)(lo)	|	VoC_bez16_d(MPEG4_NOT_update_pMVBuffPred,0x1a6e)(hi)
0x15840FFC,	//0x27a4		VoC_sw32_d(ACC0,0x1004)(lo)	|	VoC_sw32_d(ACC0,0xffc)(hi)
0xFFC01004,	//0x27a6		VoC_NAD	|	VoC_sw32_d(ACC0,0x1004)(hi)
		//0x27a8		MPEG4_NOT_update_pMVBuffPred
0x0CBC1400,	//0x27a8		VoC_lw16_d(REG0,0xcbc)
0x6C05F8E0,	//0x27aa		VoC_bez16_d(MPEG4_mb_updata_loop_0,0x2009)(lo)	|	VoC_shr16_ri(REG0,0xfffffffc,DEFAULT)
0x14002009,	//0x27ac		VoC_lw16_d(REG0,0xcbc)(lo)	|	VoC_bez16_d(MPEG4_mb_updata_loop_0,0x2009)(hi)
0xF8E80CBC,	//0x27ae		VoC_shr16_ri(REG0,0xfffffffd,DEFAULT)	|	VoC_lw16_d(REG0,0xcbc)(hi)
		//0x27b0		MPEG4_mb_updata_loop_0
0x0902F001,	//0x27b0		VoC_add32_rd(REG45,REG01,0x1a70)(lo)	|	VoC_lw16i_short(REG1,0x0,DEFAULT)
0xF8101A70,	//0x27b2		VoC_shr16_ri(REG0,0x2,DEFAULT)	|	VoC_add32_rd(REG45,REG01,0x1a70)(hi)
0x1A720903,	//0x27b4		VoC_add32_rd(REG67,REG01,0x1a72)
0x1A701582,	//0x27b6		VoC_sw32_d(REG45,0x1a70)
0x1A740902,	//0x27b8		VoC_add32_rd(REG45,REG01,0x1a74)
0x1A721583,	//0x27ba		VoC_sw32_d(REG67,0x1a72)
0x1A741582,	//0x27bc		VoC_sw32_d(REG45,0x1a74)
0x21E42B00,	//0x27be		VoC_jump_lg(MPEG4_MB_LOOP_XY_START)
		//0x27c0		MPEG4_MB_LOOP_Y_END
0x1A8E1402,	//0x27c0		VoC_lw16_d(REG2,0x1a8e)
0x00011602,	//0x27c2		VoC_and16_ri(REG2,0x1)
0x0CAC1400,	//0x27c4		VoC_lw16_d(REG0,0xcac)
0x1C000A81,	//0x27c6		VoC_lw16i(REG1,0x1c00)
0xC20878BA,	//0x27c8		VoC_sub16_rr(REG0,REG0,REG1,IN_PARALLEL)	|	VoC_shr16_ri(REG2,0xfffffff7,DEFAULT)
0x1A8E1404,	//0x27ca		VoC_lw16_d(REG4,0x1a8e)
0xE0054210,	//0x27cc		VoC_lw16i_short(REG5,0x0,IN_PARALLEL)	|	VoC_sub16_rr(REG0,REG0,REG2,DEFAULT)
0xFBB278F8,	//0x27ce		VoC_shr32_ri(REG45,0xfffffff6,IN_PARALLEL)	|	VoC_shr16_ri(REG0,0xffffffff,DEFAULT)
0xC882F001,	//0x27d0		VoC_add32_rr(REG45,REG45,REG01,DEFAULT)	|	VoC_lw16i_short(REG1,0x0,DEFAULT)
0x0CEE151B,	//0x27d2		VoC_sw16_d(BITCACHE,0xcee)
0x1A8E1582,	//0x27d4		VoC_sw32_d(REG45,0x1a8e)
0x0CEC1586,	//0x27d6		VoC_sw32_d(RL6,0xcec)
0xFFC0DFA9,	//0x27d8		VoC_NOP	|	VoC_pop16(RA,DEFAULT)
0xFFC0E580,	//0x27da		VoC_NAD	|	VoC_return
