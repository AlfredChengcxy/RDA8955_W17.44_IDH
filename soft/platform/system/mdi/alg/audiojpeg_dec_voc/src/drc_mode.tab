		//0x1e28		VoC_code_section_2
		//0x1e28		DRC_POW10_FXP
0x1504DFE9,	//0x1e28		VoC_sw16_d(REG4,0x1a39)(lo)	|	VoC_push16(RA,DEFAULT)
0x77841A39,	//0x1e2a		VoC_lw16i_short(REG4,0xfffffffc,DEFAULT)	|	VoC_sw16_d(REG4,0x1a39)(hi)
0x7F44E045,	//0x1e2c		VoC_lw32z(ACC0,DEFAULT)	|	VoC_lw16i_short(REG5,0x4,IN_PARALLEL)
0x6001F401,	//0x1e2e		VoC_movreg16(REG1,REG0,DEFAULT)	|	VoC_lw16i_short(FORMAT32,0x0,IN_PARALLEL)
0x3420F860,	//0x1e30		VoC_bgt16_rr(pow10_fxp_ten_multiple_return,REG4,REG0)(lo)	|	VoC_shr16_ri(REG0,0xc,IN_PARALLEL)
0x09241E67,	//0x1e32		VoC_add32_rd(ACC0,ACC0,0x5fbe)(lo)	|	VoC_bgt16_rr(pow10_fxp_ten_multiple_return,REG4,REG0)(hi)
0x34055FBE,	//0x1e34		VoC_bgt16_rr(pow10_fxp_ten_multiple_return,REG0,REG5)(lo)	|	VoC_add32_rd(ACC0,ACC0,0x5fbe)(hi)
0x60221E67,	//0x1e36		VoC_movreg16(REG2,REG1,DEFAULT)	|	VoC_bgt16_rr(pow10_fxp_ten_multiple_return,REG0,REG5)(hi)
0x1601E014,	//0x1e38		VoC_and16_ri(REG1,0xff0)(lo)	|	VoC_lw16i_short(REG4,0x1,IN_PARALLEL)
0x16020FF0,	//0x1e3a		VoC_and16_ri(REG2,0xf)(lo)	|	VoC_and16_ri(REG1,0xff0)(hi)
0x0A83000F,	//0x1e3c		VoC_lw16i(REG3,0x5ea8)(lo)	|	VoC_and16_ri(REG2,0xf)(hi)
0xF8215EA8,	//0x1e3e		VoC_shr16_ri(REG1,0x4,DEFAULT)	|	VoC_lw16i(REG3,0x5ea8)(hi)
0x4059F8AA,	//0x1e40		VoC_add16_rr(REG1,REG1,REG3,DEFAULT)	|	VoC_shr16_ri(REG2,0xfffffff5,DEFAULT)
0x410CE045,	//0x1e42		VoC_add16_rr(REG4,REG4,REG1,DEFAULT)	|	VoC_lw16i_short(REG5,0x4,IN_PARALLEL)
0x5811C145,	//0x1e44		VoC_lw16_p(REG1,REG1,DEFAULT)	|	VoC_add16_rr(REG5,REG5,REG0,IN_PARALLEL)
0xB90CF479,	//0x1e46		VoC_sub16_pr(REG4,REG4,REG1,DEFAULT)	|	VoC_lw16i_short(FORMAT32,0xf,IN_PARALLEL)
0x0A83CD13,	//0x1e48		VoC_lw16i(REG3,0x5faa)(lo)	|	VoC_multf32_rr(REG67,REG4,REG2,DEFAULT)
0x40715FAA,	//0x1e4a		VoC_add16_rr(REG1,REG1,REG6,DEFAULT)	|	VoC_lw16i(REG3,0x5faa)(hi)
0x77F9C0EB,	//0x1e4c		VoC_lw16i_short(FORMAT32,0xffffffff,DEFAULT)	|	VoC_add16_rr(REG3,REG3,REG5,IN_PARALLEL)
0x185BFF44,	//0x1e4e		VoC_multf32_rp(REG67,REG1,REG3,DEFAULT)	|	VoC_lw32z(ACC0,IN_PARALLEL)
0x3200E0C4,	//0x1e50		VoC_bltz16_r(pow10_fxp_ten_multiple_ltz,REG0)(lo)	|	VoC_lw16i_short(REG4,0xc,IN_PARALLEL)
0x07A41E5E,	//0x1e52		VoC_sub16_rd(REG4,REG4,0x1a39)(lo)	|	VoC_bltz16_r(pow10_fxp_ten_multiple_ltz,REG0)(hi)
0x7EA31A39,	//0x1e54		VoC_shr32_rr(REG67,REG4,DEFAULT)	|	VoC_sub16_rd(REG4,REG4,0x1a39)(hi)
0xE0C8F401,	//0x1e56		VoC_movreg16(ACC0_LO,REG6,DEFAULT)	|	VoC_lw16i_short(FORMAT32,0x0,IN_PARALLEL)
0x1E673187,	//0x1e58		VoC_bez16_r(pow10_fxp_ten_multiple_return,REG7)
0x5FBE1484,	//0x1e5a		VoC_lw32_d(ACC0,0x5fbe)
0xFFC065CB,	//0x1e5c		VoC_NAD(IN_PARALLEL)	|	VoC_jump(pow10_fxp_ten_multiple_return)
		//0x1e5e		pow10_fxp_ten_multiple_ltz
0x5FB40A83,	//0x1e5e		VoC_lw16i(REG3,0x5fb4)
0xC0EB7F1C,	//0x1e60		VoC_add16_rr(REG3,REG3,REG5,IN_PARALLEL)	|	VoC_movreg32(ACC0,REG67,DEFAULT)
0x1A3907A4,	//0x1e62		VoC_sub16_rd(REG4,REG4,0x1a39)
0x7E9C811B,	//0x1e64		VoC_shr32_rr(ACC0,REG3,DEFAULT)	|	VoC_add16_rp(REG3,REG4,REG3,DEFAULT)
0xDFA9F401,	//0x1e66		VoC_pop16(RA,DEFAULT)	|	VoC_lw16i_short(FORMAT32,0x0,IN_PARALLEL)
		//0x1e67		pow10_fxp_ten_multiple_return
0xE580FFC0,	//0x1e68		VoC_return	|	VoC_NOP
		//0x1e6a		DRC_POSDIV32_S
0x7F46DFE9,	//0x1e6a		VoC_lw32z(RL6,DEFAULT)	|	VoC_push16(RA,DEFAULT)
0x3302EFFE,	//0x1e6c		VoC_bez32_r(drc_posdiv32_quotient_saturate,REG45)(lo)	|	VoC_lw16i_short(RL7_LO,0xffffffff,IN_PARALLEL)
0x702C1E8E,	//0x1e6e		VoC_lw16i_short(RL6_LO,0x1,DEFAULT)	|	VoC_bez32_r(drc_posdiv32_quotient_saturate,REG45)(hi)
0x3716FF27,	//0x1e70		VoC_be32_rr(drc_posdiv32_end,REG45,RL6)(lo)	|	VoC_movreg32(RL7,ACC0,IN_PARALLEL)
0xFFC01E8A,	//0x1e72		VoC_NAD	|	VoC_be32_rr(drc_posdiv32_end,REG45,RL6)(hi)
		//0x1e74		drc_posdiv32_while1_start
0x1E7B36A2,	//0x1e74		VoC_bngt32_rr(drc_posdiv32_while1_end,ACC0,REG45)
0x1E7B3382,	//0x1e76		VoC_bltz32_r(drc_posdiv32_while1_end,REG45)
0xFDFE7DFA,	//0x1e78		VoC_shru32_ri(RL6,0xffffffff,IN_PARALLEL)	|	VoC_shru32_ri(REG45,0xffffffff,DEFAULT)
0xFF47E5FA,	//0x1e7a		VoC_lw32z(RL7,DEFAULT)	|	VoC_jump(drc_posdiv32_while1_start)
		//0x1e7b		drc_posdiv32_while1_end
0x1E803282,	//0x1e7c		VoC_bgtz32_r(drc_posdiv32_while2_start,REG45)
0xFC0E7C0A,	//0x1e7e		VoC_shru32_ri(RL6,0x1,IN_PARALLEL)	|	VoC_shru32_ri(REG45,0x1,DEFAULT)
		//0x1e80		drc_posdiv32_while2_start
0x1E8A32C6,	//0x1e80		VoC_bngtz32_r(drc_posdiv32_end,RL6)
0x1E863614,	//0x1e82		VoC_bgt32_rr(drc_posdiv32_dividend_ngt_divisor,REG45,ACC0)
0xC9F74B14,	//0x1e84		VoC_add32_rr(RL7,RL7,RL6,IN_PARALLEL)	|	VoC_sub32_rr(ACC0,ACC0,REG45,DEFAULT)
		//0x1e86		drc_posdiv32_dividend_ngt_divisor
0xFC0E7C0A,	//0x1e86		VoC_shru32_ri(RL6,0x1,IN_PARALLEL)	|	VoC_shru32_ri(REG45,0x1,DEFAULT)
0xFFC065F8,	//0x1e88		VoC_NAD(IN_PARALLEL)	|	VoC_jump(drc_posdiv32_while2_start)
		//0x1e8a		drc_posdiv32_end
0x5FBE5427,	//0x1e8a		VoC_bngt32_rd(drc_posdiv32_quotient_saturate,RL7,0x5fbe)
0x5FBE1487,	//0x1e8c		VoC_lw32_d(RL7,0x5fbe)
		//0x1e8e		drc_posdiv32_quotient_saturate
0xFFC0DFA9,	//0x1e8e		VoC_NOP	|	VoC_pop16(RA,DEFAULT)
0xFFC06580,	//0x1e90		VoC_NAD(IN_PARALLEL)	|	VoC_return
		//0x1e92		DYNAMIC_COMPRESSOR_VOC
0xFF425FE9,	//0x1e92		VoC_lw32z(REG45,IN_PARALLEL)	|	VoC_push16(RA,DEFAULT)
0xDF455FC0,	//0x1e94		VoC_push32(ACC1,IN_PARALLEL)	|	VoC_push16(REG0,DEFAULT)
0xE0077026,	//0x1e96		VoC_lw16i_short(REG7,0x0,IN_PARALLEL)	|	VoC_lw16i_short(REG6,0x1,DEFAULT)
0x092DC95D,	//0x1e98		VoC_add32_rd(ACC1,ACC1,0x5fc0)(lo)	|	VoC_add32_rr(ACC1,ACC1,REG67,DEFAULT)
0x09925FC0,	//0x1e9a		VoC_sub32_rd(REG45,REG45,0x5fbe)(lo)	|	VoC_add32_rd(ACC1,ACC1,0x5fc0)(hi)
0xE1675FBE,	//0x1e9c		VoC_movreg16(REG7,ACC1_HI,DEFAULT)	|	VoC_sub32_rd(REG45,REG45,0x5fbe)(hi)
0x1EC63187,	//0x1e9e		VoC_bez16_r(log10_fxp_return_negative_STW_MAX,REG7)
0xF83F60E6,	//0x1ea0		VoC_shr16_ri(REG7,0x7,IN_PARALLEL)	|	VoC_movreg16(REG6,REG7,DEFAULT)
0xEF857024,	//0x1ea2		VoC_lw16i_short(REG5,0xfffffff8,IN_PARALLEL)	|	VoC_lw16i_short(REG4,0x1,DEFAULT)
		//0x1ea4		log10_fxp_while_index2_loop
0x1EAE31C7,	//0x1ea4		VoC_bnez16_r(log10_fxp_while_index2_end,REG7)
0x1EAE3186,	//0x1ea6		VoC_bez16_r(log10_fxp_while_index2_end,REG6)
0x60C7F8FE,	//0x1ea8		VoC_movreg16(REG7,REG6,DEFAULT)	|	VoC_shr16_ri(REG6,0xffffffff,DEFAULT)
0x4365E014,	//0x1eaa		VoC_sub16_rr(REG5,REG5,REG4,DEFAULT)	|	VoC_lw16i_short(REG4,0x1,IN_PARALLEL)
0xE5F7F83F,	//0x1eac		VoC_jump(log10_fxp_while_index2_loop)	|	VoC_shr16_ri(REG7,0x7,IN_PARALLEL)
		//0x1eae		log10_fxp_while_index2_end
0x007F1606,	//0x1eae		VoC_and16_ri(REG6,0x7f)
0x5DA81807,	//0x1eb0		VoC_lw16i_set_inc(REG3,0x5da8,0x1)
0xF8C643E4,	//0x1eb2		VoC_shr16_ri(REG6,0xfffffff8,IN_PARALLEL)	|	VoC_sub16_rr(REG4,REG7,REG4,DEFAULT)
0xC0E440FF,	//0x1eb4		VoC_add16_rr(REG4,REG3,REG4,IN_PARALLEL)	|	VoC_add16_rr(REG7,REG3,REG7,DEFAULT)
0xF5F95E18,	//0x1eb6		VoC_lw16i_short(FORMAT32,0xffffffff,IN_PARALLEL)	|	VoC_inc_p(REG3,DEFAULT)
0xD877D844,	//0x1eb8		VoC_lw16_p(REG7,REG7,DEFAULT)	|	VoC_lw16_p(REG4,REG4,DEFAULT)
0x43E7995C,	//0x1eba		VoC_sub16_rr(REG7,REG7,REG4,DEFAULT)	|	VoC_multf32_rp(ACC0,REG5,REG3,DEFAULT)
0x7A14F80C,	//0x1ebc		VoC_shr32_ri(ACC0,0x2,DEFAULT)	|	VoC_shr16_ri(REG4,0x1,IN_PARALLEL)
0x4DF5F479,	//0x1ebe		VoC_multf32_rr(ACC1,REG7,REG6,DEFAULT)	|	VoC_lw16i_short(FORMAT32,0xf,IN_PARALLEL)
0xC12CF705,	//0x1ec0		VoC_add16_rr(REG4,REG4,REG5,DEFAULT)	|	VoC_movreg16(REG5,ACC0_LO,IN_PARALLEL)
0x780FE147,	//0x1ec2		VoC_shr16_ri(REG7,0x1,DEFAULT)	|	VoC_movreg16(REG7,ACC1_LO,DEFAULT)
0xC13CFF44,	//0x1ec4		VoC_add16_rr(REG4,REG4,REG7,DEFAULT)	|	VoC_lw32z(ACC0,IN_PARALLEL)
		//0x1ec6		log10_fxp_return_negative_STW_MAX
0xF5F978FC,	//0x1ec6		VoC_lw16i_short(FORMAT32,0xffffffff,IN_PARALLEL)	|	VoC_shr16_ri(REG4,0xffffffff,DEFAULT)
0x5FB80A24,	//0x1ec8		VoC_multf32_rd(ACC0,REG4,0x5fb8)
0x48EC1407,	//0x1eca		VoC_lw16_d(REG7,0x48ec)
0xE0007019,	//0x1ecc		VoC_lw16i_short(REG0,0x0,IN_PARALLEL)	|	VoC_lw16i_short(FORMAT32,0x0,DEFAULT)
0x5FC00924,	//0x1ece		VoC_add32_rd(ACC0,ACC0,0x5fc0)
0x3437E126,	//0x1ed0		VoC_bgt16_rr(dynamic_compressor_else_if_1,REG6,REG7)(lo)	|	VoC_movreg16(REG6,ACC0_HI,DEFAULT)
0x70201ED8,	//0x1ed2		VoC_lw16i_short(REG0,0x1,DEFAULT)	|	VoC_bgt16_rr(dynamic_compressor_else_if_1,REG6,REG7)(hi)
0x2B00F6C5,	//0x1ed4		VoC_jump_lg(dynamic_compressor_else_end)(lo)	|	VoC_movreg16(REG5,REG6,IN_PARALLEL)
0xFFC01F2B,	//0x1ed6		VoC_NAD	|	VoC_jump_lg(dynamic_compressor_else_end)(hi)
		//0x1ed8		dynamic_compressor_else_if_1
0x48E307B5,	//0x1ed8		VoC_sub16_rd(REG5,REG6,0x48e3)
0x48E40784,	//0x1eda		VoC_sub16_rd(REG4,REG0,0x48e4)
0x34A5F8FD,	//0x1edc		VoC_bngt16_rr(dynamic_compressor_else_if_2,REG4,REG5)(lo)	|	VoC_shr16_ri(REG5,0xffffffff,DEFAULT)
0xE0C51EE2,	//0x1ede		VoC_movreg16(REG5,REG6,DEFAULT)	|	VoC_bngt16_rr(dynamic_compressor_else_if_2,REG4,REG5)(hi)
0x1F2B2B00,	//0x1ee0		VoC_jump_lg(dynamic_compressor_else_end)
		//0x1ee2		dynamic_compressor_else_if_2
0x1404DE45,	//0x1ee2		VoC_lw16_d(REG4,0x48e4)(lo)	|	VoC_abs16_r(REG5,DEFAULT)
0x342C48E4,	//0x1ee4		VoC_bgt16_rr(dynamic_compressor_else_if_3,REG5,REG4)(lo)	|	VoC_lw16_d(REG4,0x48e4)(hi)
0x780C1F14,	//0x1ee6		VoC_shr16_ri(REG4,0x1,DEFAULT)	|	VoC_bgt16_rr(dynamic_compressor_else_if_3,REG5,REG4)(hi)
0x07B5F5F9,	//0x1ee8		VoC_sub16_rd(REG5,REG6,0x48e3)(lo)	|	VoC_lw16i_short(FORMAT32,0xffffffff,IN_PARALLEL)
0xC16548E3,	//0x1eea		VoC_add16_rr(REG5,REG5,REG4,DEFAULT)	|	VoC_sub16_rd(REG5,REG6,0x48e3)(hi)
0x48E41404,	//0x1eec		VoC_lw16_d(REG4,0x48e4)
0xFF454D6C,	//0x1eee		VoC_lw32z(ACC1,IN_PARALLEL)	|	VoC_multf32_rr(ACC0,REG5,REG5,DEFAULT)
0xF8FC7007,	//0x1ef0		VoC_shr16_ri(REG4,0xffffffff,IN_PARALLEL)	|	VoC_lw16i_short(REG7,0x0,DEFAULT)
0x1EF83284,	//0x1ef2		VoC_bgtz32_r(dynamic_compressor_num_gtz,ACC0)
0x00011707,	//0x1ef4		VoC_xor16_ri(REG7,0x1)
0xFFC04B64,	//0x1ef6		VoC_NAD(IN_PARALLEL)	|	VoC_sub32_rr(ACC0,ACC1,ACC0,DEFAULT)
		//0x1ef8		dynamic_compressor_num_gtz
0x1EFE3104,	//0x1ef8		VoC_bgtz16_r(dynamic_compressor_den_gtz,REG4)
0x00011707,	//0x1efa		VoC_xor16_ri(REG7,0x1)
0xFFC05E44,	//0x1efc		VoC_NAD(IN_PARALLEL)	|	VoC_abs16_r(REG4,DEFAULT)
		//0x1efe		dynamic_compressor_den_gtz
0xE0055F43,	//0x1efe		VoC_lw16i_short(REG5,0x0,IN_PARALLEL)	|	VoC_push32(REG67,DEFAULT)
0xFFC05F46,	//0x1f00		VoC_NAD(IN_PARALLEL)	|	VoC_push32(RL6,DEFAULT)
0x1E6A2B80,	//0x1f02		VoC_jal(DRC_POSDIV32_S)
0xE0055F06,	//0x1f04		VoC_lw16i_short(REG5,0x0,IN_PARALLEL)	|	VoC_pop32(RL6,DEFAULT)
0xF7C45F03,	//0x1f06		VoC_movreg16(REG4,RL7_LO,IN_PARALLEL)	|	VoC_pop32(REG67,DEFAULT)
0x48E61403,	//0x1f08		VoC_lw16_d(REG3,0x48e6)
0x1F0E3187,	//0x1f0a		VoC_bez16_r(dynamic_compressor_power_gtz,REG7)
0xFFC04364,	//0x1f0c		VoC_NAD(IN_PARALLEL)	|	VoC_sub16_rr(REG4,REG5,REG4,DEFAULT)
		//0x1f0e		dynamic_compressor_power_gtz
0xFE1C6085,	//0x1f0e		VoC_shr16_rr(REG4,REG3,IN_PARALLEL)	|	VoC_movreg16(REG5,REG4,DEFAULT)
0x41A5C32C,	//0x1f10		VoC_add16_rr(REG5,REG6,REG4,DEFAULT)	|	VoC_sub16_rr(REG4,REG4,REG5,DEFAULT)
0xE5D8E000,	//0x1f12		VoC_jump(dynamic_compressor_else_end)	|	VoC_lw16i_short(REG0,0x0,IN_PARALLEL)
		//0x1f14		dynamic_compressor_else_if_3
0x48E84C96,	//0x1f14		VoC_bnlt16_rd(dynamic_compressor_else,REG6,0x48e8)
0x48E61403,	//0x1f16		VoC_lw16_d(REG3,0x48e6)
0x48E307B5,	//0x1f18		VoC_sub16_rd(REG5,REG6,0x48e3)
0x072DFE1D,	//0x1f1a		VoC_add16_rd(REG5,REG5,0x48e3)(lo)	|	VoC_shr16_rr(REG5,REG3,DEFAULT)
0xE5CE48E3,	//0x1f1c		VoC_jump(dynamic_compressor_else_end)	|	VoC_add16_rd(REG5,REG5,0x48e3)(hi)
		//0x1f1e		dynamic_compressor_else
0x48E61401,	//0x1f1e		VoC_lw16_d(REG1,0x48e6)
0x48E71402,	//0x1f20		VoC_lw16_d(REG2,0x48e7)
0x48E307B3,	//0x1f22		VoC_sub16_rd(REG3,REG6,0x48e3)
0x48E807B5,	//0x1f24		VoC_sub16_rd(REG5,REG6,0x48e8)
0xFE157E0B,	//0x1f26		VoC_shr16_rr(REG5,REG2,IN_PARALLEL)	|	VoC_shr16_rr(REG3,REG1,DEFAULT)
0x48E3071B,	//0x1f28		VoC_add16_rd(REG3,REG3,0x48e3)
0xC376C15D,	//0x1f2a		VoC_sub16_rr(REG6,REG5,REG6,DEFAULT)	|	VoC_add16_rr(REG5,REG5,REG3,DEFAULT)
		//0x1f2b		dynamic_compressor_else_end
0x1F3031C0,	//0x1f2c		VoC_bnez16_r(dynamic_compressor_noise_flag_nez,REG0)
0x48E90736,	//0x1f2e		VoC_add16_rd(REG6,REG6,0x48e9)
		//0x1f30		dynamic_compressor_noise_flag_nez
0xF47978E6,	//0x1f30		VoC_lw16i_short(FORMAT32,0xf,IN_PARALLEL)	|	VoC_shr16_ri(REG6,0xfffffffc,DEFAULT)
0x0A30F1C4,	//0x1f32		VoC_multf32_rd(REG01,REG6,0x5fba)(lo)	|	VoC_lw16i_short(REG4,0xe,DEFAULT)
0xFFC05FBA,	//0x1f34		VoC_NAD	|	VoC_multf32_rd(REG01,REG6,0x5fba)(hi)
0x1E282B80,	//0x1f36		VoC_jal(DRC_POW10_FXP)
0xDF055F80,	//0x1f38		VoC_pop32(ACC1,IN_PARALLEL)	|	VoC_pop16(REG0,DEFAULT)
0xFFC0DFA9,	//0x1f3a		VoC_NOP	|	VoC_pop16(RA,DEFAULT)
0xDFE9E580,	//0x1f3c		VoC_push16(RA,DEFAULT)	|	VoC_return
		//0x1f3d		MUSIC_DRC_VOC
0x48E91407,	//0x1f3e		VoC_lw16_d(REG7,0x48e9)
0x1A321501,	//0x1f40		VoC_sw16_d(REG1,0x1a32)
0x1A301503,	//0x1f42		VoC_sw16_d(REG3,0x1a30)
0x1A311504,	//0x1f44		VoC_sw16_d(REG4,0x1a31)
0xE0105F43,	//0x1f46		VoC_lw16i_short(REG0,0x1,IN_PARALLEL)	|	VoC_push32(REG67,DEFAULT)
0x5FBC3D17,	//0x1f48		VoC_bngt16_rd(music_drc_voc_M_ngt_1536,REG7,0x5fbc)
0x5FBD3CA7,	//0x1f4a		VoC_bngt16_rd(music_drc_voc_M_ngt_3072,REG7,0x5fbd)
0x5FBB3C37,	//0x1f4c		VoC_bngt16_rd(music_drc_voc_M_ngt_4096,REG7,0x5fbb)
0x07BFF080,	//0x1f4e		VoC_sub16_rd(REG7,REG7,0x5fbb)(lo)	|	VoC_lw16i_short(REG0,0x4,DEFAULT)
0xE5C95FBB,	//0x1f50		VoC_jump(music_drc_voc_M_ngt_1536)	|	VoC_sub16_rd(REG7,REG7,0x5fbb)(hi)
		//0x1f52		music_drc_voc_M_ngt_4096
0x07BFF060,	//0x1f52		VoC_sub16_rd(REG7,REG7,0x5fbd)(lo)	|	VoC_lw16i_short(REG0,0x3,DEFAULT)
0xE5C55FBD,	//0x1f54		VoC_jump(music_drc_voc_M_ngt_1536)	|	VoC_sub16_rd(REG7,REG7,0x5fbd)(hi)
		//0x1f56		music_drc_voc_M_ngt_3072
0x07BFF040,	//0x1f56		VoC_sub16_rd(REG7,REG7,0x5fbc)(lo)	|	VoC_lw16i_short(REG0,0x2,DEFAULT)
0xFFC05FBC,	//0x1f58		VoC_NAD	|	VoC_sub16_rd(REG7,REG7,0x5fbc)(hi)
		//0x1f5a		music_drc_voc_M_ngt_1536
0x1A331500,	//0x1f5a		VoC_sw16_d(REG0,0x1a33)
0x48E91507,	//0x1f5c		VoC_sw16_d(REG7,0x48e9)
0xC10B6080,	//0x1f5e		VoC_add16_rr(REG3,REG4,REG1,IN_PARALLEL)	|	VoC_movreg16(REG0,REG4,DEFAULT)
0x48F01412,	//0x1f60		VoC_lw16_d(INC2,0x48f0)
0x7030F033,	//0x1f62		VoC_lw16i_short(INC0,0x1,DEFAULT)	|	VoC_lw16i_short(INC3,0x1,DEFAULT)
0x1484E00F,	//0x1f64		VoC_lw32_d(ACC0,0x5fbe)(lo)	|	VoC_lw16i_short(RL7_HI,0x0,IN_PARALLEL)
0x18055FBE,	//0x1f66		VoC_lw16i_set_inc(REG1,0x0,0x1)(lo)	|	VoC_lw32_d(ACC0,0x5fbe)(hi)
0x0A860000,	//0x1f68		VoC_lw16i(REG6,0x6208)(lo)	|	VoC_lw16i_set_inc(REG1,0x0,0x1)(hi)
0x0A876208,	//0x1f6a		VoC_lw16i(REG7,0x15b0)(lo)	|	VoC_lw16i(REG6,0x6208)(hi)
0xFFC015B0,	//0x1f6c		VoC_NAD	|	VoC_lw16i(REG7,0x15b0)(hi)
		//0x1f6e		music_drc_memcpy_historydata_loop
0x1A3240B1,	//0x1f6e		VoC_be16_rd(music_drc_memcpy_historydata_end,REG1,0x1a32)
0xDC6858AE,	//0x1f70		VoC_sw16_p(ACC0_LO,REG6,IN_PARALLEL)	|	VoC_lw16inc_p(RL7_LO,REG2,DEFAULT)
0xDE085C78,	//0x1f72		VoC_inc_p(REG1,IN_PARALLEL)	|	VoC_sw16_p(ACC0_LO,REG7,DEFAULT)
0xE0145835,	//0x1f74		VoC_lw16i_short(REG4,0x1,IN_PARALLEL)	|	VoC_lw16_p(REG5,REG3,DEFAULT)
0xC1A65CBE,	//0x1f76		VoC_add16_rr(REG6,REG6,REG4,IN_PARALLEL)	|	VoC_sw16inc_p(RL7_LO,REG3,DEFAULT)
0xC1E75C85,	//0x1f78		VoC_add16_rr(REG7,REG7,REG4,IN_PARALLEL)	|	VoC_sw16inc_p(REG5,REG0,DEFAULT)
0xFFC065F4,	//0x1f7a		VoC_NAD(IN_PARALLEL)	|	VoC_jump(music_drc_memcpy_historydata_loop)
		//0x1f7c		music_drc_memcpy_historydata_end
0xE013590B,	//0x1f7c		VoC_lw16i_short(REG3,0x1,IN_PARALLEL)	|	VoC_lw32_sd(REG67,0x0,DEFAULT)
0x00001805,	//0x1f7e		VoC_lw16i_set_inc(REG1,0x0,0x1)
0x1A312004,	//0x1f80		VoC_lw16d_set_inc(REG0,0x1a31,0x1)
0x5FC81806,	//0x1f82		VoC_lw16i_set_inc(REG2,0x5fc8,0x1)
0x1A421407,	//0x1f84		VoC_lw16_d(REG7,0x1a42)
0x1F8A34B3,	//0x1f86		VoC_bngt16_rr(music_drc_find_indexcrosszero_ch_left,REG6,REG3)
0x1A431407,	//0x1f88		VoC_lw16_d(REG7,0x1a43)
		//0x1f8a		music_drc_find_indexcrosszero_ch_left
0x1A321404,	//0x1f8a		VoC_lw16_d(REG4,0x1a32)
0xF8FC5FC7,	//0x1f8c		VoC_shr16_ri(REG4,0xffffffff,IN_PARALLEL)	|	VoC_push16(REG7,DEFAULT)
0xF625431C,	//0x1f8e		VoC_movreg16(REG5,REG1,IN_PARALLEL)	|	VoC_sub16_rr(REG4,REG4,REG3,DEFAULT)
0x1A3A1501,	//0x1f90		VoC_sw16_d(REG1,0x1a3a)
		//0x1f92		music_drc_find_index_cross_zero_loop
0x1FD834A5,	//0x1f92		VoC_bngt16_rr(music_drc_find_index_cross_zero_end,REG4,REG5)
0xE0135617,	//0x1f94		VoC_lw16i_short(REG3,0x1,IN_PARALLEL)	|	VoC_lw16_sd(REG7,0x0,DEFAULT)
0x1FA1342F,	//0x1f96		VoC_bgt16_rr(music_drc_i_gt_crosszero_offset,REG5,REG7)
0xF6E55E08,	//0x1f98		VoC_movreg16(REG5,REG7,IN_PARALLEL)	|	VoC_inc_p(REG1,DEFAULT)
0xDCA77006,	//0x1f9a		VoC_sw16inc_p(REG7,REG2,IN_PARALLEL)	|	VoC_lw16i_short(REG6,0x0,DEFAULT)
0xC028C15D,	//0x1f9c		VoC_add16_rr(REG0,REG0,REG5,DEFAULT)	|	VoC_add16_rr(REG5,REG5,REG3,DEFAULT)
0x1A3A1506,	//0x1f9e		VoC_sw16_d(REG6,0x1a3a)
0xD886E5F2,	//0x1fa0		VoC_lw16inc_p(REG6,REG0,DEFAULT)	|	VoC_jump(music_drc_find_index_cross_zero_loop)
		//0x1fa1		music_drc_i_gt_crosszero_offset
0x3206D807,	//0x1fa2		VoC_bltz16_r(music_drc_historydata_i_ltz,REG6)(lo)	|	VoC_lw16_p(REG7,REG0,DEFAULT)
0x32471FBA,	//0x1fa4		VoC_bnltz16_r(music_drc_historydata_i_ltz,REG7)(lo)	|	VoC_bltz16_r(music_drc_historydata_i_ltz,REG6)(hi)
0x14061FBA,	//0x1fa6		VoC_lw16_d(REG6,0x1a3a)(lo)	|	VoC_bnltz16_r(music_drc_historydata_i_ltz,REG7)(hi)
0x14071A3A,	//0x1fa8		VoC_lw16_d(REG7,0x48f3)(lo)	|	VoC_lw16_d(REG6,0x1a3a)(hi)
0x343E48F3,	//0x1faa		VoC_bgt16_rr(music_drc_CrossZeroSize_plus_one,REG7,REG6)(lo)	|	VoC_lw16_d(REG7,0x48f3)(hi)
0x5CA51FD0,	//0x1fac		VoC_sw16inc_p(REG5,REG2,DEFAULT)	|	VoC_bgt16_rr(music_drc_CrossZeroSize_plus_one,REG7,REG6)(hi)
0xDE08E006,	//0x1fae		VoC_inc_p(REG1,DEFAULT)	|	VoC_lw16i_short(REG6,0x0,IN_PARALLEL)
0x1A3A1506,	//0x1fb0		VoC_sw16_d(REG6,0x1a3a)
0x1A3249B5,	//0x1fb2		VoC_blt16_rd(music_drc_CrossZeroSize_plus_one,REG5,0x1a32)
0x07ADC15D,	//0x1fb4		VoC_sub16_rd(REG5,REG5,0x1a32)(lo)	|	VoC_add16_rr(REG5,REG5,REG3,DEFAULT)
0xFFC01A32,	//0x1fb6		VoC_NOP	|	VoC_sub16_rd(REG5,REG5,0x1a32)(hi)
0xE5DFDA15,	//0x1fb8		VoC_jump(music_drc_find_index_cross_zero_end)	|	VoC_sw16_sd(REG5,0x0,DEFAULT)
		//0x1fba		music_drc_historydata_i_ltz
0x1FD03106,	//0x1fba		VoC_bgtz16_r(music_drc_CrossZeroSize_plus_one,REG6)
0x1FD03147,	//0x1fbc		VoC_bngtz16_r(music_drc_CrossZeroSize_plus_one,REG7)
0x1A3A1406,	//0x1fbe		VoC_lw16_d(REG6,0x1a3a)
0x48F34906,	//0x1fc0		VoC_blt16_rd(music_drc_CrossZeroSize_plus_one,REG6,0x48f3)
0xE0065CA5,	//0x1fc2		VoC_lw16i_short(REG6,0x0,IN_PARALLEL)	|	VoC_sw16inc_p(REG5,REG2,DEFAULT)
0x1506DE08,	//0x1fc4		VoC_sw16_d(REG6,0x1a3a)(lo)	|	VoC_inc_p(REG1,DEFAULT)
0x488D1A3A,	//0x1fc6		VoC_blt16_rd(music_drc_CrossZeroSize_plus_one,REG5,0x1a32)(lo)	|	VoC_sw16_d(REG6,0x1a3a)(hi)
0xC15D1A32,	//0x1fc8		VoC_add16_rr(REG5,REG5,REG3,DEFAULT)	|	VoC_blt16_rd(music_drc_CrossZeroSize_plus_one,REG5,0x1a32)(hi)
0x1A3207AD,	//0x1fca		VoC_sub16_rd(REG5,REG5,0x1a32)
0xDA15FFC0,	//0x1fcc		VoC_sw16_sd(REG5,0x0,DEFAULT)	|	VoC_NOP
0xFFC065CA,	//0x1fce		VoC_NAD(IN_PARALLEL)	|	VoC_jump(music_drc_find_index_cross_zero_end)
		//0x1fd0		music_drc_CrossZeroSize_plus_one
0x1A3A071E,	//0x1fd0		VoC_add16_rd(REG6,REG3,0x1a3a)
0x1506FFC0,	//0x1fd2		VoC_sw16_d(REG6,0x1a3a)(lo)	|	VoC_NOP
0xC15D1A3A,	//0x1fd4		VoC_add16_rr(REG5,REG5,REG3,DEFAULT)	|	VoC_sw16_d(REG6,0x1a3a)(hi)
		//0x1fd5		music_drc_find_index_cross_zero_next_i
0x1F922B00,	//0x1fd6		VoC_jump_lg(music_drc_find_index_cross_zero_loop)
		//0x1fd8		music_drc_find_index_cross_zero_end
0x5F84D90B,	//0x1fd8		VoC_pop16(REG4,DEFAULT)	|	VoC_lw32_sd(REG67,0x0,DEFAULT)
0x34B3E013,	//0x1fda		VoC_bngt16_rr(music_drc_save_crosszero_offset1,REG6,REG3)(lo)	|	VoC_lw16i_short(REG3,0x1,IN_PARALLEL)
0x15041FE0,	//0x1fdc		VoC_sw16_d(REG4,0x1a43)(lo)	|	VoC_bngt16_rr(music_drc_save_crosszero_offset1,REG6,REG3)(hi)
0xE5C31A43,	//0x1fde		VoC_jump(music_drc_save_crosszerooffset_end)	|	VoC_sw16_d(REG4,0x1a43)(hi)
		//0x1fe0		music_drc_save_crosszero_offset1
0x1A421504,	//0x1fe0		VoC_sw16_d(REG4,0x1a42)
		//0x1fe2		music_drc_save_crosszerooffset_end
0x2094348B,	//0x1fe2		VoC_bngt16_rr(music_drc_crosszeroconter_ngt_one,REG1,REG3)
0xC25F7006,	//0x1fe4		VoC_sub16_rr(REG7,REG1,REG3,IN_PARALLEL)	|	VoC_lw16i_short(REG6,0x0,DEFAULT)
0x5FC81804,	//0x1fe6		VoC_lw16i_set_inc(REG0,0x5fc8,0x1)
		//0x1fe8		music_drc_find_the_peak_loop
0x209234BE,	//0x1fe8		VoC_bngt16_rr(music_drc_find_the_peak_loop_end,REG7,REG6)
0xD8857023,	//0x1fea		VoC_lw16inc_p(REG5,REG0,IN_PARALLEL)	|	VoC_lw16i_short(REG3,0x1,DEFAULT)
0xFF445F43,	//0x1fec		VoC_lw32z(ACC0,IN_PARALLEL)	|	VoC_push32(REG67,DEFAULT)
0x1A31072F,	//0x1fee		VoC_add16_rd(REG7,REG5,0x1a31)
0x1A361505,	//0x1ff0		VoC_sw16_d(REG5,0x1a36)
0x1584B82D,	//0x1ff2		VoC_sw32_d(ACC0,0x1a34)(lo)	|	VoC_sub16_pr(REG5,REG0,REG5,DEFAULT)
0x15051A34,	//0x1ff4		VoC_sw16_d(REG5,0x1a37)(lo)	|	VoC_sw32_d(ACC0,0x1a34)(hi)
0x18061A37,	//0x1ff6		VoC_lw16i_set_inc(REG2,0x1,0x1)(lo)	|	VoC_sw16_d(REG5,0x1a37)(hi)
0xFFC00001,	//0x1ff8		VoC_NAD	|	VoC_lw16i_set_inc(REG2,0x1,0x1)(hi)
		//0x1ffa		music_drc_get_crosszeropeak_loop
0x1A3738B2,	//0x1ffa		VoC_bgt16_rd(music_drc_get_crosszeropeak_end,REG2,0x1a37)
0x5E10C0BC,	//0x1ffc		VoC_inc_p(REG2,DEFAULT)	|	VoC_add16_rr(REG4,REG2,REG7,DEFAULT)
0xD844E005,	//0x1ffe		VoC_lw16_p(REG4,REG4,DEFAULT)	|	VoC_lw16i_short(REG5,0x0,IN_PARALLEL)
0x5422DE44,	//0x2000		VoC_bngt32_rd(music_drc_temp_value_ngt_crosszeropeak,REG45,0x1a34)(lo)	|	VoC_abs16_r(REG4,DEFAULT)
0x15821A34,	//0x2002		VoC_sw32_d(REG45,0x1a34)(lo)	|	VoC_bngt32_rd(music_drc_temp_value_ngt_crosszeropeak,REG45,0x1a34)(hi)
0xC9141A34,	//0x2004		VoC_add32_rr(ACC0,ACC0,REG45,DEFAULT)	|	VoC_sw32_d(REG45,0x1a34)(hi)
		//0x2005		music_drc_temp_value_ngt_crosszeropeak
0xFFC065F4,	//0x2006		VoC_NAD(IN_PARALLEL)	|	VoC_jump(music_drc_get_crosszeropeak_loop)
		//0x2008		music_drc_get_crosszeropeak_end
0x5FBE1482,	//0x2008		VoC_lw32_d(REG45,0x5fbe)
0x1A346422,	//0x200a		VoC_bnlt32_rd(music_drc_crosszeropeak_lt_32767,REG45,0x1a34)
0x1A341582,	//0x200c		VoC_sw32_d(REG45,0x1a34)
		//0x200e		music_drc_crosszeropeak_lt_32767
0x1A371404,	//0x200e		VoC_lw16_d(REG4,0x1a37)
0x1E6A2B80,	//0x2010		VoC_jal(DRC_POSDIV32_S)
0xE00361C2,	//0x2012		VoC_lw16i_short(REG3,0x0,IN_PARALLEL)	|	VoC_movreg16(REG2,RL7_LO,DEFAULT)
0x1A371404,	//0x2014		VoC_lw16_d(REG4,0x1a37)
0xE0215913,	//0x2016		VoC_lw16i_short(REG1,0x2,IN_PARALLEL)	|	VoC_lw32_sd(REG67,0x1,DEFAULT)
0x1A41140C,	//0x2018		VoC_lw16_d(RL6_LO,0x1a41)
0x1A45140D,	//0x201a		VoC_lw16_d(RL6_HI,0x1a45)
0x1A3E1484,	//0x201c		VoC_lw32_d(ACC0,0x1a3e)
0x20263531,	//0x201e		VoC_be16_rr(music_drc_ch_right,REG6,REG1)
0x1A40140C,	//0x2020		VoC_lw16_d(RL6_LO,0x1a40)
0x1A44140D,	//0x2022		VoC_lw16_d(RL6_HI,0x1a44)
0x1A3C1484,	//0x2024		VoC_lw32_d(ACC0,0x1a3c)
		//0x2026		music_drc_ch_right
0x48EA0824,	//0x2026		VoC_mult16_rd(REG4,REG4,0x48ea)
0xFF257B81,	//0x2028		VoC_movreg32(ACC1,ACC0,IN_PARALLEL)	|	VoC_shr32_ri(REG23,0xfffffff0,DEFAULT)
0xF5F94A64,	//0x202a		VoC_lw16i_short(FORMAT32,0xffffffff,IN_PARALLEL)	|	VoC_sub32_rr(ACC0,REG23,ACC0,DEFAULT)
0x5FC00924,	//0x202c		VoC_add32_rd(ACC0,ACC0,0x5fc0)
0x3C24E125,	//0x202e		VoC_bngt16_rd(music_drc_min_alpha,REG4,0x48ed)(lo)	|	VoC_movreg16(REG5,ACC0_HI,DEFAULT)
0x140448ED,	//0x2030		VoC_lw16_d(REG4,0x48ed)(lo)	|	VoC_bngt16_rd(music_drc_min_alpha,REG4,0x48ed)(hi)
0xCD2C48ED,	//0x2032		VoC_multf32_rr(ACC0,REG4,REG5,DEFAULT)	|	VoC_lw16_d(REG4,0x48ed)(hi)
		//0x2033		music_drc_min_alpha
0x4965FFC0,	//0x2034		VoC_add32_rr(ACC1,ACC1,ACC0,DEFAULT)	|	VoC_NOP
0x590BF401,	//0x2036		VoC_lw32_sd(REG67,0x0,DEFAULT)	|	VoC_lw16i_short(FORMAT32,0x0,IN_PARALLEL)
0x31C6E015,	//0x2038		VoC_bnez16_r(music_drc_i_nez,REG6)(lo)	|	VoC_lw16i_short(REG5,0x1,IN_PARALLEL)
0x18062048,	//0x203a		VoC_lw16i_set_inc(REG2,0x6208,0x1)(lo)	|	VoC_bnez16_r(music_drc_i_nez,REG6)(hi)
0x18056208,	//0x203c		VoC_lw16i_set_inc(REG1,0x15b0,0x1)(lo)	|	VoC_lw16i_set_inc(REG2,0x6208,0x1)(hi)
0x140715B0,	//0x203e		VoC_lw16_d(REG7,0x1a36)(lo)	|	VoC_lw16i_set_inc(REG1,0x15b0,0x1)(hi)
0xFFC01A36,	//0x2040		VoC_NAD	|	VoC_lw16_d(REG7,0x1a36)(hi)
		//0x2042		music_drc_i_ez_loop
0x204834BE,	//0x2042		VoC_bngt16_rr(music_drc_i_nez,REG7,REG6)
0x5C9DDCAC,	//0x2044		VoC_sw16inc_p(RL6_HI,REG1,DEFAULT)	|	VoC_sw16inc_p(RL6_LO,REG2,DEFAULT)
0xE5FBC1AE,	//0x2046		VoC_jump(music_drc_i_ez_loop)	|	VoC_add16_rr(REG6,REG6,REG5,IN_PARALLEL)
		//0x2048		music_drc_i_nez
0x1E922B80,	//0x2048		VoC_jal(DYNAMIC_COMPRESSOR_VOC)
0x1A371404,	//0x204a		VoC_lw16_d(REG4,0x1a37)
0xF7A66107,	//0x204c		VoC_movreg16(REG6,RL6_HI,IN_PARALLEL)	|	VoC_movreg16(REG7,ACC0_LO,DEFAULT)
0x48EB0824,	//0x204e		VoC_mult16_rd(REG4,REG4,0x48eb)
0xF5F943F5,	//0x2050		VoC_lw16i_short(FORMAT32,0xffffffff,IN_PARALLEL)	|	VoC_sub16_rr(REG5,REG7,REG6,DEFAULT)
0x48ED3C24,	//0x2052		VoC_bngt16_rd(music_drc_min_alpha2_alpha_max,REG4,0x48ed)
0x48ED1404,	//0x2054		VoC_lw16_d(REG4,0x48ed)
		//0x2056		music_drc_min_alpha2_alpha_max
0xFFC0CD29,	//0x2056		VoC_NOP	|	VoC_multf32_rr(REG23,REG4,REG5,DEFAULT)
0xF401419E,	//0x2058		VoC_lw16i_short(FORMAT32,0x0,IN_PARALLEL)	|	VoC_add16_rr(REG6,REG6,REG3,DEFAULT)
0x205E34B7,	//0x205a		VoC_bngt16_rr(music_drc_min_gain_smooth_gain_temp,REG6,REG7)
0xFFC060E6,	//0x205c		VoC_NAD(IN_PARALLEL)	|	VoC_movreg16(REG6,REG7,DEFAULT)
		//0x205e		music_drc_min_gain_smooth_gain_temp
0xE0245807,	//0x205e		VoC_lw16i_short(REG4,0x2,IN_PARALLEL)	|	VoC_lw16_p(REG7,REG0,DEFAULT)
0xE0155911,	//0x2060		VoC_lw16i_short(REG5,0x1,IN_PARALLEL)	|	VoC_lw32_sd(REG23,0x1,DEFAULT)
0x1A341486,	//0x2062		VoC_lw32_d(RL6,0x1a34)
0x206C3514,	//0x2064		VoC_be16_rr(music_drc_ch_right_updata_peaklast2_gainsmooth2,REG2,REG4)
0x1A3C1585,	//0x2066		VoC_sw32_d(ACC1,0x1a3c)
0x1A441506,	//0x2068		VoC_sw16_d(REG6,0x1a44)
0xFFC065C6,	//0x206a		VoC_NAD(IN_PARALLEL)	|	VoC_jump(music_drc_updata_global_parameters_end)
		//0x206c		music_drc_ch_right_updata_peaklast2_gainsmooth2
0x1A3E1585,	//0x206c		VoC_sw32_d(ACC1,0x1a3e)
0x1A451506,	//0x206e		VoC_sw16_d(REG6,0x1a45)
		//0x2070		music_drc_updata_global_parameters_end
0x1A3248A7,	//0x2070		VoC_blt16_rd(music_drc_CrossZeroIndex_lt_frame,REG7,0x1a32)
0x1A321407,	//0x2072		VoC_lw16_d(REG7,0x1a32)
0x207A3514,	//0x2074		VoC_be16_rr(music_drc_save_history_peak2,REG2,REG4)
0x1A40150C,	//0x2076		VoC_sw16_d(RL6_LO,0x1a40)
0xFFC065C4,	//0x2078		VoC_NAD(IN_PARALLEL)	|	VoC_jump(music_drc_CrossZeroIndex_lt_frame)
		//0x207a		music_drc_save_history_peak2
0x1A41150C,	//0x207a		VoC_sw16_d(RL6_LO,0x1a41)
		//0x207c		music_drc_CrossZeroIndex_lt_frame
0x62081806,	//0x207c		VoC_lw16i_set_inc(REG2,0x6208,0x1)
0x15B01805,	//0x207e		VoC_lw16i_set_inc(REG1,0x15b0,0x1)
0x1406E0C8,	//0x2080		VoC_lw16_d(REG6,0x1a36)(lo)	|	VoC_movreg16(ACC0_LO,REG6,DEFAULT)
0x40711A36,	//0x2082		VoC_add16_rr(REG1,REG1,REG6,DEFAULT)	|	VoC_lw16_d(REG6,0x1a36)(hi)
0xFFC0C0B2,	//0x2084		VoC_NAD	|	VoC_add16_rr(REG2,REG2,REG6,IN_PARALLEL)
		//0x2086		music_drc_CrossZeroIndex_i_to_i_1_loop
0x208C34BE,	//0x2086		VoC_bngt16_rr(music_drc_CrossZeroIndex_i_to_i_1_end,REG7,REG6)
0x5C98DCAC,	//0x2088		VoC_sw16inc_p(ACC0_LO,REG1,DEFAULT)	|	VoC_sw16inc_p(RL6_LO,REG2,DEFAULT)
0xE5FBC1AE,	//0x208a		VoC_jump(music_drc_CrossZeroIndex_i_to_i_1_loop)	|	VoC_add16_rr(REG6,REG6,REG5,IN_PARALLEL)
		//0x208c		music_drc_CrossZeroIndex_i_to_i_1_end
0x41AEDF03,	//0x208c		VoC_add16_rr(REG6,REG6,REG5,DEFAULT)	|	VoC_pop32(REG67,DEFAULT)
0x2B00F004,	//0x208e		VoC_jump_lg(music_drc_find_the_peak_loop)(lo)	|	VoC_lw16i_short(INC0,0x1,IN_PARALLEL)
0xFFC01FE8,	//0x2090		VoC_NAD	|	VoC_jump_lg(music_drc_find_the_peak_loop)(hi)
		//0x2092		music_drc_find_the_peak_loop_end
0x20CA2B00,	//0x2092		VoC_jump_lg(music_drc_next_step_do)
		//0x2094		music_drc_crosszeroconter_ngt_one
0x1A312004,	//0x2094		VoC_lw16d_set_inc(REG0,0x1a31,0x1)
0x00001805,	//0x2096		VoC_lw16i_set_inc(REG1,0x0,0x1)
0xF004D885,	//0x2098		VoC_lw16i_short(REG4,0x0,DEFAULT)	|	VoC_lw16inc_p(REG5,REG0,DEFAULT)
		//0x209a		music_drc_framepeak_loop
0xDE085E45,	//0x209a		VoC_inc_p(REG1,IN_PARALLEL)	|	VoC_abs16_r(REG5,DEFAULT)
0x209F34AC,	//0x209c		VoC_bngt16_rr(music_drc_ngt_FramePeak,REG5,REG4)
0xD885E0A4,	//0x209e		VoC_lw16inc_p(REG5,REG0,DEFAULT)	|	VoC_movreg16(REG4,REG5,DEFAULT)
		//0x209f		music_drc_ngt_FramePeak
0x1A324B91,	//0x20a0		VoC_blt16_rd(music_drc_framepeak_loop,REG1,0x1a32)
0xE005590B,	//0x20a2		VoC_lw16i_short(REG5,0x0,IN_PARALLEL)	|	VoC_lw32_sd(REG67,0x0,DEFAULT)
0x3433F023,	//0x20a4		VoC_bgt16_rr(music_drc_else_ch_right_updata_globals,REG6,REG3)(lo)	|	VoC_lw16i_short(REG3,0x1,DEFAULT)
0x158220B0,	//0x20a6		VoC_sw32_d(REG45,0x1a3c)(lo)	|	VoC_bgt16_rr(music_drc_else_ch_right_updata_globals,REG6,REG3)(hi)
0x15041A3C,	//0x20a8		VoC_sw16_d(REG4,0x1a40)(lo)	|	VoC_sw32_d(REG45,0x1a3c)(hi)
0x15051A40,	//0x20aa		VoC_sw16_d(REG5,0x1a42)(lo)	|	VoC_sw16_d(REG4,0x1a40)(hi)
0x140C1A42,	//0x20ac		VoC_lw16_d(RL6_LO,0x1a44)(lo)	|	VoC_sw16_d(REG5,0x1a42)(hi)
0xE5C91A44,	//0x20ae		VoC_jump(music_drc_else_updata_end)	|	VoC_lw16_d(RL6_LO,0x1a44)(hi)
		//0x20b0		music_drc_else_ch_right_updata_globals
0x1A3E1582,	//0x20b0		VoC_sw32_d(REG45,0x1a3e)
0x1A411504,	//0x20b2		VoC_sw16_d(REG4,0x1a41)
0x1A431505,	//0x20b4		VoC_sw16_d(REG5,0x1a43)
0x1A45140C,	//0x20b6		VoC_lw16_d(RL6_LO,0x1a45)
		//0x20b8		music_drc_else_updata_end
0x1A321407,	//0x20b8		VoC_lw16_d(REG7,0x1a32)
0xF78D6085,	//0x20ba		VoC_movreg16(RL6_HI,RL6_LO,IN_PARALLEL)	|	VoC_movreg16(REG5,REG4,DEFAULT)
0x1807F80F,	//0x20bc		VoC_lw16i_set_inc(REG3,0x0,0x1)(lo)	|	VoC_shr16_ri(REG7,0x1,DEFAULT)
0x18080000,	//0x20be		VoC_lw16i_set_inc(REG0,0x6208,0x2)(lo)	|	VoC_lw16i_set_inc(REG3,0x0,0x1)(hi)
0x18096208,	//0x20c0		VoC_lw16i_set_inc(REG1,0x15b0,0x2)(lo)	|	VoC_lw16i_set_inc(REG0,0x6208,0x2)(hi)
0xFFC015B0,	//0x20c2		VoC_NAD	|	VoC_lw16i_set_inc(REG1,0x15b0,0x2)(hi)
		//0x20c4		music_drc_else_loop
0x20CA34BB,	//0x20c4		VoC_bngt16_rr(music_drc_else_loop_end,REG7,REG3)
0x5DC2DE18,	//0x20c6		VoC_sw32inc_p(REG45,REG0,DEFAULT)	|	VoC_inc_p(REG3,DEFAULT)
0xE5FBDDCE,	//0x20c8		VoC_jump(music_drc_else_loop)	|	VoC_sw32inc_p(RL6,REG1,IN_PARALLEL)
		//0x20ca		music_drc_else_loop_end
		//0x20ca		music_drc_next_step_do
0x48EE1407,	//0x20ca		VoC_lw16_d(REG7,0x48ee)
0xEF857686,	//0x20cc		VoC_lw16i_short(REG5,0xfffffff8,IN_PARALLEL)	|	VoC_lw16i_short(REG6,0xfffffff4,DEFAULT)
0x48F2073F,	//0x20ce		VoC_add16_rd(REG7,REG7,0x48f2)
0x20DC343D,	//0x20d0		VoC_bgt16_rr(music_drc_dB_temp_if_end,REG7,REG5)
0xEF0576A6,	//0x20d2		VoC_lw16i_short(REG5,0xfffffff0,IN_PARALLEL)	|	VoC_lw16i_short(REG6,0xfffffff5,DEFAULT)
0x20DC343D,	//0x20d4		VoC_bgt16_rr(music_drc_dB_temp_if_end,REG7,REG5)
0xEE0576C6,	//0x20d6		VoC_lw16i_short(REG5,0xffffffe0,IN_PARALLEL)	|	VoC_lw16i_short(REG6,0xfffffff6,DEFAULT)
0x20DC343D,	//0x20d8		VoC_bgt16_rr(music_drc_dB_temp_if_end,REG7,REG5)
0xFFC076E6,	//0x20da		VoC_NAD(IN_PARALLEL)	|	VoC_lw16i_short(REG6,0xfffffff7,DEFAULT)
		//0x20dc		music_drc_dB_temp_if_end
0x5FBE1484,	//0x20dc		VoC_lw32_d(ACC0,0x5fbe)
0x20EA3187,	//0x20de		VoC_bez16_r(music_drc_dB_temp_ez,REG7)
0xEF457E37,	//0x20e0		VoC_lw16i_short(REG5,0xfffffff4,IN_PARALLEL)	|	VoC_shr16_rr(REG7,REG6,DEFAULT)
0xC37671F9,	//0x20e2		VoC_sub16_rr(REG6,REG5,REG6,IN_PARALLEL)	|	VoC_lw16i_short(FORMAT32,0xf,DEFAULT)
0x5FBA0A38,	//0x20e4		VoC_multf32_rd(REG01,REG7,0x5fba)
0xFE30F1E4,	//0x20e6		VoC_shr16_rr(REG0,REG6,DEFAULT)	|	VoC_lw16i_short(REG4,0xf,DEFAULT)
0x1E282B80,	//0x20e8		VoC_jal(DRC_POW10_FXP)
		//0x20ea		music_drc_dB_temp_ez
0x62081804,	//0x20ea		VoC_lw16i_set_inc(REG0,0x6208,0x1)
0x15B01805,	//0x20ec		VoC_lw16i_set_inc(REG1,0x15b0,0x1)
0x15AF1508,	//0x20ee		VoC_sw16_d(ACC0_LO,0x15af)
0xE0067024,	//0x20f0		VoC_lw16i_short(REG6,0x0,IN_PARALLEL)	|	VoC_lw16i_short(REG4,0x1,DEFAULT)
0x1A321407,	//0x20f2		VoC_lw16_d(REG7,0x1a32)
0x1A3307B5,	//0x20f4		VoC_sub16_rd(REG5,REG6,0x1a33)
0x1A301402,	//0x20f6		VoC_lw16_d(REG2,0x1a30)
0x1A311404,	//0x20f8		VoC_lw16_d(REG4,0x1a31)
0x1A331505,	//0x20fa		VoC_sw16_d(REG5,0x1a33)
		//0x20fc		music_drc_get_output_loop
0x215C34BE,	//0x20fc		VoC_bngt16_rr(music_drc_get_output_end,REG7,REG6)
0xDFC25F43,	//0x20fe		VoC_push16(REG2,IN_PARALLEL)	|	VoC_push32(REG67,DEFAULT)
0xF5F95886,	//0x2100		VoC_lw16i_short(FORMAT32,0xffffffff,IN_PARALLEL)	|	VoC_lw16inc_p(REG6,REG0,DEFAULT)
0x1504D897,	//0x2102		VoC_sw16_d(REG4,0x1a38)(lo)	|	VoC_lw16inc_p(REG7,REG1,DEFAULT)
0xCDB91A38,	//0x2104		VoC_multf32_rr(REG23,REG6,REG7,DEFAULT)	|	VoC_sw16_d(REG4,0x1a38)(hi)
0x1A331405,	//0x2106		VoC_lw16_d(REG5,0x1a33)
0x15AF1404,	//0x2108		VoC_lw16_d(REG4,0x15af)
0xE0027E2B,	//0x210a		VoC_lw16i_short(REG2,0x0,IN_PARALLEL)	|	VoC_shr16_rr(REG3,REG5,DEFAULT)
0x211834A3,	//0x210c		VoC_bngt16_rr(music_drc_output_temp_nlt_thr_temp,REG4,REG3)
0x1A381406,	//0x210e		VoC_lw16_d(REG6,0x1a38)
0x99F1F7F9,	//0x2110		VoC_multf32_rp(REG23,REG7,REG6,DEFAULT)	|	VoC_lw16i_short(FORMAT32,0xffffffff,DEFAULT)
0x0909FFC0,	//0x2112		VoC_add32_rd(REG23,REG23,0x5fc0)(lo)	|	VoC_NOP
0xFE2B5FC0,	//0x2114		VoC_shr16_rr(REG3,REG5,DEFAULT)	|	VoC_add32_rd(REG23,REG23,0x5fc0)(hi)
0x21512B00,	//0x2116		VoC_jump_lg(music_drc_output_temp_nlt_thr_temp_end)
		//0x2118		music_drc_output_temp_nlt_thr_temp
0xE00760C3,	//0x2118		VoC_lw16i_short(REG7,0x0,IN_PARALLEL)	|	VoC_movreg16(REG3,REG6,DEFAULT)
0x3303FB83,	//0x211a		VoC_bez32_r(norm_l_L_var1_end,REG67)(lo)	|	VoC_shr32_ri(REG67,0xfffffff0,DEFAULT)
0x7F1C2130,	//0x211c		VoC_movreg32(ACC0,REG67,DEFAULT)	|	VoC_bez32_r(norm_l_L_var1_end,REG67)(hi)
0x2983F3FE,	//0x211e		VoC_and32_rd(REG67,0x5fc4)(lo)	|	VoC_lw16i_short(INC2,0xffffffff,IN_PARALLEL)
0x33435FC4,	//0x2120		VoC_bnez32_r(norm_l_L_var1_loop2,REG67)(lo)	|	VoC_and32_rd(REG67,0x5fc4)(hi)
0xFFC0212A,	//0x2122		VoC_NAD	|	VoC_bnez32_r(norm_l_L_var1_loop2,REG67)(hi)
		//0x2124		norm_l_L_var1_loop1
0x5FC264A4,	//0x2124		VoC_bnlt32_rd(norm_l_L_var1_end,ACC0,0x5fc2)
0xDE107BFC,	//0x2126		VoC_inc_p(REG2,IN_PARALLEL)	|	VoC_shr32_ri(ACC0,0xffffffff,DEFAULT)
0xFFC065FC,	//0x2128		VoC_NAD(IN_PARALLEL)	|	VoC_jump(norm_l_L_var1_loop1)
		//0x212a		norm_l_L_var1_loop2
0x5FC66034,	//0x212a		VoC_blt32_rd(norm_l_L_var1_end,ACC0,0x5fc6)
0xDE107BFC,	//0x212c		VoC_inc_p(REG2,IN_PARALLEL)	|	VoC_shr32_ri(ACC0,0xffffffff,DEFAULT)
0xFFC065FC,	//0x212e		VoC_NAD(IN_PARALLEL)	|	VoC_jump(norm_l_L_var1_loop2)
		//0x2130		norm_l_L_var1_end
0xEFF57E13,	//0x2130		VoC_lw16i_short(REG5,0xffffffff,IN_PARALLEL)	|	VoC_shr16_rr(REG3,REG2,DEFAULT)
0x2136341C,	//0x2132		VoC_bgt16_rr(music_drc_Thr_temp_nlt_CrossZeroPeakBuffer,REG3,REG4)
0xC0AA780C,	//0x2134		VoC_add16_rr(REG2,REG2,REG5,IN_PARALLEL)	|	VoC_shr16_ri(REG4,0x1,DEFAULT)
		//0x2136		music_drc_Thr_temp_nlt_CrossZeroPeakBuffer
0xE0067005,	//0x2136		VoC_lw16i_short(REG6,0x0,IN_PARALLEL)	|	VoC_lw16i_short(REG5,0x0,DEFAULT)
0x214A342C,	//0x2138		VoC_bgt16_rr(divide_s_return_out,REG5,REG4)
0x214A342B,	//0x213a		VoC_bgt16_rr(divide_s_return_out,REG5,REG3)
0x214A3423,	//0x213c		VoC_bgt16_rr(divide_s_return_out,REG4,REG3)
0x7FFF0A86,	//0x213e		VoC_lw16i(REG6,0x7fff)
0x214A3523,	//0x2140		VoC_be16_rr(divide_s_return_out,REG4,REG3)
0xF6887009,	//0x2142		VoC_movreg16(ACC0_LO,REG4,IN_PARALLEL)	|	VoC_lw16i_short(ACC0_HI,0x0,DEFAULT)
0xFB8C6064,	//0x2144		VoC_shr32_ri(ACC0,0xfffffff1,IN_PARALLEL)	|	VoC_movreg16(REG4,REG3,DEFAULT)
0x1E6A2B80,	//0x2146		VoC_jal(DRC_POSDIV32_S)
0xFFC061C6,	//0x2148		VoC_NAD(IN_PARALLEL)	|	VoC_movreg16(REG6,RL7_LO,DEFAULT)
		//0x214a		divide_s_return_out
0x1A381407,	//0x214a		VoC_lw16_d(REG7,0x1a38)
0xF64577F9,	//0x214c		VoC_movreg16(REG5,REG2,IN_PARALLEL)	|	VoC_lw16i_short(FORMAT32,0xffffffff,DEFAULT)
0xFFC099B9,	//0x214e		VoC_NOP	|	VoC_multf32_rp(REG23,REG6,REG7,DEFAULT)
0xDF82FE2B,	//0x2150		VoC_pop16(REG2,DEFAULT)	|	VoC_shr16_rr(REG3,REG5,DEFAULT)
		//0x2151		music_drc_output_temp_nlt_thr_temp_end
0x48F01412,	//0x2152		VoC_lw16_d(INC2,0x48f0)
0xE0145F03,	//0x2154		VoC_lw16i_short(REG4,0x1,IN_PARALLEL)	|	VoC_pop32(REG67,DEFAULT)
0xC1A65CA3,	//0x2156		VoC_add16_rr(REG6,REG6,REG4,IN_PARALLEL)	|	VoC_sw16inc_p(REG3,REG2,DEFAULT)
0x1A380724,	//0x2158		VoC_add16_rd(REG4,REG4,0x1a38)
0x20FC2B00,	//0x215a		VoC_jump_lg(music_drc_get_output_loop)
		//0x215c		music_drc_get_output_end
0xFFC0DF03,	//0x215c		VoC_NOP	|	VoC_pop32(REG67,DEFAULT)
0x48E91507,	//0x215e		VoC_sw16_d(REG7,0x48e9)
0xFFC0DFA9,	//0x2160		VoC_NOP	|	VoC_pop16(RA,DEFAULT)
0xFFC06580,	//0x2162		VoC_NAD(IN_PARALLEL)	|	VoC_return
		//0x2164		DRC_MODE_VOC
0xF8FD5FE9,	//0x2164		VoC_shr16_ri(REG5,0xffffffff,IN_PARALLEL)	|	VoC_push16(RA,DEFAULT)
0x48E21407,	//0x2166		VoC_lw16_d(REG7,0x48e2)
0xF405701C,	//0x2168		VoC_lw16i_short(WRAP1,0x0,IN_PARALLEL)	|	VoC_lw16i_short(WRAP0,0x0,DEFAULT)
0xF407701E,	//0x216a		VoC_lw16i_short(WRAP3,0x0,IN_PARALLEL)	|	VoC_lw16i_short(WRAP2,0x0,DEFAULT)
0x40441484,	//0x216c		VoC_lw32_d(ACC0,0x4044)
0x0D1E0A82,	//0x216e		VoC_lw16i(REG2,0xd1e)
0x04C80A83,	//0x2170		VoC_lw16i(REG3,0x4c8)
0x01AE2B80,	//0x2172		VoC_jal(Coolsand_VoC_DMA)
0x21B43187,	//0x2174		VoC_bez16_r(drc_mode_voc_no_work,REG7)
0x15AD1505,	//0x2176		VoC_sw16_d(REG5,0x15ad)
0x48F01504,	//0x2178		VoC_sw16_d(REG4,0x48f0)
0x40421484,	//0x217a		VoC_lw32_d(ACC0,0x4042)
0x2ED40A82,	//0x217c		VoC_lw16i(REG2,0x2ed4)
0x01100A83,	//0x217e		VoC_lw16i(REG3,0x110)
0x01AE2B80,	//0x2180		VoC_jal(Coolsand_VoC_DMA)
		//0x2182		drc_mode_voc_Mono_or_Stereo
0x15AC1500,	//0x2182		VoC_sw16_d(REG0,0x15ac)
0x15AD1405,	//0x2184		VoC_lw16_d(REG5,0x15ad)
0x04800A86,	//0x2186		VoC_lw16i(REG6,0x480)
0x21B43145,	//0x2188		VoC_bngtz16_r(drc_mode_do_end,REG5)
0x1506C377,	//0x218a		VoC_sw16_d(REG6,0x15ae)(lo)	|	VoC_sub16_rr(REG7,REG5,REG6,DEFAULT)
0x324715AE,	//0x218c		VoC_bnltz16_r(drc_mode_pcmlen_gt_framelen,REG7)(lo)	|	VoC_sw16_d(REG6,0x15ae)(hi)
0x15052192,	//0x218e		VoC_sw16_d(REG5,0x15ae)(lo)	|	VoC_bnltz16_r(drc_mode_pcmlen_gt_framelen,REG7)(hi)
0xFFC015AE,	//0x2190		VoC_NAD	|	VoC_sw16_d(REG5,0x15ae)(hi)
		//0x2192		drc_mode_pcmlen_gt_framelen
0x15AD1507,	//0x2192		VoC_sw16_d(REG7,0x15ad)
0xE0057000,	//0x2194		VoC_lw16i_short(REG5,0x0,IN_PARALLEL)	|	VoC_lw16i_short(REG0,0x0,DEFAULT)
0x48F01401,	//0x2196		VoC_lw16_d(REG1,0x48f0)
		//0x2198		drc_mode_music_drc_loop_start
0x21B03501,	//0x2198		VoC_be16_rr(drc_mode_music_drc_loop_end,REG0,REG1)
0xE0165F40,	//0x219a		VoC_lw16i_short(REG6,0x1,IN_PARALLEL)	|	VoC_push32(REG01,DEFAULT)
0x15AC1402,	//0x219c		VoC_lw16_d(REG2,0x15ac)
0x1A460A84,	//0x219e		VoC_lw16i(REG4,0x1a46)
0xC2774082,	//0x21a0		VoC_sub16_rr(REG7,REG1,REG6,IN_PARALLEL)	|	VoC_add16_rr(REG2,REG2,REG0,DEFAULT)
0x15AE1401,	//0x21a2		VoC_lw16_d(REG1,0x15ae)
0xF6434186,	//0x21a4		VoC_movreg16(REG3,REG2,IN_PARALLEL)	|	VoC_add16_rr(REG6,REG6,REG0,DEFAULT)
0xC12C7E39,	//0x21a6		VoC_add16_rr(REG4,REG4,REG5,IN_PARALLEL)	|	VoC_shr16_rr(REG1,REG7,DEFAULT)
0x1F3D2B80,	//0x21a8		VoC_jal(MUSIC_DRC_VOC)
0xF0045F00,	//0x21aa		VoC_lw16i_short(INC0,0x1,IN_PARALLEL)	|	VoC_pop32(REG01,DEFAULT)
0x15AE1405,	//0x21ac		VoC_lw16_d(REG5,0x15ae)
0xE5E9DE00,	//0x21ae		VoC_jump(drc_mode_music_drc_loop_start)	|	VoC_inc_p(REG0,DEFAULT)
		//0x21b0		drc_mode_music_drc_loop_end
0x15AC0728,	//0x21b0		VoC_add16_rd(REG0,REG5,0x15ac)
0x21822B00,	//0x21b2		VoC_jump_lg(drc_mode_voc_Mono_or_Stereo)
		//0x21b4		drc_mode_do_end
		//0x21b4		drc_mode_voc_no_work
0x48F46C1B,	//0x21b4		VoC_bez16_d(SKIP_MP3EQ,0x48f4)
0x7FFF0A88,	//0x21b6		VoC_lw16i(ACC0_LO,0x7fff)
0x00000A89,	//0x21b8		VoC_lw16i(ACC0_HI,0x0)
0x00000ACA,	//0x21ba		VoC_lw16i(ACC1_LO,0x8000)
0x7FFF0ACB,	//0x21bc		VoC_lw16i(ACC1_HI,0xffff)
0x23C41584,	//0x21be		VoC_sw32_d(ACC0,0x23c4)
0x23C61585,	//0x21c0		VoC_sw32_d(ACC1,0x23c6)
0x0CAC0A83,	//0x21c2		VoC_lw16i(REG3,0xcac)
0x2B80F004,	//0x21c4		VoC_jal(Rda_ProcessIIR)(lo)	|	VoC_lw16i_short(REG4,0x0,DEFAULT)
0xF0462255,	//0x21c6		VoC_lw16i_short(REG6,0x2,DEFAULT)	|	VoC_jal(Rda_ProcessIIR)(hi)
0x4015443E,	//0x21c8		VoC_bne16_rd(MP3EQ_L0,REG6,0x4015)
0x0CAD0A83,	//0x21ca		VoC_lw16i(REG3,0xcad)
0x2B80F024,	//0x21cc		VoC_jal(Rda_ProcessIIR)(lo)	|	VoC_lw16i_short(REG4,0x1,DEFAULT)
0xFF472255,	//0x21ce		VoC_lw32z(RL7,DEFAULT)	|	VoC_jal(Rda_ProcessIIR)(hi)
		//0x21cf		MP3EQ_L0
		//0x21cf		SKIP_MP3EQ
0x40441484,	//0x21d0		VoC_lw32_d(ACC0,0x4044)
0x40000A8F,	//0x21d2		VoC_lw16i(RL7_HI,0x4000)
0x0D1E0A82,	//0x21d4		VoC_lw16i(REG2,0xd1e)
0x04C80A83,	//0x21d6		VoC_lw16i(REG3,0x4c8)
0x2B80E53C,	//0x21d8		VoC_jal(Coolsand_VoC_DMA)(lo)	|	VoC_or32_rr(ACC0,RL7,DEFAULT)
0xDFA901AE,	//0x21da		VoC_pop16(RA,DEFAULT)	|	VoC_jal(Coolsand_VoC_DMA)(hi)
0xE580FFC0,	//0x21dc		VoC_return	|	VoC_NOP
		//0x21de		Rda_ProcessIIRBand
0x2349200B,	//0x21de		VoC_lw16d_set_inc(REG3,0x2349,0x2)
0x402EF046,	//0x21e0		VoC_be16_rd(Rda_ProcessIIRBand_L0,REG6,0x4015)(lo)	|	VoC_lw16i_short(REG6,0x2,DEFAULT)
0x20074015,	//0x21e2		VoC_lw16d_set_inc(REG3,0x2349,0x1)(lo)	|	VoC_be16_rd(Rda_ProcessIIRBand_L0,REG6,0x4015)(hi)
0xFFC02349,	//0x21e4		VoC_NAD	|	VoC_lw16d_set_inc(REG3,0x2349,0x1)(hi)
		//0x21e6		Rda_ProcessIIRBand_L0
0x234B1402,	//0x21e6		VoC_lw16_d(REG2,0x234b)
0x23521406,	//0x21e8		VoC_lw16_d(REG6,0x2352)
0x23531407,	//0x21ea		VoC_lw16_d(REG7,0x2353)
0xD9BFD9B6,	//0x21ec		VoC_lw32_p(RL7,REG7,DEFAULT)	|	VoC_lw32_p(RL6,REG6,DEFAULT)
0x23501404,	//0x21ee		VoC_lw16_d(REG4,0x2350)
0x23511406,	//0x21f0		VoC_lw16_d(REG6,0x2351)
0xD9B3D9A2,	//0x21f2		VoC_lw32_p(REG67,REG6,DEFAULT)	|	VoC_lw32_p(REG45,REG4,DEFAULT)
0xF01AF1D9,	//0x21f4		VoC_lw16i_short(FORMATX,0x0,DEFAULT)	|	VoC_lw16i_short(FORMAT32,0xe,DEFAULT)
0x700BF058,	//0x21f6		VoC_lw16i_short(ACC1_HI,0x0,DEFAULT)	|	VoC_lw16i_short(FORMAT16,0x2,DEFAULT)
0xFBA5E01A,	//0x21f8		VoC_shr32_ri(ACC1,0xfffffff4,DEFAULT)	|	VoC_lw16i_short(ACC1_LO,0x1,IN_PARALLEL)
0x47FB1401,	//0x21fa		VoC_lw16_d(REG1,0x47fb)
0x4018F040,	//0x21fc		VoC_be16_rd(Rda_ProcessIIRBand_L1,REG0,0x4015)(lo)	|	VoC_lw16i_short(REG0,0x2,DEFAULT)
0xF8F94015,	//0x21fe		VoC_shr16_ri(REG1,0xffffffff,DEFAULT)	|	VoC_be16_rd(Rda_ProcessIIRBand_L1,REG0,0x4015)(hi)
		//0x2200		Rda_ProcessIIRBand_L1
0xFFC07000,	//0x2200		VoC_NAD(IN_PARALLEL)	|	VoC_lw16i_short(REG0,0x0,DEFAULT)
		//0x2202		process_iir_band_loop_start
0x22483501,	//0x2202		VoC_be16_rr(process_iir_band_loop_end,REG0,REG1)
0xDF42DF40,	//0x2204		VoC_push32(REG45,DEFAULT)	|	VoC_push32(REG01,DEFAULT)
0x1400DF43,	//0x2206		VoC_lw16_d(REG0,0x234e)(lo)	|	VoC_push32(REG67,DEFAULT)
0x1401234E,	//0x2208		VoC_lw16_d(REG1,0x234f)(lo)	|	VoC_lw16_d(REG0,0x234e)(hi)
0xFBF2234F,	//0x220a		VoC_shr32_ri(REG45,0xfffffffe,DEFAULT)	|	VoC_lw16_d(REG1,0x234f)(hi)
0xCCA4F914,	//0x220c		VoC_multf32_rr(ACC0,REG2,REG4,DEFAULT)	|	VoC_shru16_ri(REG4,0x2,DEFAULT)
0x5835CE55,	//0x220e		VoC_lw16_p(REG5,REG3,DEFAULT)	|	VoC_macX_rr(REG2,REG5,DEFAULT)
0x1402E004,	//0x2210		VoC_lw16_d(REG2,0x234a)(lo)	|	VoC_lw16i_short(REG4,0x0,IN_PARALLEL)
0x7A1A234A,	//0x2212		VoC_shr32_ri(REG45,0x3,DEFAULT)	|	VoC_lw16_d(REG2,0x234a)(hi)
0xFBF2DFC3,	//0x2214		VoC_shr32_ri(REG45,0xfffffffe,DEFAULT)	|	VoC_push16(REG3,IN_PARALLEL)
0xCE14F914,	//0x2216		VoC_mac32_rr(REG2,REG4,DEFAULT)	|	VoC_shru16_ri(REG4,0x2,DEFAULT)
0x1402CE55,	//0x2218		VoC_lw16_d(REG2,0x234c)(lo)	|	VoC_macX_rr(REG2,REG5,DEFAULT)
0xFBF3234C,	//0x221a		VoC_shr32_ri(REG67,0xfffffffe,DEFAULT)	|	VoC_lw16_d(REG2,0x234c)(hi)
0xCE16F916,	//0x221c		VoC_mac32_rr(REG2,REG6,DEFAULT)	|	VoC_shru16_ri(REG6,0x2,DEFAULT)
0x7F3ACE57,	//0x221e		VoC_movreg32(REG45,RL7,DEFAULT)	|	VoC_macX_rr(REG2,REG7,DEFAULT)
0x7BF2FF33,	//0x2220		VoC_shr32_ri(REG45,0xfffffffe,DEFAULT)	|	VoC_movreg32(REG67,RL6,IN_PARALLEL)
0x7914FBF3,	//0x2222		VoC_shru16_ri(REG4,0x2,DEFAULT)	|	VoC_shr32_ri(REG67,0xfffffffe,IN_PARALLEL)
0xCE0CF916,	//0x2224		VoC_mac32_rr(REG1,REG4,DEFAULT)	|	VoC_shru16_ri(REG6,0x2,IN_PARALLEL)
0xCE06CE4D,	//0x2226		VoC_mac32_rr(REG0,REG6,DEFAULT)	|	VoC_macX_rr(REG1,REG5,DEFAULT)
0xFF37CE47,	//0x2228		VoC_movreg32(RL7,RL6,DEFAULT)	|	VoC_macX_rr(REG0,REG7,DEFAULT)
0xC92CFF26,	//0x222a		VoC_add32_rr(ACC0,ACC0,ACC1,DEFAULT)	|	VoC_movreg32(RL6,ACC0,DEFAULT)
0xDF03FA6C,	//0x222c		VoC_pop32(REG67,DEFAULT)	|	VoC_shr32_ri(ACC0,0xd,DEFAULT)
0xD833DF02,	//0x222e		VoC_lw16_p(REG3,REG3,DEFAULT)	|	VoC_pop32(REG45,DEFAULT)
0xE0027F13,	//0x2230		VoC_lw16i_short(REG2,0x0,IN_PARALLEL)	|	VoC_movreg32(REG67,REG45,DEFAULT)
0xFF0AFA19,	//0x2232		VoC_movreg32(REG45,REG23,DEFAULT)	|	VoC_shr32_ri(REG23,0x3,DEFAULT)
0x542CDF83,	//0x2234		VoC_bngt32_rd(IIR_BAND_CLIP_MIN_SHORT,ACC0,0x23c4)(lo)	|	VoC_pop16(REG3,DEFAULT)
0x0A8823C4,	//0x2236		VoC_lw16i(ACC0_LO,0x7fff)(lo)	|	VoC_bngt32_rd(IIR_BAND_CLIP_MIN_SHORT,ACC0,0x23c4)(hi)
0xE5C57FFF,	//0x2238		VoC_jump(IIR_BAND_CLIP_END)	|	VoC_lw16i(ACC0_LO,0x7fff)(hi)
		//0x223a		IIR_BAND_CLIP_MIN_SHORT
0x23C66424,	//0x223a		VoC_bnlt32_rd(IIR_BAND_CLIP_END,ACC0,0x23c6)
0x00000AC8,	//0x223c		VoC_lw16i(ACC0_LO,0x8000)
		//0x223e		IIR_BAND_CLIP_END
0xDCB8FFC0,	//0x223e		VoC_sw16inc_p(ACC0_LO,REG3,DEFAULT)	|	VoC_NOP
0x234B1402,	//0x2240		VoC_lw16_d(REG2,0x234b)
0x0700DF00,	//0x2242		VoC_add16_rd(REG0,REG0,0x408)(lo)	|	VoC_pop32(REG01,DEFAULT)
0x2B000408,	//0x2244		VoC_jump_lg(process_iir_band_loop_start)(lo)	|	VoC_add16_rd(REG0,REG0,0x408)(hi)
0xFFC02202,	//0x2246		VoC_NAD	|	VoC_jump_lg(process_iir_band_loop_start)(hi)
		//0x2248		process_iir_band_loop_end
0x23521400,	//0x2248		VoC_lw16_d(REG0,0x2352)
0x23531401,	//0x224a		VoC_lw16_d(REG1,0x2353)
0xDD8FDD86,	//0x224c		VoC_sw32_p(RL7,REG1,DEFAULT)	|	VoC_sw32_p(RL6,REG0,DEFAULT)
0x23501402,	//0x224e		VoC_lw16_d(REG2,0x2350)
0x23511403,	//0x2250		VoC_lw16_d(REG3,0x2351)
0xDD9BDD92,	//0x2252		VoC_sw32_p(REG67,REG3,DEFAULT)	|	VoC_sw32_p(REG45,REG2,DEFAULT)
0xDFE9E580,	//0x2254		VoC_push16(RA,DEFAULT)	|	VoC_return
		//0x2255		Rda_ProcessIIR
0x48F60A80,	//0x2256		VoC_lw16i(REG0,0x48f6)
0x48F80A81,	//0x2258		VoC_lw16i(REG1,0x48f8)
0x48FA0A82,	//0x225a		VoC_lw16i(REG2,0x48fa)
0x23461500,	//0x225c		VoC_sw16_d(REG0,0x2346)
0x23471501,	//0x225e		VoC_sw16_d(REG1,0x2347)
0x23481502,	//0x2260		VoC_sw16_d(REG2,0x2348)
0x23491503,	//0x2262		VoC_sw16_d(REG3,0x2349)
0x227031C4,	//0x2264		VoC_bnez16_r(PROCESSIIR_RIGHT_CHANNEL,REG4)
0x23580A80,	//0x2266		VoC_lw16i(REG0,0x2358)
0x235A0A81,	//0x2268		VoC_lw16i(REG1,0x235a)
0x23540A82,	//0x226a		VoC_lw16i(REG2,0x2354)
0x23560A83,	//0x226c		VoC_lw16i(REG3,0x2356)
0xFFC065CA,	//0x226e		VoC_NAD(IN_PARALLEL)	|	VoC_jump(PROCESSIIR_CHANNEL_END)
		//0x2270		PROCESSIIR_RIGHT_CHANNEL
0x23900A80,	//0x2270		VoC_lw16i(REG0,0x2390)
0x23920A81,	//0x2272		VoC_lw16i(REG1,0x2392)
0x238C0A82,	//0x2274		VoC_lw16i(REG2,0x238c)
0x238E0A83,	//0x2276		VoC_lw16i(REG3,0x238e)
		//0x2278		PROCESSIIR_CHANNEL_END
0x23521500,	//0x2278		VoC_sw16_d(REG0,0x2352)
0x23531501,	//0x227a		VoC_sw16_d(REG1,0x2353)
0x23501502,	//0x227c		VoC_sw16_d(REG2,0x2350)
0x23511503,	//0x227e		VoC_sw16_d(REG3,0x2351)
0x22B12C0F,	//0x2280		VoC_loop_i(0x1,0x7)
0x23461400,	//0x2282		VoC_lw16_d(REG0,0x2346)
0x23471401,	//0x2284		VoC_lw16_d(REG1,0x2347)
0x23481402,	//0x2286		VoC_lw16_d(REG2,0x2348)
0xE0635984,	//0x2288		VoC_lw16i_short(REG3,0x6,IN_PARALLEL)	|	VoC_lw32_p(ACC0,REG0,DEFAULT)
0xC018598D,	//0x228a		VoC_add16_rr(REG0,REG0,REG3,IN_PARALLEL)	|	VoC_lw32_p(ACC1,REG1,DEFAULT)
0xC0595997,	//0x228c		VoC_add16_rr(REG1,REG1,REG3,IN_PARALLEL)	|	VoC_lw32_p(RL7,REG2,DEFAULT)
0x1584C09A,	//0x228e		VoC_sw32_d(ACC0,0x234a)(lo)	|	VoC_add16_rr(REG2,REG2,REG3,DEFAULT)
0x1585234A,	//0x2290		VoC_sw32_d(ACC1,0x234c)(lo)	|	VoC_sw32_d(ACC0,0x234a)(hi)
0x1587234C,	//0x2292		VoC_sw32_d(RL7,0x234e)(lo)	|	VoC_sw32_d(ACC1,0x234c)(hi)
0x1500234E,	//0x2294		VoC_sw16_d(REG0,0x2346)(lo)	|	VoC_sw32_d(RL7,0x234e)(hi)
0x15012346,	//0x2296		VoC_sw16_d(REG1,0x2347)(lo)	|	VoC_sw16_d(REG0,0x2346)(hi)
0x15022347,	//0x2298		VoC_sw16_d(REG2,0x2348)(lo)	|	VoC_sw16_d(REG1,0x2347)(hi)
0xFFC02348,	//0x229a		VoC_NAD	|	VoC_sw16_d(REG2,0x2348)(hi)
0x21DE2B80,	//0x229c		VoC_jal(Rda_ProcessIIRBand)
0x23521400,	//0x229e		VoC_lw16_d(REG0,0x2352)
0x23531401,	//0x22a0		VoC_lw16_d(REG1,0x2353)
0x23501402,	//0x22a2		VoC_lw16_d(REG2,0x2350)
0x23511403,	//0x22a4		VoC_lw16_d(REG3,0x2351)
0x4020F104,	//0x22a6		VoC_add16_rr(REG0,REG0,REG4,DEFAULT)	|	VoC_lw16i_short(REG4,0x8,DEFAULT)
0x40A2C061,	//0x22a8		VoC_add16_rr(REG2,REG2,REG4,DEFAULT)	|	VoC_add16_rr(REG1,REG1,REG4,IN_PARALLEL)
0x1500C0E3,	//0x22aa		VoC_sw16_d(REG0,0x2352)(lo)	|	VoC_add16_rr(REG3,REG3,REG4,IN_PARALLEL)
0x15012352,	//0x22ac		VoC_sw16_d(REG1,0x2353)(lo)	|	VoC_sw16_d(REG0,0x2352)(hi)
0x15022353,	//0x22ae		VoC_sw16_d(REG2,0x2350)(lo)	|	VoC_sw16_d(REG1,0x2353)(hi)
0x15032350,	//0x22b0		VoC_sw16_d(REG3,0x2351)(lo)	|	VoC_sw16_d(REG2,0x2350)(hi)
		//0x22b1		VoC_endloop1
0xDFA92351,	//0x22b2		VoC_pop16(RA,DEFAULT)	|	VoC_sw16_d(REG3,0x2351)(hi)
0xE580FFC0,	//0x22b4		VoC_return	|	VoC_NOP
