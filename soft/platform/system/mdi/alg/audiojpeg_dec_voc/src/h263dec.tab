		//0x0230		VoC_code_section_1
		//0x0230		CS_startcode
0x06C71406,	//0x0230		VoC_lw16_d(REG6,0x6c7)
0x00011606,	//0x0232		VoC_and16_ri(REG6,0x1)
0x023A31C6,	//0x0234		VoC_bnez16_r(H263_startcode_limit_half0,REG6)
0x01FF0A86,	//0x0236		VoC_lw16i(REG6,0x1ff)
0xFFC065C4,	//0x0238		VoC_NAD(IN_PARALLEL)	|	VoC_jump(H263_startcode_limit_half1)
		//0x023a		H263_startcode_limit_half0
0x00FF0A86,	//0x023a		VoC_lw16i(REG6,0xff)
		//0x023c		H263_startcode_limit_half1
		//0x023c		H263_startcode_while
0x02523516,	//0x023c		VoC_be16_rr(H263_startcode_sync_err1,REG2,REG6)
0xDFDB5F46,	//0x023e		VoC_push16(BITCACHE,IN_PARALLEL)	|	VoC_push32(RL6,DEFAULT)
0xDFC26285,	//0x0240		VoC_push16(REG2,IN_PARALLEL)	|	VoC_rbinc_i(REG5,0x1,DEFAULT)
0xE0106280,	//0x0242		VoC_lw16i_short(REG0,0x1,IN_PARALLEL)	|	VoC_rbinc_i(REG4,0x10,DEFAULT)
0x024C3702,	//0x0244		VoC_be32_rr(H263_startcode_1L,REG01,REG45)
0xDF065F82,	//0x0246		VoC_pop32(RL6,IN_PARALLEL)	|	VoC_pop16(REG2,DEFAULT)
0xE285DF9B,	//0x0248		VoC_rbinc_i(REG5,0x1,DEFAULT)	|	VoC_pop16(BITCACHE,DEFAULT)
0xE5F1E242,	//0x024a		VoC_jump(H263_startcode_while)	|	VoC_lbinc_p(REG2)
		//0x024c		H263_startcode_1L
0xDF075F80,	//0x024c		VoC_pop32(RL7,IN_PARALLEL)	|	VoC_pop16(REG0,DEFAULT)
0xE0065F80,	//0x024e		VoC_lw16i_short(REG6,0x0,IN_PARALLEL)	|	VoC_pop16(REG0,DEFAULT)
0xFFC065C4,	//0x0250		VoC_NAD(IN_PARALLEL)	|	VoC_jump(H263_startcode_sync_err0)
		//0x0252		H263_startcode_sync_err1
0x7FFF0AC6,	//0x0252		VoC_lw16i(REG6,0xffffffff)
		//0x0254		H263_startcode_sync_err0
0x1506FFC0,	//0x0254		VoC_sw16_d(REG6,0x214)(lo)	|	VoC_NOP
0xE5800214,	//0x0256		VoC_return	|	VoC_sw16_d(REG6,0x214)(hi)
		//0x0258		CS_getpicturehdr
0x62A8E242,	//0x0258		VoC_rbinc_i(REG4,0xa,DEFAULT)	|	VoC_lbinc_p(REG2)
0x6284E000,	//0x025a		VoC_rbinc_i(REG4,0x1,DEFAULT)	|	VoC_lw16i_short(REG0,0x0,IN_PARALLEL)
0x3184E011,	//0x025c		VoC_bez16_r(H263_getpicturehdr_ez_ssi,REG4)(lo)	|	VoC_lw16i_short(REG1,0x1,IN_PARALLEL)
0x0AC00266,	//0x025e		VoC_lw16i(REG0,0xfffffffe)(lo)	|	VoC_bez16_r(H263_getpicturehdr_ez_ssi,REG4)(hi)
0xFFC07FFE,	//0x0260		VoC_NOP	|	VoC_lw16i(REG0,0xfffffffe)(hi)
0x02141500,	//0x0262		VoC_sw16_d(REG0,0x214)
0x02D22B00,	//0x0264		VoC_jump_lg(H263_getpicturehdr_end)
		//0x0266		H263_getpicturehdr_ez_ssi
0x6288E242,	//0x0266		VoC_rbinc_i(REG4,0x2,DEFAULT)	|	VoC_lbinc_p(REG2)
0x628CC20B,	//0x0268		VoC_rbinc_i(REG4,0x3,DEFAULT)	|	VoC_sub16_rr(REG3,REG0,REG1,IN_PARALLEL)
0x31C4E025,	//0x026a		VoC_bnez16_r(H263_getpicturehdr_nz_format,REG4)(lo)	|	VoC_lw16i_short(REG5,0x2,IN_PARALLEL)
0x0AC30274,	//0x026c		VoC_lw16i(REG3,0xfffffffd)(lo)	|	VoC_bnez16_r(H263_getpicturehdr_nz_format,REG4)(hi)
0xFFC07FFD,	//0x026e		VoC_NOP	|	VoC_lw16i(REG3,0xfffffffd)(hi)
0x02141503,	//0x0270		VoC_sw16_d(REG3,0x214)
0x02D22B00,	//0x0272		VoC_jump_lg(H263_getpicturehdr_end)
		//0x0274		H263_getpicturehdr_nz_format
0x06CC1500,	//0x0274		VoC_sw16_d(REG0,0x6cc)
0x06CD1504,	//0x0276		VoC_sw16_d(REG4,0x6cd)
0x028035A1,	//0x0278		VoC_bne16_rr(H263_getpicturehdr_QCIF,REG4,REG1)
0x00800A84,	//0x027a		VoC_lw16i(REG4,0x80)
0x00600A85,	//0x027c		VoC_lw16i(REG5,0x60)
0x02A02B00,	//0x027e		VoC_jump_lg(H263_getpicturehdr_width_height_end)
		//0x0280		H263_getpicturehdr_QCIF
0x028035A5,	//0x0280		VoC_bne16_rr(H263_getpicturehdr_QCIF,REG4,REG5)
0x00B00A84,	//0x0282		VoC_lw16i(REG4,0xb0)
0x00900A85,	//0x0284		VoC_lw16i(REG5,0x90)
0xFFC065DA,	//0x0286		VoC_NAD(IN_PARALLEL)	|	VoC_jump(H263_getpicturehdr_width_height_end)
		//0x0288		H263_getpicturehdr_CIF
0xE0457061,	//0x0288		VoC_lw16i_short(REG5,0x4,IN_PARALLEL)	|	VoC_lw16i_short(REG1,0x3,DEFAULT)
0x028035A1,	//0x028a		VoC_bne16_rr(H263_getpicturehdr_QCIF,REG4,REG1)
0x01600A84,	//0x028c		VoC_lw16i(REG4,0x160)
0x01200A85,	//0x028e		VoC_lw16i(REG5,0x120)
0xFFC065D0,	//0x0290		VoC_NAD(IN_PARALLEL)	|	VoC_jump(H263_getpicturehdr_width_height_end)
		//0x0292		H263_getpicturehdr_4CIF
0x028035A5,	//0x0292		VoC_bne16_rr(H263_getpicturehdr_QCIF,REG4,REG5)
0x02C00A84,	//0x0294		VoC_lw16i(REG4,0x2c0)
0x02400A85,	//0x0296		VoC_lw16i(REG5,0x240)
0x0AC1E5C8,	//0x0298		VoC_lw16i(REG1,0xfffffffc)(lo)	|	VoC_jump(H263_getpicturehdr_width_height_end)
0xFFC07FFC,	//0x029a		VoC_NOP	|	VoC_lw16i(REG1,0xfffffffc)(hi)
0x02141501,	//0x029c		VoC_sw16_d(REG1,0x214)
0x02D22B00,	//0x029e		VoC_jump_lg(H263_getpicturehdr_end)
		//0x02a0		H263_getpicturehdr_width_height_end
0x06CE1582,	//0x02a0		VoC_sw32_d(REG45,0x6ce)
0xF80D780C,	//0x02a2		VoC_shr16_ri(REG5,0x1,IN_PARALLEL)	|	VoC_shr16_ri(REG4,0x1,DEFAULT)
0x1582E242,	//0x02a4		VoC_sw32_d(REG45,0x6d0)(lo)	|	VoC_lbinc_p(REG2)
0x781C06D0,	//0x02a6		VoC_shr16_ri(REG4,0x3,DEFAULT)	|	VoC_sw32_d(REG45,0x6d0)(hi)
0x6286F81D,	//0x02a8		VoC_rbinc_i(REG6,0x1,DEFAULT)	|	VoC_shr16_ri(REG5,0x3,IN_PARALLEL)
0x1582E007,	//0x02aa		VoC_sw32_d(REG45,0x200)(lo)	|	VoC_lw16i_short(REG7,0x0,IN_PARALLEL)
0xE2850200,	//0x02ac		VoC_rbinc_i(REG5,0x1,DEFAULT)	|	VoC_sw32_d(REG45,0x200)(hi)
0x02B13185,	//0x02ae		VoC_bez16_r(H263_getpicturehdr_ez_mv_out_f,REG5)
0xE284F027,	//0x02b0		VoC_rbinc_i(REG4,0x1,DEFAULT)	|	VoC_lw16i_short(REG7,0x1,DEFAULT)
		//0x02b1		H263_getpicturehdr_ez_mv_out_f
0x06D21583,	//0x02b2		VoC_sw32_d(REG67,0x6d2)
0x3186E286,	//0x02b4		VoC_bez16_r(H263_getpicturehdr_ez_adv_p_md,REG6)(lo)	|	VoC_rbinc_i(REG6,0x1,DEFAULT)
0xF02502B8,	//0x02b6		VoC_lw16i_short(REG5,0x1,DEFAULT)	|	VoC_bez16_r(H263_getpicturehdr_ez_adv_p_md,REG6)(hi)
		//0x02b8		H263_getpicturehdr_ez_adv_p_md
0xE297E286,	//0x02b8		VoC_rbinc_i(REG7,0x5,DEFAULT)	|	VoC_rbinc_i(REG6,0x1,DEFAULT)
0x06D41582,	//0x02ba		VoC_sw32_d(REG45,0x6d4)
0x06D61583,	//0x02bc		VoC_sw32_d(REG67,0x6d6)
0x3184E284,	//0x02be		VoC_bez16_r(H263_getpicturehdr_else_end,REG4)(lo)	|	VoC_rbinc_i(REG4,0x1,DEFAULT)
0x0AC502C7,	//0x02c0		VoC_lw16i(REG5,0xfffffffb)(lo)	|	VoC_bez16_r(H263_getpicturehdr_else_end,REG4)(hi)
0xFFC07FFB,	//0x02c2		VoC_NOP	|	VoC_lw16i(REG5,0xfffffffb)(hi)
0x02141505,	//0x02c4		VoC_sw16_d(REG5,0x214)
0xE242E5CC,	//0x02c6		VoC_lbinc_p(REG2)	|	VoC_jump(H263_getpicturehdr_end)
		//0x02c7		H263_getpicturehdr_else_end
0x02CB3186,	//0x02c8		VoC_bez16_r(H263_getpicturehdr_ez_pb_frame,REG6)
0xE284E294,	//0x02ca		VoC_rbinc_i(REG4,0x1,DEFAULT)	|	VoC_rbinc_i(REG4,0x5,DEFAULT)
		//0x02cb		H263_getpicturehdr_ez_pb_frame
		//0x02cc		H263_getpicturehdr_pspare
0x02D23184,	//0x02cc		VoC_bez16_r(H263_getpicturehdr_end,REG4)
0xE2A0E242,	//0x02ce		VoC_rbinc_i(REG4,0x8,DEFAULT)	|	VoC_lbinc_p(REG2)
0xE5FBE284,	//0x02d0		VoC_jump(H263_getpicturehdr_pspare)	|	VoC_rbinc_i(REG4,0x1,DEFAULT)
		//0x02d2		H263_getpicturehdr_end
0xE242E580,	//0x02d2		VoC_lbinc_p(REG2)	|	VoC_return
		//0x02d3		CS_getTMNMV
0xE0036284,	//0x02d4		VoC_lw16i_short(REG3,0x0,IN_PARALLEL)	|	VoC_rbinc_i(REG4,0x1,DEFAULT)
0x02DA3184,	//0x02d6		VoC_bez16_r(H263_getTMNMV_ez_code,REG4)
0x03042B00,	//0x02d8		VoC_jump_lg(H263_getTMNMV_end)
		//0x02da		H263_getTMNMV_ez_code
0xE02162F0,	//0x02da		VoC_lw16i_short(REG1,0x2,IN_PARALLEL)	|	VoC_rb_i(REG4,0xc,DEFAULT)
0x02000A80,	//0x02dc		VoC_lw16i(REG0,0x200)
0x02E63404,	//0x02de		VoC_bgt16_rr(H263_getTMNMV_code_ngt_512,REG0,REG4)
0x41820A85,	//0x02e0		VoC_lw16i(REG5,0x4182)
0xF8444349,	//0x02e2		VoC_shr16_ri(REG4,0x8,IN_PARALLEL)	|	VoC_sub16_rr(REG1,REG5,REG1,DEFAULT)
0xFFC065D8,	//0x02e4		VoC_NAD(IN_PARALLEL)	|	VoC_jump(H263_getTMNMV_look_TMNMVtab)
		//0x02e6		H263_getTMNMV_code_ngt_512
0xF8E17810,	//0x02e6		VoC_shr16_ri(REG1,0xfffffffc,IN_PARALLEL)	|	VoC_shr16_ri(REG0,0x2,DEFAULT)
0x02F03404,	//0x02e8		VoC_bgt16_rr(H263_getTMNMV_code_ngt_128,REG0,REG4)
0x41900A85,	//0x02ea		VoC_lw16i(REG5,0x4190)
0xF8144349,	//0x02ec		VoC_shr16_ri(REG4,0x2,IN_PARALLEL)	|	VoC_sub16_rr(REG1,REG5,REG1,DEFAULT)
0xFFC065CE,	//0x02ee		VoC_NAD(IN_PARALLEL)	|	VoC_jump(H263_getTMNMV_look_TMNMVtab)
		//0x02f0		H263_getTMNMV_code_ngt_128
0xE01170A0,	//0x02f0		VoC_lw16i_short(REG1,0x1,IN_PARALLEL)	|	VoC_lw16i_short(REG0,0x5,DEFAULT)
0xE0034304,	//0x02f2		VoC_lw16i_short(REG3,0x0,IN_PARALLEL)	|	VoC_sub16_rr(REG4,REG4,REG0,DEFAULT)
0x02FA3244,	//0x02f4		VoC_bnltz16_r(H263_getTMNMV_nltz_code,REG4)
0x06C61501,	//0x02f6		VoC_sw16_d(REG1,0x6c6)
0xFFC065CC,	//0x02f8		VoC_NAD(IN_PARALLEL)	|	VoC_jump(H263_getTMNMV_end)
		//0x02fa		H263_getTMNMV_nltz_code
0x41F00A81,	//0x02fa		VoC_lw16i(REG1,0x41f0)
		//0x02fc		H263_getTMNMV_look_TMNMVtab
0xC109E242,	//0x02fc		VoC_add16_rr(REG1,REG4,REG1,DEFAULT)	|	VoC_lbinc_p(REG2)
0x00FF0A85,	//0x02fe		VoC_lw16i(REG5,0xff)
0x641DD813,	//0x0300		VoC_and16_rr(REG5,REG3,DEFAULT)	|	VoC_lw16_p(REG3,REG1,DEFAULT)
0xE328F843,	//0x0302		VoC_rbinc_r(REG4,REG5,DEFAULT)	|	VoC_shr16_ri(REG3,0x8,IN_PARALLEL)
		//0x0304		H263_getTMNMV_end
0xFFC06580,	//0x0304		VoC_NAD(IN_PARALLEL)	|	VoC_return
		//0x0306		CS_find_pmv
0x0C481401,	//0x0306		VoC_lw16_d(REG1,0xc48)
0xE0257023,	//0x0308		VoC_lw16i_short(REG5,0x2,IN_PARALLEL)	|	VoC_lw16i_short(REG3,0x1,DEFAULT)
0xDFC74059,	//0x030a		VoC_push16(REG7,IN_PARALLEL)	|	VoC_add16_rr(REG1,REG1,REG3,DEFAULT)
0x06C5070C,	//0x030c		VoC_add16_rd(REG4,REG1,0x6c5)
0xE00E431C,	//0x030e		VoC_lw16i_short(RL7_LO,0x0,IN_PARALLEL)	|	VoC_sub16_rr(REG4,REG4,REG3,DEFAULT)
0x06C4070E,	//0x0310		VoC_add16_rd(REG6,REG1,0x6c4)
0xE0545847,	//0x0312		VoC_lw16i_short(REG4,0x5,IN_PARALLEL)	|	VoC_lw16_p(REG7,REG4,DEFAULT)
0x031A353D,	//0x0314		VoC_be16_rr(H263_find_pmv_l8_be_1,REG7,REG5)
0x031A353C,	//0x0316		VoC_be16_rr(H263_find_pmv_l8_be_1,REG7,REG4)
0xE5C3DFCE,	//0x0318		VoC_jump(H263_find_pmv_l8_be_0)	|	VoC_push16(RL7_LO,DEFAULT)
		//0x031a		H263_find_pmv_l8_be_1
0xFFC05FC3,	//0x031a		VoC_NAD(IN_PARALLEL)	|	VoC_push16(REG3,DEFAULT)
		//0x031c		H263_find_pmv_l8_be_0
0xC19E5867,	//0x031c		VoC_add16_rr(REG6,REG6,REG3,IN_PARALLEL)	|	VoC_lw16_p(REG7,REG6,DEFAULT)
0x0324353D,	//0x031e		VoC_be16_rr(H263_find_pmv_o8_be_1,REG7,REG5)
0x0324353C,	//0x0320		VoC_be16_rr(H263_find_pmv_o8_be_1,REG7,REG4)
0xE5C2DFCE,	//0x0322		VoC_jump(H263_find_pmv_o8_be_0)	|	VoC_push16(RL7_LO,DEFAULT)
		//0x0324		H263_find_pmv_o8_be_1
0xD867DFC3,	//0x0324		VoC_lw16_p(REG7,REG6,DEFAULT)	|	VoC_push16(REG3,DEFAULT)
		//0x0325		H263_find_pmv_o8_be_0
0x032C353D,	//0x0326		VoC_be16_rr(H263_find_pmv_or8_be_1,REG7,REG5)
0x032C353C,	//0x0328		VoC_be16_rr(H263_find_pmv_or8_be_1,REG7,REG4)
0xE5C3DFCE,	//0x032a		VoC_jump(H263_find_pmv_or8_be_0)	|	VoC_push16(RL7_LO,DEFAULT)
		//0x032c		H263_find_pmv_or8_be_1
0xFFC05FC3,	//0x032c		VoC_NAD(IN_PARALLEL)	|	VoC_push16(REG3,DEFAULT)
		//0x032e		H263_find_pmv_or8_be_0
0x06661483,	//0x032e		VoC_lw32_d(REG67,0x666)
0xC1CF418E,	//0x0330		VoC_add16_rr(REG7,REG7,REG1,IN_PARALLEL)	|	VoC_add16_rr(REG6,REG6,REG1,DEFAULT)
0x03363180,	//0x0332		VoC_bez16_r(H263_find_pmv_block01,REG0)
0x03583583,	//0x0334		VoC_bne16_rr(H263_find_pmv_block2,REG0,REG3)
		//0x0336		H263_find_pmv_block01
0xC19C5F81,	//0x0336		VoC_add16_rr(REG4,REG6,REG3,IN_PARALLEL)	|	VoC_pop16(REG1,DEFAULT)
0x033E3181,	//0x0338		VoC_bez16_r(H263_find_pmv_case01_vec3_be_0,REG1)
0xDF817065,	//0x033a		VoC_pop16(REG1,IN_PARALLEL)	|	VoC_lw16i_short(REG5,0x3,DEFAULT)
0xFFC065C4,	//0x033c		VoC_NAD(IN_PARALLEL)	|	VoC_jump(H263_find_pmv_case01_vec3_be_3)
		//0x033e		H263_find_pmv_case01_vec3_be_0
0xDF817005,	//0x033e		VoC_pop16(REG1,IN_PARALLEL)	|	VoC_lw16i_short(REG5,0x0,DEFAULT)
		//0x0340		H263_find_pmv_case01_vec3_be_3
0x03463181,	//0x0340		VoC_bez16_r(H263_find_pmv_case01_vec2_be_0,REG1)
0xE0355F42,	//0x0342		VoC_lw16i_short(REG5,0x3,IN_PARALLEL)	|	VoC_push32(REG45,DEFAULT)
0xFFC065C4,	//0x0344		VoC_NAD(IN_PARALLEL)	|	VoC_jump(H263_find_pmv_case01_vec2_be_3)
		//0x0346		H263_find_pmv_case01_vec2_be_0
0xE0055F42,	//0x0346		VoC_lw16i_short(REG5,0x0,IN_PARALLEL)	|	VoC_push32(REG45,DEFAULT)
		//0x0348		H263_find_pmv_case01_vec2_be_3
0xDF8160C4,	//0x0348		VoC_pop16(REG1,IN_PARALLEL)	|	VoC_movreg16(REG4,REG6,DEFAULT)
0x03523181,	//0x034a		VoC_bez16_r(H263_find_pmv_case01_vec1_be_0,REG1)
0xE02743DE,	//0x034c		VoC_lw16i_short(REG7,0x2,IN_PARALLEL)	|	VoC_sub16_rr(REG6,REG7,REG3,DEFAULT)
0xDF43DF42,	//0x034e		VoC_push32(REG67,DEFAULT)	|	VoC_push32(REG45,DEFAULT)
0xFFC065C6,	//0x0350		VoC_NAD(IN_PARALLEL)	|	VoC_jump(H263_find_pmv_case01_vec1_be_2)
		//0x0352		H263_find_pmv_case01_vec1_be_0
0xE00743DE,	//0x0352		VoC_lw16i_short(REG7,0x0,IN_PARALLEL)	|	VoC_sub16_rr(REG6,REG7,REG3,DEFAULT)
0xDF43DF42,	//0x0354		VoC_push32(REG67,DEFAULT)	|	VoC_push32(REG45,DEFAULT)
		//0x0356		H263_find_pmv_case01_vec1_be_2
0x03B22B00,	//0x0356		VoC_jump_lg(H263_find_pmv_switch_end)
		//0x0358		H263_find_pmv_block2
0x3585F045,	//0x0358		VoC_bne16_rr(H263_find_pmv_block3,REG0,REG5)(lo)	|	VoC_lw16i_short(REG5,0x2,DEFAULT)
0x5F810374,	//0x035a		VoC_pop16(REG1,DEFAULT)	|	VoC_bne16_rr(H263_find_pmv_block3,REG0,REG5)(hi)
0x3181C19C,	//0x035c		VoC_bez16_r(H263_find_pmv_case2_vec3_be_0,REG1)(lo)	|	VoC_add16_rr(REG4,REG6,REG3,IN_PARALLEL)
0x70650362,	//0x035e		VoC_lw16i_short(REG5,0x3,DEFAULT)	|	VoC_bez16_r(H263_find_pmv_case2_vec3_be_0,REG1)(hi)
0xE5C3DF81,	//0x0360		VoC_jump(H263_find_pmv_case2_vec3_be_3)	|	VoC_pop16(REG1,IN_PARALLEL)
		//0x0362		H263_find_pmv_case2_vec3_be_0
0xDF817005,	//0x0362		VoC_pop16(REG1,IN_PARALLEL)	|	VoC_lw16i_short(REG5,0x0,DEFAULT)
		//0x0364		H263_find_pmv_case2_vec3_be_3
0x036A3181,	//0x0364		VoC_bez16_r(H263_find_pmv_case2_vec2_be_0,REG1)
0xE0455F42,	//0x0366		VoC_lw16i_short(REG5,0x4,IN_PARALLEL)	|	VoC_push32(REG45,DEFAULT)
0xFFC065C4,	//0x0368		VoC_NAD(IN_PARALLEL)	|	VoC_jump(H263_find_pmv_case2_vec2_be_3)
		//0x036a		H263_find_pmv_case2_vec2_be_0
0xE0055F42,	//0x036a		VoC_lw16i_short(REG5,0x0,IN_PARALLEL)	|	VoC_push32(REG45,DEFAULT)
		//0x036c		H263_find_pmv_case2_vec2_be_3
0xF6E660C4,	//0x036c		VoC_movreg16(REG6,REG7,IN_PARALLEL)	|	VoC_movreg16(REG4,REG6,DEFAULT)
0xDF42F027,	//0x036e		VoC_push32(REG45,DEFAULT)	|	VoC_lw16i_short(REG7,0x1,DEFAULT)
0xDF845F43,	//0x0370		VoC_pop16(REG4,IN_PARALLEL)	|	VoC_push32(REG67,DEFAULT)
0x03B22B00,	//0x0372		VoC_jump_lg(H263_find_pmv_switch_end)
		//0x0374		H263_find_pmv_block3
0xE0257064,	//0x0374		VoC_lw16i_short(REG5,0x2,IN_PARALLEL)	|	VoC_lw16i_short(REG4,0x3,DEFAULT)
0x037C3504,	//0x0376		VoC_be16_rr(H263_find_pmv_block34,REG0,REG4)
0x3584F084,	//0x0378		VoC_bne16_rr(H263_find_pmv_block5,REG0,REG4)(lo)	|	VoC_lw16i_short(REG4,0x4,DEFAULT)
0xFFC00398,	//0x037a		VoC_NAD	|	VoC_bne16_rr(H263_find_pmv_block5,REG0,REG4)(hi)
		//0x037c		H263_find_pmv_block34
0xE02560E4,	//0x037c		VoC_lw16i_short(REG5,0x2,IN_PARALLEL)	|	VoC_movreg16(REG4,REG7,DEFAULT)
0xE01760E6,	//0x037e		VoC_lw16i_short(REG7,0x1,IN_PARALLEL)	|	VoC_movreg16(REG6,REG7,DEFAULT)
0xE0355F42,	//0x0380		VoC_lw16i_short(REG5,0x3,IN_PARALLEL)	|	VoC_push32(REG45,DEFAULT)
0x038C3505,	//0x0382		VoC_be16_rr(H263_find_pmv_block34_3,REG0,REG5)
0xDF865F43,	//0x0384		VoC_pop16(REG6,IN_PARALLEL)	|	VoC_push32(REG67,DEFAULT)
0xDF865F42,	//0x0386		VoC_pop16(REG6,IN_PARALLEL)	|	VoC_push32(REG45,DEFAULT)
0x2B00DF86,	//0x0388		VoC_jump_lg(H263_find_pmv_switch_end)(lo)	|	VoC_pop16(REG6,DEFAULT)
0xFFC003B2,	//0x038a		VoC_NAD	|	VoC_jump_lg(H263_find_pmv_switch_end)(hi)
		//0x038c		H263_find_pmv_block34_3
0xDF865F43,	//0x038c		VoC_pop16(REG6,IN_PARALLEL)	|	VoC_push32(REG67,DEFAULT)
0xDF86433C,	//0x038e		VoC_pop16(REG6,IN_PARALLEL)	|	VoC_sub16_rr(REG4,REG4,REG7,DEFAULT)
0xE0455F86,	//0x0390		VoC_lw16i_short(REG5,0x4,IN_PARALLEL)	|	VoC_pop16(REG6,DEFAULT)
0x039631C6,	//0x0392		VoC_bnez16_r(H263_find_pmv_case34_vec1_be_4,REG6)
0xFFC0F005,	//0x0394		VoC_NOP	|	VoC_lw16i_short(REG5,0x0,DEFAULT)
		//0x0396		H263_find_pmv_case34_vec1_be_4
0xE5DBDF42,	//0x0396		VoC_jump(H263_find_pmv_switch_end)	|	VoC_push32(REG45,DEFAULT)
		//0x0398		H263_find_pmv_block5
0xC19C70A5,	//0x0398		VoC_add16_rr(REG4,REG6,REG3,IN_PARALLEL)	|	VoC_lw16i_short(REG5,0x5,DEFAULT)
0x03A63585,	//0x039a		VoC_bne16_rr(H263_find_pmv_blockdefault,REG0,REG5)
0xF6C45F42,	//0x039c		VoC_movreg16(REG4,REG6,IN_PARALLEL)	|	VoC_push32(REG45,DEFAULT)
0xC3DF5F81,	//0x039e		VoC_sub16_rr(REG7,REG7,REG3,IN_PARALLEL)	|	VoC_pop16(REG1,DEFAULT)
0xF6E45F42,	//0x03a0		VoC_movreg16(REG4,REG7,IN_PARALLEL)	|	VoC_push32(REG45,DEFAULT)
0x5F42DF81,	//0x03a2		VoC_push32(REG45,DEFAULT)	|	VoC_pop16(REG1,DEFAULT)
0xE5CDDF81,	//0x03a4		VoC_jump(H263_find_pmv_switch_end)	|	VoC_pop16(REG1,IN_PARALLEL)
		//0x03a6		H263_find_pmv_blockdefault
0xDF8177E3,	//0x03a6		VoC_pop16(REG1,IN_PARALLEL)	|	VoC_lw16i_short(REG3,0xffffffff,DEFAULT)
0xDF81DF81,	//0x03a8		VoC_pop16(REG1,DEFAULT)	|	VoC_pop16(REG1,DEFAULT)
0x7FFA0AC1,	//0x03aa		VoC_lw16i(REG1,0xfffffffa)
0x1501FFC0,	//0x03ac		VoC_sw16_d(REG1,0x214)(lo)	|	VoC_NOP
0x2B000214,	//0x03ae		VoC_jump_lg(H263_find_pmv_end)(lo)	|	VoC_sw16_d(REG1,0x214)(hi)
0xFFC003E9,	//0x03b0		VoC_NAD	|	VoC_jump_lg(H263_find_pmv_end)(hi)
		//0x03b2		H263_find_pmv_switch_end
0xE0615F87,	//0x03b2		VoC_lw16i_short(REG1,0x6,IN_PARALLEL)	|	VoC_pop16(REG7,DEFAULT)
0xDF0245C9,	//0x03b4		VoC_pop32(REG45,IN_PARALLEL)	|	VoC_mult16_rr(REG1,REG7,REG1,DEFAULT)
0x005C0A83,	//0x03b6		VoC_lw16i(REG3,0x5c)
0xDF03406D,	//0x03b8		VoC_pop32(REG67,IN_PARALLEL)	|	VoC_add16_rr(REG5,REG1,REG5,DEFAULT)
0xC07F455D,	//0x03ba		VoC_add16_rr(REG7,REG1,REG7,IN_PARALLEL)	|	VoC_mult16_rr(REG5,REG5,REG3,DEFAULT)
0x03E70A8E,	//0x03bc		VoC_lw16i(RL7_LO,0x3e7)
0xC5DF412C,	//0x03be		VoC_mult16_rr(REG7,REG7,REG3,IN_PARALLEL)	|	VoC_add16_rr(REG4,REG4,REG5,DEFAULT)
0x02156C0A,	//0x03c0		VoC_bez16_d(H263_find_pmv_ez_newgob,0x215)
0xD8477045,	//0x03c2		VoC_lw16_p(REG7,REG4,IN_PARALLEL)	|	VoC_lw16i_short(REG5,0x2,DEFAULT)
0x03CA3405,	//0x03c4		VoC_bgt16_rr(H263_find_pmv_ez_newgob,REG0,REG5)
0xFFC0E0E3,	//0x03c6		VoC_NOP	|	VoC_movreg16(REG3,REG7,DEFAULT)
0x03E92B00,	//0x03c8		VoC_jump_lg(H263_find_pmv_end)
		//0x03ca		H263_find_pmv_ez_newgob
0xC1BE5847,	//0x03ca		VoC_add16_rr(REG6,REG6,REG7,IN_PARALLEL)	|	VoC_lw16_p(REG7,REG4,DEFAULT)
0xF7C05F02,	//0x03cc		VoC_movreg16(REG0,RL7_LO,IN_PARALLEL)	|	VoC_pop32(REG45,DEFAULT)
0xC06D5866,	//0x03ce		VoC_add16_rr(REG5,REG1,REG5,IN_PARALLEL)	|	VoC_lw16_p(REG6,REG6,DEFAULT)
0x03D535B0,	//0x03d0		VoC_bne16_rr(H263_find_pmv_p2_ne_NO_VEC,REG6,REG0)
0xFFC0E0E3,	//0x03d2		VoC_NOP	|	VoC_movreg16(REG3,REG7,DEFAULT)
0xC55DE5D5,	//0x03d4		VoC_mult16_rr(REG5,REG5,REG3,DEFAULT)	|	VoC_jump(H263_find_pmv_end)
		//0x03d5		H263_find_pmv_p2_ne_NO_VEC
0x03DA343E,	//0x03d6		VoC_bgt16_rr(H263_find_pmv_p1_gt_p2,REG7,REG6)
0xF6E660C7,	//0x03d8		VoC_movreg16(REG6,REG7,IN_PARALLEL)	|	VoC_movreg16(REG7,REG6,DEFAULT)
		//0x03da		H263_find_pmv_p1_gt_p2
0xFFC0C12C,	//0x03da		VoC_NOP	|	VoC_add16_rr(REG4,REG4,REG5,DEFAULT)
0x3426D844,	//0x03dc		VoC_bgt16_rr(H263_find_pmv_p3_gt_min,REG4,REG6)(lo)	|	VoC_lw16_p(REG4,REG4,DEFAULT)
0xE0C303E2,	//0x03de		VoC_movreg16(REG3,REG6,DEFAULT)	|	VoC_bgt16_rr(H263_find_pmv_p3_gt_min,REG4,REG6)(hi)
0xE5C8FFC0,	//0x03e0		VoC_jump(H263_find_pmv_end)	|	VoC_NOP
		//0x03e2		H263_find_pmv_p3_gt_min
0x03E73427,	//0x03e2		VoC_bgt16_rr(H263_find_pmv_p3_gt_max,REG4,REG7)
0xFFC0E083,	//0x03e4		VoC_NOP	|	VoC_movreg16(REG3,REG4,DEFAULT)
0xE0E3E5C3,	//0x03e6		VoC_movreg16(REG3,REG7,DEFAULT)	|	VoC_jump(H263_find_pmv_end)
		//0x03e7		H263_find_pmv_p3_gt_max
0xE580FFC0,	//0x03e8		VoC_return	|	VoC_NOP
		//0x03e9		H263_find_pmv_end
		//0x03ea		CS_motion_decode
0xC1BB73E0,	//0x03ea		VoC_add16_rr(REG3,REG6,REG7,IN_PARALLEL)	|	VoC_lw16i_short(REG0,0x1f,DEFAULT)
0x00400A81,	//0x03ec		VoC_lw16i(REG1,0x40)
0x03F234B0,	//0x03ee		VoC_bngt16_rr(H263_motion_decode_vec_ngt_31,REG6,REG0)
0xFFC042CB,	//0x03f0		VoC_NAD(IN_PARALLEL)	|	VoC_sub16_rr(REG3,REG3,REG1,DEFAULT)
		//0x03f2		H263_motion_decode_vec_ngt_31
0x03F53498,	//0x03f2		VoC_bngt16_rr(H263_motion_decode_vec_ngt_31_01,REG3,REG0)
0xF400C2CB,	//0x03f4		VoC_lw16i_short(REG0,0xffffffe0,DEFAULT)	|	VoC_sub16_rr(REG3,REG3,REG1,DEFAULT)
		//0x03f5		H263_motion_decode_vec_ngt_31_01
0x03F93483,	//0x03f6		VoC_bngt16_rr(H263_motion_decode_vec_nlt_n32,REG0,REG3)
0xFFC0C0CB,	//0x03f8		VoC_NOP	|	VoC_add16_rr(REG3,REG3,REG1,DEFAULT)
		//0x03f9		H263_motion_decode_vec_nlt_n32
0xE534E580,	//0x03fa		VoC_or32_rr(ACC0,RL6,DEFAULT)	|	VoC_return
		//0x03fb		H263_2DDma_IN
0x7FC81540,	//0x03fc		VoC_sw16_d(REG0,0xffc8)
0x7FC91541,	//0x03fe		VoC_sw16_d(REG1,0xffc9)
0x7FC31542,	//0x0400		VoC_sw16_d(REG2,0xffc3)
0x7FC21543,	//0x0402		VoC_sw16_d(REG3,0xffc2)
0x7FC415C4,	//0x0404		VoC_sw32_d(ACC0,0xffc4)
0xE53CE580,	//0x0406		VoC_or32_rr(ACC0,RL7,DEFAULT)	|	VoC_return
		//0x0407		H263_Dma_Cmd_Send
0x7FC81544,	//0x0408		VoC_sw16_d(REG4,0xffc8)
0x7FC91545,	//0x040a		VoC_sw16_d(REG5,0xffc9)
0x7FC31546,	//0x040c		VoC_sw16_d(REG6,0xffc3)
0x7FC21547,	//0x040e		VoC_sw16_d(REG7,0xffc2)
0x7FC415C4,	//0x0410		VoC_sw32_d(ACC0,0xffc4)
0xDE80E580,	//0x0412		VoC_cfg(0x0)	|	VoC_return
		//0x0413		H263_Dma_Last_Cmd_Wait
0x1794FFC0,	//0x0414		VoC_cfg_lg(0x8,)(lo)	|	VoC_NOP
0xE5800008,	//0x0416		VoC_return	|	VoC_cfg_lg(0x8,)(hi)
		//0x0418		CS_H263_2DDma
0x1540E534,	//0x0418		VoC_sw16_d(REG0,0xffc8)(lo)	|	VoC_or32_rr(ACC0,RL6,DEFAULT)
0x15417FC8,	//0x041a		VoC_sw16_d(REG1,0xffc9)(lo)	|	VoC_sw16_d(REG0,0xffc8)(hi)
0x15427FC9,	//0x041c		VoC_sw16_d(REG2,0xffc3)(lo)	|	VoC_sw16_d(REG1,0xffc9)(hi)
0x15437FC3,	//0x041e		VoC_sw16_d(REG3,0xffc2)(lo)	|	VoC_sw16_d(REG2,0xffc3)(hi)
0x15C47FC2,	//0x0420		VoC_sw32_d(ACC0,0xffc4)(lo)	|	VoC_sw16_d(REG3,0xffc2)(hi)
0xDE807FC4,	//0x0422		VoC_cfg(0x0)	|	VoC_sw32_d(ACC0,0xffc4)(hi)
0x1794FFC0,	//0x0424		VoC_cfg_lg(0x8,)(lo)	|	VoC_NOP
0xE5800008,	//0x0426		VoC_return	|	VoC_cfg_lg(0x8,)(hi)
		//0x0428		CS_H263_2DDmaOut
0x1544E53C,	//0x0428		VoC_sw16_d(REG4,0xffc8)(lo)	|	VoC_or32_rr(ACC0,RL7,DEFAULT)
0x15457FC8,	//0x042a		VoC_sw16_d(REG5,0xffc9)(lo)	|	VoC_sw16_d(REG4,0xffc8)(hi)
0x15467FC9,	//0x042c		VoC_sw16_d(REG6,0xffc3)(lo)	|	VoC_sw16_d(REG5,0xffc9)(hi)
0x15477FC3,	//0x042e		VoC_sw16_d(REG7,0xffc2)(lo)	|	VoC_sw16_d(REG6,0xffc3)(hi)
0x15C47FC2,	//0x0430		VoC_sw32_d(ACC0,0xffc4)(lo)	|	VoC_sw16_d(REG7,0xffc2)(hi)
0xDE807FC4,	//0x0432		VoC_cfg(0x0)	|	VoC_sw32_d(ACC0,0xffc4)(hi)
0x1794FFC0,	//0x0434		VoC_cfg_lg(0x8,)(lo)	|	VoC_NOP
0xE5800008,	//0x0436		VoC_return	|	VoC_cfg_lg(0x8,)(hi)
		//0x0438		CS_H263transfer16x16_copy_c
0x1406DFE9,	//0x0438		VoC_lw16_d(REG6,0xc4c)(lo)	|	VoC_push16(RA,DEFAULT)
0x70500C4C,	//0x043a		VoC_lw16i_short(INC0,0x2,DEFAULT)	|	VoC_lw16_d(REG6,0xc4c)(hi)
0x3586E000,	//0x043c		VoC_bne16_rr(CS_transfer16x16_copy_c01,REG0,REG6)(lo)	|	VoC_lw16i_short(REG0,0x0,IN_PARALLEL)
0x18080457,	//0x043e		VoC_lw16i_set_inc(REG0,0x930,0x2)(lo)	|	VoC_bne16_rr(CS_transfer16x16_copy_c01,REG0,REG6)(hi)
0x180B0930,	//0x0440		VoC_lw16i_set_inc(REG3,0x950,0x2)(lo)	|	VoC_lw16i_set_inc(REG0,0x930,0x2)(hi)
0x18090950,	//0x0442		VoC_lw16i_set_inc(REG1,0x6d8,0x2)(lo)	|	VoC_lw16i_set_inc(REG3,0x950,0x2)(hi)
0x2C0506D8,	//0x0444		VoC_loop_i(0x1,0x2)(lo)	|	VoC_lw16i_set_inc(REG1,0x6d8,0x2)(hi)
0xE9090453,	//0x0446		VoC_loop_i_short(0x8,DEFAULT)	|	VoC_loop_i(0x1,0x2)(hi)
0xD9CDD9CC,	//0x0448		VoC_lw32inc_p(ACC1,REG1,DEFAULT)	|	VoC_lw32inc_p(ACC0,REG1,DEFAULT)
0xDDC5DDC4,	//0x044a		VoC_sw32inc_p(ACC1,REG0,DEFAULT)	|	VoC_sw32inc_p(ACC0,REG0,DEFAULT)
0xD9CDD9CC,	//0x044c		VoC_lw32inc_p(ACC1,REG1,DEFAULT)	|	VoC_lw32inc_p(ACC0,REG1,DEFAULT)
0xDDDDDDDC,	//0x044e		VoC_sw32inc_p(ACC1,REG3,DEFAULT)	|	VoC_sw32inc_p(ACC0,REG3,DEFAULT)
		//0x0450		VoC_endloop0
0x1808DE08,	//0x0450		VoC_lw16i_set_inc(REG0,0x970,0x2)(lo)	|	VoC_inc_p(REG1,DEFAULT)
0x180B0970,	//0x0452		VoC_lw16i_set_inc(REG3,0x990,0x2)(lo)	|	VoC_lw16i_set_inc(REG0,0x970,0x2)(hi)
		//0x0453		VoC_endloop1
0x2B000990,	//0x0454		VoC_jump_lg(CS_transfer16x16_copy_c03)(lo)	|	VoC_lw16i_set_inc(REG3,0x990,0x2)(hi)
0xDE0004C4,	//0x0456		VoC_inc_p(REG0,DEFAULT)	|	VoC_jump_lg(CS_transfer16x16_copy_c03)(hi)
		//0x0457		CS_transfer16x16_copy_c01
0x04783586,	//0x0458		VoC_bne16_rr(CS_transfer16x16_copy_c02,REG0,REG6)
0x09301808,	//0x045a		VoC_lw16i_set_inc(REG0,0x930,0x2)
0x0950180B,	//0x045c		VoC_lw16i_set_inc(REG3,0x950,0x2)
0x06D81805,	//0x045e		VoC_lw16i_set_inc(REG1,0x6d8,0x1)
0x04732C05,	//0x0460		VoC_loop_i(0x1,0x2)
0xDE08E90E,	//0x0462		VoC_inc_p(REG1,DEFAULT)	|	VoC_loop_i_short(0x8,DEFAULT)
0xD897D896,	//0x0464		VoC_lw16inc_p(REG7,REG1,DEFAULT)	|	VoC_lw16inc_p(REG6,REG1,DEFAULT)
0xD895D894,	//0x0466		VoC_lw16inc_p(REG5,REG1,DEFAULT)	|	VoC_lw16inc_p(REG4,REG1,DEFAULT)
0xDDC2DDC3,	//0x0468		VoC_sw32inc_p(REG45,REG0,DEFAULT)	|	VoC_sw32inc_p(REG67,REG0,DEFAULT)
0xD897D896,	//0x046a		VoC_lw16inc_p(REG7,REG1,DEFAULT)	|	VoC_lw16inc_p(REG6,REG1,DEFAULT)
0xD895D894,	//0x046c		VoC_lw16inc_p(REG5,REG1,DEFAULT)	|	VoC_lw16inc_p(REG4,REG1,DEFAULT)
0xDDDADDDB,	//0x046e		VoC_sw32inc_p(REG45,REG3,DEFAULT)	|	VoC_sw32inc_p(REG67,REG3,DEFAULT)
		//0x0470		VoC_endloop0
0x1808DE08,	//0x0470		VoC_lw16i_set_inc(REG0,0x970,0x2)(lo)	|	VoC_inc_p(REG1,DEFAULT)
0x180B0970,	//0x0472		VoC_lw16i_set_inc(REG3,0x990,0x2)(lo)	|	VoC_lw16i_set_inc(REG0,0x970,0x2)(hi)
		//0x0473		VoC_endloop1
0x2B000990,	//0x0474		VoC_jump_lg(CS_transfer16x16_copy_c03)(lo)	|	VoC_lw16i_set_inc(REG3,0x990,0x2)(hi)
0xFFC004C4,	//0x0476		VoC_NAD	|	VoC_jump_lg(CS_transfer16x16_copy_c03)(hi)
		//0x0478		CS_transfer16x16_copy_c02
0x09301804,	//0x0478		VoC_lw16i_set_inc(REG0,0x930,0x1)
0x09501807,	//0x047a		VoC_lw16i_set_inc(REG3,0x950,0x1)
0x06D81805,	//0x047c		VoC_lw16i_set_inc(REG1,0x6d8,0x1)
0xFFC04071,	//0x047e		VoC_NAD(IN_PARALLEL)	|	VoC_add16_rr(REG1,REG1,REG6,DEFAULT)
0x04C22C05,	//0x0480		VoC_loop_i(0x1,0x2)
0x04BE2C10,	//0x0482		VoC_loop_i(0x0,0x8)
0xD897D896,	//0x0484		VoC_lw16inc_p(REG7,REG1,DEFAULT)	|	VoC_lw16inc_p(REG6,REG1,DEFAULT)
0x00FF1606,	//0x0486		VoC_and16_ri(REG6,0xff)
0xD89479C7,	//0x0488		VoC_lw16inc_p(REG4,REG1,IN_PARALLEL)	|	VoC_shru16_ri(REG7,0xfffffff8,DEFAULT)
0xD895647E,	//0x048a		VoC_lw16inc_p(REG5,REG1,IN_PARALLEL)	|	VoC_or16_rr(REG6,REG7,DEFAULT)
0x00FF1604,	//0x048c		VoC_and16_ri(REG4,0xff)
0xDC8679C5,	//0x048e		VoC_sw16inc_p(REG6,REG0,IN_PARALLEL)	|	VoC_shru16_ri(REG5,0xfffffff8,DEFAULT)
0xD896646C,	//0x0490		VoC_lw16inc_p(REG6,REG1,IN_PARALLEL)	|	VoC_or16_rr(REG4,REG5,DEFAULT)
0x00FF1606,	//0x0492		VoC_and16_ri(REG6,0xff)
0xDC84D897,	//0x0494		VoC_sw16inc_p(REG4,REG0,DEFAULT)	|	VoC_lw16inc_p(REG7,REG1,DEFAULT)
0xD89479C7,	//0x0496		VoC_lw16inc_p(REG4,REG1,IN_PARALLEL)	|	VoC_shru16_ri(REG7,0xfffffff8,DEFAULT)
0xD895647E,	//0x0498		VoC_lw16inc_p(REG5,REG1,IN_PARALLEL)	|	VoC_or16_rr(REG6,REG7,DEFAULT)
0x00FF1604,	//0x049a		VoC_and16_ri(REG4,0xff)
0xDC8679C5,	//0x049c		VoC_sw16inc_p(REG6,REG0,IN_PARALLEL)	|	VoC_shru16_ri(REG5,0xfffffff8,DEFAULT)
0xD896646C,	//0x049e		VoC_lw16inc_p(REG6,REG1,IN_PARALLEL)	|	VoC_or16_rr(REG4,REG5,DEFAULT)
0x00FF1606,	//0x04a0		VoC_and16_ri(REG6,0xff)
0xDC84D897,	//0x04a2		VoC_sw16inc_p(REG4,REG0,DEFAULT)	|	VoC_lw16inc_p(REG7,REG1,DEFAULT)
0xD89479C7,	//0x04a4		VoC_lw16inc_p(REG4,REG1,IN_PARALLEL)	|	VoC_shru16_ri(REG7,0xfffffff8,DEFAULT)
0xD895647E,	//0x04a6		VoC_lw16inc_p(REG5,REG1,IN_PARALLEL)	|	VoC_or16_rr(REG6,REG7,DEFAULT)
0x00FF1604,	//0x04a8		VoC_and16_ri(REG4,0xff)
0xDCB679C5,	//0x04aa		VoC_sw16inc_p(REG6,REG3,IN_PARALLEL)	|	VoC_shru16_ri(REG5,0xfffffff8,DEFAULT)
0xD896646C,	//0x04ac		VoC_lw16inc_p(REG6,REG1,IN_PARALLEL)	|	VoC_or16_rr(REG4,REG5,DEFAULT)
0x00FF1606,	//0x04ae		VoC_and16_ri(REG6,0xff)
0xDCB4D897,	//0x04b0		VoC_sw16inc_p(REG4,REG3,DEFAULT)	|	VoC_lw16inc_p(REG7,REG1,DEFAULT)
0xD89479C7,	//0x04b2		VoC_lw16inc_p(REG4,REG1,IN_PARALLEL)	|	VoC_shru16_ri(REG7,0xfffffff8,DEFAULT)
0xD895647E,	//0x04b4		VoC_lw16inc_p(REG5,REG1,IN_PARALLEL)	|	VoC_or16_rr(REG6,REG7,DEFAULT)
0x00FF1604,	//0x04b6		VoC_and16_ri(REG4,0xff)
0xDCB679C5,	//0x04b8		VoC_sw16inc_p(REG6,REG3,IN_PARALLEL)	|	VoC_shru16_ri(REG5,0xfffffff8,DEFAULT)
0x646CDE08,	//0x04ba		VoC_or16_rr(REG4,REG5,DEFAULT)	|	VoC_inc_p(REG1,DEFAULT)
0xDE08DE08,	//0x04bc		VoC_inc_p(REG1,DEFAULT)	|	VoC_inc_p(REG1,IN_PARALLEL)
		//0x04be		VoC_endloop0
0xDCB45E08,	//0x04be		VoC_sw16inc_p(REG4,REG3,IN_PARALLEL)	|	VoC_inc_p(REG1,DEFAULT)
0x09701804,	//0x04c0		VoC_lw16i_set_inc(REG0,0x970,0x1)
		//0x04c2		VoC_endloop1
0x09901807,	//0x04c2		VoC_lw16i_set_inc(REG3,0x990,0x1)
		//0x04c4		CS_transfer16x16_copy_c03
0xFFC0DFA9,	//0x04c4		VoC_NOP	|	VoC_pop16(RA,DEFAULT)
0xDFE9E580,	//0x04c6		VoC_push16(RA,DEFAULT)	|	VoC_return
		//0x04c7		CS_H263interpolate16x16_halfpel_v_c
0x0C4C1406,	//0x04c8		VoC_lw16_d(REG6,0xc4c)
0x09301804,	//0x04ca		VoC_lw16i_set_inc(REG0,0x930,0x1)
0x09501807,	//0x04cc		VoC_lw16i_set_inc(REG3,0x950,0x1)
0x06D81805,	//0x04ce		VoC_lw16i_set_inc(REG1,0x6d8,0x1)
0xE1444071,	//0x04d0		VoC_lw16i_short(REG4,0x14,IN_PARALLEL)	|	VoC_add16_rr(REG1,REG1,REG6,DEFAULT)
0xE0144062,	//0x04d2		VoC_lw16i_short(REG4,0x1,IN_PARALLEL)	|	VoC_add16_rr(REG2,REG1,REG4,DEFAULT)
0x06CC07A4,	//0x04d4		VoC_sub16_rd(REG4,REG4,0x6cc)
0xE0457032,	//0x04d6		VoC_lw16i_short(REG5,0x4,IN_PARALLEL)	|	VoC_lw16i_short(INC2,0x1,DEFAULT)
0x04F82C11,	//0x04d8		VoC_loop_i(0x1,0x8)
0xD896E88E,	//0x04da		VoC_lw16inc_p(REG6,REG1,DEFAULT)	|	VoC_loop_i_short(0x4,DEFAULT)
0x41A68396,	//0x04dc		VoC_add16_rr(REG6,REG6,REG4,DEFAULT)	|	VoC_add16inc_rp(REG6,REG6,REG2,DEFAULT)
0x03D7D897,	//0x04de		VoC_add16inc_rp(REG7,REG7,REG2,DEFAULT)	|	VoC_lw16inc_p(REG7,REG1,IN_PARALLEL)
0xC1E7F80E,	//0x04e0		VoC_add16_rr(REG7,REG7,REG4,DEFAULT)	|	VoC_shr16_ri(REG6,0x1,IN_PARALLEL)
0x1606F80F,	//0x04e2		VoC_and16_ri(REG6,0xff)(lo)	|	VoC_shr16_ri(REG7,0x1,DEFAULT)
0xF9C700FF,	//0x04e4		VoC_shru16_ri(REG7,0xfffffff8,DEFAULT)	|	VoC_and16_ri(REG6,0xff)(hi)
0xFFC0E47E,	//0x04e6		VoC_NOP	|	VoC_or16_rr(REG6,REG7,DEFAULT)
		//0x04e8		VoC_endloop0
0xE88EDC86,	//0x04e8		VoC_loop_i_short(0x4,DEFAULT)	|	VoC_sw16inc_p(REG6,REG0,DEFAULT)
0x8396D896,	//0x04ea		VoC_add16inc_rp(REG6,REG6,REG2,DEFAULT)	|	VoC_lw16inc_p(REG6,REG1,DEFAULT)
0xD89741A6,	//0x04ec		VoC_lw16inc_p(REG7,REG1,IN_PARALLEL)	|	VoC_add16_rr(REG6,REG6,REG4,DEFAULT)
0xF80E03D7,	//0x04ee		VoC_shr16_ri(REG6,0x1,IN_PARALLEL)	|	VoC_add16inc_rp(REG7,REG7,REG2,DEFAULT)
0xF80FC1E7,	//0x04f0		VoC_shr16_ri(REG7,0x1,DEFAULT)	|	VoC_add16_rr(REG7,REG7,REG4,DEFAULT)
0x00FF1606,	//0x04f2		VoC_and16_ri(REG6,0xff)
0xE47EF9C7,	//0x04f4		VoC_or16_rr(REG6,REG7,DEFAULT)	|	VoC_shru16_ri(REG7,0xfffffff8,DEFAULT)
0xDCB6FFC0,	//0x04f6		VoC_sw16inc_p(REG6,REG3,DEFAULT)	|	VoC_NOP
		//0x04f7		VoC_endloop0
		//0x04f8		VoC_endloop1
0xC0AA4069,	//0x04f8		VoC_add16_rr(REG2,REG2,REG5,IN_PARALLEL)	|	VoC_add16_rr(REG1,REG1,REG5,DEFAULT)
0x09701804,	//0x04fa		VoC_lw16i_set_inc(REG0,0x970,0x1)
0x09901807,	//0x04fc		VoC_lw16i_set_inc(REG3,0x990,0x1)
0x051E2C11,	//0x04fe		VoC_loop_i(0x1,0x8)
0xD896E88E,	//0x0500		VoC_lw16inc_p(REG6,REG1,DEFAULT)	|	VoC_loop_i_short(0x4,DEFAULT)
0x41A68396,	//0x0502		VoC_add16_rr(REG6,REG6,REG4,DEFAULT)	|	VoC_add16inc_rp(REG6,REG6,REG2,DEFAULT)
0x03D7D897,	//0x0504		VoC_add16inc_rp(REG7,REG7,REG2,DEFAULT)	|	VoC_lw16inc_p(REG7,REG1,IN_PARALLEL)
0xC1E7F80E,	//0x0506		VoC_add16_rr(REG7,REG7,REG4,DEFAULT)	|	VoC_shr16_ri(REG6,0x1,IN_PARALLEL)
0x1606F80F,	//0x0508		VoC_and16_ri(REG6,0xff)(lo)	|	VoC_shr16_ri(REG7,0x1,DEFAULT)
0xF9C700FF,	//0x050a		VoC_shru16_ri(REG7,0xfffffff8,DEFAULT)	|	VoC_and16_ri(REG6,0xff)(hi)
0xFFC0E47E,	//0x050c		VoC_NOP	|	VoC_or16_rr(REG6,REG7,DEFAULT)
		//0x050e		VoC_endloop0
0xE88EDC86,	//0x050e		VoC_loop_i_short(0x4,DEFAULT)	|	VoC_sw16inc_p(REG6,REG0,DEFAULT)
0x8396D896,	//0x0510		VoC_add16inc_rp(REG6,REG6,REG2,DEFAULT)	|	VoC_lw16inc_p(REG6,REG1,DEFAULT)
0xD89741A6,	//0x0512		VoC_lw16inc_p(REG7,REG1,IN_PARALLEL)	|	VoC_add16_rr(REG6,REG6,REG4,DEFAULT)
0xF80E03D7,	//0x0514		VoC_shr16_ri(REG6,0x1,IN_PARALLEL)	|	VoC_add16inc_rp(REG7,REG7,REG2,DEFAULT)
0xF80FC1E7,	//0x0516		VoC_shr16_ri(REG7,0x1,DEFAULT)	|	VoC_add16_rr(REG7,REG7,REG4,DEFAULT)
0x00FF1606,	//0x0518		VoC_and16_ri(REG6,0xff)
0xE47EF9C7,	//0x051a		VoC_or16_rr(REG6,REG7,DEFAULT)	|	VoC_shru16_ri(REG7,0xfffffff8,DEFAULT)
0xDCB6FFC0,	//0x051c		VoC_sw16inc_p(REG6,REG3,DEFAULT)	|	VoC_NOP
		//0x051d		VoC_endloop0
		//0x051e		VoC_endloop1
0xC0AA4069,	//0x051e		VoC_add16_rr(REG2,REG2,REG5,IN_PARALLEL)	|	VoC_add16_rr(REG1,REG1,REG5,DEFAULT)
0xFFC0DFA9,	//0x0520		VoC_NOP	|	VoC_pop16(RA,DEFAULT)
0xDFE9E580,	//0x0522		VoC_push16(RA,DEFAULT)	|	VoC_return
		//0x0523		CS_H263interpolate16x16_halfpel_h_c
0x0C4C1406,	//0x0524		VoC_lw16_d(REG6,0xc4c)
0x09301804,	//0x0526		VoC_lw16i_set_inc(REG0,0x930,0x1)
0x09501807,	//0x0528		VoC_lw16i_set_inc(REG3,0x950,0x1)
0x06D81805,	//0x052a		VoC_lw16i_set_inc(REG1,0x6d8,0x1)
0xE1444071,	//0x052c		VoC_lw16i_short(REG4,0x14,IN_PARALLEL)	|	VoC_add16_rr(REG1,REG1,REG6,DEFAULT)
0xE0144062,	//0x052e		VoC_lw16i_short(REG4,0x1,IN_PARALLEL)	|	VoC_add16_rr(REG2,REG1,REG4,DEFAULT)
0x06CC07A4,	//0x0530		VoC_sub16_rd(REG4,REG4,0x6cc)
0xF085F032,	//0x0532		VoC_lw16i_short(REG5,0x4,DEFAULT)	|	VoC_lw16i_short(INC2,0x1,DEFAULT)
0x05542C11,	//0x0534		VoC_loop_i(0x1,0x8)
0xD896E88E,	//0x0536		VoC_lw16inc_p(REG6,REG1,DEFAULT)	|	VoC_loop_i_short(0x4,DEFAULT)
0x41A6818E,	//0x0538		VoC_add16_rr(REG6,REG6,REG4,DEFAULT)	|	VoC_add16_rp(REG6,REG6,REG1,DEFAULT)
0x01CFD897,	//0x053a		VoC_add16_rp(REG7,REG7,REG1,DEFAULT)	|	VoC_lw16inc_p(REG7,REG1,IN_PARALLEL)
0xC1E7F80E,	//0x053c		VoC_add16_rr(REG7,REG7,REG4,DEFAULT)	|	VoC_shr16_ri(REG6,0x1,IN_PARALLEL)
0x1606F80F,	//0x053e		VoC_and16_ri(REG6,0xff)(lo)	|	VoC_shr16_ri(REG7,0x1,DEFAULT)
0xF9C700FF,	//0x0540		VoC_shru16_ri(REG7,0xfffffff8,DEFAULT)	|	VoC_and16_ri(REG6,0xff)(hi)
0xFFC0E47E,	//0x0542		VoC_NOP	|	VoC_or16_rr(REG6,REG7,DEFAULT)
		//0x0544		VoC_endloop0
0xE88EDC86,	//0x0544		VoC_loop_i_short(0x4,DEFAULT)	|	VoC_sw16inc_p(REG6,REG0,DEFAULT)
0x818ED896,	//0x0546		VoC_add16_rp(REG6,REG6,REG1,DEFAULT)	|	VoC_lw16inc_p(REG6,REG1,DEFAULT)
0xD89741A6,	//0x0548		VoC_lw16inc_p(REG7,REG1,IN_PARALLEL)	|	VoC_add16_rr(REG6,REG6,REG4,DEFAULT)
0xF80E01CF,	//0x054a		VoC_shr16_ri(REG6,0x1,IN_PARALLEL)	|	VoC_add16_rp(REG7,REG7,REG1,DEFAULT)
0xF80FC1E7,	//0x054c		VoC_shr16_ri(REG7,0x1,DEFAULT)	|	VoC_add16_rr(REG7,REG7,REG4,DEFAULT)
0x00FF1606,	//0x054e		VoC_and16_ri(REG6,0xff)
0xE47EF9C7,	//0x0550		VoC_or16_rr(REG6,REG7,DEFAULT)	|	VoC_shru16_ri(REG7,0xfffffff8,DEFAULT)
0xDCB6FFC0,	//0x0552		VoC_sw16inc_p(REG6,REG3,DEFAULT)	|	VoC_NOP
		//0x0553		VoC_endloop0
		//0x0554		VoC_endloop1
0x1804C069,	//0x0554		VoC_lw16i_set_inc(REG0,0x970,0x1)(lo)	|	VoC_add16_rr(REG1,REG1,REG5,DEFAULT)
0x18070970,	//0x0556		VoC_lw16i_set_inc(REG3,0x990,0x1)(lo)	|	VoC_lw16i_set_inc(REG0,0x970,0x1)(hi)
0x2C110990,	//0x0558		VoC_loop_i(0x1,0x8)(lo)	|	VoC_lw16i_set_inc(REG3,0x990,0x1)(hi)
0xE88E0579,	//0x055a		VoC_loop_i_short(0x4,DEFAULT)	|	VoC_loop_i(0x1,0x8)(hi)
0x818ED896,	//0x055c		VoC_add16_rp(REG6,REG6,REG1,DEFAULT)	|	VoC_lw16inc_p(REG6,REG1,DEFAULT)
0xD89741A6,	//0x055e		VoC_lw16inc_p(REG7,REG1,IN_PARALLEL)	|	VoC_add16_rr(REG6,REG6,REG4,DEFAULT)
0xF80E01CF,	//0x0560		VoC_shr16_ri(REG6,0x1,IN_PARALLEL)	|	VoC_add16_rp(REG7,REG7,REG1,DEFAULT)
0xF80FC1E7,	//0x0562		VoC_shr16_ri(REG7,0x1,DEFAULT)	|	VoC_add16_rr(REG7,REG7,REG4,DEFAULT)
0x00FF1606,	//0x0564		VoC_and16_ri(REG6,0xff)
0xE47EF9C7,	//0x0566		VoC_or16_rr(REG6,REG7,DEFAULT)	|	VoC_shru16_ri(REG7,0xfffffff8,DEFAULT)
0xDC86FFC0,	//0x0568		VoC_sw16inc_p(REG6,REG0,DEFAULT)	|	VoC_NOP
		//0x0569		VoC_endloop0
0xD896E88E,	//0x056a		VoC_lw16inc_p(REG6,REG1,DEFAULT)	|	VoC_loop_i_short(0x4,DEFAULT)
0x41A6818E,	//0x056c		VoC_add16_rr(REG6,REG6,REG4,DEFAULT)	|	VoC_add16_rp(REG6,REG6,REG1,DEFAULT)
0x01CFD897,	//0x056e		VoC_add16_rp(REG7,REG7,REG1,DEFAULT)	|	VoC_lw16inc_p(REG7,REG1,IN_PARALLEL)
0xC1E7F80E,	//0x0570		VoC_add16_rr(REG7,REG7,REG4,DEFAULT)	|	VoC_shr16_ri(REG6,0x1,IN_PARALLEL)
0x1606F80F,	//0x0572		VoC_and16_ri(REG6,0xff)(lo)	|	VoC_shr16_ri(REG7,0x1,DEFAULT)
0xF9C700FF,	//0x0574		VoC_shru16_ri(REG7,0xfffffff8,DEFAULT)	|	VoC_and16_ri(REG6,0xff)(hi)
0xFFC0E47E,	//0x0576		VoC_NOP	|	VoC_or16_rr(REG6,REG7,DEFAULT)
		//0x0578		VoC_endloop0
0xC069DCB6,	//0x0578		VoC_add16_rr(REG1,REG1,REG5,DEFAULT)	|	VoC_sw16inc_p(REG6,REG3,DEFAULT)
		//0x0579		VoC_endloop1
0xFFC0DFA9,	//0x057a		VoC_NOP	|	VoC_pop16(RA,DEFAULT)
0xDFE9E580,	//0x057c		VoC_push16(RA,DEFAULT)	|	VoC_return
		//0x057d		CS_H263interpolate16x16_halfpel_hv_c
0x0C4C1406,	//0x057e		VoC_lw16_d(REG6,0xc4c)
0x09301804,	//0x0580		VoC_lw16i_set_inc(REG0,0x930,0x1)
0x09501807,	//0x0582		VoC_lw16i_set_inc(REG3,0x950,0x1)
0x06D81805,	//0x0584		VoC_lw16i_set_inc(REG1,0x6d8,0x1)
0xE1444071,	//0x0586		VoC_lw16i_short(REG4,0x14,IN_PARALLEL)	|	VoC_add16_rr(REG1,REG1,REG6,DEFAULT)
0xE0244062,	//0x0588		VoC_lw16i_short(REG4,0x2,IN_PARALLEL)	|	VoC_add16_rr(REG2,REG1,REG4,DEFAULT)
0x06CC07A4,	//0x058a		VoC_sub16_rd(REG4,REG4,0x6cc)
0xF085F032,	//0x058c		VoC_lw16i_short(REG5,0x4,DEFAULT)	|	VoC_lw16i_short(INC2,0x1,DEFAULT)
0x05B62C11,	//0x058e		VoC_loop_i(0x1,0x8)
0xD896E892,	//0x0590		VoC_lw16inc_p(REG6,REG1,DEFAULT)	|	VoC_loop_i_short(0x4,DEFAULT)
0x8396818E,	//0x0592		VoC_add16inc_rp(REG6,REG6,REG2,DEFAULT)	|	VoC_add16_rp(REG6,REG6,REG1,DEFAULT)
0x41A68196,	//0x0594		VoC_add16_rr(REG6,REG6,REG4,DEFAULT)	|	VoC_add16_rp(REG6,REG6,REG2,DEFAULT)
0x81CFD897,	//0x0596		VoC_add16_rp(REG7,REG7,REG1,DEFAULT)	|	VoC_lw16inc_p(REG7,REG1,IN_PARALLEL)
0x81D783D7,	//0x0598		VoC_add16_rp(REG7,REG7,REG2,DEFAULT)	|	VoC_add16inc_rp(REG7,REG7,REG2,DEFAULT)
0xF81641E7,	//0x059a		VoC_shr16_ri(REG6,0x2,IN_PARALLEL)	|	VoC_add16_rr(REG7,REG7,REG4,DEFAULT)
0x1606F817,	//0x059c		VoC_and16_ri(REG6,0xff)(lo)	|	VoC_shr16_ri(REG7,0x2,DEFAULT)
0xF9C700FF,	//0x059e		VoC_shru16_ri(REG7,0xfffffff8,DEFAULT)	|	VoC_and16_ri(REG6,0xff)(hi)
0xFFC0E47E,	//0x05a0		VoC_NOP	|	VoC_or16_rr(REG6,REG7,DEFAULT)
		//0x05a2		VoC_endloop0
0xE892DC86,	//0x05a2		VoC_loop_i_short(0x4,DEFAULT)	|	VoC_sw16inc_p(REG6,REG0,DEFAULT)
0x818ED896,	//0x05a4		VoC_add16_rp(REG6,REG6,REG1,DEFAULT)	|	VoC_lw16inc_p(REG6,REG1,DEFAULT)
0x81968396,	//0x05a6		VoC_add16_rp(REG6,REG6,REG2,DEFAULT)	|	VoC_add16inc_rp(REG6,REG6,REG2,DEFAULT)
0xD89741A6,	//0x05a8		VoC_lw16inc_p(REG7,REG1,IN_PARALLEL)	|	VoC_add16_rr(REG6,REG6,REG4,DEFAULT)
0x83D781CF,	//0x05aa		VoC_add16inc_rp(REG7,REG7,REG2,DEFAULT)	|	VoC_add16_rp(REG7,REG7,REG1,DEFAULT)
0x41E781D7,	//0x05ac		VoC_add16_rr(REG7,REG7,REG4,DEFAULT)	|	VoC_add16_rp(REG7,REG7,REG2,DEFAULT)
0xF817F816,	//0x05ae		VoC_shr16_ri(REG7,0x2,DEFAULT)	|	VoC_shr16_ri(REG6,0x2,IN_PARALLEL)
0x00FF1606,	//0x05b0		VoC_and16_ri(REG6,0xff)
0xE47EF9C7,	//0x05b2		VoC_or16_rr(REG6,REG7,DEFAULT)	|	VoC_shru16_ri(REG7,0xfffffff8,DEFAULT)
0xDCB6FFC0,	//0x05b4		VoC_sw16inc_p(REG6,REG3,DEFAULT)	|	VoC_NOP
		//0x05b5		VoC_endloop0
		//0x05b6		VoC_endloop1
0xC0AA4069,	//0x05b6		VoC_add16_rr(REG2,REG2,REG5,IN_PARALLEL)	|	VoC_add16_rr(REG1,REG1,REG5,DEFAULT)
0x09701804,	//0x05b8		VoC_lw16i_set_inc(REG0,0x970,0x1)
0x09901807,	//0x05ba		VoC_lw16i_set_inc(REG3,0x990,0x1)
0x05E42C11,	//0x05bc		VoC_loop_i(0x1,0x8)
0xD896E892,	//0x05be		VoC_lw16inc_p(REG6,REG1,DEFAULT)	|	VoC_loop_i_short(0x4,DEFAULT)
0x8396818E,	//0x05c0		VoC_add16inc_rp(REG6,REG6,REG2,DEFAULT)	|	VoC_add16_rp(REG6,REG6,REG1,DEFAULT)
0x41A68196,	//0x05c2		VoC_add16_rr(REG6,REG6,REG4,DEFAULT)	|	VoC_add16_rp(REG6,REG6,REG2,DEFAULT)
0x81CFD897,	//0x05c4		VoC_add16_rp(REG7,REG7,REG1,DEFAULT)	|	VoC_lw16inc_p(REG7,REG1,IN_PARALLEL)
0x81D783D7,	//0x05c6		VoC_add16_rp(REG7,REG7,REG2,DEFAULT)	|	VoC_add16inc_rp(REG7,REG7,REG2,DEFAULT)
0xF81641E7,	//0x05c8		VoC_shr16_ri(REG6,0x2,IN_PARALLEL)	|	VoC_add16_rr(REG7,REG7,REG4,DEFAULT)
0x1606F817,	//0x05ca		VoC_and16_ri(REG6,0xff)(lo)	|	VoC_shr16_ri(REG7,0x2,DEFAULT)
0xF9C700FF,	//0x05cc		VoC_shru16_ri(REG7,0xfffffff8,DEFAULT)	|	VoC_and16_ri(REG6,0xff)(hi)
0xFFC0E47E,	//0x05ce		VoC_NOP	|	VoC_or16_rr(REG6,REG7,DEFAULT)
		//0x05d0		VoC_endloop0
0xE892DC86,	//0x05d0		VoC_loop_i_short(0x4,DEFAULT)	|	VoC_sw16inc_p(REG6,REG0,DEFAULT)
0x818ED896,	//0x05d2		VoC_add16_rp(REG6,REG6,REG1,DEFAULT)	|	VoC_lw16inc_p(REG6,REG1,DEFAULT)
0x81968396,	//0x05d4		VoC_add16_rp(REG6,REG6,REG2,DEFAULT)	|	VoC_add16inc_rp(REG6,REG6,REG2,DEFAULT)
0xD89741A6,	//0x05d6		VoC_lw16inc_p(REG7,REG1,IN_PARALLEL)	|	VoC_add16_rr(REG6,REG6,REG4,DEFAULT)
0x83D781CF,	//0x05d8		VoC_add16inc_rp(REG7,REG7,REG2,DEFAULT)	|	VoC_add16_rp(REG7,REG7,REG1,DEFAULT)
0x41E781D7,	//0x05da		VoC_add16_rr(REG7,REG7,REG4,DEFAULT)	|	VoC_add16_rp(REG7,REG7,REG2,DEFAULT)
0xF817F816,	//0x05dc		VoC_shr16_ri(REG7,0x2,DEFAULT)	|	VoC_shr16_ri(REG6,0x2,IN_PARALLEL)
0x00FF1606,	//0x05de		VoC_and16_ri(REG6,0xff)
0xE47EF9C7,	//0x05e0		VoC_or16_rr(REG6,REG7,DEFAULT)	|	VoC_shru16_ri(REG7,0xfffffff8,DEFAULT)
0xDCB6FFC0,	//0x05e2		VoC_sw16inc_p(REG6,REG3,DEFAULT)	|	VoC_NOP
		//0x05e3		VoC_endloop0
		//0x05e4		VoC_endloop1
0xC0AA4069,	//0x05e4		VoC_add16_rr(REG2,REG2,REG5,IN_PARALLEL)	|	VoC_add16_rr(REG1,REG1,REG5,DEFAULT)
0xFFC0DFA9,	//0x05e6		VoC_NOP	|	VoC_pop16(RA,DEFAULT)
0xDFE9E580,	//0x05e8		VoC_push16(RA,DEFAULT)	|	VoC_return
		//0x05e9		CS_H263interpolate16x16_switch
0x45AA1406,	//0x05ea		VoC_lw16_d(REG6,0x45aa)
0x00001804,	//0x05ec		VoC_lw16i_set_inc(REG0,0x0,0x1)
0x05F33586,	//0x05ee		VoC_bne16_rr(CS_interpolate16x16_switch01,REG0,REG6)
0x04382B80,	//0x05f0		VoC_jal(CS_H263transfer16x16_copy_c)
0xDE00E5D0,	//0x05f2		VoC_inc_p(REG0,DEFAULT)	|	VoC_jump(CS_interpolate16x16_switch04)
		//0x05f3		CS_interpolate16x16_switch01
0x05F93586,	//0x05f4		VoC_bne16_rr(CS_interpolate16x16_switch02,REG0,REG6)
0x04C72B80,	//0x05f6		VoC_jal(CS_H263interpolate16x16_halfpel_v_c)
0xDE00E5CA,	//0x05f8		VoC_inc_p(REG0,DEFAULT)	|	VoC_jump(CS_interpolate16x16_switch04)
		//0x05f9		CS_interpolate16x16_switch02
0x06003586,	//0x05fa		VoC_bne16_rr(CS_interpolate16x16_switch03,REG0,REG6)
0x05232B80,	//0x05fc		VoC_jal(CS_H263interpolate16x16_halfpel_h_c)
0xFFC065C4,	//0x05fe		VoC_NAD(IN_PARALLEL)	|	VoC_jump(CS_interpolate16x16_switch04)
		//0x0600		CS_interpolate16x16_switch03
0x057D2B80,	//0x0600		VoC_jal(CS_H263interpolate16x16_halfpel_hv_c)
		//0x0602		CS_interpolate16x16_switch04
0xFFC0DFA9,	//0x0602		VoC_NOP	|	VoC_pop16(RA,DEFAULT)
0xDFE9E580,	//0x0604		VoC_push16(RA,DEFAULT)	|	VoC_return
		//0x0605		CS_H263transfer8x8_copy_c
0x0C4C1406,	//0x0606		VoC_lw16_d(REG6,0xc4c)
0xF0087000,	//0x0608		VoC_lw16i_short(INC0,0x2,IN_PARALLEL)	|	VoC_lw16i_short(REG0,0x0,DEFAULT)
0x06173586,	//0x060a		VoC_bne16_rr(CS_transfer8x8_copy_c01,REG0,REG6)
0x6181E1C0,	//0x060c		VoC_movreg16(REG1,RL6_LO,DEFAULT)	|	VoC_movreg16(REG0,RL7_LO,DEFAULT)
0xE905F009,	//0x060e		VoC_loop_i_short(0x8,DEFAULT)	|	VoC_lw16i_short(INC1,0x2,IN_PARALLEL)
0xD9CDD9CC,	//0x0610		VoC_lw32inc_p(ACC1,REG1,DEFAULT)	|	VoC_lw32inc_p(ACC0,REG1,DEFAULT)
0xDDC5DDC4,	//0x0612		VoC_sw32inc_p(ACC1,REG0,DEFAULT)	|	VoC_sw32inc_p(ACC0,REG0,DEFAULT)
		//0x0614		VoC_endloop0
0x2B00DE08,	//0x0614		VoC_jump_lg(CS_transfer8x8_copy_c03)(lo)	|	VoC_inc_p(REG1,DEFAULT)
0xDE00064C,	//0x0616		VoC_inc_p(REG0,DEFAULT)	|	VoC_jump_lg(CS_transfer8x8_copy_c03)(hi)
		//0x0617		CS_transfer8x8_copy_c01
0x06283586,	//0x0618		VoC_bne16_rr(CS_transfer8x8_copy_c02,REG0,REG6)
0x6181E1C0,	//0x061a		VoC_movreg16(REG1,RL6_LO,DEFAULT)	|	VoC_movreg16(REG0,RL7_LO,DEFAULT)
0xE908F005,	//0x061c		VoC_loop_i_short(0x8,DEFAULT)	|	VoC_lw16i_short(INC1,0x1,IN_PARALLEL)
0xD896DE08,	//0x061e		VoC_lw16inc_p(REG6,REG1,DEFAULT)	|	VoC_inc_p(REG1,DEFAULT)
0xD894D897,	//0x0620		VoC_lw16inc_p(REG4,REG1,DEFAULT)	|	VoC_lw16inc_p(REG7,REG1,DEFAULT)
0xDDC3D895,	//0x0622		VoC_sw32inc_p(REG67,REG0,DEFAULT)	|	VoC_lw16inc_p(REG5,REG1,DEFAULT)
0xDE08DDC2,	//0x0624		VoC_inc_p(REG1,DEFAULT)	|	VoC_sw32inc_p(REG45,REG0,DEFAULT)
		//0x0625		VoC_endloop0
0x064C2B00,	//0x0626		VoC_jump_lg(CS_transfer8x8_copy_c03)
		//0x0628		CS_transfer8x8_copy_c02
0xF00461C0,	//0x0628		VoC_lw16i_short(INC0,0x1,IN_PARALLEL)	|	VoC_movreg16(REG0,RL7_LO,DEFAULT)
0xF0056181,	//0x062a		VoC_lw16i_short(INC1,0x1,IN_PARALLEL)	|	VoC_movreg16(REG1,RL6_LO,DEFAULT)
0xE0434071,	//0x062c		VoC_lw16i_short(REG3,0x4,IN_PARALLEL)	|	VoC_add16_rr(REG1,REG1,REG6,DEFAULT)
0xD896E91D,	//0x062e		VoC_lw16inc_p(REG6,REG1,DEFAULT)	|	VoC_loop_i_short(0x8,DEFAULT)
0x1606D897,	//0x0630		VoC_and16_ri(REG6,0xff)(lo)	|	VoC_lw16inc_p(REG7,REG1,DEFAULT)
0x79C700FF,	//0x0632		VoC_shru16_ri(REG7,0xfffffff8,DEFAULT)	|	VoC_and16_ri(REG6,0xff)(hi)
0x647ED894,	//0x0634		VoC_or16_rr(REG6,REG7,DEFAULT)	|	VoC_lw16inc_p(REG4,REG1,IN_PARALLEL)
0x1604D895,	//0x0636		VoC_and16_ri(REG4,0xff)(lo)	|	VoC_lw16inc_p(REG5,REG1,IN_PARALLEL)
0x79C500FF,	//0x0638		VoC_shru16_ri(REG5,0xfffffff8,DEFAULT)	|	VoC_and16_ri(REG4,0xff)(hi)
0x646CDC86,	//0x063a		VoC_or16_rr(REG4,REG5,DEFAULT)	|	VoC_sw16inc_p(REG6,REG0,IN_PARALLEL)
0x1606D896,	//0x063c		VoC_and16_ri(REG6,0xff)(lo)	|	VoC_lw16inc_p(REG6,REG1,IN_PARALLEL)
0xD89700FF,	//0x063e		VoC_lw16inc_p(REG7,REG1,DEFAULT)	|	VoC_and16_ri(REG6,0xff)(hi)
0x79C7DC84,	//0x0640		VoC_shru16_ri(REG7,0xfffffff8,DEFAULT)	|	VoC_sw16inc_p(REG4,REG0,DEFAULT)
0x647ED894,	//0x0642		VoC_or16_rr(REG6,REG7,DEFAULT)	|	VoC_lw16inc_p(REG4,REG1,IN_PARALLEL)
0x1604D895,	//0x0644		VoC_and16_ri(REG4,0xff)(lo)	|	VoC_lw16inc_p(REG5,REG1,IN_PARALLEL)
0x79C500FF,	//0x0646		VoC_shru16_ri(REG5,0xfffffff8,DEFAULT)	|	VoC_and16_ri(REG4,0xff)(hi)
0xE46CDC86,	//0x0648		VoC_or16_rr(REG4,REG5,DEFAULT)	|	VoC_sw16inc_p(REG6,REG0,IN_PARALLEL)
0xDC84C059,	//0x064a		VoC_sw16inc_p(REG4,REG0,DEFAULT)	|	VoC_add16_rr(REG1,REG1,REG3,DEFAULT)
		//0x064b		VoC_endloop0
		//0x064c		CS_transfer8x8_copy_c03
0xFFC0DFA9,	//0x064c		VoC_NOP	|	VoC_pop16(RA,DEFAULT)
0xDFE9E580,	//0x064e		VoC_push16(RA,DEFAULT)	|	VoC_return
		//0x064f		CS_H263interpolate8x8_halfpel_v_c
0x0C4C1406,	//0x0650		VoC_lw16_d(REG6,0xc4c)
0xF00461C0,	//0x0652		VoC_lw16i_short(INC0,0x1,IN_PARALLEL)	|	VoC_movreg16(REG0,RL7_LO,DEFAULT)
0xF0056181,	//0x0654		VoC_lw16i_short(INC1,0x1,IN_PARALLEL)	|	VoC_movreg16(REG1,RL6_LO,DEFAULT)
0xE0C44071,	//0x0656		VoC_lw16i_short(REG4,0xc,IN_PARALLEL)	|	VoC_add16_rr(REG1,REG1,REG6,DEFAULT)
0xE0144062,	//0x0658		VoC_lw16i_short(REG4,0x1,IN_PARALLEL)	|	VoC_add16_rr(REG2,REG1,REG4,DEFAULT)
0x06CC07A4,	//0x065a		VoC_sub16_rd(REG4,REG4,0x6cc)
0xE0457032,	//0x065c		VoC_lw16i_short(REG5,0x4,IN_PARALLEL)	|	VoC_lw16i_short(INC2,0x1,DEFAULT)
0x066F2C11,	//0x065e		VoC_loop_i(0x1,0x8)
0xD896E88E,	//0x0660		VoC_lw16inc_p(REG6,REG1,DEFAULT)	|	VoC_loop_i_short(0x4,DEFAULT)
0x41A68396,	//0x0662		VoC_add16_rr(REG6,REG6,REG4,DEFAULT)	|	VoC_add16inc_rp(REG6,REG6,REG2,DEFAULT)
0x03D7D897,	//0x0664		VoC_add16inc_rp(REG7,REG7,REG2,DEFAULT)	|	VoC_lw16inc_p(REG7,REG1,IN_PARALLEL)
0xC1E7F80E,	//0x0666		VoC_add16_rr(REG7,REG7,REG4,DEFAULT)	|	VoC_shr16_ri(REG6,0x1,IN_PARALLEL)
0x1606F80F,	//0x0668		VoC_and16_ri(REG6,0xff)(lo)	|	VoC_shr16_ri(REG7,0x1,DEFAULT)
0xF9C700FF,	//0x066a		VoC_shru16_ri(REG7,0xfffffff8,DEFAULT)	|	VoC_and16_ri(REG6,0xff)(hi)
0xFFC0E47E,	//0x066c		VoC_NOP	|	VoC_or16_rr(REG6,REG7,DEFAULT)
		//0x066e		VoC_endloop0
0x4069DC86,	//0x066e		VoC_add16_rr(REG1,REG1,REG5,DEFAULT)	|	VoC_sw16inc_p(REG6,REG0,DEFAULT)
		//0x066f		VoC_endloop1
0xDFA9C0AA,	//0x0670		VoC_pop16(RA,DEFAULT)	|	VoC_add16_rr(REG2,REG2,REG5,IN_PARALLEL)
0xE580FFC0,	//0x0672		VoC_return	|	VoC_NOP
		//0x0674		CS_H263interpolate8x8_halfpel_h_c
0x1406DFE9,	//0x0674		VoC_lw16_d(REG6,0xc4c)(lo)	|	VoC_push16(RA,DEFAULT)
0x61C00C4C,	//0x0676		VoC_movreg16(REG0,RL7_LO,DEFAULT)	|	VoC_lw16_d(REG6,0xc4c)(hi)
0x6181F004,	//0x0678		VoC_movreg16(REG1,RL6_LO,DEFAULT)	|	VoC_lw16i_short(INC0,0x1,IN_PARALLEL)
0x4071F005,	//0x067a		VoC_add16_rr(REG1,REG1,REG6,DEFAULT)	|	VoC_lw16i_short(INC1,0x1,IN_PARALLEL)
0x4062E0C4,	//0x067c		VoC_add16_rr(REG2,REG1,REG4,DEFAULT)	|	VoC_lw16i_short(REG4,0xc,IN_PARALLEL)
0x07A4E014,	//0x067e		VoC_sub16_rd(REG4,REG4,0x6cc)(lo)	|	VoC_lw16i_short(REG4,0x1,IN_PARALLEL)
0x703206CC,	//0x0680		VoC_lw16i_short(INC2,0x1,DEFAULT)	|	VoC_sub16_rd(REG4,REG4,0x6cc)(hi)
0x2C11E045,	//0x0682		VoC_loop_i(0x1,0x8)(lo)	|	VoC_lw16i_short(REG5,0x4,IN_PARALLEL)
0xE88E0694,	//0x0684		VoC_loop_i_short(0x4,DEFAULT)	|	VoC_loop_i(0x1,0x8)(hi)
0x818ED896,	//0x0686		VoC_add16_rp(REG6,REG6,REG1,DEFAULT)	|	VoC_lw16inc_p(REG6,REG1,DEFAULT)
0xD89741A6,	//0x0688		VoC_lw16inc_p(REG7,REG1,IN_PARALLEL)	|	VoC_add16_rr(REG6,REG6,REG4,DEFAULT)
0xF80E01CF,	//0x068a		VoC_shr16_ri(REG6,0x1,IN_PARALLEL)	|	VoC_add16_rp(REG7,REG7,REG1,DEFAULT)
0xF80FC1E7,	//0x068c		VoC_shr16_ri(REG7,0x1,DEFAULT)	|	VoC_add16_rr(REG7,REG7,REG4,DEFAULT)
0x00FF1606,	//0x068e		VoC_and16_ri(REG6,0xff)
0xE47EF9C7,	//0x0690		VoC_or16_rr(REG6,REG7,DEFAULT)	|	VoC_shru16_ri(REG7,0xfffffff8,DEFAULT)
0xDC86FFC0,	//0x0692		VoC_sw16inc_p(REG6,REG0,DEFAULT)	|	VoC_NOP
		//0x0693		VoC_endloop0
		//0x0694		VoC_endloop1
0xDFA9C069,	//0x0694		VoC_pop16(RA,DEFAULT)	|	VoC_add16_rr(REG1,REG1,REG5,DEFAULT)
0xE580FFC0,	//0x0696		VoC_return	|	VoC_NOP
		//0x0698		CS_H263interpolate8x8_halfpel_hv_c
0x1406DFE9,	//0x0698		VoC_lw16_d(REG6,0xc4c)(lo)	|	VoC_push16(RA,DEFAULT)
0x0A830C4C,	//0x069a		VoC_lw16i(REG3,0x20)(lo)	|	VoC_lw16_d(REG6,0xc4c)(hi)
0xE1C00020,	//0x069c		VoC_movreg16(REG0,RL7_LO,DEFAULT)	|	VoC_lw16i(REG3,0x20)(hi)
0xF004401B,	//0x069e		VoC_lw16i_short(INC0,0x1,IN_PARALLEL)	|	VoC_add16_rr(REG3,REG0,REG3,DEFAULT)
0xF0056181,	//0x06a0		VoC_lw16i_short(INC1,0x1,IN_PARALLEL)	|	VoC_movreg16(REG1,RL6_LO,DEFAULT)
0xE0C44071,	//0x06a2		VoC_lw16i_short(REG4,0xc,IN_PARALLEL)	|	VoC_add16_rr(REG1,REG1,REG6,DEFAULT)
0xE0244062,	//0x06a4		VoC_lw16i_short(REG4,0x2,IN_PARALLEL)	|	VoC_add16_rr(REG2,REG1,REG4,DEFAULT)
0x06CC07A4,	//0x06a6		VoC_sub16_rd(REG4,REG4,0x6cc)
0xF0077032,	//0x06a8		VoC_lw16i_short(INC3,0x1,IN_PARALLEL)	|	VoC_lw16i_short(INC2,0x1,DEFAULT)
0x2C11F085,	//0x06aa		VoC_loop_i(0x1,0x8)(lo)	|	VoC_lw16i_short(REG5,0x4,DEFAULT)
0xE89206C0,	//0x06ac		VoC_loop_i_short(0x4,DEFAULT)	|	VoC_loop_i(0x1,0x8)(hi)
0x818ED896,	//0x06ae		VoC_add16_rp(REG6,REG6,REG1,DEFAULT)	|	VoC_lw16inc_p(REG6,REG1,DEFAULT)
0x81968396,	//0x06b0		VoC_add16_rp(REG6,REG6,REG2,DEFAULT)	|	VoC_add16inc_rp(REG6,REG6,REG2,DEFAULT)
0xD89741A6,	//0x06b2		VoC_lw16inc_p(REG7,REG1,IN_PARALLEL)	|	VoC_add16_rr(REG6,REG6,REG4,DEFAULT)
0x83D781CF,	//0x06b4		VoC_add16inc_rp(REG7,REG7,REG2,DEFAULT)	|	VoC_add16_rp(REG7,REG7,REG1,DEFAULT)
0x41E781D7,	//0x06b6		VoC_add16_rr(REG7,REG7,REG4,DEFAULT)	|	VoC_add16_rp(REG7,REG7,REG2,DEFAULT)
0xF817F816,	//0x06b8		VoC_shr16_ri(REG7,0x2,DEFAULT)	|	VoC_shr16_ri(REG6,0x2,IN_PARALLEL)
0x00FF1606,	//0x06ba		VoC_and16_ri(REG6,0xff)
0xE47EF9C7,	//0x06bc		VoC_or16_rr(REG6,REG7,DEFAULT)	|	VoC_shru16_ri(REG7,0xfffffff8,DEFAULT)
0xDC86FFC0,	//0x06be		VoC_sw16inc_p(REG6,REG0,DEFAULT)	|	VoC_NOP
		//0x06bf		VoC_endloop0
		//0x06c0		VoC_endloop1
0xC0AA4069,	//0x06c0		VoC_add16_rr(REG2,REG2,REG5,IN_PARALLEL)	|	VoC_add16_rr(REG1,REG1,REG5,DEFAULT)
0xFFC0DFA9,	//0x06c2		VoC_NOP	|	VoC_pop16(RA,DEFAULT)
0xDFE9E580,	//0x06c4		VoC_push16(RA,DEFAULT)	|	VoC_return
		//0x06c5		CS_H263interpolate8x8_switch
0x45AB1406,	//0x06c6		VoC_lw16_d(REG6,0x45ab)
0x00001804,	//0x06c8		VoC_lw16i_set_inc(REG0,0x0,0x1)
0x06CF3586,	//0x06ca		VoC_bne16_rr(CS_interpolate8x8_switch01,REG0,REG6)
0x06052B80,	//0x06cc		VoC_jal(CS_H263transfer8x8_copy_c)
0xDE00E5D0,	//0x06ce		VoC_inc_p(REG0,DEFAULT)	|	VoC_jump(CS_interpolate8x8_switch04)
		//0x06cf		CS_interpolate8x8_switch01
0x06D53586,	//0x06d0		VoC_bne16_rr(CS_interpolate8x8_switch02,REG0,REG6)
0x064F2B80,	//0x06d2		VoC_jal(CS_H263interpolate8x8_halfpel_v_c)
0xDE00E5CA,	//0x06d4		VoC_inc_p(REG0,DEFAULT)	|	VoC_jump(CS_interpolate8x8_switch04)
		//0x06d5		CS_interpolate8x8_switch02
0x06DC3586,	//0x06d6		VoC_bne16_rr(CS_interpolate8x8_switch03,REG0,REG6)
0x06742B80,	//0x06d8		VoC_jal(CS_H263interpolate8x8_halfpel_h_c)
0xFFC065C4,	//0x06da		VoC_NAD(IN_PARALLEL)	|	VoC_jump(CS_interpolate8x8_switch04)
		//0x06dc		CS_interpolate8x8_switch03
0x06982B80,	//0x06dc		VoC_jal(CS_H263interpolate8x8_halfpel_hv_c)
		//0x06de		CS_interpolate8x8_switch04
0xFFC0DFA9,	//0x06de		VoC_NOP	|	VoC_pop16(RA,DEFAULT)
0xDFE9E580,	//0x06e0		VoC_push16(RA,DEFAULT)	|	VoC_return
		//0x06e1		CS_put_h263_chroma_mc8_8_c
0x42891400,	//0x06e2		VoC_lw16_d(REG0,0x4289)
0xC23A4231,	//0x06e4		VoC_sub16_rr(REG2,REG0,REG7,IN_PARALLEL)	|	VoC_sub16_rr(REG1,REG0,REG6,DEFAULT)
0xC5BD447C,	//0x06e6		VoC_mult16_rr(REG5,REG6,REG7,IN_PARALLEL)	|	VoC_mult16_rr(REG4,REG1,REG7,DEFAULT)
0xC48A4593,	//0x06e8		VoC_mult16_rr(REG2,REG2,REG1,IN_PARALLEL)	|	VoC_mult16_rr(REG3,REG6,REG2,DEFAULT)
0xF0046140,	//0x06ea		VoC_lw16i_short(INC0,0x1,IN_PARALLEL)	|	VoC_movreg16(REG0,ACC1_LO,DEFAULT)
0x06D81805,	//0x06ec		VoC_lw16i_set_inc(REG1,0x6d8,0x1)
0xC071E166,	//0x06ee		VoC_add16_rr(REG1,REG1,REG6,DEFAULT)	|	VoC_movreg16(REG6,ACC1_HI,DEFAULT)
0x078C3105,	//0x06f0		VoC_bgtz16_r(CS_dec_mb_inter1v_lowres_1_D_1,REG5)
0x3104C0E3,	//0x06f2		VoC_bgtz16_r(CS_dec_mb_inter1v_lowres_1_C_1,REG4)(lo)	|	VoC_add16_rr(REG3,REG3,REG4,DEFAULT)
0x0A86073A,	//0x06f4		VoC_lw16i(REG6,0x0)(lo)	|	VoC_bgtz16_r(CS_dec_mb_inter1v_lowres_1_C_1,REG4)(hi)
0xFFC00000,	//0x06f6		VoC_NAD	|	VoC_lw16i(REG6,0x0)(hi)
0x07352C10,	//0x06f8		VoC_loop_i(0x0,0x8)
0x07322C05,	//0x06fa		VoC_loop_i(0x1,0x2)
0xD895D894,	//0x06fc		VoC_lw16inc_p(REG5,REG1,DEFAULT)	|	VoC_lw16inc_p(REG4,REG1,DEFAULT)
0xC4EFC4A4,	//0x06fe		VoC_mult16_rr(REG7,REG3,REG5,DEFAULT)	|	VoC_mult16_rr(REG4,REG2,REG4,DEFAULT)
0x427E0724,	//0x0700		VoC_add16_rd(REG4,REG4,0x427e)
0xF834C13C,	//0x0702		VoC_shr16_ri(REG4,0x6,DEFAULT)	|	VoC_add16_rr(REG4,REG4,REG7,DEFAULT)
0x428C2804,	//0x0704		VoC_and16_rd(REG4,0x428c)
0xD894E088,	//0x0706		VoC_lw16inc_p(REG4,REG1,DEFAULT)	|	VoC_movreg16(ACC0_LO,REG4,DEFAULT)
0xC4E7C4AD,	//0x0708		VoC_mult16_rr(REG7,REG3,REG4,DEFAULT)	|	VoC_mult16_rr(REG5,REG2,REG5,DEFAULT)
0x427E072D,	//0x070a		VoC_add16_rd(REG5,REG5,0x427e)
0xF9F5C17D,	//0x070c		VoC_shru16_ri(REG5,0xfffffffe,DEFAULT)	|	VoC_add16_rr(REG5,REG5,REG7,DEFAULT)
0x428D2805,	//0x070e		VoC_and16_rd(REG5,0x428d)
0xE46FE107,	//0x0710		VoC_or16_rr(REG7,REG5,DEFAULT)	|	VoC_movreg16(REG7,ACC0_LO,DEFAULT)
0xDC87D895,	//0x0712		VoC_sw16inc_p(REG7,REG0,DEFAULT)	|	VoC_lw16inc_p(REG5,REG1,DEFAULT)
0xC4EFC4A4,	//0x0714		VoC_mult16_rr(REG7,REG3,REG5,DEFAULT)	|	VoC_mult16_rr(REG4,REG2,REG4,DEFAULT)
0x427E0724,	//0x0716		VoC_add16_rd(REG4,REG4,0x427e)
0xF934C13C,	//0x0718		VoC_shru16_ri(REG4,0x6,DEFAULT)	|	VoC_add16_rr(REG4,REG4,REG7,DEFAULT)
0x428C2804,	//0x071a		VoC_and16_rd(REG4,0x428c)
0xD814E088,	//0x071c		VoC_lw16_p(REG4,REG1,DEFAULT)	|	VoC_movreg16(ACC0_LO,REG4,DEFAULT)
0xC4E4C4AD,	//0x071e		VoC_mult16_rr(REG4,REG3,REG4,DEFAULT)	|	VoC_mult16_rr(REG5,REG2,REG5,DEFAULT)
0x427E072D,	//0x0720		VoC_add16_rd(REG5,REG5,0x427e)
0xF9F5C165,	//0x0722		VoC_shru16_ri(REG5,0xfffffffe,DEFAULT)	|	VoC_add16_rr(REG5,REG5,REG4,DEFAULT)
0x428D2805,	//0x0724		VoC_and16_rd(REG5,0x428d)
0xE46FE107,	//0x0726		VoC_or16_rr(REG7,REG5,DEFAULT)	|	VoC_movreg16(REG7,ACC0_LO,DEFAULT)
0x42860736,	//0x0728		VoC_add16_rd(REG6,REG6,0x4286)
0x442EDC87,	//0x072a		VoC_bne16_rd(CS_dec_mb_inter1v_lowres_8_to_4_0,REG6,0x4289)(lo)	|	VoC_sw16inc_p(REG7,REG0,DEFAULT)
0x07004289,	//0x072c		VoC_add16_rd(REG0,REG0,0x4289)(lo)	|	VoC_bne16_rd(CS_dec_mb_inter1v_lowres_8_to_4_0,REG6,0x4289)(hi)
0xFFC04289,	//0x072e		VoC_NAD	|	VoC_add16_rd(REG0,REG0,0x4289)(hi)
		//0x0730		CS_dec_mb_inter1v_lowres_8_to_4_0
0x00060A85,	//0x0730		VoC_lw16i(REG5,0x6)
		//0x0732		VoC_endloop1
0x0709C028,	//0x0732		VoC_add16_rd(REG1,REG1,0x4288)(lo)	|	VoC_add16_rr(REG0,REG0,REG5,DEFAULT)
0x07804288,	//0x0734		VoC_sub16_rd(REG0,REG0,0x428b)(lo)	|	VoC_add16_rd(REG1,REG1,0x4288)(hi)
		//0x0735		VoC_endloop0
0x2B00428B,	//0x0736		VoC_jump_lg(CS_put_h263_chroma_mc8_8_c_end)(lo)	|	VoC_sub16_rd(REG0,REG0,0x428b)(hi)
0xFFC00802,	//0x0738		VoC_NAD	|	VoC_jump_lg(CS_put_h263_chroma_mc8_8_c_end)(hi)
		//0x073a		CS_dec_mb_inter1v_lowres_1_C_1
0x00000A86,	//0x073a		VoC_lw16i(REG6,0x0)
0x07872C10,	//0x073c		VoC_loop_i(0x0,0x8)
0x07842C05,	//0x073e		VoC_loop_i(0x1,0x2)
0xD896DFC6,	//0x0740		VoC_lw16inc_p(REG6,REG1,DEFAULT)	|	VoC_push16(REG6,DEFAULT)
0xD89AD899,	//0x0742		VoC_lw16inc_p(ACC1_LO,REG1,DEFAULT)	|	VoC_lw16inc_p(ACC0_HI,REG1,DEFAULT)
0x0709D89B,	//0x0744		VoC_add16_rd(REG1,REG1,0x4289)(lo)	|	VoC_lw16inc_p(ACC1_HI,REG1,DEFAULT)
0xFFC04289,	//0x0746		VoC_NOP	|	VoC_add16_rd(REG1,REG1,0x4289)(hi)
0xD89DD897,	//0x0748		VoC_lw16inc_p(RL6_HI,REG1,DEFAULT)	|	VoC_lw16inc_p(REG7,REG1,DEFAULT)
0xD89FD89E,	//0x074a		VoC_lw16inc_p(RL7_HI,REG1,DEFAULT)	|	VoC_lw16inc_p(RL7_LO,REG1,DEFAULT)
0x42890789,	//0x074c		VoC_sub16_rd(REG1,REG1,0x4289)
0x42880789,	//0x074e		VoC_sub16_rd(REG1,REG1,0x4288)
0xC4FCC4B6,	//0x0750		VoC_mult16_rr(REG4,REG3,REG7,DEFAULT)	|	VoC_mult16_rr(REG6,REG2,REG6,DEFAULT)
0x427E0736,	//0x0752		VoC_add16_rd(REG6,REG6,0x427e)
0xF934C134,	//0x0754		VoC_shru16_ri(REG4,0x6,DEFAULT)	|	VoC_add16_rr(REG4,REG4,REG6,DEFAULT)
0x428C2804,	//0x0756		VoC_and16_rd(REG4,0x428c)
0xE1A7E126,	//0x0758		VoC_movreg16(REG7,RL6_HI,DEFAULT)	|	VoC_movreg16(REG6,ACC0_HI,DEFAULT)
0xC4FDC4B6,	//0x075a		VoC_mult16_rr(REG5,REG3,REG7,DEFAULT)	|	VoC_mult16_rr(REG6,REG2,REG6,DEFAULT)
0x427E0736,	//0x075c		VoC_add16_rd(REG6,REG6,0x427e)
0xF9F5C175,	//0x075e		VoC_shru16_ri(REG5,0xfffffffe,DEFAULT)	|	VoC_add16_rr(REG5,REG5,REG6,DEFAULT)
0x428D2805,	//0x0760		VoC_and16_rd(REG5,0x428d)
0x6146E46C,	//0x0762		VoC_movreg16(REG6,ACC1_LO,DEFAULT)	|	VoC_or16_rr(REG4,REG5,DEFAULT)
0xDC84F7C7,	//0x0764		VoC_sw16inc_p(REG4,REG0,DEFAULT)	|	VoC_movreg16(REG7,RL7_LO,IN_PARALLEL)
0xC4FCC4B6,	//0x0766		VoC_mult16_rr(REG4,REG3,REG7,DEFAULT)	|	VoC_mult16_rr(REG6,REG2,REG6,DEFAULT)
0x427E0736,	//0x0768		VoC_add16_rd(REG6,REG6,0x427e)
0xF934C134,	//0x076a		VoC_shru16_ri(REG4,0x6,DEFAULT)	|	VoC_add16_rr(REG4,REG4,REG6,DEFAULT)
0x428C2804,	//0x076c		VoC_and16_rd(REG4,0x428c)
0xF7E76166,	//0x076e		VoC_movreg16(REG7,RL7_HI,IN_PARALLEL)	|	VoC_movreg16(REG6,ACC1_HI,DEFAULT)
0xC4FDC4B6,	//0x0770		VoC_mult16_rr(REG5,REG3,REG7,DEFAULT)	|	VoC_mult16_rr(REG6,REG2,REG6,DEFAULT)
0x427E0736,	//0x0772		VoC_add16_rd(REG6,REG6,0x427e)
0xF9F5C175,	//0x0774		VoC_shru16_ri(REG5,0xfffffffe,DEFAULT)	|	VoC_add16_rr(REG5,REG5,REG6,DEFAULT)
0x428D2805,	//0x0776		VoC_and16_rd(REG5,0x428d)
0xDF86E46C,	//0x0778		VoC_pop16(REG6,DEFAULT)	|	VoC_or16_rr(REG4,REG5,DEFAULT)
0x42860736,	//0x077a		VoC_add16_rd(REG6,REG6,0x4286)
0x442EDC84,	//0x077c		VoC_bne16_rd(CS_dec_mb_inter1v_lowres_8_to_4_1,REG6,0x4289)(lo)	|	VoC_sw16inc_p(REG4,REG0,DEFAULT)
0x07004289,	//0x077e		VoC_add16_rd(REG0,REG0,0x4289)(lo)	|	VoC_bne16_rd(CS_dec_mb_inter1v_lowres_8_to_4_1,REG6,0x4289)(hi)
0xFFC04289,	//0x0780		VoC_NAD	|	VoC_add16_rd(REG0,REG0,0x4289)(hi)
		//0x0782		CS_dec_mb_inter1v_lowres_8_to_4_1
0x00060A85,	//0x0782		VoC_lw16i(REG5,0x6)
		//0x0784		VoC_endloop1
0x0709C028,	//0x0784		VoC_add16_rd(REG1,REG1,0x4288)(lo)	|	VoC_add16_rr(REG0,REG0,REG5,DEFAULT)
0x07804288,	//0x0786		VoC_sub16_rd(REG0,REG0,0x428b)(lo)	|	VoC_add16_rd(REG1,REG1,0x4288)(hi)
		//0x0787		VoC_endloop0
0x2B00428B,	//0x0788		VoC_jump_lg(CS_put_h263_chroma_mc8_8_c_end)(lo)	|	VoC_sub16_rd(REG0,REG0,0x428b)(hi)
0xFFC00802,	//0x078a		VoC_NAD	|	VoC_jump_lg(CS_put_h263_chroma_mc8_8_c_end)(hi)
		//0x078c		CS_dec_mb_inter1v_lowres_1_D_1
0x00000A86,	//0x078c		VoC_lw16i(REG6,0x0)
0x08002C10,	//0x078e		VoC_loop_i(0x0,0x8)
0x07FC2C05,	//0x0790		VoC_loop_i(0x1,0x2)
0xD898DFC6,	//0x0792		VoC_lw16inc_p(ACC0_LO,REG1,DEFAULT)	|	VoC_push16(REG6,DEFAULT)
0xD89AD899,	//0x0794		VoC_lw16inc_p(ACC1_LO,REG1,DEFAULT)	|	VoC_lw16inc_p(ACC0_HI,REG1,DEFAULT)
0xD816D89B,	//0x0796		VoC_lw16_p(REG6,REG1,DEFAULT)	|	VoC_lw16inc_p(ACC1_HI,REG1,DEFAULT)
0x42890709,	//0x0798		VoC_add16_rd(REG1,REG1,0x4289)
0xD89CFFC0,	//0x079a		VoC_lw16inc_p(RL6_LO,REG1,DEFAULT)	|	VoC_NOP
0xD89ED89D,	//0x079c		VoC_lw16inc_p(RL7_LO,REG1,DEFAULT)	|	VoC_lw16inc_p(RL6_HI,REG1,DEFAULT)
0xD817D89F,	//0x079e		VoC_lw16_p(REG7,REG1,DEFAULT)	|	VoC_lw16inc_p(RL7_HI,REG1,DEFAULT)
0xDFC7DFC1,	//0x07a0		VoC_push16(REG7,DEFAULT)	|	VoC_push16(REG1,DEFAULT)
0x6127DFC6,	//0x07a2		VoC_movreg16(REG7,ACC0_HI,DEFAULT)	|	VoC_push16(REG6,DEFAULT)
0xC4B6F706,	//0x07a4		VoC_mult16_rr(REG6,REG2,REG6,DEFAULT)	|	VoC_movreg16(REG6,ACC0_LO,IN_PARALLEL)
0xFFC0C4FF,	//0x07a6		VoC_NOP	|	VoC_mult16_rr(REG7,REG3,REG7,DEFAULT)
0x6186C1B9,	//0x07a8		VoC_movreg16(REG6,RL6_LO,DEFAULT)	|	VoC_add16_rr(REG1,REG6,REG7,DEFAULT)
0xC536F7A7,	//0x07aa		VoC_mult16_rr(REG6,REG4,REG6,DEFAULT)	|	VoC_movreg16(REG7,RL6_HI,IN_PARALLEL)
0x0736C57F,	//0x07ac		VoC_add16_rd(REG6,REG6,0x4276)(lo)	|	VoC_mult16_rr(REG7,REG5,REG7,DEFAULT)
0xC1BE4276,	//0x07ae		VoC_add16_rr(REG6,REG6,REG7,DEFAULT)	|	VoC_add16_rd(REG6,REG6,0x4276)(hi)
0xF936C18E,	//0x07b0		VoC_shru16_ri(REG6,0x6,DEFAULT)	|	VoC_add16_rr(REG6,REG6,REG1,DEFAULT)
0x428C2806,	//0x07b2		VoC_and16_rd(REG6,0x428c)
0x6126E0C8,	//0x07b4		VoC_movreg16(REG6,ACC0_HI,DEFAULT)	|	VoC_movreg16(ACC0_LO,REG6,DEFAULT)
0xC4B6F747,	//0x07b6		VoC_mult16_rr(REG6,REG2,REG6,DEFAULT)	|	VoC_movreg16(REG7,ACC1_LO,IN_PARALLEL)
0xFFC0C4FF,	//0x07b8		VoC_NOP	|	VoC_mult16_rr(REG7,REG3,REG7,DEFAULT)
0xE1A6C1B9,	//0x07ba		VoC_movreg16(REG6,RL6_HI,DEFAULT)	|	VoC_add16_rr(REG1,REG6,REG7,DEFAULT)
0xC536E1C7,	//0x07bc		VoC_mult16_rr(REG6,REG4,REG6,DEFAULT)	|	VoC_movreg16(REG7,RL7_LO,DEFAULT)
0x0736C57F,	//0x07be		VoC_add16_rd(REG6,REG6,0x4276)(lo)	|	VoC_mult16_rr(REG7,REG5,REG7,DEFAULT)
0xC1F64276,	//0x07c0		VoC_add16_rr(REG6,REG7,REG6,DEFAULT)	|	VoC_add16_rd(REG6,REG6,0x4276)(hi)
0xF9F7C18F,	//0x07c2		VoC_shru16_ri(REG7,0xfffffffe,DEFAULT)	|	VoC_add16_rr(REG7,REG6,REG1,DEFAULT)
0x428D2807,	//0x07c4		VoC_and16_rd(REG7,0x428d)
0xE47EE106,	//0x07c6		VoC_or16_rr(REG6,REG7,DEFAULT)	|	VoC_movreg16(REG6,ACC0_LO,DEFAULT)
0xDC86E167,	//0x07c8		VoC_sw16inc_p(REG6,REG0,DEFAULT)	|	VoC_movreg16(REG7,ACC1_HI,DEFAULT)
0xC4B6E146,	//0x07ca		VoC_mult16_rr(REG6,REG2,REG6,DEFAULT)	|	VoC_movreg16(REG6,ACC1_LO,DEFAULT)
0xFFC0C4FF,	//0x07cc		VoC_NOP	|	VoC_mult16_rr(REG7,REG3,REG7,DEFAULT)
0x61C6C1B9,	//0x07ce		VoC_movreg16(REG6,RL7_LO,DEFAULT)	|	VoC_add16_rr(REG1,REG6,REG7,DEFAULT)
0xC536F7E7,	//0x07d0		VoC_mult16_rr(REG6,REG4,REG6,DEFAULT)	|	VoC_movreg16(REG7,RL7_HI,IN_PARALLEL)
0x0736C57F,	//0x07d2		VoC_add16_rd(REG6,REG6,0x4276)(lo)	|	VoC_mult16_rr(REG7,REG5,REG7,DEFAULT)
0xC18E4276,	//0x07d4		VoC_add16_rr(REG6,REG6,REG1,DEFAULT)	|	VoC_add16_rd(REG6,REG6,0x4276)(hi)
0xF936C1BE,	//0x07d6		VoC_shru16_ri(REG6,0x6,DEFAULT)	|	VoC_add16_rr(REG6,REG6,REG7,DEFAULT)
0x428C2806,	//0x07d8		VoC_and16_rd(REG6,0x428c)
0xF76760C8,	//0x07da		VoC_movreg16(REG7,ACC1_HI,IN_PARALLEL)	|	VoC_movreg16(ACC0_LO,REG6,DEFAULT)
0xC4BFDF86,	//0x07dc		VoC_mult16_rr(REG7,REG2,REG7,DEFAULT)	|	VoC_pop16(REG6,DEFAULT)
0xFFC0C4F6,	//0x07de		VoC_NOP	|	VoC_mult16_rr(REG6,REG3,REG6,DEFAULT)
0xE1E6C1B9,	//0x07e0		VoC_movreg16(REG6,RL7_HI,DEFAULT)	|	VoC_add16_rr(REG1,REG6,REG7,DEFAULT)
0xC536DF87,	//0x07e2		VoC_mult16_rr(REG6,REG4,REG6,DEFAULT)	|	VoC_pop16(REG7,DEFAULT)
0x0736C57F,	//0x07e4		VoC_add16_rd(REG6,REG6,0x4276)(lo)	|	VoC_mult16_rr(REG7,REG5,REG7,DEFAULT)
0xC1F64276,	//0x07e6		VoC_add16_rr(REG6,REG7,REG6,DEFAULT)	|	VoC_add16_rd(REG6,REG6,0x4276)(hi)
0xF9F7C18F,	//0x07e8		VoC_shru16_ri(REG7,0xfffffffe,DEFAULT)	|	VoC_add16_rr(REG7,REG6,REG1,DEFAULT)
0x428D2807,	//0x07ea		VoC_and16_rd(REG7,0x428d)
0xDF81E106,	//0x07ec		VoC_pop16(REG1,DEFAULT)	|	VoC_movreg16(REG6,ACC0_LO,DEFAULT)
0xFFC0E47E,	//0x07ee		VoC_NOP	|	VoC_or16_rr(REG6,REG7,DEFAULT)
0x000C0A87,	//0x07f0		VoC_lw16i(REG7,0xc)
0xDC86C279,	//0x07f2		VoC_sw16inc_p(REG6,REG0,DEFAULT)	|	VoC_sub16_rr(REG1,REG1,REG7,DEFAULT)
0xDF86FFC0,	//0x07f4		VoC_pop16(REG6,DEFAULT)	|	VoC_NOP
0x42860736,	//0x07f6		VoC_add16_rd(REG6,REG6,0x4286)
0x42894426,	//0x07f8		VoC_bne16_rd(CS_dec_mb_inter1v_lowres_8_to_4_2,REG6,0x4289)
0x42890700,	//0x07fa		VoC_add16_rd(REG0,REG0,0x4289)
		//0x07fc		CS_dec_mb_inter1v_lowres_8_to_4_2
		//0x07fc		VoC_endloop1
0x428A0700,	//0x07fc		VoC_add16_rd(REG0,REG0,0x428a)
0x42880709,	//0x07fe		VoC_add16_rd(REG1,REG1,0x4288)
		//0x0800		VoC_endloop0
0x428B0780,	//0x0800		VoC_sub16_rd(REG0,REG0,0x428b)
		//0x0802		CS_put_h263_chroma_mc8_8_c_end
0xFFC0DFA9,	//0x0802		VoC_NOP	|	VoC_pop16(RA,DEFAULT)
0xDFE9E580,	//0x0804		VoC_push16(RA,DEFAULT)	|	VoC_return
		//0x0805		CS_put_h263_chroma_mc4_8_c
0x42891400,	//0x0806		VoC_lw16_d(REG0,0x4289)
0xC23A4231,	//0x0808		VoC_sub16_rr(REG2,REG0,REG7,IN_PARALLEL)	|	VoC_sub16_rr(REG1,REG0,REG6,DEFAULT)
0xC5BD447C,	//0x080a		VoC_mult16_rr(REG5,REG6,REG7,IN_PARALLEL)	|	VoC_mult16_rr(REG4,REG1,REG7,DEFAULT)
0xC48A4593,	//0x080c		VoC_mult16_rr(REG2,REG2,REG1,IN_PARALLEL)	|	VoC_mult16_rr(REG3,REG6,REG2,DEFAULT)
0xF0046140,	//0x080e		VoC_lw16i_short(INC0,0x1,IN_PARALLEL)	|	VoC_movreg16(REG0,ACC1_LO,DEFAULT)
0xF00561C1,	//0x0810		VoC_lw16i_short(INC1,0x1,IN_PARALLEL)	|	VoC_movreg16(REG1,RL7_LO,DEFAULT)
0xC071E166,	//0x0812		VoC_add16_rr(REG1,REG1,REG6,DEFAULT)	|	VoC_movreg16(REG6,ACC1_HI,DEFAULT)
0x08843105,	//0x0814		VoC_bgtz16_r(CS_dec_mb_inter4v_lowres_1_D_1,REG5)
0x3104C0E3,	//0x0816		VoC_bgtz16_r(CS_dec_mb_inter4v_lowres_1_C_1,REG4)(lo)	|	VoC_add16_rr(REG3,REG3,REG4,DEFAULT)
0x2C080848,	//0x0818		VoC_loop_i(0x0,0x4)(lo)	|	VoC_bgtz16_r(CS_dec_mb_inter4v_lowres_1_C_1,REG4)(hi)
0xD8960845,	//0x081a		VoC_lw16inc_p(REG6,REG1,DEFAULT)	|	VoC_loop_i(0x0,0x4)(hi)
0xC4B6D897,	//0x081c		VoC_mult16_rr(REG6,REG2,REG6,DEFAULT)	|	VoC_lw16inc_p(REG7,REG1,DEFAULT)
0x0736C4FC,	//0x081e		VoC_add16_rd(REG6,REG6,0x427e)(lo)	|	VoC_mult16_rr(REG4,REG3,REG7,DEFAULT)
0xC134427E,	//0x0820		VoC_add16_rr(REG4,REG4,REG6,DEFAULT)	|	VoC_add16_rd(REG6,REG6,0x427e)(hi)
0x2804F834,	//0x0822		VoC_and16_rd(REG4,0x428c)(lo)	|	VoC_shr16_ri(REG4,0x6,DEFAULT)
0xD896428C,	//0x0824		VoC_lw16inc_p(REG6,REG1,DEFAULT)	|	VoC_and16_rd(REG4,0x428c)(hi)
0xC4F5C4BF,	//0x0826		VoC_mult16_rr(REG5,REG3,REG6,DEFAULT)	|	VoC_mult16_rr(REG7,REG2,REG7,DEFAULT)
0x427E073F,	//0x0828		VoC_add16_rd(REG7,REG7,0x427e)
0xF9F5C17D,	//0x082a		VoC_shru16_ri(REG5,0xfffffffe,DEFAULT)	|	VoC_add16_rr(REG5,REG5,REG7,DEFAULT)
0x428D2805,	//0x082c		VoC_and16_rd(REG5,0x428d)
0xD897E46C,	//0x082e		VoC_lw16inc_p(REG7,REG1,DEFAULT)	|	VoC_or16_rr(REG4,REG5,DEFAULT)
0xC4B6DC84,	//0x0830		VoC_mult16_rr(REG6,REG2,REG6,DEFAULT)	|	VoC_sw16inc_p(REG4,REG0,DEFAULT)
0x0736C4FC,	//0x0832		VoC_add16_rd(REG6,REG6,0x427e)(lo)	|	VoC_mult16_rr(REG4,REG3,REG7,DEFAULT)
0xC134427E,	//0x0834		VoC_add16_rr(REG4,REG4,REG6,DEFAULT)	|	VoC_add16_rd(REG6,REG6,0x427e)(hi)
0x2804F934,	//0x0836		VoC_and16_rd(REG4,0x428c)(lo)	|	VoC_shru16_ri(REG4,0x6,DEFAULT)
0xD816428C,	//0x0838		VoC_lw16_p(REG6,REG1,DEFAULT)	|	VoC_and16_rd(REG4,0x428c)(hi)
0xC4F5C4BF,	//0x083a		VoC_mult16_rr(REG5,REG3,REG6,DEFAULT)	|	VoC_mult16_rr(REG7,REG2,REG7,DEFAULT)
0x427E073F,	//0x083c		VoC_add16_rd(REG7,REG7,0x427e)
0xF9F5C17D,	//0x083e		VoC_shru16_ri(REG5,0xfffffffe,DEFAULT)	|	VoC_add16_rr(REG5,REG5,REG7,DEFAULT)
0x428D2805,	//0x0840		VoC_and16_rd(REG5,0x428d)
0x0709E46C,	//0x0842		VoC_add16_rd(REG1,REG1,0x4288)(lo)	|	VoC_or16_rr(REG4,REG5,DEFAULT)
0xDC844288,	//0x0844		VoC_sw16inc_p(REG4,REG0,DEFAULT)	|	VoC_add16_rd(REG1,REG1,0x4288)(hi)
		//0x0845		VoC_endloop0
0x08E52B00,	//0x0846		VoC_jump_lg(CS_put_h263_chroma_mc4_8_c_end)
		//0x0848		CS_dec_mb_inter4v_lowres_1_C_1
0x08812C08,	//0x0848		VoC_loop_i(0x0,0x4)
0xD899D896,	//0x084a		VoC_lw16inc_p(ACC0_HI,REG1,DEFAULT)	|	VoC_lw16inc_p(REG6,REG1,DEFAULT)
0xD89BD89A,	//0x084c		VoC_lw16inc_p(ACC1_HI,REG1,DEFAULT)	|	VoC_lw16inc_p(ACC1_LO,REG1,DEFAULT)
0x42880709,	//0x084e		VoC_add16_rd(REG1,REG1,0x4288)
0xD897FFC0,	//0x0850		VoC_lw16inc_p(REG7,REG1,DEFAULT)	|	VoC_NOP
0xD89ED89D,	//0x0852		VoC_lw16inc_p(RL7_LO,REG1,DEFAULT)	|	VoC_lw16inc_p(RL6_HI,REG1,DEFAULT)
0x0789D89F,	//0x0854		VoC_sub16_rd(REG1,REG1,0x4288)(lo)	|	VoC_lw16inc_p(RL7_HI,REG1,DEFAULT)
0xC4B64288,	//0x0856		VoC_mult16_rr(REG6,REG2,REG6,DEFAULT)	|	VoC_sub16_rd(REG1,REG1,0x4288)(hi)
0x0736C4FC,	//0x0858		VoC_add16_rd(REG6,REG6,0x427e)(lo)	|	VoC_mult16_rr(REG4,REG3,REG7,DEFAULT)
0xC134427E,	//0x085a		VoC_add16_rr(REG4,REG4,REG6,DEFAULT)	|	VoC_add16_rd(REG6,REG6,0x427e)(hi)
0x2804F934,	//0x085c		VoC_and16_rd(REG4,0x428c)(lo)	|	VoC_shru16_ri(REG4,0x6,DEFAULT)
0x6126428C,	//0x085e		VoC_movreg16(REG6,ACC0_HI,DEFAULT)	|	VoC_and16_rd(REG4,0x428c)(hi)
0xC4B6F7A7,	//0x0860		VoC_mult16_rr(REG6,REG2,REG6,DEFAULT)	|	VoC_movreg16(REG7,RL6_HI,IN_PARALLEL)
0x0736C4FD,	//0x0862		VoC_add16_rd(REG6,REG6,0x427e)(lo)	|	VoC_mult16_rr(REG5,REG3,REG7,DEFAULT)
0xC175427E,	//0x0864		VoC_add16_rr(REG5,REG5,REG6,DEFAULT)	|	VoC_add16_rd(REG6,REG6,0x427e)(hi)
0x2805F9F5,	//0x0866		VoC_and16_rd(REG5,0x428d)(lo)	|	VoC_shru16_ri(REG5,0xfffffffe,DEFAULT)
0xE46C428D,	//0x0868		VoC_or16_rr(REG4,REG5,DEFAULT)	|	VoC_and16_rd(REG5,0x428d)(hi)
0xF7C76146,	//0x086a		VoC_movreg16(REG7,RL7_LO,IN_PARALLEL)	|	VoC_movreg16(REG6,ACC1_LO,DEFAULT)
0xC4B6DC84,	//0x086c		VoC_mult16_rr(REG6,REG2,REG6,DEFAULT)	|	VoC_sw16inc_p(REG4,REG0,DEFAULT)
0x0736C4FC,	//0x086e		VoC_add16_rd(REG6,REG6,0x427e)(lo)	|	VoC_mult16_rr(REG4,REG3,REG7,DEFAULT)
0xC134427E,	//0x0870		VoC_add16_rr(REG4,REG4,REG6,DEFAULT)	|	VoC_add16_rd(REG6,REG6,0x427e)(hi)
0x2804F934,	//0x0872		VoC_and16_rd(REG4,0x428c)(lo)	|	VoC_shru16_ri(REG4,0x6,DEFAULT)
0x6166428C,	//0x0874		VoC_movreg16(REG6,ACC1_HI,DEFAULT)	|	VoC_and16_rd(REG4,0x428c)(hi)
0xC4B6F7E7,	//0x0876		VoC_mult16_rr(REG6,REG2,REG6,DEFAULT)	|	VoC_movreg16(REG7,RL7_HI,IN_PARALLEL)
0x0736C4FD,	//0x0878		VoC_add16_rd(REG6,REG6,0x427e)(lo)	|	VoC_mult16_rr(REG5,REG3,REG7,DEFAULT)
0xC175427E,	//0x087a		VoC_add16_rr(REG5,REG5,REG6,DEFAULT)	|	VoC_add16_rd(REG6,REG6,0x427e)(hi)
0x2805F9F5,	//0x087c		VoC_and16_rd(REG5,0x428d)(lo)	|	VoC_shru16_ri(REG5,0xfffffffe,DEFAULT)
0xE46C428D,	//0x087e		VoC_or16_rr(REG4,REG5,DEFAULT)	|	VoC_and16_rd(REG5,0x428d)(hi)
0xDC84FFC0,	//0x0880		VoC_sw16inc_p(REG4,REG0,DEFAULT)	|	VoC_NOP
		//0x0881		VoC_endloop0
0x08E52B00,	//0x0882		VoC_jump_lg(CS_put_h263_chroma_mc4_8_c_end)
		//0x0884		CS_dec_mb_inter4v_lowres_1_D_1
0x08E42C08,	//0x0884		VoC_loop_i(0x0,0x4)
0xD899D898,	//0x0886		VoC_lw16inc_p(ACC0_HI,REG1,DEFAULT)	|	VoC_lw16inc_p(ACC0_LO,REG1,DEFAULT)
0xD89BD89A,	//0x0888		VoC_lw16inc_p(ACC1_HI,REG1,DEFAULT)	|	VoC_lw16inc_p(ACC1_LO,REG1,DEFAULT)
0x0709D816,	//0x088a		VoC_add16_rd(REG1,REG1,0x4288)(lo)	|	VoC_lw16_p(REG6,REG1,DEFAULT)
0xFFC04288,	//0x088c		VoC_NOP	|	VoC_add16_rd(REG1,REG1,0x4288)(hi)
0xD89DD89C,	//0x088e		VoC_lw16inc_p(RL6_HI,REG1,DEFAULT)	|	VoC_lw16inc_p(RL6_LO,REG1,DEFAULT)
0xD89FD89E,	//0x0890		VoC_lw16inc_p(RL7_HI,REG1,DEFAULT)	|	VoC_lw16inc_p(RL7_LO,REG1,DEFAULT)
0xDFC1D817,	//0x0892		VoC_push16(REG1,DEFAULT)	|	VoC_lw16_p(REG7,REG1,DEFAULT)
0xDFC6DFC7,	//0x0894		VoC_push16(REG6,DEFAULT)	|	VoC_push16(REG7,DEFAULT)
0xF7066127,	//0x0896		VoC_movreg16(REG6,ACC0_LO,IN_PARALLEL)	|	VoC_movreg16(REG7,ACC0_HI,DEFAULT)
0xC4FFC4B6,	//0x0898		VoC_mult16_rr(REG7,REG3,REG7,DEFAULT)	|	VoC_mult16_rr(REG6,REG2,REG6,DEFAULT)
0xC1B9FFC0,	//0x089a		VoC_add16_rr(REG1,REG6,REG7,DEFAULT)	|	VoC_NOP
0xF7A76186,	//0x089c		VoC_movreg16(REG7,RL6_HI,IN_PARALLEL)	|	VoC_movreg16(REG6,RL6_LO,DEFAULT)
0xC57FC536,	//0x089e		VoC_mult16_rr(REG7,REG5,REG7,DEFAULT)	|	VoC_mult16_rr(REG6,REG4,REG6,DEFAULT)
0x427E0736,	//0x08a0		VoC_add16_rd(REG6,REG6,0x427e)
0xC18EC1BE,	//0x08a2		VoC_add16_rr(REG6,REG6,REG1,DEFAULT)	|	VoC_add16_rr(REG6,REG6,REG7,DEFAULT)
0x2806F936,	//0x08a4		VoC_and16_rd(REG6,0x428c)(lo)	|	VoC_shru16_ri(REG6,0x6,DEFAULT)
0xE0C8428C,	//0x08a6		VoC_movreg16(ACC0_LO,REG6,DEFAULT)	|	VoC_and16_rd(REG6,0x428c)(hi)
0xF7476126,	//0x08a8		VoC_movreg16(REG7,ACC1_LO,IN_PARALLEL)	|	VoC_movreg16(REG6,ACC0_HI,DEFAULT)
0xC4FFC4B6,	//0x08aa		VoC_mult16_rr(REG7,REG3,REG7,DEFAULT)	|	VoC_mult16_rr(REG6,REG2,REG6,DEFAULT)
0xC1B9FFC0,	//0x08ac		VoC_add16_rr(REG1,REG6,REG7,DEFAULT)	|	VoC_NOP
0xF7C761A6,	//0x08ae		VoC_movreg16(REG7,RL7_LO,IN_PARALLEL)	|	VoC_movreg16(REG6,RL6_HI,DEFAULT)
0xC57FC536,	//0x08b0		VoC_mult16_rr(REG7,REG5,REG7,DEFAULT)	|	VoC_mult16_rr(REG6,REG4,REG6,DEFAULT)
0x427E0736,	//0x08b2		VoC_add16_rd(REG6,REG6,0x427e)
0xC18FC1F6,	//0x08b4		VoC_add16_rr(REG7,REG6,REG1,DEFAULT)	|	VoC_add16_rr(REG6,REG7,REG6,DEFAULT)
0x2807F9F7,	//0x08b6		VoC_and16_rd(REG7,0x428d)(lo)	|	VoC_shru16_ri(REG7,0xfffffffe,DEFAULT)
0xE106428D,	//0x08b8		VoC_movreg16(REG6,ACC0_LO,DEFAULT)	|	VoC_and16_rd(REG7,0x428d)(hi)
0xE167E47E,	//0x08ba		VoC_movreg16(REG7,ACC1_HI,DEFAULT)	|	VoC_or16_rr(REG6,REG7,DEFAULT)
0xE146DC86,	//0x08bc		VoC_movreg16(REG6,ACC1_LO,DEFAULT)	|	VoC_sw16inc_p(REG6,REG0,DEFAULT)
0xC4FFC4B6,	//0x08be		VoC_mult16_rr(REG7,REG3,REG7,DEFAULT)	|	VoC_mult16_rr(REG6,REG2,REG6,DEFAULT)
0xC1B9FFC0,	//0x08c0		VoC_add16_rr(REG1,REG6,REG7,DEFAULT)	|	VoC_NOP
0xF7E761C6,	//0x08c2		VoC_movreg16(REG7,RL7_HI,IN_PARALLEL)	|	VoC_movreg16(REG6,RL7_LO,DEFAULT)
0xC57FC536,	//0x08c4		VoC_mult16_rr(REG7,REG5,REG7,DEFAULT)	|	VoC_mult16_rr(REG6,REG4,REG6,DEFAULT)
0x427E0736,	//0x08c6		VoC_add16_rd(REG6,REG6,0x427e)
0xC1BEC18E,	//0x08c8		VoC_add16_rr(REG6,REG6,REG7,DEFAULT)	|	VoC_add16_rr(REG6,REG6,REG1,DEFAULT)
0x2806F936,	//0x08ca		VoC_and16_rd(REG6,0x428c)(lo)	|	VoC_shru16_ri(REG6,0x6,DEFAULT)
0x60C8428C,	//0x08cc		VoC_movreg16(ACC0_LO,REG6,DEFAULT)	|	VoC_and16_rd(REG6,0x428c)(hi)
0xDF86F767,	//0x08ce		VoC_pop16(REG6,DEFAULT)	|	VoC_movreg16(REG7,ACC1_HI,IN_PARALLEL)
0xC4F6C4BF,	//0x08d0		VoC_mult16_rr(REG6,REG3,REG6,DEFAULT)	|	VoC_mult16_rr(REG7,REG2,REG7,DEFAULT)
0xC1B9FFC0,	//0x08d2		VoC_add16_rr(REG1,REG6,REG7,DEFAULT)	|	VoC_NOP
0xDF87E1E6,	//0x08d4		VoC_pop16(REG7,DEFAULT)	|	VoC_movreg16(REG6,RL7_HI,DEFAULT)
0xC57FC536,	//0x08d6		VoC_mult16_rr(REG7,REG5,REG7,DEFAULT)	|	VoC_mult16_rr(REG6,REG4,REG6,DEFAULT)
0x427E0736,	//0x08d8		VoC_add16_rd(REG6,REG6,0x427e)
0xC18FC1F6,	//0x08da		VoC_add16_rr(REG7,REG6,REG1,DEFAULT)	|	VoC_add16_rr(REG6,REG7,REG6,DEFAULT)
0x2807F9F7,	//0x08dc		VoC_and16_rd(REG7,0x428d)(lo)	|	VoC_shru16_ri(REG7,0xfffffffe,DEFAULT)
0xE106428D,	//0x08de		VoC_movreg16(REG6,ACC0_LO,DEFAULT)	|	VoC_and16_rd(REG7,0x428d)(hi)
0xE47EDF81,	//0x08e0		VoC_or16_rr(REG6,REG7,DEFAULT)	|	VoC_pop16(REG1,DEFAULT)
0x42880789,	//0x08e2		VoC_sub16_rd(REG1,REG1,0x4288)
		//0x08e4		VoC_endloop0
0xDFA9DC86,	//0x08e4		VoC_pop16(RA,DEFAULT)	|	VoC_sw16inc_p(REG6,REG0,DEFAULT)
		//0x08e5		CS_put_h263_chroma_mc4_8_c_end
0xE580FFC0,	//0x08e6		VoC_return	|	VoC_NOP
		//0x08e8		CS_h263_add_pixels_clamped4_c
0x00FF0A87,	//0x08e8		VoC_lw16i(REG7,0xff)
0x08FF2C09,	//0x08ea		VoC_loop_i(0x1,0x4)
0xD804E852,	//0x08ec		VoC_lw16_p(REG4,REG0,DEFAULT)	|	VoC_loop_i_short(0x2,DEFAULT)
0xF9446085,	//0x08ee		VoC_shru16_ri(REG4,0x8,IN_PARALLEL)	|	VoC_movreg16(REG5,REG4,DEFAULT)
0x00FF1605,	//0x08f0		VoC_and16_ri(REG5,0xff)
0x030C834D,	//0x08f2		VoC_add16inc_rp(REG4,REG4,REG1,DEFAULT)	|	VoC_add16inc_rp(REG5,REG5,REG1,DEFAULT)
0x1605DEFD,	//0x08f4		VoC_and16_ri(REG5,0xff)(lo)	|	VoC_clipu16_rr(REG5,REG7,IN_PARALLEL)
0x702600FF,	//0x08f6		VoC_lw16i_short(REG6,0x1,DEFAULT)	|	VoC_and16_ri(REG5,0xff)(hi)
0x1604DEFC,	//0x08f8		VoC_and16_ri(REG4,0xff)(lo)	|	VoC_clipu16_rr(REG4,REG7,IN_PARALLEL)
0xF9C400FF,	//0x08fa		VoC_shru16_ri(REG4,0xfffffff8,DEFAULT)	|	VoC_and16_ri(REG4,0xff)(hi)
0xFFC0E46C,	//0x08fc		VoC_NOP	|	VoC_or16_rr(REG4,REG5,DEFAULT)
		//0x08fe		VoC_endloop0
0x0709DC84,	//0x08fe		VoC_add16_rd(REG1,REG1,0x4288)(lo)	|	VoC_sw16inc_p(REG4,REG0,DEFAULT)
		//0x08ff		VoC_endloop1
0xE5804288,	//0x0900		VoC_return	|	VoC_add16_rd(REG1,REG1,0x4288)(hi)
		//0x0902		CS_reconstruct
0x1400DFE9,	//0x0902		VoC_lw16_d(REG0,0xc52)(lo)	|	VoC_push16(RA,DEFAULT)
0x31800C52,	//0x0904		VoC_bez16_r(CS_h263dec_mb_inter1v_lowres_0,REG0)(lo)	|	VoC_lw16_d(REG0,0xc52)(hi)
0x14810988,	//0x0906		VoC_lw32_d(REG23,0xc3a)(lo)	|	VoC_bez16_r(CS_h263dec_mb_inter1v_lowres_0,REG0)(hi)
0x781A0C3A,	//0x0908		VoC_shr16_ri(REG2,0x3,DEFAULT)	|	VoC_lw32_d(REG23,0xc3a)(hi)
0x1483F81B,	//0x090a		VoC_lw32_d(REG67,0xc4a)(lo)	|	VoC_shr16_ri(REG3,0x3,IN_PARALLEL)
0xFDE90C4A,	//0x090c		VoC_shru32_ri(REG23,0xfffffffd,DEFAULT)	|	VoC_lw32_d(REG67,0xc4a)(hi)
0xF8177816,	//0x090e		VoC_shr16_ri(REG7,0x2,IN_PARALLEL)	|	VoC_shr16_ri(REG6,0x2,DEFAULT)
0xC0FB40B2,	//0x0910		VoC_add16_rr(REG3,REG3,REG7,IN_PARALLEL)	|	VoC_add16_rr(REG2,REG2,REG6,DEFAULT)
0x0C4A1483,	//0x0912		VoC_lw32_d(REG67,0xc4a)
0xF80B780A,	//0x0914		VoC_shr16_ri(REG3,0x1,IN_PARALLEL)	|	VoC_shr16_ri(REG2,0x1,DEFAULT)
0x1400FF1A,	//0x0916		VoC_lw16_d(REG0,0x6ce)(lo)	|	VoC_movreg32(REG45,REG67,DEFAULT)
0x780C06CE,	//0x0918		VoC_shr16_ri(REG4,0x1,DEFAULT)	|	VoC_lw16_d(REG0,0x6ce)(hi)
0x1606F80D,	//0x091a		VoC_and16_ri(REG6,0x1)(lo)	|	VoC_shr16_ri(REG5,0x1,IN_PARALLEL)
0x16070001,	//0x091c		VoC_and16_ri(REG7,0x1)(lo)	|	VoC_and16_ri(REG6,0x1)(hi)
0x16040001,	//0x091e		VoC_and16_ri(REG4,0x3)(lo)	|	VoC_and16_ri(REG7,0x1)(hi)
0x16050003,	//0x0920		VoC_and16_ri(REG5,0x3)(lo)	|	VoC_and16_ri(REG4,0x3)(hi)
0xF8100003,	//0x0922		VoC_shr16_ri(REG0,0x2,DEFAULT)	|	VoC_and16_ri(REG5,0x3)(hi)
0xCC1AE513,	//0x0924		VoC_multf32_rr(REG45,REG0,REG3,DEFAULT)	|	VoC_or32_rr(REG67,REG45,DEFAULT)
0xFA81E043,	//0x0926		VoC_shr32_ri(REG23,0x10,DEFAULT)	|	VoC_movreg16(REG3,REG2,DEFAULT)
0x020A1484,	//0x0928		VoC_lw32_d(ACC0,0x20a)
0xFBFBC88A,	//0x092a		VoC_shr32_ri(REG67,0xffffffff,DEFAULT)	|	VoC_add32_rr(REG45,REG45,REG23,DEFAULT)
0xC8A2FF17,	//0x092c		VoC_add32_rr(REG45,REG45,ACC0,DEFAULT)	|	VoC_movreg32(RL7,REG45,DEFAULT)
0xDF42FF14,	//0x092e		VoC_push32(REG45,DEFAULT)	|	VoC_movreg32(ACC0,REG45,DEFAULT)
0xDF43DF47,	//0x0930		VoC_push32(REG67,DEFAULT)	|	VoC_push32(RL7,DEFAULT)
0x06CE1400,	//0x0932		VoC_lw16_d(REG0,0x6ce)
0xE0517820,	//0x0934		VoC_lw16i_short(REG1,0x5,IN_PARALLEL)	|	VoC_shr16_ri(REG0,0x4,DEFAULT)
0x03A80A82,	//0x0936		VoC_lw16i(REG2,0x3a8)
0xFF46F043,	//0x0938		VoC_lw32z(RL6,DEFAULT)	|	VoC_lw16i_short(REG3,0x2,DEFAULT)
0x10000A8D,	//0x093a		VoC_lw16i(RL6_HI,0x1000)
0xFFC04218,	//0x093c		VoC_NAD(IN_PARALLEL)	|	VoC_sub16_rr(REG0,REG0,REG3,DEFAULT)
0x03FB2B80,	//0x093e		VoC_jal(H263_2DDma_IN)
0x0C53140B,	//0x0940		VoC_lw16_d(ACC1_HI,0xc53)
0x45A21406,	//0x0942		VoC_lw16_d(REG6,0x45a2)
0x45A31407,	//0x0944		VoC_lw16_d(REG7,0x45a3)
0x09300A8A,	//0x0946		VoC_lw16i(ACC1_LO,0x930)
0x06E12B80,	//0x0948		VoC_jal(CS_put_h263_chroma_mc8_8_c)
0xDF07DF03,	//0x094a		VoC_pop32(RL7,DEFAULT)	|	VoC_pop32(REG67,DEFAULT)
0x1506DF02,	//0x094c		VoC_sw16_d(REG6,0x45a2)(lo)	|	VoC_pop32(REG45,DEFAULT)
0x150745A2,	//0x094e		VoC_sw16_d(REG7,0x45a3)(lo)	|	VoC_sw16_d(REG6,0x45a2)(hi)
0x298245A3,	//0x0950		VoC_and32_rd(REG45,0x4284)(lo)	|	VoC_sw16_d(REG7,0x45a3)(hi)
0xE08B4284,	//0x0952		VoC_movreg16(ACC1_HI,REG4,DEFAULT)	|	VoC_and32_rd(REG45,0x4284)(hi)
0x1484FF3A,	//0x0954		VoC_lw32_d(ACC0,0x20c)(lo)	|	VoC_movreg32(REG45,RL7,DEFAULT)
0xC8A2020C,	//0x0956		VoC_add32_rr(REG45,REG45,ACC0,DEFAULT)	|	VoC_lw32_d(ACC0,0x20c)(hi)
0xDF42FF14,	//0x0958		VoC_push32(REG45,DEFAULT)	|	VoC_movreg32(ACC0,REG45,DEFAULT)
0x04132B80,	//0x095a		VoC_jal(H263_Dma_Last_Cmd_Wait)
0x06CE1400,	//0x095c		VoC_lw16_d(REG0,0x6ce)
0xE0517820,	//0x095e		VoC_lw16i_short(REG1,0x5,IN_PARALLEL)	|	VoC_shr16_ri(REG0,0x4,DEFAULT)
0x036C0A82,	//0x0960		VoC_lw16i(REG2,0x36c)
0xFF46F043,	//0x0962		VoC_lw32z(RL6,DEFAULT)	|	VoC_lw16i_short(REG3,0x2,DEFAULT)
0x10000A8D,	//0x0964		VoC_lw16i(RL6_HI,0x1000)
0xFFC04218,	//0x0966		VoC_NAD(IN_PARALLEL)	|	VoC_sub16_rr(REG0,REG0,REG3,DEFAULT)
0x03FB2B80,	//0x0968		VoC_jal(H263_2DDma_IN)
0x45A21406,	//0x096a		VoC_lw16_d(REG6,0x45a2)
0x45A31407,	//0x096c		VoC_lw16_d(REG7,0x45a3)
0x09500A8A,	//0x096e		VoC_lw16i(ACC1_LO,0x950)
0x07500A8E,	//0x0970		VoC_lw16i(RL7_LO,0x750)
0x08052B80,	//0x0972		VoC_jal(CS_put_h263_chroma_mc4_8_c)
0xFFC05F02,	//0x0974		VoC_NAD(IN_PARALLEL)	|	VoC_pop32(REG45,DEFAULT)
0x04132B80,	//0x0976		VoC_jal(H263_Dma_Last_Cmd_Wait)
0x45A21406,	//0x0978		VoC_lw16_d(REG6,0x45a2)
0x45A31407,	//0x097a		VoC_lw16_d(REG7,0x45a3)
0x42842982,	//0x097c		VoC_and32_rd(REG45,0x4284)
0x0A8AE08B,	//0x097e		VoC_lw16i(ACC1_LO,0x958)(lo)	|	VoC_movreg16(ACC1_HI,REG4,DEFAULT)
0x0A8E0958,	//0x0980		VoC_lw16i(RL7_LO,0x6d8)(lo)	|	VoC_lw16i(ACC1_LO,0x958)(hi)
0xFFC006D8,	//0x0982		VoC_NAD	|	VoC_lw16i(RL7_LO,0x6d8)(hi)
0x08052B80,	//0x0984		VoC_jal(CS_put_h263_chroma_mc4_8_c)
0x0A0A2B00,	//0x0986		VoC_jump_lg(CS_h263dec_mb_inter1v_lowres_0_end)
		//0x0988		CS_h263dec_mb_inter1v_lowres_0
0x0C4A1483,	//0x0988		VoC_lw32_d(REG67,0xc4a)
0xE0337062,	//0x098a		VoC_lw16i_short(REG3,0x3,IN_PARALLEL)	|	VoC_lw16i_short(REG2,0x3,DEFAULT)
0x7808FF18,	//0x098c		VoC_shr16_ri(REG0,0x1,DEFAULT)	|	VoC_movreg32(REG01,REG67,DEFAULT)
0x64D9F809,	//0x098e		VoC_and32_rr(REG23,REG67,DEFAULT)	|	VoC_shr16_ri(REG1,0x1,IN_PARALLEL)
0x3594E014,	//0x0990		VoC_bne16_rr(H263_reconstruct_dxand3_ne_1,REG2,REG4)(lo)	|	VoC_lw16i_short(REG4,0x1,IN_PARALLEL)
0xC0200994,	//0x0992		VoC_add16_rr(REG0,REG0,REG4,DEFAULT)	|	VoC_bne16_rr(H263_reconstruct_dxand3_ne_1,REG2,REG4)(hi)
		//0x0994		H263_reconstruct_dxand3_ne_1
0x0997359C,	//0x0994		VoC_bne16_rr(H263_reconstruct_dyand3_ne_1,REG3,REG4)
0xFFC0C061,	//0x0996		VoC_NOP	|	VoC_add16_rr(REG1,REG1,REG4,DEFAULT)
		//0x0997		H263_reconstruct_dyand3_ne_1
0x1484FF03,	//0x0998		VoC_lw32_d(ACC0,0x45a6)(lo)	|	VoC_movreg32(REG67,REG01,DEFAULT)
0x148545A6,	//0x099a		VoC_lw32_d(ACC1,0x45a8)(lo)	|	VoC_lw32_d(ACC0,0x45a6)(hi)
0xFF1A45A8,	//0x099c		VoC_movreg32(REG45,REG67,DEFAULT)	|	VoC_lw32_d(ACC1,0x45a8)(hi)
0x00011606,	//0x099e		VoC_and16_ri(REG6,0x1)
0x00011607,	//0x09a0		VoC_and16_ri(REG7,0x1)
0xF80D78FE,	//0x09a2		VoC_shr16_ri(REG5,0x1,IN_PARALLEL)	|	VoC_shr16_ri(REG6,0xffffffff,DEFAULT)
0x06CE1400,	//0x09a4		VoC_lw16_d(REG0,0x6ce)
0xCD41F808,	//0x09a6		VoC_multf32_rr(REG23,REG5,REG0,DEFAULT)	|	VoC_shr16_ri(REG0,0x1,DEFAULT)
0x490CE47E,	//0x09a8		VoC_add32_rr(ACC0,ACC0,REG23,DEFAULT)	|	VoC_or16_rr(REG6,REG7,DEFAULT)
0xE085C94D,	//0x09aa		VoC_movreg16(REG5,REG4,DEFAULT)	|	VoC_add32_rr(ACC1,ACC1,REG23,IN_PARALLEL)
0xFA8A7000,	//0x09ac		VoC_shr32_ri(REG45,0x11,IN_PARALLEL)	|	VoC_lw16i_short(REG0,0x0,DEFAULT)
0xC9554914,	//0x09ae		VoC_add32_rr(ACC1,ACC1,REG45,IN_PARALLEL)	|	VoC_add32_rr(ACC0,ACC0,REG45,DEFAULT)
0x45AB1506,	//0x09b0		VoC_sw16_d(REG6,0x45ab)
0x45A61584,	//0x09b2		VoC_sw32_d(ACC0,0x45a6)
0x45A81585,	//0x09b4		VoC_sw32_d(ACC1,0x45a8)
0xFA14FF22,	//0x09b6		VoC_shr32_ri(ACC0,0x2,DEFAULT)	|	VoC_movreg32(REG45,ACC0,DEFAULT)
0xCAA2FBF4,	//0x09b8		VoC_sub32_rr(REG45,REG45,ACC0,DEFAULT)	|	VoC_shr32_ri(ACC0,0xfffffffe,DEFAULT)
0x3586E08E,	//0x09ba		VoC_bne16_rr(H263_DMA8X8_U_RL6_HI_1,REG0,REG6)(lo)	|	VoC_movreg16(RL7_LO,REG4,DEFAULT)
0xF02009C3,	//0x09bc		VoC_lw16i_short(REG0,0x1,DEFAULT)	|	VoC_bne16_rr(H263_DMA8X8_U_RL6_HI_1,REG0,REG6)(hi)
0x31C4E404,	//0x09be		VoC_bnez16_r(H263_DMA8X8_U_RL6_HI_1,REG4)(lo)	|	VoC_and16_rr(REG4,REG0,DEFAULT)
0xFF4609C3,	//0x09c0		VoC_lw32z(RL6,DEFAULT)	|	VoC_bnez16_r(H263_DMA8X8_U_RL6_HI_1,REG4)(hi)
0xF00CE5C4,	//0x09c2		VoC_lw16i_short(RL6_LO,0x0,DEFAULT)	|	VoC_jump(H263_interpolate8x8_U_DMA)
		//0x09c3		H263_DMA8X8_U_RL6_HI_1
0x10000A8D,	//0x09c4		VoC_lw16i(RL6_HI,0x1000)
		//0x09c6		H263_interpolate8x8_U_DMA
0x06CE1400,	//0x09c6		VoC_lw16_d(REG0,0x6ce)
0xE0917818,	//0x09c8		VoC_lw16i_short(REG1,0x9,IN_PARALLEL)	|	VoC_shr16_ri(REG0,0x3,DEFAULT)
0x04340A82,	//0x09ca		VoC_lw16i(REG2,0x434)
0xC218F063,	//0x09cc		VoC_sub16_rr(REG0,REG0,REG3,DEFAULT)	|	VoC_lw16i_short(REG3,0x3,DEFAULT)
0x03FB2B80,	//0x09ce		VoC_jal(H263_2DDma_IN)
0x05E92B80,	//0x09d0		VoC_jal(CS_H263interpolate16x16_switch)
0xFFC0E1C6,	//0x09d2		VoC_NOP	|	VoC_movreg16(REG6,RL7_LO,DEFAULT)
0x0C4C1506,	//0x09d4		VoC_sw16_d(REG6,0xc4c)
0x45A81484,	//0x09d6		VoC_lw32_d(ACC0,0x45a8)
0x45AB1406,	//0x09d8		VoC_lw16_d(REG6,0x45ab)
0xFA14FF22,	//0x09da		VoC_shr32_ri(ACC0,0x2,DEFAULT)	|	VoC_movreg32(REG45,ACC0,DEFAULT)
0xCAA2FBF4,	//0x09dc		VoC_sub32_rr(REG45,REG45,ACC0,DEFAULT)	|	VoC_shr32_ri(ACC0,0xfffffffe,DEFAULT)
0x1504F000,	//0x09de		VoC_sw16_d(REG4,0xc53)(lo)	|	VoC_lw16i_short(REG0,0x0,DEFAULT)
0x35860C53,	//0x09e0		VoC_bne16_rr(H263_DMA8X8_V_RL6_HI_1,REG0,REG6)(lo)	|	VoC_sw16_d(REG4,0xc53)(hi)
0xF02009E9,	//0x09e2		VoC_lw16i_short(REG0,0x1,DEFAULT)	|	VoC_bne16_rr(H263_DMA8X8_V_RL6_HI_1,REG0,REG6)(hi)
0x31C4E404,	//0x09e4		VoC_bnez16_r(H263_DMA8X8_V_RL6_HI_1,REG4)(lo)	|	VoC_and16_rr(REG4,REG0,DEFAULT)
0xFF4609E9,	//0x09e6		VoC_lw32z(RL6,DEFAULT)	|	VoC_bnez16_r(H263_DMA8X8_V_RL6_HI_1,REG4)(hi)
0xF00CE5C4,	//0x09e8		VoC_lw16i_short(RL6_LO,0x0,DEFAULT)	|	VoC_jump(H263_interpolate8x8_V_DMA)
		//0x09e9		H263_DMA8X8_V_RL6_HI_1
0x10000A8D,	//0x09ea		VoC_lw16i(RL6_HI,0x1000)
		//0x09ec		H263_interpolate8x8_V_DMA
0x06CE1400,	//0x09ec		VoC_lw16_d(REG0,0x6ce)
0xE0917818,	//0x09ee		VoC_lw16i_short(REG1,0x9,IN_PARALLEL)	|	VoC_shr16_ri(REG0,0x3,DEFAULT)
0x036C0A82,	//0x09f0		VoC_lw16i(REG2,0x36c)
0xC218F063,	//0x09f2		VoC_sub16_rr(REG0,REG0,REG3,DEFAULT)	|	VoC_lw16i_short(REG3,0x3,DEFAULT)
0x04132B80,	//0x09f4		VoC_jal(H263_Dma_Last_Cmd_Wait)
0x03FB2B80,	//0x09f6		VoC_jal(H263_2DDma_IN)
0x09B00A8E,	//0x09f8		VoC_lw16i(RL7_LO,0x9b0)
0x08680A8C,	//0x09fa		VoC_lw16i(RL6_LO,0x868)
0x06C52B80,	//0x09fc		VoC_jal(CS_H263interpolate8x8_switch)
0x0C531406,	//0x09fe		VoC_lw16_d(REG6,0xc53)
0x09D00A8E,	//0x0a00		VoC_lw16i(RL7_LO,0x9d0)
0x06D80A8C,	//0x0a02		VoC_lw16i(RL6_LO,0x6d8)
0x0C4C1506,	//0x0a04		VoC_sw16_d(REG6,0xc4c)
0x04132B80,	//0x0a06		VoC_jal(H263_Dma_Last_Cmd_Wait)
0x06C52B80,	//0x0a08		VoC_jal(CS_H263interpolate8x8_switch)
		//0x0a0a		CS_h263dec_mb_inter1v_lowres_0_end
0xFFC0DFA9,	//0x0a0a		VoC_NOP	|	VoC_pop16(RA,DEFAULT)
0xF051E580,	//0x0a0c		VoC_lw16i_short(INC1,0x2,DEFAULT)	|	VoC_return
		//0x0a0d		CS_H263_4X4_idct_row
0xD9C9DFC1,	//0x0a0e		VoC_lw32inc_p(REG23,REG1,DEFAULT)	|	VoC_push16(REG1,DEFAULT)
0x31C3D9CA,	//0x0a10		VoC_bnez16_r(idct4X4_row_1,REG3)(lo)	|	VoC_lw32inc_p(REG45,REG1,DEFAULT)
0x33420A24,	//0x0a12		VoC_bnez32_r(idct4X4_row_1,REG45)(lo)	|	VoC_bnez16_r(idct4X4_row_1,REG3)(hi)
0x31820A24,	//0x0a14		VoC_bez16_r(idct4X4_row_2,REG2)(lo)	|	VoC_bnez32_r(idct4X4_row_1,REG45)(hi)
0xF8F20A20,	//0x0a16		VoC_shr16_ri(REG2,0xfffffffe,DEFAULT)	|	VoC_bez16_r(idct4X4_row_2,REG2)(hi)
0xF6435F81,	//0x0a18		VoC_movreg16(REG3,REG2,IN_PARALLEL)	|	VoC_pop16(REG1,DEFAULT)
0xDDC9FFC0,	//0x0a1a		VoC_sw32inc_p(REG23,REG1,DEFAULT)	|	VoC_NOP
0x0709DDC9,	//0x0a1c		VoC_add16_rd(REG1,REG1,0x4275)(lo)	|	VoC_sw32inc_p(REG23,REG1,DEFAULT)
0xE5804275,	//0x0a1e		VoC_return	|	VoC_add16_rd(REG1,REG1,0x4275)(hi)
		//0x0a20		idct4X4_row_2
0x0709DF81,	//0x0a20		VoC_add16_rd(REG1,REG1,0x4289)(lo)	|	VoC_pop16(REG1,DEFAULT)
0xE5804289,	//0x0a22		VoC_return	|	VoC_add16_rd(REG1,REG1,0x4289)(hi)
		//0x0a24		idct4X4_row_1
0x0A603185,	//0x0a24		VoC_bez16_r(idct4X4_row_3,REG5)
0x0A483183,	//0x0a26		VoC_bez16_r(idct4X4_row_4,REG3)
0xDFC4C0EE,	//0x0a28		VoC_push16(REG4,DEFAULT)	|	VoC_add16_rr(REG6,REG3,REG5,DEFAULT)
0x11510A84,	//0x0a2a		VoC_lw16i(REG4,0x1151)
0xE385CDA3,	//0x0a2c		VoC_not16_r(REG5,DEFAULT)	|	VoC_multf32_rr(REG67,REG6,REG4,DEFAULT)
0x4286072D,	//0x0a2e		VoC_add16_rd(REG5,REG5,0x4286)
0x3B210A84,	//0x0a30		VoC_lw16i(REG4,0x3b21)
0x0A84CD66,	//0x0a32		VoC_lw16i(REG4,0x187e)(lo)	|	VoC_multf32_rr(RL6,REG5,REG4,DEFAULT)
0xCCE7187E,	//0x0a34		VoC_multf32_rr(RL7,REG3,REG4,DEFAULT)	|	VoC_lw16i(REG4,0x187e)(hi)
0x42A5DF84,	//0x0a36		VoC_sub16_rr(REG5,REG2,REG4,DEFAULT)	|	VoC_pop16(REG4,DEFAULT)
0x49DFC99E,	//0x0a38		VoC_add32_rr(RL7,RL7,REG67,DEFAULT)	|	VoC_add32_rr(RL6,RL6,REG67,IN_PARALLEL)
0x0A86C0A7,	//0x0a3a		VoC_lw16i(REG6,0x0)(lo)	|	VoC_add16_rr(REG7,REG2,REG4,IN_PARALLEL)
0xFA1B0000,	//0x0a3c		VoC_shr32_ri(REG67,0x3,DEFAULT)	|	VoC_lw16i(REG6,0x0)(hi)
0x00000A84,	//0x0a3e		VoC_lw16i(REG4,0x0)
0x48F9FA1A,	//0x0a40		VoC_add32_rr(REG23,REG67,RL7,DEFAULT)	|	VoC_shr32_ri(REG45,0x3,DEFAULT)
0x48B3CAFC,	//0x0a42		VoC_add32_rr(REG67,REG45,RL6,DEFAULT)	|	VoC_sub32_rr(ACC0,REG67,RL7,IN_PARALLEL)
0x2B00CAB7,	//0x0a44		VoC_jump_lg(idct4X4_row_5)(lo)	|	VoC_sub32_rr(RL7,REG45,RL6,IN_PARALLEL)
0xFFC00A82,	//0x0a46		VoC_NAD	|	VoC_jump_lg(idct4X4_row_5)(hi)
		//0x0a48		idct4X4_row_4
0x11510A87,	//0x0a48		VoC_lw16i(REG7,0x1151)
0xE385CD7F,	//0x0a4a		VoC_not16_r(REG5,DEFAULT)	|	VoC_multf32_rr(RL7,REG5,REG7,DEFAULT)
0x4286072D,	//0x0a4c		VoC_add16_rd(REG5,REG5,0x4286)
0x29CF0A87,	//0x0a4e		VoC_lw16i(REG7,0x29cf)
0xC0A7CD7E,	//0x0a50		VoC_add16_rr(REG7,REG2,REG4,DEFAULT)	|	VoC_multf32_rr(RL6,REG5,REG7,DEFAULT)
0x00000A86,	//0x0a52		VoC_lw16i(REG6,0x0)
0xC2A57A1B,	//0x0a54		VoC_sub16_rr(REG5,REG2,REG4,IN_PARALLEL)	|	VoC_shr32_ri(REG67,0x3,DEFAULT)
0x00000A84,	//0x0a56		VoC_lw16i(REG4,0x0)
0x48F9FA1A,	//0x0a58		VoC_add32_rr(REG23,REG67,RL7,DEFAULT)	|	VoC_shr32_ri(REG45,0x3,DEFAULT)
0x48B3CAFC,	//0x0a5a		VoC_add32_rr(REG67,REG45,RL6,DEFAULT)	|	VoC_sub32_rr(ACC0,REG67,RL7,IN_PARALLEL)
0x2B00CAB7,	//0x0a5c		VoC_jump_lg(idct4X4_row_5)(lo)	|	VoC_sub32_rr(RL7,REG45,RL6,IN_PARALLEL)
0xFFC00A82,	//0x0a5e		VoC_NAD	|	VoC_jump_lg(idct4X4_row_5)(hi)
		//0x0a60		idct4X4_row_3
0x0A753183,	//0x0a60		VoC_bez16_r(idct4X4_row_6,REG3)
0x11510A87,	//0x0a62		VoC_lw16i(REG7,0x1151)
0x29CF0A85,	//0x0a64		VoC_lw16i(REG5,0x29cf)
0xCCEF4CFE,	//0x0a66		VoC_multf32_rr(RL7,REG3,REG5,IN_PARALLEL)	|	VoC_multf32_rr(RL6,REG3,REG7,DEFAULT)
0x0A86C0A7,	//0x0a68		VoC_lw16i(REG6,0x0)(lo)	|	VoC_add16_rr(REG7,REG2,REG4,DEFAULT)
0x7A1B0000,	//0x0a6a		VoC_shr32_ri(REG67,0x3,DEFAULT)	|	VoC_lw16i(REG6,0x0)(hi)
0x0A84C2A5,	//0x0a6c		VoC_lw16i(REG4,0x0)(lo)	|	VoC_sub16_rr(REG5,REG2,REG4,IN_PARALLEL)
0xFA1A0000,	//0x0a6e		VoC_shr32_ri(REG45,0x3,DEFAULT)	|	VoC_lw16i(REG4,0x0)(hi)
0xCAFC48F9,	//0x0a70		VoC_sub32_rr(ACC0,REG67,RL7,IN_PARALLEL)	|	VoC_add32_rr(REG23,REG67,RL7,DEFAULT)
0xCAB748B3,	//0x0a72		VoC_sub32_rr(RL7,REG45,RL6,IN_PARALLEL)	|	VoC_add32_rr(REG67,REG45,RL6,DEFAULT)
0xC0A7E5CE,	//0x0a74		VoC_add16_rr(REG7,REG2,REG4,DEFAULT)	|	VoC_jump(idct4X4_row_5)
		//0x0a75		idct4X4_row_6
0x00000A86,	//0x0a76		VoC_lw16i(REG6,0x0)
0xC2A57A1B,	//0x0a78		VoC_sub16_rr(REG5,REG2,REG4,IN_PARALLEL)	|	VoC_shr32_ri(REG67,0x3,DEFAULT)
0x00000A84,	//0x0a7a		VoC_lw16i(REG4,0x0)
0x7F19FA1A,	//0x0a7c		VoC_movreg32(REG23,REG67,DEFAULT)	|	VoC_shr32_ri(REG45,0x3,DEFAULT)
0x7F13FF1C,	//0x0a7e		VoC_movreg32(REG67,REG45,DEFAULT)	|	VoC_movreg32(ACC0,REG67,IN_PARALLEL)
0xFFC0FF17,	//0x0a80		VoC_NAD	|	VoC_movreg32(RL7,REG45,IN_PARALLEL)
		//0x0a82		idct4X4_row_5
0x42800909,	//0x0a82		VoC_add32_rd(REG23,REG23,0x4280)
0x42800924,	//0x0a84		VoC_add32_rd(ACC0,ACC0,0x4280)
0xFA5C7A59,	//0x0a86		VoC_shr32_ri(ACC0,0xb,IN_PARALLEL)	|	VoC_shr32_ri(REG23,0xb,DEFAULT)
0x4280091B,	//0x0a88		VoC_add32_rd(REG67,REG67,0x4280)
0xF0057A5B,	//0x0a8a		VoC_lw16i_short(INC1,0x1,IN_PARALLEL)	|	VoC_shr32_ri(REG67,0xb,DEFAULT)
0x093FDF81,	//0x0a8c		VoC_add32_rd(RL7,RL7,0x4280)(lo)	|	VoC_pop16(REG1,DEFAULT)
0x7A5F4280,	//0x0a8e		VoC_shr32_ri(RL7,0xb,DEFAULT)	|	VoC_add32_rd(RL7,RL7,0x4280)(hi)
0xDC96DC92,	//0x0a90		VoC_sw16inc_p(REG6,REG1,DEFAULT)	|	VoC_sw16inc_p(REG2,REG1,IN_PARALLEL)
0xDC98DC9E,	//0x0a92		VoC_sw16inc_p(ACC0_LO,REG1,DEFAULT)	|	VoC_sw16inc_p(RL7_LO,REG1,DEFAULT)
0x42750709,	//0x0a94		VoC_add16_rd(REG1,REG1,0x4275)
0xDFC1E580,	//0x0a96		VoC_push16(REG1,DEFAULT)	|	VoC_return
		//0x0a97		CS_H263_4X4_idct_col
0xD893D892,	//0x0a98		VoC_lw16inc_p(REG3,REG1,DEFAULT)	|	VoC_lw16inc_p(REG2,REG1,DEFAULT)
0xD895D894,	//0x0a9a		VoC_lw16inc_p(REG5,REG1,DEFAULT)	|	VoC_lw16inc_p(REG4,REG1,DEFAULT)
0x3185FFC0,	//0x0a9c		VoC_bez16_r(idct4X4_col_3,REG5)(lo)	|	VoC_NOP
0x31830AD8,	//0x0a9e		VoC_bez16_r(idct4X4_col_4,REG3)(lo)	|	VoC_bez16_r(idct4X4_col_3,REG5)(hi)
0xDFC40AC0,	//0x0aa0		VoC_push16(REG4,DEFAULT)	|	VoC_bez16_r(idct4X4_col_4,REG3)(hi)
0x11510A84,	//0x0aa2		VoC_lw16i(REG4,0x1151)
0x6385C0EE,	//0x0aa4		VoC_not16_r(REG5,DEFAULT)	|	VoC_add16_rr(REG6,REG3,REG5,DEFAULT)
0x072DCDA3,	//0x0aa6		VoC_add16_rd(REG5,REG5,0x4286)(lo)	|	VoC_multf32_rr(REG67,REG6,REG4,IN_PARALLEL)
0x0A844286,	//0x0aa8		VoC_lw16i(REG4,0x3b21)(lo)	|	VoC_add16_rd(REG5,REG5,0x4286)(hi)
0xCD663B21,	//0x0aaa		VoC_multf32_rr(RL6,REG5,REG4,DEFAULT)	|	VoC_lw16i(REG4,0x3b21)(hi)
0x187E0A84,	//0x0aac		VoC_lw16i(REG4,0x187e)
0xDF84CCE7,	//0x0aae		VoC_pop16(REG4,DEFAULT)	|	VoC_multf32_rr(RL7,REG3,REG4,DEFAULT)
0xC99E42A5,	//0x0ab0		VoC_add32_rr(RL6,RL6,REG67,IN_PARALLEL)	|	VoC_sub16_rr(REG5,REG2,REG4,DEFAULT)
0xC0A749DF,	//0x0ab2		VoC_add16_rr(REG7,REG2,REG4,IN_PARALLEL)	|	VoC_add32_rr(RL7,RL7,REG67,DEFAULT)
0x00000A86,	//0x0ab4		VoC_lw16i(REG6,0x0)
0x0A84FA1B,	//0x0ab6		VoC_lw16i(REG4,0x0)(lo)	|	VoC_shr32_ri(REG67,0x3,DEFAULT)
0xFA1A0000,	//0x0ab8		VoC_shr32_ri(REG45,0x3,DEFAULT)	|	VoC_lw16i(REG4,0x0)(hi)
0xCAFC48F9,	//0x0aba		VoC_sub32_rr(ACC0,REG67,RL7,IN_PARALLEL)	|	VoC_add32_rr(REG23,REG67,RL7,DEFAULT)
0xCAB748B3,	//0x0abc		VoC_sub32_rr(RL7,REG45,RL6,IN_PARALLEL)	|	VoC_add32_rr(REG67,REG45,RL6,DEFAULT)
0x0AF92B00,	//0x0abe		VoC_jump_lg(idct4X4_col_5)
		//0x0ac0		idct4X4_col_4
0x11510A86,	//0x0ac0		VoC_lw16i(REG6,0x1151)
0xE385CD76,	//0x0ac2		VoC_not16_r(REG5,DEFAULT)	|	VoC_multf32_rr(RL6,REG5,REG6,DEFAULT)
0x29CF0A86,	//0x0ac4		VoC_lw16i(REG6,0x29cf)
0x4286072D,	//0x0ac6		VoC_add16_rd(REG5,REG5,0x4286)
0xC0A7CD77,	//0x0ac8		VoC_add16_rr(REG7,REG2,REG4,DEFAULT)	|	VoC_multf32_rr(RL7,REG5,REG6,DEFAULT)
0x00000A86,	//0x0aca		VoC_lw16i(REG6,0x0)
0xC2A57A1B,	//0x0acc		VoC_sub16_rr(REG5,REG2,REG4,IN_PARALLEL)	|	VoC_shr32_ri(REG67,0x3,DEFAULT)
0x00000A84,	//0x0ace		VoC_lw16i(REG4,0x0)
0x48F1FA1A,	//0x0ad0		VoC_add32_rr(REG23,REG67,RL6,DEFAULT)	|	VoC_shr32_ri(REG45,0x3,DEFAULT)
0x48BBCAF4,	//0x0ad2		VoC_add32_rr(REG67,REG45,RL7,DEFAULT)	|	VoC_sub32_rr(ACC0,REG67,RL6,IN_PARALLEL)
0x2B00CABF,	//0x0ad4		VoC_jump_lg(idct4X4_col_5)(lo)	|	VoC_sub32_rr(RL7,REG45,RL7,IN_PARALLEL)
0xFFC00AF9,	//0x0ad6		VoC_NAD	|	VoC_jump_lg(idct4X4_col_5)(hi)
		//0x0ad8		idct4X4_col_3
0x0AED3183,	//0x0ad8		VoC_bez16_r(idct4X4_col_6,REG3)
0x11510A86,	//0x0ada		VoC_lw16i(REG6,0x1151)
0x29CF0A87,	//0x0adc		VoC_lw16i(REG7,0x29cf)
0xCCFF4CF6,	//0x0ade		VoC_multf32_rr(RL7,REG3,REG7,IN_PARALLEL)	|	VoC_multf32_rr(RL6,REG3,REG6,DEFAULT)
0x0A86C0A7,	//0x0ae0		VoC_lw16i(REG6,0x0)(lo)	|	VoC_add16_rr(REG7,REG2,REG4,DEFAULT)
0x7A1B0000,	//0x0ae2		VoC_shr32_ri(REG67,0x3,DEFAULT)	|	VoC_lw16i(REG6,0x0)(hi)
0x0A84C2A5,	//0x0ae4		VoC_lw16i(REG4,0x0)(lo)	|	VoC_sub16_rr(REG5,REG2,REG4,IN_PARALLEL)
0xFA1A0000,	//0x0ae6		VoC_shr32_ri(REG45,0x3,DEFAULT)	|	VoC_lw16i(REG4,0x0)(hi)
0xCAFC48F9,	//0x0ae8		VoC_sub32_rr(ACC0,REG67,RL7,IN_PARALLEL)	|	VoC_add32_rr(REG23,REG67,RL7,DEFAULT)
0xCAB748B3,	//0x0aea		VoC_sub32_rr(RL7,REG45,RL6,IN_PARALLEL)	|	VoC_add32_rr(REG67,REG45,RL6,DEFAULT)
0xC0A7E5CD,	//0x0aec		VoC_add16_rr(REG7,REG2,REG4,DEFAULT)	|	VoC_jump(idct4X4_col_5)
		//0x0aed		idct4X4_col_6
0x00000A86,	//0x0aee		VoC_lw16i(REG6,0x0)
0xC2A57A1B,	//0x0af0		VoC_sub16_rr(REG5,REG2,REG4,IN_PARALLEL)	|	VoC_shr32_ri(REG67,0x3,DEFAULT)
0x00000A84,	//0x0af2		VoC_lw16i(REG4,0x0)
0x7F19FA1A,	//0x0af4		VoC_movreg32(REG23,REG67,DEFAULT)	|	VoC_shr32_ri(REG45,0x3,DEFAULT)
0x7F13FF1C,	//0x0af6		VoC_movreg32(REG67,REG45,DEFAULT)	|	VoC_movreg32(ACC0,REG67,IN_PARALLEL)
0xDF81FF17,	//0x0af8		VoC_pop16(REG1,DEFAULT)	|	VoC_movreg32(RL7,REG45,IN_PARALLEL)
		//0x0af9		idct4X4_col_5
0xF72561E4,	//0x0afa		VoC_movreg16(REG5,ACC0_HI,IN_PARALLEL)	|	VoC_movreg16(REG4,RL7_HI,DEFAULT)
0x4286070A,	//0x0afc		VoC_add16_rd(REG2,REG1,0x4286)
0xF8177813,	//0x0afe		VoC_shr16_ri(REG7,0x2,IN_PARALLEL)	|	VoC_shr16_ri(REG3,0x2,DEFAULT)
0xF8157814,	//0x0b00		VoC_shr16_ri(REG5,0x2,IN_PARALLEL)	|	VoC_shr16_ri(REG4,0x2,DEFAULT)
0xDC97DC93,	//0x0b02		VoC_sw16inc_p(REG7,REG1,DEFAULT)	|	VoC_sw16inc_p(REG3,REG1,DEFAULT)
0xDC95DC94,	//0x0b04		VoC_sw16inc_p(REG5,REG1,DEFAULT)	|	VoC_sw16inc_p(REG4,REG1,DEFAULT)
0xE580E041,	//0x0b06		VoC_return	|	VoC_movreg16(REG1,REG2,DEFAULT)
		//0x0b08		CS_idctrow
0xDFC1F051,	//0x0b08		VoC_push16(REG1,DEFAULT)	|	VoC_lw16i_short(INC1,0x2,DEFAULT)
0x59CAD9C9,	//0x0b0a		VoC_lw32inc_p(REG45,REG1,DEFAULT)	|	VoC_lw32inc_p(REG23,REG1,DEFAULT)
0x59CBFF46,	//0x0b0c		VoC_lw32inc_p(REG67,REG1,DEFAULT)	|	VoC_lw32z(RL6,IN_PARALLEL)
0x59CDFF44,	//0x0b0e		VoC_lw32inc_p(ACC1,REG1,DEFAULT)	|	VoC_lw32z(ACC0,IN_PARALLEL)
0x7A2EF6CD,	//0x0b10		VoC_shr32_ri(RL6,0x5,DEFAULT)	|	VoC_movreg16(RL6_HI,REG6,IN_PARALLEL)
0x31C3F649,	//0x0b12		VoC_bnez16_r(idctrow_100,REG3)(lo)	|	VoC_movreg16(ACC0_HI,REG2,IN_PARALLEL)
0x33420B23,	//0x0b14		VoC_bnez32_r(idctrow_100,REG45)(lo)	|	VoC_bnez16_r(idctrow_100,REG3)(hi)
0x33460B23,	//0x0b16		VoC_bnez32_r(idctrow_100,RL6)(lo)	|	VoC_bnez32_r(idctrow_100,REG45)(hi)
0x31C70B23,	//0x0b18		VoC_bnez16_r(idctrow_100,REG7)(lo)	|	VoC_bnez32_r(idctrow_100,RL6)(hi)
0x33450B23,	//0x0b1a		VoC_bnez32_r(idctrow_100,ACC1)(lo)	|	VoC_bnez16_r(idctrow_100,REG7)(hi)
0xF8EA0B23,	//0x0b1c		VoC_shr16_ri(REG2,0xfffffffd,DEFAULT)	|	VoC_bnez32_r(idctrow_100,ACC1)(hi)
0xF6435F81,	//0x0b1e		VoC_movreg16(REG3,REG2,IN_PARALLEL)	|	VoC_pop16(REG1,DEFAULT)
0xDDC9E881,	//0x0b20		VoC_sw32inc_p(REG23,REG1,DEFAULT)	|	VoC_loop_i_short(0x4,DEFAULT)
		//0x0b21		VoC_endloop0
0xFF28E580,	//0x0b22		VoC_movreg32(REG01,ACC1,DEFAULT)	|	VoC_return
		//0x0b23		idctrow_100
0xC1067A2C,	//0x0b24		VoC_add16_rr(REG6,REG4,REG0,IN_PARALLEL)	|	VoC_shr32_ri(ACC0,0x5,DEFAULT)
0x427A0924,	//0x0b26		VoC_add32_rd(ACC0,ACC0,0x427a)
0xCB374936,	//0x0b28		VoC_sub32_rr(RL7,ACC0,RL6,IN_PARALLEL)	|	VoC_add32_rr(RL6,ACC0,RL6,DEFAULT)
0x426B0A34,	//0x0b2a		VoC_multf32_rd(ACC0,REG6,0x426b)
0x426C0F00,	//0x0b2c		VoC_msu32_rd(REG0,0x426c)
0x7F25FF25,	//0x0b2e		VoC_movreg32(ACC1,ACC0,DEFAULT)	|	VoC_movreg32(ACC1,ACC0,DEFAULT)
0x0E20FF2C,	//0x0b30		VoC_mac32_rd(REG4,0x426d)(lo)	|	VoC_movreg32(ACC0,ACC1,IN_PARALLEL)
0x180A426D,	//0x0b32		VoC_lw16i_set_inc(REG2,0xc30,0x2)(lo)	|	VoC_mac32_rd(REG4,0x426d)(hi)
0x49A40C30,	//0x0b34		VoC_add32_rr(ACC0,RL6,ACC0,DEFAULT)	|	VoC_lw16i_set_inc(REG2,0xc30,0x2)(hi)
0x49EFCBA6,	//0x0b36		VoC_add32_rr(RL7,RL7,ACC1,DEFAULT)	|	VoC_sub32_rr(RL6,RL6,ACC0,IN_PARALLEL)
0x5DD4CBED,	//0x0b38		VoC_sw32inc_p(ACC0,REG2,DEFAULT)	|	VoC_sub32_rr(ACC1,RL7,ACC1,IN_PARALLEL)
0xDDD7C0CE,	//0x0b3a		VoC_sw32inc_p(RL7,REG2,DEFAULT)	|	VoC_add16_rr(REG6,REG3,REG1,IN_PARALLEL)
0x0A34DDD5,	//0x0b3c		VoC_multf32_rd(ACC0,REG6,0x426e)(lo)	|	VoC_sw32inc_p(ACC1,REG2,DEFAULT)
0x0E18426E,	//0x0b3e		VoC_mac32_rd(REG3,0x426f)(lo)	|	VoC_multf32_rd(ACC0,REG6,0x426e)(hi)
0x7F25426F,	//0x0b40		VoC_movreg32(ACC1,ACC0,DEFAULT)	|	VoC_mac32_rd(REG3,0x426f)(hi)
0x7F27C1EB,	//0x0b42		VoC_movreg32(RL7,ACC0,DEFAULT)	|	VoC_add16_rr(REG3,REG7,REG5,IN_PARALLEL)
0x0F08FF2C,	//0x0b44		VoC_msu32_rd(REG1,0x4270)(lo)	|	VoC_movreg32(ACC0,ACC1,IN_PARALLEL)
0x0A1C4270,	//0x0b46		VoC_multf32_rd(ACC0,REG3,0x4271)(lo)	|	VoC_msu32_rd(REG1,0x4270)(hi)
0x7F264271,	//0x0b48		VoC_movreg32(RL6,ACC0,DEFAULT)	|	VoC_multf32_rd(ACC0,REG3,0x4271)(hi)
0xFF25DDD6,	//0x0b4a		VoC_movreg32(ACC1,ACC0,DEFAULT)	|	VoC_sw32inc_p(RL6,REG2,IN_PARALLEL)
0x42720F38,	//0x0b4c		VoC_msu32_rd(REG7,0x4272)
0x4592180A,	//0x0b4e		VoC_lw16i_set_inc(REG2,0x4592,0x2)
0xFF2C7F23,	//0x0b50		VoC_movreg32(ACC0,ACC1,IN_PARALLEL)	|	VoC_movreg32(REG67,ACC0,DEFAULT)
0x42730F28,	//0x0b52		VoC_msu32_rd(REG5,0x4273)
0xCBDF49DB,	//0x0b54		VoC_sub32_rr(RL7,RL7,REG67,IN_PARALLEL)	|	VoC_add32_rr(REG67,RL7,REG67,DEFAULT)
0xCBA549A2,	//0x0b56		VoC_sub32_rr(ACC1,RL6,ACC0,IN_PARALLEL)	|	VoC_add32_rr(REG45,RL6,ACC0,DEFAULT)
0xCBED49E8,	//0x0b58		VoC_sub32_rr(ACC1,RL7,ACC1,IN_PARALLEL)	|	VoC_add32_rr(REG01,RL7,ACC1,DEFAULT)
0xFBF8F639,	//0x0b5a		VoC_shr32_ri(REG01,0xffffffff,DEFAULT)	|	VoC_lw16i_short(FORMAT32,0xfffffff1,DEFAULT)
0x42740A0C,	//0x0b5c		VoC_multf32_rd(ACC0,REG1,0x4274)
0xF4017908,	//0x0b5e		VoC_lw16i_short(FORMAT32,0x0,IN_PARALLEL)	|	VoC_shru16_ri(REG0,0x1,DEFAULT)
0x42740E00,	//0x0b60		VoC_mac32_rd(REG0,0x4274)
0xF5895DD3,	//0x0b62		VoC_lw16i_short(FORMAT32,0xfffffff1,IN_PARALLEL)	|	VoC_sw32inc_p(REG67,REG2,DEFAULT)
0x427A0923,	//0x0b64		VoC_add32_rd(REG67,ACC0,0x427a)
0xFF287A43,	//0x0b66		VoC_movreg32(REG01,ACC1,IN_PARALLEL)	|	VoC_shr32_ri(REG67,0x8,DEFAULT)
0x0A0CFBF8,	//0x0b68		VoC_multf32_rd(ACC0,REG1,0x4274)(lo)	|	VoC_shr32_ri(REG01,0xffffffff,DEFAULT)
0x79084274,	//0x0b6a		VoC_shru16_ri(REG0,0x1,DEFAULT)	|	VoC_multf32_rd(ACC0,REG1,0x4274)(hi)
0x0E00F401,	//0x0b6c		VoC_mac32_rd(REG0,0x4274)(lo)	|	VoC_lw16i_short(FORMAT32,0x0,IN_PARALLEL)
0x18084274,	//0x0b6e		VoC_lw16i_set_inc(REG0,0x4592,0x2)(lo)	|	VoC_mac32_rd(REG0,0x4274)(hi)
0x09274592,	//0x0b70		VoC_add32_rd(RL7,ACC0,0x427a)(lo)	|	VoC_lw16i_set_inc(REG0,0x4592,0x2)(hi)
0x7A47427A,	//0x0b72		VoC_shr32_ri(RL7,0x8,DEFAULT)	|	VoC_add32_rd(RL7,ACC0,0x427a)(hi)
0xDDD3E073,	//0x0b74		VoC_sw32inc_p(REG67,REG2,DEFAULT)	|	VoC_lw16i_short(REG3,0x7,IN_PARALLEL)
0x5DD7DF81,	//0x0b76		VoC_sw32inc_p(RL7,REG2,DEFAULT)	|	VoC_pop16(REG1,DEFAULT)
0x5DD2F005,	//0x0b78		VoC_sw32inc_p(REG45,REG2,DEFAULT)	|	VoC_lw16i_short(INC1,0x1,IN_PARALLEL)
0x180AC05B,	//0x0b7a		VoC_lw16i_set_inc(REG2,0xc30,0x2)(lo)	|	VoC_add16_rr(REG3,REG1,REG3,IN_PARALLEL)
0xD9C30C30,	//0x0b7c		VoC_lw32inc_p(REG67,REG0,DEFAULT)	|	VoC_lw16i_set_inc(REG2,0xc30,0x2)(hi)
0xE889D9D2,	//0x0b7e		VoC_loop_i_short(0x4,DEFAULT)	|	VoC_lw32inc_p(REG45,REG2,DEFAULT)
0xCA9B489A,	//0x0b80		VoC_sub32_rr(REG67,REG45,REG67,IN_PARALLEL)	|	VoC_add32_rr(REG45,REG45,REG67,DEFAULT)
0xD9D47A42,	//0x0b82		VoC_lw32inc_p(ACC0,REG2,IN_PARALLEL)	|	VoC_shr32_ri(REG45,0x8,DEFAULT)
0xD9C57A43,	//0x0b84		VoC_lw32inc_p(ACC1,REG0,IN_PARALLEL)	|	VoC_shr32_ri(REG67,0x8,DEFAULT)
0xFF225C94,	//0x0b86		VoC_movreg32(REG45,ACC0,IN_PARALLEL)	|	VoC_sw16inc_p(REG4,REG1,DEFAULT)
		//0x0b88		VoC_endloop0
0xFF2B5CB6,	//0x0b88		VoC_movreg32(REG67,ACC1,IN_PARALLEL)	|	VoC_sw16inc_p(REG6,REG3,DEFAULT)
0x42750709,	//0x0b8a		VoC_add16_rd(REG1,REG1,0x4275)
0xDFC1E580,	//0x0b8c		VoC_push16(REG1,DEFAULT)	|	VoC_return
		//0x0b8d		CS_idctcol
0xFF465892,	//0x0b8e		VoC_lw32z(RL6,IN_PARALLEL)	|	VoC_lw16inc_p(REG2,REG1,DEFAULT)
0xFF445893,	//0x0b90		VoC_lw32z(ACC0,IN_PARALLEL)	|	VoC_lw16inc_p(REG3,REG1,DEFAULT)
0xD895D894,	//0x0b92		VoC_lw16inc_p(REG5,REG1,DEFAULT)	|	VoC_lw16inc_p(REG4,REG1,DEFAULT)
0x7A46D89D,	//0x0b94		VoC_shr32_ri(RL6,0x8,DEFAULT)	|	VoC_lw16inc_p(RL6_HI,REG1,DEFAULT)
0xD89AD897,	//0x0b96		VoC_lw16inc_p(ACC1_LO,REG1,DEFAULT)	|	VoC_lw16inc_p(REG7,REG1,IN_PARALLEL)
0x31C3D89B,	//0x0b98		VoC_bnez16_r(idctcol_100,REG3)(lo)	|	VoC_lw16inc_p(ACC1_HI,REG1,DEFAULT)
0x33420BAE,	//0x0b9a		VoC_bnez32_r(idctcol_100,REG45)(lo)	|	VoC_bnez16_r(idctcol_100,REG3)(hi)
0x33460BAE,	//0x0b9c		VoC_bnez32_r(idctcol_100,RL6)(lo)	|	VoC_bnez32_r(idctcol_100,REG45)(hi)
0x31C70BAE,	//0x0b9e		VoC_bnez16_r(idctcol_100,REG7)(lo)	|	VoC_bnez32_r(idctcol_100,RL6)(hi)
0x33450BAE,	//0x0ba0		VoC_bnez32_r(idctcol_100,ACC1)(lo)	|	VoC_bnez16_r(idctcol_100,REG7)(hi)
0x07120BAE,	//0x0ba2		VoC_add16_rd(REG2,REG2,0x4276)(lo)	|	VoC_bnez32_r(idctcol_100,ACC1)(hi)
0xF8FA4276,	//0x0ba4		VoC_shr16_ri(REG2,0xffffffff,DEFAULT)	|	VoC_add16_rd(REG2,REG2,0x4276)(hi)
0xDF81783A,	//0x0ba6		VoC_pop16(REG1,IN_PARALLEL)	|	VoC_shr16_ri(REG2,0x7,DEFAULT)
0xDC92E901,	//0x0ba8		VoC_sw16inc_p(REG2,REG1,DEFAULT)	|	VoC_loop_i_short(0x8,DEFAULT)
		//0x0ba9		VoC_endloop0
0x42770789,	//0x0baa		VoC_sub16_rd(REG1,REG1,0x4277)
0xFFC06580,	//0x0bac		VoC_NAD(IN_PARALLEL)	|	VoC_return
		//0x0bae		idctcol_100
0xFF286049,	//0x0bae		VoC_movreg32(REG01,ACC1,IN_PARALLEL)	|	VoC_movreg16(ACC0_HI,REG2,DEFAULT)
0xF4017A44,	//0x0bb0		VoC_lw16i_short(FORMAT32,0x0,IN_PARALLEL)	|	VoC_shr32_ri(ACC0,0x8,DEFAULT)
0x427C0924,	//0x0bb2		VoC_add32_rd(ACC0,ACC0,0x427c)
0xCB374936,	//0x0bb4		VoC_sub32_rr(RL7,ACC0,RL6,IN_PARALLEL)	|	VoC_add32_rr(RL6,ACC0,RL6,DEFAULT)
0xE0097088,	//0x0bb6		VoC_lw16i_short(ACC0_HI,0x0,IN_PARALLEL)	|	VoC_lw16i_short(ACC0_LO,0x4,DEFAULT)
0xDF44C106,	//0x0bb8		VoC_push32(ACC0,DEFAULT)	|	VoC_add16_rr(REG6,REG4,REG0,DEFAULT)
0x426B0E30,	//0x0bba		VoC_mac32_rd(REG6,0x426b)
0x426C0F00,	//0x0bbc		VoC_msu32_rd(REG0,0x426c)
0x7F25FF25,	//0x0bbe		VoC_movreg32(ACC1,ACC0,DEFAULT)	|	VoC_movreg32(ACC1,ACC0,DEFAULT)
0x0E20FF2C,	//0x0bc0		VoC_mac32_rd(REG4,0x426d)(lo)	|	VoC_movreg32(ACC0,ACC1,IN_PARALLEL)
0x180A426D,	//0x0bc2		VoC_lw16i_set_inc(REG2,0xc30,0x2)(lo)	|	VoC_mac32_rd(REG4,0x426d)(hi)
0x7A1D0C30,	//0x0bc4		VoC_shr32_ri(ACC1,0x3,DEFAULT)	|	VoC_lw16i_set_inc(REG2,0xc30,0x2)(hi)
0x49A4FA1C,	//0x0bc6		VoC_add32_rr(ACC0,RL6,ACC0,DEFAULT)	|	VoC_shr32_ri(ACC0,0x3,IN_PARALLEL)
0x49EFCBA6,	//0x0bc8		VoC_add32_rr(RL7,RL7,ACC1,DEFAULT)	|	VoC_sub32_rr(RL6,RL6,ACC0,IN_PARALLEL)
0xDDD4CBED,	//0x0bca		VoC_sw32inc_p(ACC0,REG2,DEFAULT)	|	VoC_sub32_rr(ACC1,RL7,ACC1,IN_PARALLEL)
0xD90C5DD7,	//0x0bcc		VoC_lw32_sd(ACC0,0x0,IN_PARALLEL)	|	VoC_sw32inc_p(RL7,REG2,DEFAULT)
0x60E4DDD5,	//0x0bce		VoC_movreg16(REG4,REG7,DEFAULT)	|	VoC_sw32inc_p(ACC1,REG2,DEFAULT)
0x0E30C0CE,	//0x0bd0		VoC_mac32_rd(REG6,0x426e)(lo)	|	VoC_add16_rr(REG6,REG3,REG1,IN_PARALLEL)
0x0E18426E,	//0x0bd2		VoC_mac32_rd(REG3,0x426f)(lo)	|	VoC_mac32_rd(REG6,0x426e)(hi)
0x7F25426F,	//0x0bd4		VoC_movreg32(ACC1,ACC0,DEFAULT)	|	VoC_mac32_rd(REG3,0x426f)(hi)
0x7F27C12B,	//0x0bd6		VoC_movreg32(RL7,ACC0,DEFAULT)	|	VoC_add16_rr(REG3,REG4,REG5,IN_PARALLEL)
0x0F08FF2C,	//0x0bd8		VoC_msu32_rd(REG1,0x4270)(lo)	|	VoC_movreg32(ACC0,ACC1,IN_PARALLEL)
0xDDD64270,	//0x0bda		VoC_sw32inc_p(RL6,REG2,DEFAULT)	|	VoC_msu32_rd(REG1,0x4270)(hi)
0xDF047F23,	//0x0bdc		VoC_pop32(ACC0,IN_PARALLEL)	|	VoC_movreg32(REG67,ACC0,DEFAULT)
0x42710E18,	//0x0bde		VoC_mac32_rd(REG3,0x4271)
0xFA1B7A1F,	//0x0be0		VoC_shr32_ri(REG67,0x3,IN_PARALLEL)	|	VoC_shr32_ri(RL7,0x3,DEFAULT)
0x0F20FF25,	//0x0be2		VoC_msu32_rd(REG4,0x4272)(lo)	|	VoC_movreg32(ACC1,ACC0,DEFAULT)
0x180A4272,	//0x0be4		VoC_lw16i_set_inc(REG2,0x4592,0x2)(lo)	|	VoC_msu32_rd(REG4,0x4272)(hi)
0x7F264592,	//0x0be6		VoC_movreg32(RL6,ACC0,DEFAULT)	|	VoC_lw16i_set_inc(REG2,0x4592,0x2)(hi)
0x0F28FF2C,	//0x0be8		VoC_msu32_rd(REG5,0x4273)(lo)	|	VoC_movreg32(ACC0,ACC1,IN_PARALLEL)
0xFA1E4273,	//0x0bea		VoC_shr32_ri(RL6,0x3,DEFAULT)	|	VoC_msu32_rd(REG5,0x4273)(hi)
0xF5897A1C,	//0x0bec		VoC_lw16i_short(FORMAT32,0xfffffff1,IN_PARALLEL)	|	VoC_shr32_ri(ACC0,0x3,DEFAULT)
0xCBF749F6,	//0x0bee		VoC_sub32_rr(RL7,RL7,RL6,IN_PARALLEL)	|	VoC_add32_rr(RL6,RL7,RL6,DEFAULT)
0xCAE548E2,	//0x0bf0		VoC_sub32_rr(ACC1,REG67,ACC0,IN_PARALLEL)	|	VoC_add32_rr(REG45,REG67,ACC0,DEFAULT)
0xCBED49E8,	//0x0bf2		VoC_sub32_rr(ACC1,RL7,ACC1,IN_PARALLEL)	|	VoC_add32_rr(REG01,RL7,ACC1,DEFAULT)
0x0A0CFBF8,	//0x0bf4		VoC_multf32_rd(ACC0,REG1,0x4274)(lo)	|	VoC_shr32_ri(REG01,0xffffffff,DEFAULT)
0x79084274,	//0x0bf6		VoC_shru16_ri(REG0,0x1,DEFAULT)	|	VoC_multf32_rd(ACC0,REG1,0x4274)(hi)
0x0E00F401,	//0x0bf8		VoC_mac32_rd(REG0,0x4274)(lo)	|	VoC_lw16i_short(FORMAT32,0x0,IN_PARALLEL)
0xDDD64274,	//0x0bfa		VoC_sw32inc_p(RL6,REG2,DEFAULT)	|	VoC_mac32_rd(REG0,0x4274)(hi)
0x427A0923,	//0x0bfc		VoC_add32_rd(REG67,ACC0,0x427a)
0xF5897A43,	//0x0bfe		VoC_lw16i_short(FORMAT32,0xfffffff1,IN_PARALLEL)	|	VoC_shr32_ri(REG67,0x8,DEFAULT)
0xFBF8FF28,	//0x0c00		VoC_shr32_ri(REG01,0xffffffff,DEFAULT)	|	VoC_movreg32(REG01,ACC1,DEFAULT)
0x42740A0C,	//0x0c02		VoC_multf32_rd(ACC0,REG1,0x4274)
0xF4017908,	//0x0c04		VoC_lw16i_short(FORMAT32,0x0,IN_PARALLEL)	|	VoC_shru16_ri(REG0,0x1,DEFAULT)
0x42740E00,	//0x0c06		VoC_mac32_rd(REG0,0x4274)
0x0927DDD3,	//0x0c08		VoC_add32_rd(RL7,ACC0,0x427a)(lo)	|	VoC_sw32inc_p(REG67,REG2,DEFAULT)
0x7A47427A,	//0x0c0a		VoC_shr32_ri(RL7,0x8,DEFAULT)	|	VoC_add32_rd(RL7,ACC0,0x427a)(hi)
0x1808DF81,	//0x0c0c		VoC_lw16i_set_inc(REG0,0xc30,0x2)(lo)	|	VoC_pop16(REG1,IN_PARALLEL)
0x5DD70C30,	//0x0c0e		VoC_sw32inc_p(RL7,REG2,DEFAULT)	|	VoC_lw16i_set_inc(REG0,0xc30,0x2)(hi)
0xDDD2F3E3,	//0x0c10		VoC_sw32inc_p(REG45,REG2,DEFAULT)	|	VoC_lw16i_short(INC3,0xfffffff8,IN_PARALLEL)
0x4592180A,	//0x0c12		VoC_lw16i_set_inc(REG2,0x4592,0x2)
0x4278070B,	//0x0c14		VoC_add16_rd(REG3,REG1,0x4278)
0xFFC0D9C2,	//0x0c16		VoC_NAD	|	VoC_lw32inc_p(REG45,REG0,DEFAULT)
0xD9D3688C,	//0x0c18		VoC_lw32inc_p(REG67,REG2,IN_PARALLEL)	|	VoC_loop_i_short(0x4,DEFAULT)
0xCA9B489A,	//0x0c1a		VoC_sub32_rr(REG67,REG45,REG67,IN_PARALLEL)	|	VoC_add32_rr(REG45,REG45,REG67,DEFAULT)
0xFBBB7BBA,	//0x0c1c		VoC_shr32_ri(REG67,0xfffffff7,IN_PARALLEL)	|	VoC_shr32_ri(REG45,0xfffffff7,DEFAULT)
0xD9C4783D,	//0x0c1e		VoC_lw32inc_p(ACC0,REG0,IN_PARALLEL)	|	VoC_shr16_ri(REG5,0x7,DEFAULT)
0xD9D5783F,	//0x0c20		VoC_lw32inc_p(ACC1,REG2,IN_PARALLEL)	|	VoC_shr16_ri(REG7,0x7,DEFAULT)
0xFF225C95,	//0x0c22		VoC_movreg32(REG45,ACC0,IN_PARALLEL)	|	VoC_sw16inc_p(REG5,REG1,DEFAULT)
		//0x0c24		VoC_endloop0
0xFF2B5CB7,	//0x0c24		VoC_movreg32(REG67,ACC1,IN_PARALLEL)	|	VoC_sw16inc_p(REG7,REG3,DEFAULT)
0x42790789,	//0x0c26		VoC_sub16_rd(REG1,REG1,0x4279)
0xDFE9E580,	//0x0c28		VoC_push16(RA,DEFAULT)	|	VoC_return
		//0x0c29		CS_idct
0xDFC177F3,	//0x0c2a		VoC_push16(REG1,IN_PARALLEL)	|	VoC_lw16i_short(INC3,0xffffffff,DEFAULT)
0x0C302C11,	//0x0c2c		VoC_loop_i(0x1,0x8)
0x0B082B80,	//0x0c2e		VoC_jal(CS_idctrow)
		//0x0c30		VoC_endloop1
0x5F81FFC0,	//0x0c30		VoC_pop16(REG1,DEFAULT)	|	VoC_NAD
0xFFC0F021,	//0x0c32		VoC_NAD	|	VoC_lw16i_short(INC1,0x8,IN_PARALLEL)
0x0C382C11,	//0x0c34		VoC_loop_i(0x1,0x8)
0x0B8D2B80,	//0x0c36		VoC_jal(CS_idctcol)
		//0x0c38		VoC_endloop1
0xDFA9FFC0,	//0x0c38		VoC_pop16(RA,DEFAULT)	|	VoC_NAD
0xE580FFC0,	//0x0c3a		VoC_return	|	VoC_NOP
		//0x0c3c		CS_H263transfer_16to8add_c
0x00FF0A87,	//0x0c3c		VoC_lw16i(REG7,0xff)
0xD804EC12,	//0x0c3e		VoC_lw16_p(REG4,REG0,DEFAULT)	|	VoC_loop_i_short(0x20,DEFAULT)
0xF9446085,	//0x0c40		VoC_shru16_ri(REG4,0x8,IN_PARALLEL)	|	VoC_movreg16(REG5,REG4,DEFAULT)
0x00FF1605,	//0x0c42		VoC_and16_ri(REG5,0xff)
0x030C834D,	//0x0c44		VoC_add16inc_rp(REG4,REG4,REG1,DEFAULT)	|	VoC_add16inc_rp(REG5,REG5,REG1,DEFAULT)
0x1605DEFD,	//0x0c46		VoC_and16_ri(REG5,0xff)(lo)	|	VoC_clipu16_rr(REG5,REG7,IN_PARALLEL)
0x702600FF,	//0x0c48		VoC_lw16i_short(REG6,0x1,DEFAULT)	|	VoC_and16_ri(REG5,0xff)(hi)
0x1604DEFC,	//0x0c4a		VoC_and16_ri(REG4,0xff)(lo)	|	VoC_clipu16_rr(REG4,REG7,IN_PARALLEL)
0xF9C400FF,	//0x0c4c		VoC_shru16_ri(REG4,0xfffffff8,DEFAULT)	|	VoC_and16_ri(REG4,0xff)(hi)
0xFFC0E46C,	//0x0c4e		VoC_NOP	|	VoC_or16_rr(REG4,REG5,DEFAULT)
		//0x0c50		VoC_endloop0
0xE580DC84,	//0x0c50		VoC_return	|	VoC_sw16inc_p(REG4,REG0,DEFAULT)
		//0x0c52		CS_getblock
0x00011701,	//0x0c52		VoC_xor16_ri(REG1,0x1)
0x02000A83,	//0x0c54		VoC_lw16i(REG3,0x200)
		//0x0c56		H263_getblock_loop_start_01
0x62F0E242,	//0x0c56		VoC_rb_i(REG4,0xc,DEFAULT)	|	VoC_lbinc_p(REG2)
0x5FC3DF40,	//0x0c58		VoC_push16(REG3,DEFAULT)	|	VoC_push32(REG01,IN_PARALLEL)
0x341CF005,	//0x0c5a		VoC_bgt16_rr(H263_getblock_code_lt_512,REG3,REG4)(lo)	|	VoC_lw16i_short(INC1,0x1,IN_PARALLEL)
0x62DD0C66,	//0x0c5c		VoC_rb_i(REG5,0x7,DEFAULT)	|	VoC_bgt16_rr(H263_getblock_code_lt_512,REG3,REG4)(hi)
0xC358E103,	//0x0c5e		VoC_sub16_rr(REG0,REG5,REG3,DEFAULT)	|	VoC_lw16i_short(REG3,0x10,IN_PARALLEL)
0x0A81F8F8,	//0x0c60		VoC_lw16i(REG1,0x42c0)(lo)	|	VoC_shr16_ri(REG0,0xffffffff,DEFAULT)
0xC00842C0,	//0x0c62		VoC_add16_rr(REG0,REG0,REG1,DEFAULT)	|	VoC_lw16i(REG1,0x42c0)(hi)
0xFFC065D8,	//0x0c64		VoC_NAD(IN_PARALLEL)	|	VoC_jump(H263_getblock_code_else_end)
		//0x0c66		H263_getblock_code_lt_512
0xF81362E9,	//0x0c66		VoC_shr16_ri(REG3,0x2,IN_PARALLEL)	|	VoC_rb_i(REG5,0xa,DEFAULT)
0x0C71341C,	//0x0c68		VoC_bgt16_rr(H263_getblock_code_lt_128,REG3,REG4)
0xF80B78FD,	//0x0c6a		VoC_shr16_ri(REG3,0x1,IN_PARALLEL)	|	VoC_shr16_ri(REG5,0xffffffff,DEFAULT)
0x0A81C358,	//0x0c6c		VoC_lw16i(REG1,0x43a0)(lo)	|	VoC_sub16_rr(REG0,REG5,REG3,DEFAULT)
0xC00843A0,	//0x0c6e		VoC_add16_rr(REG0,REG0,REG1,DEFAULT)	|	VoC_lw16i(REG1,0x43a0)(hi)
0xF823E5CC,	//0x0c70		VoC_shr16_ri(REG3,0x4,DEFAULT)	|	VoC_jump(H263_getblock_code_else_end)
		//0x0c71		H263_getblock_code_lt_128
0x0C7A341C,	//0x0c72		VoC_bgt16_rr(H263_getblock_code_lt_8,REG3,REG4)
0xF8F8C318,	//0x0c74		VoC_shr16_ri(REG0,0xffffffff,DEFAULT)	|	VoC_sub16_rr(REG0,REG4,REG3,DEFAULT)
0x44600A81,	//0x0c76		VoC_lw16i(REG1,0x4460)
0xE5C3C008,	//0x0c78		VoC_jump(H263_getblock_code_else_end)	|	VoC_add16_rr(REG0,REG0,REG1,DEFAULT)
		//0x0c7a		H263_getblock_code_lt_8
0x0CDA2B00,	//0x0c7a		VoC_jump_lg(H263_getblock_fault_be_1)
		//0x0c7c		H263_getblock_code_else_end
0x1BFF0A81,	//0x0c7c		VoC_lw16i(REG1,0x1bff)
0xE0F65982,	//0x0c7e		VoC_lw16i_short(REG6,0xf,IN_PARALLEL)	|	VoC_lw32_p(REG45,REG0,DEFAULT)
0xF8246426,	//0x0c80		VoC_shr16_ri(REG4,0x4,IN_PARALLEL)	|	VoC_and16_rr(REG6,REG4,DEFAULT)
0x00FF1604,	//0x0c82		VoC_and16_ri(REG4,0xff)
0xE0135807,	//0x0c84		VoC_lw16i_short(REG3,0x1,IN_PARALLEL)	|	VoC_lw16_p(REG7,REG0,DEFAULT)
0xD8007867,	//0x0c86		VoC_lw16_p(REG0,REG0,IN_PARALLEL)	|	VoC_shr16_ri(REG7,0xc,DEFAULT)
0x3581E41F,	//0x0c88		VoC_bne16_rr(H263_getblock_tabval_ne_ESCAPE,REG0,REG1)(lo)	|	VoC_and16_rr(REG7,REG3,DEFAULT)
0x63290CA6,	//0x0c8a		VoC_rbinc_r(REG5,REG5,DEFAULT)	|	VoC_bne16_rr(H263_getblock_tabval_ne_ESCAPE,REG0,REG1)(hi)
0xE242D908,	//0x0c8c		VoC_lbinc_p(REG2)	|	VoC_lw32_sd(REG01,0x0,IN_PARALLEL)
0xE2DCE2C7,	//0x0c8e		VoC_rb_i(REG4,0x7,DEFAULT)	|	VoC_rb_i(REG7,0x1,DEFAULT)
0x003F1604,	//0x0c90		VoC_and16_ri(REG4,0x3f)
0xC0615FC7,	//0x0c92		VoC_add16_rr(REG1,REG1,REG4,IN_PARALLEL)	|	VoC_push16(REG7,DEFAULT)
0xD62362BE,	//0x0c94		VoC_lw16_sd(REG3,0x1,IN_PARALLEL)	|	VoC_rbinc_i(REG6,0xf,DEFAULT)
0x00FF1606,	//0x0c96		VoC_and16_ri(REG6,0xff)
0xF8135D08,	//0x0c98		VoC_shr16_ri(REG3,0x2,IN_PARALLEL)	|	VoC_sw32_sd(REG01,0x0,DEFAULT)
0x0CA2341E,	//0x0c9a		VoC_bgt16_rr(H263_getblock_ez_signID,REG3,REG6)
0x01000A81,	//0x0c9c		VoC_lw16i(REG1,0x100)
0xC2717020,	//0x0c9e		VoC_sub16_rr(REG1,REG1,REG6,IN_PARALLEL)	|	VoC_lw16i_short(REG0,0x1,DEFAULT)
0xFFC065C4,	//0x0ca0		VoC_NAD(IN_PARALLEL)	|	VoC_jump(H263_getblock_nez_signID)
		//0x0ca2		H263_getblock_ez_signID
0xF6C17000,	//0x0ca2		VoC_movreg16(REG1,REG6,IN_PARALLEL)	|	VoC_lw16i_short(REG0,0x0,DEFAULT)
		//0x0ca4		H263_getblock_nez_signID
0xE5CDDF83,	//0x0ca4		VoC_jump(H263_getblock_tabval_be_ESCAPE)	|	VoC_pop16(REG3,DEFAULT)
		//0x0ca6		H263_getblock_tabval_ne_ESCAPE
0xF6E35908,	//0x0ca6		VoC_movreg16(REG3,REG7,IN_PARALLEL)	|	VoC_lw32_sd(REG01,0x0,DEFAULT)
0xE0144061,	//0x0ca8		VoC_lw16i_short(REG4,0x1,IN_PARALLEL)	|	VoC_add16_rr(REG1,REG1,REG4,DEFAULT)
0x6378C12F,	//0x0caa		VoC_rb_r(REG4,REG7,DEFAULT)	|	VoC_add16_rr(REG7,REG4,REG5,DEFAULT)
0x633BDD08,	//0x0cac		VoC_rbinc_r(REG7,REG7,DEFAULT)	|	VoC_sw32_sd(REG01,0x0,IN_PARALLEL)
0x1604F6C1,	//0x0cae		VoC_and16_ri(REG4,0x1)(lo)	|	VoC_movreg16(REG1,REG6,IN_PARALLEL)
0xE0800001,	//0x0cb0		VoC_movreg16(REG0,REG4,DEFAULT)	|	VoC_and16_ri(REG4,0x1)(hi)
		//0x0cb2		H263_getblock_tabval_be_ESCAPE
0x00400A84,	//0x0cb2		VoC_lw16i(REG4,0x40)
0xF8F9590B,	//0x0cb4		VoC_shr16_ri(REG1,0xffffffff,IN_PARALLEL)	|	VoC_lw32_sd(REG67,0x0,DEFAULT)
0x0CBA3427,	//0x0cb6		VoC_bgt16_rr(H263_getblock_i_lt_64,REG4,REG7)
0x0CDA2B00,	//0x0cb8		VoC_jump_lg(H263_getblock_fault_be_1)
		//0x0cba		H263_getblock_i_lt_64
0x45520A84,	//0x0cba		VoC_lw16i(REG4,0x4552)
0xE01441E7,	//0x0cbc		VoC_lw16i_short(REG4,0x1,IN_PARALLEL)	|	VoC_add16_rr(REG7,REG7,REG4,DEFAULT)
0x06D71405,	//0x0cbe		VoC_lw16_d(REG5,0x6d7)
0xC0615877,	//0x0cc0		VoC_add16_rr(REG1,REG1,REG4,IN_PARALLEL)	|	VoC_lw16_p(REG7,REG7,DEFAULT)
0xC54941BE,	//0x0cc2		VoC_mult16_rr(REG1,REG5,REG1,IN_PARALLEL)	|	VoC_add16_rr(REG6,REG6,REG7,DEFAULT)
0xE0076425,	//0x0cc4		VoC_lw16i_short(REG7,0x0,IN_PARALLEL)	|	VoC_and16_rr(REG5,REG4,DEFAULT)
0xDF074261,	//0x0cc6		VoC_pop32(RL7,IN_PARALLEL)	|	VoC_sub16_rr(REG1,REG1,REG4,DEFAULT)
0xF6654069,	//0x0cc8		VoC_movreg16(REG5,REG3,IN_PARALLEL)	|	VoC_add16_rr(REG1,REG1,REG5,DEFAULT)
0xDF8343CF,	//0x0cca		VoC_pop16(REG3,IN_PARALLEL)	|	VoC_sub16_rr(REG7,REG7,REG1,DEFAULT)
0x0CD23180,	//0x0ccc		VoC_bez16_r(H263_getblock_ez_signID_01,REG0)
0xFF385C67,	//0x0cce		VoC_movreg32(REG01,RL7,IN_PARALLEL)	|	VoC_sw16_p(REG7,REG6,DEFAULT)
0xFFC065C4,	//0x0cd0		VoC_NAD(IN_PARALLEL)	|	VoC_jump(H263_getblock_nez_signID_01)
		//0x0cd2		H263_getblock_ez_signID_01
0xFF385C61,	//0x0cd2		VoC_movreg32(REG01,RL7,IN_PARALLEL)	|	VoC_sw16_p(REG1,REG6,DEFAULT)
		//0x0cd4		H263_getblock_nez_signID_01
0x31C5C061,	//0x0cd4		VoC_bnez16_r(H263_getblock_end,REG5)(lo)	|	VoC_add16_rr(REG1,REG1,REG4,DEFAULT)
0x2B000CDF,	//0x0cd6		VoC_jump_lg(H263_getblock_loop_start_01)(lo)	|	VoC_bnez16_r(H263_getblock_end,REG5)(hi)
0xFFC00C56,	//0x0cd8		VoC_NAD	|	VoC_jump_lg(H263_getblock_loop_start_01)(hi)
		//0x0cda		H263_getblock_fault_be_1
0xDF847023,	//0x0cda		VoC_pop16(REG4,IN_PARALLEL)	|	VoC_lw16i_short(REG3,0x1,DEFAULT)
0x1503DF00,	//0x0cdc		VoC_sw16_d(REG3,0x6c6)(lo)	|	VoC_pop32(REG01,DEFAULT)
0xFFC006C6,	//0x0cde		VoC_NOP	|	VoC_sw16_d(REG3,0x6c6)(hi)
		//0x0cdf		H263_getblock_end
0xFFC06580,	//0x0ce0		VoC_NAD(IN_PARALLEL)	|	VoC_return
		//0x0ce2		CS_get_I_P_MBs
0xFF425FE9,	//0x0ce2		VoC_lw32z(REG45,IN_PARALLEL)	|	VoC_push16(RA,DEFAULT)
0x00000A9C,	//0x0ce4		VoC_lw16i(WRAP0,0x0)
0x00000A9D,	//0x0ce6		VoC_lw16i(WRAP1,0x0)
0x00000A9E,	//0x0ce8		VoC_lw16i(WRAP2,0x0)
0x00000A9F,	//0x0cea		VoC_lw16i(WRAP3,0x0)
0xF4017018,	//0x0cec		VoC_lw16i_short(FORMAT32,0x0,IN_PARALLEL)	|	VoC_lw16i_short(FORMAT16,0x0,DEFAULT)
0x02001483,	//0x0cee		VoC_lw32_d(REG67,0x200)
0xE01745BE,	//0x0cf0		VoC_lw16i_short(REG7,0x1,IN_PARALLEL)	|	VoC_mult16_rr(REG6,REG6,REG7,DEFAULT)
0x0C381582,	//0x0cf2		VoC_sw32_d(REG45,0xc38)
0x0C401582,	//0x0cf4		VoC_sw32_d(REG45,0xc40)
0x0C3C1506,	//0x0cf6		VoC_sw16_d(REG6,0xc3c)
0x0C421582,	//0x0cf8		VoC_sw32_d(REG45,0xc42)
0x0C441582,	//0x0cfa		VoC_sw32_d(REG45,0xc44)
0x0C481582,	//0x0cfc		VoC_sw32_d(REG45,0xc48)
0x0C4E1582,	//0x0cfe		VoC_sw32_d(REG45,0xc4e)
0x0C501582,	//0x0d00		VoC_sw32_d(REG45,0xc50)
0x02020B3E,	//0x0d02		VoC_sub16_dr(REG6,0x202,REG7)
0x02141582,	//0x0d04		VoC_sw32_d(REG45,0x214)
0x02021506,	//0x0d06		VoC_sw16_d(REG6,0x202)
0x06C61504,	//0x0d08		VoC_sw16_d(REG4,0x6c6)
0x02160A86,	//0x0d0a		VoC_lw16i(REG6,0x216)
0x06680A82,	//0x0d0c		VoC_lw16i(REG2,0x668)
0x002E0A80,	//0x0d0e		VoC_lw16i(REG0,0x2e)
0xC0834187,	//0x0d10		VoC_add16_rr(REG3,REG2,REG0,IN_PARALLEL)	|	VoC_add16_rr(REG7,REG6,REG0,DEFAULT)
0xF00578F8,	//0x0d12		VoC_lw16i_short(INC1,0x1,IN_PARALLEL)	|	VoC_shr16_ri(REG0,0xffffffff,DEFAULT)
0x06661583,	//0x0d14		VoC_sw32_d(REG67,0x666)
0x06C41581,	//0x0d16		VoC_sw32_d(REG23,0x6c4)
0xF0077032,	//0x0d18		VoC_lw16i_short(INC3,0x1,IN_PARALLEL)	|	VoC_lw16i_short(INC2,0x1,DEFAULT)
0x02280A85,	//0x0d1a		VoC_lw16i(REG5,0x228)
0xC1AB60C1,	//0x0d1c		VoC_add16_rr(REG3,REG6,REG5,IN_PARALLEL)	|	VoC_movreg16(REG1,REG6,DEFAULT)
0x5E08DE10,	//0x0d1e		VoC_inc_p(REG1,DEFAULT)	|	VoC_inc_p(REG2,DEFAULT)
0x1407DE18,	//0x0d20		VoC_lw16_d(REG7,0x200)(lo)	|	VoC_inc_p(REG3,IN_PARALLEL)
0x0A840200,	//0x0d22		VoC_lw16i(REG4,0x3e7)(lo)	|	VoC_lw16_d(REG7,0x200)(hi)
0xFFC003E7,	//0x0d24		VoC_NAD	|	VoC_lw16i(REG4,0x3e7)(hi)
0x0D332E39,	//0x0d26		VoC_loop_r(1,REG7)
0xE0375FC1,	//0x0d28		VoC_lw16i_short(REG7,0x3,IN_PARALLEL)	|	VoC_push16(REG1,DEFAULT)
0xDFC368A4,	//0x0d2a		VoC_push16(REG3,IN_PARALLEL)	|	VoC_loop_i_short(0x5,DEFAULT)
0xC0415C14,	//0x0d2c		VoC_add16_rr(REG1,REG1,REG0,IN_PARALLEL)	|	VoC_sw16_p(REG4,REG1,DEFAULT)
		//0x0d2e		VoC_endloop0
0xC0C35C34,	//0x0d2e		VoC_add16_rr(REG3,REG3,REG0,IN_PARALLEL)	|	VoC_sw16_p(REG4,REG3,DEFAULT)
0xDF83DF81,	//0x0d30		VoC_pop16(REG3,DEFAULT)	|	VoC_pop16(REG1,DEFAULT)
0x5CA7DE08,	//0x0d32		VoC_sw16inc_p(REG7,REG2,DEFAULT)	|	VoC_inc_p(REG1,DEFAULT)
		//0x0d33		VoC_endloop1
0x1402DE18,	//0x0d34		VoC_lw16_d(REG2,0x200)(lo)	|	VoC_inc_p(REG3,IN_PARALLEL)
0x14010200,	//0x0d36		VoC_lw16_d(REG1,0x666)(lo)	|	VoC_lw16_d(REG2,0x200)(hi)
0x406B0666,	//0x0d38		VoC_add16_rr(REG3,REG1,REG5,DEFAULT)	|	VoC_lw16_d(REG1,0x666)(hi)
0x4054DE10,	//0x0d3a		VoC_add16_rr(REG4,REG1,REG2,DEFAULT)	|	VoC_inc_p(REG2,IN_PARALLEL)
0xFFC0E007,	//0x0d3c		VoC_NAD	|	VoC_lw16i_short(REG7,0x0,IN_PARALLEL)
0xC0D668A8,	//0x0d3e		VoC_add16_rr(REG6,REG3,REG2,IN_PARALLEL)	|	VoC_loop_i_short(0x5,DEFAULT)
0xC0415C17,	//0x0d40		VoC_add16_rr(REG1,REG1,REG0,IN_PARALLEL)	|	VoC_sw16_p(REG7,REG1,DEFAULT)
0xC0C35C37,	//0x0d42		VoC_add16_rr(REG3,REG3,REG0,IN_PARALLEL)	|	VoC_sw16_p(REG7,REG3,DEFAULT)
0xC1045C47,	//0x0d44		VoC_add16_rr(REG4,REG4,REG0,IN_PARALLEL)	|	VoC_sw16_p(REG7,REG4,DEFAULT)
		//0x0d46		VoC_endloop0
0xC1865C67,	//0x0d46		VoC_add16_rr(REG6,REG6,REG0,IN_PARALLEL)	|	VoC_sw16_p(REG7,REG6,DEFAULT)
0x06671401,	//0x0d48		VoC_lw16_d(REG1,0x667)
0x4054C06B,	//0x0d4a		VoC_add16_rr(REG4,REG1,REG2,DEFAULT)	|	VoC_add16_rr(REG3,REG1,REG5,DEFAULT)
0xFFC0E007,	//0x0d4c		VoC_NAD	|	VoC_lw16i_short(REG7,0x0,IN_PARALLEL)
0xC0D668A8,	//0x0d4e		VoC_add16_rr(REG6,REG3,REG2,IN_PARALLEL)	|	VoC_loop_i_short(0x5,DEFAULT)
0xC0415C17,	//0x0d50		VoC_add16_rr(REG1,REG1,REG0,IN_PARALLEL)	|	VoC_sw16_p(REG7,REG1,DEFAULT)
0xC0C35C37,	//0x0d52		VoC_add16_rr(REG3,REG3,REG0,IN_PARALLEL)	|	VoC_sw16_p(REG7,REG3,DEFAULT)
0xC1045C47,	//0x0d54		VoC_add16_rr(REG4,REG4,REG0,IN_PARALLEL)	|	VoC_sw16_p(REG7,REG4,DEFAULT)
		//0x0d56		VoC_endloop0
0xC1865C67,	//0x0d56		VoC_add16_rr(REG6,REG6,REG0,IN_PARALLEL)	|	VoC_sw16_p(REG7,REG6,DEFAULT)
0x1401F064,	//0x0d58		VoC_lw16_d(REG1,0x6c4)(lo)	|	VoC_lw16i_short(REG4,0x3,DEFAULT)
0x140706C4,	//0x0d5a		VoC_lw16_d(REG7,0x6c5)(lo)	|	VoC_lw16_d(REG1,0x6c4)(hi)
0x405306C5,	//0x0d5c		VoC_add16_rr(REG3,REG1,REG2,DEFAULT)	|	VoC_lw16_d(REG7,0x6c5)(hi)
0x41D6DC14,	//0x0d5e		VoC_add16_rr(REG6,REG7,REG2,DEFAULT)	|	VoC_sw16_p(REG4,REG1,IN_PARALLEL)
0xDC34DC74,	//0x0d60		VoC_sw16_p(REG4,REG3,DEFAULT)	|	VoC_sw16_p(REG4,REG7,IN_PARALLEL)
0x1486DC64,	//0x0d62		VoC_lw32_d(RL6,0x204)(lo)	|	VoC_sw16_p(REG4,REG6,DEFAULT)
0x141B0204,	//0x0d64		VoC_lw16_d(BITCACHE,0x203)(lo)	|	VoC_lw32_d(RL6,0x204)(hi)
0x0A820203,	//0x0d66		VoC_lw16i(REG2,0x0)(lo)	|	VoC_lw16_d(BITCACHE,0x203)(hi)
0x0A830000,	//0x0d68		VoC_lw16i(REG3,0x100)(lo)	|	VoC_lw16i(REG2,0x0)(hi)
0x14820100,	//0x0d6a		VoC_lw32_d(REG45,0x206)(lo)	|	VoC_lw16i(REG3,0x100)(hi)
0x15420206,	//0x0d6c		VoC_sw16_d(REG2,0xffc3)(lo)	|	VoC_lw32_d(REG45,0x206)(hi)
0x15437FC3,	//0x0d6e		VoC_sw16_d(REG3,0xffc2)(lo)	|	VoC_sw16_d(REG2,0xffc3)(hi)
0x15C27FC2,	//0x0d70		VoC_sw32_d(REG45,0xffc4)(lo)	|	VoC_sw16_d(REG3,0xffc2)(hi)
0xDE807FC4,	//0x0d72		VoC_cfg(0x0)	|	VoC_sw32_d(REG45,0xffc4)(hi)
0xE00778FA,	//0x0d74		VoC_lw16i_short(REG7,0x0,IN_PARALLEL)	|	VoC_shr16_ri(REG2,0xffffffff,DEFAULT)
0x00081794,	//0x0d76		VoC_cfg_lg(0x8,)
0x7FFF0AC0,	//0x0d78		VoC_lw16i(REG0,0xffff)
0x06C81502,	//0x0d7a		VoC_sw16_d(REG2,0x6c8)
0x04000A86,	//0x0d7c		VoC_lw16i(REG6,0x400)
0xF44E489A,	//0x0d7e		VoC_lw16i_short(WRAP2,0x9,IN_PARALLEL)	|	VoC_add32_rr(REG45,REG45,REG67,DEFAULT)
0x06C91500,	//0x0d80		VoC_sw16_d(REG0,0x6c9)
0x06C71507,	//0x0d82		VoC_sw16_d(REG7,0x6c7)
0x02061582,	//0x0d84		VoC_sw32_d(REG45,0x206)
0x02026C04,	//0x0d86		VoC_bez16_d(H263_nz_gob,0x202)
0x0E042B00,	//0x0d88		VoC_jump_lg(H263_getgobhrd)
		//0x0d8a		H263_nz_gob
		//0x0d8a		H263_get_I_P_MBs_start
0x0C381404,	//0x0d8a		VoC_lw16_d(REG4,0xc38)
0x0C3C4824,	//0x0d8c		VoC_blt16_rd(H263_MBA_lt_MBAmax,REG4,0xc3c)
0x144A2B00,	//0x0d8e		VoC_jump_lg(H263_get_I_P_MBs_end)
		//0x0d90		H263_MBA_lt_MBAmax
0xF00677E0,	//0x0d90		VoC_lw16i_short(INC2,0x1,IN_PARALLEL)	|	VoC_lw16i_short(REG0,0xffffffff,DEFAULT)
0x06C941A8,	//0x0d92		VoC_be16_rd(H263_resync,REG0,0x6c9)
0x06C91401,	//0x0d94		VoC_lw16_d(REG1,0x6c9)
0xE00778C9,	//0x0d96		VoC_lw16i_short(REG7,0x0,IN_PARALLEL)	|	VoC_shr16_ri(REG1,0xfffffff9,DEFAULT)
0x00000A86,	//0x0d98		VoC_lw16i(REG6,0x0)
0x0A83C18E,	//0x0d9a		VoC_lw16i(REG3,0x80)(lo)	|	VoC_add16_rr(REG6,REG6,REG1,DEFAULT)
0x14820080,	//0x0d9c		VoC_lw32_d(REG45,0x206)(lo)	|	VoC_lw16i(REG3,0x80)(hi)
0x15460206,	//0x0d9e		VoC_sw16_d(REG6,0xffc3)(lo)	|	VoC_lw32_d(REG45,0x206)(hi)
0x15437FC3,	//0x0da0		VoC_sw16_d(REG3,0xffc2)(lo)	|	VoC_sw16_d(REG6,0xffc3)(hi)
0x15C27FC2,	//0x0da2		VoC_sw32_d(REG45,0xffc4)(lo)	|	VoC_sw16_d(REG3,0xffc2)(hi)
0xDE807FC4,	//0x0da4		VoC_cfg(0x0)	|	VoC_sw32_d(REG45,0xffc4)(hi)
0x02000A86,	//0x0da6		VoC_lw16i(REG6,0x200)
0x00081794,	//0x0da8		VoC_cfg_lg(0x8,)
0x1500C89A,	//0x0daa		VoC_sw16_d(REG0,0x6c9)(lo)	|	VoC_add32_rr(REG45,REG45,REG67,DEFAULT)
0x158206C9,	//0x0dac		VoC_sw32_d(REG45,0x206)(lo)	|	VoC_sw16_d(REG0,0x6c9)(hi)
0xE2420206,	//0x0dae		VoC_lbinc_p(REG2)	|	VoC_sw32_d(REG45,0x206)(hi)
		//0x0daf		H263_resync
0x713EE242,	//0x0db0		VoC_lw16i_short(WRAP2,0x9,DEFAULT)	|	VoC_lbinc_p(REG2)
0x6C09E001,	//0x0db2		VoC_bez16_d(H263_no_fault,0x6c6)(lo)	|	VoC_lw16i_short(REG1,0x0,IN_PARALLEL)
0xFFC006C6,	//0x0db4		VoC_NAD	|	VoC_bez16_d(H263_no_fault,0x6c6)(hi)
0x02302B80,	//0x0db6		VoC_jal(CS_startcode)
0x144A31C6,	//0x0db8		VoC_bnez16_r(H263_get_I_P_MBs_end,REG6)
0x06C61501,	//0x0dba		VoC_sw16_d(REG1,0x6c6)
		//0x0dbc		H263_no_fault
0x31C4E2C0,	//0x0dbc		VoC_bnez16_r(H263_nz_code_tmp,REG4)(lo)	|	VoC_rb_i(REG4,0x10,DEFAULT)
0xFFC00E28,	//0x0dbe		VoC_NAD	|	VoC_bnez16_r(H263_nz_code_tmp,REG4)(hi)
0x02302B80,	//0x0dc0		VoC_jal(CS_startcode)
0x144A31C6,	//0x0dc2		VoC_bnez16_r(H263_get_I_P_MBs_end,REG6)
0xDFDB5F46,	//0x0dc4		VoC_push16(BITCACHE,IN_PARALLEL)	|	VoC_push32(RL6,DEFAULT)
0xDFC26299,	//0x0dc6		VoC_push16(REG2,IN_PARALLEL)	|	VoC_rbinc_i(REG5,0x6,DEFAULT)
0x0A86E242,	//0x0dc8		VoC_lw16i(REG6,0x3f)(lo)	|	VoC_lbinc_p(REG2)
0x62C0003F,	//0x0dca		VoC_rb_i(REG4,0x10,DEFAULT)	|	VoC_lw16i(REG6,0x3f)(hi)
0x5F06E007,	//0x0dcc		VoC_pop32(RL6,DEFAULT)	|	VoC_lw16i_short(REG7,0x0,IN_PARALLEL)
0xDF9BDF82,	//0x0dce		VoC_pop16(BITCACHE,DEFAULT)	|	VoC_pop16(REG2,IN_PARALLEL)
0x144A3713,	//0x0dd0		VoC_be32_rr(H263_get_I_P_MBs_end,REG45,REG67)
0x00200A86,	//0x0dd2		VoC_lw16i(REG6,0x20)
0x144A3713,	//0x0dd4		VoC_be32_rr(H263_get_I_P_MBs_end,REG45,REG67)
0xE1F37001,	//0x0dd6		VoC_lw16i_short(REG3,0x1f,IN_PARALLEL)	|	VoC_lw16i_short(REG1,0x0,DEFAULT)
0x1501E242,	//0x0dd8		VoC_sw16_d(REG1,0x214)(lo)	|	VoC_lbinc_p(REG2)
0xFFC00214,	//0x0dda		VoC_NAD	|	VoC_sw16_d(REG1,0x214)(hi)
0x02302B80,	//0x0ddc		VoC_jal(CS_startcode)
0x144A31C6,	//0x0dde		VoC_bnez16_r(H263_get_I_P_MBs_end,REG6)
0xE0156280,	//0x0de0		VoC_lw16i_short(REG5,0x1,IN_PARALLEL)	|	VoC_rbinc_i(REG4,0x10,DEFAULT)
0x6284E242,	//0x0de2		VoC_rbinc_i(REG4,0x1,DEFAULT)	|	VoC_lbinc_p(REG2)
0xE294C26D,	//0x0de4		VoC_rbinc_i(REG4,0x5,DEFAULT)	|	VoC_sub16_rr(REG5,REG1,REG5,IN_PARALLEL)
0x0DEA35A3,	//0x0de6		VoC_bne16_rr(H263_getheader_gob_ne_SECODE,REG4,REG3)
0xE5D5E0A4,	//0x0de8		VoC_jump(H263_getheader_end)	|	VoC_movreg16(REG4,REG5,DEFAULT)
		//0x0dea		H263_getheader_gob_ne_SECODE
0x0DFE31C4,	//0x0dea		VoC_bnez16_r(H263_getheader_end,REG4)
0x2B80DF42,	//0x0dec		VoC_jal(CS_getpicturehdr)(lo)	|	VoC_push32(REG45,DEFAULT)
0xDF020258,	//0x0dee		VoC_pop32(REG45,DEFAULT)	|	VoC_jal(CS_getpicturehdr)(hi)
0x02146C04,	//0x0df0		VoC_bez16_d(H263_getheader_ez_errorstate,0x214)
0xE5CBE0A4,	//0x0df2		VoC_jump(H263_getheader_end)	|	VoC_movreg16(REG4,REG5,DEFAULT)
		//0x0df4		H263_getheader_ez_errorstate
0x06D46C0A,	//0x0df4		VoC_bez16_d(H263_getheader_end,0x6d4)
0x7FF90AC4,	//0x0df6		VoC_lw16i(REG4,0xfffffff9)
0x1504FFC0,	//0x0df8		VoC_sw16_d(REG4,0x214)(lo)	|	VoC_NOP
0xE0A40214,	//0x0dfa		VoC_movreg16(REG4,REG5,DEFAULT)	|	VoC_sw16_d(REG4,0x214)(hi)
0xFFC07FC0,	//0x0dfc		VoC_NAD(IN_PARALLEL)	|	VoC_NOP
		//0x0dfe		H263_getheader_end
0x02021504,	//0x0dfe		VoC_sw16_d(REG4,0x202)
0x02013C24,	//0x0e00		VoC_bngt16_rd(H263_getgobhrd,REG4,0x201)
0x144A2B00,	//0x0e02		VoC_jump_lg(H263_get_I_P_MBs_end)
		//0x0e04		H263_getgobhrd
0x62C8E242,	//0x0e04		VoC_rb_i(REG4,0x2,DEFAULT)	|	VoC_lbinc_p(REG2)
0x62D5E010,	//0x0e06		VoC_rb_i(REG5,0x5,DEFAULT)	|	VoC_lw16i_short(REG0,0x1,IN_PARALLEL)
0x6C0DE001,	//0x0e08		VoC_bez16_d(H263_getgobheader_00,0x215)(lo)	|	VoC_lw16i_short(REG1,0x0,IN_PARALLEL)
0x409C0215,	//0x0e0a		VoC_be16_rd(H263_getgobheader_00,REG4,0x6ca)(lo)	|	VoC_bez16_d(H263_getgobheader_00,0x215)(hi)
0x6E0506CA,	//0x0e0c		VoC_bnez16_d(H263_getgobheader_01,0x6d2)(lo)	|	VoC_be16_rd(H263_getgobheader_00,REG4,0x6ca)(hi)
0x150006D2,	//0x0e0e		VoC_sw16_d(REG0,0x6d2)(lo)	|	VoC_bnez16_d(H263_getgobheader_01,0x6d2)(hi)
0xE5C506D2,	//0x0e10		VoC_jump(H263_getgobheader_00)	|	VoC_sw16_d(REG0,0x6d2)(hi)
		//0x0e12		H263_getgobheader_01
0x06D24420,	//0x0e12		VoC_bne16_rd(H263_getgobheader_00,REG0,0x6d2)
0x06D21501,	//0x0e14		VoC_sw16_d(REG1,0x6d2)
		//0x0e16		H263_getgobheader_00
0x06CA1504,	//0x0e16		VoC_sw16_d(REG4,0x6ca)
0x06D71505,	//0x0e18		VoC_sw16_d(REG5,0x6d7)
0x02151501,	//0x0e1a		VoC_sw16_d(REG1,0x215)
0x0C421501,	//0x0e1c		VoC_sw16_d(REG1,0xc42)
0x02021401,	//0x0e1e		VoC_lw16_d(REG1,0x202)
0x0200080B,	//0x0e20		VoC_mult16_rd(REG3,REG1,0x200)
0x0C481580,	//0x0e22		VoC_sw32_d(REG01,0xc48)
0x1503FFC0,	//0x0e24		VoC_sw16_d(REG3,0xc38)(lo)	|	VoC_NOP
0xFFC00C38,	//0x0e26		VoC_NAD	|	VoC_sw16_d(REG3,0xc38)(hi)
		//0x0e28		H263_nz_code_tmp
0x0C426C08,	//0x0e28		VoC_bez16_d(H263_ez_gobheader_read,0xc42)
0xFFC0F000,	//0x0e2a		VoC_NOP	|	VoC_lw16i_short(REG0,0x0,DEFAULT)
0x0C421500,	//0x0e2c		VoC_sw16_d(REG0,0xc42)
0xFFC065D8,	//0x0e2e		VoC_NAD(IN_PARALLEL)	|	VoC_jump(H263_read_cod)
		//0x0e30		H263_ez_gobheader_read
0x00001805,	//0x0e30		VoC_lw16i_set_inc(REG1,0x0,0x1)
0x0C381400,	//0x0e32		VoC_lw16_d(REG0,0xc38)
0x02001403,	//0x0e34		VoC_lw16_d(REG3,0x200)
0xE0046005,	//0x0e36		VoC_lw16i_short(REG4,0x0,IN_PARALLEL)	|	VoC_movreg16(REG5,REG0,DEFAULT)
		//0x0e38		H263_xypos_MBA_loop
0xF6A0435D,	//0x0e38		VoC_movreg16(REG0,REG5,IN_PARALLEL)	|	VoC_sub16_rr(REG5,REG5,REG3,DEFAULT)
0x02004820,	//0x0e3a		VoC_blt16_rd(H263_xypos_MBA_loop_end,REG0,0x200)
0xE5FBDE08,	//0x0e3c		VoC_jump(H263_xypos_MBA_loop)	|	VoC_inc_p(REG1,DEFAULT)
		//0x0e3e		H263_xypos_MBA_loop_end
0x0C481580,	//0x0e3e		VoC_sw32_d(REG01,0xc48)
0x0E4631C0,	//0x0e40		VoC_bnez16_r(H263_read_cod,REG0)
0x0E463181,	//0x0e42		VoC_bez16_r(H263_read_cod,REG1)
0x02151504,	//0x0e44		VoC_sw16_d(REG4,0x215)
		//0x0e46		H263_read_cod
0xE0017020,	//0x0e46		VoC_lw16i_short(REG1,0x0,IN_PARALLEL)	|	VoC_lw16i_short(REG0,0x1,DEFAULT)
0x06D24480,	//0x0e48		VoC_bne16_rd(H263_PCT_INTER_ne_pict_type,REG0,0x6d2)
0xE2C4E242,	//0x0e4a		VoC_rb_i(REG4,0x1,DEFAULT)	|	VoC_lbinc_p(REG2)
0x1504FFC0,	//0x0e4c		VoC_sw16_d(REG4,0xc39)(lo)	|	VoC_NOP
0xE5C30C39,	//0x0e4e		VoC_jump(H263_PCT_INTER_ne_pict_type_end)	|	VoC_sw16_d(REG4,0xc39)(hi)
		//0x0e50		H263_PCT_INTER_ne_pict_type
0x0C391501,	//0x0e50		VoC_sw16_d(REG1,0xc39)
		//0x0e52		H263_PCT_INTER_ne_pict_type_end
0x0C391400,	//0x0e52		VoC_lw16_d(REG0,0xc39)
0x0FB831C0,	//0x0e54		VoC_bnez16_r(H263_nez_COD,REG0)
0x06D26E2A,	//0x0e56		VoC_bnez16_d(H263_PCT_INTRA_ne_pict_type,0x6d2)
0x62E4E242,	//0x0e58		VoC_rb_i(REG4,0x9,DEFAULT)	|	VoC_lbinc_p(REG2)
0x35A0E010,	//0x0e5a		VoC_bne16_rr(H263_getMCBPCintra_code_ne_1,REG4,REG0)(lo)	|	VoC_lw16i_short(REG0,0x1,IN_PARALLEL)
0x0A850E62,	//0x0e5c		VoC_lw16i(REG5,0xff)(lo)	|	VoC_bne16_rr(H263_getMCBPCintra_code_ne_1,REG4,REG0)(hi)
0xE2A400FF,	//0x0e5e		VoC_rbinc_i(REG4,0x9,DEFAULT)	|	VoC_lw16i(REG5,0xff)(hi)
0xFFC065DC,	//0x0e60		VoC_NAD(IN_PARALLEL)	|	VoC_jump(H263_getMCBPCintra_end)
		//0x0e62		H263_getMCBPCintra_code_ne_1
0xE0057101,	//0x0e62		VoC_lw16i_short(REG5,0x0,IN_PARALLEL)	|	VoC_lw16i_short(REG1,0x8,DEFAULT)
0x0E6A348C,	//0x0e64		VoC_bngt16_rr(H263_getMCBPCintra_code_nlt_8,REG1,REG4)
0x06C61500,	//0x0e66		VoC_sw16_d(REG0,0x6c6)
0xFFC065D4,	//0x0e68		VoC_NAD(IN_PARALLEL)	|	VoC_jump(H263_getMCBPCintra_end)
		//0x0e6a		H263_getMCBPCintra_code_nlt_8
0xF8F1781C,	//0x0e6a		VoC_shr16_ri(REG1,0xfffffffe,IN_PARALLEL)	|	VoC_shr16_ri(REG4,0x3,DEFAULT)
0x0E72340C,	//0x0e6c		VoC_bgt16_rr(H263_getMCBPCintra_code_lt_32,REG1,REG4)
0xE0356286,	//0x0e6e		VoC_lw16i_short(REG5,0x3,IN_PARALLEL)	|	VoC_rbinc_i(REG6,0x1,DEFAULT)
0xE5CBFFC0,	//0x0e70		VoC_jump(H263_getMCBPCintra_end)	|	VoC_NOP
		//0x0e72		H263_getMCBPCintra_code_lt_32
0x405A0A80,	//0x0e72		VoC_lw16i(REG0,0x405a)
0x0A81C020,	//0x0e74		VoC_lw16i(REG1,0xff)(lo)	|	VoC_add16_rr(REG0,REG0,REG4,DEFAULT)
0xD80500FF,	//0x0e76		VoC_lw16_p(REG5,REG0,DEFAULT)	|	VoC_lw16i(REG1,0xff)(hi)
0xF8456429,	//0x0e78		VoC_shr16_ri(REG5,0x8,IN_PARALLEL)	|	VoC_and16_rr(REG1,REG5,DEFAULT)
0xFFC06308,	//0x0e7a		VoC_NAD(IN_PARALLEL)	|	VoC_rbinc_r(REG4,REG1,DEFAULT)
		//0x0e7c		H263_getMCBPCintra_end
0x0C3D1505,	//0x0e7c		VoC_sw16_d(REG5,0xc3d)
0x0EB62B00,	//0x0e7e		VoC_jump_lg(H263_PCT_INTRA_ne_pict_type_end)
		//0x0e80		H263_PCT_INTRA_ne_pict_type
0x6284E242,	//0x0e80		VoC_rbinc_i(REG4,0x1,DEFAULT)	|	VoC_lbinc_p(REG2)
0xE2E4E010,	//0x0e82		VoC_rb_i(REG4,0x9,DEFAULT)	|	VoC_lw16i_short(REG0,0x1,IN_PARALLEL)
0x0E8A35A0,	//0x0e84		VoC_bne16_rr(H263_getMCBPC_code_ne_1,REG4,REG0)
0x00FF0A85,	//0x0e86		VoC_lw16i(REG5,0xff)
0xE5F3E2A4,	//0x0e88		VoC_jump(H263_getMCBPCintra_end)	|	VoC_rbinc_i(REG4,0x9,DEFAULT)
		//0x0e8a		H263_getMCBPC_code_ne_1
0xE00562F4,	//0x0e8a		VoC_lw16i_short(REG5,0x0,IN_PARALLEL)	|	VoC_rb_i(REG4,0xd,DEFAULT)
0x0E9231C4,	//0x0e8c		VoC_bnez16_r(H263_getMCBPC_nez_code,REG4)
0x06C61500,	//0x0e8e		VoC_sw16_d(REG0,0x6c6)
0x0EB42B00,	//0x0e90		VoC_jump_lg(H263_getMCBPC_end)
		//0x0e92		H263_getMCBPC_nez_code
0xE10178A0,	//0x0e92		VoC_lw16i_short(REG1,0x10,IN_PARALLEL)	|	VoC_shr16_ri(REG0,0xfffffff4,DEFAULT)
0x0E983404,	//0x0e94		VoC_bgt16_rr(H263_getMCBPC_code_lt_4096,REG0,REG4)
0xE5DDE286,	//0x0e96		VoC_jump(H263_getMCBPC_end)	|	VoC_rbinc_i(REG6,0x1,DEFAULT)
		//0x0e98		H263_getMCBPC_code_lt_4096
0x340CE242,	//0x0e98		VoC_bgt16_rr(H263_getMCBPC_code_lt_16,REG1,REG4)(lo)	|	VoC_lbinc_p(REG2)
0x0A800EA8,	//0x0e9a		VoC_lw16i(REG0,0x407a)(lo)	|	VoC_bgt16_rr(H263_getMCBPC_code_lt_16,REG1,REG4)(hi)
0x7824407A,	//0x0e9c		VoC_shr16_ri(REG4,0x4,DEFAULT)	|	VoC_lw16i(REG0,0x407a)(hi)
0x35A1E011,	//0x0e9e		VoC_bne16_rr(H263_getMCBPC_MCBPCtab0_ne_pos1,REG4,REG1)(lo)	|	VoC_lw16i_short(REG1,0x1,IN_PARALLEL)
0x0A850EA5,	//0x0ea0		VoC_lw16i(REG5,0xff)(lo)	|	VoC_bne16_rr(H263_getMCBPC_MCBPCtab0_ne_pos1,REG4,REG1)(hi)
0xF12100FF,	//0x0ea2		VoC_lw16i_short(REG1,0x9,DEFAULT)	|	VoC_lw16i(REG5,0xff)(hi)
0xC020E5CF,	//0x0ea4		VoC_add16_rr(REG0,REG0,REG4,DEFAULT)	|	VoC_jump(H263_getMCBPC_MCBPCtab0_pos1_do)
		//0x0ea5		H263_getMCBPC_MCBPCtab0_ne_pos1
0xFFC065C8,	//0x0ea6		VoC_NAD(IN_PARALLEL)	|	VoC_jump(H263_getMCBPC_code_lt_16_end)
		//0x0ea8		H263_getMCBPC_code_lt_16
0x417A0A80,	//0x0ea8		VoC_lw16i(REG0,0x417a)
0xE0834020,	//0x0eaa		VoC_lw16i_short(REG3,0x8,IN_PARALLEL)	|	VoC_add16_rr(REG0,REG0,REG4,DEFAULT)
0xFFC04218,	//0x0eac		VoC_NAD(IN_PARALLEL)	|	VoC_sub16_rr(REG0,REG0,REG3,DEFAULT)
		//0x0eae		H263_getMCBPC_code_lt_16_end
0x00FF0A81,	//0x0eae		VoC_lw16i(REG1,0xff)
0x6429D805,	//0x0eb0		VoC_and16_rr(REG1,REG5,DEFAULT)	|	VoC_lw16_p(REG5,REG0,DEFAULT)
0xE308F845,	//0x0eb2		VoC_rbinc_r(REG4,REG1,DEFAULT)	|	VoC_shr16_ri(REG5,0x8,IN_PARALLEL)
		//0x0eb3		H263_getMCBPC_MCBPCtab0_pos1_do
		//0x0eb4		H263_getMCBPC_end
0x0C3D1505,	//0x0eb4		VoC_sw16_d(REG5,0xc3d)
		//0x0eb6		H263_PCT_INTRA_ne_pict_type_end
0x06C66C04,	//0x0eb6		VoC_bez16_d(H263_ez_fault_00,0x6c6)
0x0DAF2B00,	//0x0eb8		VoC_jump_lg(H263_resync)
		//0x0eba		H263_ez_fault_00
0x00FF0A80,	//0x0eba		VoC_lw16i(REG0,0xff)
0x0EC035A8,	//0x0ebc		VoC_bne16_rr(H263_MCBPC_ne_255,REG5,REG0)
0x0E462B00,	//0x0ebe		VoC_jump_lg(H263_read_cod)
		//0x0ec0		H263_MCBPC_ne_255
0x00071605,	//0x0ec0		VoC_and16_ri(REG5,0x7)
0xE05177E0,	//0x0ec2		VoC_lw16i_short(REG1,0x5,IN_PARALLEL)	|	VoC_lw16i_short(REG0,0xffffffff,DEFAULT)
0x0ECC3429,	//0x0ec4		VoC_bgt16_rr(H263_Mode_default_00,REG5,REG1)
0xE0134540,	//0x0ec6		VoC_lw16i_short(REG3,0x1,IN_PARALLEL)	|	VoC_mult16_rr(REG0,REG5,REG0,DEFAULT)
0x0C411505,	//0x0ec8		VoC_sw16_d(REG5,0xc41)
0xE5C4FE03,	//0x0eca		VoC_jump(H263_switch_Mode_end_00)	|	VoC_shr16_rr(REG3,REG0,DEFAULT)
		//0x0ecc		H263_Mode_default_00
0x0C411505,	//0x0ecc		VoC_sw16_d(REG5,0xc41)
0xE242F003,	//0x0ece		VoC_lbinc_p(REG2)	|	VoC_lw16i_short(REG3,0x0,DEFAULT)
		//0x0ecf		H263_switch_Mode_end_00
0x0C511503,	//0x0ed0		VoC_sw16_d(REG3,0xc51)
0xE02062D8,	//0x0ed2		VoC_lw16i_short(REG0,0x2,IN_PARALLEL)	|	VoC_rb_i(REG4,0x6,DEFAULT)
0x0EDC3484,	//0x0ed4		VoC_bngt16_rr(H263_getCBPY_code_nlt_2,REG0,REG4)
0xE01077E5,	//0x0ed6		VoC_lw16i_short(REG0,0x1,IN_PARALLEL)	|	VoC_lw16i_short(REG5,0xffffffff,DEFAULT)
0x1500FFC0,	//0x0ed8		VoC_sw16_d(REG0,0x6c6)(lo)	|	VoC_NOP
0xE5D306C6,	//0x0eda		VoC_jump(H263_getCBPY_end)	|	VoC_sw16_d(REG0,0x6c6)(hi)
		//0x0edc		H263_getCBPY_code_nlt_2
0x00300A81,	//0x0edc		VoC_lw16i(REG1,0x30)
0x0EE4340C,	//0x0ede		VoC_bgt16_rr(H263_getCBPY_code_lt_48,REG1,REG4)
0xE288F005,	//0x0ee0		VoC_rbinc_i(REG4,0x2,DEFAULT)	|	VoC_lw16i_short(REG5,0x0,DEFAULT)
0xFFC065CC,	//0x0ee2		VoC_NAD(IN_PARALLEL)	|	VoC_jump(H263_getCBPY_end)
		//0x0ee4		H263_getCBPY_code_lt_48
0x42900A80,	//0x0ee4		VoC_lw16i(REG0,0x4290)
0x0A81C020,	//0x0ee6		VoC_lw16i(REG1,0xff)(lo)	|	VoC_add16_rr(REG0,REG0,REG4,DEFAULT)
0xD80500FF,	//0x0ee8		VoC_lw16_p(REG5,REG0,DEFAULT)	|	VoC_lw16i(REG1,0xff)(hi)
0xF8456429,	//0x0eea		VoC_shr16_ri(REG5,0x8,IN_PARALLEL)	|	VoC_and16_rr(REG1,REG5,DEFAULT)
0xFFC06308,	//0x0eec		VoC_NAD(IN_PARALLEL)	|	VoC_rbinc_r(REG4,REG1,DEFAULT)
		//0x0eee		H263_getCBPY_end
0x0C3E1505,	//0x0eee		VoC_sw16_d(REG5,0xc3e)
0xE0117300,	//0x0ef0		VoC_lw16i_short(REG1,0x1,IN_PARALLEL)	|	VoC_lw16i_short(REG0,0x18,DEFAULT)
0x0C512800,	//0x0ef2		VoC_and16_rd(REG0,0xc51)
0x0EFA3180,	//0x0ef4		VoC_bez16_r(H263_ez_ModeBitand0x18_03,REG0)
0x000F1705,	//0x0ef6		VoC_xor16_ri(REG5,0xf)
0xFFC065CA,	//0x0ef8		VoC_NAD(IN_PARALLEL)	|	VoC_jump(H263_nez_ModeBitand0x18)
		//0x0efa		H263_ez_ModeBitand0x18_03
0x0C511400,	//0x0efa		VoC_lw16_d(REG0,0xc51)
0x00241600,	//0x0efc		VoC_and16_ri(REG0,0x24)
0x0F023180,	//0x0efe		VoC_bez16_r(H263_nez_ModeBitand0x18,REG0)
0x06C61501,	//0x0f00		VoC_sw16_d(REG1,0x6c6)
		//0x0f02		H263_nez_ModeBitand0x18
0x0C3D1401,	//0x0f02		VoC_lw16_d(REG1,0xc3d)
0xF82178F5,	//0x0f04		VoC_shr16_ri(REG1,0x4,IN_PARALLEL)	|	VoC_shr16_ri(REG5,0xfffffffe,DEFAULT)
0x0A80E44D,	//0x0f06		VoC_lw16i(REG0,0x32)(lo)	|	VoC_or16_rr(REG5,REG1,DEFAULT)
0x15050032,	//0x0f08		VoC_sw16_d(REG5,0xc40)(lo)	|	VoC_lw16i(REG0,0x32)(hi)
0x28000C40,	//0x0f0a		VoC_and16_rd(REG0,0xc51)(lo)	|	VoC_sw16_d(REG5,0xc40)(hi)
0x31800C51,	//0x0f0c		VoC_bez16_r(H263_ez_ModeBitand0x32,REG0)(lo)	|	VoC_and16_rd(REG0,0xc51)(hi)
0xE2420F2C,	//0x0f0e		VoC_lbinc_p(REG2)	|	VoC_bez16_r(H263_ez_ModeBitand0x32,REG0)(hi)
0xE0106288,	//0x0f10		VoC_lw16i_short(REG0,0x1,IN_PARALLEL)	|	VoC_rbinc_i(REG4,0x2,DEFAULT)
0xE0116420,	//0x0f12		VoC_lw16i_short(REG1,0x1,IN_PARALLEL)	|	VoC_and16_rr(REG0,REG4,DEFAULT)
0xF80C4041,	//0x0f14		VoC_shr16_ri(REG4,0x1,IN_PARALLEL)	|	VoC_add16_rr(REG1,REG1,REG0,DEFAULT)
0x0F1C3184,	//0x0f16		VoC_bez16_r(H263_DQUANT_bit1_ez,REG4)
0x06D70709,	//0x0f18		VoC_add16_rd(REG1,REG1,0x6d7)
0xFFC065C4,	//0x0f1a		VoC_NAD(IN_PARALLEL)	|	VoC_jump(H263_DQ_tab_end)
		//0x0f1c		H263_DQUANT_bit1_ez
0x06D70B09,	//0x0f1c		VoC_sub16_dr(REG1,0x6d7,REG1)
		//0x0f1e		H263_DQ_tab_end
0x0F2434A1,	//0x0f1e		VoC_bngt16_rr(H263_quant_nlt_1,REG4,REG1)
0x1504F021,	//0x0f20		VoC_sw16_d(REG4,0x6c6)(lo)	|	VoC_lw16i_short(REG1,0x1,DEFAULT)
0xE5C706C6,	//0x0f22		VoC_jump(H263_quant_ngt_31)	|	VoC_sw16_d(REG4,0x6c6)(hi)
		//0x0f24		H263_quant_nlt_1
0x348BF3E3,	//0x0f24		VoC_bngt16_rr(H263_quant_ngt_31,REG1,REG3)(lo)	|	VoC_lw16i_short(REG3,0x1f,DEFAULT)
0xF3E10F2A,	//0x0f26		VoC_lw16i_short(REG1,0x1f,DEFAULT)	|	VoC_bngt16_rr(H263_quant_ngt_31,REG1,REG3)(hi)
0x06C61504,	//0x0f28		VoC_sw16_d(REG4,0x6c6)
		//0x0f2a		H263_quant_ngt_31
0x06D71501,	//0x0f2a		VoC_sw16_d(REG1,0x6d7)
		//0x0f2c		H263_ez_ModeBitand0x32
0x00270A80,	//0x0f2c		VoC_lw16i(REG0,0x27)
0x0C512800,	//0x0f2e		VoC_and16_rd(REG0,0xc51)
0x0FB43180,	//0x0f30		VoC_bez16_r(H263_ModeBitand0x27_ez,REG0)
0x00240A80,	//0x0f32		VoC_lw16i(REG0,0x24)
0x0C512800,	//0x0f34		VoC_and16_rd(REG0,0xc51)
0x0F3C3180,	//0x0f36		VoC_bez16_r(H263_ModeBitand0x24_ez,REG0)
0xE0417020,	//0x0f38		VoC_lw16i_short(REG1,0x4,IN_PARALLEL)	|	VoC_lw16i_short(REG0,0x1,DEFAULT)
0xFFC065C5,	//0x0f3a		VoC_NAD(IN_PARALLEL)	|	VoC_jump(H263_ModeBitand0x24_ez_end)
		//0x0f3c		H263_ModeBitand0x24_ez
0xE0017000,	//0x0f3c		VoC_lw16i_short(REG1,0x0,IN_PARALLEL)	|	VoC_lw16i_short(REG0,0x0,DEFAULT)
0xDF40FFC0,	//0x0f3e		VoC_push32(REG01,DEFAULT)	|	VoC_NOP
		//0x0f3f		H263_ModeBitand0x24_ez_end
		//0x0f3f		H263_get_mv_loop_start
0x02D32B80,	//0x0f40		VoC_jal(CS_getTMNMV)
0x0C441503,	//0x0f42		VoC_sw16_d(REG3,0xc44)
0x02D32B80,	//0x0f44		VoC_jal(CS_getTMNMV)
0x0C451503,	//0x0f46		VoC_sw16_d(REG3,0xc45)
0xE0075908,	//0x0f48		VoC_lw16i_short(REG7,0x0,IN_PARALLEL)	|	VoC_lw32_sd(REG01,0x0,DEFAULT)
0x03062B80,	//0x0f4a		VoC_jal(CS_find_pmv)
0x02146C04,	//0x0f4c		VoC_bez16_d(H263_ez_errorstate_00,0x214)
0x144A2B00,	//0x0f4e		VoC_jump_lg(H263_get_I_P_MBs_end)
		//0x0f50		H263_ez_errorstate_00
0x0C461503,	//0x0f50		VoC_sw16_d(REG3,0xc46)
0xE0175908,	//0x0f52		VoC_lw16i_short(REG7,0x1,IN_PARALLEL)	|	VoC_lw32_sd(REG01,0x0,DEFAULT)
0x03062B80,	//0x0f54		VoC_jal(CS_find_pmv)
0x02146C04,	//0x0f56		VoC_bez16_d(H263_ez_errorstate_01,0x214)
0x144A2B00,	//0x0f58		VoC_jump_lg(H263_get_I_P_MBs_end)
		//0x0f5a		H263_ez_errorstate_01
0x0C471503,	//0x0f5a		VoC_sw16_d(REG3,0xc47)
0x0C441406,	//0x0f5c		VoC_lw16_d(REG6,0xc44)
0x0C461407,	//0x0f5e		VoC_lw16_d(REG7,0xc46)
0x03EA2B80,	//0x0f60		VoC_jal(CS_motion_decode)
0x0C441503,	//0x0f62		VoC_sw16_d(REG3,0xc44)
0x0C451406,	//0x0f64		VoC_lw16_d(REG6,0xc45)
0x0C471407,	//0x0f66		VoC_lw16_d(REG7,0xc47)
0x03EA2B80,	//0x0f68		VoC_jal(CS_motion_decode)
0x0C451503,	//0x0f6a		VoC_sw16_d(REG3,0xc45)
0xE0835908,	//0x0f6c		VoC_lw16i_short(REG3,0x8,IN_PARALLEL)	|	VoC_lw32_sd(REG01,0x0,DEFAULT)
0x0C481482,	//0x0f6e		VoC_lw32_d(REG45,0xc48)
0x0C441483,	//0x0f70		VoC_lw32_d(REG67,0xc44)
0xF80E78E4,	//0x0f72		VoC_shr16_ri(REG6,0x1,IN_PARALLEL)	|	VoC_shr16_ri(REG4,0xfffffffc,DEFAULT)
0xF80F78E5,	//0x0f74		VoC_shr16_ri(REG7,0x1,IN_PARALLEL)	|	VoC_shr16_ri(REG5,0xfffffffc,DEFAULT)
0xC17D4134,	//0x0f76		VoC_add16_rr(REG5,REG5,REG7,IN_PARALLEL)	|	VoC_add16_rr(REG4,REG4,REG6,DEFAULT)
0x02001483,	//0x0f78		VoC_lw32_d(REG67,0x200)
0xF8E778E6,	//0x0f7a		VoC_shr16_ri(REG7,0xfffffffc,IN_PARALLEL)	|	VoC_shr16_ri(REG6,0xfffffffc,DEFAULT)
0x0F8231C0,	//0x0f7c		VoC_bnez16_r(H263_nez_k,REG0)
0xC3DF439E,	//0x0f7e		VoC_sub16_rr(REG7,REG7,REG3,IN_PARALLEL)	|	VoC_sub16_rr(REG6,REG6,REG3,DEFAULT)
0xFFC065CE,	//0x0f80		VoC_NAD(IN_PARALLEL)	|	VoC_jump(H263_ez_k)
		//0x0f82		H263_nez_k
0xE0117203,	//0x0f82		VoC_lw16i_short(REG1,0x1,IN_PARALLEL)	|	VoC_lw16i_short(REG3,0x10,DEFAULT)
0xC3DF439E,	//0x0f84		VoC_sub16_rr(REG7,REG7,REG3,IN_PARALLEL)	|	VoC_sub16_rr(REG6,REG6,REG3,DEFAULT)
0xE0834208,	//0x0f86		VoC_lw16i_short(REG3,0x8,IN_PARALLEL)	|	VoC_sub16_rr(REG0,REG0,REG1,DEFAULT)
0xF8F06401,	//0x0f88		VoC_shr16_ri(REG0,0xfffffffe,IN_PARALLEL)	|	VoC_and16_rr(REG1,REG0,DEFAULT)
0xF8E96418,	//0x0f8a		VoC_shr16_ri(REG1,0xfffffffd,IN_PARALLEL)	|	VoC_and16_rr(REG0,REG3,DEFAULT)
0xC145410C,	//0x0f8c		VoC_add16_rr(REG5,REG5,REG0,IN_PARALLEL)	|	VoC_add16_rr(REG4,REG4,REG1,DEFAULT)
		//0x0f8e		H263_ez_k
0x0F973204,	//0x0f8e		VoC_bltz16_r(H263_fault_be_1,REG4)
0x0F973205,	//0x0f90		VoC_bltz16_r(H263_fault_be_1,REG5)
0x0F973426,	//0x0f92		VoC_bgt16_rr(H263_fault_be_1,REG4,REG6)
0x0F97342F,	//0x0f94		VoC_bgt16_rr(H263_fault_be_1,REG5,REG7)
0xF020E5C6,	//0x0f96		VoC_lw16i_short(REG0,0x1,DEFAULT)	|	VoC_jump(H263_fault_be_0)
		//0x0f97		H263_fault_be_1
0x1500FFC0,	//0x0f98		VoC_sw16_d(REG0,0x6c6)(lo)	|	VoC_NOP
0xFFC006C6,	//0x0f9a		VoC_NAD	|	VoC_sw16_d(REG0,0x6c6)(hi)
		//0x0f9c		H263_fault_be_0
0xE0135F00,	//0x0f9c		VoC_lw16i_short(REG3,0x1,IN_PARALLEL)	|	VoC_pop32(REG01,DEFAULT)
0x0C441487,	//0x0f9e		VoC_lw32_d(RL7,0xc44)
0x0C481404,	//0x0fa0		VoC_lw16_d(REG4,0xc48)
0x005C0A85,	//0x0fa2		VoC_lw16i(REG5,0x5c)
0xC11C442E,	//0x0fa4		VoC_add16_rr(REG4,REG4,REG3,IN_PARALLEL)	|	VoC_mult16_rr(REG6,REG0,REG5,DEFAULT)
0x02280A85,	//0x0fa6		VoC_lw16i(REG5,0x228)
0xC01841A6,	//0x0fa8		VoC_add16_rr(REG0,REG0,REG3,IN_PARALLEL)	|	VoC_add16_rr(REG6,REG6,REG4,DEFAULT)
0x06670736,	//0x0faa		VoC_add16_rd(REG6,REG6,0x667)
0xDC6EC1AF,	//0x0fac		VoC_sw16_p(RL7_LO,REG6,DEFAULT)	|	VoC_add16_rr(REG7,REG6,REG5,DEFAULT)
0x3401DC7F,	//0x0fae		VoC_bgt16_rr(H263_ModeBitand0x27_ez,REG0,REG1)(lo)	|	VoC_sw16_p(RL7_HI,REG7,DEFAULT)
0x2B000FB4,	//0x0fb0		VoC_jump_lg(H263_get_mv_loop_start)(lo)	|	VoC_bgt16_rr(H263_ModeBitand0x27_ez,REG0,REG1)(hi)
0xFFC00F3F,	//0x0fb2		VoC_NAD	|	VoC_jump_lg(H263_get_mv_loop_start)(hi)
		//0x0fb4		H263_ModeBitand0x27_ez
0x06C66C20,	//0x0fb4		VoC_bez16_d(H263_nez_COD_end,0x6c6)
0x0DAF2B00,	//0x0fb6		VoC_jump_lg(H263_resync)
		//0x0fb8		H263_nez_COD
0x0C381400,	//0x0fb8		VoC_lw16_d(REG0,0xc38)
0x0C3C4820,	//0x0fba		VoC_blt16_rd(H263_MBA_lt_MBAmax_01,REG0,0xc3c)
0x144A2B00,	//0x0fbc		VoC_jump_lg(H263_get_I_P_MBs_end)
		//0x0fbe		H263_MBA_lt_MBAmax_01
0xE0017020,	//0x0fbe		VoC_lw16i_short(REG1,0x0,IN_PARALLEL)	|	VoC_lw16i_short(REG0,0x1,DEFAULT)
0x06D24420,	//0x0fc0		VoC_bne16_rd(H263_PCT_INTER_ne_pict_type_01,REG0,0x6d2)
0xE284E242,	//0x0fc2		VoC_rbinc_i(REG4,0x1,DEFAULT)	|	VoC_lbinc_p(REG2)
		//0x0fc4		H263_PCT_INTER_ne_pict_type_01
0x0C411501,	//0x0fc4		VoC_sw16_d(REG1,0xc41)
0x0C511500,	//0x0fc6		VoC_sw16_d(REG0,0xc51)
0x0C401501,	//0x0fc8		VoC_sw16_d(REG1,0xc40)
0x0C480703,	//0x0fca		VoC_add16_rd(REG3,REG0,0xc48)
0x02280A84,	//0x0fcc		VoC_lw16i(REG4,0x228)
0x0667071B,	//0x0fce		VoC_add16_rd(REG3,REG3,0x667)
0xDC31C0E4,	//0x0fd0		VoC_sw16_p(REG1,REG3,DEFAULT)	|	VoC_add16_rr(REG4,REG3,REG4,DEFAULT)
0xFFC05C41,	//0x0fd2		VoC_NAD(IN_PARALLEL)	|	VoC_sw16_p(REG1,REG4,DEFAULT)
		//0x0fd4		H263_nez_COD_end
0x0C411400,	//0x0fd4		VoC_lw16_d(REG0,0xc41)
0x0C481401,	//0x0fd6		VoC_lw16_d(REG1,0xc48)
0x0C511405,	//0x0fd8		VoC_lw16_d(REG5,0xc51)
0xE1847023,	//0x0fda		VoC_lw16i_short(REG4,0x18,IN_PARALLEL)	|	VoC_lw16i_short(REG3,0x1,DEFAULT)
0x45AC1505,	//0x0fdc		VoC_sw16_d(REG5,0x45ac)
0xC0596425,	//0x0fde		VoC_add16_rr(REG1,REG1,REG3,IN_PARALLEL)	|	VoC_and16_rr(REG5,REG4,DEFAULT)
0x06C5070C,	//0x0fe0		VoC_add16_rd(REG4,REG1,0x6c5)
0x0FEE3185,	//0x0fe2		VoC_bez16_r(H263_ez_ModeBitand0x18,REG5)
0xE0035C40,	//0x0fe4		VoC_lw16i_short(REG3,0x0,IN_PARALLEL)	|	VoC_sw16_p(REG0,REG4,DEFAULT)
0x06670708,	//0x0fe6		VoC_add16_rd(REG0,REG1,0x667)
0x02280A81,	//0x0fe8		VoC_lw16i(REG1,0x228)
0xDC03C009,	//0x0fea		VoC_sw16_p(REG3,REG0,DEFAULT)	|	VoC_add16_rr(REG1,REG0,REG1,DEFAULT)
0xE5C3DC13,	//0x0fec		VoC_jump(H263_reconstruct_mb)	|	VoC_sw16_p(REG3,REG1,DEFAULT)
		//0x0fee		H263_ez_ModeBitand0x18
0xFFC05C40,	//0x0fee		VoC_NAD(IN_PARALLEL)	|	VoC_sw16_p(REG0,REG4,DEFAULT)
		//0x0ff0		H263_reconstruct_mb
0x0C486A10,	//0x0ff0		VoC_bngtz16_d(H263_ngtz_xpos,0xc48)
0x0C481480,	//0x0ff2		VoC_lw32_d(REG01,0xc48)
0xE10378E0,	//0x0ff4		VoC_lw16i_short(REG3,0x10,IN_PARALLEL)	|	VoC_shr16_ri(REG0,0xfffffffc,DEFAULT)
0xC21878E1,	//0x0ff6		VoC_sub16_rr(REG0,REG0,REG3,IN_PARALLEL)	|	VoC_shr16_ri(REG1,0xfffffffc,DEFAULT)
0x0C526C04,	//0x0ff8		VoC_bez16_d(H263_gtz_xpos_bxby_lowres0,0xc52)
0xF8087809,	//0x0ffa		VoC_shr16_ri(REG0,0x1,IN_PARALLEL)	|	VoC_shr16_ri(REG1,0x1,DEFAULT)
		//0x0ffc		H263_gtz_xpos_bxby_lowres0
0x1580FFC0,	//0x0ffc		VoC_sw32_d(REG01,0xc3a)(lo)	|	VoC_NOP
0xE5CF0C3A,	//0x0ffe		VoC_jump(H263_gtz_xpos)	|	VoC_sw32_d(REG01,0xc3a)(hi)
		//0x1000		H263_ngtz_xpos
0xE0117200,	//0x1000		VoC_lw16i_short(REG1,0x1,IN_PARALLEL)	|	VoC_lw16i_short(REG0,0x10,DEFAULT)
0x06CE0B00,	//0x1002		VoC_sub16_dr(REG0,0x6ce,REG0)
0x0C490B09,	//0x1004		VoC_sub16_dr(REG1,0xc49,REG1)
0x6C04F8E1,	//0x1006		VoC_bez16_d(H263_ngtz_xpos_bxby_lowres0,0xc52)(lo)	|	VoC_shr16_ri(REG1,0xfffffffc,DEFAULT)
0x78090C52,	//0x1008		VoC_shr16_ri(REG1,0x1,DEFAULT)	|	VoC_bez16_d(H263_ngtz_xpos_bxby_lowres0,0xc52)(hi)
0xFFC0F808,	//0x100a		VoC_NOP	|	VoC_shr16_ri(REG0,0x1,IN_PARALLEL)
		//0x100b		H263_ngtz_xpos_bxby_lowres0
0x0C3A1580,	//0x100c		VoC_sw32_d(REG01,0xc3a)
		//0x100e		H263_gtz_xpos
0x0C381400,	//0x100e		VoC_lw16_d(REG0,0xc38)
0x13083140,	//0x1010		VoC_bngtz16_r(H263_ngtz_MBA,REG0)
0x0C486E0E,	//0x1012		VoC_bnez16_d(H263_nez_xpos,0xc48)
0x06661480,	//0x1014		VoC_lw32_d(REG01,0x666)
0x06C41482,	//0x1016		VoC_lw32_d(REG45,0x6c4)
0xF6016020,	//0x1018		VoC_movreg16(REG1,REG0,IN_PARALLEL)	|	VoC_movreg16(REG0,REG1,DEFAULT)
0xF68560A4,	//0x101a		VoC_movreg16(REG5,REG4,IN_PARALLEL)	|	VoC_movreg16(REG4,REG5,DEFAULT)
0x06661580,	//0x101c		VoC_sw32_d(REG01,0x666)
0x06C41582,	//0x101e		VoC_sw32_d(REG45,0x6c4)
		//0x1020		H263_nez_xpos
0x0C3A1405,	//0x1020		VoC_lw16_d(REG5,0xc3a)
0xE013781D,	//0x1022		VoC_lw16i_short(REG3,0x1,IN_PARALLEL)	|	VoC_shr16_ri(REG5,0x3,DEFAULT)
0x0C526E04,	//0x1024		VoC_bnez16_d(H263_nez_xpos_bx_right,0xc52)
0xFFC0780D,	//0x1026		VoC_NAD(IN_PARALLEL)	|	VoC_shr16_ri(REG5,0x1,DEFAULT)
		//0x1028		H263_nez_xpos_bx_right
0x06C5072D,	//0x1028		VoC_add16_rd(REG5,REG5,0x6c5)
0xEFF0415D,	//0x102a		VoC_lw16i_short(REG0,0xffffffff,IN_PARALLEL)	|	VoC_add16_rr(REG5,REG5,REG3,DEFAULT)
0xD855F0A1,	//0x102c		VoC_lw16_p(REG5,REG5,DEFAULT)	|	VoC_lw16i_short(REG1,0x5,DEFAULT)
0x10363429,	//0x102e		VoC_bgt16_rr(H263_Mode_default_01,REG5,REG1)
0x1505C540,	//0x1030		VoC_sw16_d(REG5,0xc41)(lo)	|	VoC_mult16_rr(REG0,REG5,REG0,DEFAULT)
0xFE030C41,	//0x1032		VoC_shr16_rr(REG3,REG0,DEFAULT)	|	VoC_sw16_d(REG5,0xc41)(hi)
0xFFC065C6,	//0x1034		VoC_NAD(IN_PARALLEL)	|	VoC_jump(H263_switch_Mode_end_01)
		//0x1036		H263_Mode_default_01
0x0C411505,	//0x1036		VoC_sw16_d(REG5,0xc41)
0xFFC07003,	//0x1038		VoC_NAD(IN_PARALLEL)	|	VoC_lw16i_short(REG3,0x0,DEFAULT)
		//0x103a		H263_switch_Mode_end_01
0x00270A80,	//0x103a		VoC_lw16i(REG0,0x27)
0x0C511503,	//0x103c		VoC_sw16_d(REG3,0xc51)
0x3183E403,	//0x103e		VoC_bez16_r(H263_ez_ModeBitand0x27,REG3)(lo)	|	VoC_and16_rr(REG3,REG0,DEFAULT)
0xF01E104A,	//0x1040		VoC_lw16i_short(WRAP2,0x0,DEFAULT)	|	VoC_bez16_r(H263_ez_ModeBitand0x27,REG3)(hi)
0xDF465FC2,	//0x1042		VoC_push32(RL6,IN_PARALLEL)	|	VoC_push16(REG2,DEFAULT)
0x09022B80,	//0x1044		VoC_jal(CS_reconstruct)
0xDF065F82,	//0x1046		VoC_pop32(RL6,IN_PARALLEL)	|	VoC_pop16(REG2,DEFAULT)
0xF006713E,	//0x1048		VoC_lw16i_short(INC2,0x1,IN_PARALLEL)	|	VoC_lw16i_short(WRAP2,0x9,DEFAULT)
		//0x104a		H263_ez_ModeBitand0x27
0x0C486E0E,	//0x104a		VoC_bnez16_d(H263_nez_xpos_01,0xc48)
0x06661480,	//0x104c		VoC_lw32_d(REG01,0x666)
0x06C41482,	//0x104e		VoC_lw32_d(REG45,0x6c4)
0xF6016020,	//0x1050		VoC_movreg16(REG1,REG0,IN_PARALLEL)	|	VoC_movreg16(REG0,REG1,DEFAULT)
0xF68560A4,	//0x1052		VoC_movreg16(REG5,REG4,IN_PARALLEL)	|	VoC_movreg16(REG4,REG5,DEFAULT)
0x06661580,	//0x1054		VoC_sw32_d(REG01,0x666)
0x06C41582,	//0x1056		VoC_sw32_d(REG45,0x6c4)
		//0x1058		H263_nez_xpos_01
0xDF465FC2,	//0x1058		VoC_push32(RL6,IN_PARALLEL)	|	VoC_push16(REG2,DEFAULT)
0x1404F01E,	//0x105a		VoC_lw16_d(REG4,0xc52)(lo)	|	VoC_lw16i_short(WRAP2,0x0,DEFAULT)
0x31840C52,	//0x105c		VoC_bez16_r(H263_DEC_Block_lowres0,REG4)(lo)	|	VoC_lw16_d(REG4,0xc52)(hi)
0x148011CE,	//0x105e		VoC_lw32_d(REG01,0xc3a)(lo)	|	VoC_bez16_r(H263_DEC_Block_lowres0,REG4)(hi)
0x0A0F0C3A,	//0x1060		VoC_multf32_rd(RL7,REG1,0x6ce)(lo)	|	VoC_lw32_d(REG01,0xc3a)(hi)
0xFF0306CE,	//0x1062		VoC_movreg32(REG67,REG01,DEFAULT)	|	VoC_multf32_rd(RL7,REG1,0x6ce)(hi)
0xE0017025,	//0x1064		VoC_lw16i_short(REG1,0x0,IN_PARALLEL)	|	VoC_lw16i_short(REG5,0x1,DEFAULT)
0xC9C0FA0F,	//0x1066		VoC_add32_rr(REG01,RL7,REG01,DEFAULT)	|	VoC_shr32_ri(RL7,0x1,DEFAULT)
0x020E0904,	//0x1068		VoC_add32_rd(ACC0,REG01,0x20e)
0x06CE1404,	//0x106a		VoC_lw16_d(REG4,0x6ce)
0xC32CF81C,	//0x106c		VoC_sub16_rr(REG4,REG4,REG5,DEFAULT)	|	VoC_shr16_ri(REG4,0x3,DEFAULT)
0x459C1584,	//0x106e		VoC_sw32_d(ACC0,0x459c)
0x459A1504,	//0x1070		VoC_sw16_d(REG4,0x459a)
0x7A17F80E,	//0x1072		VoC_shr32_ri(RL7,0x2,DEFAULT)	|	VoC_shr16_ri(REG6,0x1,DEFAULT)
0x1404E007,	//0x1074		VoC_lw16_d(REG4,0x6ce)(lo)	|	VoC_lw16i_short(REG7,0x0,IN_PARALLEL)
0xF02506CE,	//0x1076		VoC_lw16i_short(REG5,0x1,DEFAULT)	|	VoC_lw16_d(REG4,0x6ce)(hi)
0xC9DBF824,	//0x1078		VoC_add32_rr(REG67,RL7,REG67,DEFAULT)	|	VoC_shr16_ri(REG4,0x4,DEFAULT)
0x091CC32C,	//0x107a		VoC_add32_rd(ACC0,REG67,0x210)(lo)	|	VoC_sub16_rr(REG4,REG4,REG5,DEFAULT)
0x15040210,	//0x107c		VoC_sw16_d(REG4,0x459b)(lo)	|	VoC_add32_rd(ACC0,REG67,0x210)(hi)
0x1584459B,	//0x107e		VoC_sw32_d(ACC0,0x459e)(lo)	|	VoC_sw16_d(REG4,0x459b)(hi)
0x091C459E,	//0x1080		VoC_add32_rd(ACC0,REG67,0x212)(lo)	|	VoC_sw32_d(ACC0,0x459e)(hi)
0xFFC00212,	//0x1082		VoC_NOP	|	VoC_add32_rd(ACC0,REG67,0x212)(hi)
0x45A01584,	//0x1084		VoC_sw32_d(ACC0,0x45a0)
0x0C511400,	//0x1086		VoC_lw16_d(REG0,0xc51)
0x00181600,	//0x1088		VoC_and16_ri(REG0,0x18)
0x112E3180,	//0x108a		VoC_bez16_r(H263_ez_ModeBitand0x18_01_lowres1,REG0)
0x09300A8E,	//0x108c		VoC_lw16i(RL7_LO,0x930)
0x0AB00A81,	//0x108e		VoC_lw16i(REG1,0xab0)
0x0C300A80,	//0x1090		VoC_lw16i(REG0,0xc30)
0x00400A82,	//0x1092		VoC_lw16i(REG2,0x40)
0xFFC07003,	//0x1094		VoC_NAD(IN_PARALLEL)	|	VoC_lw16i_short(REG3,0x0,DEFAULT)
		//0x1096		H263_idct4x4_loop_start_00
0x112C3481,	//0x1096		VoC_bngt16_rr(H263_intra_block_lowres1_end,REG0,REG1)
0xDFC25F40,	//0x1098		VoC_push16(REG2,IN_PARALLEL)	|	VoC_push32(REG01,DEFAULT)
0xDFCEDFC3,	//0x109a		VoC_push16(RL7_LO,DEFAULT)	|	VoC_push16(REG3,DEFAULT)
0xD812DFC1,	//0x109c		VoC_lw16_p(REG2,REG1,DEFAULT)	|	VoC_push16(REG1,DEFAULT)
0x42750712,	//0x109e		VoC_add16_rd(REG2,REG2,0x4275)
0xDC12FFC0,	//0x10a0		VoC_sw16_p(REG2,REG1,DEFAULT)	|	VoC_NOP
0x10A62C09,	//0x10a2		VoC_loop_i(0x1,0x4)
0x0A0D2B80,	//0x10a4		VoC_jal(CS_H263_4X4_idct_row)
		//0x10a6		VoC_endloop1
0xDF81FFC0,	//0x10a6		VoC_pop16(REG1,DEFAULT)	|	VoC_NAD
0xFFC07111,	//0x10a8		VoC_NAD(IN_PARALLEL)	|	VoC_lw16i_short(INC1,0x8,DEFAULT)
0x10AE2C09,	//0x10aa		VoC_loop_i(0x1,0x4)
0x0A972B80,	//0x10ac		VoC_jal(CS_H263_4X4_idct_col)
		//0x10ae		VoC_endloop1
0xDF8EFFC0,	//0x10ae		VoC_pop16(RL7_LO,DEFAULT)	|	VoC_NAD
0x0A84D908,	//0x10b0		VoC_lw16i(REG4,0xff)(lo)	|	VoC_lw32_sd(REG01,0x0,DEFAULT)
0xE1C000FF,	//0x10b2		VoC_movreg16(REG0,RL7_LO,DEFAULT)	|	VoC_lw16i(REG4,0xff)(hi)
0xF0047051,	//0x10b4		VoC_lw16i_short(INC0,0x1,IN_PARALLEL)	|	VoC_lw16i_short(INC1,0x2,DEFAULT)
0x10C62C09,	//0x10b6		VoC_loop_i(0x1,0x4)
0x59CBD9C9,	//0x10b8		VoC_lw32inc_p(REG67,REG1,DEFAULT)	|	VoC_lw32inc_p(REG23,REG1,DEFAULT)
0x0709DEE3,	//0x10ba		VoC_add16_rd(REG1,REG1,0x4288)(lo)	|	VoC_clipu16_rr(REG3,REG4,IN_PARALLEL)
0x79C34288,	//0x10bc		VoC_shru16_ri(REG3,0xfffffff8,DEFAULT)	|	VoC_add16_rd(REG1,REG1,0x4288)(hi)
0x645ADEE2,	//0x10be		VoC_or16_rr(REG2,REG3,DEFAULT)	|	VoC_clipu16_rr(REG2,REG4,IN_PARALLEL)
0x79C7DEE7,	//0x10c0		VoC_shru16_ri(REG7,0xfffffff8,DEFAULT)	|	VoC_clipu16_rr(REG7,REG4,IN_PARALLEL)
0xE47EDEE6,	//0x10c2		VoC_or16_rr(REG6,REG7,DEFAULT)	|	VoC_clipu16_rr(REG6,REG4,IN_PARALLEL)
0xDC82FFC0,	//0x10c4		VoC_sw16inc_p(REG2,REG0,DEFAULT)	|	VoC_NOP
		//0x10c6		VoC_endloop1
0xE00ADC86,	//0x10c6		VoC_movreg16(ACC1_LO,REG0,DEFAULT)	|	VoC_sw16inc_p(REG6,REG0,DEFAULT)
0x61C6DF83,	//0x10c8		VoC_movreg16(REG6,RL7_LO,DEFAULT)	|	VoC_pop16(REG3,DEFAULT)
0x7085F007,	//0x10ca		VoC_lw16i_short(REG5,0x4,DEFAULT)	|	VoC_lw16i_short(INC3,0x1,IN_PARALLEL)
0x780EE017,	//0x10cc		VoC_shr16_ri(REG6,0x1,DEFAULT)	|	VoC_lw16i_short(REG7,0x1,IN_PARALLEL)
0x7042E030,	//0x10ce		VoC_lw16i_short(REG2,0x2,DEFAULT)	|	VoC_lw16i_short(REG0,0x3,IN_PARALLEL)
0xF00EE011,	//0x10d0		VoC_lw16i_short(RL7_LO,0x0,DEFAULT)	|	VoC_lw16i_short(REG1,0x1,IN_PARALLEL)
0x40000A8F,	//0x10d2		VoC_lw16i(RL7_HI,0x4000)
0x110E3418,	//0x10d4		VoC_bgt16_rr(H263_DMA_UV_BLOCK0,REG3,REG0)
0x459A1404,	//0x10d6		VoC_lw16_d(REG4,0x459a)
0x459C1484,	//0x10d8		VoC_lw32_d(ACC0,0x459c)
0x10FE3518,	//0x10da		VoC_be16_rr(H263_DMA_Y_BLOCK11,REG3,REG0)
0x10F0351A,	//0x10dc		VoC_be16_rr(H263_DMA_Y_BLOCK10,REG3,REG2)
0x10E63519,	//0x10de		VoC_be16_rr(H263_DMA_Y_BLOCK01,REG3,REG1)
0xFFC05E18,	//0x10e0		VoC_NAD(IN_PARALLEL)	|	VoC_inc_p(REG3,DEFAULT)
0x04072B80,	//0x10e2		VoC_jal(H263_Dma_Cmd_Send)
0x11242B00,	//0x10e4		VoC_jump_lg(H263_DMA_ONE_BLOCK_END)
		//0x10e6		H263_DMA_Y_BLOCK01
0x7080DE18,	//0x10e6		VoC_lw16i_short(REG0,0x4,DEFAULT)	|	VoC_inc_p(REG3,DEFAULT)
0xC904E001,	//0x10e8		VoC_add32_rr(ACC0,ACC0,REG01,DEFAULT)	|	VoC_lw16i_short(REG1,0x0,IN_PARALLEL)
0x04132B80,	//0x10ea		VoC_jal(H263_Dma_Last_Cmd_Wait)
0x04072B80,	//0x10ec		VoC_jal(H263_Dma_Cmd_Send)
0x11242B00,	//0x10ee		VoC_jump_lg(H263_DMA_ONE_BLOCK_END)
		//0x10f0		H263_DMA_Y_BLOCK10
0xE0017080,	//0x10f0		VoC_lw16i_short(REG1,0x0,IN_PARALLEL)	|	VoC_lw16i_short(REG0,0x4,DEFAULT)
0x06CE0800,	//0x10f2		VoC_mult16_rd(REG0,REG0,0x6ce)
0xF808DE18,	//0x10f4		VoC_shr16_ri(REG0,0x1,DEFAULT)	|	VoC_inc_p(REG3,DEFAULT)
0xFFC04904,	//0x10f6		VoC_NAD(IN_PARALLEL)	|	VoC_add32_rr(ACC0,ACC0,REG01,DEFAULT)
0x04132B80,	//0x10f8		VoC_jal(H263_Dma_Last_Cmd_Wait)
0x04072B80,	//0x10fa		VoC_jal(H263_Dma_Cmd_Send)
0x11242B00,	//0x10fc		VoC_jump_lg(H263_DMA_ONE_BLOCK_END)
		//0x10fe		H263_DMA_Y_BLOCK11
0xE0017080,	//0x10fe		VoC_lw16i_short(REG1,0x0,IN_PARALLEL)	|	VoC_lw16i_short(REG0,0x4,DEFAULT)
0x06CE0800,	//0x1100		VoC_mult16_rd(REG0,REG0,0x6ce)
0xF808DE18,	//0x1102		VoC_shr16_ri(REG0,0x1,DEFAULT)	|	VoC_inc_p(REG3,DEFAULT)
0xF080C904,	//0x1104		VoC_lw16i_short(REG0,0x4,DEFAULT)	|	VoC_add32_rr(ACC0,ACC0,REG01,DEFAULT)
0xFFC04904,	//0x1106		VoC_NAD(IN_PARALLEL)	|	VoC_add32_rr(ACC0,ACC0,REG01,DEFAULT)
0x04132B80,	//0x1108		VoC_jal(H263_Dma_Last_Cmd_Wait)
0x04072B80,	//0x110a		VoC_jal(H263_Dma_Cmd_Send)
0xFFC065D8,	//0x110c		VoC_NAD(IN_PARALLEL)	|	VoC_jump(H263_DMA_ONE_BLOCK_END)
		//0x110e		H263_DMA_UV_BLOCK0
0x459B1404,	//0x110e		VoC_lw16_d(REG4,0x459b)
0x111C359D,	//0x1110		VoC_bne16_rr(H263_DMA_UV_BLOCK1,REG3,REG5)
0x459E1484,	//0x1112		VoC_lw32_d(ACC0,0x459e)
0xFFC05E18,	//0x1114		VoC_NAD(IN_PARALLEL)	|	VoC_inc_p(REG3,DEFAULT)
0x04132B80,	//0x1116		VoC_jal(H263_Dma_Last_Cmd_Wait)
0x04072B80,	//0x1118		VoC_jal(H263_Dma_Cmd_Send)
0xFFC065CA,	//0x111a		VoC_NAD(IN_PARALLEL)	|	VoC_jump(H263_DMA_ONE_BLOCK_END)
		//0x111c		H263_DMA_UV_BLOCK1
0x45A01484,	//0x111c		VoC_lw32_d(ACC0,0x45a0)
0xFFC05E18,	//0x111e		VoC_NAD(IN_PARALLEL)	|	VoC_inc_p(REG3,DEFAULT)
0x04132B80,	//0x1120		VoC_jal(H263_Dma_Last_Cmd_Wait)
0x04282B80,	//0x1122		VoC_jal(CS_H263_2DDmaOut)
		//0x1124		H263_DMA_ONE_BLOCK_END
0x5F00E14E,	//0x1124		VoC_pop32(REG01,DEFAULT)	|	VoC_movreg16(RL7_LO,ACC1_LO,DEFAULT)
0xC051DF82,	//0x1126		VoC_add16_rr(REG1,REG1,REG2,DEFAULT)	|	VoC_pop16(REG2,IN_PARALLEL)
0x2B00FFC0,	//0x1128		VoC_jump_lg(H263_idct4x4_loop_start_00)(lo)	|	VoC_NOP
0xFFC01096,	//0x112a		VoC_NAD	|	VoC_jump_lg(H263_idct4x4_loop_start_00)(hi)
		//0x112c		H263_intra_block_lowres1_end
0x13042B00,	//0x112c		VoC_jump_lg(H263_nez_ModeBitand0x18_01)
		//0x112e		H263_ez_ModeBitand0x18_01_lowres1
0x09300A8E,	//0x112e		VoC_lw16i(RL7_LO,0x930)
0x0AB00A81,	//0x1130		VoC_lw16i(REG1,0xab0)
0x0C300A80,	//0x1132		VoC_lw16i(REG0,0xc30)
0x00400A82,	//0x1134		VoC_lw16i(REG2,0x40)
0x0C4F1404,	//0x1136		VoC_lw16_d(REG4,0xc4f)
0x00200A85,	//0x1138		VoC_lw16i(REG5,0x20)
0xFFC07003,	//0x113a		VoC_NAD(IN_PARALLEL)	|	VoC_lw16i_short(REG3,0x0,DEFAULT)
		//0x113c		H263_idct4X4_loop_start_01
0x11CC3481,	//0x113c		VoC_bngt16_rr(H263_idct4X4_loop_end_01,REG0,REG1)
0xDF42642C,	//0x113e		VoC_push32(REG45,IN_PARALLEL)	|	VoC_and16_rr(REG4,REG5,DEFAULT)
0xDFC25F40,	//0x1140		VoC_push16(REG2,IN_PARALLEL)	|	VoC_push32(REG01,DEFAULT)
0x3184DFC3,	//0x1142		VoC_bez16_r(H263_skip_interblock,REG4)(lo)	|	VoC_push16(REG3,DEFAULT)
0xDFCE1162,	//0x1144		VoC_push16(RL7_LO,DEFAULT)	|	VoC_bez16_r(H263_skip_interblock,REG4)(hi)
0xDFC1DFC1,	//0x1146		VoC_push16(REG1,DEFAULT)	|	VoC_push16(REG1,DEFAULT)
0x0712D812,	//0x1148		VoC_add16_rd(REG2,REG2,0x4275)(lo)	|	VoC_lw16_p(REG2,REG1,DEFAULT)
0xFFC04275,	//0x114a		VoC_NOP	|	VoC_add16_rd(REG2,REG2,0x4275)(hi)
0xFFC05C12,	//0x114c		VoC_NAD(IN_PARALLEL)	|	VoC_sw16_p(REG2,REG1,DEFAULT)
0x11522C09,	//0x114e		VoC_loop_i(0x1,0x4)
0x0A0D2B80,	//0x1150		VoC_jal(CS_H263_4X4_idct_row)
		//0x1152		VoC_endloop1
0xDF81FFC0,	//0x1152		VoC_pop16(REG1,DEFAULT)	|	VoC_NAD
0xFFC07111,	//0x1154		VoC_NAD(IN_PARALLEL)	|	VoC_lw16i_short(INC1,0x8,DEFAULT)
0x115A2C09,	//0x1156		VoC_loop_i(0x1,0x4)
0x0A972B80,	//0x1158		VoC_jal(CS_H263_4X4_idct_col)
		//0x115a		VoC_endloop1
0xDF81FFC0,	//0x115a		VoC_pop16(REG1,DEFAULT)	|	VoC_NAD
0x7030DF8E,	//0x115c		VoC_lw16i_short(INC0,0x1,DEFAULT)	|	VoC_pop16(RL7_LO,DEFAULT)
0xE1C0F005,	//0x115e		VoC_movreg16(REG0,RL7_LO,DEFAULT)	|	VoC_lw16i_short(INC1,0x1,IN_PARALLEL)
0x08E82B80,	//0x1160		VoC_jal(CS_h263_add_pixels_clamped4_c)
		//0x1162		H263_skip_interblock
0xDF83E1CA,	//0x1162		VoC_pop16(REG3,DEFAULT)	|	VoC_movreg16(ACC1_LO,RL7_LO,DEFAULT)
0x7085E1C6,	//0x1164		VoC_lw16i_short(REG5,0x4,DEFAULT)	|	VoC_movreg16(REG6,RL7_LO,DEFAULT)
0x780EE017,	//0x1166		VoC_shr16_ri(REG6,0x1,DEFAULT)	|	VoC_lw16i_short(REG7,0x1,IN_PARALLEL)
0x7042E030,	//0x1168		VoC_lw16i_short(REG2,0x2,DEFAULT)	|	VoC_lw16i_short(REG0,0x3,IN_PARALLEL)
0xF00EE011,	//0x116a		VoC_lw16i_short(RL7_LO,0x0,DEFAULT)	|	VoC_lw16i_short(REG1,0x1,IN_PARALLEL)
0x40000A8F,	//0x116c		VoC_lw16i(RL7_HI,0x4000)
0x11A83418,	//0x116e		VoC_bgt16_rr(H263_DMA_UV_inter_BLOCK0,REG3,REG0)
0x459A1404,	//0x1170		VoC_lw16_d(REG4,0x459a)
0x459C1484,	//0x1172		VoC_lw32_d(ACC0,0x459c)
0x11983518,	//0x1174		VoC_be16_rr(H263_DMA_Y_inter_BLOCK11,REG3,REG0)
0x118A351A,	//0x1176		VoC_be16_rr(H263_DMA_Y_inter_BLOCK10,REG3,REG2)
0x11803519,	//0x1178		VoC_be16_rr(H263_DMA_Y_inter_BLOCK01,REG3,REG1)
0xFFC05E18,	//0x117a		VoC_NAD(IN_PARALLEL)	|	VoC_inc_p(REG3,DEFAULT)
0x04072B80,	//0x117c		VoC_jal(H263_Dma_Cmd_Send)
0x11BE2B00,	//0x117e		VoC_jump_lg(H263_DMA_ONE_inter_BLOCK_END)
		//0x1180		H263_DMA_Y_inter_BLOCK01
0x7080DE18,	//0x1180		VoC_lw16i_short(REG0,0x4,DEFAULT)	|	VoC_inc_p(REG3,DEFAULT)
0xC904E001,	//0x1182		VoC_add32_rr(ACC0,ACC0,REG01,DEFAULT)	|	VoC_lw16i_short(REG1,0x0,IN_PARALLEL)
0x04132B80,	//0x1184		VoC_jal(H263_Dma_Last_Cmd_Wait)
0x04072B80,	//0x1186		VoC_jal(H263_Dma_Cmd_Send)
0x11BE2B00,	//0x1188		VoC_jump_lg(H263_DMA_ONE_inter_BLOCK_END)
		//0x118a		H263_DMA_Y_inter_BLOCK10
0xE0017080,	//0x118a		VoC_lw16i_short(REG1,0x0,IN_PARALLEL)	|	VoC_lw16i_short(REG0,0x4,DEFAULT)
0x06CE0800,	//0x118c		VoC_mult16_rd(REG0,REG0,0x6ce)
0xF808DE18,	//0x118e		VoC_shr16_ri(REG0,0x1,DEFAULT)	|	VoC_inc_p(REG3,DEFAULT)
0xFFC04904,	//0x1190		VoC_NAD(IN_PARALLEL)	|	VoC_add32_rr(ACC0,ACC0,REG01,DEFAULT)
0x04132B80,	//0x1192		VoC_jal(H263_Dma_Last_Cmd_Wait)
0x04072B80,	//0x1194		VoC_jal(H263_Dma_Cmd_Send)
0x11BE2B00,	//0x1196		VoC_jump_lg(H263_DMA_ONE_inter_BLOCK_END)
		//0x1198		H263_DMA_Y_inter_BLOCK11
0xE0017080,	//0x1198		VoC_lw16i_short(REG1,0x0,IN_PARALLEL)	|	VoC_lw16i_short(REG0,0x4,DEFAULT)
0x06CE0800,	//0x119a		VoC_mult16_rd(REG0,REG0,0x6ce)
0xF808DE18,	//0x119c		VoC_shr16_ri(REG0,0x1,DEFAULT)	|	VoC_inc_p(REG3,DEFAULT)
0xF080C904,	//0x119e		VoC_lw16i_short(REG0,0x4,DEFAULT)	|	VoC_add32_rr(ACC0,ACC0,REG01,DEFAULT)
0xFFC04904,	//0x11a0		VoC_NAD(IN_PARALLEL)	|	VoC_add32_rr(ACC0,ACC0,REG01,DEFAULT)
0x04132B80,	//0x11a2		VoC_jal(H263_Dma_Last_Cmd_Wait)
0x04072B80,	//0x11a4		VoC_jal(H263_Dma_Cmd_Send)
0xFFC065D8,	//0x11a6		VoC_NAD(IN_PARALLEL)	|	VoC_jump(H263_DMA_ONE_inter_BLOCK_END)
		//0x11a8		H263_DMA_UV_inter_BLOCK0
0x459B1404,	//0x11a8		VoC_lw16_d(REG4,0x459b)
0x11B6359D,	//0x11aa		VoC_bne16_rr(H263_DMA_UV_inter_BLOCK1,REG3,REG5)
0x459E1484,	//0x11ac		VoC_lw32_d(ACC0,0x459e)
0xFFC05E18,	//0x11ae		VoC_NAD(IN_PARALLEL)	|	VoC_inc_p(REG3,DEFAULT)
0x04132B80,	//0x11b0		VoC_jal(H263_Dma_Last_Cmd_Wait)
0x04072B80,	//0x11b2		VoC_jal(H263_Dma_Cmd_Send)
0xFFC065CA,	//0x11b4		VoC_NAD(IN_PARALLEL)	|	VoC_jump(H263_DMA_ONE_inter_BLOCK_END)
		//0x11b6		H263_DMA_UV_inter_BLOCK1
0x45A01484,	//0x11b6		VoC_lw32_d(ACC0,0x45a0)
0xFFC05E18,	//0x11b8		VoC_NAD(IN_PARALLEL)	|	VoC_inc_p(REG3,DEFAULT)
0x04132B80,	//0x11ba		VoC_jal(H263_Dma_Last_Cmd_Wait)
0x04282B80,	//0x11bc		VoC_jal(CS_H263_2DDmaOut)
		//0x11be		H263_DMA_ONE_inter_BLOCK_END
0xDF825F00,	//0x11be		VoC_pop16(REG2,IN_PARALLEL)	|	VoC_pop32(REG01,DEFAULT)
0x7104F00B,	//0x11c0		VoC_lw16i_short(REG4,0x8,DEFAULT)	|	VoC_lw16i_short(ACC1_HI,0x0,DEFAULT)
0xC955E005,	//0x11c2		VoC_add32_rr(ACC1,ACC1,REG45,DEFAULT)	|	VoC_lw16i_short(REG5,0x0,IN_PARALLEL)
0xDF024051,	//0x11c4		VoC_pop32(REG45,IN_PARALLEL)	|	VoC_add16_rr(REG1,REG1,REG2,DEFAULT)
0xF80DE14E,	//0x11c6		VoC_shr16_ri(REG5,0x1,DEFAULT)	|	VoC_movreg16(RL7_LO,ACC1_LO,DEFAULT)
0x2B00FFC0,	//0x11c8		VoC_jump_lg(H263_idct4X4_loop_start_01)(lo)	|	VoC_NOP
0xFFC0113C,	//0x11ca		VoC_NAD	|	VoC_jump_lg(H263_idct4X4_loop_start_01)(hi)
		//0x11cc		H263_idct4X4_loop_end_01
0x13042B00,	//0x11cc		VoC_jump_lg(H263_nez_ModeBitand0x18_01)
		//0x11ce		H263_DEC_Block_lowres0
0x0C3A1480,	//0x11ce		VoC_lw32_d(REG01,0xc3a)
0x06CE0A0F,	//0x11d0		VoC_multf32_rd(RL7,REG1,0x6ce)
0x7105FF03,	//0x11d2		VoC_lw16i_short(REG5,0x8,DEFAULT)	|	VoC_movreg32(REG67,REG01,DEFAULT)
0xC9C0E001,	//0x11d4		VoC_add32_rr(REG01,RL7,REG01,DEFAULT)	|	VoC_lw16i_short(REG1,0x0,IN_PARALLEL)
0x06CE0B2C,	//0x11d6		VoC_sub16_dr(REG4,0x6ce,REG5)
0x020E0904,	//0x11d8		VoC_add32_rd(ACC0,REG01,0x20e)
0x1584F814,	//0x11da		VoC_sw32_d(ACC0,0x459c)(lo)	|	VoC_shr16_ri(REG4,0x2,DEFAULT)
0x1504459C,	//0x11dc		VoC_sw16_d(REG4,0x459a)(lo)	|	VoC_sw32_d(ACC0,0x459c)(hi)
0x780E459A,	//0x11de		VoC_shr16_ri(REG6,0x1,DEFAULT)	|	VoC_sw16_d(REG4,0x459a)(hi)
0x7A17E007,	//0x11e0		VoC_shr32_ri(RL7,0x2,DEFAULT)	|	VoC_lw16i_short(REG7,0x0,IN_PARALLEL)
0x0B24E104,	//0x11e2		VoC_sub16_dr(REG4,0x6ce,REG4)(lo)	|	VoC_lw16i_short(REG4,0x10,IN_PARALLEL)
0x49DB06CE,	//0x11e4		VoC_add32_rr(REG67,RL7,REG67,DEFAULT)	|	VoC_sub16_dr(REG4,0x6ce,REG4)(hi)
0x091CF81C,	//0x11e6		VoC_add32_rd(ACC0,REG67,0x210)(lo)	|	VoC_shr16_ri(REG4,0x3,IN_PARALLEL)
0x091F0210,	//0x11e8		VoC_add32_rd(RL7,REG67,0x212)(lo)	|	VoC_add32_rd(ACC0,REG67,0x210)(hi)
0x15040212,	//0x11ea		VoC_sw16_d(REG4,0x459b)(lo)	|	VoC_add32_rd(RL7,REG67,0x212)(hi)
0x1584459B,	//0x11ec		VoC_sw32_d(ACC0,0x459e)(lo)	|	VoC_sw16_d(REG4,0x459b)(hi)
0x1587459E,	//0x11ee		VoC_sw32_d(RL7,0x45a0)(lo)	|	VoC_sw32_d(ACC0,0x459e)(hi)
0x140045A0,	//0x11f0		VoC_lw16_d(REG0,0xc51)(lo)	|	VoC_sw32_d(RL7,0x45a0)(hi)
0x16000C51,	//0x11f2		VoC_and16_ri(REG0,0x18)(lo)	|	VoC_lw16_d(REG0,0xc51)(hi)
0x31800018,	//0x11f4		VoC_bez16_r(H263_ez_ModeBitand0x18_01_lowres0,REG0)(lo)	|	VoC_and16_ri(REG0,0x18)(hi)
0x0A8E127E,	//0x11f6		VoC_lw16i(RL7_LO,0x930)(lo)	|	VoC_bez16_r(H263_ez_ModeBitand0x18_01_lowres0,REG0)(hi)
0x0A810930,	//0x11f8		VoC_lw16i(REG1,0xab0)(lo)	|	VoC_lw16i(RL7_LO,0x930)(hi)
0x0A800AB0,	//0x11fa		VoC_lw16i(REG0,0xc30)(lo)	|	VoC_lw16i(REG1,0xab0)(hi)
0x0A820C30,	//0x11fc		VoC_lw16i(REG2,0x40)(lo)	|	VoC_lw16i(REG0,0xc30)(hi)
0xF0030040,	//0x11fe		VoC_lw16i_short(REG3,0x0,DEFAULT)	|	VoC_lw16i(REG2,0x40)(hi)
		//0x1200		H263_idct_loop_start_00
0x127C3481,	//0x1200		VoC_bngt16_rr(H263_idct_loop_end_00,REG0,REG1)
0xDFC25F40,	//0x1202		VoC_push16(REG2,IN_PARALLEL)	|	VoC_push32(REG01,DEFAULT)
0xDFCEDFC3,	//0x1204		VoC_push16(RL7_LO,DEFAULT)	|	VoC_push16(REG3,DEFAULT)
0x0C292B80,	//0x1206		VoC_jal(CS_idct)
0xD908DF8E,	//0x1208		VoC_lw32_sd(REG01,0x0,DEFAULT)	|	VoC_pop16(RL7_LO,DEFAULT)
0x00FF0A84,	//0x120a		VoC_lw16i(REG4,0xff)
0xF0097030,	//0x120c		VoC_lw16i_short(INC1,0x2,IN_PARALLEL)	|	VoC_lw16i_short(INC0,0x1,DEFAULT)
0x2C20E1C0,	//0x120e		VoC_loop_i(0x0,0x10)(lo)	|	VoC_movreg16(REG0,RL7_LO,DEFAULT)
0xD9C9121C,	//0x1210		VoC_lw32inc_p(REG23,REG1,DEFAULT)	|	VoC_loop_i(0x0,0x10)(hi)
0xDEE359CB,	//0x1212		VoC_clipu16_rr(REG3,REG4,IN_PARALLEL)	|	VoC_lw32inc_p(REG67,REG1,DEFAULT)
0xDEE279C3,	//0x1214		VoC_clipu16_rr(REG2,REG4,IN_PARALLEL)	|	VoC_shru16_ri(REG3,0xfffffff8,DEFAULT)
0xDEE7645A,	//0x1216		VoC_clipu16_rr(REG7,REG4,IN_PARALLEL)	|	VoC_or16_rr(REG2,REG3,DEFAULT)
0xDEE679C7,	//0x1218		VoC_clipu16_rr(REG6,REG4,IN_PARALLEL)	|	VoC_shru16_ri(REG7,0xfffffff8,DEFAULT)
0xDC82E47E,	//0x121a		VoC_sw16inc_p(REG2,REG0,DEFAULT)	|	VoC_or16_rr(REG6,REG7,DEFAULT)
		//0x121c		VoC_endloop0
0xE00ADC86,	//0x121c		VoC_movreg16(ACC1_LO,REG0,DEFAULT)	|	VoC_sw16inc_p(REG6,REG0,DEFAULT)
0x61C6DF83,	//0x121e		VoC_movreg16(REG6,RL7_LO,DEFAULT)	|	VoC_pop16(REG3,DEFAULT)
0x7105F007,	//0x1220		VoC_lw16i_short(REG5,0x8,DEFAULT)	|	VoC_lw16i_short(INC3,0x1,IN_PARALLEL)
0x780EE027,	//0x1222		VoC_shr16_ri(REG6,0x1,DEFAULT)	|	VoC_lw16i_short(REG7,0x2,IN_PARALLEL)
0x7041E032,	//0x1224		VoC_lw16i_short(REG1,0x2,DEFAULT)	|	VoC_lw16i_short(REG2,0x3,IN_PARALLEL)
0xF00EE010,	//0x1226		VoC_lw16i_short(RL7_LO,0x0,DEFAULT)	|	VoC_lw16i_short(REG0,0x1,IN_PARALLEL)
0x40000A8F,	//0x1228		VoC_lw16i(RL7_HI,0x4000)
0x125D341A,	//0x122a		VoC_bgt16_rr(H263_DMA_LOWRES0_UV_BLOCK0,REG3,REG2)
0x459A1404,	//0x122c		VoC_lw16_d(REG4,0x459a)
0x459C1484,	//0x122e		VoC_lw32_d(ACC0,0x459c)
0x123831C3,	//0x1230		VoC_bnez16_r(H263_DMA_LOWRES0_Y_BLOCK01,REG3)
0xFFC05E18,	//0x1232		VoC_NAD(IN_PARALLEL)	|	VoC_inc_p(REG3,DEFAULT)
0x04072B80,	//0x1234		VoC_jal(H263_Dma_Cmd_Send)
0x12742B00,	//0x1236		VoC_jump_lg(H263_DMA_LOWRES0_Intra_BLOCK_END)
		//0x1238		H263_DMA_LOWRES0_Y_BLOCK01
0x12443598,	//0x1238		VoC_bne16_rr(H263_DMA_LOWRES0_Y_BLOCK10,REG3,REG0)
0x7100DE18,	//0x123a		VoC_lw16i_short(REG0,0x8,DEFAULT)	|	VoC_inc_p(REG3,DEFAULT)
0xC904E001,	//0x123c		VoC_add32_rr(ACC0,ACC0,REG01,DEFAULT)	|	VoC_lw16i_short(REG1,0x0,IN_PARALLEL)
0x04132B80,	//0x123e		VoC_jal(H263_Dma_Last_Cmd_Wait)
0x04072B80,	//0x1240		VoC_jal(H263_Dma_Cmd_Send)
0x12742B00,	//0x1242		VoC_jump_lg(H263_DMA_LOWRES0_Intra_BLOCK_END)
		//0x1244		H263_DMA_LOWRES0_Y_BLOCK10
0x0800F100,	//0x1244		VoC_mult16_rd(REG0,REG0,0x6ce)(lo)	|	VoC_lw16i_short(REG0,0x8,DEFAULT)
0x359906CE,	//0x1246		VoC_bne16_rr(H263_DMA_LOWRES0_Y_BLOCK11,REG3,REG1)(lo)	|	VoC_mult16_rd(REG0,REG0,0x6ce)(hi)
0x5E181252,	//0x1248		VoC_inc_p(REG3,DEFAULT)	|	VoC_bne16_rr(H263_DMA_LOWRES0_Y_BLOCK11,REG3,REG1)(hi)
0xC904E001,	//0x124a		VoC_add32_rr(ACC0,ACC0,REG01,DEFAULT)	|	VoC_lw16i_short(REG1,0x0,IN_PARALLEL)
0x04132B80,	//0x124c		VoC_jal(H263_Dma_Last_Cmd_Wait)
0x04072B80,	//0x124e		VoC_jal(H263_Dma_Cmd_Send)
0x12742B00,	//0x1250		VoC_jump_lg(H263_DMA_LOWRES0_Intra_BLOCK_END)
		//0x1252		H263_DMA_LOWRES0_Y_BLOCK11
0xE0015E18,	//0x1252		VoC_lw16i_short(REG1,0x0,IN_PARALLEL)	|	VoC_inc_p(REG3,DEFAULT)
0xF100C904,	//0x1254		VoC_lw16i_short(REG0,0x8,DEFAULT)	|	VoC_add32_rr(ACC0,ACC0,REG01,DEFAULT)
0xFFC04904,	//0x1256		VoC_NAD(IN_PARALLEL)	|	VoC_add32_rr(ACC0,ACC0,REG01,DEFAULT)
0x04132B80,	//0x1258		VoC_jal(H263_Dma_Last_Cmd_Wait)
0x04072B80,	//0x125a		VoC_jal(H263_Dma_Cmd_Send)
0xF080E5D8,	//0x125c		VoC_lw16i_short(REG0,0x4,DEFAULT)	|	VoC_jump(H263_DMA_LOWRES0_Intra_BLOCK_END)
		//0x125d		H263_DMA_LOWRES0_UV_BLOCK0
0x459B1404,	//0x125e		VoC_lw16_d(REG4,0x459b)
0x126C3598,	//0x1260		VoC_bne16_rr(H263_DMA_LOWRES0_UV_BLOCK1,REG3,REG0)
0x459E1484,	//0x1262		VoC_lw32_d(ACC0,0x459e)
0xFFC05E18,	//0x1264		VoC_NAD(IN_PARALLEL)	|	VoC_inc_p(REG3,DEFAULT)
0x04132B80,	//0x1266		VoC_jal(H263_Dma_Last_Cmd_Wait)
0x04072B80,	//0x1268		VoC_jal(H263_Dma_Cmd_Send)
0xFFC065CA,	//0x126a		VoC_NAD(IN_PARALLEL)	|	VoC_jump(H263_DMA_LOWRES0_Intra_BLOCK_END)
		//0x126c		H263_DMA_LOWRES0_UV_BLOCK1
0x45A01484,	//0x126c		VoC_lw32_d(ACC0,0x45a0)
0xFFC05E18,	//0x126e		VoC_NAD(IN_PARALLEL)	|	VoC_inc_p(REG3,DEFAULT)
0x04132B80,	//0x1270		VoC_jal(H263_Dma_Last_Cmd_Wait)
0x04282B80,	//0x1272		VoC_jal(CS_H263_2DDmaOut)
		//0x1274		H263_DMA_LOWRES0_Intra_BLOCK_END
0x5F00E14E,	//0x1274		VoC_pop32(REG01,DEFAULT)	|	VoC_movreg16(RL7_LO,ACC1_LO,DEFAULT)
0xC051DF82,	//0x1276		VoC_add16_rr(REG1,REG1,REG2,DEFAULT)	|	VoC_pop16(REG2,IN_PARALLEL)
0x2B00FFC0,	//0x1278		VoC_jump_lg(H263_idct_loop_start_00)(lo)	|	VoC_NOP
0xFFC01200,	//0x127a		VoC_NAD	|	VoC_jump_lg(H263_idct_loop_start_00)(hi)
		//0x127c		H263_idct_loop_end_00
0x13042B00,	//0x127c		VoC_jump_lg(H263_nez_ModeBitand0x18_01)
		//0x127e		H263_ez_ModeBitand0x18_01_lowres0
0x09300A8E,	//0x127e		VoC_lw16i(RL7_LO,0x930)
0x0AB00A81,	//0x1280		VoC_lw16i(REG1,0xab0)
0x0C300A80,	//0x1282		VoC_lw16i(REG0,0xc30)
0x00400A82,	//0x1284		VoC_lw16i(REG2,0x40)
0x0C4F1404,	//0x1286		VoC_lw16_d(REG4,0xc4f)
0x00200A85,	//0x1288		VoC_lw16i(REG5,0x20)
0xFFC07003,	//0x128a		VoC_NAD(IN_PARALLEL)	|	VoC_lw16i_short(REG3,0x0,DEFAULT)
		//0x128c		H263_idct_loop_start_01
0x13043481,	//0x128c		VoC_bngt16_rr(H263_idct_loop_end_01,REG0,REG1)
0xDF42642C,	//0x128e		VoC_push32(REG45,IN_PARALLEL)	|	VoC_and16_rr(REG4,REG5,DEFAULT)
0xDFC25F40,	//0x1290		VoC_push16(REG2,IN_PARALLEL)	|	VoC_push32(REG01,DEFAULT)
0x3184DFC3,	//0x1292		VoC_bez16_r(H263_skip_idct,REG4)(lo)	|	VoC_push16(REG3,DEFAULT)
0xDFCE12A0,	//0x1294		VoC_push16(RL7_LO,DEFAULT)	|	VoC_bez16_r(H263_skip_idct,REG4)(hi)
0x2B80DFC1,	//0x1296		VoC_jal(CS_idct)(lo)	|	VoC_push16(REG1,DEFAULT)
0xDF810C29,	//0x1298		VoC_pop16(REG1,DEFAULT)	|	VoC_jal(CS_idct)(hi)
0x7030DF8E,	//0x129a		VoC_lw16i_short(INC0,0x1,DEFAULT)	|	VoC_pop16(RL7_LO,DEFAULT)
0xE1C0F005,	//0x129c		VoC_movreg16(REG0,RL7_LO,DEFAULT)	|	VoC_lw16i_short(INC1,0x1,IN_PARALLEL)
0x0C3C2B80,	//0x129e		VoC_jal(CS_H263transfer_16to8add_c)
		//0x12a0		H263_skip_idct
0xDF83E1CA,	//0x12a0		VoC_pop16(REG3,DEFAULT)	|	VoC_movreg16(ACC1_LO,RL7_LO,DEFAULT)
0xF00761C6,	//0x12a2		VoC_lw16i_short(INC3,0x1,IN_PARALLEL)	|	VoC_movreg16(REG6,RL7_LO,DEFAULT)
0xE0277105,	//0x12a4		VoC_lw16i_short(REG7,0x2,IN_PARALLEL)	|	VoC_lw16i_short(REG5,0x8,DEFAULT)
0xE032780E,	//0x12a6		VoC_lw16i_short(REG2,0x3,IN_PARALLEL)	|	VoC_shr16_ri(REG6,0x1,DEFAULT)
0xE0107041,	//0x12a8		VoC_lw16i_short(REG0,0x1,IN_PARALLEL)	|	VoC_lw16i_short(REG1,0x2,DEFAULT)
0x0A8FF00E,	//0x12aa		VoC_lw16i(RL7_HI,0x4000)(lo)	|	VoC_lw16i_short(RL7_LO,0x0,DEFAULT)
0x341A4000,	//0x12ac		VoC_bgt16_rr(H263_DMA_LOWRES0_UV_inter_BLOCK0,REG3,REG2)(lo)	|	VoC_lw16i(RL7_HI,0x4000)(hi)
0x140412DF,	//0x12ae		VoC_lw16_d(REG4,0x459a)(lo)	|	VoC_bgt16_rr(H263_DMA_LOWRES0_UV_inter_BLOCK0,REG3,REG2)(hi)
0x1484459A,	//0x12b0		VoC_lw32_d(ACC0,0x459c)(lo)	|	VoC_lw16_d(REG4,0x459a)(hi)
0x31C3459C,	//0x12b2		VoC_bnez16_r(H263_DMA_LOWRES0_Y_inter_BLOCK01,REG3)(lo)	|	VoC_lw32_d(ACC0,0x459c)(hi)
0xDE1812BA,	//0x12b4		VoC_inc_p(REG3,DEFAULT)	|	VoC_bnez16_r(H263_DMA_LOWRES0_Y_inter_BLOCK01,REG3)(hi)
0x04072B80,	//0x12b6		VoC_jal(H263_Dma_Cmd_Send)
0x12F62B00,	//0x12b8		VoC_jump_lg(H263_DMA_LOWRES0_inter_BLOCK_OVER)
		//0x12ba		H263_DMA_LOWRES0_Y_inter_BLOCK01
0x12C63598,	//0x12ba		VoC_bne16_rr(H263_DMA_LOWRES0_Y_inter_BLOCK10,REG3,REG0)
0x7100DE18,	//0x12bc		VoC_lw16i_short(REG0,0x8,DEFAULT)	|	VoC_inc_p(REG3,DEFAULT)
0xC904E001,	//0x12be		VoC_add32_rr(ACC0,ACC0,REG01,DEFAULT)	|	VoC_lw16i_short(REG1,0x0,IN_PARALLEL)
0x04132B80,	//0x12c0		VoC_jal(H263_Dma_Last_Cmd_Wait)
0x04072B80,	//0x12c2		VoC_jal(H263_Dma_Cmd_Send)
0x12F62B00,	//0x12c4		VoC_jump_lg(H263_DMA_LOWRES0_inter_BLOCK_OVER)
		//0x12c6		H263_DMA_LOWRES0_Y_inter_BLOCK10
0x0800F100,	//0x12c6		VoC_mult16_rd(REG0,REG0,0x6ce)(lo)	|	VoC_lw16i_short(REG0,0x8,DEFAULT)
0x359906CE,	//0x12c8		VoC_bne16_rr(H263_DMA_LOWRES0_Y_inter_BLOCK11,REG3,REG1)(lo)	|	VoC_mult16_rd(REG0,REG0,0x6ce)(hi)
0x5E1812D4,	//0x12ca		VoC_inc_p(REG3,DEFAULT)	|	VoC_bne16_rr(H263_DMA_LOWRES0_Y_inter_BLOCK11,REG3,REG1)(hi)
0xC904E001,	//0x12cc		VoC_add32_rr(ACC0,ACC0,REG01,DEFAULT)	|	VoC_lw16i_short(REG1,0x0,IN_PARALLEL)
0x04132B80,	//0x12ce		VoC_jal(H263_Dma_Last_Cmd_Wait)
0x04072B80,	//0x12d0		VoC_jal(H263_Dma_Cmd_Send)
0x12F62B00,	//0x12d2		VoC_jump_lg(H263_DMA_LOWRES0_inter_BLOCK_OVER)
		//0x12d4		H263_DMA_LOWRES0_Y_inter_BLOCK11
0xE0015E18,	//0x12d4		VoC_lw16i_short(REG1,0x0,IN_PARALLEL)	|	VoC_inc_p(REG3,DEFAULT)
0xF100C904,	//0x12d6		VoC_lw16i_short(REG0,0x8,DEFAULT)	|	VoC_add32_rr(ACC0,ACC0,REG01,DEFAULT)
0xFFC04904,	//0x12d8		VoC_NAD(IN_PARALLEL)	|	VoC_add32_rr(ACC0,ACC0,REG01,DEFAULT)
0x04132B80,	//0x12da		VoC_jal(H263_Dma_Last_Cmd_Wait)
0x04072B80,	//0x12dc		VoC_jal(H263_Dma_Cmd_Send)
0xF080E5D8,	//0x12de		VoC_lw16i_short(REG0,0x4,DEFAULT)	|	VoC_jump(H263_DMA_LOWRES0_inter_BLOCK_OVER)
		//0x12df		H263_DMA_LOWRES0_UV_inter_BLOCK0
0x459B1404,	//0x12e0		VoC_lw16_d(REG4,0x459b)
0x12EE3598,	//0x12e2		VoC_bne16_rr(H263_DMA_LOWRES0_UV_inter_BLOCK1,REG3,REG0)
0x459E1484,	//0x12e4		VoC_lw32_d(ACC0,0x459e)
0xFFC05E18,	//0x12e6		VoC_NAD(IN_PARALLEL)	|	VoC_inc_p(REG3,DEFAULT)
0x04132B80,	//0x12e8		VoC_jal(H263_Dma_Last_Cmd_Wait)
0x04072B80,	//0x12ea		VoC_jal(H263_Dma_Cmd_Send)
0xFFC065CA,	//0x12ec		VoC_NAD(IN_PARALLEL)	|	VoC_jump(H263_DMA_LOWRES0_inter_BLOCK_OVER)
		//0x12ee		H263_DMA_LOWRES0_UV_inter_BLOCK1
0x45A01484,	//0x12ee		VoC_lw32_d(ACC0,0x45a0)
0xFFC05E18,	//0x12f0		VoC_NAD(IN_PARALLEL)	|	VoC_inc_p(REG3,DEFAULT)
0x04132B80,	//0x12f2		VoC_jal(H263_Dma_Last_Cmd_Wait)
0x04282B80,	//0x12f4		VoC_jal(CS_H263_2DDmaOut)
		//0x12f6		H263_DMA_LOWRES0_inter_BLOCK_OVER
0xDF825F00,	//0x12f6		VoC_pop16(REG2,IN_PARALLEL)	|	VoC_pop32(REG01,DEFAULT)
0xE005700B,	//0x12f8		VoC_lw16i_short(REG5,0x0,IN_PARALLEL)	|	VoC_lw16i_short(ACC1_HI,0x0,DEFAULT)
0x00200A84,	//0x12fa		VoC_lw16i(REG4,0x20)
0x4051C955,	//0x12fc		VoC_add16_rr(REG1,REG1,REG2,DEFAULT)	|	VoC_add32_rr(ACC1,ACC1,REG45,DEFAULT)
0xE14EDF02,	//0x12fe		VoC_movreg16(RL7_LO,ACC1_LO,DEFAULT)	|	VoC_pop32(REG45,IN_PARALLEL)
0xFFC0F80D,	//0x1300		VoC_NOP	|	VoC_shr16_ri(REG5,0x1,DEFAULT)
0x128C2B00,	//0x1302		VoC_jump_lg(H263_idct_loop_start_01)
		//0x1304		H263_idct_loop_end_01
		//0x1304		H263_nez_ModeBitand0x18_01
0xDF065F82,	//0x1304		VoC_pop32(RL6,IN_PARALLEL)	|	VoC_pop16(REG2,DEFAULT)
0xF006713E,	//0x1306		VoC_lw16i_short(INC2,0x1,IN_PARALLEL)	|	VoC_lw16i_short(WRAP2,0x9,DEFAULT)
		//0x1308		H263_ngtz_MBA
0x45AC1403,	//0x1308		VoC_lw16_d(REG3,0x45ac)
0x00270A87,	//0x130a		VoC_lw16i(REG7,0x27)
0x3187E41F,	//0x130c		VoC_bez16_r(H263_Skip_DMA_Y_mcblock,REG7)(lo)	|	VoC_and16_rr(REG7,REG3,DEFAULT)
0x140713B0,	//0x130e		VoC_lw16_d(REG7,0xc52)(lo)	|	VoC_bez16_r(H263_Skip_DMA_Y_mcblock,REG7)(hi)
0x31870C52,	//0x1310		VoC_bez16_r(H263_DMA_Y_mcblock_lowres0,REG7)(lo)	|	VoC_lw16_d(REG7,0xc52)(hi)
0xF01E1356,	//0x1312		VoC_lw16i_short(WRAP2,0x0,DEFAULT)	|	VoC_bez16_r(H263_DMA_Y_mcblock_lowres0,REG7)(hi)
0xDF465FC2,	//0x1314		VoC_push32(RL6,IN_PARALLEL)	|	VoC_push16(REG2,DEFAULT)
0x1481F020,	//0x1316		VoC_lw32_d(REG23,0xc48)(lo)	|	VoC_lw16i_short(REG0,0x1,DEFAULT)
0x0A810C48,	//0x1318		VoC_lw16i(REG1,0x229)(lo)	|	VoC_lw32_d(REG23,0xc48)(hi)
0xFF0B0229,	//0x131a		VoC_movreg32(REG67,REG23,DEFAULT)	|	VoC_lw16i(REG1,0x229)(hi)
0x0736FDE9,	//0x131c		VoC_add16_rd(REG6,REG6,0x667)(lo)	|	VoC_shru32_ri(REG23,0xfffffffd,DEFAULT)
0x41860667,	//0x131e		VoC_add16_rr(REG6,REG6,REG0,DEFAULT)	|	VoC_add16_rd(REG6,REG6,0x667)(hi)
0x1400C18F,	//0x1320		VoC_lw16_d(REG0,0x6ce)(lo)	|	VoC_add16_rr(REG7,REG6,REG1,IN_PARALLEL)
0xF80806CE,	//0x1322		VoC_shr16_ri(REG0,0x1,DEFAULT)	|	VoC_lw16_d(REG0,0x6ce)(hi)
0xD875D864,	//0x1324		VoC_lw16_p(REG5,REG7,DEFAULT)	|	VoC_lw16_p(REG4,REG6,DEFAULT)
0x7814FF13,	//0x1326		VoC_shr16_ri(REG4,0x2,DEFAULT)	|	VoC_movreg32(REG67,REG45,DEFAULT)
0x1583F815,	//0x1328		VoC_sw32_d(REG67,0xc4a)(lo)	|	VoC_shr16_ri(REG5,0x2,IN_PARALLEL)
0x40A20C4A,	//0x132a		VoC_add16_rr(REG2,REG2,REG4,DEFAULT)	|	VoC_sw32_d(REG67,0xc4a)(hi)
0x1606C0EB,	//0x132c		VoC_and16_ri(REG6,0x3)(lo)	|	VoC_add16_rr(REG3,REG3,REG5,IN_PARALLEL)
0x16070003,	//0x132e		VoC_and16_ri(REG7,0x3)(lo)	|	VoC_and16_ri(REG6,0x3)(hi)
0xCC1A0003,	//0x1330		VoC_multf32_rr(REG45,REG0,REG3,DEFAULT)	|	VoC_and16_ri(REG7,0x3)(hi)
0xFA81E043,	//0x1332		VoC_shr32_ri(REG23,0x10,DEFAULT)	|	VoC_movreg16(REG3,REG2,DEFAULT)
0x1484C88A,	//0x1334		VoC_lw32_d(ACC0,0x208)(lo)	|	VoC_add32_rr(REG45,REG45,REG23,DEFAULT)
0xFBFB0208,	//0x1336		VoC_shr32_ri(REG67,0xffffffff,DEFAULT)	|	VoC_lw32_d(ACC0,0x208)(hi)
0xFF14C8A2,	//0x1338		VoC_movreg32(ACC0,REG45,DEFAULT)	|	VoC_add32_rr(REG45,REG45,ACC0,DEFAULT)
0x42842982,	//0x133a		VoC_and32_rd(REG45,0x4284)
0x45A21506,	//0x133c		VoC_sw16_d(REG6,0x45a2)
0x45A31507,	//0x133e		VoC_sw16_d(REG7,0x45a3)
0x0C531504,	//0x1340		VoC_sw16_d(REG4,0xc53)
0x06CE1400,	//0x1342		VoC_lw16_d(REG0,0x6ce)
0xE0917818,	//0x1344		VoC_lw16i_short(REG1,0x9,IN_PARALLEL)	|	VoC_shr16_ri(REG0,0x3,DEFAULT)
0x036C0A82,	//0x1346		VoC_lw16i(REG2,0x36c)
0xC218F063,	//0x1348		VoC_sub16_rr(REG0,REG0,REG3,DEFAULT)	|	VoC_lw16i_short(REG3,0x3,DEFAULT)
0x0A8DFF46,	//0x134a		VoC_lw16i(RL6_HI,0x1000)(lo)	|	VoC_lw32z(RL6,DEFAULT)
0xFFC01000,	//0x134c		VoC_NAD	|	VoC_lw16i(RL6_HI,0x1000)(hi)
0x03FB2B80,	//0x134e		VoC_jal(H263_2DDma_IN)
0xDF065F82,	//0x1350		VoC_pop32(RL6,IN_PARALLEL)	|	VoC_pop16(REG2,DEFAULT)
0xF006713E,	//0x1352		VoC_lw16i_short(INC2,0x1,IN_PARALLEL)	|	VoC_lw16i_short(WRAP2,0x9,DEFAULT)
0x13B02B00,	//0x1354		VoC_jump_lg(H263_Skip_DMA_Y_mcblock)
		//0x1356		H263_DMA_Y_mcblock_lowres0
0x5FC2F01E,	//0x1356		VoC_push16(REG2,DEFAULT)	|	VoC_lw16i_short(WRAP2,0x0,DEFAULT)
0x1481DF46,	//0x1358		VoC_lw32_d(REG23,0xc48)(lo)	|	VoC_push32(RL6,IN_PARALLEL)
0xF0200C48,	//0x135a		VoC_lw16i_short(REG0,0x1,DEFAULT)	|	VoC_lw32_d(REG23,0xc48)(hi)
0x78E2FF0A,	//0x135c		VoC_shr16_ri(REG2,0xfffffffc,DEFAULT)	|	VoC_movreg32(REG45,REG23,DEFAULT)
0x6048F8E3,	//0x135e		VoC_movreg16(ACC0_LO,REG2,DEFAULT)	|	VoC_shr16_ri(REG3,0xfffffffc,IN_PARALLEL)
0x0E18E009,	//0x1360		VoC_mac32_rd(REG3,0x6ce)(lo)	|	VoC_lw16i_short(ACC0_HI,0x0,IN_PARALLEL)
0x0A8106CE,	//0x1362		VoC_lw16i(REG1,0x229)(lo)	|	VoC_mac32_rd(REG3,0x6ce)(hi)
0x09240229,	//0x1364		VoC_add32_rd(ACC0,ACC0,0x208)(lo)	|	VoC_lw16i(REG1,0x229)(hi)
0x07240208,	//0x1366		VoC_add16_rd(REG4,REG4,0x667)(lo)	|	VoC_add32_rd(ACC0,ACC0,0x208)(hi)
0x41040667,	//0x1368		VoC_add16_rr(REG4,REG4,REG0,DEFAULT)	|	VoC_add16_rd(REG4,REG4,0x667)(hi)
0x7059C10D,	//0x136a		VoC_lw16i_short(FORMAT32,0x2,DEFAULT)	|	VoC_add16_rr(REG5,REG4,REG1,IN_PARALLEL)
0x0A1FF80A,	//0x136c		VoC_multf32_rd(RL7,REG3,0x6ce)(lo)	|	VoC_shr16_ri(REG2,0x1,IN_PARALLEL)
0x584606CE,	//0x136e		VoC_lw16_p(REG6,REG4,DEFAULT)	|	VoC_multf32_rd(RL7,REG3,0x6ce)(hi)
0x5857E003,	//0x1370		VoC_lw16_p(REG7,REG5,DEFAULT)	|	VoC_lw16i_short(REG3,0x0,IN_PARALLEL)
0x7019C9CF,	//0x1372		VoC_lw16i_short(FORMAT32,0x0,DEFAULT)	|	VoC_add32_rr(RL7,RL7,REG23,IN_PARALLEL)
0x1583FF1A,	//0x1374		VoC_sw32_d(REG67,0xc4a)(lo)	|	VoC_movreg32(REG45,REG67,IN_PARALLEL)
0x093E0C4A,	//0x1376		VoC_add32_rd(RL6,RL7,0x20a)(lo)	|	VoC_sw32_d(REG67,0xc4a)(hi)
0x093F020A,	//0x1378		VoC_add32_rd(RL7,RL7,0x20c)(lo)	|	VoC_add32_rd(RL6,RL7,0x20a)(hi)
0x1606020C,	//0x137a		VoC_and16_ri(REG6,0x1)(lo)	|	VoC_add32_rd(RL7,RL7,0x20c)(hi)
0x16070001,	//0x137c		VoC_and16_ri(REG7,0x1)(lo)	|	VoC_and16_ri(REG6,0x1)(hi)
0x78FE0001,	//0x137e		VoC_shr16_ri(REG6,0xffffffff,DEFAULT)	|	VoC_and16_ri(REG7,0x1)(hi)
0x0E28F80D,	//0x1380		VoC_mac32_rd(REG5,0x6ce)(lo)	|	VoC_shr16_ri(REG5,0x1,IN_PARALLEL)
0x647E06CE,	//0x1382		VoC_or16_rr(REG6,REG7,DEFAULT)	|	VoC_mac32_rd(REG5,0x6ce)(hi)
0xF000F685,	//0x1384		VoC_lw16i_short(REG0,0x0,DEFAULT)	|	VoC_movreg16(REG5,REG4,IN_PARALLEL)
0xC914FA8A,	//0x1386		VoC_add32_rr(ACC0,ACC0,REG45,DEFAULT)	|	VoC_shr32_ri(REG45,0x11,DEFAULT)
0x45A61586,	//0x1388		VoC_sw32_d(RL6,0x45a6)
0x45A81587,	//0x138a		VoC_sw32_d(RL7,0x45a8)
0x45A41584,	//0x138c		VoC_sw32_d(ACC0,0x45a4)
0x45AA1506,	//0x138e		VoC_sw16_d(REG6,0x45aa)
0xFA14FF22,	//0x1390		VoC_shr32_ri(ACC0,0x2,DEFAULT)	|	VoC_movreg32(REG45,ACC0,DEFAULT)
0xCAA2FBF4,	//0x1392		VoC_sub32_rr(REG45,REG45,ACC0,DEFAULT)	|	VoC_shr32_ri(ACC0,0xfffffffe,DEFAULT)
0x1504FFC0,	//0x1394		VoC_sw16_d(REG4,0xc4c)(lo)	|	VoC_NOP
0x35860C4C,	//0x1396		VoC_bne16_rr(H263_DMA16X16_Y_RL6_HI_1,REG0,REG6)(lo)	|	VoC_sw16_d(REG4,0xc4c)(hi)
0xF020139F,	//0x1398		VoC_lw16i_short(REG0,0x1,DEFAULT)	|	VoC_bne16_rr(H263_DMA16X16_Y_RL6_HI_1,REG0,REG6)(hi)
0x31C4E404,	//0x139a		VoC_bnez16_r(H263_DMA16X16_Y_RL6_HI_1,REG4)(lo)	|	VoC_and16_rr(REG4,REG0,DEFAULT)
0xFF46139F,	//0x139c		VoC_lw32z(RL6,DEFAULT)	|	VoC_bnez16_r(H263_DMA16X16_Y_RL6_HI_1,REG4)(hi)
0xF00CE5C4,	//0x139e		VoC_lw16i_short(RL6_LO,0x0,DEFAULT)	|	VoC_jump(H263_interpolate16x16_Y_DMA)
		//0x139f		H263_DMA16X16_Y_RL6_HI_1
0x10000A8D,	//0x13a0		VoC_lw16i(RL6_HI,0x1000)
		//0x13a2		H263_interpolate16x16_Y_DMA
0x06CE1400,	//0x13a2		VoC_lw16_d(REG0,0x6ce)
0xE1417810,	//0x13a4		VoC_lw16i_short(REG1,0x14,IN_PARALLEL)	|	VoC_shr16_ri(REG0,0x2,DEFAULT)
0x036C0A82,	//0x13a6		VoC_lw16i(REG2,0x36c)
0xC218F0A3,	//0x13a8		VoC_sub16_rr(REG0,REG0,REG3,DEFAULT)	|	VoC_lw16i_short(REG3,0x5,DEFAULT)
0x03FB2B80,	//0x13aa		VoC_jal(H263_2DDma_IN)
0xDF065F82,	//0x13ac		VoC_pop32(RL6,IN_PARALLEL)	|	VoC_pop16(REG2,DEFAULT)
0xF006713E,	//0x13ae		VoC_lw16i_short(INC2,0x1,IN_PARALLEL)	|	VoC_lw16i_short(WRAP2,0x9,DEFAULT)
		//0x13b0		H263_Skip_DMA_Y_mcblock
0x0C391406,	//0x13b0		VoC_lw16_d(REG6,0xc39)
0x13F031C6,	//0x13b2		VoC_bnez16_r(H263_nez_COD_01,REG6)
0x45AC1403,	//0x13b4		VoC_lw16_d(REG3,0x45ac)
0x00180A87,	//0x13b6		VoC_lw16i(REG7,0x18)
0xFF44641F,	//0x13b8		VoC_lw32z(ACC0,IN_PARALLEL)	|	VoC_and16_rr(REG7,REG3,DEFAULT)
0x0AB01808,	//0x13ba		VoC_lw16i_set_inc(REG0,0xab0,0x2)
0x13BE2D80,	//0x13bc		VoC_loop_i(0x0,0xc0)
		//0x13be		VoC_endloop0
0x0A80DDC4,	//0x13be		VoC_lw16i(REG0,0xab0)(lo)	|	VoC_sw32inc_p(ACC0,REG0,DEFAULT)
0x0A810AB0,	//0x13c0		VoC_lw16i(REG1,0xc30)(lo)	|	VoC_lw16i(REG0,0xab0)(hi)
0x0A830C30,	//0x13c2		VoC_lw16i(REG3,0x40)(lo)	|	VoC_lw16i(REG1,0xc30)(hi)
0x14040040,	//0x13c4		VoC_lw16_d(REG4,0xc40)(lo)	|	VoC_lw16i(REG3,0x40)(hi)
0x0A850C40,	//0x13c6		VoC_lw16i(REG5,0x20)(lo)	|	VoC_lw16_d(REG4,0xc40)(hi)
0xFFC00020,	//0x13c8		VoC_NAD	|	VoC_lw16i(REG5,0x20)(hi)
		//0x13ca		H263_getblock_loop_start
0x13F03488,	//0x13ca		VoC_bngt16_rr(H263_getblock_loop_end,REG1,REG0)
0xDFC35F40,	//0x13cc		VoC_push16(REG3,IN_PARALLEL)	|	VoC_push32(REG01,DEFAULT)
0xDFC75F42,	//0x13ce		VoC_push16(REG7,IN_PARALLEL)	|	VoC_push32(REG45,DEFAULT)
0xE011642C,	//0x13d0		VoC_lw16i_short(REG1,0x1,IN_PARALLEL)	|	VoC_and16_rr(REG4,REG5,DEFAULT)
0x13E03187,	//0x13d2		VoC_bez16_r(H263_ez_ModeBitand0x18_02,REG7)
0x62A3E242,	//0x13d4		VoC_rbinc_i(REG7,0x8,DEFAULT)	|	VoC_lbinc_p(REG2)
0x78EFE001,	//0x13d6		VoC_shr16_ri(REG7,0xfffffffd,DEFAULT)	|	VoC_lw16i_short(REG1,0x0,IN_PARALLEL)
0x0A85F8E3,	//0x13d8		VoC_lw16i(REG5,0x7f8)(lo)	|	VoC_shr16_ri(REG3,0xfffffffc,IN_PARALLEL)
0x35BD07F8,	//0x13da		VoC_bne16_rr(H263_bp0_ne_255,REG7,REG5)(lo)	|	VoC_lw16i(REG5,0x7f8)(hi)
0xDC0313DF,	//0x13dc		VoC_sw16_p(REG3,REG0,DEFAULT)	|	VoC_bne16_rr(H263_bp0_ne_255,REG7,REG5)(hi)
0xDC07E5C2,	//0x13de		VoC_sw16_p(REG7,REG0,DEFAULT)	|	VoC_jump(H263_ez_ModeBitand0x18_02)
		//0x13df		H263_bp0_ne_255
		//0x13e0		H263_ez_ModeBitand0x18_02
0x13E43184,	//0x13e0		VoC_bez16_r(H263_skip_getblock,REG4)
0x0C522B80,	//0x13e2		VoC_jal(CS_getblock)
		//0x13e4		H263_skip_getblock
0xDF875F02,	//0x13e4		VoC_pop16(REG7,IN_PARALLEL)	|	VoC_pop32(REG45,DEFAULT)
0xDF835F00,	//0x13e6		VoC_pop16(REG3,IN_PARALLEL)	|	VoC_pop32(REG01,DEFAULT)
0xC018780D,	//0x13e8		VoC_add16_rr(REG0,REG0,REG3,IN_PARALLEL)	|	VoC_shr16_ri(REG5,0x1,DEFAULT)
0x06C66C04,	//0x13ea		VoC_bez16_d(H263_ez_fault_01,0x6c6)
0x0DAF2B00,	//0x13ec		VoC_jump_lg(H263_resync)
		//0x13ee		H263_ez_fault_01
0x13CA2B00,	//0x13ee		VoC_jump_lg(H263_getblock_loop_start)
		//0x13f0		H263_getblock_loop_end
		//0x13f0		H263_nez_COD_01
0x45AC1403,	//0x13f0		VoC_lw16_d(REG3,0x45ac)
0x00270A87,	//0x13f2		VoC_lw16i(REG7,0x27)
0x3187E41F,	//0x13f4		VoC_bez16_r(H263_NO_DMA,REG7)(lo)	|	VoC_and16_rr(REG7,REG3,DEFAULT)
0xFFC013FA,	//0x13f6		VoC_NAD	|	VoC_bez16_r(H263_NO_DMA,REG7)(hi)
0x04132B80,	//0x13f8		VoC_jal(H263_Dma_Last_Cmd_Wait)
		//0x13fa		H263_NO_DMA
0xE0117000,	//0x13fa		VoC_lw16i_short(REG1,0x1,IN_PARALLEL)	|	VoC_lw16i_short(REG0,0x0,DEFAULT)
0x0C401403,	//0x13fc		VoC_lw16_d(REG3,0xc40)
0x02151404,	//0x13fe		VoC_lw16_d(REG4,0x215)
0x0C4F1503,	//0x1400		VoC_sw16_d(REG3,0xc4f)
0x0C501504,	//0x1402		VoC_sw16_d(REG4,0xc50)
0x0C38070B,	//0x1404		VoC_add16_rd(REG3,REG1,0xc38)
0xF6656064,	//0x1406		VoC_movreg16(REG5,REG3,IN_PARALLEL)	|	VoC_movreg16(REG4,REG3,DEFAULT)
		//0x1408		H263_get_MBA_residue
0x1503E085,	//0x1408		VoC_sw16_d(REG3,0xc38)(lo)	|	VoC_movreg16(REG5,REG4,DEFAULT)
0x07A40C38,	//0x140a		VoC_sub16_rd(REG4,REG4,0x200)(lo)	|	VoC_sw16_d(REG3,0xc38)(hi)
0x32440200,	//0x140c		VoC_bnltz16_r(H263_get_MBA_residue,REG4)(lo)	|	VoC_sub16_rd(REG4,REG4,0x200)(hi)
0x31C51408,	//0x140e		VoC_bnez16_r(H263_nez_MBA_mb_width_residue,REG5)(lo)	|	VoC_bnltz16_r(H263_get_MBA_residue,REG4)(hi)
0x1483141E,	//0x1410		VoC_lw32_d(REG67,0x666)(lo)	|	VoC_bnez16_r(H263_nez_MBA_mb_width_residue,REG5)(hi)
0x14820666,	//0x1412		VoC_lw32_d(REG45,0x6c4)(lo)	|	VoC_lw32_d(REG67,0x666)(hi)
0x60E606C4,	//0x1414		VoC_movreg16(REG6,REG7,DEFAULT)	|	VoC_lw32_d(REG45,0x6c4)(hi)
0x60A4F6C7,	//0x1416		VoC_movreg16(REG4,REG5,DEFAULT)	|	VoC_movreg16(REG7,REG6,IN_PARALLEL)
0x1583F685,	//0x1418		VoC_sw32_d(REG67,0x666)(lo)	|	VoC_movreg16(REG5,REG4,IN_PARALLEL)
0x15820666,	//0x141a		VoC_sw32_d(REG45,0x6c4)(lo)	|	VoC_sw32_d(REG67,0x666)(hi)
0xFFC006C4,	//0x141c		VoC_NAD	|	VoC_sw32_d(REG45,0x6c4)(hi)
		//0x141e		H263_nez_MBA_mb_width_residue
0x0C3C4903,	//0x141e		VoC_blt16_rd(H263_MBA_lt_MBAmax_or_nez_lastdone,REG3,0xc3c)
0x0C4E6E0E,	//0x1420		VoC_bnez16_d(H263_MBA_lt_MBAmax_or_nez_lastdone,0xc4e)
0x0C49070B,	//0x1422		VoC_add16_rd(REG3,REG1,0xc49)
0x0C391501,	//0x1424		VoC_sw16_d(REG1,0xc39)
0x0C481500,	//0x1426		VoC_sw16_d(REG0,0xc48)
0x0C491503,	//0x1428		VoC_sw16_d(REG3,0xc49)
0x0C4E1501,	//0x142a		VoC_sw16_d(REG1,0xc4e)
0x0FF02B00,	//0x142c		VoC_jump_lg(H263_reconstruct_mb)
		//0x142e		H263_MBA_lt_MBAmax_or_nez_lastdone
0x01000A81,	//0x142e		VoC_lw16i(REG1,0x100)
0x06C71400,	//0x1430		VoC_lw16_d(REG0,0x6c7)
0x00011600,	//0x1432		VoC_and16_ri(REG0,0x1)
0x144031C0,	//0x1434		VoC_bnez16_r(H263_BS_CONSUME_0,REG0)
0x1448340A,	//0x1436		VoC_bgt16_rr(H263_BS_CONSUME_1,REG1,REG2)
0x071BF023,	//0x1438		VoC_add16_rd(REG3,REG3,0x6c7)(lo)	|	VoC_lw16i_short(REG3,0x1,DEFAULT)
0x150006C7,	//0x143a		VoC_sw16_d(REG0,0x6c9)(lo)	|	VoC_add16_rd(REG3,REG3,0x6c7)(hi)
0x150306C9,	//0x143c		VoC_sw16_d(REG3,0x6c7)(lo)	|	VoC_sw16_d(REG0,0x6c9)(hi)
0xE5C906C7,	//0x143e		VoC_jump(H263_BS_CONSUME_1)	|	VoC_sw16_d(REG3,0x6c7)(hi)
		//0x1440		H263_BS_CONSUME_0
0x1448348A,	//0x1440		VoC_bngt16_rr(H263_BS_CONSUME_1,REG1,REG2)
0x06C70703,	//0x1442		VoC_add16_rd(REG3,REG0,0x6c7)
0x06C91500,	//0x1444		VoC_sw16_d(REG0,0x6c9)
0x06C71503,	//0x1446		VoC_sw16_d(REG3,0x6c7)
		//0x1448		H263_BS_CONSUME_1
0x0D8A2B00,	//0x1448		VoC_jump_lg(H263_get_I_P_MBs_start)
		//0x144a		H263_get_I_P_MBs_end
0x06C71400,	//0x144a		VoC_lw16_d(REG0,0x6c7)
0x00011600,	//0x144c		VoC_and16_ri(REG0,0x1)
0x145431C0,	//0x144e		VoC_bnez16_r(H263_BS_CONSUME_OUT_0,REG0)
0x00000A84,	//0x1450		VoC_lw16i(REG4,0x0)
0xFFC065C4,	//0x1452		VoC_NAD(IN_PARALLEL)	|	VoC_jump(H263_BS_CONSUME_OUT_1)
		//0x1454		H263_BS_CONSUME_OUT_0
0x01000A84,	//0x1454		VoC_lw16i(REG4,0x100)
		//0x1456		H263_BS_CONSUME_OUT_1
0x06C71400,	//0x1456		VoC_lw16_d(REG0,0x6c7)
0xE00142A4,	//0x1458		VoC_lw16i_short(REG1,0x0,IN_PARALLEL)	|	VoC_sub16_rr(REG4,REG2,REG4,DEFAULT)
0xE0057BC0,	//0x145a		VoC_lw16i_short(REG5,0x0,IN_PARALLEL)	|	VoC_shr32_ri(REG01,0xfffffff8,DEFAULT)
0xFBF8C810,	//0x145c		VoC_shr32_ri(REG01,0xffffffff,DEFAULT)	|	VoC_add32_rr(REG01,REG01,REG45,DEFAULT)
0x02041586,	//0x145e		VoC_sw32_d(RL6,0x204)
0x0203151B,	//0x1460		VoC_sw16_d(BITCACHE,0x203)
0x02061580,	//0x1462		VoC_sw32_d(REG01,0x206)
0xFFC0DFA9,	//0x1464		VoC_NOP	|	VoC_pop16(RA,DEFAULT)
0xFFC0E580,	//0x1466		VoC_NAD	|	VoC_return
