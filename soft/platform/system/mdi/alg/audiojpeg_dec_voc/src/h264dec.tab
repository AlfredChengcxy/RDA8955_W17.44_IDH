		//0x0230		VoC_code_section_1
		//0x0230		Dma_Cmd_Send
0x7FC81540,	//0x0230		VoC_sw16_d(REG0,0xffc8)
0xE0106534,	//0x0232		VoC_lw16i_short(REG0,0x1,IN_PARALLEL)	|	VoC_or32_rr(ACC0,RL6,DEFAULT)
0x1500E53C,	//0x0234		VoC_sw16_d(REG0,0x5fa0)(lo)	|	VoC_or32_rr(ACC0,RL7,DEFAULT)
0x15415FA0,	//0x0236		VoC_sw16_d(REG1,0xffc9)(lo)	|	VoC_sw16_d(REG0,0x5fa0)(hi)
0x15427FC9,	//0x0238		VoC_sw16_d(REG2,0xffc3)(lo)	|	VoC_sw16_d(REG1,0xffc9)(hi)
0x15437FC3,	//0x023a		VoC_sw16_d(REG3,0xffc2)(lo)	|	VoC_sw16_d(REG2,0xffc3)(hi)
0x15C47FC2,	//0x023c		VoC_sw32_d(ACC0,0xffc4)(lo)	|	VoC_sw16_d(REG3,0xffc2)(hi)
0xE5807FC4,	//0x023e		VoC_return	|	VoC_sw32_d(ACC0,0xffc4)(hi)
		//0x0240		Dma_Last_Cmd_Wait
0xF006DE80,	//0x0240		VoC_lw16i_short(REG6,0x0,DEFAULT)	|	VoC_cfg(0x0)
0x00081794,	//0x0242		VoC_cfg_lg(0x8,)
0x5FA01506,	//0x0244		VoC_sw16_d(REG6,0x5fa0)
0xDFE9E580,	//0x0246		VoC_push16(RA,DEFAULT)	|	VoC_return
		//0x0247		DMA_Out_Recon_Y
0xE00E700C,	//0x0248		VoC_lw16i_short(RL7_LO,0x0,IN_PARALLEL)	|	VoC_lw16i_short(RL6_LO,0x0,DEFAULT)
0x10000A8D,	//0x024a		VoC_lw16i(RL6_HI,0x1000)
0x40000A8F,	//0x024c		VoC_lw16i(RL7_HI,0x4000)
0x02201400,	//0x024e		VoC_lw16_d(REG0,0x220)
0xE1417810,	//0x0250		VoC_lw16i_short(REG1,0x14,IN_PARALLEL)	|	VoC_shr16_ri(REG0,0x2,DEFAULT)
0x2BAA0A82,	//0x0252		VoC_lw16i(REG2,0x2baa)
0xC218F0A3,	//0x0254		VoC_sub16_rr(REG0,REG0,REG3,DEFAULT)	|	VoC_lw16i_short(REG3,0x5,DEFAULT)
0x59741484,	//0x0256		VoC_lw32_d(ACC0,0x5974)
0x02302B80,	//0x0258		VoC_jal(Dma_Cmd_Send)
0xFFC0DFA9,	//0x025a		VoC_NOP	|	VoC_pop16(RA,DEFAULT)
0xDFE9E580,	//0x025c		VoC_push16(RA,DEFAULT)	|	VoC_return
		//0x025d		DMA_Out_Recon_UV
0xE00E700C,	//0x025e		VoC_lw16i_short(RL7_LO,0x0,IN_PARALLEL)	|	VoC_lw16i_short(RL6_LO,0x0,DEFAULT)
0x10000A8D,	//0x0260		VoC_lw16i(RL6_HI,0x1000)
0x40000A8F,	//0x0262		VoC_lw16i(RL7_HI,0x4000)
0x02211400,	//0x0264		VoC_lw16_d(REG0,0x221)
0xE0C17810,	//0x0266		VoC_lw16i_short(REG1,0xc,IN_PARALLEL)	|	VoC_shr16_ri(REG0,0x2,DEFAULT)
0x5FA61402,	//0x0268		VoC_lw16_d(REG2,0x5fa6)
0xC218F063,	//0x026a		VoC_sub16_rr(REG0,REG0,REG3,DEFAULT)	|	VoC_lw16i_short(REG3,0x3,DEFAULT)
0x59761484,	//0x026c		VoC_lw32_d(ACC0,0x5976)
0x02302B80,	//0x026e		VoC_jal(Dma_Cmd_Send)
0xFFC0DFA9,	//0x0270		VoC_NOP	|	VoC_pop16(RA,DEFAULT)
0xFFC06580,	//0x0272		VoC_NAD(IN_PARALLEL)	|	VoC_return
		//0x0274		DMA_In_Refer_Y
0x19D42008,	//0x0274		VoC_lw16d_set_inc(REG0,0x19d4,0x2)
0x10000A8D,	//0x0276		VoC_lw16i(RL6_HI,0x1000)
0xE08359C4,	//0x0278		VoC_lw16i_short(REG3,0x8,IN_PARALLEL)	|	VoC_lw32inc_p(ACC0,REG0,DEFAULT)
0x027D3284,	//0x027a		VoC_bgtz32_r(DMA_In_Refer_Y_Go,ACC0)
0xDFE9E580,	//0x027c		VoC_push16(RA,DEFAULT)	|	VoC_return
		//0x027d		DMA_In_Refer_Y_Go
0xE05159C2,	//0x027e		VoC_lw16i_short(REG1,0x5,IN_PARALLEL)	|	VoC_lw32inc_p(REG45,REG0,DEFAULT)
0x482E0700,	//0x0280		VoC_add16_rd(REG0,REG0,0x482e)
0xC149411B,	//0x0282		VoC_add16_rr(REG1,REG5,REG1,IN_PARALLEL)	|	VoC_add16_rr(REG3,REG4,REG3,DEFAULT)
0x19D41500,	//0x0284		VoC_sw16_d(REG0,0x19d4)
0x02201400,	//0x0286		VoC_lw16_d(REG0,0x220)
0xF8137810,	//0x0288		VoC_shr16_ri(REG3,0x2,IN_PARALLEL)	|	VoC_shr16_ri(REG0,0x2,DEFAULT)
0xE00C4218,	//0x028a		VoC_lw16i_short(RL6_LO,0x0,IN_PARALLEL)	|	VoC_sub16_rr(REG0,REG0,REG3,DEFAULT)
0x5FA21402,	//0x028c		VoC_lw16_d(REG2,0x5fa2)
0xFA14780A,	//0x028e		VoC_shr32_ri(ACC0,0x2,IN_PARALLEL)	|	VoC_shr16_ri(REG2,0x1,DEFAULT)
0xFF477BF4,	//0x0290		VoC_lw32z(RL7,IN_PARALLEL)	|	VoC_shr32_ri(ACC0,0xfffffffe,DEFAULT)
0x02302B80,	//0x0292		VoC_jal(Dma_Cmd_Send)
0xF0045FA9,	//0x0294		VoC_lw16i_short(INC0,0x1,IN_PARALLEL)	|	VoC_pop16(RA,DEFAULT)
0xE580FFC0,	//0x0296		VoC_return	|	VoC_NOP
		//0x0298		DMA_In_Refer_UV
0x19D52008,	//0x0298		VoC_lw16d_set_inc(REG0,0x19d5,0x2)
0x10000A8D,	//0x029a		VoC_lw16i(RL6_HI,0x1000)
0xE07359C4,	//0x029c		VoC_lw16i_short(REG3,0x7,IN_PARALLEL)	|	VoC_lw32inc_p(ACC0,REG0,DEFAULT)
0x02A13284,	//0x029e		VoC_bgtz32_r(DMA_In_Refer_UV_Go,ACC0)
0xDFE9E580,	//0x02a0		VoC_push16(RA,DEFAULT)	|	VoC_return
		//0x02a1		DMA_In_Refer_UV_Go
0xE01159C2,	//0x02a2		VoC_lw16i_short(REG1,0x1,IN_PARALLEL)	|	VoC_lw32inc_p(REG45,REG0,DEFAULT)
0xC149411B,	//0x02a4		VoC_add16_rr(REG1,REG5,REG1,IN_PARALLEL)	|	VoC_add16_rr(REG3,REG4,REG3,DEFAULT)
0x19D51500,	//0x02a6		VoC_sw16_d(REG0,0x19d5)
0x02211400,	//0x02a8		VoC_lw16_d(REG0,0x221)
0xF8137810,	//0x02aa		VoC_shr16_ri(REG3,0x2,IN_PARALLEL)	|	VoC_shr16_ri(REG0,0x2,DEFAULT)
0xE00C4218,	//0x02ac		VoC_lw16i_short(RL6_LO,0x0,IN_PARALLEL)	|	VoC_sub16_rr(REG0,REG0,REG3,DEFAULT)
0x5FA41402,	//0x02ae		VoC_lw16_d(REG2,0x5fa4)
0xFA14780A,	//0x02b0		VoC_shr32_ri(ACC0,0x2,IN_PARALLEL)	|	VoC_shr16_ri(REG2,0x1,DEFAULT)
0xFF477BF4,	//0x02b2		VoC_lw32z(RL7,IN_PARALLEL)	|	VoC_shr32_ri(ACC0,0xfffffffe,DEFAULT)
0x02302B80,	//0x02b4		VoC_jal(Dma_Cmd_Send)
0xF0045FA9,	//0x02b6		VoC_lw16i_short(INC0,0x1,IN_PARALLEL)	|	VoC_pop16(RA,DEFAULT)
0xE580FFC0,	//0x02b8		VoC_return	|	VoC_NOP
		//0x02ba		H264_dma_bs
0xF00477E1,	//0x02ba		VoC_lw16i_short(INC0,0x1,IN_PARALLEL)	|	VoC_lw16i_short(REG1,0xffffffff,DEFAULT)
0x02071402,	//0x02bc		VoC_lw16_d(REG2,0x207)
0x02027C21,	//0x02be		VoC_bltz32_d(H264_dma_bs_end,0x202)
0x02DF350A,	//0x02c0		VoC_be16_rr(H264_dma_bs_end,REG1,REG2)
0xE00778CA,	//0x02c2		VoC_lw16i_short(REG7,0x0,IN_PARALLEL)	|	VoC_shr16_ri(REG2,0xfffffff9,DEFAULT)
0x00000A86,	//0x02c4		VoC_lw16i(REG6,0x0)
0xE0034196,	//0x02c6		VoC_lw16i_short(REG3,0x0,IN_PARALLEL)	|	VoC_add16_rr(REG6,REG6,REG2,DEFAULT)
0x00800A82,	//0x02c8		VoC_lw16i(REG2,0x80)
0x02001482,	//0x02ca		VoC_lw32_d(REG45,0x200)
0x7FC31546,	//0x02cc		VoC_sw16_d(REG6,0xffc3)
0x7FC21542,	//0x02ce		VoC_sw16_d(REG2,0xffc2)
0x7FC415C2,	//0x02d0		VoC_sw32_d(REG45,0xffc4)
0x0B8BDE80,	//0x02d2		VoC_sub32_dr(REG67,0x202,REG23)(lo)	|	VoC_cfg(0x0)
0x17940202,	//0x02d4		VoC_cfg_lg(0x8,)(lo)	|	VoC_sub32_dr(REG67,0x202,REG23)(hi)
0xF8F20008,	//0x02d6		VoC_shr16_ri(REG2,0xfffffffe,DEFAULT)	|	VoC_cfg_lg(0x8,)(hi)
0x1501C88A,	//0x02d8		VoC_sw16_d(REG1,0x207)(lo)	|	VoC_add32_rr(REG45,REG45,REG23,DEFAULT)
0x15820207,	//0x02da		VoC_sw32_d(REG45,0x200)(lo)	|	VoC_sw16_d(REG1,0x207)(hi)
0x15830200,	//0x02dc		VoC_sw32_d(REG67,0x202)(lo)	|	VoC_sw32_d(REG45,0x200)(hi)
0xE5800202,	//0x02de		VoC_return	|	VoC_sw32_d(REG67,0x202)(hi)
		//0x02df		H264_dma_bs_end
		//0x02e0		H264_bs_consume_update
0x01000A81,	//0x02e0		VoC_lw16i(REG1,0x100)
0x020C1402,	//0x02e2		VoC_lw16_d(REG2,0x20c)
0x00011602,	//0x02e4		VoC_and16_ri(REG2,0x1)
0x02F231C2,	//0x02e6		VoC_bnez16_r(H264_BS_CONSUME_0,REG2)
0x02FA3408,	//0x02e8		VoC_bgt16_rr(H264_BS_CONSUME_1,REG1,REG0)
0x071BF023,	//0x02ea		VoC_add16_rd(REG3,REG3,0x20c)(lo)	|	VoC_lw16i_short(REG3,0x1,DEFAULT)
0x1502020C,	//0x02ec		VoC_sw16_d(REG2,0x207)(lo)	|	VoC_add16_rd(REG3,REG3,0x20c)(hi)
0x15030207,	//0x02ee		VoC_sw16_d(REG3,0x20c)(lo)	|	VoC_sw16_d(REG2,0x207)(hi)
0xE5C9020C,	//0x02f0		VoC_jump(H264_BS_CONSUME_1)	|	VoC_sw16_d(REG3,0x20c)(hi)
		//0x02f2		H264_BS_CONSUME_0
0x02FA3488,	//0x02f2		VoC_bngt16_rr(H264_BS_CONSUME_1,REG1,REG0)
0x020C0713,	//0x02f4		VoC_add16_rd(REG3,REG2,0x20c)
0x02071502,	//0x02f6		VoC_sw16_d(REG2,0x207)
0x020C1503,	//0x02f8		VoC_sw16_d(REG3,0x20c)
		//0x02fa		H264_BS_CONSUME_1
0x00000A81,	//0x02fa		VoC_lw16i(REG1,0x0)
0x020C1402,	//0x02fc		VoC_lw16_d(REG2,0x20c)
0x7FFE1642,	//0x02fe		VoC_and16_ri(REG2,0xfffe)
0xE0057003,	//0x0300		VoC_lw16i_short(REG5,0x0,IN_PARALLEL)	|	VoC_lw16i_short(REG3,0x0,DEFAULT)
0xC20C7BC1,	//0x0302		VoC_sub16_rr(REG4,REG0,REG1,IN_PARALLEL)	|	VoC_shr32_ri(REG23,0xfffffff8,DEFAULT)
0xDFDB4851,	//0x0304		VoC_push16(BITCACHE,IN_PARALLEL)	|	VoC_add32_rr(REG23,REG23,REG45,DEFAULT)
0xDF857BE1,	//0x0306		VoC_pop16(REG5,IN_PARALLEL)	|	VoC_shr32_ri(REG23,0xfffffffc,DEFAULT)
0x02060B2D,	//0x0308		VoC_sub16_dr(REG5,0x206,REG5)
0xC851FA82,	//0x030a		VoC_add32_rr(REG23,REG23,REG45,DEFAULT)	|	VoC_shr32_ri(REG45,0x10,DEFAULT)
0x1581FFC0,	//0x030c		VoC_sw32_d(REG23,0x20a)(lo)	|	VoC_NOP
0xE580020A,	//0x030e		VoC_return	|	VoC_sw32_d(REG23,0x20a)(hi)
		//0x0310		CS_fill_caches_sub
0x1542CD2A,	//0x0310		VoC_sw16_d(REG2,0xffc3)(lo)	|	VoC_multf32_rr(REG45,REG4,REG5,DEFAULT)
0xC8AA7FC3,	//0x0312		VoC_add32_rr(REG45,REG45,ACC1,DEFAULT)	|	VoC_sw16_d(REG2,0xffc3)(hi)
0x10001685,	//0x0314		VoC_or16_ri(REG5,0x1000)
0x7FC21543,	//0x0316		VoC_sw16_d(REG3,0xffc2)
0x7FC415C2,	//0x0318		VoC_sw32_d(REG45,0xffc4)
0xFFC0DE80,	//0x031a		VoC_NOP	|	VoC_cfg(0x0)
0x00081794,	//0x031c		VoC_cfg_lg(0x8,)
0xDFE9E580,	//0x031e		VoC_push16(RA,DEFAULT)	|	VoC_return
		//0x031f		CS_fill_caches_IS_INTRA
0x6043F7E2,	//0x0320		VoC_movreg16(REG3,REG2,DEFAULT)	|	VoC_lw16i_short(REG2,0xffff,DEFAULT)
0x0AC5F644,	//0x0322		VoC_lw16i(REG5,0xeeea)(lo)	|	VoC_movreg16(REG4,REG2,IN_PARALLEL)
0x6E1B6EEA,	//0x0324		VoC_bnez16_d(IS_INTRA_constrained_intra_pred,0x216)(lo)	|	VoC_lw16i(REG5,0xeeea)(hi)
0x6E090216,	//0x0326		VoC_bnez16_d(IS_INTRA_top_type,0x60ab)(lo)	|	VoC_bnez16_d(IS_INTRA_constrained_intra_pred,0x216)(hi)
0x0AC260AB,	//0x0328		VoC_lw16i(REG2,0xb3ff)(lo)	|	VoC_bnez16_d(IS_INTRA_top_type,0x60ab)(hi)
0x0A8333FF,	//0x032a		VoC_lw16i(REG3,0x33ff)(lo)	|	VoC_lw16i(REG2,0xb3ff)(hi)
0x0A8533FF,	//0x032c		VoC_lw16i(REG5,0x26ea)(lo)	|	VoC_lw16i(REG3,0x33ff)(hi)
0xFFC026EA,	//0x032e		VoC_NAD	|	VoC_lw16i(REG5,0x26ea)(hi)
		//0x0330		IS_INTRA_top_type
0x60A86C04,	//0x0330		VoC_bez16_d(IS_INTRA_left_type1,0x60a8)
0x60A96E06,	//0x0332		VoC_bnez16_d(IS_INTRA_left_type,0x60a9)
		//0x0334		IS_INTRA_left_type1
0x5F5F1642,	//0x0334		VoC_and16_ri(REG2,0xdf5f)
0x5F5F1604,	//0x0336		VoC_and16_ri(REG4,0x5f5f)
		//0x0338		IS_INTRA_left_type
0x60AA6E04,	//0x0338		VoC_bnez16_d(IS_INTRA_topleft_type,0x60aa)
0x7FFF1602,	//0x033a		VoC_and16_ri(REG2,0x7fff)
		//0x033c		IS_INTRA_topleft_type
0x60AC6E04,	//0x033c		VoC_bnez16_d(IS_INTRA_topright_type,0x60ac)
0x7BFF1645,	//0x033e		VoC_and16_ri(REG5,0xfbff)
		//0x0340		IS_INTRA_topright_type
		//0x0340		IS_INTRA_constrained_intra_pred
		//0x0340		IS_INTRA_constrained_intra_pred_end
0x02391407,	//0x0340		VoC_lw16_d(REG7,0x239)
0x022C1581,	//0x0342		VoC_sw32_d(REG23,0x22c)
0x022E1582,	//0x0344		VoC_sw32_d(REG45,0x22e)
0xE437F026,	//0x0346		VoC_and16_rr(REG7,REG6,DEFAULT)	|	VoC_lw16i_short(REG6,0x1,DEFAULT)
0x03B13187,	//0x0348		VoC_bez16_r(IS_INTRA_IS_INTRA4x4,REG7)
0x60AB2806,	//0x034a		VoC_and16_rd(REG6,0x60ab)
0x03643186,	//0x034c		VoC_bez16_r(IS_INTRA_IS_INTRA4x4_2,REG6)
0x02130A82,	//0x034e		VoC_lw16i(REG2,0x213)
0x02321404,	//0x0350		VoC_lw16_d(REG4,0x232)
0x408A1485,	//0x0352		VoC_lw32_d(ACC1,0x408a)
0xE0237105,	//0x0354		VoC_lw16i_short(REG3,0x2,IN_PARALLEL)	|	VoC_lw16i_short(REG5,0x8,DEFAULT)
0x03102B80,	//0x0356		VoC_jal(CS_fill_caches_sub)
0x04291805,	//0x0358		VoC_lw16i_set_inc(REG1,0x429,0x1)
0x04021806,	//0x035a		VoC_lw16i_set_inc(REG2,0x402,0x1)
0xE864D89A,	//0x035c		VoC_loop_i_short(0x3,DEFAULT)	|	VoC_lw16inc_p(ACC1_LO,REG1,DEFAULT)
0x7105D89B,	//0x035e		VoC_lw16i_short(REG5,0x8,DEFAULT)	|	VoC_lw16inc_p(ACC1_HI,REG1,DEFAULT)
0xDCABE023,	//0x0360		VoC_sw16inc_p(ACC1_HI,REG2,DEFAULT)	|	VoC_lw16i_short(REG3,0x2,IN_PARALLEL)
		//0x0361		VoC_endloop0
0xE5D5DCAA,	//0x0362		VoC_jump(IS_INTRA_IS_INTRA4x4_2_end)	|	VoC_sw16inc_p(ACC1_LO,REG2,DEFAULT)
		//0x0364		IS_INTRA_IS_INTRA4x4_2
0xEFFB77EA,	//0x0364		VoC_lw16i_short(ACC1_HI,0xffffffff,IN_PARALLEL)	|	VoC_lw16i_short(ACC1_LO,0xffffffff,DEFAULT)
0x0402180A,	//0x0366		VoC_lw16i_set_inc(REG2,0x402,0x2)
0x60AB6C0C,	//0x0368		VoC_bez16_d(IS_INTRA_top_type_333,0x60ab)
0x02166C08,	//0x036a		VoC_bez16_d(IS_INTRA_top_type_444,0x216)
0x2806F0E6,	//0x036c		VoC_and16_rd(REG6,0x60ab)(lo)	|	VoC_lw16i_short(REG6,0x7,DEFAULT)
0x318660AB,	//0x036e		VoC_bez16_r(IS_INTRA_top_type_333,REG6)(lo)	|	VoC_and16_rd(REG6,0x60ab)(hi)
0xFFC00374,	//0x0370		VoC_NAD	|	VoC_bez16_r(IS_INTRA_top_type_333,REG6)(hi)
		//0x0372		IS_INTRA_top_type_444
0xE02B704A,	//0x0372		VoC_lw16i_short(ACC1_HI,0x2,IN_PARALLEL)	|	VoC_lw16i_short(ACC1_LO,0x2,DEFAULT)
		//0x0374		IS_INTRA_top_type_333
0xE0237105,	//0x0374		VoC_lw16i_short(REG3,0x2,IN_PARALLEL)	|	VoC_lw16i_short(REG5,0x8,DEFAULT)
0xDDD5DDD5,	//0x0376		VoC_sw32inc_p(ACC1,REG2,DEFAULT)	|	VoC_sw32inc_p(ACC1,REG2,DEFAULT)
		//0x0378		IS_INTRA_IS_INTRA4x4_2_end
0x02170A82,	//0x0378		VoC_lw16i(REG2,0x217)
0x02301404,	//0x037a		VoC_lw16_d(REG4,0x230)
0x408A1485,	//0x037c		VoC_lw32_d(ACC1,0x408a)
0x03102B80,	//0x037e		VoC_jal(CS_fill_caches_sub)
0x021B0A82,	//0x0380		VoC_lw16i(REG2,0x21b)
0x02301404,	//0x0382		VoC_lw16_d(REG4,0x230)
0x408A1485,	//0x0384		VoC_lw32_d(ACC1,0x408a)
0xE0237105,	//0x0386		VoC_lw16i_short(REG3,0x2,IN_PARALLEL)	|	VoC_lw16i_short(REG5,0x8,DEFAULT)
0x03102B80,	//0x0388		VoC_jal(CS_fill_caches_sub)
0x04091822,	//0x038a		VoC_lw16i_set_inc(REG2,0x409,0x8)
0x042E0A83,	//0x038c		VoC_lw16i(REG3,0x42e)
0x60A81483,	//0x038e		VoC_lw32_d(REG67,0x60a8)
0x49A61809,	//0x0390		VoC_lw16i_set_inc(REG1,0x49a6,0x2)
0x03B02C04,	//0x0392		VoC_loop_i(0x0,0x2)
0x1605E0C5,	//0x0394		VoC_and16_ri(REG5,0x1)(lo)	|	VoC_movreg16(REG5,REG6,DEFAULT)
0x31850001,	//0x0396		VoC_bez16_r(IS_INTRA_IS_INTRA4x4_left_type_else,REG5)(lo)	|	VoC_and16_ri(REG5,0x1)(hi)
0x606E03A3,	//0x0398		VoC_movreg16(RL7_LO,REG3,DEFAULT)	|	VoC_bez16_r(IS_INTRA_IS_INTRA4x4_left_type_else,REG5)(hi)
0x93CAF66F,	//0x039a		VoC_add32inc_rp(REG45,RL7,REG1,DEFAULT)	|	VoC_movreg16(RL7_HI,REG3,IN_PARALLEL)
0x04360A83,	//0x039c		VoC_lw16i(REG3,0x436)
0xD855D844,	//0x039e		VoC_lw16_p(REG5,REG5,DEFAULT)	|	VoC_lw16_p(REG4,REG4,DEFAULT)
0xDCA5DCA4,	//0x03a0		VoC_sw16inc_p(REG5,REG2,DEFAULT)	|	VoC_sw16inc_p(REG4,REG2,DEFAULT)
0xF7EAE5CE,	//0x03a2		VoC_lw16i_short(ACC1_LO,0xffffffff,DEFAULT)	|	VoC_jump(IS_INTRA_IS_INTRA4x4_left_type_end)
		//0x03a3		IS_INTRA_IS_INTRA4x4_left_type_else
0x03AE3186,	//0x03a4		VoC_bez16_r(IS_INTRA_IS_INTRA4x4_left_type_else_3333,REG6)
0x02166C06,	//0x03a6		VoC_bez16_d(IS_INTRA_IS_INTRA4x4_left_type_else_444,0x216)
0x00781606,	//0x03a8		VoC_and16_ri(REG6,0x78)
0x03AE31C6,	//0x03aa		VoC_bnez16_r(IS_INTRA_IS_INTRA4x4_left_type_else_3333,REG6)
		//0x03ac		IS_INTRA_IS_INTRA4x4_left_type_else_444
0xFFC0F04A,	//0x03ac		VoC_NOP	|	VoC_lw16i_short(ACC1_LO,0x2,DEFAULT)
		//0x03ae		IS_INTRA_IS_INTRA4x4_left_type_else_3333
0xDCAADCAA,	//0x03ae		VoC_sw16inc_p(ACC1_LO,REG2,DEFAULT)	|	VoC_sw16inc_p(ACC1_LO,REG2,DEFAULT)
		//0x03b0		IS_INTRA_IS_INTRA4x4_left_type_end
		//0x03b0		VoC_endloop0
0xDFA9E0E6,	//0x03b0		VoC_pop16(RA,DEFAULT)	|	VoC_movreg16(REG6,REG7,DEFAULT)
		//0x03b1		IS_INTRA_IS_INTRA4x4
0xE580FFC0,	//0x03b2		VoC_return	|	VoC_NOP
		//0x03b4		CS_fill_caches_for_deblock
0x0A88FF42,	//0x03b4		VoC_lw16i(ACC0_LO,0x44bb)(lo)	|	VoC_lw32z(REG45,DEFAULT)
0x0A8944BB,	//0x03b6		VoC_lw16i(ACC0_HI,0x597)(lo)	|	VoC_lw16i(ACC0_LO,0x44bb)(hi)
0x14060597,	//0x03b8		VoC_lw16_d(REG6,0x232)(lo)	|	VoC_lw16i(ACC0_HI,0x597)(hi)
0xE0C70232,	//0x03ba		VoC_movreg16(REG7,REG6,DEFAULT)	|	VoC_lw16_d(REG6,0x232)(hi)
0x1504C8E3,	//0x03bc		VoC_sw16_d(REG4,0x60aa)(lo)	|	VoC_add32_rr(REG67,REG67,ACC0,DEFAULT)
0x150460AA,	//0x03be		VoC_sw16_d(REG4,0x60ac)(lo)	|	VoC_sw16_d(REG4,0x60aa)(hi)
0xD86260AC,	//0x03c0		VoC_lw16_p(REG2,REG6,DEFAULT)	|	VoC_sw16_d(REG4,0x60ac)(hi)
0x481AD873,	//0x03c2		VoC_blt16_rd(CS_fill_caches_for_deblock_100,REG2,0x49a0)(lo)	|	VoC_lw16_p(REG3,REG7,DEFAULT)
0xF00349A0,	//0x03c4		VoC_lw16i_short(REG3,0x0,DEFAULT)	|	VoC_blt16_rd(CS_fill_caches_for_deblock_100,REG2,0x49a0)(hi)
		//0x03c6		CS_fill_caches_for_deblock_100
0x02301406,	//0x03c6		VoC_lw16_d(REG6,0x230)
0xC8E3E0C7,	//0x03c8		VoC_add32_rr(REG67,REG67,ACC0,DEFAULT)	|	VoC_movreg16(REG7,REG6,DEFAULT)
0x60AB1503,	//0x03ca		VoC_sw16_d(REG3,0x60ab)
0xD873D864,	//0x03cc		VoC_lw16_p(REG3,REG7,DEFAULT)	|	VoC_lw16_p(REG4,REG6,DEFAULT)
0x482CE062,	//0x03ce		VoC_blt16_rd(CS_fill_caches_for_deblock_200,REG4,0x49a0)(lo)	|	VoC_movreg16(REG2,REG3,DEFAULT)
0xFF4149A0,	//0x03d0		VoC_lw32z(REG23,DEFAULT)	|	VoC_blt16_rd(CS_fill_caches_for_deblock_200,REG4,0x49a0)(hi)
0xFFC07FC0,	//0x03d2		VoC_NAD(IN_PARALLEL)	|	VoC_NOP
		//0x03d4		CS_fill_caches_for_deblock_200
0x60A81581,	//0x03d4		VoC_sw32_d(REG23,0x60a8)
0xD635E580,	//0x03d6		VoC_lw16_sd(REG5,0x2,DEFAULT)	|	VoC_return
		//0x03d7		CS_fill_caches_MBAFF
		//0x03d7		CS_fill_caches_MV_sub1
0x1540C12C,	//0x03d8		VoC_sw16_d(REG0,0xffc3)(lo)	|	VoC_add16_rr(REG4,REG4,REG5,DEFAULT)
0x00A47FC3,	//0x03da		VoC_add16_rp(REG4,REG2,REG4,DEFAULT)	|	VoC_sw16_d(REG0,0xffc3)(hi)
0xFDF2E005,	//0x03dc		VoC_shru32_ri(REG45,0xfffffffe,DEFAULT)	|	VoC_lw16i_short(REG5,0x0,IN_PARALLEL)
0x1547C8A2,	//0x03de		VoC_sw16_d(REG7,0xffc2)(lo)	|	VoC_add32_rr(REG45,REG45,ACC0,DEFAULT)
0x15C27FC2,	//0x03e0		VoC_sw32_d(REG45,0xffc4)(lo)	|	VoC_sw16_d(REG7,0xffc2)(hi)
0xDE807FC4,	//0x03e2		VoC_cfg(0x0)	|	VoC_sw32_d(REG45,0xffc4)(hi)
0x1794FFC0,	//0x03e4		VoC_cfg_lg(0x8,)(lo)	|	VoC_NOP
0xE5800008,	//0x03e6		VoC_return	|	VoC_cfg_lg(0x8,)(hi)
		//0x03e8		CS_fill_caches_MV_Part
0x08180A81,	//0x03e8		VoC_lw16i(REG1,0x818)
0x5F41DFE9,	//0x03ea		VoC_push32(REG23,DEFAULT)	|	VoC_push16(RA,DEFAULT)
0x5FC5DFC1,	//0x03ec		VoC_push16(REG5,DEFAULT)	|	VoC_push16(REG1,IN_PARALLEL)
0x5FC4FF45,	//0x03ee		VoC_push16(REG4,DEFAULT)	|	VoC_lw32z(ACC1,IN_PARALLEL)
0x2805F6C5,	//0x03f0		VoC_and16_rd(REG5,0x239)(lo)	|	VoC_movreg16(REG5,REG6,IN_PARALLEL)
0x31C50239,	//0x03f2		VoC_bnez16_r(CS_fill_caches_MV_go,REG5)(lo)	|	VoC_and16_rd(REG5,0x239)(hi)
0x0A8503FF,	//0x03f4		VoC_lw16i(REG5,0x100)(lo)	|	VoC_bnez16_r(CS_fill_caches_MV_go,REG5)(hi)
0x28050100,	//0x03f6		VoC_and16_rd(REG5,0x239)(lo)	|	VoC_lw16i(REG5,0x100)(hi)
0x31C50239,	//0x03f8		VoC_bnez16_r(CS_fill_caches_MV_go,REG5)(lo)	|	VoC_and16_rd(REG5,0x239)(hi)
0x6E0403FF,	//0x03fa		VoC_bnez16_d(CS_fill_caches_MV_go,0x211)(lo)	|	VoC_bnez16_r(CS_fill_caches_MV_go,REG5)(hi)
0x2B000211,	//0x03fc		VoC_jump_lg(CS_fill_caches_MV_End)(lo)	|	VoC_bnez16_d(CS_fill_caches_MV_go,0x211)(hi)
0xF7E504FC,	//0x03fe		VoC_lw16i_short(REG5,0xffffffff,DEFAULT)	|	VoC_jump_lg(CS_fill_caches_MV_End)(hi)
		//0x03ff		CS_fill_caches_MV_go
0x60AB6E04,	//0x0400		VoC_bnez16_d(CS_fill_caches_MV_top_type,0x60ab)
0xFFC077C5,	//0x0402		VoC_NAD(IN_PARALLEL)	|	VoC_lw16i_short(REG5,0xfffffffe,DEFAULT)
		//0x0404		CS_fill_caches_MV_top_type
0xE0805909,	//0x0404		VoC_lw16i_short(REG0,0x8,IN_PARALLEL)	|	VoC_lw32_sd(REG23,0x0,DEFAULT)
0xF00A7081,	//0x0406		VoC_lw16i_short(INC2,0x2,IN_PARALLEL)	|	VoC_lw16i_short(REG1,0x4,DEFAULT)
0xF0074841,	//0x0408		VoC_lw16i_short(INC3,0x1,IN_PARALLEL)	|	VoC_add32_rr(REG23,REG23,REG01,DEFAULT)
0x04182C05,	//0x040a		VoC_loop_i(0x1,0x2)
0xDDD5E882,	//0x040c		VoC_sw32inc_p(ACC1,REG2,DEFAULT)	|	VoC_loop_i_short(0x4,DEFAULT)
		//0x040e		VoC_endloop0
0xF7E5DCB5,	//0x040e		VoC_lw16i_short(REG5,0xffffffff,DEFAULT)	|	VoC_sw16inc_p(REG5,REG3,DEFAULT)
0x60A86E04,	//0x0410		VoC_bnez16_d(CS_fill_caches_MV_left_type,0x60a8)
0xFFC077C5,	//0x0412		VoC_NAD(IN_PARALLEL)	|	VoC_lw16i_short(REG5,0xfffffffe,DEFAULT)
		//0x0414		CS_fill_caches_MV_left_type
0xE1605909,	//0x0414		VoC_lw16i_short(REG0,0x16,IN_PARALLEL)	|	VoC_lw32_sd(REG23,0x0,DEFAULT)
0xF0427161,	//0x0416		VoC_lw16i_short(INC2,0x10,IN_PARALLEL)	|	VoC_lw16i_short(REG1,0xb,DEFAULT)
		//0x0418		VoC_endloop1
0xF0234841,	//0x0418		VoC_lw16i_short(INC3,0x8,IN_PARALLEL)	|	VoC_add32_rr(REG23,REG23,REG01,DEFAULT)
0x2803E0C3,	//0x041a		VoC_and16_rd(REG3,0x60ab)(lo)	|	VoC_movreg16(REG3,REG6,DEFAULT)
0x318360AB,	//0x041c		VoC_bez16_r(CS_fill_caches_MV_USES_LIST,REG3)(lo)	|	VoC_and16_rd(REG3,0x60ab)(hi)
0xD9090446,	//0x041e		VoC_lw32_sd(REG23,0x0,DEFAULT)	|	VoC_bez16_r(CS_fill_caches_MV_USES_LIST,REG3)(hi)
0xE0417100,	//0x0420		VoC_lw16i_short(REG1,0x4,IN_PARALLEL)	|	VoC_lw16i_short(REG0,0x8,DEFAULT)
0x790AC841,	//0x0422		VoC_shru16_ri(REG2,0x1,DEFAULT)	|	VoC_add32_rr(REG23,REG23,REG01,DEFAULT)
0x072CD635,	//0x0424		VoC_add16_rd(REG4,REG5,0x232)(lo)	|	VoC_lw16_sd(REG5,0x2,IN_PARALLEL)
0x70600232,	//0x0426		VoC_lw16i_short(REG0,0x3,DEFAULT)	|	VoC_add16_rd(REG4,REG5,0x232)(hi)
0x0800E041,	//0x0428		VoC_mult16_rd(REG0,REG0,0x233)(lo)	|	VoC_lw16i_short(REG1,0x4,IN_PARALLEL)
0x15420233,	//0x042a		VoC_sw16_d(REG2,0xffc3)(lo)	|	VoC_mult16_rd(REG0,REG0,0x233)(hi)
0x00247FC3,	//0x042c		VoC_add16_rp(REG4,REG0,REG4,DEFAULT)	|	VoC_sw16_d(REG2,0xffc3)(hi)
0xFDF2E005,	//0x042e		VoC_shru32_ri(REG45,0xfffffffe,DEFAULT)	|	VoC_lw16i_short(REG5,0x0,IN_PARALLEL)
0x1541C8A2,	//0x0430		VoC_sw16_d(REG1,0xffc2)(lo)	|	VoC_add32_rr(REG45,REG45,ACC0,DEFAULT)
0x15C27FC2,	//0x0432		VoC_sw32_d(REG45,0xffc4)(lo)	|	VoC_sw16_d(REG1,0xffc2)(hi)
0xDE807FC4,	//0x0434		VoC_cfg(0x0)	|	VoC_sw32_d(REG45,0xffc4)(hi)
0x1794FFC0,	//0x0436		VoC_cfg_lg(0x8,)(lo)	|	VoC_NOP
0x14020008,	//0x0438		VoC_lw16_d(REG2,0x222)(lo)	|	VoC_cfg_lg(0x8,)(hi)
0x79FA0222,	//0x043a		VoC_shru16_ri(REG2,0xffffffff,DEFAULT)	|	VoC_lw16_d(REG2,0x222)(hi)
0x0712D614,	//0x043c		VoC_add16_rd(REG2,REG2,0x234)(lo)	|	VoC_lw16_sd(REG4,0x0,IN_PARALLEL)
0xC0A20234,	//0x043e		VoC_add16_rr(REG2,REG2,REG4,DEFAULT)	|	VoC_add16_rd(REG2,REG2,0x234)(hi)
0xD992F033,	//0x0440		VoC_lw32_p(REG45,REG2,DEFAULT)	|	VoC_lw16i_short(INC3,0x1,DEFAULT)
0xDCB4E843,	//0x0442		VoC_sw16inc_p(REG4,REG3,DEFAULT)	|	VoC_loop_i_short(0x2,DEFAULT)
0xDCB4E0A4,	//0x0444		VoC_sw16inc_p(REG4,REG3,DEFAULT)	|	VoC_movreg16(REG4,REG5,DEFAULT)
		//0x0445		VoC_endloop0
		//0x0446		CS_fill_caches_MV_USES_LIST
0x60A81404,	//0x0446		VoC_lw16_d(REG4,0x60a8)
0x3184E434,	//0x0448		VoC_bez16_r(CS_fill_caches_MV_USES_LIST_left_type,REG4)(lo)	|	VoC_and16_rr(REG4,REG6,DEFAULT)
0x59080470,	//0x044a		VoC_lw32_sd(REG01,0x0,DEFAULT)	|	VoC_bez16_r(CS_fill_caches_MV_USES_LIST_left_type,REG4)(hi)
0x7163E162,	//0x044c		VoC_lw16i_short(REG3,0xb,DEFAULT)	|	VoC_lw16i_short(REG2,0x16,IN_PARALLEL)
0x4808F020,	//0x044e		VoC_add32_rr(REG01,REG01,REG23,DEFAULT)	|	VoC_lw16i_short(INC0,0x8,IN_PARALLEL)
0x7908F021,	//0x0450		VoC_shru16_ri(REG0,0x1,DEFAULT)	|	VoC_lw16i_short(INC1,0x8,IN_PARALLEL)
0x7062E017,	//0x0452		VoC_lw16i_short(REG2,0x3,DEFAULT)	|	VoC_lw16i_short(REG7,0x1,IN_PARALLEL)
0xFFC0E013,	//0x0454		VoC_NAD	|	VoC_lw16i_short(REG3,0x1,IN_PARALLEL)
0x046D2C05,	//0x0456		VoC_loop_i(0x1,0x2)
0x046C2C04,	//0x0458		VoC_loop_i(0x0,0x2)
0x02301404,	//0x045a		VoC_lw16_d(REG4,0x230)
0x03D72B80,	//0x045c		VoC_jal(CS_fill_caches_MV_sub1)
0x02221405,	//0x045e		VoC_lw16_d(REG5,0x222)
0xE02479FD,	//0x0460		VoC_lw16i_short(REG4,0x2,IN_PARALLEL)	|	VoC_shru16_ri(REG5,0xffffffff,DEFAULT)
0xD6144365,	//0x0462		VoC_lw16_sd(REG4,0x0,IN_PARALLEL)	|	VoC_sub16_rr(REG5,REG5,REG4,DEFAULT)
0xC165C15D,	//0x0464		VoC_add16_rr(REG5,REG5,REG4,DEFAULT)	|	VoC_add16_rr(REG5,REG5,REG3,DEFAULT)
0xD854FFC0,	//0x0466		VoC_lw16_p(REG4,REG5,DEFAULT)	|	VoC_NOP
0xDC94FFC0,	//0x0468		VoC_sw16inc_p(REG4,REG1,DEFAULT)	|	VoC_NOP
0x02330712,	//0x046a		VoC_add16_rd(REG2,REG2,0x233)
		//0x046c		VoC_endloop0
0x071BDE00,	//0x046c		VoC_add16_rd(REG3,REG3,0x234)(lo)	|	VoC_inc_p(REG0,DEFAULT)
		//0x046d		VoC_endloop1
0xFFC00234,	//0x046e		VoC_NAD	|	VoC_add16_rd(REG3,REG3,0x234)(hi)
		//0x0470		CS_fill_caches_MV_USES_LIST_left_type
0x02146E0E,	//0x0470		VoC_bnez16_d(CS_fill_caches_MV_for_deblock_go_end,0x214)
0x60AD6E0A,	//0x0472		VoC_bnez16_d(CS_fill_caches_MV_for_deblock_continue,0x60ad)
0x01000A85,	//0x0474		VoC_lw16i(REG5,0x100)
0x02392805,	//0x0476		VoC_and16_rd(REG5,0x239)
0x047E3185,	//0x0478		VoC_bez16_r(CS_fill_caches_MV_for_deblock_go_end,REG5)
0x0AB96E04,	//0x047a		VoC_bnez16_d(CS_fill_caches_MV_for_deblock_go_end,0xab9)
		//0x047c		CS_fill_caches_MV_for_deblock_continue
0x04FC2B00,	//0x047c		VoC_jump_lg(CS_fill_caches_MV_End)
		//0x047e		CS_fill_caches_MV_for_deblock_go_end
0xE0625908,	//0x047e		VoC_lw16i_short(REG2,0x6,IN_PARALLEL)	|	VoC_lw32_sd(REG01,0x0,DEFAULT)
0xE0334010,	//0x0480		VoC_lw16i_short(REG3,0x3,IN_PARALLEL)	|	VoC_add16_rr(REG0,REG0,REG2,DEFAULT)
0xC0597142,	//0x0482		VoC_add16_rr(REG1,REG1,REG3,IN_PARALLEL)	|	VoC_lw16i_short(REG2,0xa,DEFAULT)
0xC0105D85,	//0x0484		VoC_add16_rr(REG0,REG0,REG2,IN_PARALLEL)	|	VoC_sw32_p(ACC1,REG0,DEFAULT)
0x60AA1404,	//0x0486		VoC_lw16_d(REG4,0x60aa)
0xE0535D85,	//0x0488		VoC_lw16i_short(REG3,0x5,IN_PARALLEL)	|	VoC_sw32_p(ACC1,REG0,DEFAULT)
0xF7E5E848,	//0x048a		VoC_lw16i_short(REG5,0xffffffff,DEFAULT)	|	VoC_loop_i_short(0x2,DEFAULT)
0x049031C4,	//0x048c		VoC_bnez16_r(left_type_LIST_NOT_USED_100,REG4)
0xFFC077C5,	//0x048e		VoC_NAD(IN_PARALLEL)	|	VoC_lw16i_short(REG5,0xfffffffe,DEFAULT)
		//0x0490		left_type_LIST_NOT_USED_100
0x60AC1404,	//0x0490		VoC_lw16_d(REG4,0x60ac)
		//0x0492		VoC_endloop0
0xC0595C15,	//0x0492		VoC_add16_rr(REG1,REG1,REG3,IN_PARALLEL)	|	VoC_sw16_p(REG5,REG1,DEFAULT)
0x60AA1403,	//0x0494		VoC_lw16_d(REG3,0x60aa)
0x3183E433,	//0x0496		VoC_bez16_r(USES_LIST_topleft_type,REG3)(lo)	|	VoC_and16_rr(REG3,REG6,DEFAULT)
0x590804B0,	//0x0498		VoC_lw32_sd(REG01,0x0,DEFAULT)	|	VoC_bez16_r(USES_LIST_topleft_type,REG3)(hi)
0xF063E062,	//0x049a		VoC_lw16i_short(REG3,0x3,DEFAULT)	|	VoC_lw16i_short(REG2,0x6,IN_PARALLEL)
0x7908C808,	//0x049c		VoC_shru16_ri(REG0,0x1,DEFAULT)	|	VoC_add32_rr(REG01,REG01,REG23,DEFAULT)
0x081AE017,	//0x049e		VoC_mult16_rd(REG2,REG3,0x233)(lo)	|	VoC_lw16i_short(REG7,0x1,IN_PARALLEL)
0x14040233,	//0x04a0		VoC_lw16_d(REG4,0x60ae)(lo)	|	VoC_mult16_rd(REG2,REG3,0x233)(hi)
0xC09A60AE,	//0x04a2		VoC_add16_rr(REG2,REG2,REG3,DEFAULT)	|	VoC_lw16_d(REG4,0x60ae)(hi)
0x03D72B80,	//0x04a4		VoC_jal(CS_fill_caches_MV_sub1)
0x02221402,	//0x04a6		VoC_lw16_d(REG2,0x222)
0xC2BA5624,	//0x04a8		VoC_sub16_rr(REG2,REG2,REG7,IN_PARALLEL)	|	VoC_lw16_sd(REG4,0x1,DEFAULT)
0xFFC0C0A2,	//0x04aa		VoC_NOP	|	VoC_add16_rr(REG2,REG2,REG4,DEFAULT)
0xFFC0D824,	//0x04ac		VoC_NOP	|	VoC_lw16_p(REG4,REG2,DEFAULT)
0xFFC05C14,	//0x04ae		VoC_NAD(IN_PARALLEL)	|	VoC_sw16_p(REG4,REG1,DEFAULT)
		//0x04b0		USES_LIST_topleft_type
0x60AC2806,	//0x04b0		VoC_and16_rd(REG6,0x60ac)
0x04D03186,	//0x04b2		VoC_bez16_r(USES_LIST_topright_type,REG6)
0xE1025908,	//0x04b4		VoC_lw16i_short(REG2,0x10,IN_PARALLEL)	|	VoC_lw32_sd(REG01,0x0,DEFAULT)
0x4808F103,	//0x04b6		VoC_add32_rr(REG01,REG01,REG23,DEFAULT)	|	VoC_lw16i_short(REG3,0x8,DEFAULT)
0x7908E033,	//0x04b8		VoC_shru16_ri(REG0,0x1,DEFAULT)	|	VoC_lw16i_short(REG3,0x3,IN_PARALLEL)
0x081AE017,	//0x04ba		VoC_mult16_rd(REG2,REG3,0x233)(lo)	|	VoC_lw16i_short(REG7,0x1,IN_PARALLEL)
0x14040233,	//0x04bc		VoC_lw16_d(REG4,0x60af)(lo)	|	VoC_mult16_rd(REG2,REG3,0x233)(hi)
0xFFC060AF,	//0x04be		VoC_NAD	|	VoC_lw16_d(REG4,0x60af)(hi)
0x03D72B80,	//0x04c0		VoC_jal(CS_fill_caches_MV_sub1)
0x02221402,	//0x04c2		VoC_lw16_d(REG2,0x222)
0xF9FAD614,	//0x04c4		VoC_shru16_ri(REG2,0xffffffff,DEFAULT)	|	VoC_lw16_sd(REG4,0x0,DEFAULT)
0xC1127045,	//0x04c6		VoC_add16_rr(REG2,REG4,REG2,IN_PARALLEL)	|	VoC_lw16i_short(REG5,0x2,DEFAULT)
0x0712C0AA,	//0x04c8		VoC_add16_rd(REG2,REG2,0x234)(lo)	|	VoC_add16_rr(REG2,REG2,REG5,DEFAULT)
0xFFC00234,	//0x04ca		VoC_NOP	|	VoC_add16_rd(REG2,REG2,0x234)(hi)
0xFFC0D824,	//0x04cc		VoC_NOP	|	VoC_lw16_p(REG4,REG2,DEFAULT)
0xFFC05C14,	//0x04ce		VoC_NAD(IN_PARALLEL)	|	VoC_sw16_p(REG4,REG1,DEFAULT)
		//0x04d0		USES_LIST_topright_type
0x02146E10,	//0x04d0		VoC_bnez16_d(CS_fill_caches_MV_for_IS_SKIP_end,0x214)
0x01000A85,	//0x04d2		VoC_lw16i(REG5,0x100)
0x02392805,	//0x04d4		VoC_and16_rd(REG5,0x239)
0x04DE31C5,	//0x04d6		VoC_bnez16_r(CS_fill_caches_MV_go_100,REG5)
0x08000A85,	//0x04d8		VoC_lw16i(REG5,0x800)
0x02392805,	//0x04da		VoC_and16_rd(REG5,0x239)
0x04E03185,	//0x04dc		VoC_bez16_r(CS_fill_caches_MV_for_IS_SKIP_end,REG5)
		//0x04de		CS_fill_caches_MV_go_100
0xFFC065DE,	//0x04de		VoC_NAD(IN_PARALLEL)	|	VoC_jump(CS_fill_caches_MV_End)
		//0x04e0		CS_fill_caches_MV_for_IS_SKIP_end
0xD90877CE,	//0x04e0		VoC_lw32_sd(REG01,0x0,IN_PARALLEL)	|	VoC_lw16i_short(RL7_LO,0xfffffffe,DEFAULT)
0xE0E37382,	//0x04e2		VoC_lw16i_short(REG3,0xe,IN_PARALLEL)	|	VoC_lw16i_short(REG2,0x1c,DEFAULT)
0xE0424808,	//0x04e4		VoC_lw16i_short(REG2,0x4,IN_PARALLEL)	|	VoC_add32_rr(REG01,REG01,REG23,DEFAULT)
0xE1047043,	//0x04e6		VoC_lw16i_short(REG4,0x10,IN_PARALLEL)	|	VoC_lw16i_short(REG3,0x2,DEFAULT)
0xC8085C1E,	//0x04e8		VoC_add32_rr(REG01,REG01,REG23,IN_PARALLEL)	|	VoC_sw16_p(RL7_LO,REG1,DEFAULT)
0xE0855D85,	//0x04ea		VoC_lw16i_short(REG5,0x8,IN_PARALLEL)	|	VoC_sw32_p(ACC1,REG0,DEFAULT)
0xC8105C1E,	//0x04ec		VoC_add32_rr(REG01,REG01,REG45,IN_PARALLEL)	|	VoC_sw16_p(RL7_LO,REG1,DEFAULT)
0xE0C45D85,	//0x04ee		VoC_lw16i_short(REG4,0xc,IN_PARALLEL)	|	VoC_sw32_p(ACC1,REG0,DEFAULT)
0xE0655C1E,	//0x04f0		VoC_lw16i_short(REG5,0x6,IN_PARALLEL)	|	VoC_sw16_p(RL7_LO,REG1,DEFAULT)
0xC8105D85,	//0x04f2		VoC_add32_rr(REG01,REG01,REG45,IN_PARALLEL)	|	VoC_sw32_p(ACC1,REG0,DEFAULT)
0xE0257084,	//0x04f4		VoC_lw16i_short(REG5,0x2,IN_PARALLEL)	|	VoC_lw16i_short(REG4,0x4,DEFAULT)
0xC8105C1E,	//0x04f6		VoC_add32_rr(REG01,REG01,REG45,IN_PARALLEL)	|	VoC_sw16_p(RL7_LO,REG1,DEFAULT)
0xDC1EDD85,	//0x04f8		VoC_sw16_p(RL7_LO,REG1,DEFAULT)	|	VoC_sw32_p(ACC1,REG0,DEFAULT)
0xFFC05D85,	//0x04fa		VoC_NAD(IN_PARALLEL)	|	VoC_sw32_p(ACC1,REG0,DEFAULT)
		//0x04fc		CS_fill_caches_MV_End
0xDF845F01,	//0x04fc		VoC_pop16(REG4,IN_PARALLEL)	|	VoC_pop32(REG23,DEFAULT)
0xDF81DF85,	//0x04fe		VoC_pop16(REG1,DEFAULT)	|	VoC_pop16(REG5,DEFAULT)
0xFFC0DFA9,	//0x0500		VoC_NOP	|	VoC_pop16(RA,DEFAULT)
0xDFC7E580,	//0x0502		VoC_push16(REG7,DEFAULT)	|	VoC_return
		//0x0503		CS_fill_caches_MV
0xDFE9DFC0,	//0x0504		VoC_push16(RA,DEFAULT)	|	VoC_push16(REG0,DEFAULT)
0x408C1484,	//0x0506		VoC_lw32_d(ACC0,0x408c)
0x043E0A82,	//0x0508		VoC_lw16i(REG2,0x43e)
0x048E0A83,	//0x050a		VoC_lw16i(REG3,0x48e)
0x203A0A85,	//0x050c		VoC_lw16i(REG5,0x203a)
0x5FA80A84,	//0x050e		VoC_lw16i(REG4,0x5fa8)
0x30000A86,	//0x0510		VoC_lw16i(REG6,0x3000)
0x03E82B80,	//0x0512		VoC_jal(CS_fill_caches_MV_Part)
0x390AF042,	//0x0514		VoC_bgt16_rd(CS_fill_caches_MV_Done,REG2,0x219)(lo)	|	VoC_lw16i_short(REG2,0x2,DEFAULT)
0x14840219,	//0x0516		VoC_lw32_d(ACC0,0x408e)(lo)	|	VoC_bgt16_rd(CS_fill_caches_MV_Done,REG2,0x219)(hi)
0x0A82408E,	//0x0518		VoC_lw16i(REG2,0x4b6)(lo)	|	VoC_lw32_d(ACC0,0x408e)(hi)
0x0A8304B6,	//0x051a		VoC_lw16i(REG3,0x506)(lo)	|	VoC_lw16i(REG2,0x4b6)(hi)
0x0A850506,	//0x051c		VoC_lw16i(REG5,0x205a)(lo)	|	VoC_lw16i(REG3,0x506)(hi)
0x0A84205A,	//0x051e		VoC_lw16i(REG4,0x6028)(lo)	|	VoC_lw16i(REG5,0x205a)(hi)
0x0AC66028,	//0x0520		VoC_lw16i(REG6,0xc000)(lo)	|	VoC_lw16i(REG4,0x6028)(hi)
0xFFC04000,	//0x0522		VoC_NAD	|	VoC_lw16i(REG6,0xc000)(hi)
0x03E82B80,	//0x0524		VoC_jal(CS_fill_caches_MV_Part)
		//0x0526		CS_fill_caches_MV_Done
0xDFA97030,	//0x0526		VoC_pop16(RA,IN_PARALLEL)	|	VoC_lw16i_short(INC0,0x1,DEFAULT)
0xDF87DF80,	//0x0528		VoC_pop16(REG7,DEFAULT)	|	VoC_pop16(REG0,DEFAULT)
0xF003E580,	//0x052a		VoC_lw16i_short(REG3,0x0,DEFAULT)	|	VoC_return
		//0x052b		CS_fill_caches
0x0246079B,	//0x052c		VoC_sub16_rd(REG3,REG3,0x246)
0x60AD1506,	//0x052e		VoC_sw16_d(REG6,0x60ad)
0x02131404,	//0x0530		VoC_lw16_d(REG4,0x213)
0xE0157E5C,	//0x0532		VoC_lw16i_short(REG5,0x1,IN_PARALLEL)	|	VoC_shru16_rr(REG4,REG3,DEFAULT)
0x022B0B24,	//0x0534		VoC_sub16_dr(REG4,0x22b,REG4)
0x05473186,	//0x0536		VoC_bez16_r(CS_fill_caches_go,REG6)
0x021540A5,	//0x0538		VoC_be16_rd(CS_fill_caches_check_mbaff,REG5,0x215)
0x44BB0A82,	//0x053a		VoC_lw16i(REG2,0x44bb)
0x022B0713,	//0x053c		VoC_add16_rd(REG3,REG2,0x22b)
0xD833C0A2,	//0x053e		VoC_lw16_p(REG3,REG3,DEFAULT)	|	VoC_add16_rr(REG2,REG2,REG4,DEFAULT)
0x3593D822,	//0x0540		VoC_bne16_rr(CS_fill_caches_go,REG2,REG3)(lo)	|	VoC_lw16_p(REG2,REG2,DEFAULT)
0xFFC00547,	//0x0542		VoC_NAD	|	VoC_bne16_rr(CS_fill_caches_go,REG2,REG3)(hi)
		//0x0544		CS_fill_caches_check_mbaff
0x02146E03,	//0x0544		VoC_bnez16_d(CS_fill_caches_go,0x214)
0xDFE9E580,	//0x0546		VoC_push16(RA,DEFAULT)	|	VoC_return
		//0x0547		CS_fill_caches_go
0xC12B432A,	//0x0548		VoC_add16_rr(REG3,REG4,REG5,IN_PARALLEL)	|	VoC_sub16_rr(REG2,REG4,REG5,DEFAULT)
0x022B0B2D,	//0x054a		VoC_sub16_dr(REG5,0x22b,REG5)
0x02321504,	//0x054c		VoC_sw16_d(REG4,0x232)
0x02301505,	//0x054e		VoC_sw16_d(REG5,0x230)
0x02311505,	//0x0550		VoC_sw16_d(REG5,0x231)
0x60AE1581,	//0x0552		VoC_sw32_d(REG23,0x60ae)
0x6C07DF43,	//0x0554		VoC_bez16_d(CS_fill_caches_not_for_deblock,0x60ad)(lo)	|	VoC_push32(REG67,DEFAULT)
0xFFC060AD,	//0x0556		VoC_NAD	|	VoC_bez16_d(CS_fill_caches_not_for_deblock,0x60ad)(hi)
0x03B42B80,	//0x0558		VoC_jal(CS_fill_caches_for_deblock)
0x058E2B00,	//0x055a		VoC_jump_lg(CS_fill_caches_for_deblock_end)
		//0x055c		CS_fill_caches_not_for_deblock
0x44BB0A88,	//0x055c		VoC_lw16i(ACC0_LO,0x44bb)
0x05970A89,	//0x055e		VoC_lw16i(ACC0_HI,0x597)
0xF6476046,	//0x0560		VoC_movreg16(REG7,REG2,IN_PARALLEL)	|	VoC_movreg16(REG6,REG2,DEFAULT)
0xF005C8E3,	//0x0562		VoC_lw16i_short(REG5,0x0,DEFAULT)	|	VoC_add32_rr(REG67,REG67,ACC0,DEFAULT)
0x441ED866,	//0x0564		VoC_bne16_rd(CS_slice_num_11,REG6,0x215)(lo)	|	VoC_lw16_p(REG6,REG6,DEFAULT)
0xD8750215,	//0x0566		VoC_lw16_p(REG5,REG7,DEFAULT)	|	VoC_bne16_rd(CS_slice_num_11,REG6,0x215)(hi)
		//0x0568		CS_slice_num_11
0x02321406,	//0x0568		VoC_lw16_d(REG6,0x232)
0xC8E3E0C7,	//0x056a		VoC_add32_rr(REG67,REG67,ACC0,DEFAULT)	|	VoC_movreg16(REG7,REG6,DEFAULT)
0x60AA1505,	//0x056c		VoC_sw16_d(REG5,0x60aa)
0xD8667005,	//0x056e		VoC_lw16_p(REG6,REG6,IN_PARALLEL)	|	VoC_lw16i_short(REG5,0x0,DEFAULT)
0x02154426,	//0x0570		VoC_bne16_rd(CS_slice_num_22,REG6,0x215)
0xFFC05875,	//0x0572		VoC_NAD(IN_PARALLEL)	|	VoC_lw16_p(REG5,REG7,DEFAULT)
		//0x0574		CS_slice_num_22
0xF6676066,	//0x0574		VoC_movreg16(REG7,REG3,IN_PARALLEL)	|	VoC_movreg16(REG6,REG3,DEFAULT)
0x1505C8E3,	//0x0576		VoC_sw16_d(REG5,0x60ab)(lo)	|	VoC_add32_rr(REG67,REG67,ACC0,DEFAULT)
0x700560AB,	//0x0578		VoC_lw16i_short(REG5,0x0,DEFAULT)	|	VoC_sw16_d(REG5,0x60ab)(hi)
0x441ED866,	//0x057a		VoC_bne16_rd(CS_slice_num_33,REG6,0x215)(lo)	|	VoC_lw16_p(REG6,REG6,IN_PARALLEL)
0xD8750215,	//0x057c		VoC_lw16_p(REG5,REG7,DEFAULT)	|	VoC_bne16_rd(CS_slice_num_33,REG6,0x215)(hi)
		//0x057e		CS_slice_num_33
0x02301406,	//0x057e		VoC_lw16_d(REG6,0x230)
0xC8E3E0C7,	//0x0580		VoC_add32_rr(REG67,REG67,ACC0,DEFAULT)	|	VoC_movreg16(REG7,REG6,DEFAULT)
0x60AC1505,	//0x0582		VoC_sw16_d(REG5,0x60ac)
0xD8667005,	//0x0584		VoC_lw16_p(REG6,REG6,IN_PARALLEL)	|	VoC_lw16i_short(REG5,0x0,DEFAULT)
0x02154426,	//0x0586		VoC_bne16_rd(CS_slice_num_44,REG6,0x215)
0xFFC0D875,	//0x0588		VoC_NOP	|	VoC_lw16_p(REG5,REG7,DEFAULT)
		//0x058a		CS_slice_num_44
0x60A81505,	//0x058a		VoC_sw16_d(REG5,0x60a8)
0x60A91505,	//0x058c		VoC_sw16_d(REG5,0x60a9)
		//0x058e		CS_fill_caches_for_deblock_end
0x2806F0E6,	//0x058e		VoC_and16_rd(REG6,0x239)(lo)	|	VoC_lw16i_short(REG6,0x7,DEFAULT)
0x31860239,	//0x0590		VoC_bez16_r(CS_fill_caches_intra_end,REG6)(lo)	|	VoC_and16_rd(REG6,0x239)(hi)
0x2B800595,	//0x0592		VoC_jal(CS_fill_caches_IS_INTRA)(lo)	|	VoC_bez16_r(CS_fill_caches_intra_end,REG6)(hi)
0xDF03031F,	//0x0594		VoC_pop32(REG67,DEFAULT)	|	VoC_jal(CS_fill_caches_IS_INTRA)(hi)
		//0x0595		CS_fill_caches_intra_end
0x03CE0A8E,	//0x0596		VoC_lw16i(RL7_LO,0x3ce)
0xF7CF5FC7,	//0x0598		VoC_movreg16(RL7_HI,RL7_LO,IN_PARALLEL)	|	VoC_push16(REG7,DEFAULT)
0x482C180B,	//0x059a		VoC_lw16i_set_inc(REG3,0x482c,0x2)
0x00400A8A,	//0x059c		VoC_lw16i(ACC1_LO,0x40)
0xE90393DA,	//0x059e		VoC_loop_i_short(0x8,DEFAULT)	|	VoC_add32inc_rp(REG45,RL7,REG3,DEFAULT)
0x93DADC4A,	//0x05a0		VoC_add32inc_rp(REG45,RL7,REG3,DEFAULT)	|	VoC_sw16_p(ACC1_LO,REG4,DEFAULT)
		//0x05a2		VoC_endloop0
0x6C1BDC5A,	//0x05a2		VoC_bez16_d(CS_fill_caches_top_type,0x60ab)(lo)	|	VoC_sw16_p(ACC1_LO,REG5,DEFAULT)
0x140460AB,	//0x05a4		VoC_lw16_d(REG4,0x232)(lo)	|	VoC_bez16_d(CS_fill_caches_top_type,0x60ab)(hi)
0x0A820232,	//0x05a6		VoC_lw16i(REG2,0x20e5)(lo)	|	VoC_lw16_d(REG4,0x232)(hi)
0x148520E5,	//0x05a8		VoC_lw32_d(ACC1,0x4088)(lo)	|	VoC_lw16i(REG2,0x20e5)(hi)
0x72054088,	//0x05aa		VoC_lw16i_short(REG5,0x10,DEFAULT)	|	VoC_lw32_d(ACC1,0x4088)(hi)
0xFFC0E043,	//0x05ac		VoC_NAD	|	VoC_lw16i_short(REG3,0x4,IN_PARALLEL)
0x03102B80,	//0x05ae		VoC_jal(CS_fill_caches_sub)
0x41CA0A8B,	//0x05b0		VoC_lw16i(ACC1_HI,0x41ca)
0x483C180A,	//0x05b2		VoC_lw16i_set_inc(REG2,0x483c,0x2)
0x482C180B,	//0x05b4		VoC_lw16i_set_inc(REG3,0x482c,0x2)
0xF76A6887,	//0x05b6		VoC_movreg16(ACC1_LO,ACC1_HI,IN_PARALLEL)	|	VoC_loop_i_short(0x4,DEFAULT)
0x93DA9353,	//0x05b8		VoC_add32inc_rp(REG45,RL7,REG3,DEFAULT)	|	VoC_add32inc_rp(REG67,ACC1,REG2,DEFAULT)
0xD879D868,	//0x05ba		VoC_lw16_p(ACC0_HI,REG7,DEFAULT)	|	VoC_lw16_p(ACC0_LO,REG6,DEFAULT)
0xDC59DC48,	//0x05bc		VoC_sw16_p(ACC0_HI,REG5,DEFAULT)	|	VoC_sw16_p(ACC0_LO,REG4,DEFAULT)
		//0x05bd		VoC_endloop0
		//0x05be		CS_fill_caches_top_type
0xE0437205,	//0x05be		VoC_lw16i_short(REG3,0x4,IN_PARALLEL)	|	VoC_lw16i_short(REG5,0x10,DEFAULT)
0x02301404,	//0x05c0		VoC_lw16_d(REG4,0x230)
0x20ED0A82,	//0x05c2		VoC_lw16i(REG2,0x20ed)
0x40881485,	//0x05c4		VoC_lw32_d(ACC1,0x4088)
0x03102B80,	//0x05c6		VoC_jal(CS_fill_caches_sub)
0x4834180B,	//0x05c8		VoC_lw16i_set_inc(REG3,0x4834,0x2)
0x49A61811,	//0x05ca		VoC_lw16i_set_inc(REG1,0x49a6,0x4)
0x0A8DDF46,	//0x05cc		VoC_lw16i(RL6_HI,0x41da)(lo)	|	VoC_push32(RL6,DEFAULT)
0xE1AC41DA,	//0x05ce		VoC_movreg16(RL6_LO,RL6_HI,DEFAULT)	|	VoC_lw16i(RL6_HI,0x41da)(hi)
0x60A86C0A,	//0x05d0		VoC_bez16_d(CS_fill_caches_left_type0,0x60a8)
0xE846938B,	//0x05d2		VoC_loop_i_short(0x2,DEFAULT)	|	VoC_add32inc_rp(REG67,RL6,REG1,DEFAULT)
0xD879D868,	//0x05d4		VoC_lw16_p(ACC0_HI,REG7,DEFAULT)	|	VoC_lw16_p(ACC0_LO,REG6,DEFAULT)
0x938B93DA,	//0x05d6		VoC_add32inc_rp(REG67,RL6,REG1,DEFAULT)	|	VoC_add32inc_rp(REG45,RL7,REG3,DEFAULT)
0xDC59DC48,	//0x05d8		VoC_sw16_p(ACC0_HI,REG5,DEFAULT)	|	VoC_sw16_p(ACC0_LO,REG4,DEFAULT)
		//0x05d9		VoC_endloop0
		//0x05da		CS_fill_caches_left_type0
0xE0437205,	//0x05da		VoC_lw16i_short(REG3,0x4,IN_PARALLEL)	|	VoC_lw16i_short(REG5,0x10,DEFAULT)
0x02311404,	//0x05dc		VoC_lw16_d(REG4,0x231)
0x20F50A82,	//0x05de		VoC_lw16i(REG2,0x20f5)
0x40881485,	//0x05e0		VoC_lw32_d(ACC1,0x4088)
0x03102B80,	//0x05e2		VoC_jal(CS_fill_caches_sub)
0x4838180B,	//0x05e4		VoC_lw16i_set_inc(REG3,0x4838,0x2)
0x41EA0A8D,	//0x05e6		VoC_lw16i(RL6_HI,0x41ea)
0x49A81811,	//0x05e8		VoC_lw16i_set_inc(REG1,0x49a8,0x4)
0x6C0BE1AC,	//0x05ea		VoC_bez16_d(CS_fill_caches_left_type1,0x60a9)(lo)	|	VoC_movreg16(RL6_LO,RL6_HI,DEFAULT)
0x938B60A9,	//0x05ec		VoC_add32inc_rp(REG67,RL6,REG1,DEFAULT)	|	VoC_bez16_d(CS_fill_caches_left_type1,0x60a9)(hi)
0xD868E846,	//0x05ee		VoC_lw16_p(ACC0_LO,REG6,DEFAULT)	|	VoC_loop_i_short(0x2,DEFAULT)
0x93DAD879,	//0x05f0		VoC_add32inc_rp(REG45,RL7,REG3,DEFAULT)	|	VoC_lw16_p(ACC0_HI,REG7,DEFAULT)
0xDC48938B,	//0x05f2		VoC_sw16_p(ACC0_LO,REG4,DEFAULT)	|	VoC_add32inc_rp(REG67,RL6,REG1,DEFAULT)
		//0x05f4		VoC_endloop0
0xFFC05C59,	//0x05f4		VoC_NAD(IN_PARALLEL)	|	VoC_sw16_p(ACC0_HI,REG5,DEFAULT)
		//0x05f6		CS_fill_caches_left_type1
0xDF875F06,	//0x05f6		VoC_pop16(REG7,IN_PARALLEL)	|	VoC_pop32(RL6,DEFAULT)
0x00780A86,	//0x05f8		VoC_lw16i(REG6,0x78)
0x31C6E43E,	//0x05fa		VoC_bnez16_r(CS_fill_caches_IS_INTER,REG6)(lo)	|	VoC_and16_rr(REG6,REG7,DEFAULT)
0x0A860602,	//0x05fc		VoC_lw16i(REG6,0x100)(lo)	|	VoC_bnez16_r(CS_fill_caches_IS_INTER,REG6)(hi)
0xE43E0100,	//0x05fe		VoC_and16_rr(REG6,REG7,DEFAULT)	|	VoC_lw16i(REG6,0x100)(hi)
0x06043186,	//0x0600		VoC_bez16_r(CS_fill_caches_finish,REG6)
		//0x0602		CS_fill_caches_IS_INTER
0x05032B80,	//0x0602		VoC_jal(CS_fill_caches_MV)
		//0x0604		CS_fill_caches_finish
0xFFC0DFA9,	//0x0604		VoC_NOP	|	VoC_pop16(RA,DEFAULT)
0xFFC06580,	//0x0606		VoC_NAD(IN_PARALLEL)	|	VoC_return
		//0x0608		CS_write_back_non_zero_count
0x41CA1805,	//0x0608		VoC_lw16i_set_inc(REG1,0x41ca,0x1)
0x484C180A,	//0x060a		VoC_lw16i_set_inc(REG2,0x484c,0x2)
0x03CE0A8E,	//0x060c		VoC_lw16i(RL7_LO,0x3ce)
0x93D2E1CF,	//0x060e		VoC_add32inc_rp(REG45,RL7,REG2,DEFAULT)	|	VoC_movreg16(RL7_HI,RL7_LO,DEFAULT)
0xD848E8C5,	//0x0610		VoC_lw16_p(ACC0_LO,REG4,DEFAULT)	|	VoC_loop_i_short(0x6,DEFAULT)
0x93D2D859,	//0x0612		VoC_add32inc_rp(REG45,RL7,REG2,DEFAULT)	|	VoC_lw16_p(ACC0_HI,REG5,DEFAULT)
0xDC99DC98,	//0x0614		VoC_sw16inc_p(ACC0_HI,REG1,DEFAULT)	|	VoC_sw16inc_p(ACC0_LO,REG1,DEFAULT)
		//0x0615		VoC_endloop0
0xFF42D848,	//0x0616		VoC_lw32z(REG45,DEFAULT)	|	VoC_lw16_p(ACC0_LO,REG4,DEFAULT)
0xFF475C98,	//0x0618		VoC_lw32z(RL7,IN_PARALLEL)	|	VoC_sw16inc_p(ACC0_LO,REG1,DEFAULT)
0xDC94DC94,	//0x061a		VoC_sw16inc_p(REG4,REG1,DEFAULT)	|	VoC_sw16inc_p(REG4,REG1,DEFAULT)
0xE1045C94,	//0x061c		VoC_lw16i_short(REG4,0x10,IN_PARALLEL)	|	VoC_sw16inc_p(REG4,REG1,DEFAULT)
0x022B0A22,	//0x061e		VoC_multf32_rd(REG45,REG4,0x22b)
0x50000A8F,	//0x0620		VoC_lw16i(RL7_HI,0x5000)
0x40880912,	//0x0622		VoC_add32_rd(REG45,REG45,0x4088)
0x20E50A82,	//0x0624		VoC_lw16i(REG2,0x20e5)
0xE043653A,	//0x0626		VoC_lw16i_short(REG3,0x4,IN_PARALLEL)	|	VoC_or32_rr(REG45,RL7,DEFAULT)
0x7FC31542,	//0x0628		VoC_sw16_d(REG2,0xffc3)
0x7FC21543,	//0x062a		VoC_sw16_d(REG3,0xffc2)
0x7FC415C2,	//0x062c		VoC_sw32_d(REG45,0xffc4)
0xFFC0DE80,	//0x062e		VoC_NOP	|	VoC_cfg(0x0)
0x00081794,	//0x0630		VoC_cfg_lg(0x8,)
0xDFE9E580,	//0x0632		VoC_push16(RA,DEFAULT)	|	VoC_return
		//0x0633		CS_pred_direct_motion
0x02341402,	//0x0634		VoC_lw16_d(REG2,0x234)
0x02231406,	//0x0636		VoC_lw16_d(REG6,0x223)
0x02221408,	//0x0638		VoC_lw16_d(ACC0_LO,0x222)
0xF9FE7009,	//0x063a		VoC_shru16_ri(REG6,0xffffffff,IN_PARALLEL)	|	VoC_lw16i_short(ACC0_HI,0x0,DEFAULT)
0xE0137DFC,	//0x063c		VoC_lw16i_short(REG3,0x1,IN_PARALLEL)	|	VoC_shru32_ri(ACC0,0xffffffff,DEFAULT)
0xF9124E32,	//0x063e		VoC_shru16_ri(REG2,0x2,IN_PARALLEL)	|	VoC_mac32_rr(REG6,REG2,DEFAULT)
0xE026429A,	//0x0640		VoC_lw16i_short(REG6,0x2,IN_PARALLEL)	|	VoC_sub16_rr(REG2,REG2,REG3,DEFAULT)
0xE0057064,	//0x0642		VoC_lw16i_short(REG5,0x0,IN_PARALLEL)	|	VoC_lw16i_short(REG4,0x3,DEFAULT)
0xFF4764E2,	//0x0644		VoC_lw32z(RL7,IN_PARALLEL)	|	VoC_and32_rr(REG45,ACC0,DEFAULT)
0x105D0A81,	//0x0646		VoC_lw16i(REG1,0x105d)
0x40941485,	//0x0648		VoC_lw32_d(ACC1,0x4094)
0x30000A8F,	//0x064a		VoC_lw16i(RL7_HI,0x3000)
0xCB146853,	//0x064c		VoC_sub32_rr(ACC0,ACC0,REG45,IN_PARALLEL)	|	VoC_loop_i_short(0x2,DEFAULT)
0xE53DC92D,	//0x064e		VoC_or32_rr(ACC1,RL7,DEFAULT)	|	VoC_add32_rr(ACC1,ACC0,ACC1,DEFAULT)
0x7FC81542,	//0x0650		VoC_sw16_d(REG2,0xffc8)
0x7FC91546,	//0x0652		VoC_sw16_d(REG6,0xffc9)
0x7FC31541,	//0x0654		VoC_sw16_d(REG1,0xffc3)
0x7FC21543,	//0x0656		VoC_sw16_d(REG3,0xffc2)
0x7FC415C5,	//0x0658		VoC_sw32_d(ACC1,0xffc4)
0x0A81DE80,	//0x065a		VoC_lw16i(REG1,0x1061)(lo)	|	VoC_cfg(0x0)
0x14851061,	//0x065c		VoC_lw32_d(ACC1,0x4096)(lo)	|	VoC_lw16i(REG1,0x1061)(hi)
0x17944096,	//0x065e		VoC_cfg_lg(0x8,)(lo)	|	VoC_lw32_d(ACC1,0x4096)(hi)
		//0x065f		VoC_endloop0
0x31C40008,	//0x0660		VoC_bnez16_r(direct_motion_local_ref_not_align,REG4)(lo)	|	VoC_cfg_lg(0x8,)(hi)
0x0A880668,	//0x0662		VoC_lw16i(ACC0_LO,0x20ba)(lo)	|	VoC_bnez16_r(direct_motion_local_ref_not_align,REG4)(hi)
0x0A8920BA,	//0x0664		VoC_lw16i(ACC0_HI,0x20c2)(lo)	|	VoC_lw16i(ACC0_LO,0x20ba)(hi)
0xE5C520C2,	//0x0666		VoC_jump(direct_motion_save_local_ref_addr)	|	VoC_lw16i(ACC0_HI,0x20c2)(hi)
		//0x0668		direct_motion_local_ref_not_align
0x20BC0A88,	//0x0668		VoC_lw16i(ACC0_LO,0x20bc)
0x20C40A89,	//0x066a		VoC_lw16i(ACC0_HI,0x20c4)
		//0x066c		direct_motion_save_local_ref_addr
0x20CC1508,	//0x066c		VoC_sw16_d(ACC0_LO,0x20cc)
0x20CD1509,	//0x066e		VoC_sw16_d(ACC0_HI,0x20cd)
0x02331402,	//0x0670		VoC_lw16_d(REG2,0x233)
0x02231405,	//0x0672		VoC_lw16_d(REG5,0x223)
0xFF4479E5,	//0x0674		VoC_lw32z(ACC0,IN_PARALLEL)	|	VoC_shru16_ri(REG5,0xfffffffc,DEFAULT)
0x02221408,	//0x0676		VoC_lw16_d(ACC0_LO,0x222)
0xE0437DE4,	//0x0678		VoC_lw16i_short(REG3,0x4,IN_PARALLEL)	|	VoC_shru32_ri(ACC0,0xfffffffc,DEFAULT)
0xC29A4E2A,	//0x067a		VoC_sub16_rr(REG2,REG2,REG3,IN_PARALLEL)	|	VoC_mac32_rr(REG5,REG2,DEFAULT)
0x103D0A81,	//0x067c		VoC_lw16i(REG1,0x103d)
0x40981485,	//0x067e		VoC_lw32_d(ACC1,0x4098)
0xC92DE851,	//0x0680		VoC_add32_rr(ACC1,ACC0,ACC1,DEFAULT)	|	VoC_loop_i_short(0x2,DEFAULT)
0x7FC81542,	//0x0682		VoC_sw16_d(REG2,0xffc8)
0x7FC91543,	//0x0684		VoC_sw16_d(REG3,0xffc9)
0x7FC31541,	//0x0686		VoC_sw16_d(REG1,0xffc3)
0x7FC21543,	//0x0688		VoC_sw16_d(REG3,0xffc2)
0x7FC415C5,	//0x068a		VoC_sw32_d(ACC1,0xffc4)
0x0A81DE80,	//0x068c		VoC_lw16i(REG1,0x104d)(lo)	|	VoC_cfg(0x0)
0x1485104D,	//0x068e		VoC_lw32_d(ACC1,0x409a)(lo)	|	VoC_lw16i(REG1,0x104d)(hi)
0x1794409A,	//0x0690		VoC_cfg_lg(0x8,)(lo)	|	VoC_lw32_d(ACC1,0x409a)(hi)
		//0x0691		VoC_endloop0
0x14040008,	//0x0692		VoC_lw16_d(REG4,0x22b)(lo)	|	VoC_cfg_lg(0x8,)(hi)
0x79FC022B,	//0x0694		VoC_shru16_ri(REG4,0xffffffff,DEFAULT)	|	VoC_lw16_d(REG4,0x22b)(hi)
0x0912E005,	//0x0696		VoC_add32_rd(REG45,REG45,0x409c)(lo)	|	VoC_lw16i_short(REG5,0x0,IN_PARALLEL)
0xF061409C,	//0x0698		VoC_lw16i_short(REG1,0x3,DEFAULT)	|	VoC_add32_rd(REG45,REG45,0x409c)(hi)
0x430CE421,	//0x069a		VoC_sub16_rr(REG4,REG4,REG1,DEFAULT)	|	VoC_and16_rr(REG1,REG4,DEFAULT)
0x16C5F9E9,	//0x069c		VoC_or16_ri(REG5,0xffff8000)(lo)	|	VoC_shru16_ri(REG1,0xfffffffd,IN_PARALLEL)
0xFFC00000,	//0x069e		VoC_NOP	|	VoC_or16_ri(REG5,0xffff8000)(hi)
0x7FC415C2,	//0x06a0		VoC_sw32_d(REG45,0xffc4)
0x14C1FFC0,	//0x06a2		VoC_lw32_d(REG23,0xffc6)(lo)	|	VoC_NOP
0xFEC97FC6,	//0x06a4		VoC_shru32_rr(REG23,REG1,DEFAULT)	|	VoC_lw32_d(REG23,0xffc6)(hi)
0x00400A85,	//0x06a6		VoC_lw16i(REG5,0x40)
0xE071643D,	//0x06a8		VoC_lw16i_short(REG1,0x7,IN_PARALLEL)	|	VoC_and16_rr(REG5,REG7,DEFAULT)
0xF6A66411,	//0x06aa		VoC_movreg16(REG6,REG5,IN_PARALLEL)	|	VoC_and16_rr(REG1,REG2,DEFAULT)
0x3186E416,	//0x06ac		VoC_bez16_r(pred_direct_motion_type_16x16_OR_INTRA,REG6)(lo)	|	VoC_and16_rr(REG6,REG2,DEFAULT)
0x6E0706B6,	//0x06ae		VoC_bnez16_d(pred_direct_motion_type_16x16_OR_INTRA,0xab8)(lo)	|	VoC_bez16_r(pred_direct_motion_type_16x16_OR_INTRA,REG6)(hi)
0x0A840AB8,	//0x06b0		VoC_lw16i(REG4,0x5140)(lo)	|	VoC_bnez16_d(pred_direct_motion_type_16x16_OR_INTRA,0xab8)(hi)
0x0AC75140,	//0x06b2		VoC_lw16i(REG7,0xf040)(lo)	|	VoC_lw16i(REG4,0x5140)(hi)
0xE5D17040,	//0x06b4		VoC_jump(pred_direct_motion_type_is_b8x8)	|	VoC_lw16i(REG7,0xf040)(hi)
		//0x06b6		pred_direct_motion_type_16x16_OR_INTRA
0x06C231C5,	//0x06b6		VoC_bnez16_r(pred_direct_motion_type_other,REG5)
0x000F0A83,	//0x06b8		VoC_lw16i(REG3,0xf)
0x3183E413,	//0x06ba		VoC_bez16_r(pred_direct_motion_type_other,REG3)(lo)	|	VoC_and16_rr(REG3,REG2,DEFAULT)
0x0A8406C2,	//0x06bc		VoC_lw16i(REG4,0x5108)(lo)	|	VoC_bez16_r(pred_direct_motion_type_other,REG3)(hi)
0x0A875108,	//0x06be		VoC_lw16i(REG7,0x5108)(lo)	|	VoC_lw16i(REG4,0x5108)(hi)
0xE5C55108,	//0x06c0		VoC_jump(pred_direct_motion_type_is_b8x8)	|	VoC_lw16i(REG7,0x5108)(hi)
		//0x06c2		pred_direct_motion_type_other
0x51080A84,	//0x06c2		VoC_lw16i(REG4,0x5108)
0x70400AC7,	//0x06c4		VoC_lw16i(REG7,0xf040)
		//0x06c6		pred_direct_motion_type_is_b8x8
0x06CA31C5,	//0x06c6		VoC_bnez16_r(pred_direct_motion_type_is_b8x8_end,REG5)
0x01001687,	//0x06c8		VoC_or16_ri(REG7,0x100)
		//0x06ca		pred_direct_motion_type_is_b8x8_end
0x02436C04,	//0x06ca		VoC_bez16_d(pred_direct_motion_type_mb_field_end,0x243)
0x00801687,	//0x06cc		VoC_or16_ri(REG7,0x80)
		//0x06ce		pred_direct_motion_type_mb_field_end
0xDFC15F42,	//0x06ce		VoC_push16(REG1,IN_PARALLEL)	|	VoC_push32(REG45,DEFAULT)
0x0AB96E04,	//0x06d0		VoC_bnez16_d(direct_spatial_mv_pred,0xab9)
0x08322B00,	//0x06d2		VoC_jump_lg(direct_temporal_mv_pred)
		//0x06d4		direct_spatial_mv_pred
0x04991FA5,	//0x06d4		VoC_lw16i_set_inc(REG1,0x499,0xfffffff9)
0x2C04F7C3,	//0x06d6		VoC_loop_i(0x0,0x2)(lo)	|	VoC_lw16i_short(REG3,0xfffffffe,DEFAULT)
0xF08206FA,	//0x06d8		VoC_lw16i_short(REG2,0x4,DEFAULT)	|	VoC_loop_i(0x0,0x2)(hi)
0xC0515894,	//0x06da		VoC_add16_rr(REG1,REG1,REG2,IN_PARALLEL)	|	VoC_lw16inc_p(REG4,REG1,DEFAULT)
0xEFB25815,	//0x06dc		VoC_lw16i_short(REG2,0xfffffffb,IN_PARALLEL)	|	VoC_lw16_p(REG5,REG1,DEFAULT)
0xC0515816,	//0x06de		VoC_add16_rr(REG1,REG1,REG2,IN_PARALLEL)	|	VoC_lw16_p(REG6,REG1,DEFAULT)
0x06E435B3,	//0x06e0		VoC_bne16_rr(pred_direct_motion_regc_neg2_end,REG6,REG3)
0xFFC05816,	//0x06e2		VoC_NAD(IN_PARALLEL)	|	VoC_lw16_p(REG6,REG1,DEFAULT)
		//0x06e4		pred_direct_motion_regc_neg2_end
0x06EA3204,	//0x06e4		VoC_bltz16_r(pred_direct_motion_refb,REG4)
0x06EC34A5,	//0x06e6		VoC_bngt16_rr(pred_direct_motion_refb_end,REG4,REG5)
0x06EC3205,	//0x06e8		VoC_bltz16_r(pred_direct_motion_refb_end,REG5)
		//0x06ea		pred_direct_motion_refb
0xFFC060A4,	//0x06ea		VoC_NAD(IN_PARALLEL)	|	VoC_movreg16(REG4,REG5,DEFAULT)
		//0x06ec		pred_direct_motion_refb_end
0x06F23204,	//0x06ec		VoC_bltz16_r(pred_direct_motion_refc,REG4)
0x06F434A6,	//0x06ee		VoC_bngt16_rr(pred_direct_motion_refc_end,REG4,REG6)
0x06F43206,	//0x06f0		VoC_bltz16_r(pred_direct_motion_refc_end,REG6)
		//0x06f2		pred_direct_motion_refc
0xFFC060C4,	//0x06f2		VoC_NAD(IN_PARALLEL)	|	VoC_movreg16(REG4,REG6,DEFAULT)
		//0x06f4		pred_direct_motion_refc_end
0x06F83244,	//0x06f4		VoC_bnltz16_r(pred_direct_motion_ref_neg_end,REG4)
0xFFC077E4,	//0x06f6		VoC_NAD(IN_PARALLEL)	|	VoC_lw16i_short(REG4,0xffffffff,DEFAULT)
		//0x06f8		pred_direct_motion_ref_neg_end
0xF68F61EE,	//0x06f8		VoC_movreg16(RL7_HI,REG4,IN_PARALLEL)	|	VoC_movreg16(RL7_LO,RL7_HI,DEFAULT)
		//0x06fa		VoC_endloop0
0x05111FA5,	//0x06fa		VoC_lw16i_set_inc(REG1,0x511,0xfffffff9)
0x20CA1587,	//0x06fc		VoC_sw32_d(RL7,0x20ca)
0xFF447F45,	//0x06fe		VoC_lw32z(ACC0,IN_PARALLEL)	|	VoC_lw32z(ACC1,DEFAULT)
0x07083244,	//0x0700		VoC_bnltz16_r(pred_direct_motion_ref0_ref1_neg_end,REG4)
0x20CA7206,	//0x0702		VoC_bnltz16_d(pred_direct_motion_ref0_ref1_neg_end,0x20ca)
0x20CA1584,	//0x0704		VoC_sw32_d(ACC0,0x20ca)
0xFFC065D4,	//0x0706		VoC_NAD(IN_PARALLEL)	|	VoC_jump(pred_direct_motion_get_mv_with_ref_end)
		//0x0708		pred_direct_motion_ref0_ref1_neg_end
0xF7C17005,	//0x0708		VoC_movreg16(REG1,RL7_LO,IN_PARALLEL)	|	VoC_lw16i_short(REG5,0x0,DEFAULT)
0x07182C04,	//0x070a		VoC_loop_i(0x0,0x2)
0xFF457F2C,	//0x070c		VoC_lw32z(ACC1,IN_PARALLEL)	|	VoC_movreg32(ACC0,ACC1,DEFAULT)
0x07183201,	//0x070e		VoC_bltz16_r(pred_direct_motion_get_mv_next_loop,REG1)
0xE0447003,	//0x0710		VoC_lw16i_short(REG4,0x4,IN_PARALLEL)	|	VoC_lw16i_short(REG3,0x0,DEFAULT)
0x2B80DFC7,	//0x0712		VoC_jal(CS_pred_motion)(lo)	|	VoC_push16(REG7,DEFAULT)
0xDF870E62,	//0x0714		VoC_pop16(REG7,DEFAULT)	|	VoC_jal(CS_pred_motion)(hi)
0xFFC065C2,	//0x0716		VoC_NAD(IN_PARALLEL)	|	VoC_jump(pred_direct_motion_get_mv_next_loop)
		//0x0718		pred_direct_motion_get_mv_next_loop
		//0x0718		VoC_endloop0
0xE01561E1,	//0x0718		VoC_lw16i_short(REG5,0x1,IN_PARALLEL)	|	VoC_movreg16(REG1,RL7_HI,DEFAULT)
		//0x071a		pred_direct_motion_get_mv_with_ref_end
0x7209D909,	//0x071a		VoC_bnltz16_d(pred_direct_motion_check_ref0,0x20cb)(lo)	|	VoC_lw32_sd(REG23,0x0,DEFAULT)
0x160220CB,	//0x071c		VoC_and16_ri(REG2,0x3fff)(lo)	|	VoC_bnltz16_d(pred_direct_motion_check_ref0,0x20cb)(hi)
0x31C33FFF,	//0x071e		VoC_bnez16_r(pred_direct_motion_check_ref_end,REG3)(lo)	|	VoC_and16_ri(REG2,0x3fff)(hi)
0x1607072C,	//0x0720		VoC_and16_ri(REG7,0x3fff)(lo)	|	VoC_bnez16_r(pred_direct_motion_check_ref_end,REG3)(hi)
0xE5C93FFF,	//0x0722		VoC_jump(pred_direct_motion_check_ref_end)	|	VoC_and16_ri(REG7,0x3fff)(hi)
		//0x0724		pred_direct_motion_check_ref0
0x20CA7208,	//0x0724		VoC_bnltz16_d(pred_direct_motion_check_ref_end,0x20ca)
0x4FFF1642,	//0x0726		VoC_and16_ri(REG2,0xcfff)
0x072C31C3,	//0x0728		VoC_bnez16_r(pred_direct_motion_check_ref_end,REG3)
0x4FFF1647,	//0x072a		VoC_and16_ri(REG7,0xcfff)
		//0x072c		pred_direct_motion_check_ref_end
0xE0815D09,	//0x072c		VoC_lw16i_short(REG1,0x8,IN_PARALLEL)	|	VoC_sw32_sd(REG23,0x0,DEFAULT)
0x3181E439,	//0x072e		VoC_bez16_r(direct_spatial_not_16x16,REG1)(lo)	|	VoC_and16_rr(REG1,REG7,DEFAULT)
0x14870784,	//0x0730		VoC_lw32_d(RL7,0x20ca)(lo)	|	VoC_bez16_r(direct_spatial_not_16x16,REG1)(hi)
0x61CF20CA,	//0x0732		VoC_movreg16(RL7_HI,RL7_LO,DEFAULT)	|	VoC_lw32_d(RL7,0x20ca)(hi)
0x1821F7E4,	//0x0734		VoC_lw16i_set_inc(REG1,0x49a,0x8)(lo)	|	VoC_movreg16(REG4,RL7_HI,IN_PARALLEL)
0x1822049A,	//0x0736		VoC_lw16i_set_inc(REG2,0x49c,0x8)(lo)	|	VoC_lw16i_set_inc(REG1,0x49a,0x8)(hi)
0xE882049C,	//0x0738		VoC_loop_i_short(0x4,DEFAULT)	|	VoC_lw16i_set_inc(REG2,0x49c,0x8)(hi)
0xDDD7DDCF,	//0x073a		VoC_sw32inc_p(RL7,REG2,DEFAULT)	|	VoC_sw32inc_p(RL7,REG1,DEFAULT)
		//0x073b		VoC_endloop0
0x1821E085,	//0x073c		VoC_lw16i_set_inc(REG1,0x512,0x8)(lo)	|	VoC_movreg16(REG5,REG4,DEFAULT)
0x18220512,	//0x073e		VoC_lw16i_set_inc(REG2,0x514,0x8)(lo)	|	VoC_lw16i_set_inc(REG1,0x512,0x8)(hi)
0xE8820514,	//0x0740		VoC_loop_i_short(0x4,DEFAULT)	|	VoC_lw16i_set_inc(REG2,0x514,0x8)(hi)
0xDDD2DDCA,	//0x0742		VoC_sw32inc_p(REG45,REG2,DEFAULT)	|	VoC_sw32inc_p(REG45,REG1,DEFAULT)
		//0x0743		VoC_endloop0
0x1406D611,	//0x0744		VoC_lw16_d(REG6,0x20cc)(lo)	|	VoC_lw16_sd(REG1,0x0,DEFAULT)
0x31C120CC,	//0x0746		VoC_bnez16_r(direct_spatial_16x16_end,REG1)(lo)	|	VoC_lw16_d(REG6,0x20cc)(hi)
0xD8660772,	//0x0748		VoC_lw16_p(REG6,REG6,DEFAULT)	|	VoC_bnez16_r(direct_spatial_16x16_end,REG1)(hi)
0x075631C6,	//0x074a		VoC_bnez16_r(direct_spatial_16x16_if_ref1,REG6)
0x207A1402,	//0x074c		VoC_lw16_d(REG2,0x207a)
0x207B1403,	//0x074e		VoC_lw16_d(REG3,0x207b)
0xDE435E42,	//0x0750		VoC_abs16_r(REG3,IN_PARALLEL)	|	VoC_abs16_r(REG2,DEFAULT)
0x482C3822,	//0x0752		VoC_bgt16_rd(direct_spatial_16x16_if_ref1,REG2,0x482c)
0x482C3D33,	//0x0754		VoC_bngt16_rd(direct_spatial_16x16_if_ref0_ngtz,REG3,0x482c)
		//0x0756		direct_spatial_16x16_if_ref1
0x20CD1401,	//0x0756		VoC_lw16_d(REG1,0x20cd)
0x07723246,	//0x0758		VoC_bnltz16_r(direct_spatial_16x16_end,REG6)
0x31C1D811,	//0x075a		VoC_bnez16_r(direct_spatial_16x16_end,REG1)(lo)	|	VoC_lw16_p(REG1,REG1,DEFAULT)
0x14020772,	//0x075c		VoC_lw16_d(REG2,0x209a)(lo)	|	VoC_bnez16_r(direct_spatial_16x16_end,REG1)(hi)
0x1403209A,	//0x075e		VoC_lw16_d(REG3,0x209b)(lo)	|	VoC_lw16_d(REG2,0x209a)(hi)
0x5E42209B,	//0x0760		VoC_abs16_r(REG2,DEFAULT)	|	VoC_lw16_d(REG3,0x209b)(hi)
0x38BADE43,	//0x0762		VoC_bgt16_rd(direct_spatial_16x16_end,REG2,0x482c)(lo)	|	VoC_abs16_r(REG3,IN_PARALLEL)
0x38AB482C,	//0x0764		VoC_bgt16_rd(direct_spatial_16x16_end,REG3,0x482c)(lo)	|	VoC_bgt16_rd(direct_spatial_16x16_end,REG2,0x482c)(hi)
0x6C0B482C,	//0x0766		VoC_bez16_d(direct_spatial_16x16_end,0xaba)(lo)	|	VoC_bgt16_rd(direct_spatial_16x16_end,REG3,0x482c)(hi)
0xFFC00ABA,	//0x0768		VoC_NAD	|	VoC_bez16_d(direct_spatial_16x16_end,0xaba)(hi)
		//0x076a		direct_spatial_16x16_if_ref0_ngtz
0x20CA6804,	//0x076a		VoC_bgtz16_d(direct_spatial_16x16_if_ref1_ngtz,0x20ca)
0xFFC07F44,	//0x076c		VoC_NAD(IN_PARALLEL)	|	VoC_lw32z(ACC0,DEFAULT)
		//0x076e		direct_spatial_16x16_if_ref1_ngtz
0x20CB6804,	//0x076e		VoC_bgtz16_d(direct_spatial_16x16_end,0x20cb)
0xFFC07F45,	//0x0770		VoC_NAD(IN_PARALLEL)	|	VoC_lw32z(ACC1,DEFAULT)
		//0x0772		direct_spatial_16x16_end
0x04561809,	//0x0772		VoC_lw16i_set_inc(REG1,0x456,0x2)
0x04CE180A,	//0x0774		VoC_lw16i_set_inc(REG2,0x4ce,0x2)
0xE083688A,	//0x0776		VoC_lw16i_short(REG3,0x8,IN_PARALLEL)	|	VoC_loop_i_short(0x4,DEFAULT)
0xDDCCDDCC,	//0x0778		VoC_sw32inc_p(ACC0,REG1,DEFAULT)	|	VoC_sw32inc_p(ACC0,REG1,DEFAULT)
0x5DCCDDCC,	//0x077a		VoC_sw32inc_p(ACC0,REG1,DEFAULT)	|	VoC_sw32inc_p(ACC0,REG1,DEFAULT)
0xDDD5C059,	//0x077c		VoC_sw32inc_p(ACC1,REG2,DEFAULT)	|	VoC_add16_rr(REG1,REG1,REG3,IN_PARALLEL)
0xDDD5DDD5,	//0x077e		VoC_sw32inc_p(ACC1,REG2,DEFAULT)	|	VoC_sw32inc_p(ACC1,REG2,DEFAULT)
		//0x0780		VoC_endloop0
0xC09A5DD5,	//0x0780		VoC_add16_rr(REG2,REG2,REG3,IN_PARALLEL)	|	VoC_sw32inc_p(ACC1,REG2,DEFAULT)
0x09382B00,	//0x0782		VoC_jump_lg(pred_direct_motion_end)
		//0x0784		direct_spatial_not_16x16
0x1804DFC0,	//0x0784		VoC_lw16i_set_inc(REG0,0x0,0x1)(lo)	|	VoC_push16(REG0,DEFAULT)
0xFFC00000,	//0x0786		VoC_NAD	|	VoC_lw16i_set_inc(REG0,0x0,0x1)(hi)
0x082E2C09,	//0x0788		VoC_loop_i(0x1,0x4)
0x02350A86,	//0x078a		VoC_lw16i(REG6,0x235)
0xC186590A,	//0x078c		VoC_add16_rr(REG6,REG6,REG0,IN_PARALLEL)	|	VoC_lw32_sd(REG45,0x0,DEFAULT)
0x07963185,	//0x078e		VoC_bez16_r(direct_spatial_i8_loop_go,REG5)
0x1603D863,	//0x0790		VoC_and16_ri(REG3,0x100)(lo)	|	VoC_lw16_p(REG3,REG6,DEFAULT)
0x31830100,	//0x0792		VoC_bez16_r(direct_spatial_i8_loop_next,REG3)(lo)	|	VoC_and16_ri(REG3,0x100)(hi)
0xFFC0082E,	//0x0794		VoC_NAD	|	VoC_bez16_r(direct_spatial_i8_loop_next,REG3)(hi)
		//0x0796		direct_spatial_i8_loop_go
0xF6035C64,	//0x0796		VoC_movreg16(REG3,REG0,IN_PARALLEL)	|	VoC_sw16_p(REG4,REG6,DEFAULT)
0x071BF9F3,	//0x0798		VoC_add16_rd(REG3,REG3,0x248)(lo)	|	VoC_shru16_ri(REG3,0xfffffffe,DEFAULT)
0x18090248,	//0x079a		VoC_lw16i_set_inc(REG1,0x43e,0x2)(lo)	|	VoC_add16_rd(REG3,REG3,0x248)(hi)
0x180A043E,	//0x079c		VoC_lw16i_set_inc(REG2,0x4b6,0x2)(lo)	|	VoC_lw16i_set_inc(REG1,0x43e,0x2)(hi)
0x005904B6,	//0x079e		VoC_add16_rp(REG1,REG1,REG3,DEFAULT)	|	VoC_lw16i_set_inc(REG2,0x4b6,0x2)(hi)
0x0059809A,	//0x07a0		VoC_add16_rp(REG1,REG1,REG3,DEFAULT)	|	VoC_add16_rp(REG2,REG2,REG3,IN_PARALLEL)
0x6846809A,	//0x07a2		VoC_loop_i_short(0x2,DEFAULT)	|	VoC_add16_rp(REG2,REG2,REG3,IN_PARALLEL)
0xDDCCE0E6,	//0x07a4		VoC_sw32inc_p(ACC0,REG1,DEFAULT)	|	VoC_lw16i_short(REG6,0xe,IN_PARALLEL)
0xC0715D8C,	//0x07a6		VoC_add16_rr(REG1,REG1,REG6,IN_PARALLEL)	|	VoC_sw32_p(ACC0,REG1,DEFAULT)
0x5D95DDD5,	//0x07a8		VoC_sw32_p(ACC1,REG2,DEFAULT)	|	VoC_sw32inc_p(ACC1,REG2,DEFAULT)
		//0x07a9		VoC_endloop0
0x1821C0B2,	//0x07aa		VoC_lw16i_set_inc(REG1,0x48e,0x8)(lo)	|	VoC_add16_rr(REG2,REG2,REG6,IN_PARALLEL)
0x1822048E,	//0x07ac		VoC_lw16i_set_inc(REG2,0x506,0x8)(lo)	|	VoC_lw16i_set_inc(REG1,0x48e,0x8)(hi)
0x14870506,	//0x07ae		VoC_lw32_d(RL7,0x20ca)(lo)	|	VoC_lw16i_set_inc(REG2,0x506,0x8)(hi)
0x61EA20CA,	//0x07b0		VoC_movreg16(ACC1_LO,RL7_HI,DEFAULT)	|	VoC_lw32_d(RL7,0x20ca)(hi)
0x0059DF45,	//0x07b2		VoC_add16_rp(REG1,REG1,REG3,DEFAULT)	|	VoC_push32(ACC1,IN_PARALLEL)
0x009AF7CF,	//0x07b4		VoC_add16_rp(REG2,REG2,REG3,DEFAULT)	|	VoC_movreg16(RL7_HI,RL7_LO,IN_PARALLEL)
0x5DCFF74B,	//0x07b6		VoC_sw32inc_p(RL7,REG1,DEFAULT)	|	VoC_movreg16(ACC1_HI,ACC1_LO,IN_PARALLEL)
0x5D8FF606,	//0x07b8		VoC_sw32_p(RL7,REG1,DEFAULT)	|	VoC_movreg16(REG6,REG0,IN_PARALLEL)
0x5DD5F605,	//0x07ba		VoC_sw32inc_p(ACC1,REG2,DEFAULT)	|	VoC_movreg16(REG5,REG0,IN_PARALLEL)
0x5D95F90D,	//0x07bc		VoC_sw32_p(ACC1,REG2,DEFAULT)	|	VoC_shru16_ri(REG5,0x1,IN_PARALLEL)
0x640EE011,	//0x07be		VoC_and16_rr(REG6,REG1,DEFAULT)	|	VoC_lw16i_short(REG1,0x1,IN_PARALLEL)
0xF9F5DF05,	//0x07c0		VoC_shru16_ri(REG5,0xfffffffe,DEFAULT)	|	VoC_pop32(ACC1,IN_PARALLEL)
0xD62241AE,	//0x07c2		VoC_lw16_sd(REG2,0x1,IN_PARALLEL)	|	VoC_add16_rr(REG6,REG6,REG5,DEFAULT)
0x20CC0731,	//0x07c4		VoC_add16_rd(REG1,REG6,0x20cc)
0x080231C2,	//0x07c6		VoC_bnez16_r(direct_spatial_i8_sub8x8_end,REG2)
0x3181D811,	//0x07c8		VoC_bez16_r(direct_spatial_i8_col_zero,REG1)(lo)	|	VoC_lw16_p(REG1,REG1,DEFAULT)
0x324107D4,	//0x07ca		VoC_bnltz16_r(direct_spatial_i8_sub8x8_end,REG1)(lo)	|	VoC_bez16_r(direct_spatial_i8_col_zero,REG1)(hi)
0x07320802,	//0x07cc		VoC_add16_rd(REG2,REG6,0x20cd)(lo)	|	VoC_bnltz16_r(direct_spatial_i8_sub8x8_end,REG1)(hi)
0x6C3320CD,	//0x07ce		VoC_bez16_d(direct_spatial_i8_sub8x8_end,0xaba)(lo)	|	VoC_add16_rd(REG2,REG6,0x20cd)(hi)
0xD8220ABA,	//0x07d0		VoC_lw16_p(REG2,REG2,DEFAULT)	|	VoC_bez16_d(direct_spatial_i8_sub8x8_end,0xaba)(hi)
0x080231C2,	//0x07d2		VoC_bnez16_r(direct_spatial_i8_sub8x8_end,REG2)
		//0x07d4		direct_spatial_i8_col_zero
0x07DA31C1,	//0x07d4		VoC_bnez16_r(direct_spatial_i8_col_zero_use_l1mv1,REG1)
0x207A0A82,	//0x07d6		VoC_lw16i(REG2,0x207a)
0xFFC065C4,	//0x07d8		VoC_NAD(IN_PARALLEL)	|	VoC_jump(direct_spatial_i8_col_zero_use_l1mv1_end)
		//0x07da		direct_spatial_i8_col_zero_use_l1mv1
0x209A0A82,	//0x07da		VoC_lw16i(REG2,0x209a)
		//0x07dc		direct_spatial_i8_col_zero_use_l1mv1_end
0x48300835,	//0x07dc		VoC_mult16_rd(REG5,REG6,0x4830)
0x00081604,	//0x07de		VoC_and16_ri(REG4,0x8)
0x31C4C155,	//0x07e0		VoC_bnez16_r(direct_spatial_i8_sub8x8,REG4)(lo)	|	VoC_add16_rr(REG5,REG5,REG2,DEFAULT)
0x2B0007E5,	//0x07e2		VoC_jump_lg(direct_spatial_i8_not_sub8x8)(lo)	|	VoC_bnez16_r(direct_spatial_i8_sub8x8,REG4)(hi)
0xD9AA0804,	//0x07e4		VoC_lw32_p(REG45,REG5,DEFAULT)	|	VoC_jump_lg(direct_spatial_i8_not_sub8x8)(hi)
		//0x07e5		direct_spatial_i8_sub8x8
0xDE455E44,	//0x07e6		VoC_abs16_r(REG5,IN_PARALLEL)	|	VoC_abs16_r(REG4,DEFAULT)
0x482C3994,	//0x07e8		VoC_bgt16_rd(direct_spatial_i8_sub8x8_end,REG4,0x482c)
0x482C3985,	//0x07ea		VoC_bgt16_rd(direct_spatial_i8_sub8x8_end,REG5,0x482c)
0x20CA6E10,	//0x07ec		VoC_bnez16_d(direct_spatial_i8_col_zero_if_ref1,0x20ca)
0x043E1809,	//0x07ee		VoC_lw16i_set_inc(REG1,0x43e,0x2)
		//0x07f0		direct_spatial_i8_col_zero_fill_mvs
0xFF470059,	//0x07f0		VoC_lw32z(RL7,IN_PARALLEL)	|	VoC_add16_rp(REG1,REG1,REG3,DEFAULT)
0xFFC08059,	//0x07f2		VoC_NAD	|	VoC_add16_rp(REG1,REG1,REG3,DEFAULT)
0xE0E26844,	//0x07f4		VoC_lw16i_short(REG2,0xe,IN_PARALLEL)	|	VoC_loop_i_short(0x2,DEFAULT)
0xC0515DCF,	//0x07f6		VoC_add16_rr(REG1,REG1,REG2,IN_PARALLEL)	|	VoC_sw32inc_p(RL7,REG1,DEFAULT)
		//0x07f8		VoC_endloop0
0x3889DD8F,	//0x07f8		VoC_bgt16_rd(direct_spatial_i8_sub8x8_end,REG1,0x531)(lo)	|	VoC_sw32_p(RL7,REG1,DEFAULT)
0xFFC00531,	//0x07fa		VoC_NAD	|	VoC_bgt16_rd(direct_spatial_i8_sub8x8_end,REG1,0x531)(hi)
		//0x07fc		direct_spatial_i8_col_zero_if_ref1
0x20CB6E06,	//0x07fc		VoC_bnez16_d(direct_spatial_i8_sub8x8_end,0x20cb)
0x04B61809,	//0x07fe		VoC_lw16i_set_inc(REG1,0x4b6,0x2)
0xFFC065F0,	//0x0800		VoC_NAD(IN_PARALLEL)	|	VoC_jump(direct_spatial_i8_col_zero_fill_mvs)
		//0x0802		direct_spatial_i8_sub8x8_end
0x082E2B00,	//0x0802		VoC_jump_lg(direct_spatial_i8_loop_next)
		//0x0804		direct_spatial_i8_not_sub8x8
0xF60379F6,	//0x0804		VoC_movreg16(REG3,REG0,IN_PARALLEL)	|	VoC_shru16_ri(REG6,0xfffffffe,DEFAULT)
0xF9F340B6,	//0x0806		VoC_shru16_ri(REG3,0xfffffffe,IN_PARALLEL)	|	VoC_add16_rr(REG6,REG2,REG6,DEFAULT)
0x00001805,	//0x0808		VoC_lw16i_set_inc(REG1,0x0,0x1)
0x082D2C08,	//0x080a		VoC_loop_i(0x0,0x4)
0xF6256024,	//0x080c		VoC_movreg16(REG5,REG1,IN_PARALLEL)	|	VoC_movreg16(REG4,REG1,DEFAULT)
0xE012790D,	//0x080e		VoC_lw16i_short(REG2,0x1,IN_PARALLEL)	|	VoC_shru16_ri(REG5,0x1,DEFAULT)
0xF9F5640C,	//0x0810		VoC_shru16_ri(REG5,0xfffffffe,IN_PARALLEL)	|	VoC_and16_rr(REG4,REG1,DEFAULT)
0xC0CA412D,	//0x0812		VoC_add16_rr(REG2,REG3,REG1,IN_PARALLEL)	|	VoC_add16_rr(REG5,REG4,REG5,DEFAULT)
0xFF4779FD,	//0x0814		VoC_lw32z(RL7,IN_PARALLEL)	|	VoC_shru16_ri(REG5,0xffffffff,DEFAULT)
0x0712C175,	//0x0816		VoC_add16_rd(REG2,REG2,0x248)(lo)	|	VoC_add16_rr(REG5,REG5,REG6,DEFAULT)
0xD9AA0248,	//0x0818		VoC_lw32_p(REG45,REG5,DEFAULT)	|	VoC_add16_rd(REG2,REG2,0x248)(hi)
0xDE455E44,	//0x081a		VoC_abs16_r(REG5,IN_PARALLEL)	|	VoC_abs16_r(REG4,DEFAULT)
0x482C390C,	//0x081c		VoC_bgt16_rd(direct_spatial_i4_loop_next,REG4,0x482c)
0x482C38BD,	//0x081e		VoC_bgt16_rd(direct_spatial_i4_loop_next,REG5,0x482c)
0x043E0014,	//0x0820		VoC_add16_pd(REG4,REG2,0x43e)
0x04B60015,	//0x0822		VoC_add16_pd(REG5,REG2,0x4b6)
0x81550114,	//0x0824		VoC_add16_rp(REG5,REG5,REG2,IN_PARALLEL)	|	VoC_add16_rp(REG4,REG4,REG2,DEFAULT)
0x20CA6E04,	//0x0826		VoC_bnez16_d(direct_spatial_i4_if_ref1,0x20ca)
0xFFC05DA7,	//0x0828		VoC_NAD(IN_PARALLEL)	|	VoC_sw32_p(RL7,REG4,DEFAULT)
		//0x082a		direct_spatial_i4_if_ref1
0x20CB6E03,	//0x082a		VoC_bnez16_d(direct_spatial_i4_loop_next,0x20cb)
0xDE08DDAF,	//0x082c		VoC_inc_p(REG1,DEFAULT)	|	VoC_sw32_p(RL7,REG5,DEFAULT)
		//0x082d		direct_spatial_i4_loop_next
		//0x082d		VoC_endloop0
		//0x082e		direct_spatial_i8_loop_next
		//0x082e		VoC_endloop1
0xDF80DE00,	//0x082e		VoC_pop16(REG0,DEFAULT)	|	VoC_inc_p(REG0,DEFAULT)
0x09382B00,	//0x0830		VoC_jump_lg(pred_direct_motion_end)
		//0x0832		direct_temporal_mv_pred
0xE439F101,	//0x0832		VoC_and16_rr(REG1,REG7,DEFAULT)	|	VoC_lw16i_short(REG1,0x8,DEFAULT)
0x08843181,	//0x0834		VoC_bez16_r(direct_temporal_not_16x16,REG1)
0xFF457F44,	//0x0836		VoC_lw32z(ACC1,IN_PARALLEL)	|	VoC_lw32z(ACC0,DEFAULT)
0x05121821,	//0x0838		VoC_lw16i_set_inc(REG1,0x512,0x8)
0x05141822,	//0x083a		VoC_lw16i_set_inc(REG2,0x514,0x8)
0xDDCCE882,	//0x083c		VoC_sw32inc_p(ACC0,REG1,DEFAULT)	|	VoC_loop_i_short(0x4,DEFAULT)
		//0x083e		VoC_endloop0
0x7001DDD4,	//0x083e		VoC_lw16i_short(REG1,0x0,DEFAULT)	|	VoC_sw32inc_p(ACC0,REG2,DEFAULT)
0x1404D616,	//0x0840		VoC_lw16_d(REG4,0x20cc)(lo)	|	VoC_lw16_sd(REG6,0x0,IN_PARALLEL)
0x31C620CC,	//0x0842		VoC_bnez16_r(direct_temporal_16x16_end,REG6)(lo)	|	VoC_lw16_d(REG4,0x20cc)(hi)
0xD8440868,	//0x0844		VoC_lw16_p(REG4,REG4,DEFAULT)	|	VoC_bnez16_r(direct_temporal_16x16_end,REG6)(hi)
0x084E3204,	//0x0846		VoC_bltz16_r(direct_temporal_16x16_use_l1ref1,REG4)
0x1C2A0A81,	//0x0848		VoC_lw16i(REG1,0x1c2a)
0x1482C061,	//0x084a		VoC_lw32_d(REG45,0x207a)(lo)	|	VoC_add16_rr(REG1,REG1,REG4,DEFAULT)
0xE5C9207A,	//0x084c		VoC_jump(direct_temporal_16x16_get_mv)	|	VoC_lw32_d(REG45,0x207a)(hi)
		//0x084e		direct_temporal_16x16_use_l1ref1
0x20CD1402,	//0x084e		VoC_lw16_d(REG2,0x20cd)
0x1C3A0A81,	//0x0850		VoC_lw16i(REG1,0x1c3a)
0x14828051,	//0x0852		VoC_lw32_d(REG45,0x209a)(lo)	|	VoC_add16_rp(REG1,REG1,REG2,DEFAULT)
0xFFC0209A,	//0x0854		VoC_NAD	|	VoC_lw32_d(REG45,0x209a)(hi)
		//0x0856		direct_temporal_16x16_get_mv
0x1C4A0A82,	//0x0856		VoC_lw16i(REG2,0x1c4a)
0x808A5811,	//0x0858		VoC_add16_rp(REG2,REG2,REG1,IN_PARALLEL)	|	VoC_lw16_p(REG1,REG1,DEFAULT)
0x00800A88,	//0x085a		VoC_lw16i(ACC0_LO,0x80)
0xFF25D022,	//0x085c		VoC_movreg32(ACC1,ACC0,DEFAULT)	|	VoC_mac32_rp(REG4,REG2,DEFAULT)
0xD02A7C44,	//0x085e		VoC_mac32_rp(REG5,REG2,IN_PARALLEL)	|	VoC_shru32_ri(ACC0,0x8,DEFAULT)
0x7C45E102,	//0x0860		VoC_shru32_ri(ACC1,0x8,DEFAULT)	|	VoC_movreg16(REG2,ACC0_LO,DEFAULT)
0x6143C2A2,	//0x0862		VoC_movreg16(REG3,ACC1_LO,DEFAULT)	|	VoC_sub16_rr(REG2,REG2,REG4,IN_PARALLEL)
0xC2EBF749,	//0x0864		VoC_sub16_rr(REG3,REG3,REG5,DEFAULT)	|	VoC_movreg16(ACC0_HI,ACC1_LO,IN_PARALLEL)
0xFFC07F0D,	//0x0866		VoC_NAD(IN_PARALLEL)	|	VoC_movreg32(ACC1,REG23,DEFAULT)
		//0x0868		direct_temporal_16x16_end
0x049A1822,	//0x0868		VoC_lw16i_set_inc(REG2,0x49a,0x8)
0x049C1823,	//0x086a		VoC_lw16i_set_inc(REG3,0x49c,0x8)
0xF62E602F,	//0x086c		VoC_movreg16(RL7_LO,REG1,IN_PARALLEL)	|	VoC_movreg16(RL7_HI,REG1,DEFAULT)
0xDDD7E882,	//0x086e		VoC_sw32inc_p(RL7,REG2,DEFAULT)	|	VoC_loop_i_short(0x4,DEFAULT)
		//0x0870		VoC_endloop0
0x1809DDDF,	//0x0870		VoC_lw16i_set_inc(REG1,0x456,0x2)(lo)	|	VoC_sw32inc_p(RL7,REG3,DEFAULT)
0x180A0456,	//0x0872		VoC_lw16i_set_inc(REG2,0x4ce,0x2)(lo)	|	VoC_lw16i_set_inc(REG1,0x456,0x2)(hi)
0x688A04CE,	//0x0874		VoC_loop_i_short(0x4,DEFAULT)	|	VoC_lw16i_set_inc(REG2,0x4ce,0x2)(hi)
0xDDCCE083,	//0x0876		VoC_sw32inc_p(ACC0,REG1,DEFAULT)	|	VoC_lw16i_short(REG3,0x8,IN_PARALLEL)
0xDDCCDDCC,	//0x0878		VoC_sw32inc_p(ACC0,REG1,DEFAULT)	|	VoC_sw32inc_p(ACC0,REG1,DEFAULT)
0xC0595DCC,	//0x087a		VoC_add16_rr(REG1,REG1,REG3,IN_PARALLEL)	|	VoC_sw32inc_p(ACC0,REG1,DEFAULT)
0xDDD5DDD5,	//0x087c		VoC_sw32inc_p(ACC1,REG2,DEFAULT)	|	VoC_sw32inc_p(ACC1,REG2,DEFAULT)
0x5DD5DDD5,	//0x087e		VoC_sw32inc_p(ACC1,REG2,DEFAULT)	|	VoC_sw32inc_p(ACC1,REG2,DEFAULT)
		//0x087f		VoC_endloop0
0x2B00C09A,	//0x0880		VoC_jump_lg(pred_direct_motion_end)(lo)	|	VoC_add16_rr(REG2,REG2,REG3,IN_PARALLEL)
0xFFC00938,	//0x0882		VoC_NAD	|	VoC_jump_lg(pred_direct_motion_end)(hi)
		//0x0884		direct_temporal_not_16x16
0xE0065FC0,	//0x0884		VoC_lw16i_short(REG6,0x0,IN_PARALLEL)	|	VoC_push16(REG0,DEFAULT)
0x09342C09,	//0x0886		VoC_loop_i(0x1,0x4)
0x02350A80,	//0x0888		VoC_lw16i(REG0,0x235)
0xC030590A,	//0x088a		VoC_add16_rr(REG0,REG0,REG6,IN_PARALLEL)	|	VoC_lw32_sd(REG45,0x0,DEFAULT)
0x08933185,	//0x088c		VoC_bez16_r(direct_temporal_i8_type_check_end,REG5)
0x1603D803,	//0x088e		VoC_and16_ri(REG3,0x100)(lo)	|	VoC_lw16_p(REG3,REG0,DEFAULT)
0x31830100,	//0x0890		VoC_bez16_r(direct_temporal_i8_next_loop,REG3)(lo)	|	VoC_and16_ri(REG3,0x100)(hi)
0xDC040934,	//0x0892		VoC_sw16_p(REG4,REG0,DEFAULT)	|	VoC_bez16_r(direct_temporal_i8_next_loop,REG3)(hi)
		//0x0893		direct_temporal_i8_type_check_end
0x482E0833,	//0x0894		VoC_mult16_rd(REG3,REG6,0x482e)
0xF6C060C5,	//0x0896		VoC_movreg16(REG0,REG6,IN_PARALLEL)	|	VoC_movreg16(REG5,REG6,DEFAULT)
0x0248071B,	//0x0898		VoC_add16_rd(REG3,REG3,0x248)
0x05061821,	//0x089a		VoC_lw16i_set_inc(REG1,0x506,0x8)
0xF9080059,	//0x089c		VoC_shru16_ri(REG0,0x1,IN_PARALLEL)	|	VoC_add16_rp(REG1,REG1,REG3,DEFAULT)
0xFF445622,	//0x089e		VoC_lw32z(ACC0,IN_PARALLEL)	|	VoC_lw16_sd(REG2,0x1,DEFAULT)
0x482C2805,	//0x08a0		VoC_and16_rd(REG5,0x482c)
0xF9F05DCC,	//0x08a2		VoC_shru16_ri(REG0,0xfffffffe,IN_PARALLEL)	|	VoC_sw32inc_p(ACC0,REG1,DEFAULT)
0xC1405D8C,	//0x08a4		VoC_add16_rr(REG0,REG5,REG0,IN_PARALLEL)	|	VoC_sw32_p(ACC0,REG1,DEFAULT)
0x08C03182,	//0x08a6		VoC_bez16_r(direct_temporal_check_col_intra_end,REG2)
0x048E1821,	//0x08a8		VoC_lw16i_set_inc(REG1,0x48e,0x8)
0xD8340059,	//0x08aa		VoC_lw16_p(REG4,REG3,IN_PARALLEL)	|	VoC_add16_rp(REG1,REG1,REG3,DEFAULT)
0x04B6180A,	//0x08ac		VoC_lw16i_set_inc(REG2,0x4b6,0x2)
0xF9FC5DCC,	//0x08ae		VoC_shru16_ri(REG4,0xffffffff,IN_PARALLEL)	|	VoC_sw32inc_p(ACC0,REG1,DEFAULT)
0xC0A25D8C,	//0x08b0		VoC_add16_rr(REG2,REG2,REG4,IN_PARALLEL)	|	VoC_sw32_p(ACC0,REG1,DEFAULT)
0x043E1809,	//0x08b2		VoC_lw16i_set_inc(REG1,0x43e,0x2)
0xE0E44061,	//0x08b4		VoC_lw16i_short(REG4,0xe,IN_PARALLEL)	|	VoC_add16_rr(REG1,REG1,REG4,DEFAULT)
0xDDCCE845,	//0x08b6		VoC_sw32inc_p(ACC0,REG1,DEFAULT)	|	VoC_loop_i_short(0x2,DEFAULT)
0xC0615D8C,	//0x08b8		VoC_add16_rr(REG1,REG1,REG4,IN_PARALLEL)	|	VoC_sw32_p(ACC0,REG1,DEFAULT)
0x5D94DDD4,	//0x08ba		VoC_sw32_p(ACC0,REG2,DEFAULT)	|	VoC_sw32inc_p(ACC0,REG2,DEFAULT)
		//0x08bb		VoC_endloop0
0x2B00C0A2,	//0x08bc		VoC_jump_lg(direct_temporal_i8_next_loop)(lo)	|	VoC_add16_rr(REG2,REG2,REG4,IN_PARALLEL)
0xFFC00934,	//0x08be		VoC_NAD	|	VoC_jump_lg(direct_temporal_i8_next_loop)(hi)
		//0x08c0		direct_temporal_check_col_intra_end
0x20CC0701,	//0x08c0		VoC_add16_rd(REG1,REG0,0x20cc)
0x1C4A0A82,	//0x08c2		VoC_lw16i(REG2,0x1c4a)
0x3201D811,	//0x08c4		VoC_bltz16_r(direct_temporal_i8_ref0_ltz,REG1)(lo)	|	VoC_lw16_p(REG1,REG1,DEFAULT)
0x0A8508CE,	//0x08c6		VoC_lw16i(REG5,0x1c2a)(lo)	|	VoC_bltz16_r(direct_temporal_i8_ref0_ltz,REG1)(hi)
0xC1491C2A,	//0x08c8		VoC_add16_rr(REG1,REG5,REG1,DEFAULT)	|	VoC_lw16i(REG5,0x1c2a)(hi)
0x207A0A85,	//0x08ca		VoC_lw16i(REG5,0x207a)
0xFFC065CA,	//0x08cc		VoC_NAD(IN_PARALLEL)	|	VoC_jump(direct_temporal_i8_ref0_end)
		//0x08ce		direct_temporal_i8_ref0_ltz
0x20CD0701,	//0x08ce		VoC_add16_rd(REG1,REG0,0x20cd)
0x1C3A0A85,	//0x08d0		VoC_lw16i(REG5,0x1c3a)
0x0A858149,	//0x08d2		VoC_lw16i(REG5,0x209a)(lo)	|	VoC_add16_rp(REG1,REG5,REG1,DEFAULT)
0xFFC0209A,	//0x08d4		VoC_NAD	|	VoC_lw16i(REG5,0x209a)(hi)
		//0x08d6		direct_temporal_i8_ref0_end
0xD81E008A,	//0x08d6		VoC_lw16_p(RL7_LO,REG1,IN_PARALLEL)	|	VoC_add16_rp(REG2,REG2,REG1,DEFAULT)
0x048E1821,	//0x08d8		VoC_lw16i_set_inc(REG1,0x48e,0x8)
0xF7CF0059,	//0x08da		VoC_movreg16(RL7_HI,RL7_LO,IN_PARALLEL)	|	VoC_add16_rp(REG1,REG1,REG3,DEFAULT)
0x00081604,	//0x08dc		VoC_and16_ri(REG4,0x8)
0xE0185DCF,	//0x08de		VoC_lw16i_short(ACC0_LO,0x1,IN_PARALLEL)	|	VoC_sw32inc_p(RL7,REG1,DEFAULT)
0xFDCC5D8F,	//0x08e0		VoC_shru32_ri(ACC0,0xfffffff9,IN_PARALLEL)	|	VoC_sw32_p(RL7,REG1,DEFAULT)
0x09043184,	//0x08e2		VoC_bez16_r(direct_temporal_not_sub8x8,REG4)
0x48300804,	//0x08e4		VoC_mult16_rd(REG4,REG0,0x4830)
0x043E1808,	//0x08e6		VoC_lw16i_set_inc(REG0,0x43e,0x2)
0xD8334164,	//0x08e8		VoC_lw16_p(REG3,REG3,IN_PARALLEL)	|	VoC_add16_rr(REG4,REG5,REG4,DEFAULT)
0xF9FB7F25,	//0x08ea		VoC_shru16_ri(REG3,0xffffffff,IN_PARALLEL)	|	VoC_movreg32(ACC1,ACC0,DEFAULT)
0xC01859A2,	//0x08ec		VoC_add16_rr(REG0,REG0,REG3,IN_PARALLEL)	|	VoC_lw32_p(REG45,REG4,DEFAULT)
0xD02A5022,	//0x08ee		VoC_mac32_rp(REG5,REG2,IN_PARALLEL)	|	VoC_mac32_rp(REG4,REG2,DEFAULT)
0x04B61809,	//0x08f0		VoC_lw16i_set_inc(REG1,0x4b6,0x2)
0xFC457C44,	//0x08f2		VoC_shru32_ri(ACC1,0x8,IN_PARALLEL)	|	VoC_shru32_ri(ACC0,0x8,DEFAULT)
0xF7494059,	//0x08f4		VoC_movreg16(ACC0_HI,ACC1_LO,IN_PARALLEL)	|	VoC_add16_rr(REG1,REG1,REG3,DEFAULT)
0x42A2FF21,	//0x08f6		VoC_sub16_rr(REG2,REG2,REG4,DEFAULT)	|	VoC_movreg32(REG23,ACC0,DEFAULT)
0x6846C2EB,	//0x08f8		VoC_loop_i_short(0x2,DEFAULT)	|	VoC_sub16_rr(REG3,REG3,REG5,IN_PARALLEL)
0xDDC4E0E4,	//0x08fa		VoC_sw32inc_p(ACC0,REG0,DEFAULT)	|	VoC_lw16i_short(REG4,0xe,IN_PARALLEL)
0xC0205D84,	//0x08fc		VoC_add16_rr(REG0,REG0,REG4,IN_PARALLEL)	|	VoC_sw32_p(ACC0,REG0,DEFAULT)
0x5D89DDC9,	//0x08fe		VoC_sw32_p(REG23,REG1,DEFAULT)	|	VoC_sw32inc_p(REG23,REG1,DEFAULT)
		//0x08ff		VoC_endloop0
0x2B00C061,	//0x0900		VoC_jump_lg(direct_temporal_i8_next_loop)(lo)	|	VoC_add16_rr(REG1,REG1,REG4,IN_PARALLEL)
0xFFC00934,	//0x0902		VoC_NAD	|	VoC_jump_lg(direct_temporal_i8_next_loop)(hi)
		//0x0904		direct_temporal_not_sub8x8
0xDF445FC7,	//0x0904		VoC_push32(ACC0,IN_PARALLEL)	|	VoC_push16(REG7,DEFAULT)
0xDFC279F0,	//0x0906		VoC_push16(REG2,IN_PARALLEL)	|	VoC_shru16_ri(REG0,0xfffffffe,DEFAULT)
0xE0074145,	//0x0908		VoC_lw16i_short(REG7,0x0,IN_PARALLEL)	|	VoC_add16_rr(REG5,REG5,REG0,DEFAULT)
0x092F2C08,	//0x090a		VoC_loop_i(0x0,0x4)
0xF6E360E2,	//0x090c		VoC_movreg16(REG3,REG7,IN_PARALLEL)	|	VoC_movreg16(REG2,REG7,DEFAULT)
0x482E0834,	//0x090e		VoC_mult16_rd(REG4,REG6,0x482e)
0xC13C790B,	//0x0910		VoC_add16_rr(REG4,REG4,REG7,IN_PARALLEL)	|	VoC_shru16_ri(REG3,0x1,DEFAULT)
0x02480724,	//0x0912		VoC_add16_rd(REG4,REG4,0x248)
0x482C2802,	//0x0914		VoC_and16_rd(REG2,0x482c)
0xD84479F3,	//0x0916		VoC_lw16_p(REG4,REG4,IN_PARALLEL)	|	VoC_shru16_ri(REG3,0xfffffffe,DEFAULT)
0xF9FC409B,	//0x0918		VoC_shru16_ri(REG4,0xffffffff,IN_PARALLEL)	|	VoC_add16_rr(REG3,REG2,REG3,DEFAULT)
0xD90C79FB,	//0x091a		VoC_lw32_sd(ACC0,0x0,IN_PARALLEL)	|	VoC_shru16_ri(REG3,0xffffffff,DEFAULT)
0xD612415B,	//0x091c		VoC_lw16_sd(REG2,0x0,IN_PARALLEL)	|	VoC_add16_rr(REG3,REG5,REG3,DEFAULT)
0x05300723,	//0x091e		VoC_add16_rd(REG3,REG4,0x530)
0xFF255998,	//0x0920		VoC_movreg32(ACC1,ACC0,IN_PARALLEL)	|	VoC_lw32_p(REG01,REG3,DEFAULT)
0xD00A5002,	//0x0922		VoC_mac32_rp(REG1,REG2,IN_PARALLEL)	|	VoC_mac32_rp(REG0,REG2,DEFAULT)
0x05310724,	//0x0924		VoC_add16_rd(REG4,REG4,0x531)
0xFC457C44,	//0x0926		VoC_shru32_ri(ACC1,0x8,IN_PARALLEL)	|	VoC_shru32_ri(ACC0,0x8,DEFAULT)
0xF7216100,	//0x0928		VoC_movreg16(REG1,ACC0_HI,IN_PARALLEL)	|	VoC_movreg16(REG0,ACC0_LO,DEFAULT)
0x4282D999,	//0x092a		VoC_sub16_rr(REG2,REG2,REG0,DEFAULT)	|	VoC_lw32_p(REG23,REG3,DEFAULT)
0x073FC2CB,	//0x092c		VoC_add16_rd(REG7,REG7,0x482c)(lo)	|	VoC_sub16_rr(REG3,REG3,REG1,IN_PARALLEL)
0xDDA1482C,	//0x092e		VoC_sw32_p(REG23,REG4,DEFAULT)	|	VoC_add16_rd(REG7,REG7,0x482c)(hi)
		//0x092f		VoC_endloop0
0xDF045F82,	//0x0930		VoC_pop32(ACC0,IN_PARALLEL)	|	VoC_pop16(REG2,DEFAULT)
0xFFC05F87,	//0x0932		VoC_NAD(IN_PARALLEL)	|	VoC_pop16(REG7,DEFAULT)
		//0x0934		direct_temporal_i8_next_loop
		//0x0934		VoC_endloop1
0x482C0736,	//0x0934		VoC_add16_rd(REG6,REG6,0x482c)
0xF0045F80,	//0x0936		VoC_lw16i_short(INC0,0x1,IN_PARALLEL)	|	VoC_pop16(REG0,DEFAULT)
		//0x0938		pred_direct_motion_end
0xDF865F02,	//0x0938		VoC_pop16(REG6,IN_PARALLEL)	|	VoC_pop32(REG45,DEFAULT)
0xFFC0DFA9,	//0x093a		VoC_NOP	|	VoC_pop16(RA,DEFAULT)
0xDFE9E580,	//0x093c		VoC_push16(RA,DEFAULT)	|	VoC_return
		//0x093d		CS_decode_mb_cavlc_partition_count
0x02351805,	//0x093e		VoC_lw16i_set_inc(REG1,0x235,0x1)
0x60A81806,	//0x0940		VoC_lw16i_set_inc(REG2,0x60a8,0x1)
0xE0047065,	//0x0942		VoC_lw16i_short(REG4,0x0,IN_PARALLEL)	|	VoC_lw16i_short(REG5,0x3,DEFAULT)
0x020F4025,	//0x0944		VoC_be16_rd(sub_mb_slice_type_is_b,REG5,0x20f)
0x09742B00,	//0x0946		VoC_jump_lg(sub_mb_slice_type_is_p)
		//0x0948		sub_mb_slice_type_is_b
0x48120A87,	//0x0948		VoC_lw16i(REG7,0x4812)
0x095E2C09,	//0x094a		VoC_loop_i(0x1,0x4)
0x00FF0A85,	//0x094c		VoC_lw16i(REG5,0xff)
0x2B80DFC4,	//0x094e		VoC_jal(CS_get_ue_se_golomb)(lo)	|	VoC_push16(REG4,DEFAULT)
0xC1B50AE9,	//0x0950		VoC_add16_rr(REG5,REG6,REG6,DEFAULT)	|	VoC_jal(CS_get_ue_se_golomb)(hi)
0x71A3C17D,	//0x0952		VoC_lw16i_short(REG3,0xd,DEFAULT)	|	VoC_add16_rr(REG5,REG5,REG7,DEFAULT)
0xD9ADDF84,	//0x0954		VoC_lw32_p(ACC1,REG5,DEFAULT)	|	VoC_pop16(REG4,IN_PARALLEL)
0x095C341E,	//0x0956		VoC_bgt16_rr(get_sub_mb_type_info_b,REG3,REG6)
0x2B00F7E6,	//0x0958		VoC_jump_lg(CS_decode_mb_cavlc_partition_count_end)(lo)	|	VoC_lw16i_short(REG6,0xffffffff,DEFAULT)
0xFFC00A6E,	//0x095a		VoC_NAD	|	VoC_jump_lg(CS_decode_mb_cavlc_partition_count_end)(hi)
		//0x095c		get_sub_mb_type_info_b
0xF7435C9A,	//0x095c		VoC_movreg16(REG3,ACC1_LO,IN_PARALLEL)	|	VoC_sw16inc_p(ACC1_LO,REG1,DEFAULT)
		//0x095e		VoC_endloop1
0xDCAB645C,	//0x095e		VoC_sw16inc_p(ACC1_HI,REG2,IN_PARALLEL)	|	VoC_or16_rr(REG4,REG3,DEFAULT)
0x01001604,	//0x0960		VoC_and16_ri(REG4,0x100)
0x09733184,	//0x0962		VoC_bez16_r(sub_mb_type_b_end,REG4)
0xFFC0590B,	//0x0964		VoC_NAD(IN_PARALLEL)	|	VoC_lw32_sd(REG67,0x0,DEFAULT)
0x06332B80,	//0x0966		VoC_jal(CS_pred_direct_motion)
0x7FFE0AC1,	//0x0968		VoC_lw16i(REG1,0xfffffffe)
0x1501DD0B,	//0x096a		VoC_sw16_d(REG1,0x49c)(lo)	|	VoC_sw32_sd(REG67,0x0,DEFAULT)
0x1501049C,	//0x096c		VoC_sw16_d(REG1,0x514)(lo)	|	VoC_sw16_d(REG1,0x49c)(hi)
0x15010514,	//0x096e		VoC_sw16_d(REG1,0x4ac)(lo)	|	VoC_sw16_d(REG1,0x514)(hi)
0x150104AC,	//0x0970		VoC_sw16_d(REG1,0x524)(lo)	|	VoC_sw16_d(REG1,0x4ac)(hi)
0xE5D40524,	//0x0972		VoC_jump(get_sub_mb_type_partition_done)	|	VoC_sw16_d(REG1,0x524)(hi)
		//0x0973		sub_mb_type_b_end
		//0x0974		sub_mb_slice_type_is_p
0x480A0A87,	//0x0974		VoC_lw16i(REG7,0x480a)
0x09862C09,	//0x0976		VoC_loop_i(0x1,0x4)
0x00FF0A85,	//0x0978		VoC_lw16i(REG5,0xff)
0x0AE92B80,	//0x097a		VoC_jal(CS_get_ue_se_golomb)
0xC17DC1B5,	//0x097c		VoC_add16_rr(REG5,REG5,REG7,DEFAULT)	|	VoC_add16_rr(REG5,REG6,REG6,DEFAULT)
0xD9AADC16,	//0x097e		VoC_lw32_p(REG45,REG5,DEFAULT)	|	VoC_sw16_p(REG6,REG1,DEFAULT)
0x482E482E,	//0x0980		VoC_blt16_rd(get_sub_mb_type_info_p,REG6,0x482e)
0x2B00F7E6,	//0x0982		VoC_jump_lg(CS_decode_mb_cavlc_partition_count_end)(lo)	|	VoC_lw16i_short(REG6,0xffffffff,DEFAULT)
0xDC940A6E,	//0x0984		VoC_sw16inc_p(REG4,REG1,DEFAULT)	|	VoC_jump_lg(CS_decode_mb_cavlc_partition_count_end)(hi)
		//0x0985		get_sub_mb_type_info_p
		//0x0986		VoC_endloop1
0xF004DCA5,	//0x0986		VoC_lw16i_short(REG4,0x0,DEFAULT)	|	VoC_sw16inc_p(REG5,REG2,DEFAULT)
		//0x0987		get_sub_mb_type_partition_done
0x10000A87,	//0x0988		VoC_lw16i(REG7,0x1000)
0x60AC1806,	//0x098a		VoC_lw16i_set_inc(REG2,0x60ac,0x1)
		//0x098c		partition_count_list_count_start
0x02194824,	//0x098c		VoC_blt16_rd(partition_count_list_count_go,REG4,0x219)
0x09C02B00,	//0x098e		VoC_jump_lg(partition_count_list_count_end)
		//0x0990		partition_count_list_count_go
0xF025DFC4,	//0x0990		VoC_lw16i_short(REG5,0x1,DEFAULT)	|	VoC_push16(REG4,DEFAULT)
0x02000A86,	//0x0992		VoC_lw16i(REG6,0x200)
0x02392806,	//0x0994		VoC_and16_rd(REG6,0x239)
0x099E31C6,	//0x0996		VoC_bnez16_r(partition_count_IS_REF0,REG6)
0x021E1405,	//0x0998		VoC_lw16_d(REG5,0x21e)
0x099E3184,	//0x099a		VoC_bez16_r(partition_count_IS_REF0,REG4)
0x021F1405,	//0x099c		VoC_lw16_d(REG5,0x21f)
		//0x099e		partition_count_IS_REF0
0x02351805,	//0x099e		VoC_lw16i_set_inc(REG1,0x235,0x1)
0x09B62C09,	//0x09a0		VoC_loop_i(0x1,0x4)
0x0A84D893,	//0x09a2		VoC_lw16i(REG4,0x100)(lo)	|	VoC_lw16inc_p(REG3,REG1,DEFAULT)
0xE41C0100,	//0x09a4		VoC_and16_rr(REG4,REG3,DEFAULT)	|	VoC_lw16i(REG4,0x100)(hi)
0x09B631C4,	//0x09a6		VoC_bnez16_r(partition_count_continue,REG4)
0xEFF6643B,	//0x09a8		VoC_lw16i_short(REG6,0xffffffff,IN_PARALLEL)	|	VoC_and16_rr(REG3,REG7,DEFAULT)
0x09B53183,	//0x09aa		VoC_bez16_r(partition_count_IS_DIR,REG3)
0x2B80DFC5,	//0x09ac		VoC_jal(CS_get_te0_golomb)(lo)	|	VoC_push16(REG5,DEFAULT)
0xDF850FB6,	//0x09ae		VoC_pop16(REG5,DEFAULT)	|	VoC_jal(CS_get_te0_golomb)(hi)
0x09B5342E,	//0x09b0		VoC_bgt16_rr(partition_count_IS_DIR,REG5,REG6)
0x2B00F7E6,	//0x09b2		VoC_jump_lg(CS_decode_mb_cavlc_partition_count_end)(lo)	|	VoC_lw16i_short(REG6,0xffffffff,DEFAULT)
0xDC260A6E,	//0x09b4		VoC_sw16_p(REG6,REG2,DEFAULT)	|	VoC_jump_lg(CS_decode_mb_cavlc_partition_count_end)(hi)
		//0x09b5		partition_count_IS_DIR
		//0x09b6		partition_count_continue
		//0x09b6		VoC_endloop1
0xDF84DE10,	//0x09b6		VoC_pop16(REG4,DEFAULT)	|	VoC_inc_p(REG2,DEFAULT)
0x482C0724,	//0x09b8		VoC_add16_rd(REG4,REG4,0x482c)
0x40000A87,	//0x09ba		VoC_lw16i(REG7,0x4000)
0x60B01806,	//0x09bc		VoC_lw16i_set_inc(REG2,0x60b0,0x1)
0x098C2B00,	//0x09be		VoC_jump_lg(partition_count_list_count_start)
		//0x09c0		partition_count_list_count_end
0x043E0A8F,	//0x09c0		VoC_lw16i(RL7_HI,0x43e)
0x048E0A8E,	//0x09c2		VoC_lw16i(RL7_LO,0x48e)
0x10000A87,	//0x09c4		VoC_lw16i(REG7,0x1000)
0x1507F005,	//0x09c6		VoC_sw16_d(REG7,0x60b4)(lo)	|	VoC_lw16i_short(REG5,0x0,DEFAULT)
0x0A8160B4,	//0x09c8		VoC_lw16i(REG1,0x60ac)(lo)	|	VoC_sw16_d(REG7,0x60b4)(hi)
0xFFC060AC,	//0x09ca		VoC_NAD	|	VoC_lw16i(REG1,0x60ac)(hi)
		//0x09cc		partition_count_list_count_loop_start
0x02194825,	//0x09cc		VoC_blt16_rd(CS_decode_mb_cavlc_partition_count_go,REG5,0x219)
0x0A6E2B00,	//0x09ce		VoC_jump_lg(CS_decode_mb_cavlc_partition_count_end)
		//0x09d0		CS_decode_mb_cavlc_partition_count_go
0x1806F004,	//0x09d0		VoC_lw16i_set_inc(REG2,0x235,0x1)(lo)	|	VoC_lw16i_short(REG4,0x0,DEFAULT)
0x18070235,	//0x09d2		VoC_lw16i_set_inc(REG3,0x60a8,0x1)(lo)	|	VoC_lw16i_set_inc(REG2,0x235,0x1)(hi)
0xFFC060A8,	//0x09d4		VoC_NAD	|	VoC_lw16i_set_inc(REG3,0x60a8,0x1)(hi)
		//0x09d6		CS_decode_mb_cavlc_partition_loop_4_start
0x482E4824,	//0x09d6		VoC_blt16_rd(CS_decode_mb_cavlc_partition_loop_4_go,REG4,0x482e)
0x0A602B00,	//0x09d8		VoC_jump_lg(CS_decode_mb_cavlc_partition_loop_4_end)
		//0x09da		CS_decode_mb_cavlc_partition_loop_4_go
0xD8A67033,	//0x09da		VoC_lw16inc_p(REG6,REG2,IN_PARALLEL)	|	VoC_lw16i_short(INC3,0x1,DEFAULT)
0xDFC15F42,	//0x09dc		VoC_push16(REG1,IN_PARALLEL)	|	VoC_push32(REG45,DEFAULT)
0xC06158B7,	//0x09de		VoC_add16_rr(REG1,REG1,REG4,IN_PARALLEL)	|	VoC_lw16inc_p(REG7,REG3,DEFAULT)
0xF6835F41,	//0x09e0		VoC_movreg16(REG3,REG4,IN_PARALLEL)	|	VoC_push32(REG23,DEFAULT)
0xDFC679F3,	//0x09e2		VoC_push16(REG6,IN_PARALLEL)	|	VoC_shru16_ri(REG3,0xfffffffe,DEFAULT)
0x0248071A,	//0x09e4		VoC_add16_rd(REG2,REG3,0x248)
0x8112E1C4,	//0x09e6		VoC_add16_rp(REG2,REG4,REG2,DEFAULT)	|	VoC_movreg16(REG4,RL7_LO,DEFAULT)
0x01001606,	//0x09e8		VoC_and16_ri(REG6,0x100)
0x09F23186,	//0x09ea		VoC_bez16_r(partition_count_ref_is_not_direct1,REG6)
0xE128D994,	//0x09ec		VoC_movreg16(ACC0_LO,ACC0_HI,DEFAULT)	|	VoC_lw32_p(ACC0,REG2,DEFAULT)
0xDD94FFC0,	//0x09ee		VoC_sw32_p(ACC0,REG2,DEFAULT)	|	VoC_NOP
0x0A582B00,	//0x09f0		VoC_jump_lg(CS_decode_mb_cavlc_partition_loop_IS_DIR_end)
		//0x09f2		partition_count_ref_is_not_direct1
0xE0845818,	//0x09f2		VoC_lw16i_short(REG4,0x8,IN_PARALLEL)	|	VoC_lw16_p(ACC0_LO,REG1,DEFAULT)
0xC0A4E109,	//0x09f4		VoC_add16_rr(REG4,REG2,REG4,DEFAULT)	|	VoC_movreg16(ACC0_HI,ACC0_LO,DEFAULT)
0xDDA4DD94,	//0x09f6		VoC_sw32_p(ACC0,REG4,DEFAULT)	|	VoC_sw32_p(ACC0,REG2,DEFAULT)
0xE0245616,	//0x09f8		VoC_lw16i_short(REG4,0x2,IN_PARALLEL)	|	VoC_lw16_sd(REG6,0x0,DEFAULT)
0x00181606,	//0x09fa		VoC_and16_ri(REG6,0x18)
0x09FF31C6,	//0x09fc		VoC_bnez16_r(block_width_label,REG6)
0xD616F024,	//0x09fe		VoC_lw16_sd(REG6,0x0,DEFAULT)	|	VoC_lw16i_short(REG4,0x1,DEFAULT)
		//0x09ff		block_width_label
0x60B42806,	//0x0a00		VoC_and16_rd(REG6,0x60b4)
0x0A4A3186,	//0x0a02		VoC_bez16_r(CS_decode_mb_cavlc_partition_loop_IS_DIR,REG6)
0x0A493187,	//0x0a04		VoC_bez16_r(CS_decode_mb_cavlc_sub_partition_count,REG7)
0x0A482E39,	//0x0a06		VoC_loop_r(1,REG7)
0xF7C65FC3,	//0x0a08		VoC_movreg16(REG6,RL7_LO,IN_PARALLEL)	|	VoC_push16(REG3,DEFAULT)
0x0248071F,	//0x0a0a		VoC_add16_rd(REG7,REG3,0x248)
0x81BEDF42,	//0x0a0c		VoC_add16_rp(REG6,REG6,REG7,DEFAULT)	|	VoC_push32(REG45,DEFAULT)
0xD861DFC7,	//0x0a0e		VoC_lw16_p(REG1,REG6,DEFAULT)	|	VoC_push16(REG7,DEFAULT)
0x0E622B80,	//0x0a10		VoC_jal(CS_pred_motion)
0x7F000AC5,	//0x0a12		VoC_lw16i(REG5,0xff00)
0x0AE92B80,	//0x0a14		VoC_jal(CS_get_ue_se_golomb)
0x0AC5E0C8,	//0x0a16		VoC_lw16i(REG5,0xff00)(lo)	|	VoC_movreg16(ACC0_LO,REG6,DEFAULT)
0xFFC07F00,	//0x0a18		VoC_NAD	|	VoC_lw16i(REG5,0xff00)(hi)
0x0AE92B80,	//0x0a1a		VoC_jal(CS_get_ue_se_golomb)
0xFF2A60C9,	//0x0a1c		VoC_movreg32(REG45,ACC1,IN_PARALLEL)	|	VoC_movreg16(ACC0_HI,REG6,DEFAULT)
0x41A6FF23,	//0x0a1e		VoC_add16_rr(REG6,REG6,REG4,DEFAULT)	|	VoC_movreg32(REG67,ACC0,DEFAULT)
0x7F1DC1EF,	//0x0a20		VoC_movreg32(ACC1,REG67,DEFAULT)	|	VoC_add16_rr(REG7,REG7,REG5,IN_PARALLEL)
0xDF87F009,	//0x0a22		VoC_pop16(REG7,DEFAULT)	|	VoC_lw16i_short(INC1,0x2,IN_PARALLEL)
0xD62561E6,	//0x0a24		VoC_lw16_sd(REG5,0x1,IN_PARALLEL)	|	VoC_movreg16(REG6,RL7_HI,DEFAULT)
0xF6A301BE,	//0x0a26		VoC_movreg16(REG3,REG5,IN_PARALLEL)	|	VoC_add16_rp(REG6,REG6,REG7,DEFAULT)
0xE0C301B9,	//0x0a28		VoC_lw16i_short(REG3,0xc,IN_PARALLEL)	|	VoC_add16_rp(REG1,REG6,REG7,DEFAULT)
0x1605F051,	//0x0a2a		VoC_and16_ri(REG5,0x8)(lo)	|	VoC_lw16i_short(INC1,0x2,DEFAULT)
0xDDCD0008,	//0x0a2c		VoC_sw32inc_p(ACC1,REG1,DEFAULT)	|	VoC_and16_ri(REG5,0x8)(hi)
0x0A363185,	//0x0a2e		VoC_bez16_r(not_IS_SUB_8X8,REG5)
0xC059DDCD,	//0x0a30		VoC_add16_rr(REG1,REG1,REG3,DEFAULT)	|	VoC_sw32inc_p(ACC1,REG1,DEFAULT)
0xDDCDFFC0,	//0x0a32		VoC_sw32inc_p(ACC1,REG1,DEFAULT)	|	VoC_NOP
0xE5D1DDCD,	//0x0a34		VoC_jump(IS_SUB_end)	|	VoC_sw32inc_p(ACC1,REG1,DEFAULT)
		//0x0a36		not_IS_SUB_8X8
0xD6245625,	//0x0a36		VoC_lw16_sd(REG4,0x1,IN_PARALLEL)	|	VoC_lw16_sd(REG5,0x1,DEFAULT)
0x00101605,	//0x0a38		VoC_and16_ri(REG5,0x10)
0x0A3E3185,	//0x0a3a		VoC_bez16_r(not_IS_SUB_8X4,REG5)
0xE5C9DDCD,	//0x0a3c		VoC_jump(IS_SUB_end)	|	VoC_sw32inc_p(ACC1,REG1,DEFAULT)
		//0x0a3e		not_IS_SUB_8X4
0x00201604,	//0x0a3e		VoC_and16_ri(REG4,0x20)
0x49000709,	//0x0a40		VoC_add16_rd(REG1,REG1,0x4900)
0x0A463184,	//0x0a42		VoC_bez16_r(IS_SUB_end,REG4)
0xFFC05DCD,	//0x0a44		VoC_NAD(IN_PARALLEL)	|	VoC_sw32inc_p(ACC1,REG1,DEFAULT)
		//0x0a46		IS_SUB_end
0xDF835F02,	//0x0a46		VoC_pop16(REG3,IN_PARALLEL)	|	VoC_pop32(REG45,DEFAULT)
		//0x0a48		VoC_endloop1
0xE5CFC0E3,	//0x0a48		VoC_jump(CS_decode_mb_cavlc_partition_loop_IS_DIR_end)	|	VoC_add16_rr(REG3,REG3,REG4,DEFAULT)
		//0x0a49		CS_decode_mb_cavlc_sub_partition_count
		//0x0a4a		CS_decode_mb_cavlc_partition_loop_IS_DIR
0x0248071B,	//0x0a4a		VoC_add16_rd(REG3,REG3,0x248)
0xF00961E1,	//0x0a4c		VoC_lw16i_short(INC1,0x2,IN_PARALLEL)	|	VoC_movreg16(REG1,RL7_HI,DEFAULT)
0x00598059,	//0x0a4e		VoC_add16_rp(REG1,REG1,REG3,DEFAULT)	|	VoC_add16_rp(REG1,REG1,REG3,DEFAULT)
0xF185FF45,	//0x0a50		VoC_lw16i_short(REG5,0xc,DEFAULT)	|	VoC_lw32z(ACC1,IN_PARALLEL)
0xDDCDDDCD,	//0x0a52		VoC_sw32inc_p(ACC1,REG1,DEFAULT)	|	VoC_sw32inc_p(ACC1,REG1,DEFAULT)
0xFFC0C069,	//0x0a54		VoC_NOP	|	VoC_add16_rr(REG1,REG1,REG5,DEFAULT)
0xDDCDDDCD,	//0x0a56		VoC_sw32inc_p(ACC1,REG1,DEFAULT)	|	VoC_sw32inc_p(ACC1,REG1,DEFAULT)
		//0x0a58		CS_decode_mb_cavlc_partition_loop_IS_DIR_end
0xDF015F86,	//0x0a58		VoC_pop32(REG23,IN_PARALLEL)	|	VoC_pop16(REG6,DEFAULT)
0xDF815F02,	//0x0a5a		VoC_pop16(REG1,IN_PARALLEL)	|	VoC_pop32(REG45,DEFAULT)
0x482C0724,	//0x0a5c		VoC_add16_rd(REG4,REG4,0x482c)
0x09D62B00,	//0x0a5e		VoC_jump_lg(CS_decode_mb_cavlc_partition_loop_4_start)
		//0x0a60		CS_decode_mb_cavlc_partition_loop_4_end
0x60B00A81,	//0x0a60		VoC_lw16i(REG1,0x60b0)
0x05060A8E,	//0x0a62		VoC_lw16i(RL7_LO,0x506)
0x04B60A8F,	//0x0a64		VoC_lw16i(RL7_HI,0x4b6)
0x40000A87,	//0x0a66		VoC_lw16i(REG7,0x4000)
0x482C072D,	//0x0a68		VoC_add16_rd(REG5,REG5,0x482c)
0x60B41507,	//0x0a6a		VoC_sw16_d(REG7,0x60b4)
0x09CC2B00,	//0x0a6c		VoC_jump_lg(partition_count_list_count_loop_start)
		//0x0a6e		CS_decode_mb_cavlc_partition_count_end
0xFFC0DFA9,	//0x0a6e		VoC_NOP	|	VoC_pop16(RA,DEFAULT)
0xF00EE580,	//0x0a70		VoC_lw16i_short(RL7_LO,0x0,DEFAULT)	|	VoC_return
		//0x0a71		CS_write_back_intra_pred_mode
0x040D1403,	//0x0a72		VoC_lw16_d(REG3,0x40d)
0x04261806,	//0x0a74		VoC_lw16i_set_inc(REG2,0x426,0x1)
0x04151404,	//0x0a76		VoC_lw16_d(REG4,0x415)
0xDCA4DCA3,	//0x0a78		VoC_sw16inc_p(REG4,REG2,DEFAULT)	|	VoC_sw16inc_p(REG3,REG2,DEFAULT)
0x041D1403,	//0x0a7a		VoC_lw16_d(REG3,0x41d)
0x04251404,	//0x0a7c		VoC_lw16_d(REG4,0x425)
0xDCA4DCA3,	//0x0a7e		VoC_sw16inc_p(REG4,REG2,DEFAULT)	|	VoC_sw16inc_p(REG3,REG2,DEFAULT)
0x04221403,	//0x0a80		VoC_lw16_d(REG3,0x422)
0x04231404,	//0x0a82		VoC_lw16_d(REG4,0x423)
0x1403DCA3,	//0x0a84		VoC_lw16_d(REG3,0x424)(lo)	|	VoC_sw16inc_p(REG3,REG2,DEFAULT)
0xDCA40424,	//0x0a86		VoC_sw16inc_p(REG4,REG2,DEFAULT)	|	VoC_lw16_d(REG3,0x424)(hi)
0xFF425CA3,	//0x0a88		VoC_lw32z(REG45,IN_PARALLEL)	|	VoC_sw16inc_p(REG3,REG2,DEFAULT)
0xE0845CAE,	//0x0a8a		VoC_lw16i_short(REG4,0x8,IN_PARALLEL)	|	VoC_sw16inc_p(RL7_LO,REG2,DEFAULT)
0x022B0824,	//0x0a8c		VoC_mult16_rd(REG4,REG4,0x22b)
0x50000A8F,	//0x0a8e		VoC_lw16i(RL7_HI,0x5000)
0x408A0912,	//0x0a90		VoC_add32_rd(REG45,REG45,0x408a)
0x02130A82,	//0x0a92		VoC_lw16i(REG2,0x213)
0xE023653A,	//0x0a94		VoC_lw16i_short(REG3,0x2,IN_PARALLEL)	|	VoC_or32_rr(REG45,RL7,DEFAULT)
0x7FC31542,	//0x0a96		VoC_sw16_d(REG2,0xffc3)
0x7FC21543,	//0x0a98		VoC_sw16_d(REG3,0xffc2)
0x7FC415C2,	//0x0a9a		VoC_sw32_d(REG45,0xffc4)
0xFFC0DE80,	//0x0a9c		VoC_NOP	|	VoC_cfg(0x0)
0x00081794,	//0x0a9e		VoC_cfg_lg(0x8,)
0xFFC06580,	//0x0aa0		VoC_NAD(IN_PARALLEL)	|	VoC_return
		//0x0aa2		CS_check_intra4x4_pred_mode
0x485A0A82,	//0x0aa2		VoC_lw16i(REG2,0x485a)
0x03FE1807,	//0x0aa4		VoC_lw16i_set_inc(REG3,0x3fe,0x1)
0x022D1404,	//0x0aa6		VoC_lw16_d(REG4,0x22d)
0x0ABE2C05,	//0x0aa8		VoC_loop_i(0x1,0x2)
0x00001644,	//0x0aaa		VoC_and16_ri(REG4,0x8000)
0x0ABA31C4,	//0x0aac		VoC_bnez16_r(CS_check_intra4x4_pred_mode_100,REG4)
0x4740071B,	//0x0aae		VoC_add16_rd(REG3,REG3,0x4740)
0x809DE889,	//0x0ab0		VoC_add16_rp(REG5,REG2,REG3,DEFAULT)	|	VoC_loop_i_short(0x4,DEFAULT)
0xD855F7E6,	//0x0ab2		VoC_lw16_p(REG5,REG5,DEFAULT)	|	VoC_lw16i_short(REG6,0xffffffff,DEFAULT)
0x0AC13205,	//0x0ab4		VoC_bltz16_r(CS_check_intra4x4_pred_mode_end,REG5)
0x0AB93185,	//0x0ab6		VoC_bez16_r(CS_check_intra4x4_pred_mode_zero,REG5)
0xDE18DC35,	//0x0ab8		VoC_inc_p(REG3,DEFAULT)	|	VoC_sw16_p(REG5,REG3,DEFAULT)
		//0x0ab9		CS_check_intra4x4_pred_mode_zero
		//0x0ab9		VoC_endloop0
		//0x0aba		CS_check_intra4x4_pred_mode_100
0x03FE1823,	//0x0aba		VoC_lw16i_set_inc(REG3,0x3fe,0x8)
0x022E1404,	//0x0abc		VoC_lw16_d(REG4,0x22e)
		//0x0abe		VoC_endloop1
0x48660A82,	//0x0abe		VoC_lw16i(REG2,0x4866)
0xE580F006,	//0x0ac0		VoC_return	|	VoC_lw16i_short(REG6,0x0,DEFAULT)
		//0x0ac1		CS_check_intra4x4_pred_mode_end
		//0x0ac2		CS_check_intra_pred_mode
0x483038BE,	//0x0ac2		VoC_bgt16_rd(CS_check_intra_pred_mode_end2,REG6,0x4830)
0x498E0A85,	//0x0ac4		VoC_lw16i(REG5,0x498e)
0x022D1404,	//0x0ac6		VoC_lw16_d(REG4,0x22d)
0xC175E84E,	//0x0ac8		VoC_add16_rr(REG5,REG5,REG6,DEFAULT)	|	VoC_loop_i_short(0x2,DEFAULT)
0x00001644,	//0x0aca		VoC_and16_ri(REG4,0x8000)
0x0AD431C4,	//0x0acc		VoC_bnez16_r(CS_check_intra_pred_mode_label22,REG4)
0x3246D856,	//0x0ace		VoC_bnltz16_r(CS_check_intra_pred_mode_label22,REG6)(lo)	|	VoC_lw16_p(REG6,REG5,DEFAULT)
0xF7E60AD4,	//0x0ad0		VoC_lw16i_short(REG6,0xffffffff,DEFAULT)	|	VoC_bnltz16_r(CS_check_intra_pred_mode_label22,REG6)(hi)
		//0x0ad1		CS_check_intra_pred_mode_end2
0xFFC065C6,	//0x0ad2		VoC_NAD(IN_PARALLEL)	|	VoC_jump(CS_check_intra_pred_mode_end)
		//0x0ad4		CS_check_intra_pred_mode_label22
0x022E1404,	//0x0ad4		VoC_lw16_d(REG4,0x22e)
		//0x0ad6		VoC_endloop0
0x49960A85,	//0x0ad6		VoC_lw16i(REG5,0x4996)
		//0x0ad8		CS_check_intra_pred_mode_end
0xFFC06580,	//0x0ad8		VoC_NAD(IN_PARALLEL)	|	VoC_return
		//0x0ada		CS_log_tab
0x00000AC4,	//0x0ada		VoC_lw16i(REG4,0x8000)
0x00011807,	//0x0adc		VoC_lw16i_set_inc(REG3,0x1,0x1)
0xE0A7EA05,	//0x0ade		VoC_movreg16(REG7,REG5,DEFAULT)	|	VoC_loop_i_short(0x10,DEFAULT)
0x31C7E427,	//0x0ae0		VoC_bnez16_r(log2_exit,REG7)(lo)	|	VoC_and16_rr(REG7,REG4,DEFAULT)
0x790C0AE5,	//0x0ae2		VoC_shru16_ri(REG4,0x1,DEFAULT)	|	VoC_bnez16_r(log2_exit,REG7)(hi)
		//0x0ae3		VoC_endloop0
0xE319DE18,	//0x0ae4		VoC_rbinc_r(REG5,REG3,DEFAULT)	|	VoC_inc_p(REG3,IN_PARALLEL)
		//0x0ae5		log2_exit
0x482C079B,	//0x0ae6		VoC_sub16_rd(REG3,REG3,0x482c)
0xE240E580,	//0x0ae8		VoC_lbinc_p(REG0)	|	VoC_return
		//0x0ae9		CS_get_ue_se_golomb
0x5FDBDFC7,	//0x0aea		VoC_push16(BITCACHE,DEFAULT)	|	VoC_push16(REG7,DEFAULT)
0x7F33DF47,	//0x0aec		VoC_movreg32(REG67,RL6,DEFAULT)	|	VoC_push32(RL7,IN_PARALLEL)
0x079CDF83,	//0x0aee		VoC_sub16_rd(REG4,REG3,0x48e3)(lo)	|	VoC_pop16(REG3,IN_PARALLEL)
0x388B48E3,	//0x0af0		VoC_bgt16_rd(CS_get_ue_se_golomb_go,REG3,0x4896)(lo)	|	VoC_sub16_rd(REG4,REG3,0x48e3)(hi)
0x58044896,	//0x0af2		VoC_lw16_p(REG4,REG0,DEFAULT)	|	VoC_bgt16_rd(CS_get_ue_se_golomb_go,REG3,0x4896)(hi)
0x1604FDC3,	//0x0af4		VoC_and16_ri(REG4,0xff)(lo)	|	VoC_shru32_ri(REG67,0xfffffff8,IN_PARALLEL)
0xE46600FF,	//0x0af6		VoC_or16_rr(REG6,REG4,DEFAULT)	|	VoC_and16_ri(REG4,0xff)(hi)
0x4896079C,	//0x0af8		VoC_sub16_rd(REG4,REG3,0x4896)
		//0x0afa		CS_get_ue_se_golomb_go
0xFC0BFEE3,	//0x0afa		VoC_shru32_ri(REG67,0x1,DEFAULT)	|	VoC_shru32_rr(REG67,REG4,DEFAULT)
0x499E1487,	//0x0afc		VoC_lw32_d(RL7,0x499e)
0x0B3E369F,	//0x0afe		VoC_bngt32_rr(CS_get_ue_se_golomb_else,REG67,RL7)
0x490E0A8E,	//0x0b00		VoC_lw16i(RL7_LO,0x490e)
0x494E0A8F,	//0x0b02		VoC_lw16i(RL7_HI,0x494e)
0x7006E2E7,	//0x0b04		VoC_lw16i_short(REG6,0x0,DEFAULT)	|	VoC_rb_i(REG7,0x9,DEFAULT)
0x0A84E013,	//0x0b06		VoC_lw16i(REG4,0xff)(lo)	|	VoC_lw16i_short(REG3,0x1,IN_PARALLEL)
0x343C00FF,	//0x0b08		VoC_bgt16_rr(CS_get_ue_se_golomb_end,REG7,REG4)(lo)	|	VoC_lw16i(REG4,0xff)(hi)
0x0AC60B37,	//0x0b0a		VoC_lw16i(REG6,0xff02)(lo)	|	VoC_bgt16_rr(CS_get_ue_se_golomb_end,REG7,REG4)(hi)
0xF0637F02,	//0x0b0c		VoC_lw16i_short(REG3,0x3,DEFAULT)	|	VoC_lw16i(REG6,0xff02)(hi)
0x00BF0A84,	//0x0b0e		VoC_lw16i(REG4,0xbf)
0x0B37343C,	//0x0b10		VoC_bgt16_rr(CS_get_ue_se_golomb_end,REG7,REG4)
0x007F0A84,	//0x0b12		VoC_lw16i(REG4,0x7f)
0x01010A86,	//0x0b14		VoC_lw16i(REG6,0x101)
0x0B37343C,	//0x0b16		VoC_bgt16_rr(CS_get_ue_se_golomb_end,REG7,REG4)
0x7D060AC6,	//0x0b18		VoC_lw16i(REG6,0xfd06)
0x39A7F0A3,	//0x0b1a		VoC_bgt16_rd(CS_get_ue_se_golomb_end,REG7,0x49a3)(lo)	|	VoC_lw16i_short(REG3,0x5,DEFAULT)
0x0A8649A3,	//0x0b1c		VoC_lw16i(REG6,0x305)(lo)	|	VoC_bgt16_rd(CS_get_ue_se_golomb_end,REG7,0x49a3)(hi)
0x39870305,	//0x0b1e		VoC_bgt16_rd(CS_get_ue_se_golomb_end,REG7,0x490b)(lo)	|	VoC_lw16i(REG6,0x305)(hi)
0x0AC6490B,	//0x0b20		VoC_lw16i(REG6,0xfe04)(lo)	|	VoC_bgt16_rd(CS_get_ue_se_golomb_end,REG7,0x490b)(hi)
0x39277E04,	//0x0b22		VoC_bgt16_rd(CS_get_ue_se_golomb_end,REG7,0x49a4)(lo)	|	VoC_lw16i(REG6,0xfe04)(hi)
0x0A8649A4,	//0x0b24		VoC_lw16i(REG6,0x203)(lo)	|	VoC_bgt16_rd(CS_get_ue_se_golomb_end,REG7,0x49a4)(hi)
0x39070203,	//0x0b26		VoC_bgt16_rd(CS_get_ue_se_golomb_end,REG7,0x49a5)(lo)	|	VoC_lw16i(REG6,0x203)(hi)
0x60E449A5,	//0x0b28		VoC_movreg16(REG4,REG7,DEFAULT)	|	VoC_bgt16_rd(CS_get_ue_se_golomb_end,REG7,0x49a5)(hi)
0xC8FBF6E6,	//0x0b2a		VoC_add32_rr(REG67,REG67,RL7,DEFAULT)	|	VoC_movreg16(REG6,REG7,IN_PARALLEL)
0xD866F0E3,	//0x0b2c		VoC_lw16_p(REG6,REG6,DEFAULT)	|	VoC_lw16i_short(REG3,0x7,DEFAULT)
0xF9C65877,	//0x0b2e		VoC_shru16_ri(REG6,0xfffffff8,IN_PARALLEL)	|	VoC_lw16_p(REG7,REG7,DEFAULT)
0x3834FC43,	//0x0b30		VoC_bgt16_rd(CS_get_ue_se_golomb_end,REG4,0x4873)(lo)	|	VoC_shru32_ri(REG67,0x8,DEFAULT)
0xF1234873,	//0x0b32		VoC_lw16i_short(REG3,0x9,DEFAULT)	|	VoC_bgt16_rd(CS_get_ue_se_golomb_end,REG4,0x4873)(hi)
0x4874381C,	//0x0b34		VoC_bgt16_rd(CS_get_ue_se_golomb_end,REG4,0x4874)
0xE42EF003,	//0x0b36		VoC_and16_rr(REG6,REG5,DEFAULT)	|	VoC_lw16i_short(REG3,0x0,DEFAULT)
		//0x0b37		CS_get_ue_se_golomb_end
0x49A0401D,	//0x0b38		VoC_be16_rd(CS_get_ue_se_golomb_end2,REG5,0x49a0)
0xE318F846,	//0x0b3a		VoC_rbinc_r(REG4,REG3,DEFAULT)	|	VoC_shr16_ri(REG6,0x8,DEFAULT)
		//0x0b3b		CS_get_ue_se_golomb_end2
0x0B6A2B00,	//0x0b3c		VoC_jump_lg(CS_get_ue_se_golomb_return)
		//0x0b3e		CS_get_ue_se_golomb_else
0xFF42FDFB,	//0x0b3e		VoC_lw32z(REG45,DEFAULT)	|	VoC_shru32_ri(REG67,0xffffffff,DEFAULT)
0x0AC5DFC5,	//0x0b40		VoC_lw16i(REG5,0x8000)(lo)	|	VoC_push16(REG5,DEFAULT)
0xDF430000,	//0x0b42		VoC_push32(REG67,DEFAULT)	|	VoC_lw16i(REG5,0x8000)(hi)
0x003E1FBB,	//0x0b44		VoC_lw16i_set_inc(REG3,0x3e,0xfffffffe)
0xFF1FEBE5,	//0x0b46		VoC_movreg32(RL7,REG67,DEFAULT)	|	VoC_loop_i_short(0x1f,DEFAULT)
0x3347E4D7,	//0x0b48		VoC_bnez32_r(log2_se_exit,RL7)(lo)	|	VoC_and32_rr(RL7,REG45,DEFAULT)
0x7C0A0B4D,	//0x0b4a		VoC_shru32_ri(REG45,0x1,DEFAULT)	|	VoC_bnez32_r(log2_se_exit,RL7)(hi)
		//0x0b4b		VoC_endloop0
0xDF03DE18,	//0x0b4c		VoC_pop32(REG67,DEFAULT)	|	VoC_inc_p(REG3,IN_PARALLEL)
		//0x0b4d		log2_se_exit
0x4873079B,	//0x0b4e		VoC_sub16_rd(REG3,REG3,0x4873)
0x0B1BFEDB,	//0x0b50		VoC_sub16_dr(REG3,0x48e3,REG3)(lo)	|	VoC_shru32_rr(REG67,REG3,DEFAULT)
0xE31848E3,	//0x0b52		VoC_rbinc_r(REG4,REG3,DEFAULT)	|	VoC_sub16_dr(REG3,0x48e3,REG3)(hi)
0x48E4079C,	//0x0b54		VoC_sub16_rd(REG4,REG3,0x48e4)
0x48E43C23,	//0x0b56		VoC_bngt16_rd(CS_get_ue_se_golomb_else_go,REG3,0x48e4)
0xE320E240,	//0x0b58		VoC_rbinc_r(REG4,REG4,DEFAULT)	|	VoC_lbinc_p(REG0)
		//0x0b5a		CS_get_ue_se_golomb_else_go
0x442DDF85,	//0x0b5a		VoC_bne16_rd(CS_get_ue_se_golomb_return2,REG5,0x49a0)(lo)	|	VoC_pop16(REG5,DEFAULT)
0x07B649A0,	//0x0b5c		VoC_sub16_rd(REG6,REG6,0x482c)(lo)	|	VoC_bne16_rd(CS_get_ue_se_golomb_return2,REG5,0x49a0)(hi)
0xFFC0482C,	//0x0b5e		VoC_NAD	|	VoC_sub16_rd(REG6,REG6,0x482c)(hi)
		//0x0b60		CS_get_ue_se_golomb_return2
0x49A04095,	//0x0b60		VoC_be16_rd(CS_get_ue_se_golomb_return,REG5,0x49a0)
0xF90E60C4,	//0x0b62		VoC_shru16_ri(REG6,0x1,IN_PARALLEL)	|	VoC_movreg16(REG4,REG6,DEFAULT)
0x00011604,	//0x0b64		VoC_and16_ri(REG4,0x1)
0x0B6A3184,	//0x0b66		VoC_bez16_r(CS_get_ue_se_golomb_return,REG4)
0x494E0B36,	//0x0b68		VoC_sub16_dr(REG6,0x494e,REG6)
		//0x0b6a		CS_get_ue_se_golomb_return
0xDF075F87,	//0x0b6a		VoC_pop32(RL7,IN_PARALLEL)	|	VoC_pop16(REG7,DEFAULT)
0xFFC06580,	//0x0b6c		VoC_NAD(IN_PARALLEL)	|	VoC_return
		//0x0b6e		CS_pred_intra_mode
0x03FD0A85,	//0x0b6e		VoC_lw16i(REG5,0x3fd)
0x03F60A86,	//0x0b70		VoC_lw16i(REG6,0x3f6)
0x81A68165,	//0x0b72		VoC_add16_rp(REG6,REG6,REG4,DEFAULT)	|	VoC_add16_rp(REG5,REG5,REG4,DEFAULT)
0xD866D855,	//0x0b74		VoC_lw16_p(REG6,REG6,DEFAULT)	|	VoC_lw16_p(REG5,REG5,DEFAULT)
0x0B7A3435,	//0x0b76		VoC_bgt16_rr(CS_pred_intra_mode_FFMIN,REG6,REG5)
0xFFC060C5,	//0x0b78		VoC_NAD(IN_PARALLEL)	|	VoC_movreg16(REG5,REG6,DEFAULT)
		//0x0b7a		CS_pred_intra_mode_FFMIN
0x0B7D3245,	//0x0b7a		VoC_bnltz16_r(CS_pred_intra_mode_zero,REG5)
0xE580F045,	//0x0b7c		VoC_return	|	VoC_lw16i_short(REG5,0x2,DEFAULT)
		//0x0b7d		CS_pred_intra_mode_zero
		//0x0b7e		CS_get_chroma_qp
0x00FF1603,	//0x0b7e		VoC_and16_ri(REG3,0xff)
0x0226071D,	//0x0b80		VoC_add16_rd(REG5,REG3,0x226)
0x0B863184,	//0x0b82		VoC_bez16_r(CS_get_chroma_qp_100,REG4)
0x0227071D,	//0x0b84		VoC_add16_rd(REG5,REG3,0x227)
		//0x0b86		CS_get_chroma_qp_100
0x00330A82,	//0x0b86		VoC_lw16i(REG2,0x33)
0xDED57FC0,	//0x0b88		VoC_clipu16_rr(REG5,REG2,IN_PARALLEL)	|	VoC_NOP
0x49AE0A82,	//0x0b8a		VoC_lw16i(REG2,0x49ae)
0xFFC0C0AA,	//0x0b8c		VoC_NOP	|	VoC_add16_rr(REG2,REG2,REG5,DEFAULT)
0xE580D822,	//0x0b8e		VoC_return	|	VoC_lw16_p(REG2,REG2,DEFAULT)
		//0x0b90		CS_pred_non_zero_count
0x02480722,	//0x0b90		VoC_add16_rd(REG2,REG4,0x248)
0xE0157106,	//0x0b92		VoC_lw16i_short(REG5,0x1,IN_PARALLEL)	|	VoC_lw16i_short(REG6,0x8,DEFAULT)
0xB8B6B8AD,	//0x0b94		VoC_sub16_pr(REG6,REG2,REG6,DEFAULT)	|	VoC_sub16_pr(REG5,REG2,REG5,DEFAULT)
0x03CE0A82,	//0x0b96		VoC_lw16i(REG2,0x3ce)
0xC0B6C0AD,	//0x0b98		VoC_add16_rr(REG6,REG2,REG6,DEFAULT)	|	VoC_add16_rr(REG5,REG2,REG5,DEFAULT)
0x8175D855,	//0x0b9a		VoC_add16_rp(REG5,REG5,REG6,DEFAULT)	|	VoC_lw16_p(REG5,REG5,DEFAULT)
0x48D73835,	//0x0b9c		VoC_bgt16_rd(CS_pred_non_zero_count_100,REG5,0x48d7)
0x482C072D,	//0x0b9e		VoC_add16_rd(REG5,REG5,0x482c)
0xFFC0790D,	//0x0ba0		VoC_NAD(IN_PARALLEL)	|	VoC_shru16_ri(REG5,0x1,DEFAULT)
		//0x0ba2		CS_pred_non_zero_count_100
0x001F1605,	//0x0ba2		VoC_and16_ri(REG5,0x1f)
0xFFC06580,	//0x0ba4		VoC_NAD(IN_PARALLEL)	|	VoC_return
		//0x0ba6		CS_GET_VLC_Sub
0xF9FC4062,	//0x0ba6		VoC_shru16_ri(REG4,0xffffffff,IN_PARALLEL)	|	VoC_add16_rr(REG2,REG1,REG4,DEFAULT)
0x0BB23185,	//0x0ba8		VoC_bez16_r(CS_GET_VLC_1010,REG5)
0x483D0712,	//0x0baa		VoC_add16_rd(REG2,REG2,0x483d)
0x48E44C34,	//0x0bac		VoC_bnlt16_rd(CS_GET_VLC_1010,REG4,0x48e4)
0xE240C10A,	//0x0bae		VoC_lbinc_p(REG0)	|	VoC_add16_rr(REG2,REG4,REG1,DEFAULT)
0xE5C4D991,	//0x0bb0		VoC_jump(CS_GET_VLC_100)	|	VoC_lw32_p(REG23,REG2,DEFAULT)
		//0x0bb2		CS_GET_VLC_1010
0xFA41D823,	//0x0bb2		VoC_shr32_ri(REG23,0x8,DEFAULT)	|	VoC_lw16_p(REG3,REG2,DEFAULT)
0xE580F842,	//0x0bb4		VoC_return	|	VoC_shr16_ri(REG2,0x8,DEFAULT)
		//0x0bb5		CS_GET_VLC_100
		//0x0bb6		CS_GET_VLC
0xE240DFE9,	//0x0bb6		VoC_lbinc_p(REG0)	|	VoC_push16(RA,DEFAULT)
0xFFC06378,	//0x0bb8		VoC_NAD(IN_PARALLEL)	|	VoC_rb_r(REG4,REG7,DEFAULT)
0x0BA62B80,	//0x0bba		VoC_jal(CS_GET_VLC_Sub)
0x482C3D3E,	//0x0bbc		VoC_bngt16_rd(CS_GET_VLC_end,REG6,0x482c)
0x0BD33243,	//0x0bbe		VoC_bnltz16_r(CS_GET_VLC_end,REG3)
0xDE43633B,	//0x0bc0		VoC_abs16_r(REG3,IN_PARALLEL)	|	VoC_rbinc_r(REG7,REG7,DEFAULT)
0x6358E240,	//0x0bc2		VoC_rb_r(REG4,REG3,DEFAULT)	|	VoC_lbinc_p(REG0)
0xC114F667,	//0x0bc4		VoC_add16_rr(REG4,REG4,REG2,DEFAULT)	|	VoC_movreg16(REG7,REG3,IN_PARALLEL)
0x0BA62B80,	//0x0bc6		VoC_jal(CS_GET_VLC_Sub)
0x482D3C9E,	//0x0bc8		VoC_bngt16_rd(CS_GET_VLC_end,REG6,0x482d)
0x0BD33243,	//0x0bca		VoC_bnltz16_r(CS_GET_VLC_end,REG3)
0xDE43633B,	//0x0bcc		VoC_abs16_r(REG3,IN_PARALLEL)	|	VoC_rbinc_r(REG7,REG7,DEFAULT)
0xE358E240,	//0x0bce		VoC_rb_r(REG4,REG3,DEFAULT)	|	VoC_lbinc_p(REG0)
0x2B80C114,	//0x0bd0		VoC_jal(CS_GET_VLC_Sub)(lo)	|	VoC_add16_rr(REG4,REG4,REG2,DEFAULT)
0xDFA90BA6,	//0x0bd2		VoC_pop16(RA,DEFAULT)	|	VoC_jal(CS_GET_VLC_Sub)(hi)
		//0x0bd3		CS_GET_VLC_end
0xE580E318,	//0x0bd4		VoC_return	|	VoC_rbinc_r(REG4,REG3,DEFAULT)
		//0x0bd6		CS_decode_residual
0x1581DFE9,	//0x0bd6		VoC_sw32_d(REG23,0x208a)(lo)	|	VoC_push16(RA,DEFAULT)
0x150F208A,	//0x0bd8		VoC_sw16_d(RL7_HI,0x208d)(lo)	|	VoC_sw32_d(REG23,0x208a)(hi)
0x7005208D,	//0x0bda		VoC_lw16i_short(REG5,0x0,DEFAULT)	|	VoC_sw16_d(RL7_HI,0x208d)(hi)
0x381BF411,	//0x0bdc		VoC_bgt16_rd(CS_decode_residual_GT24,REG3,0x4896)(lo)	|	VoC_lw16i_short(FORMAT32,0x2,IN_PARALLEL)
0xF0254896,	//0x0bde		VoC_lw16i_short(REG5,0x1,DEFAULT)	|	VoC_bgt16_rd(CS_decode_residual_GT24,REG3,0x4896)(hi)
		//0x0be0		CS_decode_residual_GT24
0x208C1506,	//0x0be0		VoC_sw16_d(REG6,0x208c)
0x208E1505,	//0x0be2		VoC_sw16_d(REG5,0x208e)
0x483344AB,	//0x0be4		VoC_bne16_rd(CS_decode_residual_100,REG3,0x4833)
0x0A81F025,	//0x0be6		VoC_lw16i(REG1,0x4d22)(lo)	|	VoC_lw16i_short(REG5,0x1,DEFAULT)
0x71074D22,	//0x0be8		VoC_lw16i_short(REG7,0x8,DEFAULT)	|	VoC_lw16i(REG1,0x4d22)(hi)
0x2B80E016,	//0x0bea		VoC_jal(CS_GET_VLC)(lo)	|	VoC_lw16i_short(REG6,0x1,IN_PARALLEL)
0xE0440BB6,	//0x0bec		VoC_movreg16(REG4,REG2,DEFAULT)	|	VoC_jal(CS_GET_VLC)(hi)
0x2B00F914,	//0x0bee		VoC_jump_lg(CS_decode_residual_100_end)(lo)	|	VoC_shru16_ri(REG4,0x2,DEFAULT)
0xE0640C18,	//0x0bf0		VoC_movreg16(REG4,REG3,DEFAULT)	|	VoC_jump_lg(CS_decode_residual_100_end)(hi)
		//0x0bf1		CS_decode_residual_100
0x48324423,	//0x0bf2		VoC_bne16_rd(CS_decode_residual_200,REG3,0x4832)
0xFFC07004,	//0x0bf4		VoC_NAD(IN_PARALLEL)	|	VoC_lw16i_short(REG4,0x0,DEFAULT)
		//0x0bf6		CS_decode_residual_200
0x0B902B80,	//0x0bf6		VoC_jal(CS_pred_non_zero_count)
0x4E2A0A81,	//0x0bf8		VoC_lw16i(REG1,0x4e2a)
0x482D48A5,	//0x0bfa		VoC_blt16_rd(coeff_token_table_index_done,REG5,0x482d)
0x503A0A81,	//0x0bfc		VoC_lw16i(REG1,0x503a)
0x482E4885,	//0x0bfe		VoC_blt16_rd(coeff_token_table_index_done,REG5,0x482e)
0x518E0A81,	//0x0c00		VoC_lw16i(REG1,0x518e)
0x483D4825,	//0x0c02		VoC_blt16_rd(coeff_token_table_index_done,REG5,0x483d)
0x52AE0A81,	//0x0c04		VoC_lw16i(REG1,0x52ae)
		//0x0c06		coeff_token_table_index_done
0xE0267107,	//0x0c06		VoC_lw16i_short(REG6,0x2,IN_PARALLEL)	|	VoC_lw16i_short(REG7,0x8,DEFAULT)
0xDFC37025,	//0x0c08		VoC_push16(REG3,IN_PARALLEL)	|	VoC_lw16i_short(REG5,0x1,DEFAULT)
0x0BB62B80,	//0x0c0a		VoC_jal(CS_GET_VLC)
0xF6445F83,	//0x0c0c		VoC_movreg16(REG4,REG2,IN_PARALLEL)	|	VoC_pop16(REG3,DEFAULT)
0x0248071D,	//0x0c0e		VoC_add16_rd(REG5,REG3,0x248)
0x03CE0A86,	//0x0c10		VoC_lw16i(REG6,0x3ce)
0xF91401AE,	//0x0c12		VoC_shru16_ri(REG4,0x2,IN_PARALLEL)	|	VoC_add16_rp(REG6,REG6,REG5,DEFAULT)
0x48324023,	//0x0c14		VoC_be16_rd(CS_decode_residual_100_end,REG3,0x4832)
0xFFC05C64,	//0x0c16		VoC_NAD(IN_PARALLEL)	|	VoC_sw16_p(REG4,REG6,DEFAULT)
		//0x0c18		CS_decode_residual_100_end
0x0C1E31C4,	//0x0c18		VoC_bnez16_r(CS_decode_residual_total_coeff_zero,REG4)
0x2B00F006,	//0x0c1a		VoC_jump_lg(CS_decode_residual_exit)(lo)	|	VoC_lw16i_short(REG6,0x0,DEFAULT)
0xFFC00CFD,	//0x0c1c		VoC_NAD	|	VoC_jump_lg(CS_decode_residual_exit)(hi)
		//0x0c1e		CS_decode_residual_total_coeff_zero
0x208C3C34,	//0x0c1e		VoC_bngt16_rd(CS_decode_residual_max_coeff,REG4,0x208c)
0x2B00F7E6,	//0x0c20		VoC_jump_lg(CS_decode_residual_exit)(lo)	|	VoC_lw16i_short(REG6,0xffffffff,DEFAULT)
0xFFC00CFD,	//0x0c22		VoC_NAD	|	VoC_jump_lg(CS_decode_residual_exit)(hi)
		//0x0c24		CS_decode_residual_max_coeff
0x00031602,	//0x0c24		VoC_and16_ri(REG2,0x3)
0x207A1805,	//0x0c26		VoC_lw16i_set_inc(REG1,0x207a,0x1)
0x0C313182,	//0x0c28		VoC_bez16_r(CS_decode_residual_level,REG2)
0xE286E686,	//0x0c2a		VoC_rbinc_i(REG6,0x1,DEFAULT)	|	VoC_loop_r_short(REG2,DEFAULT)
0x0B36F9FE,	//0x0c2c		VoC_sub16_dr(REG6,0x482c,REG6)(lo)	|	VoC_shru16_ri(REG6,0xffffffff,DEFAULT)
0xE240482C,	//0x0c2e		VoC_lbinc_p(REG0)	|	VoC_sub16_dr(REG6,0x482c,REG6)(hi)
		//0x0c30		VoC_endloop0
0xDFC4DC96,	//0x0c30		VoC_push16(REG4,DEFAULT)	|	VoC_sw16inc_p(REG6,REG1,DEFAULT)
		//0x0c31		CS_decode_residual_level
0x0C9734A2,	//0x0c32		VoC_bngt16_rr(CS_decode_residual_total_coeff,REG4,REG2)
0x3C24F026,	//0x0c34		VoC_bngt16_rd(suffix_length_100,REG4,0x4868)(lo)	|	VoC_lw16i_short(REG6,0x1,DEFAULT)
0x481A4868,	//0x0c36		VoC_blt16_rd(suffix_length_ok,REG2,0x49a9)(lo)	|	VoC_bngt16_rd(suffix_length_100,REG4,0x4868)(hi)
0xF00649A9,	//0x0c38		VoC_lw16i_short(REG6,0x0,DEFAULT)	|	VoC_blt16_rd(suffix_length_ok,REG2,0x49a9)(hi)
		//0x0c39		suffix_length_100
		//0x0c3a		suffix_length_ok
0xE2C1E240,	//0x0c3a		VoC_rb_i(REG5,0x10,DEFAULT)	|	VoC_lbinc_p(REG0)
0x0ADA2B80,	//0x0c3c		VoC_jal(CS_log_tab)
0xE240F007,	//0x0c3e		VoC_lbinc_p(REG0)	|	VoC_lw16i_short(REG7,0x0,DEFAULT)
0xF6C543F4,	//0x0c40		VoC_movreg16(REG5,REG6,IN_PARALLEL)	|	VoC_sub16_rr(REG4,REG7,REG6,DEFAULT)
0x49004913,	//0x0c42		VoC_blt16_rd(prefix_end,REG3,0x4900)
0x0C4831C6,	//0x0c44		VoC_bnez16_r(suffix_length_is_zero,REG6)
0xFFC07085,	//0x0c46		VoC_NAD(IN_PARALLEL)	|	VoC_lw16i_short(REG5,0x4,DEFAULT)
		//0x0c48		suffix_length_is_zero
0x490040A3,	//0x0c48		VoC_be16_rd(prefix_end,REG3,0x4900)
0x31C6F185,	//0x0c4a		VoC_bnez16_r(suffix_length_is_zero_15,REG6)(lo)	|	VoC_lw16i_short(REG5,0xc,DEFAULT)
0xF1E70C4E,	//0x0c4c		VoC_lw16i_short(REG7,0xf,DEFAULT)	|	VoC_bnez16_r(suffix_length_is_zero_15,REG6)(hi)
		//0x0c4e		suffix_length_is_zero_15
0x48744033,	//0x0c4e		VoC_be16_rd(prefix_end,REG3,0x4874)
0x2B00F7E6,	//0x0c50		VoC_jump_lg(CS_decode_residual_exit)(lo)	|	VoC_lw16i_short(REG6,0xffffffff,DEFAULT)
0xFFC00CFD,	//0x0c52		VoC_NAD	|	VoC_jump_lg(CS_decode_residual_exit)(hi)
		//0x0c54		prefix_end
0xFE636328,	//0x0c54		VoC_shru16_rr(REG3,REG4,IN_PARALLEL)	|	VoC_rbinc_r(REG4,REG5,DEFAULT)
0xE01640E3,	//0x0c56		VoC_lw16i_short(REG6,0x1,IN_PARALLEL)	|	VoC_add16_rr(REG3,REG3,REG4,DEFAULT)
0xE01440FB,	//0x0c58		VoC_lw16i_short(REG4,0x1,IN_PARALLEL)	|	VoC_add16_rr(REG3,REG3,REG7,DEFAULT)
0x49A94C22,	//0x0c5a		VoC_bnlt16_rd(trailing_ones_100,REG2,0x49a9)
0x482D071B,	//0x0c5c		VoC_add16_rd(REG3,REG3,0x482d)
		//0x0c5e		trailing_ones_100
0x482F3C23,	//0x0c5e		VoC_bngt16_rd(level_code_5,REG3,0x482f)
0xFFC07046,	//0x0c60		VoC_NAD(IN_PARALLEL)	|	VoC_lw16i_short(REG6,0x2,DEFAULT)
		//0x0c62		level_code_5
0x482D071D,	//0x0c62		VoC_add16_rd(REG5,REG3,0x482d)
0xF90D641C,	//0x0c64		VoC_shru16_ri(REG5,0x1,IN_PARALLEL)	|	VoC_and16_rr(REG4,REG3,DEFAULT)
0x494E0B24,	//0x0c66		VoC_sub16_dr(REG4,0x494e,REG4)
0x4363E4A5,	//0x0c68		VoC_sub16_rr(REG3,REG5,REG4,DEFAULT)	|	VoC_xor16_rr(REG5,REG4,DEFAULT)
0x0712D614,	//0x0c6a		VoC_add16_rd(REG2,REG2,0x482c)(lo)	|	VoC_lw16_sd(REG4,0x0,IN_PARALLEL)
0x5C93482C,	//0x0c6c		VoC_sw16inc_p(REG3,REG1,DEFAULT)	|	VoC_add16_rd(REG2,REG2,0x482c)(hi)
0x3183C313,	//0x0c6e		VoC_bez16_r(CS_decode_residual_total_coeff,REG3)(lo)	|	VoC_sub16_rr(REG3,REG4,REG2,IN_PARALLEL)
0x2E190C97,	//0x0c70		VoC_loop_r(1,REG3)(lo)	|	VoC_bez16_r(CS_decode_residual_total_coeff,REG3)(hi)
0xE2400C96,	//0x0c72		VoC_lbinc_p(REG0)	|	VoC_loop_r(1,REG3)(hi)
0xE00262C1,	//0x0c74		VoC_lw16i_short(REG2,0x0,IN_PARALLEL)	|	VoC_rb_i(REG5,0x10,DEFAULT)
0x0ADA2B80,	//0x0c76		VoC_jal(CS_log_tab)
0x60C5E240,	//0x0c78		VoC_movreg16(REG5,REG6,DEFAULT)	|	VoC_lbinc_p(REG0)
0x488BC2B4,	//0x0c7a		VoC_blt16_rd(suffix_length_prefix_15_done,REG3,0x4874)(lo)	|	VoC_sub16_rr(REG4,REG2,REG6,IN_PARALLEL)
0xF1854874,	//0x0c7c		VoC_lw16i_short(REG5,0xc,DEFAULT)	|	VoC_blt16_rd(suffix_length_prefix_15_done,REG3,0x4874)(hi)
0x48744033,	//0x0c7e		VoC_be16_rd(suffix_length_prefix_15_done,REG3,0x4874)
0xEFF65F84,	//0x0c80		VoC_lw16i_short(REG6,0xffffffff,IN_PARALLEL)	|	VoC_pop16(REG4,DEFAULT)
0x0CFD2B00,	//0x0c82		VoC_jump_lg(CS_decode_residual_exit)
		//0x0c84		suffix_length_prefix_15_done
0xFE636328,	//0x0c84		VoC_shru16_rr(REG3,REG4,IN_PARALLEL)	|	VoC_rbinc_r(REG4,REG5,DEFAULT)
0xE01440E3,	//0x0c86		VoC_lw16i_short(REG4,0x1,IN_PARALLEL)	|	VoC_add16_rr(REG3,REG3,REG4,DEFAULT)
0x482D071D,	//0x0c88		VoC_add16_rd(REG5,REG3,0x482d)
0x02470737,	//0x0c8a		VoC_add16_rd(REG7,REG6,0x247)
0xF90D641C,	//0x0c8c		VoC_shru16_ri(REG5,0x1,IN_PARALLEL)	|	VoC_and16_rr(REG4,REG3,DEFAULT)
0xE4A5C2A4,	//0x0c8e		VoC_xor16_rr(REG5,REG4,DEFAULT)	|	VoC_sub16_rr(REG4,REG2,REG4,DEFAULT)
0xD8774365,	//0x0c90		VoC_lw16_p(REG7,REG7,IN_PARALLEL)	|	VoC_sub16_rr(REG5,REG5,REG4,DEFAULT)
0x0C96349F,	//0x0c92		VoC_bngt16_rr(level_code_suffix_limit,REG3,REG7)
0x482C0736,	//0x0c94		VoC_add16_rd(REG6,REG6,0x482c)
		//0x0c96		level_code_suffix_limit
		//0x0c96		VoC_endloop1
0xF343DC95,	//0x0c96		VoC_lw16i_short(REG3,0x1a,DEFAULT)	|	VoC_sw16inc_p(REG5,REG1,DEFAULT)
		//0x0c97		CS_decode_residual_total_coeff
0xE0025614,	//0x0c98		VoC_lw16i_short(REG2,0x0,IN_PARALLEL)	|	VoC_lw16_sd(REG4,0x0,DEFAULT)
0x208C4194,	//0x0c9a		VoC_be16_rd(zeros_left_end,REG4,0x208c)
0x482C07A4,	//0x0c9c		VoC_sub16_rd(REG4,REG4,0x482c)
0x409BF005,	//0x0c9e		VoC_be16_rd(N_is_CHROMA_DC_BLOCK_INDEX,REG3,0x208b)(lo)	|	VoC_lw16i_short(REG5,0x0,DEFAULT)
0x7067208B,	//0x0ca0		VoC_lw16i_short(REG7,0x3,DEFAULT)	|	VoC_be16_rd(N_is_CHROMA_DC_BLOCK_INDEX,REG3,0x208b)(hi)
0x0A82E036,	//0x0ca2		VoC_lw16i(REG2,0x553a)(lo)	|	VoC_lw16i_short(REG6,0x3,IN_PARALLEL)
0xC0A2553A,	//0x0ca4		VoC_add16_rr(REG2,REG2,REG4,DEFAULT)	|	VoC_lw16i(REG2,0x553a)(hi)
0x545E0A81,	//0x0ca6		VoC_lw16i(REG1,0x545e)
0xE5C98051,	//0x0ca8		VoC_jump(Get_Total_Zeros)	|	VoC_add16_rp(REG1,REG1,REG2,DEFAULT)
		//0x0caa		N_is_CHROMA_DC_BLOCK_INDEX
0xE0167067,	//0x0caa		VoC_lw16i_short(REG6,0x1,IN_PARALLEL)	|	VoC_lw16i_short(REG7,0x3,DEFAULT)
0x483D0822,	//0x0cac		VoC_mult16_rd(REG2,REG4,0x483d)
0x53B60A81,	//0x0cae		VoC_lw16i(REG1,0x53b6)
0xFFC04051,	//0x0cb0		VoC_NAD(IN_PARALLEL)	|	VoC_add16_rr(REG1,REG1,REG2,DEFAULT)
		//0x0cb2		Get_Total_Zeros
0x0BB62B80,	//0x0cb2		VoC_jal(CS_GET_VLC)
		//0x0cb4		zeros_left_end
0x07A4DF84,	//0x0cb4		VoC_sub16_rd(REG4,REG4,0x482c)(lo)	|	VoC_pop16(REG4,DEFAULT)
0xC115482C,	//0x0cb6		VoC_add16_rr(REG5,REG4,REG2,DEFAULT)	|	VoC_sub16_rd(REG4,REG4,0x482c)(hi)
0x208A2005,	//0x0cb8		VoC_lw16d_set_inc(REG1,0x208a,0x1)
0x208D072E,	//0x0cba		VoC_add16_rd(REG6,REG5,0x208d)
0x207A1807,	//0x0cbc		VoC_lw16i_set_inc(REG3,0x207a,0x1)
0xE1078071,	//0x0cbe		VoC_movreg16(REG7,ACC0_LO,DEFAULT)	|	VoC_add16_rp(REG1,REG1,REG6,DEFAULT)
0xD8B681F7,	//0x0cc0		VoC_lw16inc_p(REG6,REG3,DEFAULT)	|	VoC_add16_rp(REG7,REG7,REG6,DEFAULT)
0x208E6C04,	//0x0cc2		VoC_bez16_d(CS_decode_residual_N_GT24,0x208e)
0xFFC099BB,	//0x0cc4		VoC_NOP	|	VoC_multf32_rp(REG67,REG6,REG7,DEFAULT)
		//0x0cc6		CS_decode_residual_N_GT24
0xDC16E047,	//0x0cc6		VoC_sw16_p(REG6,REG1,DEFAULT)	|	VoC_movreg16(REG7,REG2,DEFAULT)
0x0CF93184,	//0x0cc8		VoC_bez16_r(CS_decode_residual_N_GT24_end,REG4)
0x0CF82E21,	//0x0cca		VoC_loop_r(1,REG4)
0x5FC5DFC3,	//0x0ccc		VoC_push16(REG5,DEFAULT)	|	VoC_push16(REG3,DEFAULT)
0xDFC7E002,	//0x0cce		VoC_push16(REG7,DEFAULT)	|	VoC_lw16i_short(REG2,0x0,IN_PARALLEL)
0x0CE33147,	//0x0cd0		VoC_bngtz16_r(CS_decode_residual_zeros_left_2ed_end,REG7)
0x0A81F026,	//0x0cd2		VoC_lw16i(REG1,0x53ce)(lo)	|	VoC_lw16i_short(REG6,0x1,DEFAULT)
0xC3F553CE,	//0x0cd4		VoC_sub16_rr(REG5,REG7,REG6,DEFAULT)	|	VoC_lw16i(REG1,0x53ce)(hi)
0xC069F9ED,	//0x0cd6		VoC_add16_rr(REG1,REG1,REG5,DEFAULT)	|	VoC_shru16_ri(REG5,0xfffffffd,DEFAULT)
0x4837F065,	//0x0cd8		VoC_blt16_rd(CS_decode_residual_zeros_left_2ed_lt_7,REG7,0x4831)(lo)	|	VoC_lw16i_short(REG5,0x3,DEFAULT)
0x0A814831,	//0x0cda		VoC_lw16i(REG1,0x53fe)(lo)	|	VoC_blt16_rd(CS_decode_residual_zeros_left_2ed_lt_7,REG7,0x4831)(hi)
0x70C553FE,	//0x0cdc		VoC_lw16i_short(REG5,0x6,DEFAULT)	|	VoC_lw16i(REG1,0x53fe)(hi)
0xE0A7E026,	//0x0cde		VoC_movreg16(REG7,REG5,DEFAULT)	|	VoC_lw16i_short(REG6,0x2,IN_PARALLEL)
		//0x0cdf		CS_decode_residual_zeros_left_2ed_lt_7
0x2B80F005,	//0x0ce0		VoC_jal(CS_GET_VLC)(lo)	|	VoC_lw16i_short(REG5,0x0,DEFAULT)
0xDF870BB6,	//0x0ce2		VoC_pop16(REG7,DEFAULT)	|	VoC_jal(CS_GET_VLC)(hi)
		//0x0ce3		CS_decode_residual_zeros_left_2ed_end
0xDF8543D7,	//0x0ce4		VoC_pop16(REG5,IN_PARALLEL)	|	VoC_sub16_rr(REG7,REG7,REG2,DEFAULT)
0x482C0714,	//0x0ce6		VoC_add16_rd(REG4,REG2,0x482c)
0x2005C365,	//0x0ce8		VoC_lw16d_set_inc(REG1,0x208a,0x1)(lo)	|	VoC_sub16_rr(REG5,REG5,REG4,DEFAULT)
0x072E208A,	//0x0cea		VoC_add16_rd(REG6,REG5,0x208d)(lo)	|	VoC_lw16d_set_inc(REG1,0x208a,0x1)(hi)
0xE103208D,	//0x0cec		VoC_movreg16(REG3,ACC0_LO,DEFAULT)	|	VoC_add16_rd(REG6,REG5,0x208d)(hi)
0x80F68071,	//0x0cee		VoC_add16_rp(REG6,REG3,REG6,DEFAULT)	|	VoC_add16_rp(REG1,REG1,REG6,DEFAULT)
0xDFC5DF83,	//0x0cf0		VoC_push16(REG5,DEFAULT)	|	VoC_pop16(REG3,DEFAULT)
0x6C04D8B4,	//0x0cf2		VoC_bez16_d(CS_decode_residual_N_GT24_2,0x208e)(lo)	|	VoC_lw16inc_p(REG4,REG3,DEFAULT)
0x9932208E,	//0x0cf4		VoC_multf32_rp(REG45,REG4,REG6,DEFAULT)	|	VoC_bez16_d(CS_decode_residual_N_GT24_2,0x208e)(hi)
0xDF85FFC0,	//0x0cf6		VoC_pop16(REG5,DEFAULT)	|	VoC_NOP
		//0x0cf7		CS_decode_residual_N_GT24_2
		//0x0cf8		VoC_endloop1
0xF006DC14,	//0x0cf8		VoC_lw16i_short(REG6,0x0,DEFAULT)	|	VoC_sw16_p(REG4,REG1,DEFAULT)
		//0x0cf9		CS_decode_residual_N_GT24_end
0x0CFD3247,	//0x0cfa		VoC_bnltz16_r(CS_decode_residual_exit,REG7)
0xDFA9F7E6,	//0x0cfc		VoC_pop16(RA,DEFAULT)	|	VoC_lw16i_short(REG6,0xffffffff,DEFAULT)
		//0x0cfd		CS_decode_residual_exit
0xE580F019,	//0x0cfe		VoC_return	|	VoC_lw16i_short(FORMAT32,0x0,DEFAULT)
		//0x0d00		CS_decode_mb_cbp
0x0A8FDFE9,	//0x0d00		VoC_lw16i(RL7_HI,0x48f2)(lo)	|	VoC_push16(RA,DEFAULT)
0x0A8E48F2,	//0x0d02		VoC_lw16i(RL7_LO,0x48d2)(lo)	|	VoC_lw16i(RL7_HI,0x48f2)(hi)
0xFFC048D2,	//0x0d04		VoC_NAD	|	VoC_lw16i(RL7_LO,0x48d2)(hi)
		//0x0d06		cavlc_IS_INTERLACED_end
0x7F000AC5,	//0x0d06		VoC_lw16i(REG5,0xff00)
0x0AE92B80,	//0x0d08		VoC_jal(CS_get_ue_se_golomb)
0x4832382E,	//0x0d0a		VoC_bgt16_rd(dquant_error,REG6,0x4832)
0x34AEF4C5,	//0x0d0c		VoC_bngt16_rr(dquant_ok,REG5,REG6)(lo)	|	VoC_lw16i_short(REG5,0xffffffe6,DEFAULT)
0xDFA90D12,	//0x0d0e		VoC_pop16(RA,DEFAULT)	|	VoC_bngt16_rr(dquant_ok,REG5,REG6)(hi)
		//0x0d0f		dquant_error
0xE580F7E6,	//0x0d10		VoC_return	|	VoC_lw16i_short(REG6,0xffffffff,DEFAULT)
		//0x0d12		dquant_ok
0x02180736,	//0x0d12		VoC_add16_rd(REG6,REG6,0x218)
0x00340A84,	//0x0d14		VoC_lw16i(REG4,0x34)
0x00330A85,	//0x0d16		VoC_lw16i(REG5,0x33)
0x3206C1A3,	//0x0d18		VoC_bltz16_r(qscale_ltz,REG6)(lo)	|	VoC_add16_rr(REG3,REG6,REG4,DEFAULT)
0xE0C30D1F,	//0x0d1a		VoC_movreg16(REG3,REG6,DEFAULT)	|	VoC_bltz16_r(qscale_ltz,REG6)(hi)
0x0D1F34B5,	//0x0d1c		VoC_bngt16_rr(qscale_ltz,REG6,REG5)
0xF004C3A3,	//0x0d1e		VoC_lw16i_short(REG4,0x0,DEFAULT)	|	VoC_sub16_rr(REG3,REG6,REG4,DEFAULT)
		//0x0d1f		qscale_ltz
0x02181503,	//0x0d20		VoC_sw16_d(REG3,0x218)
0x0B7E2B80,	//0x0d22		VoC_jal(CS_get_chroma_qp)
0x02281502,	//0x0d24		VoC_sw16_d(REG2,0x228)
0xFFC07024,	//0x0d26		VoC_NAD(IN_PARALLEL)	|	VoC_lw16i_short(REG4,0x1,DEFAULT)
0x0B7E2B80,	//0x0d28		VoC_jal(CS_get_chroma_qp)
0x02291502,	//0x0d2a		VoC_sw16_d(REG2,0x229)
0xE0255F47,	//0x0d2c		VoC_lw16i_short(REG5,0x2,IN_PARALLEL)	|	VoC_push32(RL7,DEFAULT)
0x3185E43D,	//0x0d2e		VoC_bez16_r(CS_decode_mb_cbp_IS_INTRA16x16,REG5)(lo)	|	VoC_and16_rr(REG5,REG7,DEFAULT)
0x18060D8E,	//0x0d30		VoC_lw16i_set_inc(REG2,0x24e,0x1)(lo)	|	VoC_bez16_r(CS_decode_mb_cbp_IS_INTRA16x16,REG5)(hi)
0x0A83024E,	//0x0d32		VoC_lw16i(REG3,0x19)(lo)	|	VoC_lw16i_set_inc(REG2,0x24e,0x1)(hi)
0x0A860019,	//0x0d34		VoC_lw16i(REG6,0x10)(lo)	|	VoC_lw16i(REG3,0x19)(hi)
0x08360010,	//0x0d36		VoC_mult16_rd(REG6,REG6,0x218)(lo)	|	VoC_lw16i(REG6,0x10)(hi)
0x0A810218,	//0x0d38		VoC_lw16i(REG1,0x49e2)(lo)	|	VoC_mult16_rd(REG6,REG6,0x218)(hi)
0xC18E49E2,	//0x0d3a		VoC_add16_rr(REG6,REG6,REG1,DEFAULT)	|	VoC_lw16i(REG1,0x49e2)(hi)
0xDF47E0C8,	//0x0d3c		VoC_push32(RL7,DEFAULT)	|	VoC_movreg16(ACC0_LO,REG6,DEFAULT)
0xE10661CF,	//0x0d3e		VoC_lw16i_short(REG6,0x10,IN_PARALLEL)	|	VoC_movreg16(RL7_HI,RL7_LO,DEFAULT)
0x0BD62B80,	//0x0d40		VoC_jal(CS_decode_residual)
0x3186DF07,	//0x0d42		VoC_bez16_r(CS_decode_mb_cb_IS_INTRA16x16_go_100,REG6)(lo)	|	VoC_pop32(RL7,DEFAULT)
0x2B000D47,	//0x0d44		VoC_jump_lg(CS_decode_mb_cbp_0x20_end)(lo)	|	VoC_bez16_r(CS_decode_mb_cb_IS_INTRA16x16_go_100,REG6)(hi)
0xF1E50E38,	//0x0d46		VoC_lw16i_short(REG5,0xf,DEFAULT)	|	VoC_jump_lg(CS_decode_mb_cbp_0x20_end)(hi)
		//0x0d47		CS_decode_mb_cb_IS_INTRA16x16_go_100
0x022A2805,	//0x0d48		VoC_and16_rd(REG5,0x22a)
0x3185FF44,	//0x0d4a		VoC_bez16_r(CS_decode_mb_cb_cbp_15_else,REG5)(lo)	|	VoC_lw32z(ACC0,DEFAULT)
0x0A860D7C,	//0x0d4c		VoC_lw16i(REG6,0x10)(lo)	|	VoC_bez16_r(CS_decode_mb_cb_cbp_15_else,REG5)(hi)
0x08360010,	//0x0d4e		VoC_mult16_rd(REG6,REG6,0x218)(lo)	|	VoC_lw16i(REG6,0x10)(hi)
0x0A810218,	//0x0d50		VoC_lw16i(REG1,0x49e2)(lo)	|	VoC_mult16_rd(REG6,REG6,0x218)(hi)
0xC18E49E2,	//0x0d52		VoC_add16_rr(REG6,REG6,REG1,DEFAULT)	|	VoC_lw16i(REG1,0x49e2)(hi)
0x7006E0C8,	//0x0d54		VoC_lw16i_short(REG6,0x0,DEFAULT)	|	VoC_movreg16(ACC0_LO,REG6,DEFAULT)
0xC9DFE017,	//0x0d56		VoC_add32_rr(RL7,RL7,REG67,DEFAULT)	|	VoC_lw16i_short(REG7,0x1,IN_PARALLEL)
0x00001806,	//0x0d58		VoC_lw16i_set_inc(REG2,0x0,0x1)
		//0x0d5a		CS_decode_mb_cb_cbp_15_i8x8_loop_start
0x348AF081,	//0x0d5a		VoC_bngt16_rr(CS_decode_mb_cb_cbp_15_i8x8_loop_end,REG1,REG2)(lo)	|	VoC_lw16i_short(REG1,0x4,DEFAULT)
0x18070D7A,	//0x0d5c		VoC_lw16i_set_inc(REG3,0x0,0x1)(lo)	|	VoC_bngt16_rr(CS_decode_mb_cb_cbp_15_i8x8_loop_end,REG1,REG2)(hi)
0xF0810000,	//0x0d5e		VoC_lw16i_short(REG1,0x4,DEFAULT)	|	VoC_lw16i_set_inc(REG3,0x0,0x1)(hi)
		//0x0d5f		CS_decode_mb_cb_cbp_i4x4_loop_start
0x0D78348B,	//0x0d60		VoC_bngt16_rr(CS_decode_mb_cb_cbp_i4x4_loop,REG1,REG3)
0xF9F2DF41,	//0x0d62		VoC_shru16_ri(REG2,0xfffffffe,DEFAULT)	|	VoC_push32(REG23,DEFAULT)
0x1806C0D3,	//0x0d64		VoC_lw16i_set_inc(REG2,0x24e,0x1)(lo)	|	VoC_add16_rr(REG3,REG3,REG2,DEFAULT)
0x6064024E,	//0x0d66		VoC_movreg16(REG4,REG3,DEFAULT)	|	VoC_lw16i_set_inc(REG2,0x24e,0x1)(hi)
0x79E4E0F6,	//0x0d68		VoC_shru16_ri(REG4,0xfffffffc,DEFAULT)	|	VoC_lw16i_short(REG6,0xf,IN_PARALLEL)
0x40A2DF47,	//0x0d6a		VoC_add16_rr(REG2,REG2,REG4,DEFAULT)	|	VoC_push32(RL7,IN_PARALLEL)
0x2B80DF44,	//0x0d6c		VoC_jal(CS_decode_residual)(lo)	|	VoC_push32(ACC0,IN_PARALLEL)
0xDF040BD6,	//0x0d6e		VoC_pop32(ACC0,DEFAULT)	|	VoC_jal(CS_decode_residual)(hi)
0xDF01DF07,	//0x0d70		VoC_pop32(REG23,DEFAULT)	|	VoC_pop32(RL7,DEFAULT)
0x0D763186,	//0x0d72		VoC_bez16_r(CS_decode_mb_cb_cbp_chroma_idx_go_100,REG6)
0x0E382B00,	//0x0d74		VoC_jump_lg(CS_decode_mb_cbp_0x20_end)
		//0x0d76		CS_decode_mb_cb_cbp_chroma_idx_go_100
0xE5E8DE18,	//0x0d76		VoC_jump(CS_decode_mb_cb_cbp_i4x4_loop_start)	|	VoC_inc_p(REG3,DEFAULT)
		//0x0d78		CS_decode_mb_cb_cbp_i4x4_loop
0xE5E1DE10,	//0x0d78		VoC_jump(CS_decode_mb_cb_cbp_15_i8x8_loop_start)	|	VoC_inc_p(REG2,DEFAULT)
		//0x0d7a		CS_decode_mb_cb_cbp_15_i8x8_loop_end
0x0DD22B00,	//0x0d7a		VoC_jump_lg(CS_decode_mb_cbp_IS_INTRA16x16_end)
		//0x0d7c		CS_decode_mb_cb_cbp_15_else
0x03DA1584,	//0x0d7c		VoC_sw32_d(ACC0,0x3da)
0x03DC1584,	//0x0d7e		VoC_sw32_d(ACC0,0x3dc)
0x03E21584,	//0x0d80		VoC_sw32_d(ACC0,0x3e2)
0x03E41584,	//0x0d82		VoC_sw32_d(ACC0,0x3e4)
0x03EA1584,	//0x0d84		VoC_sw32_d(ACC0,0x3ea)
0x03EC1584,	//0x0d86		VoC_sw32_d(ACC0,0x3ec)
0x03F21584,	//0x0d88		VoC_sw32_d(ACC0,0x3f2)
0x03F41584,	//0x0d8a		VoC_sw32_d(ACC0,0x3f4)
0x0DD22B00,	//0x0d8c		VoC_jump_lg(CS_decode_mb_cbp_IS_INTRA16x16_end)
		//0x0d8e		CS_decode_mb_cbp_IS_INTRA16x16
0x00001806,	//0x0d8e		VoC_lw16i_set_inc(REG2,0x0,0x1)
		//0x0d90		CS_decode_mb_cb_i8x8_loop_start
0x348AF081,	//0x0d90		VoC_bngt16_rr(CS_decode_mb_cbp_IS_INTRA16x16_end,REG1,REG2)(lo)	|	VoC_lw16i_short(REG1,0x4,DEFAULT)
0x70030DD2,	//0x0d92		VoC_lw16i_short(REG3,0x0,DEFAULT)	|	VoC_bngt16_rr(CS_decode_mb_cbp_IS_INTRA16x16_end,REG1,REG2)(hi)
0xC2D3E011,	//0x0d94		VoC_sub16_rr(REG3,REG3,REG2,DEFAULT)	|	VoC_lw16i_short(REG1,0x1,IN_PARALLEL)
0x2801FE59,	//0x0d96		VoC_and16_rd(REG1,0x22a)(lo)	|	VoC_shru16_rr(REG1,REG3,DEFAULT)
0x3181022A,	//0x0d98		VoC_bez16_r(CS_decode_mb_cb_i8x8_loop_else,REG1)(lo)	|	VoC_and16_rd(REG1,0x22a)(hi)
0x18070DC2,	//0x0d9a		VoC_lw16i_set_inc(REG3,0x0,0x1)(lo)	|	VoC_bez16_r(CS_decode_mb_cb_i8x8_loop_else,REG1)(hi)
0xF0810000,	//0x0d9c		VoC_lw16i_short(REG1,0x4,DEFAULT)	|	VoC_lw16i_set_inc(REG3,0x0,0x1)(hi)
		//0x0d9d		CS_decode_mb_cb_i4x4_loop_start
0x0DC0348B,	//0x0d9e		VoC_bngt16_rr(CS_decode_mb_cb_i4x4_loop,REG1,REG3)
0xF9F2DF41,	//0x0da0		VoC_shru16_ri(REG2,0xfffffffe,DEFAULT)	|	VoC_push32(REG23,DEFAULT)
0x1806C0D3,	//0x0da2		VoC_lw16i_set_inc(REG2,0x24e,0x1)(lo)	|	VoC_add16_rr(REG3,REG3,REG2,DEFAULT)
0xE064024E,	//0x0da4		VoC_movreg16(REG4,REG3,DEFAULT)	|	VoC_lw16i_set_inc(REG2,0x24e,0x1)(hi)
0x40A2F9E4,	//0x0da6		VoC_add16_rr(REG2,REG2,REG4,DEFAULT)	|	VoC_shru16_ri(REG4,0xfffffffc,DEFAULT)
0x1607DFC7,	//0x0da8		VoC_and16_ri(REG7,0x7)(lo)	|	VoC_push16(REG7,IN_PARALLEL)
0x0A860007,	//0x0daa		VoC_lw16i(REG6,0x10)(lo)	|	VoC_and16_ri(REG7,0x7)(hi)
0x08360010,	//0x0dac		VoC_mult16_rd(REG6,REG6,0x218)(lo)	|	VoC_lw16i(REG6,0x10)(hi)
0x0A810218,	//0x0dae		VoC_lw16i(REG1,0x49e2)(lo)	|	VoC_mult16_rd(REG6,REG6,0x218)(hi)
0xC07149E2,	//0x0db0		VoC_add16_rr(REG1,REG1,REG6,DEFAULT)	|	VoC_lw16i(REG1,0x49e2)(hi)
0xF206E028,	//0x0db2		VoC_lw16i_short(REG6,0x10,DEFAULT)	|	VoC_movreg16(ACC0_LO,REG1,DEFAULT)
0x0BD62B80,	//0x0db4		VoC_jal(CS_decode_residual)
0xDF015F87,	//0x0db6		VoC_pop32(REG23,IN_PARALLEL)	|	VoC_pop16(REG7,DEFAULT)
0x3186F033,	//0x0db8		VoC_bez16_r(CS_decode_mb_cb_chroma_idx_go_100,REG6)(lo)	|	VoC_lw16i_short(INC3,0x1,DEFAULT)
0x2B000DBD,	//0x0dba		VoC_jump_lg(CS_decode_mb_cbp_0x20_end)(lo)	|	VoC_bez16_r(CS_decode_mb_cb_chroma_idx_go_100,REG6)(hi)
0xDE180E38,	//0x0dbc		VoC_inc_p(REG3,DEFAULT)	|	VoC_jump_lg(CS_decode_mb_cbp_0x20_end)(hi)
		//0x0dbd		CS_decode_mb_cb_chroma_idx_go_100
0x0D9D2B00,	//0x0dbe		VoC_jump_lg(CS_decode_mb_cb_i4x4_loop_start)
		//0x0dc0		CS_decode_mb_cb_i4x4_loop
0xFFC065CE,	//0x0dc0		VoC_NAD(IN_PARALLEL)	|	VoC_jump(CS_decode_mb_cb_i8x8_loop_done)
		//0x0dc2		CS_decode_mb_cb_i8x8_loop_else
0xF6457F44,	//0x0dc2		VoC_movreg16(REG5,REG2,IN_PARALLEL)	|	VoC_lw32z(ACC0,DEFAULT)
0x03CE1805,	//0x0dc4		VoC_lw16i_set_inc(REG1,0x3ce,0x1)
0x072CF9F5,	//0x0dc6		VoC_add16_rd(REG4,REG5,0x248)(lo)	|	VoC_shru16_ri(REG5,0xfffffffe,DEFAULT)
0xF1050248,	//0x0dc8		VoC_lw16i_short(REG5,0x8,DEFAULT)	|	VoC_add16_rd(REG4,REG5,0x248)(hi)
0xC06C8061,	//0x0dca		VoC_add16_rr(REG4,REG1,REG5,DEFAULT)	|	VoC_add16_rp(REG1,REG1,REG4,DEFAULT)
0xDDA4DD8C,	//0x0dcc		VoC_sw32_p(ACC0,REG4,DEFAULT)	|	VoC_sw32_p(ACC0,REG1,DEFAULT)
		//0x0dce		CS_decode_mb_cb_i8x8_loop_done
0x2B00DE10,	//0x0dce		VoC_jump_lg(CS_decode_mb_cb_i8x8_loop_start)(lo)	|	VoC_inc_p(REG2,DEFAULT)
0xFFC00D90,	//0x0dd0		VoC_NAD	|	VoC_jump_lg(CS_decode_mb_cb_i8x8_loop_start)(hi)
		//0x0dd2		CS_decode_mb_cbp_IS_INTRA16x16_end
0x00300A85,	//0x0dd2		VoC_lw16i(REG5,0x30)
0x022A2805,	//0x0dd4		VoC_and16_rd(REG5,0x22a)
0x0DF03185,	//0x0dd6		VoC_bez16_r(CS_decode_mb_cbp_0x30,REG5)
0x00001807,	//0x0dd8		VoC_lw16i_set_inc(REG3,0x0,0x1)
		//0x0dda		CS_decode_mb_cb_chroma_idx_loop_start
0x348BF041,	//0x0dda		VoC_bngt16_rr(CS_decode_mb_cbp_0x30,REG1,REG3)(lo)	|	VoC_lw16i_short(REG1,0x2,DEFAULT)
0xDFC30DF0,	//0x0ddc		VoC_push16(REG3,DEFAULT)	|	VoC_bngt16_rr(CS_decode_mb_cbp_0x30,REG1,REG3)(hi)
0x1806F9D3,	//0x0dde		VoC_lw16i_set_inc(REG2,0x34e,0x1)(lo)	|	VoC_shru16_ri(REG3,0xfffffffa,DEFAULT)
0x409A034E,	//0x0de0		VoC_add16_rr(REG2,REG2,REG3,DEFAULT)	|	VoC_lw16i_set_inc(REG2,0x34e,0x1)(hi)
0x0A8FE1A3,	//0x0de2		VoC_lw16i(RL7_HI,0x4902)(lo)	|	VoC_lw16i_short(REG3,0x1a,IN_PARALLEL)
0x70864902,	//0x0de4		VoC_lw16i_short(REG6,0x4,DEFAULT)	|	VoC_lw16i(RL7_HI,0x4902)(hi)
0x2B80FF44,	//0x0de6		VoC_jal(CS_decode_residual)(lo)	|	VoC_lw32z(ACC0,IN_PARALLEL)
0xDF830BD6,	//0x0de8		VoC_pop16(REG3,DEFAULT)	|	VoC_jal(CS_decode_residual)(hi)
0x0DEE3186,	//0x0dea		VoC_bez16_r(CS_decode_mb_cb_chroma_idx_go,REG6)
0x0E382B00,	//0x0dec		VoC_jump_lg(CS_decode_mb_cbp_0x20_end)
		//0x0dee		CS_decode_mb_cb_chroma_idx_go
0xE5EBDE18,	//0x0dee		VoC_jump(CS_decode_mb_cb_chroma_idx_loop_start)	|	VoC_inc_p(REG3,DEFAULT)
		//0x0df0		CS_decode_mb_cbp_0x30
0x0A85DF07,	//0x0df0		VoC_lw16i(REG5,0x20)(lo)	|	VoC_pop32(RL7,DEFAULT)
0x28050020,	//0x0df2		VoC_and16_rd(REG5,0x22a)(lo)	|	VoC_lw16i(REG5,0x20)(hi)
0xFF44022A,	//0x0df4		VoC_lw32z(ACC0,DEFAULT)	|	VoC_and16_rd(REG5,0x22a)(hi)
0x0E283185,	//0x0df6		VoC_bez16_r(CS_decode_mb_cbp_0x20,REG5)
0xE0177006,	//0x0df8		VoC_lw16i_short(REG7,0x1,IN_PARALLEL)	|	VoC_lw16i_short(REG6,0x0,DEFAULT)
0x1406C9DF,	//0x0dfa		VoC_lw16_d(REG6,0x228)(lo)	|	VoC_add32_rr(RL7,RL7,REG67,DEFAULT)
0x18060228,	//0x0dfc		VoC_lw16i_set_inc(REG2,0x0,0x1)(lo)	|	VoC_lw16_d(REG6,0x228)(hi)
0xF0410000,	//0x0dfe		VoC_lw16i_short(REG1,0x2,DEFAULT)	|	VoC_lw16i_set_inc(REG2,0x0,0x1)(hi)
		//0x0dff		CS_decode_mb_cb_chroma_idx_cbp_0x20_loop_start
0x0E38348A,	//0x0e00		VoC_bngt16_rr(CS_decode_mb_cbp_0x20_end,REG1,REG2)
0x00100A87,	//0x0e02		VoC_lw16i(REG7,0x10)
0x0A83C5F6,	//0x0e04		VoC_lw16i(REG3,0x49e2)(lo)	|	VoC_mult16_rr(REG6,REG7,REG6,DEFAULT)
0xC0F349E2,	//0x0e06		VoC_add16_rr(REG3,REG3,REG6,DEFAULT)	|	VoC_lw16i(REG3,0x49e2)(hi)
0x1807E068,	//0x0e08		VoC_lw16i_set_inc(REG3,0x0,0x1)(lo)	|	VoC_movreg16(ACC0_LO,REG3,DEFAULT)
0xF0810000,	//0x0e0a		VoC_lw16i_short(REG1,0x4,DEFAULT)	|	VoC_lw16i_set_inc(REG3,0x0,0x1)(hi)
		//0x0e0b		CS_decode_mb_cb_cbp_0x20_i4x4_loop_start
0x0E23348B,	//0x0e0c		VoC_bngt16_rr(CS_decode_mb_cb_0x20_i4x4_loop,REG1,REG3)
0xF9F2DF41,	//0x0e0e		VoC_shru16_ri(REG2,0xfffffffe,DEFAULT)	|	VoC_push32(REG23,DEFAULT)
0xF202C0D3,	//0x0e10		VoC_lw16i_short(REG2,0x10,DEFAULT)	|	VoC_add16_rr(REG3,REG3,REG2,DEFAULT)
0x1806C0D3,	//0x0e12		VoC_lw16i_set_inc(REG2,0x24e,0x1)(lo)	|	VoC_add16_rr(REG3,REG3,REG2,DEFAULT)
0xE064024E,	//0x0e14		VoC_movreg16(REG4,REG3,DEFAULT)	|	VoC_lw16i_set_inc(REG2,0x24e,0x1)(hi)
0xC0A2F9E4,	//0x0e16		VoC_add16_rr(REG2,REG2,REG4,DEFAULT)	|	VoC_shru16_ri(REG4,0xfffffffc,DEFAULT)
0xF1E6DF44,	//0x0e18		VoC_lw16i_short(REG6,0xf,DEFAULT)	|	VoC_push32(ACC0,DEFAULT)
0x0BD62B80,	//0x0e1a		VoC_jal(CS_decode_residual)
0xDF01DF04,	//0x0e1c		VoC_pop32(REG23,DEFAULT)	|	VoC_pop32(ACC0,DEFAULT)
0x0E213186,	//0x0e1e		VoC_bez16_r(CS_decode_mb_cb_chroma_idx_cbp_0x20_go,REG6)
0xDE18E5D8,	//0x0e20		VoC_inc_p(REG3,DEFAULT)	|	VoC_jump(CS_decode_mb_cbp_0x20_end)
		//0x0e21		CS_decode_mb_cb_chroma_idx_cbp_0x20_go
0xDE10E5E9,	//0x0e22		VoC_inc_p(REG2,DEFAULT)	|	VoC_jump(CS_decode_mb_cb_cbp_0x20_i4x4_loop_start)
		//0x0e23		CS_decode_mb_cb_0x20_i4x4_loop
0x02291406,	//0x0e24		VoC_lw16_d(REG6,0x229)
0x0DFF2B00,	//0x0e26		VoC_jump_lg(CS_decode_mb_cb_chroma_idx_cbp_0x20_loop_start)
		//0x0e28		CS_decode_mb_cbp_0x20
0x03D71508,	//0x0e28		VoC_sw16_d(ACC0_LO,0x3d7)
0x03D81508,	//0x0e2a		VoC_sw16_d(ACC0_LO,0x3d8)
0x03DF1508,	//0x0e2c		VoC_sw16_d(ACC0_LO,0x3df)
0x03E01508,	//0x0e2e		VoC_sw16_d(ACC0_LO,0x3e0)
0x03EF1508,	//0x0e30		VoC_sw16_d(ACC0_LO,0x3ef)
0x03F01508,	//0x0e32		VoC_sw16_d(ACC0_LO,0x3f0)
0x03F71508,	//0x0e34		VoC_sw16_d(ACC0_LO,0x3f7)
0x03F81508,	//0x0e36		VoC_sw16_d(ACC0_LO,0x3f8)
		//0x0e38		CS_decode_mb_cbp_0x20_end
0xFFC0DFA9,	//0x0e38		VoC_NOP	|	VoC_pop16(RA,DEFAULT)
0xD895E580,	//0x0e3a		VoC_lw16inc_p(REG5,REG1,DEFAULT)	|	VoC_return
		//0x0e3b		CS_mid_pred
0x58B7D8A6,	//0x0e3c		VoC_lw16inc_p(REG7,REG3,DEFAULT)	|	VoC_lw16inc_p(REG6,REG2,DEFAULT)
0x34AEF6C4,	//0x0e3e		VoC_bngt16_rr(mid_pred_100,REG5,REG6)(lo)	|	VoC_movreg16(REG4,REG6,IN_PARALLEL)
0x34BE0E48,	//0x0e40		VoC_bngt16_rr(mid_pred_end,REG7,REG6)(lo)	|	VoC_bngt16_rr(mid_pred_100,REG5,REG6)(hi)
0xE0E40E4E,	//0x0e42		VoC_movreg16(REG4,REG7,DEFAULT)	|	VoC_bngt16_rr(mid_pred_end,REG7,REG6)(hi)
0x0E4E34BD,	//0x0e44		VoC_bngt16_rr(mid_pred_end,REG7,REG5)
0xE5C7E0A4,	//0x0e46		VoC_jump(mid_pred_end)	|	VoC_movreg16(REG4,REG5,DEFAULT)
		//0x0e48		mid_pred_100
0x0E4E34B7,	//0x0e48		VoC_bngt16_rr(mid_pred_end,REG6,REG7)
0x34BDE0A4,	//0x0e4a		VoC_bngt16_rr(mid_pred_end,REG7,REG5)(lo)	|	VoC_movreg16(REG4,REG5,DEFAULT)
0xE0E40E4E,	//0x0e4c		VoC_movreg16(REG4,REG7,DEFAULT)	|	VoC_bngt16_rr(mid_pred_end,REG7,REG5)(hi)
		//0x0e4e		mid_pred_end
0xC0E4E580,	//0x0e4e		VoC_add16_rr(REG4,REG3,REG4,DEFAULT)	|	VoC_return
		//0x0e4f		CS_fetch_diagonal_mv
0x483D07A4,	//0x0e50		VoC_sub16_rd(REG4,REG4,0x483d)
0xF7C6C0A5,	//0x0e52		VoC_lw16i_short(REG6,0xfffffffe,DEFAULT)	|	VoC_add16_rr(REG5,REG2,REG4,DEFAULT)
0x352ED855,	//0x0e54		VoC_be16_rr(fetch_diagonal_mv_200,REG5,REG6)(lo)	|	VoC_lw16_p(REG5,REG5,DEFAULT)
0xF9FC0E5A,	//0x0e56		VoC_shru16_ri(REG4,0xffffffff,DEFAULT)	|	VoC_be16_rr(fetch_diagonal_mv_200,REG5,REG6)(hi)
0xE580C063,	//0x0e58		VoC_return	|	VoC_add16_rr(REG3,REG1,REG4,DEFAULT)
		//0x0e5a		fetch_diagonal_mv_200
0x483C079B,	//0x0e5a		VoC_sub16_rd(REG3,REG3,0x483c)
0xF9FBC09D,	//0x0e5c		VoC_shru16_ri(REG3,0xffffffff,DEFAULT)	|	VoC_add16_rr(REG5,REG2,REG3,DEFAULT)
0xC05B5855,	//0x0e5e		VoC_add16_rr(REG3,REG1,REG3,IN_PARALLEL)	|	VoC_lw16_p(REG5,REG5,DEFAULT)
0xFFC06580,	//0x0e60		VoC_NAD(IN_PARALLEL)	|	VoC_return
		//0x0e62		CS_pred_motion
0x0248071A,	//0x0e62		VoC_add16_rd(REG2,REG3,0x248)
0xF0075FE9,	//0x0e64		VoC_lw16i_short(INC3,0x1,IN_PARALLEL)	|	VoC_push16(RA,DEFAULT)
0x079ED823,	//0x0e66		VoC_sub16_rd(REG6,REG3,0x483d)(lo)	|	VoC_lw16_p(REG3,REG2,DEFAULT)
0x079F483D,	//0x0e68		VoC_sub16_rd(REG7,REG3,0x482c)(lo)	|	VoC_sub16_rd(REG6,REG3,0x483d)(hi)
0x1501482C,	//0x0e6a		VoC_sw16_d(REG1,0x60b6)(lo)	|	VoC_sub16_rd(REG7,REG3,0x482c)(hi)
0x180560B6,	//0x0e6c		VoC_lw16i_set_inc(REG1,0x43e,0x1)(lo)	|	VoC_sw16_d(REG1,0x60b6)(hi)
0x1806043E,	//0x0e6e		VoC_lw16i_set_inc(REG2,0x48e,0x1)(lo)	|	VoC_lw16i_set_inc(REG1,0x43e,0x1)(hi)
0x3185048E,	//0x0e70		VoC_bez16_r(fetch_diagonal_mv_100,REG5)(lo)	|	VoC_lw16i_set_inc(REG2,0x48e,0x1)(hi)
0x18050E78,	//0x0e72		VoC_lw16i_set_inc(REG1,0x4b6,0x1)(lo)	|	VoC_bez16_r(fetch_diagonal_mv_100,REG5)(hi)
0x180604B6,	//0x0e74		VoC_lw16i_set_inc(REG2,0x506,0x1)(lo)	|	VoC_lw16i_set_inc(REG1,0x4b6,0x1)(hi)
0xFFC00506,	//0x0e76		VoC_NAD	|	VoC_lw16i_set_inc(REG2,0x506,0x1)(hi)
		//0x0e78		fetch_diagonal_mv_100
0xC0B45FC4,	//0x0e78		VoC_add16_rr(REG4,REG2,REG6,IN_PARALLEL)	|	VoC_push16(REG4,DEFAULT)
0xFDFB40BD,	//0x0e7a		VoC_shru32_ri(REG67,0xffffffff,IN_PARALLEL)	|	VoC_add16_rr(REG5,REG2,REG7,DEFAULT)
0xD855D844,	//0x0e7c		VoC_lw16_p(REG5,REG5,DEFAULT)	|	VoC_lw16_p(REG4,REG4,DEFAULT)
0x60B71504,	//0x0e7e		VoC_sw16_d(REG4,0x60b7)
0x60B81505,	//0x0e80		VoC_sw16_d(REG5,0x60b8)
0xC075C07C,	//0x0e82		VoC_add16_rr(REG5,REG1,REG6,DEFAULT)	|	VoC_add16_rr(REG4,REG1,REG7,DEFAULT)
0x60B91504,	//0x0e84		VoC_sw16_d(REG4,0x60b9)
0x60BA1505,	//0x0e86		VoC_sw16_d(REG5,0x60ba)
0xFFC05F84,	//0x0e88		VoC_NAD(IN_PARALLEL)	|	VoC_pop16(REG4,DEFAULT)
0x0E4F2B80,	//0x0e8a		VoC_jal(CS_fetch_diagonal_mv)
0x60B61406,	//0x0e8c		VoC_lw16_d(REG6,0x60b6)
0x35B5F007,	//0x0e8e		VoC_bne16_rr(pred_motion_100,REG6,REG5)(lo)	|	VoC_lw16i_short(REG7,0x0,DEFAULT)
0xF0270E92,	//0x0e90		VoC_lw16i_short(REG7,0x1,DEFAULT)	|	VoC_bne16_rr(pred_motion_100,REG6,REG5)(hi)
		//0x0e92		pred_motion_100
0x60B74426,	//0x0e92		VoC_bne16_rd(pred_motion_200,REG6,0x60b7)
0x482C073F,	//0x0e94		VoC_add16_rd(REG7,REG7,0x482c)
		//0x0e96		pred_motion_200
0x60B84426,	//0x0e96		VoC_bne16_rd(pred_motion_300,REG6,0x60b8)
0x482C073F,	//0x0e98		VoC_add16_rd(REG7,REG7,0x482c)
		//0x0e9a		pred_motion_300
0x60B92005,	//0x0e9a		VoC_lw16d_set_inc(REG1,0x60b9,0x1)
0x60BA2006,	//0x0e9c		VoC_lw16d_set_inc(REG2,0x60ba,0x1)
0x482C3C8F,	//0x0e9e		VoC_bngt16_rd(pred_motion_match_count_100,REG7,0x482c)
0x0E3B2B80,	//0x0ea0		VoC_jal(CS_mid_pred)
0x2B80E08A,	//0x0ea2		VoC_jal(CS_mid_pred)(lo)	|	VoC_movreg16(ACC1_LO,REG4,DEFAULT)
0xE08B0E3B,	//0x0ea4		VoC_movreg16(ACC1_HI,REG4,DEFAULT)	|	VoC_jal(CS_mid_pred)(hi)
0xF7C4E5DA,	//0x0ea6		VoC_lw16i_short(REG4,0xfffffffe,DEFAULT)	|	VoC_jump(pred_motion_match_count_end)
		//0x0ea7		pred_motion_match_count_100
0x482C4497,	//0x0ea8		VoC_bne16_rd(pred_motion_match_count_200,REG7,0x482c)
0x412ED98D,	//0x0eaa		VoC_be16_rd(pred_motion_match_count_end,REG6,0x60b8)(lo)	|	VoC_lw32_p(ACC1,REG1,DEFAULT)
0xD99560B8,	//0x0eac		VoC_lw32_p(ACC1,REG2,DEFAULT)	|	VoC_be16_rd(pred_motion_match_count_end,REG6,0x60b8)(hi)
0x60B74116,	//0x0eae		VoC_be16_rd(pred_motion_match_count_end,REG6,0x60b7)
0xE5CFD99D,	//0x0eb0		VoC_jump(pred_motion_match_count_end)	|	VoC_lw32_p(ACC1,REG3,DEFAULT)
		//0x0eb2		pred_motion_match_count_200
0x60B74484,	//0x0eb2		VoC_bne16_rd(pred_motion_match_count_500,REG4,0x60b7)
0x0EBA35A5,	//0x0eb4		VoC_bne16_rr(pred_motion_match_count_500,REG4,REG5)
0x60B84024,	//0x0eb6		VoC_be16_rd(pred_motion_match_count_500,REG4,0x60b8)
0xE5C7D98D,	//0x0eb8		VoC_jump(pred_motion_match_count_end)	|	VoC_lw32_p(ACC1,REG1,DEFAULT)
		//0x0eba		pred_motion_match_count_500
0x0E3B2B80,	//0x0eba		VoC_jal(CS_mid_pred)
0x2B80E08A,	//0x0ebc		VoC_jal(CS_mid_pred)(lo)	|	VoC_movreg16(ACC1_LO,REG4,DEFAULT)
0xE08B0E3B,	//0x0ebe		VoC_movreg16(ACC1_HI,REG4,DEFAULT)	|	VoC_jal(CS_mid_pred)(hi)
		//0x0ec0		pred_motion_match_count_end
0xFFC0DFA9,	//0x0ec0		VoC_NOP	|	VoC_pop16(RA,DEFAULT)
0xFFC06580,	//0x0ec2		VoC_NAD(IN_PARALLEL)	|	VoC_return
		//0x0ec4		CS_pred_pskip_motion
0xEFE37F45,	//0x0ec4		VoC_lw16i_short(REG3,0xfffffffe,IN_PARALLEL)	|	VoC_lw32z(ACC1,DEFAULT)
0x0492412B,	//0x0ec6		VoC_be16_rd(CS_pred_pskip_motion_end,REG3,0x492)
0x0499411B,	//0x0ec8		VoC_be16_rd(CS_pred_pskip_motion_end,REG3,0x499)
0x04926E04,	//0x0eca		VoC_bnez16_d(CS_pred_pskip_motion_go,0x492)
0x0446780F,	//0x0ecc		VoC_bez32_d(CS_pred_pskip_motion_end,0x446)
		//0x0ece		CS_pred_pskip_motion_go
0x04996E04,	//0x0ece		VoC_bnez16_d(CS_pred_pskip_motion_break,0x499)
0x0454780B,	//0x0ed0		VoC_bez32_d(CS_pred_pskip_motion_end,0x454)
		//0x0ed2		CS_pred_pskip_motion_break
0xE0035FE9,	//0x0ed2		VoC_lw16i_short(REG3,0x0,IN_PARALLEL)	|	VoC_push16(RA,DEFAULT)
0xE0057084,	//0x0ed4		VoC_lw16i_short(REG5,0x0,IN_PARALLEL)	|	VoC_lw16i_short(REG4,0x4,DEFAULT)
0x2B80F001,	//0x0ed6		VoC_jal(CS_pred_motion)(lo)	|	VoC_lw16i_short(REG1,0x0,DEFAULT)
0xDFA90E62,	//0x0ed8		VoC_pop16(RA,DEFAULT)	|	VoC_jal(CS_pred_motion)(hi)
0xE580FFC0,	//0x0eda		VoC_return	|	VoC_NOP
		//0x0edb		CS_pred_pskip_motion_end
		//0x0edc		CS_write_back_motion_Part
0xFF454964,	//0x0edc		VoC_lw32z(ACC1,IN_PARALLEL)	|	VoC_add32_rr(ACC0,ACC1,ACC0,DEFAULT)
0x0233140A,	//0x0ede		VoC_lw16_d(ACC1_LO,0x233)
0xE0457DF5,	//0x0ee0		VoC_lw16i_short(REG5,0x4,IN_PARALLEL)	|	VoC_shru32_ri(ACC1,0xfffffffe,DEFAULT)
0xE53CE88B,	//0x0ee2		VoC_or32_rr(ACC0,RL7,DEFAULT)	|	VoC_loop_i_short(0x4,DEFAULT)
0x7FC31541,	//0x0ee4		VoC_sw16_d(REG1,0xffc3)
0x7FC21545,	//0x0ee6		VoC_sw16_d(REG5,0xffc2)
0x7FC415C4,	//0x0ee8		VoC_sw32_d(ACC0,0xffc4)
0x5E08DE80,	//0x0eea		VoC_inc_p(REG1,DEFAULT)	|	VoC_cfg(0x0)
0x1794C964,	//0x0eec		VoC_cfg_lg(0x8,)(lo)	|	VoC_add32_rr(ACC0,ACC1,ACC0,IN_PARALLEL)
		//0x0eed		VoC_endloop0
0x14010008,	//0x0eee		VoC_lw16_d(REG1,0x222)(lo)	|	VoC_cfg_lg(0x8,)(hi)
0x79F90222,	//0x0ef0		VoC_shru16_ri(REG1,0xffffffff,DEFAULT)	|	VoC_lw16_d(REG1,0x222)(hi)
0xC089C10C,	//0x0ef2		VoC_add16_rr(REG1,REG2,REG1,DEFAULT)	|	VoC_add16_rr(REG4,REG4,REG1,IN_PARALLEL)
0x0234070A,	//0x0ef4		VoC_add16_rd(REG2,REG1,0x234)
0xE0E558B8,	//0x0ef6		VoC_lw16i_short(REG5,0xe,IN_PARALLEL)	|	VoC_lw16inc_p(ACC0_LO,REG3,DEFAULT)
0xC0EB5839,	//0x0ef8		VoC_add16_rr(REG3,REG3,REG5,IN_PARALLEL)	|	VoC_lw16_p(ACC0_HI,REG3,DEFAULT)
0x5D8CFFC0,	//0x0efa		VoC_sw32_p(ACC0,REG1,DEFAULT)	|	VoC_NOP
0xD839D8B8,	//0x0efc		VoC_lw16_p(ACC0_HI,REG3,DEFAULT)	|	VoC_lw16inc_p(ACC0_LO,REG3,IN_PARALLEL)
0xDD94FFC0,	//0x0efe		VoC_sw32_p(ACC0,REG2,DEFAULT)	|	VoC_NOP
0xDFE9E580,	//0x0f00		VoC_push16(RA,DEFAULT)	|	VoC_return
		//0x0f01		CS_write_back_motion
0x30000A86,	//0x0f02		VoC_lw16i(REG6,0x3000)
0x1402FF41,	//0x0f04		VoC_lw16_d(REG2,0x223)(lo)	|	VoC_lw32z(REG23,DEFAULT)
0x0A150223,	//0x0f06		VoC_multf32_rd(ACC1,REG2,0x233)(lo)	|	VoC_lw16_d(REG2,0x223)(hi)
0x14020233,	//0x0f08		VoC_lw16_d(REG2,0x222)(lo)	|	VoC_multf32_rd(ACC1,REG2,0x233)(hi)
0x494D0222,	//0x0f0a		VoC_add32_rr(ACC1,ACC1,REG23,DEFAULT)	|	VoC_lw16_d(REG2,0x222)(hi)
0x0A8FFF47,	//0x0f0c		VoC_lw16i(RL7_HI,0x4000)(lo)	|	VoC_lw32z(RL7,IN_PARALLEL)
0x7DE54000,	//0x0f0e		VoC_shru32_ri(ACC1,0xfffffffc,DEFAULT)	|	VoC_lw16i(RL7_HI,0x4000)(hi)
0x643DF6C5,	//0x0f10		VoC_and16_rr(REG5,REG7,DEFAULT)	|	VoC_movreg16(REG5,REG6,IN_PARALLEL)
0x31C5F9F6,	//0x0f12		VoC_bnez16_r(write_back_motion_list0,REG5)(lo)	|	VoC_shru16_ri(REG6,0xfffffffe,IN_PARALLEL)
0xF9FA0F22,	//0x0f14		VoC_shru16_ri(REG2,0xffffffff,DEFAULT)	|	VoC_bnez16_r(write_back_motion_list0,REG5)(hi)
0x1807F7E4,	//0x0f16		VoC_lw16i_set_inc(REG3,0x5fa8,0x1)(lo)	|	VoC_lw16i_short(REG4,0xffffffff,DEFAULT)
0x40995FA8,	//0x0f18		VoC_add16_rr(REG1,REG2,REG3,DEFAULT)	|	VoC_lw16i_set_inc(REG3,0x5fa8,0x1)(hi)
0x070BF005,	//0x0f1a		VoC_add16_rd(REG3,REG1,0x234)(lo)	|	VoC_lw16i_short(INC1,0x1,IN_PARALLEL)
0xDC940234,	//0x0f1c		VoC_sw16inc_p(REG4,REG1,DEFAULT)	|	VoC_add16_rd(REG3,REG1,0x234)(hi)
0xDCB4DC94,	//0x0f1e		VoC_sw16inc_p(REG4,REG3,DEFAULT)	|	VoC_sw16inc_p(REG4,REG1,DEFAULT)
0xE5CFDCB4,	//0x0f20		VoC_jump(write_back_motion_list1)	|	VoC_sw16inc_p(REG4,REG3,DEFAULT)
		//0x0f22		write_back_motion_list0
0x408C1484,	//0x0f22		VoC_lw32_d(ACC0,0x408c)
0x022B1821,	//0x0f24		VoC_lw16i_set_inc(REG1,0x22b,0x8)
0x5FA80A82,	//0x0f26		VoC_lw16i(REG2,0x5fa8)
0x049A180B,	//0x0f28		VoC_lw16i_set_inc(REG3,0x49a,0x2)
0x203A0A84,	//0x0f2a		VoC_lw16i(REG4,0x203a)
0x2B80DF45,	//0x0f2c		VoC_jal(CS_write_back_motion_Part)(lo)	|	VoC_push32(ACC1,DEFAULT)
0xDF050EDC,	//0x0f2e		VoC_pop32(ACC1,DEFAULT)	|	VoC_jal(CS_write_back_motion_Part)(hi)
		//0x0f30		write_back_motion_list1
0x3186E43E,	//0x0f30		VoC_bez16_r(write_back_motion_list_end,REG6)(lo)	|	VoC_and16_rr(REG6,REG7,DEFAULT)
0x14840F40,	//0x0f32		VoC_lw32_d(ACC0,0x408e)(lo)	|	VoC_bez16_r(write_back_motion_list_end,REG6)(hi)
0x1821408E,	//0x0f34		VoC_lw16i_set_inc(REG1,0x267,0x8)(lo)	|	VoC_lw32_d(ACC0,0x408e)(hi)
0x0A820267,	//0x0f36		VoC_lw16i(REG2,0x6028)(lo)	|	VoC_lw16i_set_inc(REG1,0x267,0x8)(hi)
0x180B6028,	//0x0f38		VoC_lw16i_set_inc(REG3,0x512,0x2)(lo)	|	VoC_lw16i(REG2,0x6028)(hi)
0x0A840512,	//0x0f3a		VoC_lw16i(REG4,0x205a)(lo)	|	VoC_lw16i_set_inc(REG3,0x512,0x2)(hi)
0xFFC0205A,	//0x0f3c		VoC_NAD	|	VoC_lw16i(REG4,0x205a)(hi)
0x0EDC2B80,	//0x0f3e		VoC_jal(CS_write_back_motion_Part)
		//0x0f40		write_back_motion_list_end
0xDFC05F46,	//0x0f40		VoC_push16(REG0,IN_PARALLEL)	|	VoC_push32(RL6,DEFAULT)
0xF4045FC7,	//0x0f42		VoC_lw16i_short(WRAP0,0x0,IN_PARALLEL)	|	VoC_push16(REG7,DEFAULT)
0x134A2B80,	//0x0f44		VoC_jal(CS_MC_prepare)
0xF44C5F87,	//0x0f46		VoC_lw16i_short(WRAP0,0x9,IN_PARALLEL)	|	VoC_pop16(REG7,DEFAULT)
0xF0045F80,	//0x0f48		VoC_lw16i_short(INC0,0x1,IN_PARALLEL)	|	VoC_pop16(REG0,DEFAULT)
0xDFA95F06,	//0x0f4a		VoC_pop16(RA,IN_PARALLEL)	|	VoC_pop32(RL6,DEFAULT)
0xE580FFC0,	//0x0f4c		VoC_return	|	VoC_NOP
		//0x0f4e		CS_decode_mb_skip
0xE1047F43,	//0x0f4e		VoC_lw16i_short(REG4,0x10,IN_PARALLEL)	|	VoC_lw32z(REG67,DEFAULT)
0x03D61809,	//0x0f50		VoC_lw16i_set_inc(REG1,0x3d6,0x2)
0x022B0A22,	//0x0f52		VoC_multf32_rd(REG45,REG4,0x22b)
0xE0436A82,	//0x0f54		VoC_lw16i_short(REG3,0x4,IN_PARALLEL)	|	VoC_loop_i_short(0x14,DEFAULT)
		//0x0f56		VoC_endloop0
0x0912DDCB,	//0x0f56		VoC_add32_rd(REG45,REG45,0x4088)(lo)	|	VoC_sw32inc_p(REG67,REG1,DEFAULT)
0x0A824088,	//0x0f58		VoC_lw16i(REG2,0x1eb)(lo)	|	VoC_add32_rd(REG45,REG45,0x4088)(hi)
0x168501EB,	//0x0f5a		VoC_or16_ri(REG5,0x5000)(lo)	|	VoC_lw16i(REG2,0x1eb)(hi)
0x15425000,	//0x0f5c		VoC_sw16_d(REG2,0xffc3)(lo)	|	VoC_or16_ri(REG5,0x5000)(hi)
0x15437FC3,	//0x0f5e		VoC_sw16_d(REG3,0xffc2)(lo)	|	VoC_sw16_d(REG2,0xffc3)(hi)
0x15C27FC2,	//0x0f60		VoC_sw32_d(REG45,0xffc4)(lo)	|	VoC_sw16_d(REG3,0xffc2)(hi)
0xDE807FC4,	//0x0f62		VoC_cfg(0x0)	|	VoC_sw32_d(REG45,0xffc4)(hi)
0xDFE9FFC0,	//0x0f64		VoC_push16(RA,DEFAULT)	|	VoC_NOP
0x00081794,	//0x0f66		VoC_cfg_lg(0x8,)
0x02436C04,	//0x0f68		VoC_bez16_d(decode_mb_skip_MB_FIELD_End,0x243)
0x00801687,	//0x0f6a		VoC_or16_ri(REG7,0x80)
		//0x0f6c		decode_mb_skip_MB_FIELD_End
0x453CF064,	//0x0f6c		VoC_bne16_rd(decode_mb_skip_NOT_FF_B_TYPE,REG4,0x20f)(lo)	|	VoC_lw16i_short(REG4,0x3,DEFAULT)
0x1687020F,	//0x0f6e		VoC_or16_ri(REG7,0x5908)(lo)	|	VoC_bne16_rd(decode_mb_skip_NOT_FF_B_TYPE,REG4,0x20f)(hi)
0xFFC05908,	//0x0f70		VoC_NOP	|	VoC_or16_ri(REG7,0x5908)(hi)
0x02391507,	//0x0f72		VoC_sw16_d(REG7,0x239)
0x052B2B80,	//0x0f74		VoC_jal(CS_fill_caches)
0x06332B80,	//0x0f76		VoC_jal(CS_pred_direct_motion)
0x08001687,	//0x0f78		VoC_or16_ri(REG7,0x800)
0x05970A81,	//0x0f7a		VoC_lw16i(REG1,0x597)
0x022B0709,	//0x0f7c		VoC_add16_rd(REG1,REG1,0x22b)
0x02391507,	//0x0f7e		VoC_sw16_d(REG7,0x239)
0x2B00DC17,	//0x0f80		VoC_jump_lg(decode_mb_skip_end)(lo)	|	VoC_sw16_p(REG7,REG1,DEFAULT)
0xFFC00FA4,	//0x0f82		VoC_NAD	|	VoC_jump_lg(decode_mb_skip_end)(hi)
		//0x0f84		decode_mb_skip_NOT_FF_B_TYPE
0x38081687,	//0x0f84		VoC_or16_ri(REG7,0x3808)
0x05970A81,	//0x0f86		VoC_lw16i(REG1,0x597)
0x022B0709,	//0x0f88		VoC_add16_rd(REG1,REG1,0x22b)
0x02391507,	//0x0f8a		VoC_sw16_d(REG7,0x239)
0x2B80DC17,	//0x0f8c		VoC_jal(CS_fill_caches)(lo)	|	VoC_sw16_p(REG7,REG1,DEFAULT)
0xDFC7052B,	//0x0f8e		VoC_push16(REG7,DEFAULT)	|	VoC_jal(CS_fill_caches)(hi)
0x0EC42B80,	//0x0f90		VoC_jal(CS_pred_pskip_motion)
0x1809DF87,	//0x0f92		VoC_lw16i_set_inc(REG1,0x456,0x2)(lo)	|	VoC_pop16(REG7,DEFAULT)
0x2C090456,	//0x0f94		VoC_loop_i(0x1,0x4)(lo)	|	VoC_lw16i_set_inc(REG1,0x456,0x2)(hi)
0xE8810F99,	//0x0f96		VoC_loop_i_short(0x4,DEFAULT)	|	VoC_loop_i(0x1,0x4)(hi)
		//0x0f98		VoC_endloop0
0x0709DDCD,	//0x0f98		VoC_add16_rd(REG1,REG1,0x483d)(lo)	|	VoC_sw32inc_p(ACC1,REG1,DEFAULT)
		//0x0f99		VoC_endloop1
0xFF45483D,	//0x0f9a		VoC_lw32z(ACC1,DEFAULT)	|	VoC_add16_rd(REG1,REG1,0x483d)(hi)
0x049A1821,	//0x0f9c		VoC_lw16i_set_inc(REG1,0x49a,0x8)
0x049C1822,	//0x0f9e		VoC_lw16i_set_inc(REG2,0x49c,0x8)
0xDDCDE882,	//0x0fa0		VoC_sw32inc_p(ACC1,REG1,DEFAULT)	|	VoC_loop_i_short(0x4,DEFAULT)
		//0x0fa2		VoC_endloop0
0xFFC05DD5,	//0x0fa2		VoC_NAD(IN_PARALLEL)	|	VoC_sw32inc_p(ACC1,REG2,DEFAULT)
		//0x0fa4		decode_mb_skip_end
0x0F012B80,	//0x0fa4		VoC_jal(CS_write_back_motion)
0x41FA0A82,	//0x0fa6		VoC_lw16i(REG2,0x41fa)
0x44BB0A83,	//0x0fa8		VoC_lw16i(REG3,0x44bb)
0x02181404,	//0x0faa		VoC_lw16_d(REG4,0x218)
0x02151405,	//0x0fac		VoC_lw16_d(REG5,0x215)
0x022B0712,	//0x0fae		VoC_add16_rd(REG2,REG2,0x22b)
0x022B071B,	//0x0fb0		VoC_add16_rd(REG3,REG3,0x22b)
0xDFA9DC24,	//0x0fb2		VoC_pop16(RA,DEFAULT)	|	VoC_sw16_p(REG4,REG2,DEFAULT)
0xE580DC35,	//0x0fb4		VoC_return	|	VoC_sw16_p(REG5,REG3,DEFAULT)
		//0x0fb6		CS_get_te0_golomb
0x40B5F006,	//0x0fb6		VoC_be16_rd(get_te0_golomb_end,REG5,0x482c)(lo)	|	VoC_lw16i_short(REG6,0x0,DEFAULT)
0x408D482C,	//0x0fb8		VoC_be16_rd(get_te0_golomb_100,REG5,0x482d)(lo)	|	VoC_be16_rd(get_te0_golomb_end,REG5,0x482c)(hi)
0xDFE9482D,	//0x0fba		VoC_push16(RA,DEFAULT)	|	VoC_be16_rd(get_te0_golomb_100,REG5,0x482d)(hi)
0x00FF0A85,	//0x0fbc		VoC_lw16i(REG5,0xff)
0x0AE92B80,	//0x0fbe		VoC_jal(CS_get_ue_se_golomb)
0xE5C4DFA9,	//0x0fc0		VoC_jump(get_te0_golomb_end)	|	VoC_pop16(RA,DEFAULT)
		//0x0fc2		get_te0_golomb_100
0x1706E286,	//0x0fc2		VoC_xor16_ri(REG6,0x1)(lo)	|	VoC_rbinc_i(REG6,0x1,DEFAULT)
0xE5800001,	//0x0fc4		VoC_return	|	VoC_xor16_ri(REG6,0x1)(hi)
		//0x0fc5		get_te0_golomb_end
		//0x0fc6		CS_pred_16x8_motion
0x04921401,	//0x0fc6		VoC_lw16_d(REG1,0x492)
0x04461806,	//0x0fc8		VoC_lw16i_set_inc(REG2,0x446,0x1)
0x0FD03185,	//0x0fca		VoC_bez16_r(pred_16x8_motion_100,REG5)
0x050A1401,	//0x0fcc		VoC_lw16_d(REG1,0x50a)
0x04BE1806,	//0x0fce		VoC_lw16i_set_inc(REG2,0x4be,0x1)
		//0x0fd0		pred_16x8_motion_100
0x0FDC3184,	//0x0fd0		VoC_bez16_r(pred_16x8_motion_200,REG4)
0x04A91401,	//0x0fd2		VoC_lw16_d(REG1,0x4a9)
0x04741806,	//0x0fd4		VoC_lw16i_set_inc(REG2,0x474,0x1)
0x0FDC3185,	//0x0fd6		VoC_bez16_r(pred_16x8_motion_200,REG5)
0x05211401,	//0x0fd8		VoC_lw16_d(REG1,0x521)
0x04EC1806,	//0x0fda		VoC_lw16i_set_inc(REG2,0x4ec,0x1)
		//0x0fdc		pred_16x8_motion_200
0x0FE0358B,	//0x0fdc		VoC_bne16_rr(pred_16x8_motion_300,REG1,REG3)
0xE580D995,	//0x0fde		VoC_return	|	VoC_lw32_p(ACC1,REG2,DEFAULT)
		//0x0fe0		pred_16x8_motion_300
0xF6615FE9,	//0x0fe0		VoC_movreg16(REG1,REG3,IN_PARALLEL)	|	VoC_push16(RA,DEFAULT)
0xE0446083,	//0x0fe2		VoC_lw16i_short(REG4,0x4,IN_PARALLEL)	|	VoC_movreg16(REG3,REG4,DEFAULT)
0x0E622B80,	//0x0fe4		VoC_jal(CS_pred_motion)
0xFFC0DFA9,	//0x0fe6		VoC_NOP	|	VoC_pop16(RA,DEFAULT)
0xFFC06580,	//0x0fe8		VoC_NAD(IN_PARALLEL)	|	VoC_return
		//0x0fea		CS_pred_8x16_motion
0xDF425FE9,	//0x0fea		VoC_push32(REG45,IN_PARALLEL)	|	VoC_push16(RA,DEFAULT)
0xF6A65FC3,	//0x0fec		VoC_movreg16(REG6,REG5,IN_PARALLEL)	|	VoC_push16(REG3,DEFAULT)
0x04991405,	//0x0fee		VoC_lw16_d(REG5,0x499)
0x04541807,	//0x0ff0		VoC_lw16i_set_inc(REG3,0x454,0x1)
0x0FF83186,	//0x0ff2		VoC_bez16_r(pred_8x16_motion_100,REG6)
0x05111405,	//0x0ff4		VoC_lw16_d(REG5,0x511)
0x04CC1807,	//0x0ff6		VoC_lw16i_set_inc(REG3,0x4cc,0x1)
		//0x0ff8		pred_8x16_motion_100
0x10083184,	//0x0ff8		VoC_bez16_r(pred_8x16_motion_200,REG4)
0x043E1805,	//0x0ffa		VoC_lw16i_set_inc(REG1,0x43e,0x1)
0x048E1806,	//0x0ffc		VoC_lw16i_set_inc(REG2,0x48e,0x1)
0x10043186,	//0x0ffe		VoC_bez16_r(pred_8x16_motion_500,REG6)
0x04B61805,	//0x1000		VoC_lw16i_set_inc(REG1,0x4b6,0x1)
0x05061806,	//0x1002		VoC_lw16i_set_inc(REG2,0x506,0x1)
		//0x1004		pred_8x16_motion_500
0xE02471C3,	//0x1004		VoC_lw16i_short(REG4,0x2,IN_PARALLEL)	|	VoC_lw16i_short(REG3,0xe,DEFAULT)
0x0E4F2B80,	//0x1006		VoC_jal(CS_fetch_diagonal_mv)
		//0x1008		pred_8x16_motion_200
0x35A9DF81,	//0x1008		VoC_bne16_rr(pred_8x16_motion_300,REG5,REG1)(lo)	|	VoC_pop16(REG1,DEFAULT)
0xD99D100D,	//0x100a		VoC_lw32_p(ACC1,REG3,DEFAULT)	|	VoC_bne16_rr(pred_8x16_motion_300,REG5,REG1)(hi)
0xD90AE5C6,	//0x100c		VoC_lw32_sd(REG45,0x0,DEFAULT)	|	VoC_jump(pred_8x16_motion_end)
		//0x100d		pred_8x16_motion_300
0xE0246083,	//0x100e		VoC_lw16i_short(REG4,0x2,IN_PARALLEL)	|	VoC_movreg16(REG3,REG4,DEFAULT)
0x0E622B80,	//0x1010		VoC_jal(CS_pred_motion)
		//0x1012		pred_8x16_motion_end
0xDF02DFA9,	//0x1012		VoC_pop32(REG45,DEFAULT)	|	VoC_pop16(RA,DEFAULT)
0xFFC06580,	//0x1014		VoC_NAD(IN_PARALLEL)	|	VoC_return
		//0x1016		CS_decode_mb_cavlc_sub
0xE0855FE9,	//0x1016		VoC_lw16i_short(REG5,0x8,IN_PARALLEL)	|	VoC_push16(RA,DEFAULT)
0x02392805,	//0x1018		VoC_and16_rd(REG5,0x239)
0x10823185,	//0x101a		VoC_bez16_r(mb_cavlc_sub_inter16x8,REG5)
0x049A1809,	//0x101c		VoC_lw16i_set_inc(REG1,0x49a,0x2)
0x1405F004,	//0x101e		VoC_lw16_d(REG5,0x21e)(lo)	|	VoC_lw16i_short(REG4,0x0,DEFAULT)
0x0A87021E,	//0x1020		VoC_lw16i(REG7,0x1000)(lo)	|	VoC_lw16_d(REG5,0x21e)(hi)
0xDF421000,	//0x1022		VoC_push32(REG45,DEFAULT)	|	VoC_lw16i(REG7,0x1000)(hi)
		//0x1024		mb_cavlc_sub_inter16x16_ref_idx_start
0x7FFF0AC6,	//0x1024		VoC_lw16i(REG6,0xffff)
0x02392807,	//0x1026		VoC_and16_rd(REG7,0x239)
0x10333187,	//0x1028		VoC_bez16_r(mb_cavlc_sub_inter16x16_save_ref_idx,REG7)
0x0FB62B80,	//0x102a		VoC_jal(CS_get_te0_golomb)
0x342ED90A,	//0x102c		VoC_bgt16_rr(mb_cavlc_sub_inter16x16_save_ref_idx,REG5,REG6)(lo)	|	VoC_lw32_sd(REG45,0x0,DEFAULT)
0x77E61033,	//0x102e		VoC_lw16i_short(REG6,0xffffffff,DEFAULT)	|	VoC_bgt16_rr(mb_cavlc_sub_inter16x16_save_ref_idx,REG5,REG6)(hi)
0x2B00DF02,	//0x1030		VoC_jump_lg(mb_cavlc_sub_end)(lo)	|	VoC_pop32(REG45,IN_PARALLEL)
0xE0C71185,	//0x1032		VoC_movreg16(REG7,REG6,DEFAULT)	|	VoC_jump_lg(mb_cavlc_sub_end)(hi)
		//0x1033		mb_cavlc_sub_inter16x16_save_ref_idx
0xDDCBE884,	//0x1034		VoC_sw32inc_p(REG67,REG1,DEFAULT)	|	VoC_loop_i_short(0x4,DEFAULT)
0x48300709,	//0x1036		VoC_add16_rd(REG1,REG1,0x4830)
		//0x1038		VoC_endloop0
0x0724DD8B,	//0x1038		VoC_add16_rd(REG4,REG4,0x482c)(lo)	|	VoC_sw32_p(REG67,REG1,DEFAULT)
0x4C94482C,	//0x103a		VoC_bnlt16_rd(mb_cavlc_sub_inter16x16_ref_idx_end,REG4,0x219)(lo)	|	VoC_add16_rd(REG4,REG4,0x482c)(hi)
0x14050219,	//0x103c		VoC_lw16_d(REG5,0x21f)(lo)	|	VoC_bnlt16_rd(mb_cavlc_sub_inter16x16_ref_idx_end,REG4,0x219)(hi)
0x0A87021F,	//0x103e		VoC_lw16i(REG7,0x4000)(lo)	|	VoC_lw16_d(REG5,0x21f)(hi)
0xDD0A4000,	//0x1040		VoC_sw32_sd(REG45,0x0,DEFAULT)	|	VoC_lw16i(REG7,0x4000)(hi)
0x05121809,	//0x1042		VoC_lw16i_set_inc(REG1,0x512,0x2)
0xDF02E5E0,	//0x1044		VoC_pop32(REG45,DEFAULT)	|	VoC_jump(mb_cavlc_sub_inter16x16_ref_idx_start)
		//0x1045		mb_cavlc_sub_inter16x16_ref_idx_end
0x10000A86,	//0x1046		VoC_lw16i(REG6,0x1000)
0x049A1401,	//0x1048		VoC_lw16_d(REG1,0x49a)
0x180AF005,	//0x104a		VoC_lw16i_set_inc(REG2,0x456,0x2)(lo)	|	VoC_lw16i_short(REG5,0x0,DEFAULT)
0xDFC50456,	//0x104c		VoC_push16(REG5,DEFAULT)	|	VoC_lw16i_set_inc(REG2,0x456,0x2)(hi)
		//0x104e		mb_cavlc_sub_inter16x16_mv_start
0xFF455FC2,	//0x104e		VoC_lw32z(ACC1,IN_PARALLEL)	|	VoC_push16(REG2,DEFAULT)
0x02392806,	//0x1050		VoC_and16_rd(REG6,0x239)
0x10683186,	//0x1052		VoC_bez16_r(mb_cavlc_sub_inter16x16_save_mvs,REG6)
0xE0447003,	//0x1054		VoC_lw16i_short(REG4,0x4,IN_PARALLEL)	|	VoC_lw16i_short(REG3,0x0,DEFAULT)
0x0E622B80,	//0x1056		VoC_jal(CS_pred_motion)
0x7F000AC5,	//0x1058		VoC_lw16i(REG5,0xff00)
0x0AE92B80,	//0x105a		VoC_jal(CS_get_ue_se_golomb)
0x0AC5E0CE,	//0x105c		VoC_lw16i(REG5,0xff00)(lo)	|	VoC_movreg16(RL7_LO,REG6,DEFAULT)
0x2B807F00,	//0x105e		VoC_jal(CS_get_ue_se_golomb)(lo)	|	VoC_lw16i(REG5,0xff00)(hi)
0xE0CF0AE9,	//0x1060		VoC_movreg16(RL7_HI,REG6,DEFAULT)	|	VoC_jal(CS_get_ue_se_golomb)(hi)
0xFF2A7F3B,	//0x1062		VoC_movreg32(REG45,ACC1,IN_PARALLEL)	|	VoC_movreg32(REG67,RL7,DEFAULT)
0xC1EF41A6,	//0x1064		VoC_add16_rr(REG7,REG7,REG5,IN_PARALLEL)	|	VoC_add16_rr(REG6,REG6,REG4,DEFAULT)
0xFFC07F1D,	//0x1066		VoC_NAD(IN_PARALLEL)	|	VoC_movreg32(ACC1,REG67,DEFAULT)
		//0x1068		mb_cavlc_sub_inter16x16_save_mvs
0xF00A5F82,	//0x1068		VoC_lw16i_short(INC2,0x2,IN_PARALLEL)	|	VoC_pop16(REG2,DEFAULT)
0xE0A46886,	//0x106a		VoC_lw16i_short(REG4,0xa,IN_PARALLEL)	|	VoC_loop_i_short(0x4,DEFAULT)
0xDDD5DDD5,	//0x106c		VoC_sw32inc_p(ACC1,REG2,DEFAULT)	|	VoC_sw32inc_p(ACC1,REG2,DEFAULT)
0xC0A25DD5,	//0x106e		VoC_add16_rr(REG2,REG2,REG4,IN_PARALLEL)	|	VoC_sw32inc_p(ACC1,REG2,DEFAULT)
		//0x1070		VoC_endloop0
0xD615DD95,	//0x1070		VoC_lw16_sd(REG5,0x0,DEFAULT)	|	VoC_sw32_p(ACC1,REG2,DEFAULT)
0x482C072D,	//0x1072		VoC_add16_rd(REG5,REG5,0x482c)
0x02194C9D,	//0x1074		VoC_bnlt16_rd(mb_cavlc_sub_inter16x16_mv_end,REG5,0x219)
0x05121401,	//0x1076		VoC_lw16_d(REG1,0x512)
0x180ADA15,	//0x1078		VoC_lw16i_set_inc(REG2,0x4ce,0x2)(lo)	|	VoC_sw16_sd(REG5,0x0,DEFAULT)
0x0A8604CE,	//0x107a		VoC_lw16i(REG6,0x4000)(lo)	|	VoC_lw16i_set_inc(REG2,0x4ce,0x2)(hi)
0x2B004000,	//0x107c		VoC_jump_lg(mb_cavlc_sub_inter16x16_mv_start)(lo)	|	VoC_lw16i(REG6,0x4000)(hi)
0xDF85104E,	//0x107e		VoC_pop16(REG5,DEFAULT)	|	VoC_jump_lg(mb_cavlc_sub_inter16x16_mv_start)(hi)
		//0x107f		mb_cavlc_sub_inter16x16_mv_end
0x11852B00,	//0x1080		VoC_jump_lg(mb_cavlc_sub_end)
		//0x1082		mb_cavlc_sub_inter16x8
0x2805F205,	//0x1082		VoC_and16_rd(REG5,0x239)(lo)	|	VoC_lw16i_short(REG5,0x10,DEFAULT)
0x31850239,	//0x1084		VoC_bez16_r(mb_cavlc_sub_inter8x16,REG5)(lo)	|	VoC_and16_rd(REG5,0x239)(hi)
0xF0071107,	//0x1086		VoC_lw16i_short(REG7,0x0,DEFAULT)	|	VoC_bez16_r(mb_cavlc_sub_inter8x16,REG5)(hi)
0x10000A84,	//0x1088		VoC_lw16i(REG4,0x1000)
0x021E1405,	//0x108a		VoC_lw16_d(REG5,0x21e)
0x049A1809,	//0x108c		VoC_lw16i_set_inc(REG1,0x49a,0x2)
0xDFC75F42,	//0x108e		VoC_push16(REG7,IN_PARALLEL)	|	VoC_push32(REG45,DEFAULT)
		//0x1090		mb_cavlc_sub_inter16x8_ref_idx_start
0x10AC2C05,	//0x1090		VoC_loop_i(0x1,0x2)
0x2804F7E6,	//0x1092		VoC_and16_rd(REG4,0x239)(lo)	|	VoC_lw16i_short(REG6,0xffff,DEFAULT)
0x31840239,	//0x1094		VoC_bez16_r(mb_cavlc_sub_inter16x8_save_ref_idx,REG4)(lo)	|	VoC_and16_rd(REG4,0x239)(hi)
0x2B8010A2,	//0x1096		VoC_jal(CS_get_te0_golomb)(lo)	|	VoC_bez16_r(mb_cavlc_sub_inter16x8_save_ref_idx,REG4)(hi)
0xD90A0FB6,	//0x1098		VoC_lw32_sd(REG45,0x0,DEFAULT)	|	VoC_jal(CS_get_te0_golomb)(hi)
0x10A2342E,	//0x109a		VoC_bgt16_rr(mb_cavlc_sub_inter16x8_save_ref_idx,REG5,REG6)
0x5F02F7E6,	//0x109c		VoC_pop32(REG45,DEFAULT)	|	VoC_lw16i_short(REG6,0xffffffff,DEFAULT)
0x2B00DF87,	//0x109e		VoC_jump_lg(mb_cavlc_sub_end)(lo)	|	VoC_pop16(REG7,IN_PARALLEL)
0xFFC01185,	//0x10a0		VoC_NAD	|	VoC_jump_lg(mb_cavlc_sub_end)(hi)
		//0x10a2		mb_cavlc_sub_inter16x8_save_ref_idx
0xD90A60C7,	//0x10a2		VoC_lw32_sd(REG45,0x0,IN_PARALLEL)	|	VoC_movreg16(REG7,REG6,DEFAULT)
0xDDCBF9FC,	//0x10a4		VoC_sw32inc_p(REG67,REG1,DEFAULT)	|	VoC_shru16_ri(REG4,0xffffffff,DEFAULT)
0x48300709,	//0x10a6		VoC_add16_rd(REG1,REG1,0x4830)
0xDDCBDD8B,	//0x10a8		VoC_sw32inc_p(REG67,REG1,DEFAULT)	|	VoC_sw32_p(REG67,REG1,DEFAULT)
0xDD0A5DCB,	//0x10aa		VoC_sw32_sd(REG45,0x0,IN_PARALLEL)	|	VoC_sw32inc_p(REG67,REG1,DEFAULT)
		//0x10ac		VoC_endloop1
0x482E0709,	//0x10ac		VoC_add16_rd(REG1,REG1,0x482e)
0x073FD617,	//0x10ae		VoC_add16_rd(REG7,REG7,0x482c)(lo)	|	VoC_lw16_sd(REG7,0x0,DEFAULT)
0x4CAF482C,	//0x10b0		VoC_bnlt16_rd(mb_cavlc_sub_inter16x8_ref_idx_end,REG7,0x219)(lo)	|	VoC_add16_rd(REG7,REG7,0x482c)(hi)
0x0A840219,	//0x10b2		VoC_lw16i(REG4,0x4000)(lo)	|	VoC_bnlt16_rd(mb_cavlc_sub_inter16x8_ref_idx_end,REG7,0x219)(hi)
0x14054000,	//0x10b4		VoC_lw16_d(REG5,0x21f)(lo)	|	VoC_lw16i(REG4,0x4000)(hi)
0x1809021F,	//0x10b6		VoC_lw16i_set_inc(REG1,0x512,0x2)(lo)	|	VoC_lw16_d(REG5,0x21f)(hi)
0x5D0A0512,	//0x10b8		VoC_sw32_sd(REG45,0x0,DEFAULT)	|	VoC_lw16i_set_inc(REG1,0x512,0x2)(hi)
0x2B00DA17,	//0x10ba		VoC_jump_lg(mb_cavlc_sub_inter16x8_ref_idx_start)(lo)	|	VoC_sw16_sd(REG7,0x0,IN_PARALLEL)
0xFFC01090,	//0x10bc		VoC_NAD	|	VoC_jump_lg(mb_cavlc_sub_inter16x8_ref_idx_start)(hi)
		//0x10be		mb_cavlc_sub_inter16x8_ref_idx_end
0xDF875F02,	//0x10be		VoC_pop16(REG7,IN_PARALLEL)	|	VoC_pop32(REG45,DEFAULT)
0x0456180A,	//0x10c0		VoC_lw16i_set_inc(REG2,0x456,0x2)
0x049A0A83,	//0x10c2		VoC_lw16i(REG3,0x49a)
0x10000A86,	//0x10c4		VoC_lw16i(REG6,0x1000)
0xDF417F42,	//0x10c6		VoC_push32(REG23,IN_PARALLEL)	|	VoC_lw32z(REG45,DEFAULT)
0xDFC5DFC6,	//0x10c8		VoC_push16(REG5,DEFAULT)	|	VoC_push16(REG6,DEFAULT)
		//0x10ca		mb_cavlc_sub_inter16x8_mvs_start
0x10F02C05,	//0x10ca		VoC_loop_i(0x1,0x2)
0x2806F007,	//0x10cc		VoC_and16_rd(REG6,0x239)(lo)	|	VoC_lw16i_short(REG7,0x0,DEFAULT)
0x31860239,	//0x10ce		VoC_bez16_r(mb_cavlc_sub_inter16x8_save_mvs,REG6)(lo)	|	VoC_and16_rd(REG6,0x239)(hi)
0xD83310E2,	//0x10d0		VoC_lw16_p(REG3,REG3,DEFAULT)	|	VoC_bez16_r(mb_cavlc_sub_inter16x8_save_mvs,REG6)(hi)
0x0FC62B80,	//0x10d2		VoC_jal(CS_pred_16x8_motion)
0x7F000AC5,	//0x10d4		VoC_lw16i(REG5,0xff00)
0x0AE92B80,	//0x10d6		VoC_jal(CS_get_ue_se_golomb)
0x0AC5E0CE,	//0x10d8		VoC_lw16i(REG5,0xff00)(lo)	|	VoC_movreg16(RL7_LO,REG6,DEFAULT)
0x2B807F00,	//0x10da		VoC_jal(CS_get_ue_se_golomb)(lo)	|	VoC_lw16i(REG5,0xff00)(hi)
0xE0CF0AE9,	//0x10dc		VoC_movreg16(RL7_HI,REG6,DEFAULT)	|	VoC_jal(CS_get_ue_se_golomb)(hi)
0xFF2A7F3B,	//0x10de		VoC_movreg32(REG45,ACC1,IN_PARALLEL)	|	VoC_movreg32(REG67,RL7,DEFAULT)
0xC1EF41A6,	//0x10e0		VoC_add16_rr(REG7,REG7,REG5,IN_PARALLEL)	|	VoC_add16_rr(REG6,REG6,REG4,DEFAULT)
		//0x10e2		mb_cavlc_sub_inter16x8_save_mvs
0xE1015909,	//0x10e2		VoC_lw16i_short(REG1,0x10,IN_PARALLEL)	|	VoC_lw32_sd(REG23,0x0,DEFAULT)
0xF00A4089,	//0x10e4		VoC_lw16i_short(INC2,0x2,IN_PARALLEL)	|	VoC_add16_rr(REG1,REG2,REG1,DEFAULT)
0xF0096883,	//0x10e6		VoC_lw16i_short(INC1,0x2,IN_PARALLEL)	|	VoC_loop_i_short(0x4,DEFAULT)
0xDDCBDDD3,	//0x10e8		VoC_sw32inc_p(REG67,REG1,DEFAULT)	|	VoC_sw32inc_p(REG67,REG2,DEFAULT)
		//0x10e9		VoC_endloop0
0xE1057304,	//0x10ea		VoC_lw16i_short(REG5,0x10,IN_PARALLEL)	|	VoC_lw16i_short(REG4,0x18,DEFAULT)
0xD6264851,	//0x10ec		VoC_lw16_sd(REG6,0x1,IN_PARALLEL)	|	VoC_add32_rr(REG23,REG23,REG45,DEFAULT)
0xF9FE5615,	//0x10ee		VoC_shru16_ri(REG6,0xffffffff,IN_PARALLEL)	|	VoC_lw16_sd(REG5,0x0,DEFAULT)
		//0x10f0		VoC_endloop1
0xE0845D09,	//0x10f0		VoC_lw16i_short(REG4,0x8,IN_PARALLEL)	|	VoC_sw32_sd(REG23,0x0,DEFAULT)
0x482C072D,	//0x10f2		VoC_add16_rd(REG5,REG5,0x482c)
0x02194CB5,	//0x10f4		VoC_bnlt16_rd(mb_cavlc_sub_inter16x8_mvs_end,REG5,0x219)
0x04CE180A,	//0x10f6		VoC_lw16i_set_inc(REG2,0x4ce,0x2)
0x05120A83,	//0x10f8		VoC_lw16i(REG3,0x512)
0x40000A86,	//0x10fa		VoC_lw16i(REG6,0x4000)
0xDD097004,	//0x10fc		VoC_sw32_sd(REG23,0x0,IN_PARALLEL)	|	VoC_lw16i_short(REG4,0x0,DEFAULT)
0xDA15DA26,	//0x10fe		VoC_sw16_sd(REG5,0x0,DEFAULT)	|	VoC_sw16_sd(REG6,0x1,DEFAULT)
0x10CA2B00,	//0x1100		VoC_jump_lg(mb_cavlc_sub_inter16x8_mvs_start)
		//0x1102		mb_cavlc_sub_inter16x8_mvs_end
0xDF855F01,	//0x1102		VoC_pop16(REG5,IN_PARALLEL)	|	VoC_pop32(REG23,DEFAULT)
0x2B00DF86,	//0x1104		VoC_jump_lg(mb_cavlc_sub_end)(lo)	|	VoC_pop16(REG6,DEFAULT)
0xF0071185,	//0x1106		VoC_lw16i_short(REG7,0x0,DEFAULT)	|	VoC_jump_lg(mb_cavlc_sub_end)(hi)
		//0x1107		mb_cavlc_sub_inter8x16
0x10000A84,	//0x1108		VoC_lw16i(REG4,0x1000)
0x021E1405,	//0x110a		VoC_lw16_d(REG5,0x21e)
0x049A1821,	//0x110c		VoC_lw16i_set_inc(REG1,0x49a,0x8)
0xDFC75F42,	//0x110e		VoC_push16(REG7,IN_PARALLEL)	|	VoC_push32(REG45,DEFAULT)
		//0x1110		mb_cavlc_sub_inter8x16_ref_idx_start
0x112B2C05,	//0x1110		VoC_loop_i(0x1,0x2)
0x2804F7E6,	//0x1112		VoC_and16_rd(REG4,0x239)(lo)	|	VoC_lw16i_short(REG6,0xffff,DEFAULT)
0x31840239,	//0x1114		VoC_bez16_r(mb_cavlc_sub_inter8x16_save_ref_idx,REG4)(lo)	|	VoC_and16_rd(REG4,0x239)(hi)
0x2B801122,	//0x1116		VoC_jal(CS_get_te0_golomb)(lo)	|	VoC_bez16_r(mb_cavlc_sub_inter8x16_save_ref_idx,REG4)(hi)
0xD90A0FB6,	//0x1118		VoC_lw32_sd(REG45,0x0,DEFAULT)	|	VoC_jal(CS_get_te0_golomb)(hi)
0x1122342E,	//0x111a		VoC_bgt16_rr(mb_cavlc_sub_inter8x16_save_ref_idx,REG5,REG6)
0x5F02F7E6,	//0x111c		VoC_pop32(REG45,DEFAULT)	|	VoC_lw16i_short(REG6,0xffffffff,DEFAULT)
0x2B00DF87,	//0x111e		VoC_jump_lg(mb_cavlc_sub_end)(lo)	|	VoC_pop16(REG7,IN_PARALLEL)
0xFFC01185,	//0x1120		VoC_NAD	|	VoC_jump_lg(mb_cavlc_sub_end)(hi)
		//0x1122		mb_cavlc_sub_inter8x16_save_ref_idx
0xE02360C7,	//0x1122		VoC_lw16i_short(REG3,0x2,IN_PARALLEL)	|	VoC_movreg16(REG7,REG6,DEFAULT)
0xC05B590A,	//0x1124		VoC_add16_rr(REG3,REG1,REG3,IN_PARALLEL)	|	VoC_lw32_sd(REG45,0x0,DEFAULT)
0xF9FC5DCB,	//0x1126		VoC_shru16_ri(REG4,0xffffffff,IN_PARALLEL)	|	VoC_sw32inc_p(REG67,REG1,DEFAULT)
0x5DCBDDCB,	//0x1128		VoC_sw32inc_p(REG67,REG1,DEFAULT)	|	VoC_sw32inc_p(REG67,REG1,DEFAULT)
0x5DCBDD0A,	//0x112a		VoC_sw32inc_p(REG67,REG1,DEFAULT)	|	VoC_sw32_sd(REG45,0x0,IN_PARALLEL)
		//0x112b		VoC_endloop1
0xD617F661,	//0x112c		VoC_lw16_sd(REG7,0x0,DEFAULT)	|	VoC_movreg16(REG1,REG3,IN_PARALLEL)
0x482C073F,	//0x112e		VoC_add16_rd(REG7,REG7,0x482c)
0x02194CA7,	//0x1130		VoC_bnlt16_rd(mb_cavlc_sub_inter8x16_ref_idx_end,REG7,0x219)
0x40000A84,	//0x1132		VoC_lw16i(REG4,0x4000)
0x021F1405,	//0x1134		VoC_lw16_d(REG5,0x21f)
0x05121821,	//0x1136		VoC_lw16i_set_inc(REG1,0x512,0x8)
0xDA175D0A,	//0x1138		VoC_sw16_sd(REG7,0x0,IN_PARALLEL)	|	VoC_sw32_sd(REG45,0x0,DEFAULT)
0x11102B00,	//0x113a		VoC_jump_lg(mb_cavlc_sub_inter8x16_ref_idx_start)
		//0x113c		mb_cavlc_sub_inter8x16_ref_idx_end
0xDF875F02,	//0x113c		VoC_pop16(REG7,IN_PARALLEL)	|	VoC_pop32(REG45,DEFAULT)
0x0456180A,	//0x113e		VoC_lw16i_set_inc(REG2,0x456,0x2)
0x049A0A83,	//0x1140		VoC_lw16i(REG3,0x49a)
0x10000A86,	//0x1142		VoC_lw16i(REG6,0x1000)
0xDF417F42,	//0x1144		VoC_push32(REG23,IN_PARALLEL)	|	VoC_lw32z(REG45,DEFAULT)
0xDFC5DFC6,	//0x1146		VoC_push16(REG5,DEFAULT)	|	VoC_push16(REG6,DEFAULT)
		//0x1148		mb_cavlc_sub_inter8x16_mvs_start
0x116F2C05,	//0x1148		VoC_loop_i(0x1,0x2)
0x2806F007,	//0x114a		VoC_and16_rd(REG6,0x239)(lo)	|	VoC_lw16i_short(REG7,0x0,DEFAULT)
0x31860239,	//0x114c		VoC_bez16_r(mb_cavlc_sub_inter8x16_save_mvs,REG6)(lo)	|	VoC_and16_rd(REG6,0x239)(hi)
0xD8331160,	//0x114e		VoC_lw16_p(REG3,REG3,DEFAULT)	|	VoC_bez16_r(mb_cavlc_sub_inter8x16_save_mvs,REG6)(hi)
0x0FEA2B80,	//0x1150		VoC_jal(CS_pred_8x16_motion)
0x7F000AC5,	//0x1152		VoC_lw16i(REG5,0xff00)
0x0AE92B80,	//0x1154		VoC_jal(CS_get_ue_se_golomb)
0x0AC5E0CE,	//0x1156		VoC_lw16i(REG5,0xff00)(lo)	|	VoC_movreg16(RL7_LO,REG6,DEFAULT)
0x2B807F00,	//0x1158		VoC_jal(CS_get_ue_se_golomb)(lo)	|	VoC_lw16i(REG5,0xff00)(hi)
0xE0CF0AE9,	//0x115a		VoC_movreg16(RL7_HI,REG6,DEFAULT)	|	VoC_jal(CS_get_ue_se_golomb)(hi)
0xFF2A7F3B,	//0x115c		VoC_movreg32(REG45,ACC1,IN_PARALLEL)	|	VoC_movreg32(REG67,RL7,DEFAULT)
0xC1EF41A6,	//0x115e		VoC_add16_rr(REG7,REG7,REG5,IN_PARALLEL)	|	VoC_add16_rr(REG6,REG6,REG4,DEFAULT)
		//0x1160		mb_cavlc_sub_inter8x16_save_mvs
0xE0215909,	//0x1160		VoC_lw16i_short(REG1,0x2,IN_PARALLEL)	|	VoC_lw32_sd(REG23,0x0,DEFAULT)
0xF0424089,	//0x1162		VoC_lw16i_short(INC2,0x10,IN_PARALLEL)	|	VoC_add16_rr(REG1,REG2,REG1,DEFAULT)
0xF0416883,	//0x1164		VoC_lw16i_short(INC1,0x10,IN_PARALLEL)	|	VoC_loop_i_short(0x4,DEFAULT)
0xDDCBDDD3,	//0x1166		VoC_sw32inc_p(REG67,REG1,DEFAULT)	|	VoC_sw32inc_p(REG67,REG2,DEFAULT)
		//0x1167		VoC_endloop0
0x7084D909,	//0x1168		VoC_lw16i_short(REG4,0x4,DEFAULT)	|	VoC_lw32_sd(REG23,0x0,DEFAULT)
0x4851E025,	//0x116a		VoC_add32_rr(REG23,REG23,REG45,DEFAULT)	|	VoC_lw16i_short(REG5,0x2,IN_PARALLEL)
0x5615D626,	//0x116c		VoC_lw16_sd(REG5,0x0,DEFAULT)	|	VoC_lw16_sd(REG6,0x1,IN_PARALLEL)
0x5D09F9FE,	//0x116e		VoC_sw32_sd(REG23,0x0,DEFAULT)	|	VoC_shru16_ri(REG6,0xffffffff,IN_PARALLEL)
		//0x116f		VoC_endloop1
0x072DE044,	//0x1170		VoC_add16_rd(REG5,REG5,0x482c)(lo)	|	VoC_lw16i_short(REG4,0x4,IN_PARALLEL)
0x4CBD482C,	//0x1172		VoC_bnlt16_rd(mb_cavlc_sub_inter8x16_mvs_end,REG5,0x219)(lo)	|	VoC_add16_rd(REG5,REG5,0x482c)(hi)
0x180A0219,	//0x1174		VoC_lw16i_set_inc(REG2,0x4ce,0x2)(lo)	|	VoC_bnlt16_rd(mb_cavlc_sub_inter8x16_mvs_end,REG5,0x219)(hi)
0x0A8304CE,	//0x1176		VoC_lw16i(REG3,0x512)(lo)	|	VoC_lw16i_set_inc(REG2,0x4ce,0x2)(hi)
0x0A860512,	//0x1178		VoC_lw16i(REG6,0x4000)(lo)	|	VoC_lw16i(REG3,0x512)(hi)
0x70044000,	//0x117a		VoC_lw16i_short(REG4,0x0,DEFAULT)	|	VoC_lw16i(REG6,0x4000)(hi)
0xDA26DD09,	//0x117c		VoC_sw16_sd(REG6,0x1,DEFAULT)	|	VoC_sw32_sd(REG23,0x0,IN_PARALLEL)
0x2B00DA15,	//0x117e		VoC_jump_lg(mb_cavlc_sub_inter8x16_mvs_start)(lo)	|	VoC_sw16_sd(REG5,0x0,DEFAULT)
0xFFC01148,	//0x1180		VoC_NAD	|	VoC_jump_lg(mb_cavlc_sub_inter8x16_mvs_start)(hi)
		//0x1182		mb_cavlc_sub_inter8x16_mvs_end
0xDF855F01,	//0x1182		VoC_pop16(REG5,IN_PARALLEL)	|	VoC_pop32(REG23,DEFAULT)
0xDFA9DF86,	//0x1184		VoC_pop16(RA,DEFAULT)	|	VoC_pop16(REG6,DEFAULT)
		//0x1185		mb_cavlc_sub_end
0xE580FFC0,	//0x1186		VoC_return	|	VoC_NOP
		//0x1188		CS_decode_mb_cavlc
0xDFE97030,	//0x1188		VoC_push16(RA,IN_PARALLEL)	|	VoC_lw16i_short(INC0,0x1,DEFAULT)
0x1404FF47,	//0x118a		VoC_lw16_d(REG4,0x213)(lo)	|	VoC_lw32z(RL7,DEFAULT)
0x08240213,	//0x118c		VoC_mult16_rd(REG4,REG4,0x223)(lo)	|	VoC_lw16_d(REG4,0x213)(hi)
0x180A0223,	//0x118e		VoC_lw16i_set_inc(REG2,0x24e,0x2)(lo)	|	VoC_mult16_rd(REG4,REG4,0x223)(hi)
0x1809024E,	//0x1190		VoC_lw16i_set_inc(REG1,0x30e,0x2)(lo)	|	VoC_lw16i_set_inc(REG2,0x24e,0x2)(hi)
0x0724030E,	//0x1192		VoC_add16_rd(REG4,REG4,0x222)(lo)	|	VoC_lw16i_set_inc(REG1,0x30e,0x2)(hi)
0x2CC00222,	//0x1194		VoC_loop_i(0x0,0x60)(lo)	|	VoC_add16_rd(REG4,REG4,0x222)(hi)
0xDDD71198,	//0x1196		VoC_sw32inc_p(RL7,REG2,DEFAULT)	|	VoC_loop_i(0x0,0x60)(hi)
		//0x1198		VoC_endloop0
0x1504DDCF,	//0x1198		VoC_sw16_d(REG4,0x22b)(lo)	|	VoC_sw32inc_p(RL7,REG1,DEFAULT)
0xF024022B,	//0x119a		VoC_lw16i_short(REG4,0x1,DEFAULT)	|	VoC_sw16_d(REG4,0x22b)(hi)
0x020F4194,	//0x119c		VoC_be16_rd(mb_cavlc_slice_type,REG4,0x20f)
0x413CF0A4,	//0x119e		VoC_be16_rd(mb_cavlc_slice_type,REG4,0x20f)(lo)	|	VoC_lw16i_short(REG4,0x5,DEFAULT)
0xF7E4020F,	//0x11a0		VoC_lw16i_short(REG4,0xffffffff,DEFAULT)	|	VoC_be16_rd(mb_cavlc_slice_type,REG4,0x20f)(hi)
0x020E1406,	//0x11a2		VoC_lw16_d(REG6,0x20e)
0x020E4434,	//0x11a4		VoC_bne16_rd(mb_cavlc_mb_skip_run,REG4,0x20e)
0x00FF0A85,	//0x11a6		VoC_lw16i(REG5,0xff)
0x0AE92B80,	//0x11a8		VoC_jal(CS_get_ue_se_golomb)
		//0x11aa		mb_cavlc_mb_skip_run
0x482C07B4,	//0x11aa		VoC_sub16_rd(REG4,REG6,0x482c)
0x1504FFC0,	//0x11ac		VoC_sw16_d(REG4,0x20e)(lo)	|	VoC_NOP
0x3186020E,	//0x11ae		VoC_bez16_r(mb_cavlc_slice_type,REG6)(lo)	|	VoC_sw16_d(REG4,0x20e)(hi)
0x2B8011B6,	//0x11b0		VoC_jal(CS_decode_mb_skip)(lo)	|	VoC_bez16_r(mb_cavlc_slice_type,REG6)(hi)
0xDFA90F4E,	//0x11b2		VoC_pop16(RA,DEFAULT)	|	VoC_jal(CS_decode_mb_skip)(hi)
0xE580F006,	//0x11b4		VoC_return	|	VoC_lw16i_short(REG6,0x0,DEFAULT)
		//0x11b6		mb_cavlc_slice_type
0xE0357004,	//0x11b6		VoC_lw16i_short(REG5,0x3,IN_PARALLEL)	|	VoC_lw16i_short(REG4,0x0,DEFAULT)
0x02124025,	//0x11b8		VoC_be16_rd(FIELD_PICTURE_end,REG5,0x212)
0xFFC07024,	//0x11ba		VoC_NAD(IN_PARALLEL)	|	VoC_lw16i_short(REG4,0x1,DEFAULT)
		//0x11bc		FIELD_PICTURE_end
0x00FF0A85,	//0x11bc		VoC_lw16i(REG5,0xff)
0x02461504,	//0x11be		VoC_sw16_d(REG4,0x246)
0x02431504,	//0x11c0		VoC_sw16_d(REG4,0x243)
0x0AE92B80,	//0x11c2		VoC_jal(CS_get_ue_se_golomb)
0xE03360C7,	//0x11c4		VoC_lw16i_short(REG3,0x3,IN_PARALLEL)	|	VoC_movreg16(REG7,REG6,DEFAULT)
0x020F448B,	//0x11c6		VoC_bne16_rd(mb_cavlc_decode_info_B_TYPE_End,REG3,0x20f)
0x47B81805,	//0x11c8		VoC_lw16i_set_inc(REG1,0x47b8,0x1)
0x341FF2E3,	//0x11ca		VoC_bgt16_rr(mb_cavlc_decode_inter_mb_info,REG3,REG7)(lo)	|	VoC_lw16i_short(REG3,0x17,DEFAULT)
0xC3DF11F4,	//0x11cc		VoC_sub16_rr(REG7,REG7,REG3,DEFAULT)	|	VoC_bgt16_rr(mb_cavlc_decode_inter_mb_info,REG3,REG7)(hi)
0xF043E5CA,	//0x11ce		VoC_lw16i_short(REG3,0x2,DEFAULT)	|	VoC_jump(mb_cavlc_decode_intra_mb_info)
		//0x11cf		mb_cavlc_decode_info_B_TYPE_End
0x020F4483,	//0x11d0		VoC_bne16_rd(mb_cavlc_decode_intra_mb_info,REG3,0x20f)
0x1805F0A3,	//0x11d2		VoC_lw16i_set_inc(REG1,0x47e6,0x1)(lo)	|	VoC_lw16i_short(REG3,0x5,DEFAULT)
0x341F47E6,	//0x11d4		VoC_bgt16_rr(mb_cavlc_decode_inter_mb_info,REG3,REG7)(lo)	|	VoC_lw16i_set_inc(REG1,0x47e6,0x1)(hi)
0xC3DF11F4,	//0x11d6		VoC_sub16_rr(REG7,REG7,REG3,DEFAULT)	|	VoC_bgt16_rr(mb_cavlc_decode_inter_mb_info,REG3,REG7)(hi)
		//0x11d8		mb_cavlc_decode_intra_mb_info
0x48323C37,	//0x11d8		VoC_bngt16_rd(mb_cavlc_decode_intra_mb_info_go,REG7,0x4832)
0xF7E6DFA9,	//0x11da		VoC_lw16i_short(REG6,0xffffffff,DEFAULT)	|	VoC_pop16(RA,DEFAULT)
0xFFC06580,	//0x11dc		VoC_NAD(IN_PARALLEL)	|	VoC_return
		//0x11de		mb_cavlc_decode_intra_mb_info_go
0x47F01809,	//0x11de		VoC_lw16i_set_inc(REG1,0x47f0,0x2)
0x4071E0E6,	//0x11e0		VoC_add16_rr(REG1,REG1,REG6,DEFAULT)	|	VoC_movreg16(REG6,REG7,DEFAULT)
0x3186E017,	//0x11e2		VoC_bez16_r(mb_cavlc_decode_intra_mb_cbp_mod,REG6)(lo)	|	VoC_lw16i_short(REG7,0x1,IN_PARALLEL)
0xF08711EA,	//0x11e4		VoC_lw16i_short(REG7,0x4,DEFAULT)	|	VoC_bez16_r(mb_cavlc_decode_intra_mb_cbp_mod,REG6)(hi)
0x48324026,	//0x11e6		VoC_be16_rd(mb_cavlc_decode_intra_mb_cbp_mod,REG6,0x4832)
0xFFC07047,	//0x11e8		VoC_NAD(IN_PARALLEL)	|	VoC_lw16i_short(REG7,0x2,DEFAULT)
		//0x11ea		mb_cavlc_decode_intra_mb_cbp_mod
0xD8147006,	//0x11ea		VoC_lw16_p(REG4,REG1,IN_PARALLEL)	|	VoC_lw16i_short(REG6,0x0,DEFAULT)
0xF9446085,	//0x11ec		VoC_shru16_ri(REG4,0x8,IN_PARALLEL)	|	VoC_movreg16(REG5,REG4,DEFAULT)
0x00FF1605,	//0x11ee		VoC_and16_ri(REG5,0xff)
0x1505E08E,	//0x11f0		VoC_sw16_d(REG5,0x245)(lo)	|	VoC_movreg16(RL7_LO,REG4,DEFAULT)
0xE5C70245,	//0x11f2		VoC_jump(mb_cavlc_decode_mb_info_done)	|	VoC_sw16_d(REG5,0x245)(hi)
		//0x11f4		mb_cavlc_decode_inter_mb_info
0xC079C079,	//0x11f4		VoC_add16_rr(REG1,REG1,REG7,DEFAULT)	|	VoC_add16_rr(REG1,REG1,REG7,DEFAULT)
0xD897FFC0,	//0x11f6		VoC_lw16inc_p(REG7,REG1,DEFAULT)	|	VoC_NOP
0xFFC05896,	//0x11f8		VoC_NAD(IN_PARALLEL)	|	VoC_lw16inc_p(REG6,REG1,DEFAULT)
		//0x11fa		mb_cavlc_decode_mb_info_done
0x02436C04,	//0x11fa		VoC_bez16_d(mb_cavlc_MB_FIELD,0x243)
0x00801687,	//0x11fc		VoC_or16_ri(REG7,0x80)
		//0x11fe		mb_cavlc_MB_FIELD
0x02151403,	//0x11fe		VoC_lw16_d(REG3,0x215)
0x44BB0A85,	//0x1200		VoC_lw16i(REG5,0x44bb)
0x022B072D,	//0x1202		VoC_add16_rd(REG5,REG5,0x22b)
0x02391507,	//0x1204		VoC_sw16_d(REG7,0x239)
0xDF47DC53,	//0x1206		VoC_push32(RL7,DEFAULT)	|	VoC_sw16_p(REG3,REG5,DEFAULT)
0xE0065F43,	//0x1208		VoC_lw16i_short(REG6,0x0,IN_PARALLEL)	|	VoC_push32(REG67,DEFAULT)
0x052B2B80,	//0x120a		VoC_jal(CS_fill_caches)
0xE074590B,	//0x120c		VoC_lw16i_short(REG4,0x7,IN_PARALLEL)	|	VoC_lw32_sd(REG67,0x0,DEFAULT)
0xD917643C,	//0x120e		VoC_lw32_sd(RL7,0x1,IN_PARALLEL)	|	VoC_and16_rr(REG4,REG7,DEFAULT)
0x12463184,	//0x1210		VoC_bez16_r(mb_cavlc_IS_INTRA_End,REG4)
0xE43CF024,	//0x1212		VoC_and16_rr(REG4,REG7,DEFAULT)	|	VoC_lw16i_short(REG4,0x1,DEFAULT)
0x12363184,	//0x1214		VoC_bez16_r(mb_cavlc_IS_INTRA4x4,REG4)
0x1805F202,	//0x1216		VoC_lw16i_set_inc(REG1,0x0,0x1)(lo)	|	VoC_lw16i_short(REG2,0x10,DEFAULT)
0xFFC00000,	//0x1218		VoC_NAD	|	VoC_lw16i_set_inc(REG1,0x0,0x1)(hi)
0x122E2E10,	//0x121a		VoC_loop_r(0,REG2)
0x0248070C,	//0x121c		VoC_add16_rd(REG4,REG1,0x248)
0x0B6E2B80,	//0x121e		VoC_jal(CS_pred_intra_mode)
0xE286E240,	//0x1220		VoC_rbinc_i(REG6,0x1,DEFAULT)	|	VoC_lbinc_p(REG0)
0x122A31C6,	//0x1222		VoC_bnez16_r(CS_pred_intra_mode_get_bits1,REG6)
0xE017628E,	//0x1224		VoC_lw16i_short(REG7,0x1,IN_PARALLEL)	|	VoC_rbinc_i(REG6,0x3,DEFAULT)
0x122934AE,	//0x1226		VoC_bngt16_rr(rem_mode_100,REG5,REG6)
0xC1BDF007,	//0x1228		VoC_add16_rr(REG5,REG6,REG7,DEFAULT)	|	VoC_lw16i_short(REG7,0x0,DEFAULT)
		//0x1229		rem_mode_100
		//0x122a		CS_pred_intra_mode_get_bits1
0x03FE0A86,	//0x122a		VoC_lw16i(REG6,0x3fe)
0xDE0881A6,	//0x122c		VoC_inc_p(REG1,DEFAULT)	|	VoC_add16_rp(REG6,REG6,REG4,DEFAULT)
		//0x122e		VoC_endloop0
0xFFC05C65,	//0x122e		VoC_NAD(IN_PARALLEL)	|	VoC_sw16_p(REG5,REG6,DEFAULT)
0x0A712B80,	//0x1230		VoC_jal(CS_write_back_intra_pred_mode)
0x0AA22B80,	//0x1232		VoC_jal(CS_check_intra4x4_pred_mode)
0xFFC065C8,	//0x1234		VoC_NAD(IN_PARALLEL)	|	VoC_jump(mb_cavlc_IS_INTRA4x4_done)
		//0x1236		mb_cavlc_IS_INTRA4x4
0x02451406,	//0x1236		VoC_lw16_d(REG6,0x245)
0x0AC22B80,	//0x1238		VoC_jal(CS_check_intra_pred_mode)
0x02451506,	//0x123a		VoC_sw16_d(REG6,0x245)
		//0x123c		mb_cavlc_IS_INTRA4x4_done
0x00FF0A85,	//0x123c		VoC_lw16i(REG5,0xff)
0x0AE92B80,	//0x123e		VoC_jal(CS_get_ue_se_golomb)
0x0AC22B80,	//0x1240		VoC_jal(CS_check_intra_pred_mode)
0x02441506,	//0x1242		VoC_sw16_d(REG6,0x244)
0xFFC065D4,	//0x1244		VoC_NAD(IN_PARALLEL)	|	VoC_jump(mb_cavlc_DONE)
		//0x1246		mb_cavlc_IS_INTRA_End
0x482E4436,	//0x1246		VoC_bne16_rd(mb_cavlc_partition_count,REG6,0x482e)
0x093D2B80,	//0x1248		VoC_jal(CS_decode_mb_cavlc_partition_count)
0xFFC065CE,	//0x124a		VoC_NAD(IN_PARALLEL)	|	VoC_jump(mb_cavlc_DONE)
		//0x124c		mb_cavlc_partition_count
0x01000A84,	//0x124c		VoC_lw16i(REG4,0x100)
0x3184E43C,	//0x124e		VoC_bez16_r(mb_cavlc_IS_DIRECT,REG4)(lo)	|	VoC_and16_rr(REG4,REG7,DEFAULT)
0x2B801256,	//0x1250		VoC_jal(CS_pred_direct_motion)(lo)	|	VoC_bez16_r(mb_cavlc_IS_DIRECT,REG4)(hi)
0xDD0B0633,	//0x1252		VoC_sw32_sd(REG67,0x0,DEFAULT)	|	VoC_jal(CS_pred_direct_motion)(hi)
0xFFC065C4,	//0x1254		VoC_NAD(IN_PARALLEL)	|	VoC_jump(mb_cavlc_DONE)
		//0x1256		mb_cavlc_IS_DIRECT
0x10162B80,	//0x1256		VoC_jal(CS_decode_mb_cavlc_sub)
		//0x1258		mb_cavlc_DONE
0x00780A85,	//0x1258		VoC_lw16i(REG5,0x78)
0x643DDF03,	//0x125a		VoC_and16_rr(REG5,REG7,DEFAULT)	|	VoC_pop32(REG67,DEFAULT)
0x3185DF07,	//0x125c		VoC_bez16_r(mb_cavlc_write_back_motion,REG5)(lo)	|	VoC_pop32(RL7,IN_PARALLEL)
0x15071263,	//0x125e		VoC_sw16_d(REG7,0x239)(lo)	|	VoC_bez16_r(mb_cavlc_write_back_motion,REG5)(hi)
0x2B800239,	//0x1260		VoC_jal(CS_write_back_motion)(lo)	|	VoC_sw16_d(REG7,0x239)(hi)
0xF0450F01,	//0x1262		VoC_lw16i_short(REG5,0x2,DEFAULT)	|	VoC_jal(CS_write_back_motion)(hi)
		//0x1263		mb_cavlc_write_back_motion
0xF7C6643D,	//0x1264		VoC_movreg16(REG6,RL7_LO,IN_PARALLEL)	|	VoC_and16_rr(REG5,REG7,DEFAULT)
0x127831C5,	//0x1266		VoC_bnez16_r(mb_cavlc_cbp_DONE,REG5)
0x00FF0A85,	//0x1268		VoC_lw16i(REG5,0xff)
0x0AE92B80,	//0x126a		VoC_jal(CS_get_ue_se_golomb)
0xE43DF025,	//0x126c		VoC_and16_rr(REG5,REG7,DEFAULT)	|	VoC_lw16i_short(REG5,0x1,DEFAULT)
0x48A20A84,	//0x126e		VoC_lw16i(REG4,0x48a2)
0x12743185,	//0x1270		VoC_bez16_r(cbp_IS_INTRA4x4,REG5)
0x48720A84,	//0x1272		VoC_lw16i(REG4,0x4872)
		//0x1274		cbp_IS_INTRA4x4
0xFFC0C134,	//0x1274		VoC_NOP	|	VoC_add16_rr(REG4,REG4,REG6,DEFAULT)
0xFFC05846,	//0x1276		VoC_NAD(IN_PARALLEL)	|	VoC_lw16_p(REG6,REG4,DEFAULT)
		//0x1278		mb_cavlc_cbp_DONE
0x05971805,	//0x1278		VoC_lw16i_set_inc(REG1,0x597,0x1)
0x022A1506,	//0x127a		VoC_sw16_d(REG6,0x22a)
0x022B0709,	//0x127c		VoC_add16_rd(REG1,REG1,0x22b)
0x02391507,	//0x127e		VoC_sw16_d(REG7,0x239)
0x6E07DC17,	//0x1280		VoC_bnez16_d(mb_cavlc_cbp_IS_INTRA16x16,0x22a)(lo)	|	VoC_sw16_p(REG7,REG1,DEFAULT)
0xF045022A,	//0x1282		VoC_lw16i_short(REG5,0x2,DEFAULT)	|	VoC_bnez16_d(mb_cavlc_cbp_IS_INTRA16x16,0x22a)(hi)
0x3185E43D,	//0x1284		VoC_bez16_r(mb_cavlc_cbp_IS_INTRA16x16_else,REG5)(lo)	|	VoC_and16_rr(REG5,REG7,DEFAULT)
0xFFC0128C,	//0x1286		VoC_NAD	|	VoC_bez16_r(mb_cavlc_cbp_IS_INTRA16x16_else,REG5)(hi)
		//0x1288		mb_cavlc_cbp_IS_INTRA16x16
0x0D002B80,	//0x1288		VoC_jal(CS_decode_mb_cbp)
0x12AA2B00,	//0x128a		VoC_jump_lg(mb_cavlc_cbp_IS_INTRA16x16_end)
		//0x128c		mb_cavlc_cbp_IS_INTRA16x16_else
0x1809FF44,	//0x128c		VoC_lw16i_set_inc(REG1,0x3da,0x2)(lo)	|	VoC_lw32z(ACC0,DEFAULT)
0x180A03DA,	//0x128e		VoC_lw16i_set_inc(REG2,0x3e2,0x2)(lo)	|	VoC_lw16i_set_inc(REG1,0x3da,0x2)(hi)
0xE84703E2,	//0x1290		VoC_loop_i_short(0x2,DEFAULT)	|	VoC_lw16i_set_inc(REG2,0x3e2,0x2)(hi)
0xDDCCDDCC,	//0x1292		VoC_sw32inc_p(ACC0,REG1,DEFAULT)	|	VoC_sw32inc_p(ACC0,REG1,DEFAULT)
0xDDD4DDD4,	//0x1294		VoC_sw32inc_p(ACC0,REG2,DEFAULT)	|	VoC_sw32inc_p(ACC0,REG2,DEFAULT)
0x03EA1809,	//0x1296		VoC_lw16i_set_inc(REG1,0x3ea,0x2)
		//0x1298		VoC_endloop0
0x03F2180A,	//0x1298		VoC_lw16i_set_inc(REG2,0x3f2,0x2)
0x03D71508,	//0x129a		VoC_sw16_d(ACC0_LO,0x3d7)
0x03D81508,	//0x129c		VoC_sw16_d(ACC0_LO,0x3d8)
0x03DF1508,	//0x129e		VoC_sw16_d(ACC0_LO,0x3df)
0x03E01508,	//0x12a0		VoC_sw16_d(ACC0_LO,0x3e0)
0x03EF1508,	//0x12a2		VoC_sw16_d(ACC0_LO,0x3ef)
0x03F01508,	//0x12a4		VoC_sw16_d(ACC0_LO,0x3f0)
0x03F71508,	//0x12a6		VoC_sw16_d(ACC0_LO,0x3f7)
0x03F81508,	//0x12a8		VoC_sw16_d(ACC0_LO,0x3f8)
		//0x12aa		mb_cavlc_cbp_IS_INTRA16x16_end
0x02181404,	//0x12aa		VoC_lw16_d(REG4,0x218)
0x41FA0A81,	//0x12ac		VoC_lw16i(REG1,0x41fa)
0x022B0709,	//0x12ae		VoC_add16_rd(REG1,REG1,0x22b)
0xDC14DFA9,	//0x12b0		VoC_sw16_p(REG4,REG1,DEFAULT)	|	VoC_pop16(RA,DEFAULT)
0xFFC06580,	//0x12b2		VoC_NAD(IN_PARALLEL)	|	VoC_return
		//0x12b4		CS_MC_prepare_block_part
0x02221482,	//0x12b4		VoC_lw32_d(REG45,0x222)
0xFDEC7DD2,	//0x12b6		VoC_shru32_ri(ACC0,0xfffffffd,IN_PARALLEL)	|	VoC_shru32_ri(REG45,0xfffffffa,DEFAULT)
0xDF4148A2,	//0x12b8		VoC_push32(REG23,IN_PARALLEL)	|	VoC_add32_rr(REG45,REG45,ACC0,DEFAULT)
0x834D030C,	//0x12ba		VoC_add16inc_rp(REG5,REG5,REG1,IN_PARALLEL)	|	VoC_add16inc_rp(REG4,REG4,REG1,DEFAULT)
0xE07C70ED,	//0x12bc		VoC_lw16i_short(RL6_LO,0x7,IN_PARALLEL)	|	VoC_lw16i_short(RL6_HI,0x7,DEFAULT)
0xEFE664D6,	//0x12be		VoC_lw16i_short(REG6,0xfffffffe,IN_PARALLEL)	|	VoC_and32_rr(RL6,REG45,DEFAULT)
0xF8157814,	//0x12c0		VoC_shr16_ri(REG5,0x2,IN_PARALLEL)	|	VoC_shr16_ri(REG4,0x2,DEFAULT)
0xC39B4392,	//0x12c2		VoC_sub16_rr(REG3,REG6,REG3,IN_PARALLEL)	|	VoC_sub16_rr(REG2,REG6,REG2,DEFAULT)
0x073EF027,	//0x12c4		VoC_add16_rd(REG6,REG7,0x21a)(lo)	|	VoC_lw16i_short(REG7,0x1,DEFAULT)
0x34A6021A,	//0x12c6		VoC_bngt16_rr(mc_prepare_blk_clip_x_min,REG4,REG6)(lo)	|	VoC_add16_rd(REG6,REG7,0x21a)(hi)
0xE0C412CC,	//0x12c8		VoC_movreg16(REG4,REG6,DEFAULT)	|	VoC_bngt16_rr(mc_prepare_blk_clip_x_min,REG4,REG6)(hi)
0xFFC065C6,	//0x12ca		VoC_NAD(IN_PARALLEL)	|	VoC_jump(mc_prepare_blk_clip_x_end)
		//0x12cc		mc_prepare_blk_clip_x_min
0x12D03494,	//0x12cc		VoC_bngt16_rr(mc_prepare_blk_clip_x_end,REG2,REG4)
0xFFC06044,	//0x12ce		VoC_NAD(IN_PARALLEL)	|	VoC_movreg16(REG4,REG2,DEFAULT)
		//0x12d0		mc_prepare_blk_clip_x_end
0x021B073E,	//0x12d0		VoC_add16_rd(REG6,REG7,0x21b)
0x12D634AE,	//0x12d2		VoC_bngt16_rr(mc_prepare_blk_clip_y_min,REG5,REG6)
0xE5C4E0C5,	//0x12d4		VoC_jump(mc_prepare_blk_clip_y_end)	|	VoC_movreg16(REG5,REG6,DEFAULT)
		//0x12d6		mc_prepare_blk_clip_y_min
0x12D9349D,	//0x12d6		VoC_bngt16_rr(mc_prepare_blk_clip_y_end,REG3,REG5)
0xFF41E065,	//0x12d8		VoC_lw32z(REG23,DEFAULT)	|	VoC_movreg16(REG5,REG3,DEFAULT)
		//0x12d9		mc_prepare_blk_clip_y_end
0x207A6C1C,	//0x12da		VoC_bez16_d(ref_y_exp_end,0x207a)
0xEF267067,	//0x12dc		VoC_lw16i_short(REG6,0xfffffff2,IN_PARALLEL)	|	VoC_lw16i_short(REG7,0x3,DEFAULT)
0x021A0B39,	//0x12de		VoC_sub16_dr(REG1,0x21a,REG7)
0x12E53421,	//0x12e0		VoC_bgt16_rr(ref_x_exp_overflow,REG4,REG1)
0x12EA34B4,	//0x12e2		VoC_bngt16_rr(ref_x_exp_end,REG6,REG4)
0xC30AE5C3,	//0x12e4		VoC_sub16_rr(REG2,REG4,REG1,DEFAULT)	|	VoC_jump(ref_x_exp_underflow)
		//0x12e5		ref_x_exp_overflow
0xC3A2E5C4,	//0x12e6		VoC_sub16_rr(REG2,REG6,REG4,DEFAULT)	|	VoC_jump(ref_x_exp_end)
		//0x12e7		ref_x_exp_underflow
0x000016C2,	//0x12e8		VoC_or16_ri(REG2,0x8000)
		//0x12ea		ref_x_exp_end
0x021B0B39,	//0x12ea		VoC_sub16_dr(REG1,0x21b,REG7)
0x12F13429,	//0x12ec		VoC_bgt16_rr(ref_y_exp_overflow,REG5,REG1)
0x12F634B5,	//0x12ee		VoC_bngt16_rr(ref_y_exp_end,REG6,REG5)
0xC34BE5C3,	//0x12f0		VoC_sub16_rr(REG3,REG5,REG1,DEFAULT)	|	VoC_jump(ref_y_exp_underflow)
		//0x12f1		ref_y_exp_overflow
0xC3ABE5C4,	//0x12f2		VoC_sub16_rr(REG3,REG6,REG5,DEFAULT)	|	VoC_jump(ref_y_exp_end)
		//0x12f3		ref_y_exp_underflow
0x000016C3,	//0x12f4		VoC_or16_ri(REG3,0x8000)
		//0x12f6		ref_y_exp_end
0x48300203,	//0x12f6		VoC_mult16_pd(REG3,REG0,0x4830)
0xF7C15F41,	//0x12f8		VoC_movreg16(REG1,RL7_LO,IN_PARALLEL)	|	VoC_push32(REG23,DEFAULT)
0xFF337040,	//0x12fa		VoC_movreg32(REG67,RL6,IN_PARALLEL)	|	VoC_lw16i_short(REG0,0x2,DEFAULT)
0x4302C059,	//0x12fc		VoC_sub16_rr(REG2,REG4,REG0,DEFAULT)	|	VoC_add16_rr(REG1,REG1,REG3,DEFAULT)
0x6049C343,	//0x12fe		VoC_movreg16(ACC0_HI,REG2,DEFAULT)	|	VoC_sub16_rr(REG3,REG5,REG0,IN_PARALLEL)
0xFA84EFFE,	//0x1300		VoC_shr32_ri(ACC0,0x10,DEFAULT)	|	VoC_lw16i_short(RL7_LO,0xffffffff,IN_PARALLEL)
0x02200E18,	//0x1302		VoC_mac32_rd(REG3,0x220)
0x03FF0A8F,	//0x1304		VoC_lw16i(RL7_HI,0x3ff)
0xF80D780C,	//0x1306		VoC_shr16_ri(REG5,0x1,IN_PARALLEL)	|	VoC_shr16_ri(REG4,0x1,DEFAULT)
0xF689130E,	//0x1308		VoC_movreg16(ACC0_HI,REG4,IN_PARALLEL)	|	VoC_add32inc_rp(RL6,ACC0,REG1,DEFAULT)
0x0E28FA84,	//0x130a		VoC_mac32_rd(REG5,0x221)(lo)	|	VoC_shr32_ri(ACC0,0x10,DEFAULT)
0x64FE0221,	//0x130c		VoC_and32_rr(RL6,RL7,DEFAULT)	|	VoC_mac32_rd(REG5,0x221)(hi)
0x7F25DF02,	//0x130e		VoC_movreg32(ACC1,ACC0,DEFAULT)	|	VoC_pop32(REG45,IN_PARALLEL)
0x64FC930C,	//0x1310		VoC_and32_rr(ACC0,RL7,DEFAULT)	|	VoC_add32inc_rp(ACC0,ACC0,REG1,IN_PARALLEL)
0x64FD934D,	//0x1312		VoC_and32_rr(ACC1,RL7,DEFAULT)	|	VoC_add32inc_rp(ACC1,ACC1,REG1,IN_PARALLEL)
0x2008DF01,	//0x1314		VoC_lw16d_set_inc(REG0,0x19d2,0x2)(lo)	|	VoC_pop32(REG23,IN_PARALLEL)
0x200919D2,	//0x1316		VoC_lw16d_set_inc(REG1,0x19d3,0x2)(lo)	|	VoC_lw16d_set_inc(REG0,0x19d2,0x2)(hi)
0xDDC619D3,	//0x1318		VoC_sw32inc_p(RL6,REG0,DEFAULT)	|	VoC_lw16d_set_inc(REG1,0x19d3,0x2)(hi)
0xFF0F5DC1,	//0x131a		VoC_movreg32(RL7,REG23,IN_PARALLEL)	|	VoC_sw32inc_p(REG23,REG0,DEFAULT)
0xFC0F5DC3,	//0x131c		VoC_shru32_ri(RL7,0x1,IN_PARALLEL)	|	VoC_sw32inc_p(REG67,REG0,DEFAULT)
0xDDCCDDC2,	//0x131e		VoC_sw32inc_p(ACC0,REG1,DEFAULT)	|	VoC_sw32inc_p(REG45,REG0,DEFAULT)
0xDDCDDDCF,	//0x1320		VoC_sw32inc_p(ACC1,REG1,DEFAULT)	|	VoC_sw32inc_p(RL7,REG1,DEFAULT)
0xF0045DCF,	//0x1322		VoC_lw16i_short(INC0,0x1,IN_PARALLEL)	|	VoC_sw32inc_p(RL7,REG1,DEFAULT)
0x19D21500,	//0x1324		VoC_sw16_d(REG0,0x19d2)
0x19D31501,	//0x1326		VoC_sw16_d(REG1,0x19d3)
0xDFE9E580,	//0x1328		VoC_push16(RA,DEFAULT)	|	VoC_return
		//0x1329		CS_MC_prepare_block
0x207A6C10,	//0x132a		VoC_bez16_d(MC_prepare_block_list1,0x207a)
0xDF445FC4,	//0x132c		VoC_push32(ACC0,IN_PARALLEL)	|	VoC_push16(REG4,DEFAULT)
0x052E0720,	//0x132e		VoC_add16_rd(REG0,REG4,0x52e)
0xF00979FC,	//0x1330		VoC_lw16i_short(INC1,0x2,IN_PARALLEL)	|	VoC_shru16_ri(REG4,0xffffffff,DEFAULT)
0x05300721,	//0x1332		VoC_add16_rd(REG1,REG4,0x530)
0x40A00A8E,	//0x1334		VoC_lw16i(RL7_LO,0x40a0)
0x12B42B80,	//0x1336		VoC_jal(CS_MC_prepare_block_part)
0xDF045F84,	//0x1338		VoC_pop32(ACC0,IN_PARALLEL)	|	VoC_pop16(REG4,DEFAULT)
		//0x133a		MC_prepare_block_list1
0x207B6C0C,	//0x133a		VoC_bez16_d(MC_prepare_block_end,0x207b)
0x052F0720,	//0x133c		VoC_add16_rd(REG0,REG4,0x52f)
0xF00979FC,	//0x133e		VoC_lw16i_short(INC1,0x2,IN_PARALLEL)	|	VoC_shru16_ri(REG4,0xffffffff,DEFAULT)
0x05310721,	//0x1340		VoC_add16_rd(REG1,REG4,0x531)
0x41000A8E,	//0x1342		VoC_lw16i(RL7_LO,0x4100)
0x12B42B80,	//0x1344		VoC_jal(CS_MC_prepare_block_part)
		//0x1346		MC_prepare_block_end
0xFFC0DFA9,	//0x1346		VoC_NOP	|	VoC_pop16(RA,DEFAULT)
0xFFC06580,	//0x1348		VoC_NAD(IN_PARALLEL)	|	VoC_return
		//0x134a		CS_MC_prepare
0x19D61808,	//0x134a		VoC_lw16i_set_inc(REG0,0x19d6,0x2)
0x1AD61809,	//0x134c		VoC_lw16i_set_inc(REG1,0x1ad6,0x2)
0x207A1500,	//0x134e		VoC_sw16_d(REG0,0x207a)
0x19D21580,	//0x1350		VoC_sw32_d(REG01,0x19d2)
0x19D41580,	//0x1352		VoC_sw32_d(REG01,0x19d4)
0xDF405FE9,	//0x1354		VoC_push32(REG01,IN_PARALLEL)	|	VoC_push16(RA,DEFAULT)
0x02106E04,	//0x1356		VoC_bnez16_d(MC_prepare_go,0x210)
0x14302B00,	//0x1358		VoC_jump_lg(MC_prepare_end)
		//0x135a		MC_prepare_go
0x00400A85,	//0x135a		VoC_lw16i(REG5,0x40)
0x02392805,	//0x135c		VoC_and16_rd(REG5,0x239)
0x13B031C5,	//0x135e		VoC_bnez16_r(MC_prepare_8X8,REG5)
0x10000A81,	//0x1360		VoC_lw16i(REG1,0x1000)
0xF9F16020,	//0x1362		VoC_shru16_ri(REG1,0xfffffffe,IN_PARALLEL)	|	VoC_movreg16(REG0,REG1,DEFAULT)
0x02392801,	//0x1364		VoC_and16_rd(REG1,0x239)
0x02392800,	//0x1366		VoC_and16_rd(REG0,0x239)
0x207B1501,	//0x1368		VoC_sw16_d(REG1,0x207b)
0x207A1500,	//0x136a		VoC_sw16_d(REG0,0x207a)
0xE0C47F44,	//0x136c		VoC_lw16i_short(REG4,0xc,IN_PARALLEL)	|	VoC_lw32z(ACC0,DEFAULT)
0x2805F105,	//0x136e		VoC_and16_rd(REG5,0x239)(lo)	|	VoC_lw16i_short(REG5,0x8,DEFAULT)
0x31850239,	//0x1370		VoC_bez16_r(MC_prepare_16x8,REG5)(lo)	|	VoC_and16_rd(REG5,0x239)(hi)
0x7202137A,	//0x1372		VoC_lw16i_short(REG2,0x10,DEFAULT)	|	VoC_bez16_r(MC_prepare_16x8,REG5)(hi)
0xFFC0E103,	//0x1374		VoC_NAD	|	VoC_lw16i_short(REG3,0x10,IN_PARALLEL)
0x13292B80,	//0x1376		VoC_jal(CS_MC_prepare_block)
0x14302B00,	//0x1378		VoC_jump_lg(MC_prepare_end)
		//0x137a		MC_prepare_16x8
0x2805F205,	//0x137a		VoC_and16_rd(REG5,0x239)(lo)	|	VoC_lw16i_short(REG5,0x10,DEFAULT)
0x31850239,	//0x137c		VoC_bez16_r(MC_prepare_8X16,REG5)(lo)	|	VoC_and16_rd(REG5,0x239)(hi)
0x72021398,	//0x137e		VoC_lw16i_short(REG2,0x10,DEFAULT)	|	VoC_bez16_r(MC_prepare_8X16,REG5)(hi)
0xFFC0E083,	//0x1380		VoC_NAD	|	VoC_lw16i_short(REG3,0x8,IN_PARALLEL)
0x13292B80,	//0x1382		VoC_jal(CS_MC_prepare_block)
0x20000A81,	//0x1384		VoC_lw16i(REG1,0x2000)
0xF9F16020,	//0x1386		VoC_shru16_ri(REG1,0xfffffffe,IN_PARALLEL)	|	VoC_movreg16(REG0,REG1,DEFAULT)
0x02392801,	//0x1388		VoC_and16_rd(REG1,0x239)
0x02392800,	//0x138a		VoC_and16_rd(REG0,0x239)
0x207B1501,	//0x138c		VoC_sw16_d(REG1,0x207b)
0x207A1500,	//0x138e		VoC_sw16_d(REG0,0x207a)
0xF008F384,	//0x1390		VoC_lw16i_short(ACC0_LO,0x0,DEFAULT)	|	VoC_lw16i_short(REG4,0x1c,DEFAULT)
0xFFC07089,	//0x1392		VoC_NAD(IN_PARALLEL)	|	VoC_lw16i_short(ACC0_HI,0x4,DEFAULT)
0x13292B80,	//0x1394		VoC_jal(CS_MC_prepare_block)
0x14302B00,	//0x1396		VoC_jump_lg(MC_prepare_end)
		//0x1398		MC_prepare_8X16
0xE1037102,	//0x1398		VoC_lw16i_short(REG3,0x10,IN_PARALLEL)	|	VoC_lw16i_short(REG2,0x8,DEFAULT)
0x13292B80,	//0x139a		VoC_jal(CS_MC_prepare_block)
0x20000A81,	//0x139c		VoC_lw16i(REG1,0x2000)
0xF9F16020,	//0x139e		VoC_shru16_ri(REG1,0xfffffffe,IN_PARALLEL)	|	VoC_movreg16(REG0,REG1,DEFAULT)
0x02392801,	//0x13a0		VoC_and16_rd(REG1,0x239)
0x02392800,	//0x13a2		VoC_and16_rd(REG0,0x239)
0x207B1501,	//0x13a4		VoC_sw16_d(REG1,0x207b)
0x207A1500,	//0x13a6		VoC_sw16_d(REG0,0x207a)
0xF088F1C4,	//0x13a8		VoC_lw16i_short(ACC0_LO,0x4,DEFAULT)	|	VoC_lw16i_short(REG4,0xe,DEFAULT)
0xFFC07009,	//0x13aa		VoC_NAD(IN_PARALLEL)	|	VoC_lw16i_short(ACC0_HI,0x0,DEFAULT)
0x13292B80,	//0x13ac		VoC_jal(CS_MC_prepare_block)
0x14302B00,	//0x13ae		VoC_jump_lg(MC_prepare_end)
		//0x13b0		MC_prepare_8X8
0x00001804,	//0x13b0		VoC_lw16i_set_inc(REG0,0x0,0x1)
0x02350A81,	//0x13b2		VoC_lw16i(REG1,0x235)
0x207A1500,	//0x13b4		VoC_sw16_d(REG0,0x207a)
0x142F2C09,	//0x13b6		VoC_loop_i(0x1,0x4)
0xF6056004,	//0x13b8		VoC_movreg16(REG5,REG0,IN_PARALLEL)	|	VoC_movreg16(REG4,REG0,DEFAULT)
0x00011604,	//0x13ba		VoC_and16_ri(REG4,0x1)
0x00021605,	//0x13bc		VoC_and16_ri(REG5,0x2)
0xF9FD79F4,	//0x13be		VoC_shru16_ri(REG5,0xffffffff,IN_PARALLEL)	|	VoC_shru16_ri(REG4,0xfffffffe,DEFAULT)
0x00080A87,	//0x13c0		VoC_lw16i(REG7,0x8)
0xDF405816,	//0x13c2		VoC_push32(REG01,IN_PARALLEL)	|	VoC_lw16_p(REG6,REG1,DEFAULT)
0xF9F06437,	//0x13c4		VoC_shru16_ri(REG0,0xfffffffe,IN_PARALLEL)	|	VoC_and16_rr(REG7,REG6,DEFAULT)
0xFF145FC0,	//0x13c6		VoC_movreg32(ACC0,REG45,IN_PARALLEL)	|	VoC_push16(REG0,DEFAULT)
0x02480704,	//0x13c8		VoC_add16_rd(REG4,REG0,0x248)
0x10000A81,	//0x13ca		VoC_lw16i(REG1,0x1000)
0xF9F16020,	//0x13cc		VoC_shru16_ri(REG1,0xfffffffe,IN_PARALLEL)	|	VoC_movreg16(REG0,REG1,DEFAULT)
0x6430E431,	//0x13ce		VoC_and16_rr(REG0,REG6,DEFAULT)	|	VoC_and16_rr(REG1,REG6,DEFAULT)
0x1501D844,	//0x13d0		VoC_sw16_d(REG1,0x207b)(lo)	|	VoC_lw16_p(REG4,REG4,IN_PARALLEL)
0x1500207B,	//0x13d2		VoC_sw16_d(REG0,0x207a)(lo)	|	VoC_sw16_d(REG1,0x207b)(hi)
0x3187207A,	//0x13d4		VoC_bez16_r(MC_prepare_8x4,REG7)(lo)	|	VoC_sw16_d(REG0,0x207a)(hi)
0x710213DE,	//0x13d6		VoC_lw16i_short(REG2,0x8,DEFAULT)	|	VoC_bez16_r(MC_prepare_8x4,REG7)(hi)
0xFFC0E083,	//0x13d8		VoC_NAD	|	VoC_lw16i_short(REG3,0x8,IN_PARALLEL)
0x13292B80,	//0x13da		VoC_jal(CS_MC_prepare_block)
0x142B2B00,	//0x13dc		VoC_jump_lg(MC_prepare_i8_next_loop)
		//0x13de		MC_prepare_8x4
0x00100A87,	//0x13de		VoC_lw16i(REG7,0x10)
0x3187E437,	//0x13e0		VoC_bez16_r(MC_prepare_4x8,REG7)(lo)	|	VoC_and16_rr(REG7,REG6,DEFAULT)
0x710213F8,	//0x13e2		VoC_lw16i_short(REG2,0x8,DEFAULT)	|	VoC_bez16_r(MC_prepare_4x8,REG7)(hi)
0x5F44E043,	//0x13e4		VoC_push32(ACC0,DEFAULT)	|	VoC_lw16i_short(REG3,0x4,IN_PARALLEL)
0xFFC0DFC4,	//0x13e6		VoC_NAD	|	VoC_push16(REG4,IN_PARALLEL)
0x13292B80,	//0x13e8		VoC_jal(CS_MC_prepare_block)
0xDF845F01,	//0x13ea		VoC_pop16(REG4,IN_PARALLEL)	|	VoC_pop32(REG23,DEFAULT)
0x483D0724,	//0x13ec		VoC_add16_rd(REG4,REG4,0x483d)
0x482D071B,	//0x13ee		VoC_add16_rd(REG3,REG3,0x482d)
0x7102FF0C,	//0x13f0		VoC_lw16i_short(REG2,0x8,DEFAULT)	|	VoC_movreg32(ACC0,REG23,DEFAULT)
0xFFC0E043,	//0x13f2		VoC_NAD	|	VoC_lw16i_short(REG3,0x4,IN_PARALLEL)
0x13292B80,	//0x13f4		VoC_jal(CS_MC_prepare_block)
0x142B2B00,	//0x13f6		VoC_jump_lg(MC_prepare_i8_next_loop)
		//0x13f8		MC_prepare_4x8
0x00200A87,	//0x13f8		VoC_lw16i(REG7,0x20)
0x3187E437,	//0x13fa		VoC_bez16_r(MC_prepare_4x4,REG7)(lo)	|	VoC_and16_rr(REG7,REG6,DEFAULT)
0x70821410,	//0x13fc		VoC_lw16i_short(REG2,0x4,DEFAULT)	|	VoC_bez16_r(MC_prepare_4x4,REG7)(hi)
0x5F44E083,	//0x13fe		VoC_push32(ACC0,DEFAULT)	|	VoC_lw16i_short(REG3,0x8,IN_PARALLEL)
0xFFC0DFC4,	//0x1400		VoC_NAD	|	VoC_push16(REG4,IN_PARALLEL)
0x13292B80,	//0x1402		VoC_jal(CS_MC_prepare_block)
0xDF845F01,	//0x1404		VoC_pop16(REG4,IN_PARALLEL)	|	VoC_pop32(REG23,DEFAULT)
0x482C0724,	//0x1406		VoC_add16_rd(REG4,REG4,0x482c)
0x482D0712,	//0x1408		VoC_add16_rd(REG2,REG2,0x482d)
0x7082FF0C,	//0x140a		VoC_lw16i_short(REG2,0x4,DEFAULT)	|	VoC_movreg32(ACC0,REG23,DEFAULT)
0x2B80E083,	//0x140c		VoC_jal(CS_MC_prepare_block)(lo)	|	VoC_lw16i_short(REG3,0x8,IN_PARALLEL)
0xE5DC1329,	//0x140e		VoC_jump(MC_prepare_i8_next_loop)	|	VoC_jal(CS_MC_prepare_block)(hi)
		//0x1410		MC_prepare_4x4
0xDF447001,	//0x1410		VoC_push32(ACC0,IN_PARALLEL)	|	VoC_lw16i_short(REG1,0x0,DEFAULT)
0x14282C08,	//0x1412		VoC_loop_i(0x0,0x4)
0xF6236022,	//0x1414		VoC_movreg16(REG3,REG1,IN_PARALLEL)	|	VoC_movreg16(REG2,REG1,DEFAULT)
0x00011602,	//0x1416		VoC_and16_ri(REG2,0x1)
0x00021603,	//0x1418		VoC_and16_ri(REG3,0x2)
0xD62479FA,	//0x141a		VoC_lw16_sd(REG4,0x1,IN_PARALLEL)	|	VoC_shru16_ri(REG2,0xffffffff,DEFAULT)
0xC10C4864,	//0x141c		VoC_add16_rr(REG4,REG4,REG1,IN_PARALLEL)	|	VoC_add32_rr(ACC0,REG23,ACC0,DEFAULT)
0x02480724,	//0x141e		VoC_add16_rd(REG4,REG4,0x248)
0xDFC17082,	//0x1420		VoC_push16(REG1,IN_PARALLEL)	|	VoC_lw16i_short(REG2,0x4,DEFAULT)
0xE0435844,	//0x1422		VoC_lw16i_short(REG3,0x4,IN_PARALLEL)	|	VoC_lw16_p(REG4,REG4,DEFAULT)
0x13292B80,	//0x1424		VoC_jal(CS_MC_prepare_block)
0xD90C5F81,	//0x1426		VoC_lw32_sd(ACC0,0x0,IN_PARALLEL)	|	VoC_pop16(REG1,DEFAULT)
		//0x1428		VoC_endloop0
0x482C0709,	//0x1428		VoC_add16_rd(REG1,REG1,0x482c)
0xDF845F04,	//0x142a		VoC_pop16(REG4,IN_PARALLEL)	|	VoC_pop32(ACC0,DEFAULT)
		//0x142b		MC_prepare_i8_next_loop
0x0709DF00,	//0x142c		VoC_add16_rd(REG1,REG1,0x482c)(lo)	|	VoC_pop32(REG01,DEFAULT)
0xDE00482C,	//0x142e		VoC_inc_p(REG0,DEFAULT)	|	VoC_add16_rd(REG1,REG1,0x482c)(hi)
		//0x142f		VoC_endloop1
		//0x1430		MC_prepare_end
0xEFF95F01,	//0x1430		VoC_lw16i_short(ACC0_HI,0xffffffff,IN_PARALLEL)	|	VoC_pop32(REG23,DEFAULT)
0x19D21400,	//0x1432		VoC_lw16_d(REG0,0x19d2)
0x19D31401,	//0x1434		VoC_lw16_d(REG1,0x19d3)
0xDD8CDD84,	//0x1436		VoC_sw32_p(ACC0,REG1,DEFAULT)	|	VoC_sw32_p(ACC0,REG0,DEFAULT)
0x19D21502,	//0x1438		VoC_sw16_d(REG2,0x19d2)
0x19D31503,	//0x143a		VoC_sw16_d(REG3,0x19d3)
0x02982B80,	//0x143c		VoC_jal(DMA_In_Refer_UV)
0x02402B80,	//0x143e		VoC_jal(Dma_Last_Cmd_Wait)
0x02742B80,	//0x1440		VoC_jal(DMA_In_Refer_Y)
0xFFC0DFA9,	//0x1442		VoC_NOP	|	VoC_pop16(RA,DEFAULT)
0xDFE9E580,	//0x1444		VoC_push16(RA,DEFAULT)	|	VoC_return
		//0x1445		CS_hl_decode_mb_internal_prepare
0x7FFC0ACE,	//0x1446		VoC_lw16i(RL7_LO,0xfffc)
0x03FF0A8F,	//0x1448		VoC_lw16i(RL7_HI,0x3ff)
0xFF417085,	//0x144a		VoC_lw32z(REG23,IN_PARALLEL)	|	VoC_lw16i_short(REG5,0x4,DEFAULT)
0x02231404,	//0x144c		VoC_lw16_d(REG4,0x223)
0x02200822,	//0x144e		VoC_mult16_rd(REG2,REG4,0x220)
0x0712FF43,	//0x1450		VoC_add16_rd(REG2,REG2,0x222)(lo)	|	VoC_lw32z(REG67,DEFAULT)
0xFDE10222,	//0x1452		VoC_shru32_ri(REG23,0xfffffffc,DEFAULT)	|	VoC_add16_rd(REG2,REG2,0x222)(hi)
0x407E090C,	//0x1454		VoC_add32_rd(ACC0,REG23,0x407e)
0x02201406,	//0x1456		VoC_lw16_d(REG6,0x220)
0xC1AEFDF3,	//0x1458		VoC_add16_rr(REG6,REG6,REG5,DEFAULT)	|	VoC_shru32_ri(REG67,0xfffffffe,DEFAULT)
0xE4FCCB1C,	//0x145a		VoC_and32_rr(ACC0,RL7,DEFAULT)	|	VoC_sub32_rr(ACC0,ACC0,REG67,DEFAULT)
0x1584FF41,	//0x145c		VoC_sw32_d(ACC0,0x4160)(lo)	|	VoC_lw32z(REG23,DEFAULT)
0x08224160,	//0x145e		VoC_mult16_rd(REG2,REG4,0x221)(lo)	|	VoC_sw32_d(ACC0,0x4160)(hi)
0xFF430221,	//0x1460		VoC_lw32z(REG67,DEFAULT)	|	VoC_mult16_rd(REG2,REG4,0x221)(hi)
0x02220712,	//0x1462		VoC_add16_rd(REG2,REG2,0x222)
0x090CFDE9,	//0x1464		VoC_add32_rd(ACC0,REG23,0x4080)(lo)	|	VoC_shru32_ri(REG23,0xfffffffd,DEFAULT)
0x090D4080,	//0x1466		VoC_add32_rd(ACC1,REG23,0x4082)(lo)	|	VoC_add32_rd(ACC0,REG23,0x4080)(hi)
0x14064082,	//0x1468		VoC_lw16_d(REG6,0x221)(lo)	|	VoC_add32_rd(ACC1,REG23,0x4082)(hi)
0xFDF30221,	//0x146a		VoC_shru32_ri(REG67,0xfffffffe,DEFAULT)	|	VoC_lw16_d(REG6,0x221)(hi)
0xCB1CC1AE,	//0x146c		VoC_sub32_rr(ACC0,ACC0,REG67,DEFAULT)	|	VoC_add16_rr(REG6,REG6,REG5,DEFAULT)
0xCB5D64FC,	//0x146e		VoC_sub32_rr(ACC1,ACC1,REG67,IN_PARALLEL)	|	VoC_and32_rr(ACC0,RL7,DEFAULT)
0x1584E4FD,	//0x1470		VoC_sw32_d(ACC0,0x4162)(lo)	|	VoC_and32_rr(ACC1,RL7,DEFAULT)
0x15854162,	//0x1472		VoC_sw32_d(ACC1,0x4164)(lo)	|	VoC_sw32_d(ACC0,0x4162)(hi)
0x7F444164,	//0x1474		VoC_lw32z(ACC0,DEFAULT)	|	VoC_sw32_d(ACC1,0x4164)(hi)
0x0B2DE015,	//0x1476		VoC_sub16_dr(REG5,0x21a,REG5)(lo)	|	VoC_lw16i_short(REG5,0x1,IN_PARALLEL)
0x442D021A,	//0x1478		VoC_bne16_rd(mb_x_label_100,REG5,0x222)(lo)	|	VoC_sub16_dr(REG5,0x21a,REG5)(hi)
0x15840222,	//0x147a		VoC_sw32_d(ACC0,0x4166)(lo)	|	VoC_bne16_rd(mb_x_label_100,REG5,0x222)(hi)
0xFFC04166,	//0x147c		VoC_NAD	|	VoC_sw32_d(ACC0,0x4166)(hi)
		//0x147e		mb_x_label_100
0x41FA0A81,	//0x147e		VoC_lw16i(REG1,0x41fa)
0x022B070A,	//0x1480		VoC_add16_rd(REG2,REG1,0x22b)
0x482C0793,	//0x1482		VoC_sub16_rd(REG3,REG2,0x482c)
0x070AD824,	//0x1484		VoC_add16_rd(REG2,REG1,0x232)(lo)	|	VoC_lw16_p(REG4,REG2,DEFAULT)
0xD8350232,	//0x1486		VoC_lw16_p(REG5,REG3,DEFAULT)	|	VoC_add16_rd(REG2,REG1,0x232)(hi)
0x023D1504,	//0x1488		VoC_sw16_d(REG4,0x23d)
0x1505D824,	//0x148a		VoC_sw16_d(REG5,0x23e)(lo)	|	VoC_lw16_p(REG4,REG2,DEFAULT)
0x1504023E,	//0x148c		VoC_sw16_d(REG4,0x23f)(lo)	|	VoC_sw16_d(REG5,0x23e)(hi)
0xF004023F,	//0x148e		VoC_lw16i_short(REG4,0x0,DEFAULT)	|	VoC_sw16_d(REG4,0x23f)(hi)
0x023E1403,	//0x1490		VoC_lw16_d(REG3,0x23e)
0x0B7E2B80,	//0x1492		VoC_jal(CS_get_chroma_qp)
0x024A1502,	//0x1494		VoC_sw16_d(REG2,0x24a)
0x1403F024,	//0x1496		VoC_lw16_d(REG3,0x23e)(lo)	|	VoC_lw16i_short(REG4,0x1,DEFAULT)
0xFFC0023E,	//0x1498		VoC_NAD	|	VoC_lw16_d(REG3,0x23e)(hi)
0x0B7E2B80,	//0x149a		VoC_jal(CS_get_chroma_qp)
0x024B1502,	//0x149c		VoC_sw16_d(REG2,0x24b)
0x1403F004,	//0x149e		VoC_lw16_d(REG3,0x23f)(lo)	|	VoC_lw16i_short(REG4,0x0,DEFAULT)
0xFFC0023F,	//0x14a0		VoC_NAD	|	VoC_lw16_d(REG3,0x23f)(hi)
0x0B7E2B80,	//0x14a2		VoC_jal(CS_get_chroma_qp)
0x024C1502,	//0x14a4		VoC_sw16_d(REG2,0x24c)
0x1403F024,	//0x14a6		VoC_lw16_d(REG3,0x23f)(lo)	|	VoC_lw16i_short(REG4,0x1,DEFAULT)
0xFFC0023F,	//0x14a8		VoC_NAD	|	VoC_lw16_d(REG3,0x23f)(hi)
0x0B7E2B80,	//0x14aa		VoC_jal(CS_get_chroma_qp)
0x024D1502,	//0x14ac		VoC_sw16_d(REG2,0x24d)
0x0A81F024,	//0x14ae		VoC_lw16i(REG1,0x44bb)(lo)	|	VoC_lw16i_short(REG4,0x1,DEFAULT)
0x070A44BB,	//0x14b0		VoC_add16_rd(REG2,REG1,0x22b)(lo)	|	VoC_lw16i(REG1,0x44bb)(hi)
0xC2A3022B,	//0x14b2		VoC_sub16_rr(REG3,REG2,REG4,DEFAULT)	|	VoC_add16_rd(REG2,REG1,0x22b)(hi)
0x0232070C,	//0x14b4		VoC_add16_rd(REG4,REG1,0x232)
0xD833D822,	//0x14b6		VoC_lw16_p(REG3,REG3,DEFAULT)	|	VoC_lw16_p(REG2,REG2,DEFAULT)
0x1502D844,	//0x14b8		VoC_sw16_d(REG2,0x240)(lo)	|	VoC_lw16_p(REG4,REG4,DEFAULT)
0x15030240,	//0x14ba		VoC_sw16_d(REG3,0x241)(lo)	|	VoC_sw16_d(REG2,0x240)(hi)
0x15040241,	//0x14bc		VoC_sw16_d(REG4,0x242)(lo)	|	VoC_sw16_d(REG3,0x241)(hi)
0xF0240242,	//0x14be		VoC_lw16i_short(REG4,0x1,DEFAULT)	|	VoC_sw16_d(REG4,0x242)(hi)
0x05970A81,	//0x14c0		VoC_lw16i(REG1,0x597)
0x022B0B24,	//0x14c2		VoC_sub16_dr(REG4,0x22b,REG4)
0x0709C064,	//0x14c4		VoC_add16_rd(REG1,REG1,0x232)(lo)	|	VoC_add16_rr(REG4,REG1,REG4,DEFAULT)
0xD8440232,	//0x14c6		VoC_lw16_p(REG4,REG4,DEFAULT)	|	VoC_add16_rd(REG1,REG1,0x232)(hi)
0x1504D811,	//0x14c8		VoC_sw16_d(REG4,0x23a)(lo)	|	VoC_lw16_p(REG1,REG1,DEFAULT)
0xDFA9023A,	//0x14ca		VoC_pop16(RA,DEFAULT)	|	VoC_sw16_d(REG4,0x23a)(hi)
0x023B1501,	//0x14cc		VoC_sw16_d(REG1,0x23b)
0xFF43E580,	//0x14ce		VoC_lw32z(REG67,DEFAULT)	|	VoC_return
		//0x14cf		CS_xchg_mb_border
0x02226A03,	//0x14d0		VoC_bngtz16_d(CS_xchg_mb_border101,0x222)
0xF224F026,	//0x14d2		VoC_lw16i_short(REG4,0x11,DEFAULT)	|	VoC_lw16i_short(REG6,0x1,DEFAULT)
		//0x14d3		CS_xchg_mb_border101
0x02236A04,	//0x14d4		VoC_bngtz16_d(CS_xchg_mb_border102,0x223)
0xFFC07027,	//0x14d6		VoC_NAD(IN_PARALLEL)	|	VoC_lw16i_short(REG7,0x1,DEFAULT)
		//0x14d8		CS_xchg_mb_border102
0x0AFB1890,	//0x14d8		VoC_lw16i_set_inc(REG0,0xafb,0x14)
0x56E81805,	//0x14da		VoC_lw16i_set_inc(REG1,0x56e8,0x1)
0x14E231C7,	//0x14dc		VoC_bnez16_r(CS_xchg_mb_border103,REG7)
0xE1045E08,	//0x14de		VoC_lw16i_short(REG4,0x10,IN_PARALLEL)	|	VoC_inc_p(REG1,DEFAULT)
0x0B0F1890,	//0x14e0		VoC_lw16i_set_inc(REG0,0xb0f,0x14)
		//0x14e2		CS_xchg_mb_border103
0x14EE3186,	//0x14e2		VoC_bez16_r(CS_xchg_mb_border104,REG6)
0xF0077F01,	//0x14e4		VoC_lw16i_short(INC3,0x1,IN_PARALLEL)	|	VoC_movreg32(REG23,REG01,DEFAULT)
0xD8957292,	//0x14e6		VoC_lw16inc_p(REG5,REG1,IN_PARALLEL)	|	VoC_lw16i_short(INC2,0x14,DEFAULT)
0xD8846704,	//0x14e8		VoC_lw16inc_p(REG4,REG0,IN_PARALLEL)	|	VoC_loop_r_short(REG4,DEFAULT)
0xD8955884,	//0x14ea		VoC_lw16inc_p(REG5,REG1,IN_PARALLEL)	|	VoC_lw16inc_p(REG4,REG0,DEFAULT)
		//0x14ec		VoC_endloop0
0xDCA55CB4,	//0x14ec		VoC_sw16inc_p(REG5,REG2,IN_PARALLEL)	|	VoC_sw16inc_p(REG4,REG3,DEFAULT)
		//0x14ee		CS_xchg_mb_border104
0x15083187,	//0x14ee		VoC_bez16_r(CS_xchg_mb_border105,REG7)
0x0AFC1808,	//0x14f0		VoC_lw16i_set_inc(REG0,0xafc,0x2)
0x57301809,	//0x14f2		VoC_lw16i_set_inc(REG1,0x5730,0x2)
0x5740180B,	//0x14f4		VoC_lw16i_set_inc(REG3,0x5740,0x2)
0x0C74180A,	//0x14f6		VoC_lw16i_set_inc(REG2,0xc74,0x2)
0x0D040A84,	//0x14f8		VoC_lw16i(REG4,0xd04)
0x15062C05,	//0x14fa		VoC_loop_i(0x1,0x2)
0xE887FFC0,	//0x14fc		VoC_loop_i_short(0x4,DEFAULT)	|	VoC_NAD
0xD98F5986,	//0x14fe		VoC_lw32_p(RL7,REG1,IN_PARALLEL)	|	VoC_lw32_p(RL6,REG0,DEFAULT)
0xD99D5994,	//0x1500		VoC_lw32_p(ACC1,REG3,IN_PARALLEL)	|	VoC_lw32_p(ACC0,REG2,DEFAULT)
0xDDC75DCE,	//0x1502		VoC_sw32inc_p(RL7,REG0,IN_PARALLEL)	|	VoC_sw32inc_p(RL6,REG1,DEFAULT)
		//0x1504		VoC_endloop0
0xDDD55DDC,	//0x1504		VoC_sw32inc_p(ACC1,REG2,IN_PARALLEL)	|	VoC_sw32inc_p(ACC0,REG3,DEFAULT)
		//0x1506		VoC_endloop1
0xFFC06082,	//0x1506		VoC_NAD(IN_PARALLEL)	|	VoC_movreg16(REG2,REG4,DEFAULT)
		//0x1508		CS_xchg_mb_border105
0x15263186,	//0x1508		VoC_bez16_r(CS_xchg_mb_border107,REG6)
0x0C731830,	//0x150a		VoC_lw16i_set_inc(REG0,0xc73,0xc)
0x56F91805,	//0x150c		VoC_lw16i_set_inc(REG1,0x56f9,0x1)
0x0D031832,	//0x150e		VoC_lw16i_set_inc(REG2,0xd03,0xc)
0x57021807,	//0x1510		VoC_lw16i_set_inc(REG3,0x5702,0x1)
0x31C7F126,	//0x1512		VoC_bnez16_r(CS_xchg_mb_border106,REG7)(lo)	|	VoC_lw16i_short(REG6,0x9,DEFAULT)
0x5E08151C,	//0x1514		VoC_inc_p(REG1,DEFAULT)	|	VoC_bnez16_r(CS_xchg_mb_border106,REG7)(hi)
0x1830E086,	//0x1516		VoC_lw16i_set_inc(REG0,0xc7f,0xc)(lo)	|	VoC_lw16i_short(REG6,0x8,IN_PARALLEL)
0xDE180C7F,	//0x1518		VoC_inc_p(REG3,DEFAULT)	|	VoC_lw16i_set_inc(REG0,0xc7f,0xc)(hi)
0x0D0F1832,	//0x151a		VoC_lw16i_set_inc(REG2,0xd0f,0xc)
		//0x151c		CS_xchg_mb_border106
0xE787FFC0,	//0x151c		VoC_loop_r_short(REG6,DEFAULT)	|	VoC_NAD
0xD8155804,	//0x151e		VoC_lw16_p(REG5,REG1,IN_PARALLEL)	|	VoC_lw16_p(REG4,REG0,DEFAULT)
0xD8375826,	//0x1520		VoC_lw16_p(REG7,REG3,IN_PARALLEL)	|	VoC_lw16_p(REG6,REG2,DEFAULT)
0xDC855C94,	//0x1522		VoC_sw16inc_p(REG5,REG0,IN_PARALLEL)	|	VoC_sw16inc_p(REG4,REG1,DEFAULT)
		//0x1524		VoC_endloop0
0xDCA75CB6,	//0x1524		VoC_sw16inc_p(REG7,REG2,IN_PARALLEL)	|	VoC_sw16inc_p(REG6,REG3,DEFAULT)
		//0x1526		CS_xchg_mb_border107
0xFFC06580,	//0x1526		VoC_NAD(IN_PARALLEL)	|	VoC_return
		//0x1528		CS_backup_mb_border
0x0B1F1890,	//0x1528		VoC_lw16i_set_inc(REG0,0xb1f,0x14)
0x573F1822,	//0x152a		VoC_lw16i_set_inc(REG2,0x573f,0x8)
0x56E81805,	//0x152c		VoC_lw16i_set_inc(REG1,0x56e8,0x1)
0x180BD8A5,	//0x152e		VoC_lw16i_set_inc(REG3,0x5730,0x2)(lo)	|	VoC_lw16inc_p(REG5,REG2,DEFAULT)
0xDC955730,	//0x1530		VoC_sw16inc_p(REG5,REG1,DEFAULT)	|	VoC_lw16i_set_inc(REG3,0x5730,0x2)(hi)
0xD8876A03,	//0x1532		VoC_lw16inc_p(REG7,REG0,IN_PARALLEL)	|	VoC_loop_i_short(0x10,DEFAULT)
0xDC97D887,	//0x1534		VoC_sw16inc_p(REG7,REG1,DEFAULT)	|	VoC_lw16inc_p(REG7,REG0,DEFAULT)
		//0x1535		VoC_endloop0
0x0C3C1808,	//0x1536		VoC_lw16i_set_inc(REG0,0xc3c,0x2)
0x6903D8A5,	//0x1538		VoC_loop_i_short(0x8,DEFAULT)	|	VoC_lw16inc_p(REG5,REG2,DEFAULT)
0xD9C4D9C4,	//0x153a		VoC_lw32inc_p(ACC0,REG0,DEFAULT)	|	VoC_lw32inc_p(ACC0,REG0,IN_PARALLEL)
		//0x153c		VoC_endloop0
0x1830DDDC,	//0x153c		VoC_lw16i_set_inc(REG0,0xc87,0xc)(lo)	|	VoC_sw32inc_p(ACC0,REG3,DEFAULT)
0xDC950C87,	//0x153e		VoC_sw16inc_p(REG5,REG1,DEFAULT)	|	VoC_lw16i_set_inc(REG0,0xc87,0xc)(hi)
0xD8876903,	//0x1540		VoC_lw16inc_p(REG7,REG0,IN_PARALLEL)	|	VoC_loop_i_short(0x8,DEFAULT)
0xDC97D887,	//0x1542		VoC_sw16inc_p(REG7,REG1,DEFAULT)	|	VoC_lw16inc_p(REG7,REG0,DEFAULT)
		//0x1543		VoC_endloop0
0x1830D8A5,	//0x1544		VoC_lw16i_set_inc(REG0,0xd17,0xc)(lo)	|	VoC_lw16inc_p(REG5,REG2,DEFAULT)
0xDC950D17,	//0x1546		VoC_sw16inc_p(REG5,REG1,DEFAULT)	|	VoC_lw16i_set_inc(REG0,0xd17,0xc)(hi)
0xD8876903,	//0x1548		VoC_lw16inc_p(REG7,REG0,IN_PARALLEL)	|	VoC_loop_i_short(0x8,DEFAULT)
0xDC97D887,	//0x154a		VoC_sw16inc_p(REG7,REG1,DEFAULT)	|	VoC_lw16inc_p(REG7,REG0,DEFAULT)
		//0x154b		VoC_endloop0
0x0CD41808,	//0x154c		VoC_lw16i_set_inc(REG0,0xcd4,0x2)
0x15562C05,	//0x154e		VoC_loop_i(0x1,0x2)
0xD9C46883,	//0x1550		VoC_lw32inc_p(ACC0,REG0,IN_PARALLEL)	|	VoC_loop_i_short(0x4,DEFAULT)
0xDDDCD9C4,	//0x1552		VoC_sw32inc_p(ACC0,REG3,DEFAULT)	|	VoC_lw32inc_p(ACC0,REG0,DEFAULT)
		//0x1553		VoC_endloop0
0x0D641808,	//0x1554		VoC_lw16i_set_inc(REG0,0xd64,0x2)
		//0x1556		VoC_endloop1
0xE580FFC0,	//0x1556		VoC_return	|	VoC_NOP
		//0x1558		CS_filter_mb_fast
0xFFC06580,	//0x1558		VoC_NAD(IN_PARALLEL)	|	VoC_return
		//0x155a		CS_pred8x8_128_dc_c
0x00800A86,	//0x155a		VoC_lw16i(REG6,0x80)
0xE06460C7,	//0x155c		VoC_lw16i_short(REG4,0x6,IN_PARALLEL)	|	VoC_movreg16(REG7,REG6,DEFAULT)
0x15642C10,	//0x155e		VoC_loop_i(0x0,0x8)
0xDDCBDDCB,	//0x1560		VoC_sw32inc_p(REG67,REG1,DEFAULT)	|	VoC_sw32inc_p(REG67,REG1,DEFAULT)
0xC061DDCB,	//0x1562		VoC_add16_rr(REG1,REG1,REG4,DEFAULT)	|	VoC_sw32inc_p(REG67,REG1,DEFAULT)
		//0x1564		VoC_endloop0
0xE580DD8B,	//0x1564		VoC_return	|	VoC_sw32_p(REG67,REG1,DEFAULT)
		//0x1566		CS_ff_h264_idct_dc_add_c
0x48E3072D,	//0x1566		VoC_add16_rd(REG5,REG5,0x48e3)
0x482D0717,	//0x1568		VoC_add16_rd(REG7,REG2,0x482d)
0xF7846192,	//0x156a		VoC_movreg16(REG4,RL6_LO,IN_PARALLEL)	|	VoC_movreg16(INC2,RL6_LO,DEFAULT)
0xF8356892,	//0x156c		VoC_shr16_ri(REG5,0x6,IN_PARALLEL)	|	VoC_loop_i_short(0x4,DEFAULT)
0x4028D990,	//0x156e		VoC_add16_rr(REG0,REG0,REG5,DEFAULT)	|	VoC_lw32_p(REG01,REG2,DEFAULT)
0x59BFC069,	//0x1570		VoC_lw32_p(RL7,REG7,DEFAULT)	|	VoC_add16_rr(REG1,REG1,REG5,IN_PARALLEL)
0x7FC0DEF0,	//0x1572		VoC_NOP	|	VoC_clipu16_rr(REG0,REG6,IN_PARALLEL)
0x7F07DEF1,	//0x1574		VoC_movreg32(RL7,REG01,DEFAULT)	|	VoC_clipu16_rr(REG1,REG6,IN_PARALLEL)
0x4028FF38,	//0x1576		VoC_add16_rr(REG0,REG0,REG5,DEFAULT)	|	VoC_movreg32(REG01,RL7,IN_PARALLEL)
0x5DD7C069,	//0x1578		VoC_sw32inc_p(RL7,REG2,DEFAULT)	|	VoC_add16_rr(REG1,REG1,REG5,IN_PARALLEL)
0x7FC0DEF0,	//0x157a		VoC_NOP	|	VoC_clipu16_rr(REG0,REG6,IN_PARALLEL)
0xC1E7DEF1,	//0x157c		VoC_add16_rr(REG7,REG7,REG4,DEFAULT)	|	VoC_clipu16_rr(REG1,REG6,IN_PARALLEL)
		//0x157e		VoC_endloop0
0xE580DDB8,	//0x157e		VoC_return	|	VoC_sw32_p(REG01,REG7,DEFAULT)
		//0x1580		CS_chroma_dc_dequant_idct_c
0x5885D884,	//0x1580		VoC_lw16inc_p(REG5,REG0,DEFAULT)	|	VoC_lw16inc_p(REG4,REG0,DEFAULT)
0xD886F419,	//0x1582		VoC_lw16inc_p(REG6,REG0,DEFAULT)	|	VoC_lw16i_short(FORMAT32,0x3,IN_PARALLEL)
0x432BD807,	//0x1584		VoC_sub16_rr(REG3,REG4,REG5,DEFAULT)	|	VoC_lw16_p(REG7,REG0,DEFAULT)
0x43BDC12C,	//0x1586		VoC_sub16_rr(REG5,REG6,REG7,DEFAULT)	|	VoC_add16_rr(REG4,REG4,REG5,IN_PARALLEL)
0xE067C1BE,	//0x1588		VoC_movreg16(REG7,REG3,DEFAULT)	|	VoC_add16_rr(REG6,REG6,REG7,IN_PARALLEL)
0xF3C043E9,	//0x158a		VoC_lw16i_short(INC0,0xfffffff0,IN_PARALLEL)	|	VoC_sub16_rr(REG1,REG7,REG5,DEFAULT)
0xC331CC8C,	//0x158c		VoC_sub16_rr(REG1,REG4,REG6,DEFAULT)	|	VoC_multf32_rr(ACC0,REG2,REG1,DEFAULT)
0xC179CC8D,	//0x158e		VoC_add16_rr(REG1,REG5,REG7,DEFAULT)	|	VoC_multf32_rr(ACC1,REG2,REG1,DEFAULT)
0x4C8FDC88,	//0x1590		VoC_multf32_rr(RL7,REG2,REG1,DEFAULT)	|	VoC_sw16inc_p(ACC0_LO,REG0,DEFAULT)
0xC131DC8A,	//0x1592		VoC_add16_rr(REG1,REG4,REG6,DEFAULT)	|	VoC_sw16inc_p(ACC1_LO,REG0,IN_PARALLEL)
0xDC8ECC8C,	//0x1594		VoC_sw16inc_p(RL7_LO,REG0,DEFAULT)	|	VoC_multf32_rr(ACC0,REG2,REG1,DEFAULT)
0xDC08F019,	//0x1596		VoC_sw16_p(ACC0_LO,REG0,DEFAULT)	|	VoC_lw16i_short(FORMAT32,0x0,DEFAULT)
0xF193E580,	//0x1598		VoC_lw16i_short(INC3,0xc,DEFAULT)	|	VoC_return
		//0x1599		CS_pred8x8_left_dc_c
0x482C0783,	//0x159a		VoC_sub16_rd(REG3,REG0,0x482c)
0xE0266882,	//0x159c		VoC_lw16i_short(REG6,0x2,IN_PARALLEL)	|	VoC_loop_i_short(0x4,DEFAULT)
		//0x159e		VoC_endloop0
0x6882839E,	//0x159e		VoC_loop_i_short(0x4,DEFAULT)	|	VoC_add16inc_rp(REG6,REG6,REG3,DEFAULT)
0x829AE022,	//0x15a0		VoC_add16inc_rp(REG2,REG2,REG3,DEFAULT)	|	VoC_lw16i_short(REG2,0x2,IN_PARALLEL)
		//0x15a1		VoC_endloop0
0xF9127916,	//0x15a2		VoC_shru16_ri(REG2,0x2,IN_PARALLEL)	|	VoC_shru16_ri(REG6,0x2,DEFAULT)
0xF64360C7,	//0x15a4		VoC_movreg16(REG3,REG2,IN_PARALLEL)	|	VoC_movreg16(REG7,REG6,DEFAULT)
0x2C05F0C4,	//0x15a6		VoC_loop_i(0x1,0x2)(lo)	|	VoC_lw16i_short(REG4,0x6,DEFAULT)
0xE88515AF,	//0x15a8		VoC_loop_i_short(0x4,DEFAULT)	|	VoC_loop_i(0x1,0x2)(hi)
0xDDC3DDC3,	//0x15aa		VoC_sw32inc_p(REG67,REG0,DEFAULT)	|	VoC_sw32inc_p(REG67,REG0,DEFAULT)
0xC020DDC3,	//0x15ac		VoC_add16_rr(REG0,REG0,REG4,DEFAULT)	|	VoC_sw32inc_p(REG67,REG0,DEFAULT)
		//0x15ae		VoC_endloop0
0xFF0BDD83,	//0x15ae		VoC_movreg32(REG67,REG23,DEFAULT)	|	VoC_sw32_p(REG67,REG0,DEFAULT)
		//0x15af		VoC_endloop1
0xFFC06580,	//0x15b0		VoC_NAD(IN_PARALLEL)	|	VoC_return
		//0x15b2		CS_pred16x16_left_dc_c
0x0B101808,	//0x15b2		VoC_lw16i_set_inc(REG0,0xb10,0x2)
0x0B0F1892,	//0x15b4		VoC_lw16i_set_inc(REG2,0xb0f,0x14)
0xE0866A02,	//0x15b6		VoC_lw16i_short(REG6,0x8,IN_PARALLEL)	|	VoC_loop_i_short(0x10,DEFAULT)
		//0x15b8		VoC_endloop0
0xF9268396,	//0x15b8		VoC_shru16_ri(REG6,0x4,DEFAULT)	|	VoC_add16inc_rp(REG6,REG6,REG2,DEFAULT)
0xEA0AE0C7,	//0x15ba		VoC_loop_i_short(0x10,DEFAULT)	|	VoC_movreg16(REG7,REG6,DEFAULT)
0xDDC3DDC3,	//0x15bc		VoC_sw32inc_p(REG67,REG0,DEFAULT)	|	VoC_sw32inc_p(REG67,REG0,DEFAULT)
0xDDC3DDC3,	//0x15be		VoC_sw32inc_p(REG67,REG0,DEFAULT)	|	VoC_sw32inc_p(REG67,REG0,DEFAULT)
0xDDC3DDC3,	//0x15c0		VoC_sw32inc_p(REG67,REG0,DEFAULT)	|	VoC_sw32inc_p(REG67,REG0,DEFAULT)
0x0700DDC3,	//0x15c2		VoC_add16_rd(REG0,REG0,0x4830)(lo)	|	VoC_sw32inc_p(REG67,REG0,DEFAULT)
0xDD834830,	//0x15c4		VoC_sw32_p(REG67,REG0,DEFAULT)	|	VoC_add16_rd(REG0,REG0,0x4830)(hi)
		//0x15c5		VoC_endloop0
0xFFC06580,	//0x15c6		VoC_NAD(IN_PARALLEL)	|	VoC_return
		//0x15c8		CS_pred16x16_128_dc_c
0x00800A86,	//0x15c8		VoC_lw16i(REG6,0x80)
0xEA0AE0C7,	//0x15ca		VoC_loop_i_short(0x10,DEFAULT)	|	VoC_movreg16(REG7,REG6,DEFAULT)
0xDDC3DDC3,	//0x15cc		VoC_sw32inc_p(REG67,REG0,DEFAULT)	|	VoC_sw32inc_p(REG67,REG0,DEFAULT)
0xDDC3DDC3,	//0x15ce		VoC_sw32inc_p(REG67,REG0,DEFAULT)	|	VoC_sw32inc_p(REG67,REG0,DEFAULT)
0xDDC3DDC3,	//0x15d0		VoC_sw32inc_p(REG67,REG0,DEFAULT)	|	VoC_sw32inc_p(REG67,REG0,DEFAULT)
0x0700DDC3,	//0x15d2		VoC_add16_rd(REG0,REG0,0x4830)(lo)	|	VoC_sw32inc_p(REG67,REG0,DEFAULT)
0xDD834830,	//0x15d4		VoC_sw32_p(REG67,REG0,DEFAULT)	|	VoC_add16_rd(REG0,REG0,0x4830)(hi)
		//0x15d5		VoC_endloop0
0xFFC06580,	//0x15d6		VoC_NAD(IN_PARALLEL)	|	VoC_return
		//0x15d8		CS_pred8x8_top_dc_c
0x000C1809,	//0x15d8		VoC_lw16i_set_inc(REG1,0xc,0x2)
0xFFC0C209,	//0x15da		VoC_NOP	|	VoC_sub16_rr(REG1,REG0,REG1,DEFAULT)
0x59C9D9CB,	//0x15dc		VoC_lw32inc_p(REG23,REG1,DEFAULT)	|	VoC_lw32inc_p(REG67,REG1,DEFAULT)
0x59CAC1BE,	//0x15de		VoC_lw32inc_p(REG45,REG1,DEFAULT)	|	VoC_add16_rr(REG6,REG6,REG7,IN_PARALLEL)
0x59C9C09F,	//0x15e0		VoC_lw32inc_p(REG23,REG1,DEFAULT)	|	VoC_add16_rr(REG7,REG2,REG3,IN_PARALLEL)
0x41BEC12C,	//0x15e2		VoC_add16_rr(REG6,REG6,REG7,DEFAULT)	|	VoC_add16_rr(REG4,REG4,REG5,IN_PARALLEL)
0x412CC09D,	//0x15e4		VoC_add16_rr(REG4,REG4,REG5,DEFAULT)	|	VoC_add16_rr(REG5,REG2,REG3,IN_PARALLEL)
0x40A4E022,	//0x15e6		VoC_add16_rr(REG4,REG2,REG4,DEFAULT)	|	VoC_lw16i_short(REG2,0x2,IN_PARALLEL)
0x7914C0B6,	//0x15e8		VoC_shru16_ri(REG4,0x2,DEFAULT)	|	VoC_add16_rr(REG6,REG2,REG6,IN_PARALLEL)
0x60C7F916,	//0x15ea		VoC_movreg16(REG7,REG6,DEFAULT)	|	VoC_shru16_ri(REG6,0x2,IN_PARALLEL)
0x6906F685,	//0x15ec		VoC_loop_i_short(0x8,DEFAULT)	|	VoC_movreg16(REG5,REG4,IN_PARALLEL)
0xDDC3E061,	//0x15ee		VoC_sw32inc_p(REG67,REG0,DEFAULT)	|	VoC_lw16i_short(REG1,0x6,IN_PARALLEL)
0xDDC2DDC3,	//0x15f0		VoC_sw32inc_p(REG45,REG0,DEFAULT)	|	VoC_sw32inc_p(REG67,REG0,DEFAULT)
0xDD82C008,	//0x15f2		VoC_sw32_p(REG45,REG0,DEFAULT)	|	VoC_add16_rr(REG0,REG0,REG1,DEFAULT)
		//0x15f3		VoC_endloop0
0xFFC06580,	//0x15f4		VoC_NAD(IN_PARALLEL)	|	VoC_return
		//0x15f6		CS_pred8x8_dc_c
0x000C1809,	//0x15f6		VoC_lw16i_set_inc(REG1,0xc,0x2)
0xFFC0C209,	//0x15f8		VoC_NOP	|	VoC_sub16_rr(REG1,REG0,REG1,DEFAULT)
0x59C9D9CB,	//0x15fa		VoC_lw32inc_p(REG23,REG1,DEFAULT)	|	VoC_lw32inc_p(REG67,REG1,DEFAULT)
0x59CAC1BE,	//0x15fc		VoC_lw32inc_p(REG45,REG1,DEFAULT)	|	VoC_add16_rr(REG6,REG6,REG7,IN_PARALLEL)
0x59C9C09F,	//0x15fe		VoC_lw32inc_p(REG23,REG1,DEFAULT)	|	VoC_add16_rr(REG7,REG2,REG3,IN_PARALLEL)
0x41BEC12C,	//0x1600		VoC_add16_rr(REG6,REG6,REG7,DEFAULT)	|	VoC_add16_rr(REG4,REG4,REG5,IN_PARALLEL)
0x412CC09D,	//0x1602		VoC_add16_rr(REG4,REG4,REG5,DEFAULT)	|	VoC_add16_rr(REG5,REG2,REG3,IN_PARALLEL)
0x40A4E022,	//0x1604		VoC_add16_rr(REG4,REG2,REG4,DEFAULT)	|	VoC_lw16i_short(REG2,0x2,IN_PARALLEL)
0x608CC0B6,	//0x1606		VoC_movreg16(RL6_LO,REG4,DEFAULT)	|	VoC_add16_rr(REG6,REG2,REG6,IN_PARALLEL)
0xE087F914,	//0x1608		VoC_movreg16(REG7,REG4,DEFAULT)	|	VoC_shru16_ri(REG4,0x2,IN_PARALLEL)
0xF6896088,	//0x160a		VoC_movreg16(ACC0_HI,REG4,IN_PARALLEL)	|	VoC_movreg16(ACC0_LO,REG4,DEFAULT)
0x482C0782,	//0x160c		VoC_sub16_rd(REG2,REG0,0x482c)
0xE881F192,	//0x160e		VoC_loop_i_short(0x4,DEFAULT)	|	VoC_lw16i_short(INC2,0xc,DEFAULT)
		//0x1610		VoC_endloop0
0xFFC08396,	//0x1610		VoC_NAD	|	VoC_add16inc_rp(REG6,REG6,REG2,DEFAULT)
0xE0276882,	//0x1612		VoC_lw16i_short(REG7,0x2,IN_PARALLEL)	|	VoC_loop_i_short(0x4,DEFAULT)
		//0x1614		VoC_endloop0
0xE02303D7,	//0x1614		VoC_lw16i_short(REG3,0x2,IN_PARALLEL)	|	VoC_add16inc_rp(REG7,REG7,REG2,DEFAULT)
0x6184C0F6,	//0x1616		VoC_movreg16(REG4,RL6_LO,DEFAULT)	|	VoC_add16_rr(REG6,REG3,REG6,DEFAULT)
0x41E5F91E,	//0x1618		VoC_add16_rr(REG5,REG7,REG4,DEFAULT)	|	VoC_shru16_ri(REG6,0x3,IN_PARALLEL)
0xF91DF917,	//0x161a		VoC_shru16_ri(REG5,0x3,DEFAULT)	|	VoC_shru16_ri(REG7,0x2,IN_PARALLEL)
0xF6AD60AC,	//0x161c		VoC_movreg16(RL6_HI,REG5,IN_PARALLEL)	|	VoC_movreg16(RL6_LO,REG5,DEFAULT)
0xF6CF60CE,	//0x161e		VoC_movreg16(RL7_HI,REG6,IN_PARALLEL)	|	VoC_movreg16(RL7_LO,REG6,DEFAULT)
0xF0C5E0E6,	//0x1620		VoC_lw16i_short(REG5,0x6,DEFAULT)	|	VoC_movreg16(REG6,REG7,DEFAULT)
0x162A2C05,	//0x1622		VoC_loop_i(0x1,0x2)
0xDDC7E885,	//0x1624		VoC_sw32inc_p(RL7,REG0,DEFAULT)	|	VoC_loop_i_short(0x4,DEFAULT)
0xDDC4DDC7,	//0x1626		VoC_sw32inc_p(ACC0,REG0,DEFAULT)	|	VoC_sw32inc_p(RL7,REG0,DEFAULT)
0xDD84C028,	//0x1628		VoC_sw32_p(ACC0,REG0,DEFAULT)	|	VoC_add16_rr(REG0,REG0,REG5,DEFAULT)
		//0x1629		VoC_endloop0
		//0x162a		VoC_endloop1
0xFF347F1F,	//0x162a		VoC_movreg32(ACC0,RL6,IN_PARALLEL)	|	VoC_movreg32(RL7,REG67,DEFAULT)
0xF021E580,	//0x162c		VoC_lw16i_short(REG1,0x1,DEFAULT)	|	VoC_return
		//0x162d		CS_pred8x8_horizontal_c
0xC208F0A6,	//0x162e		VoC_sub16_rr(REG0,REG0,REG1,DEFAULT)	|	VoC_lw16i_short(REG6,0x5,DEFAULT)
0xE909FFC0,	//0x1630		VoC_loop_i_short(0x8,DEFAULT)	|	VoC_NAD
0xC0085804,	//0x1632		VoC_add16_rr(REG0,REG0,REG1,IN_PARALLEL)	|	VoC_lw16_p(REG4,REG0,DEFAULT)
0xFFC0E085,	//0x1634		VoC_NOP	|	VoC_movreg16(REG5,REG4,DEFAULT)
0xDDC2DDC2,	//0x1636		VoC_sw32inc_p(REG45,REG0,DEFAULT)	|	VoC_sw32inc_p(REG45,REG0,DEFAULT)
0xC030DDC2,	//0x1638		VoC_add16_rr(REG0,REG0,REG6,DEFAULT)	|	VoC_sw32inc_p(REG45,REG0,DEFAULT)
		//0x163a		VoC_endloop0
0xE580DD82,	//0x163a		VoC_return	|	VoC_sw32_p(REG45,REG0,DEFAULT)
		//0x163c		CS_pred8x8_plane_c
0x000D1805,	//0x163c		VoC_lw16i_set_inc(REG1,0xd,0x1)
0xF066C209,	//0x163e		VoC_lw16i_short(REG6,0x3,DEFAULT)	|	VoC_sub16_rr(REG1,REG0,REG1,DEFAULT)
0x79F4D894,	//0x1640		VoC_shru16_ri(REG4,0xfffffffe,DEFAULT)	|	VoC_lw16inc_p(REG4,REG1,DEFAULT)
0xD8958B8B,	//0x1642		VoC_lw16inc_p(REG5,REG1,DEFAULT)	|	VoC_mult16inc_rp(REG3,REG6,REG1,IN_PARALLEL)
0xC12CF9FD,	//0x1644		VoC_add16_rr(REG4,REG4,REG5,DEFAULT)	|	VoC_shru16_ri(REG5,0xffffffff,DEFAULT)
0xD895411C,	//0x1646		VoC_lw16inc_p(REG5,REG1,IN_PARALLEL)	|	VoC_add16_rr(REG4,REG4,REG3,DEFAULT)
0xC12CDE08,	//0x1648		VoC_add16_rr(REG4,REG4,REG5,DEFAULT)	|	VoC_inc_p(REG1,DEFAULT)
0xD893D895,	//0x164a		VoC_lw16inc_p(REG3,REG1,DEFAULT)	|	VoC_lw16inc_p(REG5,REG1,DEFAULT)
0x8B8A79FB,	//0x164c		VoC_mult16inc_rp(REG2,REG6,REG1,IN_PARALLEL)	|	VoC_shru16_ri(REG3,0xffffffff,DEFAULT)
0xD89340ED,	//0x164e		VoC_lw16inc_p(REG3,REG1,IN_PARALLEL)	|	VoC_add16_rr(REG5,REG3,REG5,DEFAULT)
0x40EDF9F3,	//0x1650		VoC_add16_rr(REG5,REG3,REG5,DEFAULT)	|	VoC_shru16_ri(REG3,0xfffffffe,DEFAULT)
0x40ADE0C6,	//0x1652		VoC_add16_rr(REG5,REG2,REG5,DEFAULT)	|	VoC_lw16i_short(REG6,0xc,IN_PARALLEL)
0x4365E011,	//0x1654		VoC_sub16_rr(REG5,REG5,REG4,DEFAULT)	|	VoC_lw16i_short(REG1,0x1,IN_PARALLEL)
0xF9FEF6C7,	//0x1656		VoC_shru16_ri(REG6,0xffffffff,DEFAULT)	|	VoC_movreg16(REG7,REG6,IN_PARALLEL)
0x428AC032,	//0x1658		VoC_sub16_rr(REG2,REG2,REG1,DEFAULT)	|	VoC_add16_rr(REG2,REG0,REG6,DEFAULT)
0x688BE004,	//0x165a		VoC_loop_i_short(0x4,DEFAULT)	|	VoC_lw16i_short(REG4,0x0,IN_PARALLEL)
0xD826C0B3,	//0x165c		VoC_lw16_p(REG6,REG2,DEFAULT)	|	VoC_add16_rr(REG3,REG2,REG6,IN_PARALLEL)
0xC58EC2BA,	//0x165e		VoC_mult16_rr(REG6,REG6,REG1,DEFAULT)	|	VoC_sub16_rr(REG2,REG2,REG7,DEFAULT)
0x4334FFC0,	//0x1660		VoC_sub16_rr(REG4,REG4,REG6,DEFAULT)	|	VoC_NOP
0xC0FBD836,	//0x1662		VoC_add16_rr(REG3,REG3,REG7,DEFAULT)	|	VoC_lw16_p(REG6,REG3,IN_PARALLEL)
0xE0CDC58E,	//0x1664		VoC_movreg16(RL6_HI,REG6,DEFAULT)	|	VoC_mult16_rr(REG6,REG6,REG1,DEFAULT)
		//0x1666		VoC_endloop0
0xDE084134,	//0x1666		VoC_inc_p(REG1,IN_PARALLEL)	|	VoC_add16_rr(REG4,REG4,REG6,DEFAULT)
0xE1017226,	//0x1668		VoC_lw16i_short(REG1,0x10,IN_PARALLEL)	|	VoC_lw16i_short(REG6,0x11,DEFAULT)
0xC5344575,	//0x166a		VoC_mult16_rr(REG4,REG4,REG6,IN_PARALLEL)	|	VoC_mult16_rr(REG5,REG5,REG6,DEFAULT)
0x40B2F186,	//0x166c		VoC_add16_rr(REG2,REG2,REG6,DEFAULT)	|	VoC_lw16i_short(REG6,0xc,DEFAULT)
0x40B2E086,	//0x166e		VoC_add16_rr(REG2,REG2,REG6,DEFAULT)	|	VoC_lw16i_short(REG6,0x8,IN_PARALLEL)
0x414DF7A3,	//0x1670		VoC_add16_rr(REG5,REG5,REG1,DEFAULT)	|	VoC_movreg16(REG3,RL6_HI,IN_PARALLEL)
0x5822C10C,	//0x1672		VoC_lw16_p(REG2,REG2,DEFAULT)	|	VoC_add16_rr(REG4,REG4,REG1,IN_PARALLEL)
0xF82CF82D,	//0x1674		VoC_shr16_ri(REG4,0x5,DEFAULT)	|	VoC_shr16_ri(REG5,0x5,IN_PARALLEL)
0x40B2F026,	//0x1676		VoC_add16_rr(REG2,REG2,REG6,DEFAULT)	|	VoC_lw16i_short(REG6,0x1,DEFAULT)
0x409AE036,	//0x1678		VoC_add16_rr(REG2,REG2,REG3,DEFAULT)	|	VoC_lw16i_short(REG6,0x3,IN_PARALLEL)
0x44F3C12B,	//0x167a		VoC_mult16_rr(REG3,REG3,REG6,DEFAULT)	|	VoC_add16_rr(REG3,REG4,REG5,IN_PARALLEL)
0xFFC0C48A,	//0x167c		VoC_NOP	|	VoC_mult16_rr(REG2,REG2,REG1,IN_PARALLEL)
0x0A86C299,	//0x167e		VoC_lw16i(REG6,0xff)(lo)	|	VoC_sub16_rr(REG1,REG2,REG3,DEFAULT)
0xFFC000FF,	//0x1680		VoC_NAD	|	VoC_lw16i(REG6,0xff)(hi)
0x16B42C10,	//0x1682		VoC_loop_i(0x0,0x8)
0xDFC46023,	//0x1684		VoC_push16(REG4,IN_PARALLEL)	|	VoC_movreg16(REG3,REG1,DEFAULT)
0x406AF82B,	//0x1686		VoC_add16_rr(REG2,REG1,REG5,DEFAULT)	|	VoC_shr16_ri(REG3,0x5,DEFAULT)
0x6044DEF3,	//0x1688		VoC_movreg16(REG4,REG2,DEFAULT)	|	VoC_clipu16_rr(REG3,REG6,IN_PARALLEL)
0xE068F82A,	//0x168a		VoC_movreg16(ACC0_LO,REG3,DEFAULT)	|	VoC_shr16_ri(REG2,0x5,IN_PARALLEL)
0xDEF2412B,	//0x168c		VoC_clipu16_rr(REG2,REG6,IN_PARALLEL)	|	VoC_add16_rr(REG3,REG4,REG5,DEFAULT)
0xF6646049,	//0x168e		VoC_movreg16(REG4,REG3,IN_PARALLEL)	|	VoC_movreg16(ACC0_HI,REG2,DEFAULT)
0x412AF82B,	//0x1690		VoC_add16_rr(REG2,REG4,REG5,DEFAULT)	|	VoC_shr16_ri(REG3,0x5,DEFAULT)
0x6044DEF3,	//0x1692		VoC_movreg16(REG4,REG2,DEFAULT)	|	VoC_clipu16_rr(REG3,REG6,IN_PARALLEL)
0xE06AF82A,	//0x1694		VoC_movreg16(ACC1_LO,REG3,DEFAULT)	|	VoC_shr16_ri(REG2,0x5,IN_PARALLEL)
0xDEF2412B,	//0x1696		VoC_clipu16_rr(REG2,REG6,IN_PARALLEL)	|	VoC_add16_rr(REG3,REG4,REG5,DEFAULT)
0xF664604B,	//0x1698		VoC_movreg16(REG4,REG3,IN_PARALLEL)	|	VoC_movreg16(ACC1_HI,REG2,DEFAULT)
0x412AF92B,	//0x169a		VoC_add16_rr(REG2,REG4,REG5,DEFAULT)	|	VoC_shru16_ri(REG3,0x5,DEFAULT)
0x6044DEF3,	//0x169c		VoC_movreg16(REG4,REG2,DEFAULT)	|	VoC_clipu16_rr(REG3,REG6,IN_PARALLEL)
0xE06CF92A,	//0x169e		VoC_movreg16(RL6_LO,REG3,DEFAULT)	|	VoC_shru16_ri(REG2,0x5,IN_PARALLEL)
0xDEF2412B,	//0x16a0		VoC_clipu16_rr(REG2,REG6,IN_PARALLEL)	|	VoC_add16_rr(REG3,REG4,REG5,DEFAULT)
0xF664604D,	//0x16a2		VoC_movreg16(REG4,REG3,IN_PARALLEL)	|	VoC_movreg16(RL6_HI,REG2,DEFAULT)
0x412AF82B,	//0x16a4		VoC_add16_rr(REG2,REG4,REG5,DEFAULT)	|	VoC_shr16_ri(REG3,0x5,DEFAULT)
0x6044DEF3,	//0x16a6		VoC_movreg16(REG4,REG2,DEFAULT)	|	VoC_clipu16_rr(REG3,REG6,IN_PARALLEL)
0xE06EF82A,	//0x16a8		VoC_movreg16(RL7_LO,REG3,DEFAULT)	|	VoC_shr16_ri(REG2,0x5,IN_PARALLEL)
0xDEF2412B,	//0x16aa		VoC_clipu16_rr(REG2,REG6,IN_PARALLEL)	|	VoC_add16_rr(REG3,REG4,REG5,DEFAULT)
0xF664604F,	//0x16ac		VoC_movreg16(REG4,REG3,IN_PARALLEL)	|	VoC_movreg16(RL7_HI,REG2,DEFAULT)
0xDDC5DDC4,	//0x16ae		VoC_sw32inc_p(ACC1,REG0,DEFAULT)	|	VoC_sw32inc_p(ACC0,REG0,DEFAULT)
0xDD87DDC6,	//0x16b0		VoC_sw32_p(RL7,REG0,DEFAULT)	|	VoC_sw32inc_p(RL6,REG0,DEFAULT)
0xE0635F84,	//0x16b2		VoC_lw16i_short(REG3,0x6,IN_PARALLEL)	|	VoC_pop16(REG4,DEFAULT)
		//0x16b4		VoC_endloop0
0xC0184061,	//0x16b4		VoC_add16_rr(REG0,REG0,REG3,IN_PARALLEL)	|	VoC_add16_rr(REG1,REG1,REG4,DEFAULT)
0xFFC06580,	//0x16b6		VoC_NAD(IN_PARALLEL)	|	VoC_return
		//0x16b8		CS_pred8x8_vertical_c
0x000C1809,	//0x16b8		VoC_lw16i_set_inc(REG1,0xc,0x2)
0xF0C7C209,	//0x16ba		VoC_lw16i_short(REG7,0x6,DEFAULT)	|	VoC_sub16_rr(REG1,REG0,REG1,DEFAULT)
0xD9CCD9CA,	//0x16bc		VoC_lw32inc_p(ACC0,REG1,DEFAULT)	|	VoC_lw32inc_p(REG45,REG1,DEFAULT)
0xD9CFD9CE,	//0x16be		VoC_lw32inc_p(RL7,REG1,DEFAULT)	|	VoC_lw32inc_p(RL6,REG1,DEFAULT)
0xDDC2E905,	//0x16c0		VoC_sw32inc_p(REG45,REG0,DEFAULT)	|	VoC_loop_i_short(0x8,DEFAULT)
0xDDC6DDC4,	//0x16c2		VoC_sw32inc_p(RL6,REG0,DEFAULT)	|	VoC_sw32inc_p(ACC0,REG0,DEFAULT)
0xDD87C038,	//0x16c4		VoC_sw32_p(RL7,REG0,DEFAULT)	|	VoC_add16_rr(REG0,REG0,REG7,DEFAULT)
		//0x16c5		VoC_endloop0
0xFFC06580,	//0x16c6		VoC_NAD(IN_PARALLEL)	|	VoC_return
		//0x16c8		CS_pred16x16_vertical_c
0x0B101808,	//0x16c8		VoC_lw16i_set_inc(REG0,0xb10,0x2)
0x0AFC1809,	//0x16ca		VoC_lw16i_set_inc(REG1,0xafc,0x2)
0x0B180A84,	//0x16cc		VoC_lw16i(REG4,0xb18)
0x16DB2C05,	//0x16ce		VoC_loop_i(0x1,0x2)
0xD9CDD9CC,	//0x16d0		VoC_lw32inc_p(ACC1,REG1,DEFAULT)	|	VoC_lw32inc_p(ACC0,REG1,DEFAULT)
0xD9CFD9CE,	//0x16d2		VoC_lw32inc_p(RL7,REG1,DEFAULT)	|	VoC_lw32inc_p(RL6,REG1,DEFAULT)
0xE0E76A06,	//0x16d4		VoC_lw16i_short(REG7,0xe,IN_PARALLEL)	|	VoC_loop_i_short(0x10,DEFAULT)
0xDDC5DDC4,	//0x16d6		VoC_sw32inc_p(ACC1,REG0,DEFAULT)	|	VoC_sw32inc_p(ACC0,REG0,DEFAULT)
0xC038DDC6,	//0x16d8		VoC_add16_rr(REG0,REG0,REG7,DEFAULT)	|	VoC_sw32inc_p(RL6,REG0,DEFAULT)
		//0x16da		VoC_endloop0
0xE080DD87,	//0x16da		VoC_movreg16(REG0,REG4,DEFAULT)	|	VoC_sw32_p(RL7,REG0,DEFAULT)
		//0x16db		VoC_endloop1
0xFFC06580,	//0x16dc		VoC_NAD(IN_PARALLEL)	|	VoC_return
		//0x16de		CS_pred16x16_dc_c
0x0B101808,	//0x16de		VoC_lw16i_set_inc(REG0,0xb10,0x2)
0x0B0F1891,	//0x16e0		VoC_lw16i_set_inc(REG1,0xb0f,0x14)
0x0AFC1806,	//0x16e2		VoC_lw16i_set_inc(REG2,0xafc,0x1)
0xE1076905,	//0x16e4		VoC_lw16i_short(REG7,0x10,IN_PARALLEL)	|	VoC_loop_i_short(0x8,DEFAULT)
0x83CF83CF,	//0x16e6		VoC_add16inc_rp(REG7,REG7,REG1,DEFAULT)	|	VoC_add16inc_rp(REG7,REG7,REG1,DEFAULT)
0x83D783D7,	//0x16e8		VoC_add16inc_rp(REG7,REG7,REG2,DEFAULT)	|	VoC_add16inc_rp(REG7,REG7,REG2,DEFAULT)
		//0x16e9		VoC_endloop0
0xE0E6F92F,	//0x16ea		VoC_movreg16(REG6,REG7,DEFAULT)	|	VoC_shru16_ri(REG7,0x5,DEFAULT)
0xE0636A0A,	//0x16ec		VoC_lw16i_short(REG3,0x6,IN_PARALLEL)	|	VoC_loop_i_short(0x10,DEFAULT)
0xDDC3DDC3,	//0x16ee		VoC_sw32inc_p(REG67,REG0,DEFAULT)	|	VoC_sw32inc_p(REG67,REG0,DEFAULT)
0xDDC3DDC3,	//0x16f0		VoC_sw32inc_p(REG67,REG0,DEFAULT)	|	VoC_sw32inc_p(REG67,REG0,DEFAULT)
0xDDC3DDC3,	//0x16f2		VoC_sw32inc_p(REG67,REG0,DEFAULT)	|	VoC_sw32inc_p(REG67,REG0,DEFAULT)
0xC018DDC3,	//0x16f4		VoC_add16_rr(REG0,REG0,REG3,DEFAULT)	|	VoC_sw32inc_p(REG67,REG0,DEFAULT)
		//0x16f6		VoC_endloop0
0xE580DD83,	//0x16f6		VoC_return	|	VoC_sw32_p(REG67,REG0,DEFAULT)
		//0x16f8		CS_pred16x16_horizontal_c
0x0B0F1804,	//0x16f8		VoC_lw16i_set_inc(REG0,0xb0f,0x1)
0x2C21F083,	//0x16fa		VoC_loop_i(0x1,0x10)(lo)	|	VoC_lw16i_short(REG3,0x4,DEFAULT)
0xD8861701,	//0x16fc		VoC_lw16inc_p(REG6,REG0,DEFAULT)	|	VoC_loop_i(0x1,0x10)(hi)
0xDC86E9E1,	//0x16fe		VoC_sw16inc_p(REG6,REG0,DEFAULT)	|	VoC_loop_i_short(0xf,DEFAULT)
		//0x16ff		VoC_endloop0
0xDC06C018,	//0x1700		VoC_sw16_p(REG6,REG0,DEFAULT)	|	VoC_add16_rr(REG0,REG0,REG3,DEFAULT)
		//0x1701		VoC_endloop1
0xFFC06580,	//0x1702		VoC_NAD(IN_PARALLEL)	|	VoC_return
		//0x1704		CS_pred16x16_top_dc_c
0x0B101808,	//0x1704		VoC_lw16i_set_inc(REG0,0xb10,0x2)
0x0AFC1805,	//0x1706		VoC_lw16i_set_inc(REG1,0xafc,0x1)
0xE0876903,	//0x1708		VoC_lw16i_short(REG7,0x8,IN_PARALLEL)	|	VoC_loop_i_short(0x8,DEFAULT)
0x83CF83CF,	//0x170a		VoC_add16inc_rp(REG7,REG7,REG1,DEFAULT)	|	VoC_add16inc_rp(REG7,REG7,REG1,DEFAULT)
		//0x170b		VoC_endloop0
0x60E6F927,	//0x170c		VoC_movreg16(REG6,REG7,DEFAULT)	|	VoC_shru16_ri(REG7,0x4,DEFAULT)
0xEA09E063,	//0x170e		VoC_loop_i_short(0x10,DEFAULT)	|	VoC_lw16i_short(REG3,0x6,IN_PARALLEL)
0xDDC3DDC3,	//0x1710		VoC_sw32inc_p(REG67,REG0,DEFAULT)	|	VoC_sw32inc_p(REG67,REG0,DEFAULT)
0xDDC3DDC3,	//0x1712		VoC_sw32inc_p(REG67,REG0,DEFAULT)	|	VoC_sw32inc_p(REG67,REG0,DEFAULT)
0xDDC3DDC3,	//0x1714		VoC_sw32inc_p(REG67,REG0,DEFAULT)	|	VoC_sw32inc_p(REG67,REG0,DEFAULT)
0xC018DDC3,	//0x1716		VoC_add16_rr(REG0,REG0,REG3,DEFAULT)	|	VoC_sw32inc_p(REG67,REG0,DEFAULT)
		//0x1718		VoC_endloop0
0xE580DD83,	//0x1718		VoC_return	|	VoC_sw32_p(REG67,REG0,DEFAULT)
		//0x171a		CS_pred16x16_plane_compat_c
0x0B101808,	//0x171a		VoC_lw16i_set_inc(REG0,0xb10,0x2)
0x0B011FBD,	//0x171c		VoC_lw16i_set_inc(REG1,0xb01,0xffffffff)
0x0B020A86,	//0x171e		VoC_lw16i(REG6,0xb02)
0x0B041806,	//0x1720		VoC_lw16i_set_inc(REG2,0xb04,0x1)
0xD867DFC0,	//0x1722		VoC_lw16_p(REG7,REG6,DEFAULT)	|	VoC_push16(REG0,DEFAULT)
0x17171807,	//0x1724		VoC_lw16i_set_inc(REG3,0x1717,0x1)
0x17161507,	//0x1726		VoC_sw16_d(REG7,0x1716)
0xD896E864,	//0x1728		VoC_lw16inc_p(REG6,REG1,DEFAULT)	|	VoC_loop_i_short(0x3,DEFAULT)
0xDCB6D897,	//0x172a		VoC_sw16inc_p(REG6,REG3,DEFAULT)	|	VoC_lw16inc_p(REG7,REG1,DEFAULT)
		//0x172c		VoC_endloop0
0xD896DCB7,	//0x172c		VoC_lw16inc_p(REG6,REG1,DEFAULT)	|	VoC_sw16inc_p(REG7,REG3,DEFAULT)
0x17201805,	//0x172e		VoC_lw16i_set_inc(REG1,0x1720,0x1)
0xE885DCB6,	//0x1730		VoC_loop_i_short(0x4,DEFAULT)	|	VoC_sw16inc_p(REG6,REG3,DEFAULT)
0xD8A6D8A7,	//0x1732		VoC_lw16inc_p(REG6,REG2,DEFAULT)	|	VoC_lw16inc_p(REG7,REG2,DEFAULT)
0xDC977023,	//0x1734		VoC_sw16inc_p(REG7,REG1,IN_PARALLEL)	|	VoC_lw16i_short(REG3,0x1,DEFAULT)
		//0x1736		VoC_endloop0
0x1806DC96,	//0x1736		VoC_lw16i_set_inc(REG2,0x1716,0x1)(lo)	|	VoC_sw16inc_p(REG6,REG1,DEFAULT)
0x18051716,	//0x1738		VoC_lw16i_set_inc(REG1,0x1720,0x1)(lo)	|	VoC_lw16i_set_inc(REG2,0x1716,0x1)(hi)
0x69061720,	//0x173a		VoC_loop_i_short(0x8,DEFAULT)	|	VoC_lw16i_set_inc(REG1,0x1720,0x1)(hi)
0xD896FF42,	//0x173c		VoC_lw16inc_p(REG6,REG1,DEFAULT)	|	VoC_lw32z(REG45,IN_PARALLEL)
0xC59E8796,	//0x173e		VoC_mult16_rr(REG6,REG6,REG3,DEFAULT)	|	VoC_sub16inc_rp(REG6,REG6,REG2,DEFAULT)
0xC134DE18,	//0x1740		VoC_add16_rr(REG4,REG4,REG6,DEFAULT)	|	VoC_inc_p(REG3,DEFAULT)
		//0x1741		VoC_endloop0
0xE1427281,	//0x1742		VoC_lw16i_short(REG2,0x14,IN_PARALLEL)	|	VoC_lw16i_short(REG1,0x14,DEFAULT)
0xF9E97023,	//0x1744		VoC_shru16_ri(REG1,0xfffffffd,IN_PARALLEL)	|	VoC_lw16i_short(REG3,0x1,DEFAULT)
0xE140421E,	//0x1746		VoC_lw16i_short(REG0,0x14,IN_PARALLEL)	|	VoC_sub16_rr(REG6,REG0,REG3,DEFAULT)
0xF9FA418F,	//0x1748		VoC_shru16_ri(REG2,0xffffffff,IN_PARALLEL)	|	VoC_add16_rr(REG7,REG6,REG1,DEFAULT)
0xE907C3D6,	//0x174a		VoC_loop_i_short(0x8,DEFAULT)	|	VoC_sub16_rr(REG6,REG7,REG2,DEFAULT)
0xD862D871,	//0x174c		VoC_lw16_p(REG2,REG6,DEFAULT)	|	VoC_lw16_p(REG1,REG7,DEFAULT)
0xC1C74252,	//0x174e		VoC_add16_rr(REG7,REG7,REG0,IN_PARALLEL)	|	VoC_sub16_rr(REG2,REG1,REG2,DEFAULT)
0xDE18C49A,	//0x1750		VoC_inc_p(REG3,DEFAULT)	|	VoC_mult16_rr(REG2,REG2,REG3,DEFAULT)
		//0x1752		VoC_endloop0
0xC3864155,	//0x1752		VoC_sub16_rr(REG6,REG6,REG0,IN_PARALLEL)	|	VoC_add16_rr(REG5,REG5,REG2,DEFAULT)
0xE00970A2,	//0x1754		VoC_lw16i_short(ACC0_HI,0x0,IN_PARALLEL)	|	VoC_lw16i_short(REG2,0x5,DEFAULT)
0x00200A88,	//0x1756		VoC_lw16i(ACC0_LO,0x20)
0xFF257019,	//0x1758		VoC_movreg32(ACC1,ACC0,IN_PARALLEL)	|	VoC_lw16i_short(FORMAT32,0x0,DEFAULT)
0xCE154E14,	//0x175a		VoC_mac32_rr(REG2,REG5,IN_PARALLEL)	|	VoC_mac32_rr(REG2,REG4,DEFAULT)
0xC1867202,	//0x175c		VoC_add16_rr(REG6,REG6,REG0,IN_PARALLEL)	|	VoC_lw16i_short(REG2,0x10,DEFAULT)
0xFA357A34,	//0x175e		VoC_shr32_ri(ACC1,0x6,IN_PARALLEL)	|	VoC_shr32_ri(ACC0,0x6,DEFAULT)
0xF7456104,	//0x1760		VoC_movreg16(REG5,ACC1_LO,IN_PARALLEL)	|	VoC_movreg16(REG4,ACC0_LO,DEFAULT)
0xE0124196,	//0x1762		VoC_lw16i_short(REG2,0x1,IN_PARALLEL)	|	VoC_add16_rr(REG6,REG6,REG2,DEFAULT)
0x5860F203,	//0x1764		VoC_lw16_p(REG0,REG6,DEFAULT)	|	VoC_lw16i_short(REG3,0x10,DEFAULT)
0x4082C08A,	//0x1766		VoC_add16_rr(REG2,REG2,REG0,DEFAULT)	|	VoC_add16_rr(REG2,REG2,REG1,IN_PARALLEL)
0x449AC129,	//0x1768		VoC_mult16_rr(REG2,REG2,REG3,DEFAULT)	|	VoC_add16_rr(REG1,REG4,REG5,IN_PARALLEL)
0x4459E073,	//0x176a		VoC_mult16_rr(REG1,REG1,REG3,DEFAULT)	|	VoC_lw16i_short(REG3,0x7,IN_PARALLEL)
0x1505DF80,	//0x176c		VoC_sw16_d(REG5,0x1716)(lo)	|	VoC_pop16(REG0,IN_PARALLEL)
0x0A851716,	//0x176e		VoC_lw16i(REG5,0xff)(lo)	|	VoC_sw16_d(REG5,0x1716)(hi)
0x428900FF,	//0x1770		VoC_sub16_rr(REG1,REG2,REG1,DEFAULT)	|	VoC_lw16i(REG5,0xff)(hi)
0xFFC0F603,	//0x1772		VoC_NAD	|	VoC_movreg16(REG3,REG0,IN_PARALLEL)
0x17872C21,	//0x1774		VoC_loop_i(0x1,0x10)
0xF0046022,	//0x1776		VoC_lw16i_short(INC0,0x1,IN_PARALLEL)	|	VoC_movreg16(REG2,REG1,DEFAULT)
0x17160709,	//0x1778		VoC_add16_rd(REG1,REG1,0x1716)
0xF660690B,	//0x177a		VoC_movreg16(REG0,REG3,IN_PARALLEL)	|	VoC_loop_i_short(0x8,DEFAULT)
0x782EE046,	//0x177c		VoC_shr16_ri(REG6,0x5,DEFAULT)	|	VoC_movreg16(REG6,REG2,DEFAULT)
0x6047C0A2,	//0x177e		VoC_movreg16(REG7,REG2,DEFAULT)	|	VoC_add16_rr(REG2,REG2,REG4,IN_PARALLEL)
0xF82FDEEE,	//0x1780		VoC_shr16_ri(REG7,0x5,DEFAULT)	|	VoC_clipu16_rr(REG6,REG5,IN_PARALLEL)
0xDEEF40A2,	//0x1782		VoC_clipu16_rr(REG7,REG5,IN_PARALLEL)	|	VoC_add16_rr(REG2,REG2,REG4,DEFAULT)
0xDC87DC86,	//0x1784		VoC_sw16inc_p(REG7,REG0,DEFAULT)	|	VoC_sw16inc_p(REG6,REG0,DEFAULT)
		//0x1785		VoC_endloop0
0xC0D3F282,	//0x1786		VoC_add16_rr(REG3,REG3,REG2,DEFAULT)	|	VoC_lw16i_short(REG2,0x14,DEFAULT)
		//0x1787		VoC_endloop1
0xFFC06580,	//0x1788		VoC_NAD(IN_PARALLEL)	|	VoC_return
		//0x178a		CS_pred4x4_128_dc_c
0x00800A86,	//0x178a		VoC_lw16i(REG6,0x80)
0xF00A60C7,	//0x178c		VoC_lw16i_short(INC2,0x2,IN_PARALLEL)	|	VoC_movreg16(REG7,REG6,DEFAULT)
0xE1236884,	//0x178e		VoC_lw16i_short(REG3,0x12,IN_PARALLEL)	|	VoC_loop_i_short(0x4,DEFAULT)
0xC09ADDD3,	//0x1790		VoC_add16_rr(REG2,REG2,REG3,DEFAULT)	|	VoC_sw32inc_p(REG67,REG2,DEFAULT)
		//0x1792		VoC_endloop0
0xE580DD93,	//0x1792		VoC_return	|	VoC_sw32_p(REG67,REG2,DEFAULT)
		//0x1794		CS_pred4x4_left_dc_c
0x42A3F024,	//0x1794		VoC_sub16_rr(REG3,REG2,REG4,DEFAULT)	|	VoC_lw16i_short(REG4,0x1,DEFAULT)
0x6882F053,	//0x1796		VoC_loop_i_short(0x4,DEFAULT)	|	VoC_lw16i_short(INC3,0x14,IN_PARALLEL)
0x83DFE027,	//0x1798		VoC_add16inc_rp(REG7,REG7,REG3,DEFAULT)	|	VoC_lw16i_short(REG7,0x2,IN_PARALLEL)
		//0x1799		VoC_endloop0
0xF00A7817,	//0x179a		VoC_lw16i_short(INC2,0x2,IN_PARALLEL)	|	VoC_shr16_ri(REG7,0x2,DEFAULT)
0x6884E0E6,	//0x179c		VoC_loop_i_short(0x4,DEFAULT)	|	VoC_movreg16(REG6,REG7,DEFAULT)
0xDDD3E123,	//0x179e		VoC_sw32inc_p(REG67,REG2,DEFAULT)	|	VoC_lw16i_short(REG3,0x12,IN_PARALLEL)
0xDD93C09A,	//0x17a0		VoC_sw32_p(REG67,REG2,DEFAULT)	|	VoC_add16_rr(REG2,REG2,REG3,DEFAULT)
		//0x17a1		VoC_endloop0
0xF283E580,	//0x17a2		VoC_lw16i_short(REG3,0x14,DEFAULT)	|	VoC_return
		//0x17a3		CS_pred4x4_top_dc_c
0xF007429B,	//0x17a4		VoC_lw16i_short(INC3,0x1,IN_PARALLEL)	|	VoC_sub16_rr(REG3,REG2,REG3,DEFAULT)
0xE0276882,	//0x17a6		VoC_lw16i_short(REG7,0x2,IN_PARALLEL)	|	VoC_loop_i_short(0x4,DEFAULT)
		//0x17a8		VoC_endloop0
0x791783DF,	//0x17a8		VoC_shru16_ri(REG7,0x2,DEFAULT)	|	VoC_add16inc_rp(REG7,REG7,REG3,DEFAULT)
0xE0E6F00A,	//0x17aa		VoC_movreg16(REG6,REG7,DEFAULT)	|	VoC_lw16i_short(INC2,0x2,IN_PARALLEL)
0xE1236884,	//0x17ac		VoC_lw16i_short(REG3,0x12,IN_PARALLEL)	|	VoC_loop_i_short(0x4,DEFAULT)
0xC09ADDD3,	//0x17ae		VoC_add16_rr(REG2,REG2,REG3,DEFAULT)	|	VoC_sw32inc_p(REG67,REG2,DEFAULT)
		//0x17b0		VoC_endloop0
0xE580DD93,	//0x17b0		VoC_return	|	VoC_sw32_p(REG67,REG2,DEFAULT)
		//0x17b2		CS_pred4x4_down_right_c
0x00141807,	//0x17b2		VoC_lw16i_set_inc(REG3,0x14,0x1)
0xDFC1429B,	//0x17b4		VoC_push16(REG1,IN_PARALLEL)	|	VoC_sub16_rr(REG3,REG2,REG3,DEFAULT)
0xE1417027,	//0x17b6		VoC_lw16i_short(REG1,0x14,IN_PARALLEL)	|	VoC_lw16i_short(REG7,0x1,DEFAULT)
0xD8B4D8B0,	//0x17b8		VoC_lw16inc_p(REG4,REG3,DEFAULT)	|	VoC_lw16inc_p(REG0,REG3,DEFAULT)
0x5835D8B6,	//0x17ba		VoC_lw16_p(REG5,REG3,DEFAULT)	|	VoC_lw16inc_p(REG6,REG3,DEFAULT)
0xC29BE143,	//0x17bc		VoC_sub16_rr(REG3,REG2,REG3,DEFAULT)	|	VoC_lw16i_short(REG3,0x14,IN_PARALLEL)
0xE02742FB,	//0x17be		VoC_lw16i_short(REG7,0x2,IN_PARALLEL)	|	VoC_sub16_rr(REG3,REG3,REG7,DEFAULT)
0xC1ED78FE,	//0x17c0		VoC_add16_rr(REG5,REG7,REG5,IN_PARALLEL)	|	VoC_shr16_ri(REG6,0xffffffff,DEFAULT)
0xF80E4175,	//0x17c2		VoC_shr16_ri(REG6,0x1,IN_PARALLEL)	|	VoC_add16_rr(REG5,REG5,REG6,DEFAULT)
0xF8FC4165,	//0x17c4		VoC_shr16_ri(REG4,0xffffffff,IN_PARALLEL)	|	VoC_add16_rr(REG5,REG5,REG4,DEFAULT)
0xC1BEF915,	//0x17c6		VoC_add16_rr(REG6,REG6,REG7,DEFAULT)	|	VoC_shru16_ri(REG5,0x2,DEFAULT)
0x17231505,	//0x17c8		VoC_sw16_d(REG5,0x1723)
0xD83541A6,	//0x17ca		VoC_lw16_p(REG5,REG3,IN_PARALLEL)	|	VoC_add16_rr(REG6,REG6,REG4,DEFAULT)
0xC0CB4186,	//0x17cc		VoC_add16_rr(REG3,REG3,REG1,IN_PARALLEL)	|	VoC_add16_rr(REG6,REG6,REG0,DEFAULT)
0xF80C7916,	//0x17ce		VoC_shr16_ri(REG4,0x1,IN_PARALLEL)	|	VoC_shru16_ri(REG6,0x2,DEFAULT)
0xC13C78F8,	//0x17d0		VoC_add16_rr(REG4,REG4,REG7,IN_PARALLEL)	|	VoC_shr16_ri(REG0,0xffffffff,DEFAULT)
0x17221506,	//0x17d2		VoC_sw16_d(REG6,0x1722)
0x17271506,	//0x17d4		VoC_sw16_d(REG6,0x1727)
0xD8364104,	//0x17d6		VoC_lw16_p(REG6,REG3,IN_PARALLEL)	|	VoC_add16_rr(REG4,REG4,REG0,DEFAULT)
0xF808412C,	//0x17d8		VoC_shr16_ri(REG0,0x1,IN_PARALLEL)	|	VoC_add16_rr(REG4,REG4,REG5,DEFAULT)
0xF8FD7914,	//0x17da		VoC_shr16_ri(REG5,0xffffffff,IN_PARALLEL)	|	VoC_shru16_ri(REG4,0x2,DEFAULT)
0x1504C0CB,	//0x17dc		VoC_sw16_d(REG4,0x1721)(lo)	|	VoC_add16_rr(REG3,REG3,REG1,DEFAULT)
0x15041721,	//0x17de		VoC_sw16_d(REG4,0x1726)(lo)	|	VoC_sw16_d(REG4,0x1721)(hi)
0x15041726,	//0x17e0		VoC_sw16_d(REG4,0x172b)(lo)	|	VoC_sw16_d(REG4,0x1726)(hi)
0x5834172B,	//0x17e2		VoC_lw16_p(REG4,REG3,DEFAULT)	|	VoC_sw16_d(REG4,0x172b)(hi)
0x4028C038,	//0x17e4		VoC_add16_rr(REG0,REG0,REG5,DEFAULT)	|	VoC_add16_rr(REG0,REG0,REG7,IN_PARALLEL)
0x4030C0CB,	//0x17e6		VoC_add16_rr(REG0,REG0,REG6,DEFAULT)	|	VoC_add16_rr(REG3,REG3,REG1,IN_PARALLEL)
0x7910F80D,	//0x17e8		VoC_shru16_ri(REG0,0x2,DEFAULT)	|	VoC_shr16_ri(REG5,0x1,IN_PARALLEL)
0xFFC0F8FE,	//0x17ea		VoC_NOP	|	VoC_shr16_ri(REG6,0xffffffff,IN_PARALLEL)
0x17201500,	//0x17ec		VoC_sw16_d(REG0,0x1720)
0x17251500,	//0x17ee		VoC_sw16_d(REG0,0x1725)
0x172A1500,	//0x17f0		VoC_sw16_d(REG0,0x172a)
0x172F1500,	//0x17f2		VoC_sw16_d(REG0,0x172f)
0xC17D5830,	//0x17f4		VoC_add16_rr(REG5,REG5,REG7,IN_PARALLEL)	|	VoC_lw16_p(REG0,REG3,DEFAULT)
0xC0CB4175,	//0x17f6		VoC_add16_rr(REG3,REG3,REG1,IN_PARALLEL)	|	VoC_add16_rr(REG5,REG5,REG6,DEFAULT)
0xF80E4165,	//0x17f8		VoC_shr16_ri(REG6,0x1,IN_PARALLEL)	|	VoC_add16_rr(REG5,REG5,REG4,DEFAULT)
0xF8FC7915,	//0x17fa		VoC_shr16_ri(REG4,0xffffffff,IN_PARALLEL)	|	VoC_shru16_ri(REG5,0x2,DEFAULT)
0x1505FFC0,	//0x17fc		VoC_sw16_d(REG5,0x1724)(lo)	|	VoC_NOP
0x15051724,	//0x17fe		VoC_sw16_d(REG5,0x1729)(lo)	|	VoC_sw16_d(REG5,0x1724)(hi)
0x15051729,	//0x1800		VoC_sw16_d(REG5,0x172e)(lo)	|	VoC_sw16_d(REG5,0x1729)(hi)
0x5835172E,	//0x1802		VoC_lw16_p(REG5,REG3,DEFAULT)	|	VoC_sw16_d(REG5,0x172e)(hi)
0xC1A6C1BE,	//0x1804		VoC_add16_rr(REG6,REG6,REG4,DEFAULT)	|	VoC_add16_rr(REG6,REG6,REG7,IN_PARALLEL)
0xF80C4186,	//0x1806		VoC_shr16_ri(REG4,0x1,IN_PARALLEL)	|	VoC_add16_rr(REG6,REG6,REG0,DEFAULT)
0xF8F87916,	//0x1808		VoC_shr16_ri(REG0,0xffffffff,IN_PARALLEL)	|	VoC_shru16_ri(REG6,0x2,DEFAULT)
0x1506C13C,	//0x180a		VoC_sw16_d(REG6,0x1728)(lo)	|	VoC_add16_rr(REG4,REG4,REG7,DEFAULT)
0x15061728,	//0x180c		VoC_sw16_d(REG6,0x172d)(lo)	|	VoC_sw16_d(REG6,0x1728)(hi)
0xC104172D,	//0x180e		VoC_add16_rr(REG4,REG4,REG0,DEFAULT)	|	VoC_sw16_d(REG6,0x172d)(hi)
0xF00A412C,	//0x1810		VoC_lw16i_short(INC2,0x2,IN_PARALLEL)	|	VoC_add16_rr(REG4,REG4,REG5,DEFAULT)
0xE1207914,	//0x1812		VoC_lw16i_short(REG0,0x12,IN_PARALLEL)	|	VoC_shru16_ri(REG4,0x2,DEFAULT)
0x1720180B,	//0x1814		VoC_lw16i_set_inc(REG3,0x1720,0x2)
0x172C1504,	//0x1816		VoC_sw16_d(REG4,0x172c)
0xDF816885,	//0x1818		VoC_pop16(REG1,IN_PARALLEL)	|	VoC_loop_i_short(0x4,DEFAULT)
0xD9DBD9DA,	//0x181a		VoC_lw32inc_p(REG67,REG3,DEFAULT)	|	VoC_lw32inc_p(REG45,REG3,DEFAULT)
0x5D93DDD2,	//0x181c		VoC_sw32_p(REG67,REG2,DEFAULT)	|	VoC_sw32inc_p(REG45,REG2,DEFAULT)
		//0x181d		VoC_endloop0
0xE580C082,	//0x181e		VoC_return	|	VoC_add16_rr(REG2,REG2,REG0,IN_PARALLEL)
		//0x1820		CS_pred4x4_dc_c
0x00141807,	//0x1820		VoC_lw16i_set_inc(REG3,0x14,0x1)
0xE047429B,	//0x1822		VoC_lw16i_short(REG7,0x4,IN_PARALLEL)	|	VoC_sub16_rr(REG3,REG2,REG3,DEFAULT)
0x18292C05,	//0x1824		VoC_loop_i(0x1,0x2)
0xE0146882,	//0x1826		VoC_lw16i_short(REG4,0x1,IN_PARALLEL)	|	VoC_loop_i_short(0x4,DEFAULT)
		//0x1828		VoC_endloop0
0x42A383DF,	//0x1828		VoC_sub16_rr(REG3,REG2,REG4,DEFAULT)	|	VoC_add16inc_rp(REG7,REG7,REG3,DEFAULT)
		//0x1829		VoC_endloop1
0xF81FF053,	//0x182a		VoC_shr16_ri(REG7,0x3,DEFAULT)	|	VoC_lw16i_short(INC3,0x14,IN_PARALLEL)
0xF00A60E6,	//0x182c		VoC_lw16i_short(INC2,0x2,IN_PARALLEL)	|	VoC_movreg16(REG6,REG7,DEFAULT)
0xE1236884,	//0x182e		VoC_lw16i_short(REG3,0x12,IN_PARALLEL)	|	VoC_loop_i_short(0x4,DEFAULT)
0xC09ADDD3,	//0x1830		VoC_add16_rr(REG2,REG2,REG3,DEFAULT)	|	VoC_sw32inc_p(REG67,REG2,DEFAULT)
		//0x1832		VoC_endloop0
0xE580DD93,	//0x1832		VoC_return	|	VoC_sw32_p(REG67,REG2,DEFAULT)
		//0x1834		CS_pred4x4_horizontal_up_rv40_nodown_c
		//0x1834		CS_pred4x4_horizontal_down_c
0x00141807,	//0x1834		VoC_lw16i_set_inc(REG3,0x14,0x1)
0xC29B7027,	//0x1836		VoC_sub16_rr(REG3,REG2,REG3,IN_PARALLEL)	|	VoC_lw16i_short(REG7,0x1,DEFAULT)
0xE14642F8,	//0x1838		VoC_lw16i_short(REG6,0x14,IN_PARALLEL)	|	VoC_sub16_rr(REG0,REG3,REG7,DEFAULT)
0xD8B4D8B1,	//0x183a		VoC_lw16inc_p(REG4,REG3,DEFAULT)	|	VoC_lw16inc_p(REG1,REG3,DEFAULT)
0xC0335835,	//0x183c		VoC_add16_rr(REG3,REG0,REG6,IN_PARALLEL)	|	VoC_lw16_p(REG5,REG3,DEFAULT)
0xE1405806,	//0x183e		VoC_lw16i_short(REG0,0x14,IN_PARALLEL)	|	VoC_lw16_p(REG6,REG0,DEFAULT)
0xC0C35830,	//0x1840		VoC_add16_rr(REG3,REG3,REG0,IN_PARALLEL)	|	VoC_lw16_p(REG0,REG3,DEFAULT)
0xC14D79FC,	//0x1842		VoC_add16_rr(REG5,REG5,REG1,IN_PARALLEL)	|	VoC_shru16_ri(REG4,0xffffffff,DEFAULT)
0xE0274165,	//0x1844		VoC_lw16i_short(REG7,0x2,IN_PARALLEL)	|	VoC_add16_rr(REG5,REG5,REG4,DEFAULT)
0xF90C417D,	//0x1846		VoC_shru16_ri(REG4,0x1,IN_PARALLEL)	|	VoC_add16_rr(REG5,REG5,REG7,DEFAULT)
0xF9F97915,	//0x1848		VoC_shru16_ri(REG1,0xffffffff,IN_PARALLEL)	|	VoC_shru16_ri(REG5,0x2,DEFAULT)
0xF909410C,	//0x184a		VoC_shru16_ri(REG1,0x1,IN_PARALLEL)	|	VoC_add16_rr(REG4,REG4,REG1,DEFAULT)
0x17231505,	//0x184c		VoC_sw16_d(REG5,0x1723)
0xF9FE4134,	//0x184e		VoC_shru16_ri(REG6,0xffffffff,IN_PARALLEL)	|	VoC_add16_rr(REG4,REG4,REG6,DEFAULT)
0xC071413C,	//0x1850		VoC_add16_rr(REG1,REG1,REG6,IN_PARALLEL)	|	VoC_add16_rr(REG4,REG4,REG7,DEFAULT)
0xC0417914,	//0x1852		VoC_add16_rr(REG1,REG1,REG0,IN_PARALLEL)	|	VoC_shru16_ri(REG4,0x2,DEFAULT)
0x1504FFC0,	//0x1854		VoC_sw16_d(REG4,0x1722)(lo)	|	VoC_NOP
0x40791722,	//0x1856		VoC_add16_rr(REG1,REG1,REG7,DEFAULT)	|	VoC_sw16_d(REG4,0x1722)(hi)
0x7911D835,	//0x1858		VoC_shru16_ri(REG1,0x2,DEFAULT)	|	VoC_lw16_p(REG5,REG3,IN_PARALLEL)
0x403CE017,	//0x185a		VoC_add16_rr(REG4,REG0,REG7,DEFAULT)	|	VoC_lw16i_short(REG7,0x1,IN_PARALLEL)
0x1501F90E,	//0x185c		VoC_sw16_d(REG1,0x1721)(lo)	|	VoC_shru16_ri(REG6,0x1,IN_PARALLEL)
0x15011721,	//0x185e		VoC_sw16_d(REG1,0x1727)(lo)	|	VoC_sw16_d(REG1,0x1721)(hi)
0x41341727,	//0x1860		VoC_add16_rr(REG4,REG4,REG6,DEFAULT)	|	VoC_sw16_d(REG1,0x1727)(hi)
0x790CDFC2,	//0x1862		VoC_shru16_ri(REG4,0x1,DEFAULT)	|	VoC_push16(REG2,IN_PARALLEL)
0x41C1E142,	//0x1864		VoC_add16_rr(REG1,REG7,REG0,DEFAULT)	|	VoC_lw16i_short(REG2,0x14,IN_PARALLEL)
0x1504C0D3,	//0x1866		VoC_sw16_d(REG4,0x1720)(lo)	|	VoC_add16_rr(REG3,REG3,REG2,IN_PARALLEL)
0x15041720,	//0x1868		VoC_sw16_d(REG4,0x1726)(lo)	|	VoC_sw16_d(REG4,0x1720)(hi)
0x40691726,	//0x186a		VoC_add16_rr(REG1,REG1,REG5,DEFAULT)	|	VoC_sw16_d(REG4,0x1726)(hi)
0xF909D834,	//0x186c		VoC_shru16_ri(REG1,0x1,DEFAULT)	|	VoC_lw16_p(REG4,REG3,IN_PARALLEL)
0x1501C0D3,	//0x186e		VoC_sw16_d(REG1,0x1724)(lo)	|	VoC_add16_rr(REG3,REG3,REG2,DEFAULT)
0x15011724,	//0x1870		VoC_sw16_d(REG1,0x172a)(lo)	|	VoC_sw16_d(REG1,0x1724)(hi)
0x4161172A,	//0x1872		VoC_add16_rr(REG1,REG5,REG4,DEFAULT)	|	VoC_sw16_d(REG1,0x172a)(hi)
0x4079F9F8,	//0x1874		VoC_add16_rr(REG1,REG1,REG7,DEFAULT)	|	VoC_shru16_ri(REG0,0xffffffff,IN_PARALLEL)
0x7909C186,	//0x1876		VoC_shru16_ri(REG1,0x1,DEFAULT)	|	VoC_add16_rr(REG6,REG6,REG0,IN_PARALLEL)
0x41BEE027,	//0x1878		VoC_add16_rr(REG6,REG6,REG7,DEFAULT)	|	VoC_lw16i_short(REG7,0x2,IN_PARALLEL)
0x1501F908,	//0x187a		VoC_sw16_d(REG1,0x1728)(lo)	|	VoC_shru16_ri(REG0,0x1,IN_PARALLEL)
0x15011728,	//0x187c		VoC_sw16_d(REG1,0x172e)(lo)	|	VoC_sw16_d(REG1,0x1728)(hi)
0x41AE172E,	//0x187e		VoC_add16_rr(REG6,REG6,REG5,DEFAULT)	|	VoC_sw16_d(REG1,0x172e)(hi)
0xF916D831,	//0x1880		VoC_shru16_ri(REG6,0x2,DEFAULT)	|	VoC_lw16_p(REG1,REG3,IN_PARALLEL)
0xC03879FD,	//0x1882		VoC_add16_rr(REG0,REG0,REG7,IN_PARALLEL)	|	VoC_shru16_ri(REG5,0xffffffff,DEFAULT)
0x17251506,	//0x1884		VoC_sw16_d(REG6,0x1725)
0x172B1506,	//0x1886		VoC_sw16_d(REG6,0x172b)
0xF90D4028,	//0x1888		VoC_shru16_ri(REG5,0x1,IN_PARALLEL)	|	VoC_add16_rr(REG0,REG0,REG5,DEFAULT)
0xF9FC4020,	//0x188a		VoC_shru16_ri(REG4,0xffffffff,IN_PARALLEL)	|	VoC_add16_rr(REG0,REG0,REG4,DEFAULT)
0xC1657910,	//0x188c		VoC_add16_rr(REG5,REG5,REG4,IN_PARALLEL)	|	VoC_shru16_ri(REG0,0x2,DEFAULT)
0xF90C414D,	//0x188e		VoC_shru16_ri(REG4,0x1,IN_PARALLEL)	|	VoC_add16_rr(REG5,REG5,REG1,DEFAULT)
0x17291500,	//0x1890		VoC_sw16_d(REG0,0x1729)
0x172F1500,	//0x1892		VoC_sw16_d(REG0,0x172f)
0xE017417D,	//0x1894		VoC_lw16i_short(REG7,0x1,IN_PARALLEL)	|	VoC_add16_rr(REG5,REG5,REG7,DEFAULT)
0xC10C7915,	//0x1896		VoC_add16_rr(REG4,REG4,REG1,IN_PARALLEL)	|	VoC_shru16_ri(REG5,0x2,DEFAULT)
0x17200A83,	//0x1898		VoC_lw16i(REG3,0x1720)
0xE020413C,	//0x189a		VoC_lw16i_short(REG0,0x2,IN_PARALLEL)	|	VoC_add16_rr(REG4,REG4,REG7,DEFAULT)
0xDF824280,	//0x189c		VoC_pop16(REG2,IN_PARALLEL)	|	VoC_sub16_rr(REG0,REG2,REG0,DEFAULT)
0xF00B790C,	//0x189e		VoC_lw16i_short(INC3,0x2,IN_PARALLEL)	|	VoC_shru16_ri(REG4,0x1,DEFAULT)
0x172D1505,	//0x18a0		VoC_sw16_d(REG5,0x172d)
0x172C1504,	//0x18a2		VoC_sw16_d(REG4,0x172c)
0xF00A6885,	//0x18a4		VoC_lw16i_short(INC2,0x2,IN_PARALLEL)	|	VoC_loop_i_short(0x4,DEFAULT)
0xD9DBD9DA,	//0x18a6		VoC_lw32inc_p(REG67,REG3,DEFAULT)	|	VoC_lw32inc_p(REG45,REG3,DEFAULT)
0x5D93DDD2,	//0x18a8		VoC_sw32_p(REG67,REG2,DEFAULT)	|	VoC_sw32inc_p(REG45,REG2,DEFAULT)
		//0x18a9		VoC_endloop0
0xE580C082,	//0x18aa		VoC_return	|	VoC_add16_rr(REG2,REG2,REG0,IN_PARALLEL)
		//0x18ac		CS_pred4x4_vertical_c
0x0014180B,	//0x18ac		VoC_lw16i_set_inc(REG3,0x14,0x2)
0xF240C29B,	//0x18ae		VoC_lw16i_short(REG0,0x12,DEFAULT)	|	VoC_sub16_rr(REG3,REG2,REG3,DEFAULT)
0xF00A59DA,	//0x18b0		VoC_lw16i_short(INC2,0x2,IN_PARALLEL)	|	VoC_lw32inc_p(REG45,REG3,DEFAULT)
0xD99B6884,	//0x18b2		VoC_lw32_p(REG67,REG3,IN_PARALLEL)	|	VoC_loop_i_short(0x4,DEFAULT)
0xC082DDD2,	//0x18b4		VoC_add16_rr(REG2,REG2,REG0,DEFAULT)	|	VoC_sw32inc_p(REG45,REG2,DEFAULT)
		//0x18b6		VoC_endloop0
0xE580DD93,	//0x18b6		VoC_return	|	VoC_sw32_p(REG67,REG2,DEFAULT)
		//0x18b8		CS_pred4x4_vertical_left_c
0xE1407033,	//0x18b8		VoC_lw16i_short(REG0,0x14,IN_PARALLEL)	|	VoC_lw16i_short(INC3,0x1,DEFAULT)
0xD8B6F027,	//0x18ba		VoC_lw16inc_p(REG6,REG3,DEFAULT)	|	VoC_lw16i_short(REG7,0x1,DEFAULT)
0x5835D8B4,	//0x18bc		VoC_lw16_p(REG5,REG3,DEFAULT)	|	VoC_lw16inc_p(REG4,REG3,DEFAULT)
0x41A0C283,	//0x18be		VoC_add16_rr(REG0,REG6,REG4,DEFAULT)	|	VoC_sub16_rr(REG3,REG2,REG0,IN_PARALLEL)
0x4038C165,	//0x18c0		VoC_add16_rr(REG0,REG0,REG7,DEFAULT)	|	VoC_add16_rr(REG5,REG5,REG4,IN_PARALLEL)
0x4145C17D,	//0x18c2		VoC_add16_rr(REG5,REG5,REG0,DEFAULT)	|	VoC_add16_rr(REG5,REG5,REG7,IN_PARALLEL)
0x7915F908,	//0x18c4		VoC_shru16_ri(REG5,0x2,DEFAULT)	|	VoC_shru16_ri(REG0,0x1,IN_PARALLEL)
0x1500D9DE,	//0x18c6		VoC_sw16_d(REG0,0x172b)(lo)	|	VoC_lw32inc_p(RL6,REG3,IN_PARALLEL)
0xDE18172B,	//0x18c8		VoC_inc_p(REG3,DEFAULT)	|	VoC_sw16_d(REG0,0x172b)(hi)
0x172F1505,	//0x18ca		VoC_sw16_d(REG5,0x172f)
0xD831D8B5,	//0x18cc		VoC_lw16_p(REG1,REG3,DEFAULT)	|	VoC_lw16inc_p(REG5,REG3,DEFAULT)
0xE02779FE,	//0x18ce		VoC_lw16i_short(REG7,0x2,IN_PARALLEL)	|	VoC_shru16_ri(REG6,0xffffffff,DEFAULT)
0xF90E4134,	//0x18d0		VoC_shru16_ri(REG6,0x1,IN_PARALLEL)	|	VoC_add16_rr(REG4,REG4,REG6,DEFAULT)
0xF9F9410C,	//0x18d2		VoC_shru16_ri(REG1,0xffffffff,IN_PARALLEL)	|	VoC_add16_rr(REG4,REG4,REG1,DEFAULT)
0xC18B413C,	//0x18d4		VoC_add16_rr(REG3,REG6,REG1,IN_PARALLEL)	|	VoC_add16_rr(REG4,REG4,REG7,DEFAULT)
0xC0EB7914,	//0x18d6		VoC_add16_rr(REG3,REG3,REG5,IN_PARALLEL)	|	VoC_shru16_ri(REG4,0x2,DEFAULT)
0xF90940FB,	//0x18d8		VoC_shru16_ri(REG1,0x1,IN_PARALLEL)	|	VoC_add16_rr(REG3,REG3,REG7,DEFAULT)
0xE0177913,	//0x18da		VoC_lw16i_short(REG7,0x1,IN_PARALLEL)	|	VoC_shru16_ri(REG3,0x2,DEFAULT)
0x17271504,	//0x18dc		VoC_sw16_d(REG4,0x1727)
0x172E1504,	//0x18de		VoC_sw16_d(REG4,0x172e)
0x17261503,	//0x18e0		VoC_sw16_d(REG3,0x1726)
0x172D1503,	//0x18e2		VoC_sw16_d(REG3,0x172d)
0xF7A3418E,	//0x18e4		VoC_movreg16(REG3,RL6_HI,IN_PARALLEL)	|	VoC_add16_rr(REG6,REG6,REG1,DEFAULT)
0xF78041BE,	//0x18e6		VoC_movreg16(REG0,RL6_LO,IN_PARALLEL)	|	VoC_add16_rr(REG6,REG6,REG7,DEFAULT)
0xDFC2F90E,	//0x18e8		VoC_push16(REG2,DEFAULT)	|	VoC_shru16_ri(REG6,0x1,DEFAULT)
0x17231506,	//0x18ea		VoC_sw16_d(REG6,0x1723)
0x172A1506,	//0x18ec		VoC_sw16_d(REG6,0x172a)
0xC15D414E,	//0x18ee		VoC_add16_rr(REG5,REG5,REG3,IN_PARALLEL)	|	VoC_add16_rr(REG6,REG5,REG1,DEFAULT)
0xC17D41BE,	//0x18f0		VoC_add16_rr(REG5,REG5,REG7,IN_PARALLEL)	|	VoC_add16_rr(REG6,REG6,REG7,DEFAULT)
0xF90E41AA,	//0x18f2		VoC_shru16_ri(REG6,0x1,IN_PARALLEL)	|	VoC_add16_rr(REG2,REG6,REG5,DEFAULT)
0x1506F912,	//0x18f4		VoC_sw16_d(REG6,0x1722)(lo)	|	VoC_shru16_ri(REG2,0x2,DEFAULT)
0x15061722,	//0x18f6		VoC_sw16_d(REG6,0x1729)(lo)	|	VoC_sw16_d(REG6,0x1722)(hi)
0x15021729,	//0x18f8		VoC_sw16_d(REG2,0x1725)(lo)	|	VoC_sw16_d(REG6,0x1729)(hi)
0x15021725,	//0x18fa		VoC_sw16_d(REG2,0x172c)(lo)	|	VoC_sw16_d(REG2,0x1725)(hi)
0x4018172C,	//0x18fc		VoC_add16_rr(REG0,REG0,REG3,DEFAULT)	|	VoC_sw16_d(REG2,0x172c)(hi)
0x4038DF82,	//0x18fe		VoC_add16_rr(REG0,REG0,REG7,DEFAULT)	|	VoC_pop16(REG2,IN_PARALLEL)
0x4146F00B,	//0x1900		VoC_add16_rr(REG6,REG5,REG0,DEFAULT)	|	VoC_lw16i_short(INC3,0x2,IN_PARALLEL)
0x7908F90D,	//0x1902		VoC_shru16_ri(REG0,0x1,DEFAULT)	|	VoC_shru16_ri(REG5,0x1,IN_PARALLEL)
0x1505F916,	//0x1904		VoC_sw16_d(REG5,0x1721)(lo)	|	VoC_shru16_ri(REG6,0x2,IN_PARALLEL)
0x15051721,	//0x1906		VoC_sw16_d(REG5,0x1728)(lo)	|	VoC_sw16_d(REG5,0x1721)(hi)
0x15001728,	//0x1908		VoC_sw16_d(REG0,0x1720)(lo)	|	VoC_sw16_d(REG5,0x1728)(hi)
0x15061720,	//0x190a		VoC_sw16_d(REG6,0x1724)(lo)	|	VoC_sw16_d(REG0,0x1720)(hi)
0x0A831724,	//0x190c		VoC_lw16i(REG3,0x1720)(lo)	|	VoC_sw16_d(REG6,0x1724)(hi)
0x70521720,	//0x190e		VoC_lw16i_short(INC2,0x2,DEFAULT)	|	VoC_lw16i(REG3,0x1720)(hi)
0xE884E120,	//0x1910		VoC_loop_i_short(0x4,DEFAULT)	|	VoC_lw16i_short(REG0,0x12,IN_PARALLEL)
0xD9DBD9DA,	//0x1912		VoC_lw32inc_p(REG67,REG3,DEFAULT)	|	VoC_lw32inc_p(REG45,REG3,DEFAULT)
0x5D93DDD2,	//0x1914		VoC_sw32_p(REG67,REG2,DEFAULT)	|	VoC_sw32inc_p(REG45,REG2,DEFAULT)
		//0x1915		VoC_endloop0
0xE580C082,	//0x1916		VoC_return	|	VoC_add16_rr(REG2,REG2,REG0,IN_PARALLEL)
		//0x1918		CS_pred4x4_horizontal_c
0x482C0793,	//0x1918		VoC_sub16_rd(REG3,REG2,0x482c)
0xF0527293,	//0x191a		VoC_lw16i_short(INC2,0x14,IN_PARALLEL)	|	VoC_lw16i_short(INC3,0x14,DEFAULT)
0x482D0711,	//0x191c		VoC_add16_rd(REG1,REG2,0x482d)
0xD8B55834,	//0x191e		VoC_lw16inc_p(REG5,REG3,IN_PARALLEL)	|	VoC_lw16_p(REG4,REG3,DEFAULT)
0xF0516885,	//0x1920		VoC_lw16i_short(INC1,0x14,IN_PARALLEL)	|	VoC_loop_i_short(0x4,DEFAULT)
0x5834DDD2,	//0x1922		VoC_lw16_p(REG4,REG3,DEFAULT)	|	VoC_sw32inc_p(REG45,REG2,DEFAULT)
0xDDCAD8B5,	//0x1924		VoC_sw32inc_p(REG45,REG1,DEFAULT)	|	VoC_lw16inc_p(REG5,REG3,IN_PARALLEL)
		//0x1925		VoC_endloop0
0xF033E580,	//0x1926		VoC_lw16i_short(INC3,0x1,DEFAULT)	|	VoC_return
		//0x1927		CS_pred4x4_down_left_c
0xD8B0F066,	//0x1928		VoC_lw16inc_p(REG0,REG3,DEFAULT)	|	VoC_lw16i_short(REG6,0x3,DEFAULT)
0xD8B1D8B4,	//0x192a		VoC_lw16inc_p(REG1,REG3,DEFAULT)	|	VoC_lw16inc_p(REG4,REG3,DEFAULT)
0x45AED835,	//0x192c		VoC_mult16_rr(REG6,REG6,REG5,DEFAULT)	|	VoC_lw16_p(REG5,REG3,DEFAULT)
0x7047E143,	//0x192e		VoC_lw16i_short(REG7,0x2,DEFAULT)	|	VoC_lw16i_short(REG3,0x14,IN_PARALLEL)
0xC076C29B,	//0x1930		VoC_add16_rr(REG6,REG1,REG6,DEFAULT)	|	VoC_sub16_rr(REG3,REG2,REG3,IN_PARALLEL)
0x7916C1BE,	//0x1932		VoC_shru16_ri(REG6,0x2,DEFAULT)	|	VoC_add16_rr(REG6,REG6,REG7,DEFAULT)
0x414DF9F9,	//0x1934		VoC_add16_rr(REG5,REG5,REG1,DEFAULT)	|	VoC_shru16_ri(REG1,0xffffffff,IN_PARALLEL)
0x1506F909,	//0x1936		VoC_sw16_d(REG6,0x172f)(lo)	|	VoC_shru16_ri(REG1,0x1,IN_PARALLEL)
0x4165172F,	//0x1938		VoC_add16_rr(REG5,REG5,REG4,DEFAULT)	|	VoC_sw16_d(REG6,0x172f)(hi)
0x417DF9FC,	//0x193a		VoC_add16_rr(REG5,REG5,REG7,DEFAULT)	|	VoC_shru16_ri(REG4,0xffffffff,IN_PARALLEL)
0x7915C061,	//0x193c		VoC_shru16_ri(REG5,0x2,DEFAULT)	|	VoC_add16_rr(REG1,REG1,REG4,IN_PARALLEL)
0xDE18D9DC,	//0x193e		VoC_inc_p(REG3,DEFAULT)	|	VoC_lw32inc_p(ACC0,REG3,IN_PARALLEL)
0x172B1505,	//0x1940		VoC_sw16_d(REG5,0x172b)
0x172E1505,	//0x1942		VoC_sw16_d(REG5,0x172e)
0xF90C58B6,	//0x1944		VoC_shru16_ri(REG4,0x1,IN_PARALLEL)	|	VoC_lw16inc_p(REG6,REG3,DEFAULT)
0xC0415835,	//0x1946		VoC_add16_rr(REG1,REG1,REG0,IN_PARALLEL)	|	VoC_lw16_p(REG5,REG3,DEFAULT)
0xF9F84079,	//0x1948		VoC_shru16_ri(REG0,0xffffffff,IN_PARALLEL)	|	VoC_add16_rr(REG1,REG1,REG7,DEFAULT)
0xC1047911,	//0x194a		VoC_add16_rr(REG4,REG4,REG0,IN_PARALLEL)	|	VoC_shru16_ri(REG1,0x2,DEFAULT)
0xF908412C,	//0x194c		VoC_shru16_ri(REG0,0x1,IN_PARALLEL)	|	VoC_add16_rr(REG4,REG4,REG5,DEFAULT)
0x17271501,	//0x194e		VoC_sw16_d(REG1,0x1727)
0x172A1501,	//0x1950		VoC_sw16_d(REG1,0x172a)
0x172D1501,	//0x1952		VoC_sw16_d(REG1,0x172d)
0xF721413C,	//0x1954		VoC_movreg16(REG1,ACC0_HI,IN_PARALLEL)	|	VoC_add16_rr(REG4,REG4,REG7,DEFAULT)
0x4030F914,	//0x1956		VoC_add16_rr(REG0,REG0,REG6,DEFAULT)	|	VoC_shru16_ri(REG4,0x2,DEFAULT)
0x1504F9FD,	//0x1958		VoC_sw16_d(REG4,0x1723)(lo)	|	VoC_shru16_ri(REG5,0xffffffff,IN_PARALLEL)
0x15041723,	//0x195a		VoC_sw16_d(REG4,0x1726)(lo)	|	VoC_sw16_d(REG4,0x1723)(hi)
0x15041726,	//0x195c		VoC_sw16_d(REG4,0x1729)(lo)	|	VoC_sw16_d(REG4,0x1726)(hi)
0x15041729,	//0x195e		VoC_sw16_d(REG4,0x172c)(lo)	|	VoC_sw16_d(REG4,0x1729)(hi)
0xC038172C,	//0x1960		VoC_add16_rr(REG0,REG0,REG7,DEFAULT)	|	VoC_sw16_d(REG4,0x172c)(hi)
0xF90D4028,	//0x1962		VoC_shru16_ri(REG5,0x1,IN_PARALLEL)	|	VoC_add16_rr(REG0,REG0,REG5,DEFAULT)
0xE104F910,	//0x1964		VoC_movreg16(REG4,ACC0_LO,DEFAULT)	|	VoC_shru16_ri(REG0,0x2,DEFAULT)
0x17221500,	//0x1966		VoC_sw16_d(REG0,0x1722)
0x17251500,	//0x1968		VoC_sw16_d(REG0,0x1725)
0x17281500,	//0x196a		VoC_sw16_d(REG0,0x1728)
0xF9FE414D,	//0x196c		VoC_shru16_ri(REG6,0xffffffff,IN_PARALLEL)	|	VoC_add16_rr(REG5,REG5,REG1,DEFAULT)
0xF90E41AD,	//0x196e		VoC_shru16_ri(REG6,0x1,IN_PARALLEL)	|	VoC_add16_rr(REG5,REG6,REG5,DEFAULT)
0xF9F9417D,	//0x1970		VoC_shru16_ri(REG1,0xffffffff,IN_PARALLEL)	|	VoC_add16_rr(REG5,REG5,REG7,DEFAULT)
0xC18E7915,	//0x1972		VoC_add16_rr(REG6,REG6,REG1,IN_PARALLEL)	|	VoC_shru16_ri(REG5,0x2,DEFAULT)
0x1505C1A6,	//0x1974		VoC_sw16_d(REG5,0x1721)(lo)	|	VoC_add16_rr(REG6,REG6,REG4,DEFAULT)
0x15051721,	//0x1976		VoC_sw16_d(REG5,0x1724)(lo)	|	VoC_sw16_d(REG5,0x1721)(hi)
0x41BE1724,	//0x1978		VoC_add16_rr(REG6,REG6,REG7,DEFAULT)	|	VoC_sw16_d(REG5,0x1724)(hi)
0x7916E120,	//0x197a		VoC_shru16_ri(REG6,0x2,DEFAULT)	|	VoC_lw16i_short(REG0,0x12,IN_PARALLEL)
0x180BF00A,	//0x197c		VoC_lw16i_set_inc(REG3,0x1720,0x2)(lo)	|	VoC_lw16i_short(INC2,0x2,IN_PARALLEL)
0x15061720,	//0x197e		VoC_sw16_d(REG6,0x1720)(lo)	|	VoC_lw16i_set_inc(REG3,0x1720,0x2)(hi)
0xE8841720,	//0x1980		VoC_loop_i_short(0x4,DEFAULT)	|	VoC_sw16_d(REG6,0x1720)(hi)
0xD9DBD9DA,	//0x1982		VoC_lw32inc_p(REG67,REG3,DEFAULT)	|	VoC_lw32inc_p(REG45,REG3,DEFAULT)
0x5D93DDD2,	//0x1984		VoC_sw32_p(REG67,REG2,DEFAULT)	|	VoC_sw32inc_p(REG45,REG2,DEFAULT)
		//0x1985		VoC_endloop0
0xE580C082,	//0x1986		VoC_return	|	VoC_add16_rr(REG2,REG2,REG0,IN_PARALLEL)
		//0x1988		CS_pred4x4_vertical_right_c
0x00141807,	//0x1988		VoC_lw16i_set_inc(REG3,0x14,0x1)
0xC29B7027,	//0x198a		VoC_sub16_rr(REG3,REG2,REG3,IN_PARALLEL)	|	VoC_lw16i_short(REG7,0x1,DEFAULT)
0xC2F85FC2,	//0x198c		VoC_sub16_rr(REG0,REG3,REG7,IN_PARALLEL)	|	VoC_push16(REG2,DEFAULT)
0xD8B4D8B6,	//0x198e		VoC_lw16inc_p(REG4,REG3,DEFAULT)	|	VoC_lw16inc_p(REG6,REG3,DEFAULT)
0x5835D8B2,	//0x1990		VoC_lw16_p(REG5,REG3,DEFAULT)	|	VoC_lw16inc_p(REG2,REG3,DEFAULT)
0x4150F603,	//0x1992		VoC_add16_rr(REG0,REG5,REG2,DEFAULT)	|	VoC_movreg16(REG3,REG0,IN_PARALLEL)
0x4038C0A1,	//0x1994		VoC_add16_rr(REG0,REG0,REG7,DEFAULT)	|	VoC_add16_rr(REG1,REG2,REG4,IN_PARALLEL)
0x400DC079,	//0x1996		VoC_add16_rr(REG5,REG0,REG1,DEFAULT)	|	VoC_add16_rr(REG1,REG1,REG7,IN_PARALLEL)
0x7915F908,	//0x1998		VoC_shru16_ri(REG5,0x2,DEFAULT)	|	VoC_shru16_ri(REG0,0x1,IN_PARALLEL)
0x1500C1A0,	//0x199a		VoC_sw16_d(REG0,0x1723)(lo)	|	VoC_add16_rr(REG0,REG6,REG4,IN_PARALLEL)
0x15051723,	//0x199c		VoC_sw16_d(REG5,0x1727)(lo)	|	VoC_sw16_d(REG0,0x1723)(hi)
0xC0381727,	//0x199e		VoC_add16_rr(REG0,REG0,REG7,DEFAULT)	|	VoC_sw16_d(REG5,0x1727)(hi)
0xF909400C,	//0x19a0		VoC_shru16_ri(REG1,0x1,IN_PARALLEL)	|	VoC_add16_rr(REG4,REG0,REG1,DEFAULT)
0x1501F914,	//0x19a2		VoC_sw16_d(REG1,0x1722)(lo)	|	VoC_shru16_ri(REG4,0x2,DEFAULT)
0x15011722,	//0x19a4		VoC_sw16_d(REG1,0x172b)(lo)	|	VoC_sw16_d(REG1,0x1722)(hi)
0x1504172B,	//0x19a6		VoC_sw16_d(REG4,0x1726)(lo)	|	VoC_sw16_d(REG1,0x172b)(hi)
0x15041726,	//0x19a8		VoC_sw16_d(REG4,0x172f)(lo)	|	VoC_sw16_d(REG4,0x1726)(hi)
0x5831172F,	//0x19aa		VoC_lw16_p(REG1,REG3,DEFAULT)	|	VoC_sw16_d(REG4,0x172f)(hi)
0x418EC1BE,	//0x19ac		VoC_add16_rr(REG6,REG6,REG1,DEFAULT)	|	VoC_add16_rr(REG6,REG6,REG7,IN_PARALLEL)
0x4034E142,	//0x19ae		VoC_add16_rr(REG4,REG0,REG6,DEFAULT)	|	VoC_lw16i_short(REG2,0x14,IN_PARALLEL)
0xC0D3F908,	//0x19b0		VoC_add16_rr(REG3,REG3,REG2,DEFAULT)	|	VoC_shru16_ri(REG0,0x1,IN_PARALLEL)
0x17211500,	//0x19b2		VoC_sw16_d(REG0,0x1721)
0x172A1500,	//0x19b4		VoC_sw16_d(REG0,0x172a)
0xD8327914,	//0x19b6		VoC_lw16_p(REG2,REG3,IN_PARALLEL)	|	VoC_shru16_ri(REG4,0x2,DEFAULT)
0x1504F280,	//0x19b8		VoC_sw16_d(REG4,0x1725)(lo)	|	VoC_lw16i_short(REG0,0x14,DEFAULT)
0x15041725,	//0x19ba		VoC_sw16_d(REG4,0x172e)(lo)	|	VoC_sw16_d(REG4,0x1725)(hi)
0x407C172E,	//0x19bc		VoC_add16_rr(REG4,REG1,REG7,DEFAULT)	|	VoC_sw16_d(REG4,0x172e)(hi)
0x4114C0C3,	//0x19be		VoC_add16_rr(REG4,REG4,REG2,DEFAULT)	|	VoC_add16_rr(REG3,REG3,REG0,IN_PARALLEL)
0x4134E027,	//0x19c0		VoC_add16_rr(REG4,REG4,REG6,DEFAULT)	|	VoC_lw16i_short(REG7,0x2,IN_PARALLEL)
0x7914F90E,	//0x19c2		VoC_shru16_ri(REG4,0x2,DEFAULT)	|	VoC_shru16_ri(REG6,0x1,IN_PARALLEL)
0x1506F9FA,	//0x19c4		VoC_sw16_d(REG6,0x1720)(lo)	|	VoC_shru16_ri(REG2,0xffffffff,IN_PARALLEL)
0x15061720,	//0x19c6		VoC_sw16_d(REG6,0x1729)(lo)	|	VoC_sw16_d(REG6,0x1720)(hi)
0x15041729,	//0x19c8		VoC_sw16_d(REG4,0x1724)(lo)	|	VoC_sw16_d(REG6,0x1729)(hi)
0x15041724,	//0x19ca		VoC_sw16_d(REG4,0x172d)(lo)	|	VoC_sw16_d(REG4,0x1724)(hi)
0x5836172D,	//0x19cc		VoC_lw16_p(REG6,REG3,DEFAULT)	|	VoC_sw16_d(REG4,0x172d)(hi)
0x4051E144,	//0x19ce		VoC_add16_rr(REG1,REG1,REG2,DEFAULT)	|	VoC_lw16i_short(REG4,0x14,IN_PARALLEL)
0x790AC0E3,	//0x19d0		VoC_shru16_ri(REG2,0x1,DEFAULT)	|	VoC_add16_rr(REG3,REG3,REG4,IN_PARALLEL)
0x4071E140,	//0x19d2		VoC_add16_rr(REG1,REG1,REG6,DEFAULT)	|	VoC_lw16i_short(REG0,0x14,IN_PARALLEL)
0x4079D834,	//0x19d4		VoC_add16_rr(REG1,REG1,REG7,DEFAULT)	|	VoC_lw16_p(REG4,REG3,IN_PARALLEL)
0x7911C0C3,	//0x19d6		VoC_shru16_ri(REG1,0x2,DEFAULT)	|	VoC_add16_rr(REG3,REG3,REG0,IN_PARALLEL)
0x4196F9FE,	//0x19d8		VoC_add16_rr(REG6,REG6,REG2,DEFAULT)	|	VoC_shru16_ri(REG6,0xffffffff,IN_PARALLEL)
0x1501DF82,	//0x19da		VoC_sw16_d(REG1,0x1728)(lo)	|	VoC_pop16(REG2,IN_PARALLEL)
0x41A61728,	//0x19dc		VoC_add16_rr(REG6,REG6,REG4,DEFAULT)	|	VoC_sw16_d(REG1,0x1728)(hi)
0x41BEE120,	//0x19de		VoC_add16_rr(REG6,REG6,REG7,DEFAULT)	|	VoC_lw16i_short(REG0,0x12,IN_PARALLEL)
0xF916F00A,	//0x19e0		VoC_shru16_ri(REG6,0x2,DEFAULT)	|	VoC_lw16i_short(INC2,0x2,IN_PARALLEL)
0x1720180B,	//0x19e2		VoC_lw16i_set_inc(REG3,0x1720,0x2)
0x172C1506,	//0x19e4		VoC_sw16_d(REG6,0x172c)
0xD9DAE884,	//0x19e6		VoC_lw32inc_p(REG45,REG3,DEFAULT)	|	VoC_loop_i_short(0x4,DEFAULT)
0xDDD2D9DB,	//0x19e8		VoC_sw32inc_p(REG45,REG2,DEFAULT)	|	VoC_lw32inc_p(REG67,REG3,DEFAULT)
		//0x19ea		VoC_endloop0
0xC0825D93,	//0x19ea		VoC_add16_rr(REG2,REG2,REG0,IN_PARALLEL)	|	VoC_sw32_p(REG67,REG2,DEFAULT)
0xF027E580,	//0x19ec		VoC_lw16i_short(REG7,0x1,DEFAULT)	|	VoC_return
		//0x19ed		CS_pred4x4_horizontal_up_c
0xF286C2BB,	//0x19ee		VoC_lw16i_short(REG6,0x14,DEFAULT)	|	VoC_sub16_rr(REG3,REG2,REG7,DEFAULT)
0xC0F35834,	//0x19f0		VoC_add16_rr(REG3,REG3,REG6,IN_PARALLEL)	|	VoC_lw16_p(REG4,REG3,DEFAULT)
0x5835C0F3,	//0x19f2		VoC_lw16_p(REG5,REG3,DEFAULT)	|	VoC_add16_rr(REG3,REG3,REG6,DEFAULT)
0xC0F3C13C,	//0x19f4		VoC_add16_rr(REG3,REG3,REG6,DEFAULT)	|	VoC_add16_rr(REG4,REG4,REG7,IN_PARALLEL)
0xD830412C,	//0x19f6		VoC_lw16_p(REG0,REG3,IN_PARALLEL)	|	VoC_add16_rr(REG4,REG4,REG5,DEFAULT)
0xC145D831,	//0x19f8		VoC_add16_rr(REG5,REG5,REG0,DEFAULT)	|	VoC_lw16_p(REG1,REG3,DEFAULT)
0xC040417D,	//0x19fa		VoC_add16_rr(REG0,REG1,REG0,IN_PARALLEL)	|	VoC_add16_rr(REG5,REG5,REG7,DEFAULT)
0xF90C412B,	//0x19fc		VoC_shru16_ri(REG4,0x1,IN_PARALLEL)	|	VoC_add16_rr(REG3,REG4,REG5,DEFAULT)
0xC0387913,	//0x19fe		VoC_add16_rr(REG0,REG0,REG7,IN_PARALLEL)	|	VoC_shru16_ri(REG3,0x2,DEFAULT)
0x17201504,	//0x1a00		VoC_sw16_d(REG4,0x1720)
0x17211503,	//0x1a02		VoC_sw16_d(REG3,0x1721)
0xF90D4143,	//0x1a04		VoC_shru16_ri(REG5,0x1,IN_PARALLEL)	|	VoC_add16_rr(REG3,REG5,REG0,DEFAULT)
0xC00C7913,	//0x1a06		VoC_add16_rr(REG4,REG0,REG1,IN_PARALLEL)	|	VoC_shru16_ri(REG3,0x2,DEFAULT)
0x17221505,	//0x1a08		VoC_sw16_d(REG5,0x1722)
0x17241505,	//0x1a0a		VoC_sw16_d(REG5,0x1724)
0x17231503,	//0x1a0c		VoC_sw16_d(REG3,0x1723)
0x17251503,	//0x1a0e		VoC_sw16_d(REG3,0x1725)
0xC10C7908,	//0x1a10		VoC_add16_rr(REG4,REG4,REG1,IN_PARALLEL)	|	VoC_shru16_ri(REG0,0x1,DEFAULT)
0xF914C13C,	//0x1a12		VoC_shru16_ri(REG4,0x2,DEFAULT)	|	VoC_add16_rr(REG4,REG4,REG7,DEFAULT)
0x17261500,	//0x1a14		VoC_sw16_d(REG0,0x1726)
0x17281500,	//0x1a16		VoC_sw16_d(REG0,0x1728)
0x172A1807,	//0x1a18		VoC_lw16i_set_inc(REG3,0x172a,0x1)
0xDCB1E8C1,	//0x1a1a		VoC_sw16inc_p(REG1,REG3,DEFAULT)	|	VoC_loop_i_short(0x6,DEFAULT)
		//0x1a1b		VoC_endloop0
0x17271504,	//0x1a1c		VoC_sw16_d(REG4,0x1727)
0x17291504,	//0x1a1e		VoC_sw16_d(REG4,0x1729)
0x1720180B,	//0x1a20		VoC_lw16i_set_inc(REG3,0x1720,0x2)
0xF00A7240,	//0x1a22		VoC_lw16i_short(INC2,0x2,IN_PARALLEL)	|	VoC_lw16i_short(REG0,0x12,DEFAULT)
0xD9DAE884,	//0x1a24		VoC_lw32inc_p(REG45,REG3,DEFAULT)	|	VoC_loop_i_short(0x4,DEFAULT)
0xDDD2D9DB,	//0x1a26		VoC_sw32inc_p(REG45,REG2,DEFAULT)	|	VoC_lw32inc_p(REG67,REG3,DEFAULT)
		//0x1a28		VoC_endloop0
0xC0825D93,	//0x1a28		VoC_add16_rr(REG2,REG2,REG0,IN_PARALLEL)	|	VoC_sw32_p(REG67,REG2,DEFAULT)
0xFFC06580,	//0x1a2a		VoC_NAD(IN_PARALLEL)	|	VoC_return
		//0x1a2c		CS_PRED44_37
0xE1435F40,	//0x1a2c		VoC_lw16i_short(REG3,0x14,IN_PARALLEL)	|	VoC_push32(REG01,DEFAULT)
0x177A1405,	//0x1a2e		VoC_lw16_d(REG5,0x177a)
0xE046797D,	//0x1a30		VoC_lw16i_short(REG6,0x4,IN_PARALLEL)	|	VoC_shru16_ri(REG5,0xf,DEFAULT)
0x3185C29B,	//0x1a32		VoC_bez16_r(CS_PRED44_37_01,REG5)(lo)	|	VoC_sub16_rr(REG3,REG2,REG3,DEFAULT)
0x59101A41,	//0x1a34		VoC_lw32_sd(REG01,0x1,DEFAULT)	|	VoC_bez16_r(CS_PRED44_37_01,REG5)(hi)
0xC279E027,	//0x1a36		VoC_sub16_rr(REG1,REG1,REG7,DEFAULT)	|	VoC_lw16i_short(REG7,0x2,IN_PARALLEL)
0xD811F180,	//0x1a38		VoC_lw16_p(REG1,REG1,DEFAULT)	|	VoC_lw16i_short(REG0,0xc,DEFAULT)
0x1A3E3508,	//0x1a3a		VoC_be16_rr(CS_PRED44_37_03,REG1,REG0)
0xE5CFC0F3,	//0x1a3c		VoC_jump(CS_PRED44_37_02)	|	VoC_add16_rr(REG3,REG3,REG6,DEFAULT)
		//0x1a3e		CS_PRED44_37_03
0x57500A83,	//0x1a3e		VoC_lw16i(REG3,0x5750)
0xF066E5CC,	//0x1a40		VoC_lw16i_short(REG6,0x3,DEFAULT)	|	VoC_jump(CS_PRED44_37_02)
		//0x1a41		CS_PRED44_37_01
0xFFC0C0F3,	//0x1a42		VoC_NOP	|	VoC_add16_rr(REG3,REG3,REG6,DEFAULT)
0xE0E6D837,	//0x1a44		VoC_movreg16(REG6,REG7,DEFAULT)	|	VoC_lw16_p(REG7,REG3,DEFAULT)
0x177C0A83,	//0x1a46		VoC_lw16i(REG3,0x177c)
0x177C1583,	//0x1a48		VoC_sw32_d(REG67,0x177c)
0x177E1583,	//0x1a4a		VoC_sw32_d(REG67,0x177e)
		//0x1a4c		CS_PRED44_37_02
0xE580DF00,	//0x1a4c		VoC_return	|	VoC_pop32(REG01,DEFAULT)
		//0x1a4e		CS_idct_internal
0xE2045837,	//0x1a4e		VoC_lw16i_short(REG4,0x20,IN_PARALLEL)	|	VoC_lw16_p(REG7,REG3,DEFAULT)
0xF66041E7,	//0x1a50		VoC_movreg16(REG0,REG3,IN_PARALLEL)	|	VoC_add16_rr(REG7,REG7,REG4,DEFAULT)
0xF0056061,	//0x1a52		VoC_lw16i_short(INC1,0x1,IN_PARALLEL)	|	VoC_movreg16(REG1,REG3,DEFAULT)
0x6894DC37,	//0x1a54		VoC_loop_i_short(0x4,DEFAULT)	|	VoC_sw16_p(REG7,REG3,DEFAULT)
0xD884DF41,	//0x1a56		VoC_lw16inc_p(REG4,REG0,DEFAULT)	|	VoC_push32(REG23,IN_PARALLEL)
0xD886D885,	//0x1a58		VoC_lw16inc_p(REG6,REG0,DEFAULT)	|	VoC_lw16inc_p(REG5,REG0,DEFAULT)
0xC1335887,	//0x1a5a		VoC_add16_rr(REG3,REG4,REG6,IN_PARALLEL)	|	VoC_lw16inc_p(REG7,REG0,DEFAULT)
0xF6A64334,	//0x1a5c		VoC_movreg16(REG6,REG5,IN_PARALLEL)	|	VoC_sub16_rr(REG4,REG4,REG6,DEFAULT)
0x43BEF80E,	//0x1a5e		VoC_sub16_rr(REG6,REG6,REG7,DEFAULT)	|	VoC_shr16_ri(REG6,0x1,DEFAULT)
0x417FF80F,	//0x1a60		VoC_add16_rr(REG7,REG5,REG7,DEFAULT)	|	VoC_shr16_ri(REG7,0x1,IN_PARALLEL)
0x40FAC135,	//0x1a62		VoC_add16_rr(REG2,REG3,REG7,DEFAULT)	|	VoC_add16_rr(REG5,REG4,REG6,IN_PARALLEL)
0xC2FBC334,	//0x1a64		VoC_sub16_rr(REG3,REG3,REG7,DEFAULT)	|	VoC_sub16_rr(REG4,REG4,REG6,IN_PARALLEL)
0xDC95DC92,	//0x1a66		VoC_sw16inc_p(REG5,REG1,DEFAULT)	|	VoC_sw16inc_p(REG2,REG1,DEFAULT)
0xDC93DC94,	//0x1a68		VoC_sw16inc_p(REG3,REG1,DEFAULT)	|	VoC_sw16inc_p(REG4,REG1,DEFAULT)
		//0x1a69		VoC_endloop0
0xE060DF01,	//0x1a6a		VoC_movreg16(REG0,REG3,DEFAULT)	|	VoC_pop32(REG23,DEFAULT)
0x17201805,	//0x1a6c		VoC_lw16i_set_inc(REG1,0x1720,0x1)
0x6896F090,	//0x1a6e		VoC_loop_i_short(0x4,DEFAULT)	|	VoC_lw16i_short(INC0,0x4,DEFAULT)
0xD884DF41,	//0x1a70		VoC_lw16inc_p(REG4,REG0,DEFAULT)	|	VoC_push32(REG23,IN_PARALLEL)
0xD886D885,	//0x1a72		VoC_lw16inc_p(REG6,REG0,DEFAULT)	|	VoC_lw16inc_p(REG5,REG0,DEFAULT)
0xC1335887,	//0x1a74		VoC_add16_rr(REG3,REG4,REG6,IN_PARALLEL)	|	VoC_lw16inc_p(REG7,REG0,DEFAULT)
0xF6A64334,	//0x1a76		VoC_movreg16(REG6,REG5,IN_PARALLEL)	|	VoC_sub16_rr(REG4,REG4,REG6,DEFAULT)
0x43BEF80E,	//0x1a78		VoC_sub16_rr(REG6,REG6,REG7,DEFAULT)	|	VoC_shr16_ri(REG6,0x1,DEFAULT)
0x417FF80F,	//0x1a7a		VoC_add16_rr(REG7,REG5,REG7,DEFAULT)	|	VoC_shr16_ri(REG7,0x1,IN_PARALLEL)
0x40FAC135,	//0x1a7c		VoC_add16_rr(REG2,REG3,REG7,DEFAULT)	|	VoC_add16_rr(REG5,REG4,REG6,IN_PARALLEL)
0x42FBC334,	//0x1a7e		VoC_sub16_rr(REG3,REG3,REG7,DEFAULT)	|	VoC_sub16_rr(REG4,REG4,REG6,IN_PARALLEL)
0x4230E0F6,	//0x1a80		VoC_sub16_rr(REG0,REG0,REG6,DEFAULT)	|	VoC_lw16i_short(REG6,0xf,IN_PARALLEL)
0xDC95DC92,	//0x1a82		VoC_sw16inc_p(REG5,REG1,DEFAULT)	|	VoC_sw16inc_p(REG2,REG1,IN_PARALLEL)
0xDC93DC94,	//0x1a84		VoC_sw16inc_p(REG3,REG1,DEFAULT)	|	VoC_sw16inc_p(REG4,REG1,DEFAULT)
		//0x1a85		VoC_endloop0
0xF00A5F01,	//0x1a86		VoC_lw16i_short(INC2,0x2,IN_PARALLEL)	|	VoC_pop32(REG23,DEFAULT)
0x17201811,	//0x1a88		VoC_lw16i_set_inc(REG1,0x1720,0x4)
0x00FF0A86,	//0x1a8a		VoC_lw16i(REG6,0xff)
0x1AA02C09,	//0x1a8c		VoC_loop_i(0x1,0x4)
0xD992E84C,	//0x1a8e		VoC_lw32_p(REG45,REG2,DEFAULT)	|	VoC_loop_i_short(0x2,DEFAULT)
0x7837D897,	//0x1a90		VoC_shr16_ri(REG7,0x6,DEFAULT)	|	VoC_lw16inc_p(REG7,REG1,DEFAULT)
0x413CD893,	//0x1a92		VoC_add16_rr(REG4,REG4,REG7,DEFAULT)	|	VoC_lw16inc_p(REG3,REG1,IN_PARALLEL)
0x415DF833,	//0x1a94		VoC_add16_rr(REG5,REG5,REG3,DEFAULT)	|	VoC_shr16_ri(REG3,0x6,IN_PARALLEL)
0x7047DEF4,	//0x1a96		VoC_lw16i_short(REG7,0x2,DEFAULT)	|	VoC_clipu16_rr(REG4,REG6,IN_PARALLEL)
0xFFC0DEF5,	//0x1a98		VoC_NOP	|	VoC_clipu16_rr(REG5,REG6,IN_PARALLEL)
		//0x1a9a		VoC_endloop0
0x71E4DDD2,	//0x1a9a		VoC_lw16i_short(REG4,0xf,DEFAULT)	|	VoC_sw32inc_p(REG45,REG2,DEFAULT)
0x4261E045,	//0x1a9c		VoC_sub16_rr(REG1,REG1,REG4,DEFAULT)	|	VoC_lw16i_short(REG5,0x4,IN_PARALLEL)
0xE184C2AA,	//0x1a9e		VoC_movreg16(REG4,RL6_LO,DEFAULT)	|	VoC_sub16_rr(REG2,REG2,REG5,IN_PARALLEL)
		//0x1aa0		VoC_endloop1
0xE580C0A2,	//0x1aa0		VoC_return	|	VoC_add16_rr(REG2,REG2,REG4,DEFAULT)
		//0x1aa2		CS_get_block_luma_Avg
0xE01A702B,	//0x1aa2		VoC_lw16i_short(ACC1_LO,0x1,IN_PARALLEL)	|	VoC_lw16i_short(ACC1_HI,0x1,DEFAULT)
0xFF0F7F06,	//0x1aa4		VoC_movreg32(RL7,REG23,IN_PARALLEL)	|	VoC_movreg32(RL6,REG01,DEFAULT)
0xF0087051,	//0x1aa6		VoC_lw16i_short(INC0,0x2,IN_PARALLEL)	|	VoC_lw16i_short(INC1,0x2,DEFAULT)
0xF603790E,	//0x1aa8		VoC_movreg16(REG3,REG0,IN_PARALLEL)	|	VoC_shru16_ri(REG6,0x1,DEFAULT)
0x07B6F053,	//0x1aaa		VoC_sub16_rd(REG6,REG6,0x482c)(lo)	|	VoC_lw16i_short(INC3,0x2,DEFAULT)
0xFFC0482C,	//0x1aac		VoC_NAD	|	VoC_sub16_rd(REG6,REG6,0x482c)(hi)
0x1AC02E39,	//0x1aae		VoC_loop_r(1,REG7)
0xC9BE6209,	//0x1ab0		VoC_add32_rr(RL6,RL6,RL7,IN_PARALLEL)	|	VoC_aligninc_pp(REG1,REG1,DEFAULT)
0xF667320C,	//0x1ab2		VoC_movreg16(REG7,REG3,IN_PARALLEL)	|	VoC_add32inc_pp(ACC0,REG0,REG1,DEFAULT)
0xC1D7492A,	//0x1ab4		VoC_add16_rr(REG7,REG7,REG2,IN_PARALLEL)	|	VoC_add32_rr(REG45,ACC0,ACC1,DEFAULT)
0xF80D780C,	//0x1ab6		VoC_shr16_ri(REG5,0x1,IN_PARALLEL)	|	VoC_shr16_ri(REG4,0x1,DEFAULT)
0xB20CE784,	//0x1ab8		VoC_add32inc_pp(ACC0,REG0,REG1,DEFAULT)	|	VoC_loop_r_short(REG6,DEFAULT)
0xDDDA492A,	//0x1aba		VoC_sw32inc_p(REG45,REG3,IN_PARALLEL)	|	VoC_add32_rr(REG45,ACC0,ACC1,DEFAULT)
		//0x1abc		VoC_endloop0
0xF80D780C,	//0x1abc		VoC_shr16_ri(REG5,0x1,IN_PARALLEL)	|	VoC_shr16_ri(REG4,0x1,DEFAULT)
0xF6E37F30,	//0x1abe		VoC_movreg16(REG3,REG7,IN_PARALLEL)	|	VoC_movreg32(REG01,RL6,DEFAULT)
		//0x1ac0		VoC_endloop1
0xE580DD9A,	//0x1ac0		VoC_return	|	VoC_sw32_p(REG45,REG3,DEFAULT)
		//0x1ac2		CS_get_block_luma_Avg_temp
0xE10C720D,	//0x1ac2		VoC_lw16i_short(RL6_LO,0x10,IN_PARALLEL)	|	VoC_lw16i_short(RL6_HI,0x10,DEFAULT)
0xE01A702B,	//0x1ac4		VoC_lw16i_short(ACC1_LO,0x1,IN_PARALLEL)	|	VoC_lw16i_short(ACC1_HI,0x1,DEFAULT)
0xDFC25F41,	//0x1ac6		VoC_push16(REG2,IN_PARALLEL)	|	VoC_push32(REG23,DEFAULT)
0xF6027F07,	//0x1ac8		VoC_movreg16(REG2,REG0,IN_PARALLEL)	|	VoC_movreg32(RL7,REG01,DEFAULT)
0xF0097050,	//0x1aca		VoC_lw16i_short(INC1,0x2,IN_PARALLEL)	|	VoC_lw16i_short(INC0,0x2,DEFAULT)
0xF00A790E,	//0x1acc		VoC_lw16i_short(INC2,0x2,IN_PARALLEL)	|	VoC_shru16_ri(REG6,0x1,DEFAULT)
0x0A83FF07,	//0x1ace		VoC_lw16i(REG3,0xff)(lo)	|	VoC_movreg32(RL7,REG01,DEFAULT)
0xFFC000FF,	//0x1ad0		VoC_NAD	|	VoC_lw16i(REG3,0xff)(hi)
0x1AEF2E39,	//0x1ad2		VoC_loop_r(1,REG7)
0xD614590C,	//0x1ad4		VoC_lw16_sd(REG4,0x0,IN_PARALLEL)	|	VoC_lw32_sd(ACC0,0x0,DEFAULT)
0x138AE209,	//0x1ad6		VoC_add32inc_rp(REG45,RL6,REG1,DEFAULT)	|	VoC_aligninc_pp(REG1,REG1,DEFAULT)
0x782CC0A7,	//0x1ad8		VoC_shr16_ri(REG4,0x5,DEFAULT)	|	VoC_add16_rr(REG7,REG2,REG4,IN_PARALLEL)
0x49E7F82D,	//0x1ada		VoC_add32_rr(RL7,RL7,ACC0,DEFAULT)	|	VoC_shr16_ri(REG5,0x5,IN_PARALLEL)
0x1344DEDC,	//0x1adc		VoC_add32inc_rp(ACC0,ACC1,REG0,DEFAULT)	|	VoC_clipu16_rr(REG4,REG3,IN_PARALLEL)
0xC8A2DEDD,	//0x1ade		VoC_add32_rr(REG45,REG45,ACC0,DEFAULT)	|	VoC_clipu16_rr(REG5,REG3,IN_PARALLEL)
0xF80D780C,	//0x1ae0		VoC_shr16_ri(REG5,0x1,IN_PARALLEL)	|	VoC_shr16_ri(REG4,0x1,DEFAULT)
0xE78AFFC0,	//0x1ae2		VoC_loop_r_short(REG6,DEFAULT)	|	VoC_NAD
0xFF14138A,	//0x1ae4		VoC_movreg32(ACC0,REG45,IN_PARALLEL)	|	VoC_add32inc_rp(REG45,RL6,REG1,DEFAULT)
0xF82D782C,	//0x1ae6		VoC_shr16_ri(REG5,0x5,IN_PARALLEL)	|	VoC_shr16_ri(REG4,0x5,DEFAULT)
0xDEDC5DD4,	//0x1ae8		VoC_clipu16_rr(REG4,REG3,IN_PARALLEL)	|	VoC_sw32inc_p(ACC0,REG2,DEFAULT)
0xDEDD1344,	//0x1aea		VoC_clipu16_rr(REG5,REG3,IN_PARALLEL)	|	VoC_add32inc_rp(ACC0,ACC1,REG0,DEFAULT)
0x780CC8A2,	//0x1aec		VoC_shr16_ri(REG4,0x1,DEFAULT)	|	VoC_add32_rr(REG45,REG45,ACC0,DEFAULT)
		//0x1aed		VoC_endloop0
0x7F38F80D,	//0x1aee		VoC_movreg32(REG01,RL7,DEFAULT)	|	VoC_shr16_ri(REG5,0x1,IN_PARALLEL)
		//0x1aef		VoC_endloop1
0x5F01F6E2,	//0x1af0		VoC_pop32(REG23,DEFAULT)	|	VoC_movreg16(REG2,REG7,IN_PARALLEL)
0xE580DF86,	//0x1af2		VoC_return	|	VoC_pop16(REG6,IN_PARALLEL)
		//0x1af4		CS_get_block_luma_ver_22
0xF6526071,	//0x1af4		VoC_movreg16(INC2,REG2,IN_PARALLEL)	|	VoC_movreg16(INC1,REG3,DEFAULT)
0xE0046002,	//0x1af6		VoC_lw16i_short(REG4,0x0,IN_PARALLEL)	|	VoC_movreg16(REG2,REG0,DEFAULT)
0xE04C4259,	//0x1af8		VoC_lw16i_short(RL6_LO,0x4,IN_PARALLEL)	|	VoC_sub16_rr(REG1,REG1,REG3,DEFAULT)
0xE00F4259,	//0x1afa		VoC_lw16i_short(RL7_HI,0x0,IN_PARALLEL)	|	VoC_sub16_rr(REG1,REG1,REG3,DEFAULT)
0x17A41804,	//0x1afc		VoC_lw16i_set_inc(REG0,0x17a4,0x1)
0xE0157F05,	//0x1afe		VoC_lw16i_short(REG5,0x1,IN_PARALLEL)	|	VoC_movreg32(ACC1,REG01,DEFAULT)
0x02000A8E,	//0x1b00		VoC_lw16i(RL7_LO,0x200)
0xF9F35FC5,	//0x1b02		VoC_shru16_ri(REG3,0xfffffffe,IN_PARALLEL)	|	VoC_push16(REG5,DEFAULT)
0xDF42606D,	//0x1b04		VoC_push32(REG45,IN_PARALLEL)	|	VoC_movreg16(RL6_HI,REG3,DEFAULT)
0x00FF0A83,	//0x1b06		VoC_lw16i(REG3,0xff)
0x1B242E31,	//0x1b08		VoC_loop_r(1,REG6)
0xF6465899,	//0x1b0a		VoC_movreg16(REG6,REG2,IN_PARALLEL)	|	VoC_lw16inc_p(ACC0_HI,REG1,DEFAULT)
0xFA845408,	//0x1b0c		VoC_shr32_ri(ACC0,0x10,IN_PARALLEL)	|	VoC_mac32inc_pp(REG1,REG0,DEFAULT)
0xD408D408,	//0x1b0e		VoC_mac32inc_pp(REG1,REG0,DEFAULT)	|	VoC_mac32inc_pp(REG1,REG0,DEFAULT)
0x5308D408,	//0x1b10		VoC_mac32_pp(REG1,REG0,DEFAULT)	|	VoC_mac32inc_pp(REG1,REG0,DEFAULT)
0xE7CCCA30,	//0x1b12		VoC_loop_r_short(REG7,DEFAULT)	|	VoC_sub32_rr(REG01,REG01,RL6,IN_PARALLEL)
0xC93A5899,	//0x1b14		VoC_add32_rr(REG45,ACC0,RL7,IN_PARALLEL)	|	VoC_lw16inc_p(ACC0_HI,REG1,DEFAULT)
0xFA845408,	//0x1b16		VoC_shr32_ri(ACC0,0x10,IN_PARALLEL)	|	VoC_mac32inc_pp(REG1,REG0,DEFAULT)
0xFA525408,	//0x1b18		VoC_shr32_ri(REG45,0xa,IN_PARALLEL)	|	VoC_mac32inc_pp(REG1,REG0,DEFAULT)
0xDEDC5408,	//0x1b1a		VoC_clipu16_rr(REG4,REG3,IN_PARALLEL)	|	VoC_mac32inc_pp(REG1,REG0,DEFAULT)
0x5308D408,	//0x1b1c		VoC_mac32_pp(REG1,REG0,DEFAULT)	|	VoC_mac32inc_pp(REG1,REG0,DEFAULT)
0xDCA4CA30,	//0x1b1e		VoC_sw16inc_p(REG4,REG2,DEFAULT)	|	VoC_sub32_rr(REG01,REG01,RL6,IN_PARALLEL)
		//0x1b1f		VoC_endloop0
0xD90A5612,	//0x1b20		VoC_lw32_sd(REG45,0x0,IN_PARALLEL)	|	VoC_lw16_sd(REG2,0x0,DEFAULT)
0xC8A84192,	//0x1b22		VoC_add32_rr(REG01,REG45,ACC1,IN_PARALLEL)	|	VoC_add16_rr(REG2,REG6,REG2,DEFAULT)
		//0x1b24		VoC_endloop1
0x5F82FF05,	//0x1b24		VoC_pop16(REG2,DEFAULT)	|	VoC_movreg32(ACC1,REG01,DEFAULT)
0xE580DF02,	//0x1b26		VoC_return	|	VoC_pop32(REG45,IN_PARALLEL)
		//0x1b28		CS_get_block_luma_hor_22
0xF0067031,	//0x1b28		VoC_lw16i_short(INC2,0x1,IN_PARALLEL)	|	VoC_lw16i_short(INC1,0x1,DEFAULT)
0xE0046065,	//0x1b2a		VoC_lw16i_short(REG4,0x0,IN_PARALLEL)	|	VoC_movreg16(REG5,REG3,DEFAULT)
0x482D0789,	//0x1b2c		VoC_sub16_rd(REG1,REG1,0x482d)
0xDF425FC2,	//0x1b2e		VoC_push32(REG45,IN_PARALLEL)	|	VoC_push16(REG2,DEFAULT)
0xF602700F,	//0x1b30		VoC_movreg16(REG2,REG0,IN_PARALLEL)	|	VoC_lw16i_short(RL7_HI,0x0,DEFAULT)
0x17A41804,	//0x1b32		VoC_lw16i_set_inc(REG0,0x17a4,0x1)
0x0A8EFF05,	//0x1b34		VoC_lw16i(RL7_LO,0x200)(lo)	|	VoC_movreg32(ACC1,REG01,DEFAULT)
0x708C0200,	//0x1b36		VoC_lw16i_short(RL6_LO,0x4,DEFAULT)	|	VoC_lw16i(RL7_LO,0x200)(hi)
0x0A83E04D,	//0x1b38		VoC_lw16i(REG3,0xff)(lo)	|	VoC_lw16i_short(RL6_HI,0x4,IN_PARALLEL)
0xFFC000FF,	//0x1b3a		VoC_NAD	|	VoC_lw16i(REG3,0xff)(hi)
0x1B582E39,	//0x1b3c		VoC_loop_r(1,REG7)
0xF6475899,	//0x1b3e		VoC_movreg16(REG7,REG2,IN_PARALLEL)	|	VoC_lw16inc_p(ACC0_HI,REG1,DEFAULT)
0xFA845408,	//0x1b40		VoC_shr32_ri(ACC0,0x10,IN_PARALLEL)	|	VoC_mac32inc_pp(REG1,REG0,DEFAULT)
0xD408D408,	//0x1b42		VoC_mac32inc_pp(REG1,REG0,DEFAULT)	|	VoC_mac32inc_pp(REG1,REG0,DEFAULT)
0x5308D408,	//0x1b44		VoC_mac32_pp(REG1,REG0,DEFAULT)	|	VoC_mac32inc_pp(REG1,REG0,DEFAULT)
0xE78CCA30,	//0x1b46		VoC_loop_r_short(REG6,DEFAULT)	|	VoC_sub32_rr(REG01,REG01,RL6,IN_PARALLEL)
0xC93A5899,	//0x1b48		VoC_add32_rr(REG45,ACC0,RL7,IN_PARALLEL)	|	VoC_lw16inc_p(ACC0_HI,REG1,DEFAULT)
0xFA845408,	//0x1b4a		VoC_shr32_ri(ACC0,0x10,IN_PARALLEL)	|	VoC_mac32inc_pp(REG1,REG0,DEFAULT)
0xFA525408,	//0x1b4c		VoC_shr32_ri(REG45,0xa,IN_PARALLEL)	|	VoC_mac32inc_pp(REG1,REG0,DEFAULT)
0xDEDC5408,	//0x1b4e		VoC_clipu16_rr(REG4,REG3,IN_PARALLEL)	|	VoC_mac32inc_pp(REG1,REG0,DEFAULT)
0x5308D408,	//0x1b50		VoC_mac32_pp(REG1,REG0,DEFAULT)	|	VoC_mac32inc_pp(REG1,REG0,DEFAULT)
0xDCA4CA30,	//0x1b52		VoC_sw16inc_p(REG4,REG2,DEFAULT)	|	VoC_sub32_rr(REG01,REG01,RL6,IN_PARALLEL)
		//0x1b53		VoC_endloop0
0xD90A5612,	//0x1b54		VoC_lw32_sd(REG45,0x0,IN_PARALLEL)	|	VoC_lw16_sd(REG2,0x0,DEFAULT)
0xC8A841D2,	//0x1b56		VoC_add32_rr(REG01,REG45,ACC1,IN_PARALLEL)	|	VoC_add16_rr(REG2,REG7,REG2,DEFAULT)
		//0x1b58		VoC_endloop1
0x5F82FF05,	//0x1b58		VoC_pop16(REG2,DEFAULT)	|	VoC_movreg32(ACC1,REG01,DEFAULT)
0xE580DF02,	//0x1b5a		VoC_return	|	VoC_pop32(REG45,IN_PARALLEL)
		//0x1b5c		CS_get_block_luma_hor_temp
0xF0067031,	//0x1b5c		VoC_lw16i_short(INC2,0x1,IN_PARALLEL)	|	VoC_lw16i_short(INC1,0x1,DEFAULT)
0xE00E606F,	//0x1b5e		VoC_lw16i_short(RL7_LO,0x0,IN_PARALLEL)	|	VoC_movreg16(RL7_HI,REG3,DEFAULT)
0x482D0789,	//0x1b60		VoC_sub16_rd(REG1,REG1,0x482d)
0x708CDFC2,	//0x1b62		VoC_lw16i_short(RL6_LO,0x4,DEFAULT)	|	VoC_push16(REG2,DEFAULT)
0x1804F602,	//0x1b64		VoC_lw16i_set_inc(REG0,0x17a4,0x1)(lo)	|	VoC_movreg16(REG2,REG0,IN_PARALLEL)
0x7F0517A4,	//0x1b66		VoC_movreg32(ACC1,REG01,DEFAULT)	|	VoC_lw16i_set_inc(REG0,0x17a4,0x1)(hi)
0x0A83E04D,	//0x1b68		VoC_lw16i(REG3,0xff)(lo)	|	VoC_lw16i_short(RL6_HI,0x4,IN_PARALLEL)
0x07B600FF,	//0x1b6a		VoC_sub16_rd(REG6,REG6,0x482c)(lo)	|	VoC_lw16i(REG3,0xff)(hi)
0xFFC0482C,	//0x1b6c		VoC_NAD	|	VoC_sub16_rd(REG6,REG6,0x482c)(hi)
0x1B872E39,	//0x1b6e		VoC_loop_r(1,REG7)
0xE0095898,	//0x1b70		VoC_lw16i_short(ACC0_HI,0x0,IN_PARALLEL)	|	VoC_lw16inc_p(ACC0_LO,REG1,DEFAULT)
0xF6475408,	//0x1b72		VoC_movreg16(REG7,REG2,IN_PARALLEL)	|	VoC_mac32inc_pp(REG1,REG0,DEFAULT)
0xD408D408,	//0x1b74		VoC_mac32inc_pp(REG1,REG0,DEFAULT)	|	VoC_mac32inc_pp(REG1,REG0,DEFAULT)
0x5308D408,	//0x1b76		VoC_mac32_pp(REG1,REG0,DEFAULT)	|	VoC_mac32inc_pp(REG1,REG0,DEFAULT)
0xE78ACA30,	//0x1b78		VoC_loop_r_short(REG6,DEFAULT)	|	VoC_sub32_rr(REG01,REG01,RL6,IN_PARALLEL)
0xFF225899,	//0x1b7a		VoC_movreg32(REG45,ACC0,IN_PARALLEL)	|	VoC_lw16inc_p(ACC0_HI,REG1,DEFAULT)
0xFA845408,	//0x1b7c		VoC_shr32_ri(ACC0,0x10,IN_PARALLEL)	|	VoC_mac32inc_pp(REG1,REG0,DEFAULT)
0xD408D408,	//0x1b7e		VoC_mac32inc_pp(REG1,REG0,DEFAULT)	|	VoC_mac32inc_pp(REG1,REG0,DEFAULT)
0x5308D408,	//0x1b80		VoC_mac32_pp(REG1,REG0,DEFAULT)	|	VoC_mac32inc_pp(REG1,REG0,DEFAULT)
0xDCA4CA30,	//0x1b82		VoC_sw16inc_p(REG4,REG2,DEFAULT)	|	VoC_sub32_rr(REG01,REG01,RL6,IN_PARALLEL)
		//0x1b83		VoC_endloop0
0x41EAD615,	//0x1b84		VoC_add16_rr(REG2,REG7,REG5,DEFAULT)	|	VoC_lw16_sd(REG5,0x0,DEFAULT)
0x7F05C9E8,	//0x1b86		VoC_movreg32(ACC1,REG01,DEFAULT)	|	VoC_add32_rr(REG01,RL7,ACC1,IN_PARALLEL)
		//0x1b87		VoC_endloop1
0xDF82DC28,	//0x1b88		VoC_pop16(REG2,DEFAULT)	|	VoC_sw16_p(ACC0_LO,REG2,IN_PARALLEL)
0xFFC06580,	//0x1b8a		VoC_NAD(IN_PARALLEL)	|	VoC_return
		//0x1b8c		CS_get_block_luma_02
0xF0067031,	//0x1b8c		VoC_lw16i_short(INC2,0x1,IN_PARALLEL)	|	VoC_lw16i_short(INC1,0x1,DEFAULT)
0xE0046065,	//0x1b8e		VoC_lw16i_short(REG4,0x0,IN_PARALLEL)	|	VoC_movreg16(REG5,REG3,DEFAULT)
0x482D0789,	//0x1b90		VoC_sub16_rd(REG1,REG1,0x482d)
0xDF425FC2,	//0x1b92		VoC_push32(REG45,IN_PARALLEL)	|	VoC_push16(REG2,DEFAULT)
0xF602700F,	//0x1b94		VoC_movreg16(REG2,REG0,IN_PARALLEL)	|	VoC_lw16i_short(RL7_HI,0x0,DEFAULT)
0x17A41804,	//0x1b96		VoC_lw16i_set_inc(REG0,0x17a4,0x1)
0xE10E7F05,	//0x1b98		VoC_lw16i_short(RL7_LO,0x10,IN_PARALLEL)	|	VoC_movreg32(ACC1,REG01,DEFAULT)
0xE04D708C,	//0x1b9a		VoC_lw16i_short(RL6_HI,0x4,IN_PARALLEL)	|	VoC_lw16i_short(RL6_LO,0x4,DEFAULT)
0x00FF0A83,	//0x1b9c		VoC_lw16i(REG3,0xff)
0x1BBA2E39,	//0x1b9e		VoC_loop_r(1,REG7)
0xE0095898,	//0x1ba0		VoC_lw16i_short(ACC0_HI,0x0,IN_PARALLEL)	|	VoC_lw16inc_p(ACC0_LO,REG1,DEFAULT)
0xF6475408,	//0x1ba2		VoC_movreg16(REG7,REG2,IN_PARALLEL)	|	VoC_mac32inc_pp(REG1,REG0,DEFAULT)
0xD408D408,	//0x1ba4		VoC_mac32inc_pp(REG1,REG0,DEFAULT)	|	VoC_mac32inc_pp(REG1,REG0,DEFAULT)
0x5308D408,	//0x1ba6		VoC_mac32_pp(REG1,REG0,DEFAULT)	|	VoC_mac32inc_pp(REG1,REG0,DEFAULT)
0xE78CCA30,	//0x1ba8		VoC_loop_r_short(REG6,DEFAULT)	|	VoC_sub32_rr(REG01,REG01,RL6,IN_PARALLEL)
0xC93A5899,	//0x1baa		VoC_add32_rr(REG45,ACC0,RL7,IN_PARALLEL)	|	VoC_lw16inc_p(ACC0_HI,REG1,DEFAULT)
0xFA845408,	//0x1bac		VoC_shr32_ri(ACC0,0x10,IN_PARALLEL)	|	VoC_mac32inc_pp(REG1,REG0,DEFAULT)
0xFA2A5408,	//0x1bae		VoC_shr32_ri(REG45,0x5,IN_PARALLEL)	|	VoC_mac32inc_pp(REG1,REG0,DEFAULT)
0xDEDC5408,	//0x1bb0		VoC_clipu16_rr(REG4,REG3,IN_PARALLEL)	|	VoC_mac32inc_pp(REG1,REG0,DEFAULT)
0x5308D408,	//0x1bb2		VoC_mac32_pp(REG1,REG0,DEFAULT)	|	VoC_mac32inc_pp(REG1,REG0,DEFAULT)
0xDCA4CA30,	//0x1bb4		VoC_sw16inc_p(REG4,REG2,DEFAULT)	|	VoC_sub32_rr(REG01,REG01,RL6,IN_PARALLEL)
		//0x1bb5		VoC_endloop0
0xD90A5612,	//0x1bb6		VoC_lw32_sd(REG45,0x0,IN_PARALLEL)	|	VoC_lw16_sd(REG2,0x0,DEFAULT)
0xC8A841D2,	//0x1bb8		VoC_add32_rr(REG01,REG45,ACC1,IN_PARALLEL)	|	VoC_add16_rr(REG2,REG7,REG2,DEFAULT)
		//0x1bba		VoC_endloop1
0x5F82FF05,	//0x1bba		VoC_pop16(REG2,DEFAULT)	|	VoC_movreg32(ACC1,REG01,DEFAULT)
0xE580DF02,	//0x1bbc		VoC_return	|	VoC_pop32(REG45,IN_PARALLEL)
		//0x1bbe		CS_get_block_luma_ver_temp
0xF6526071,	//0x1bbe		VoC_movreg16(INC2,REG2,IN_PARALLEL)	|	VoC_movreg16(INC1,REG3,DEFAULT)
0xF6024259,	//0x1bc0		VoC_movreg16(REG2,REG0,IN_PARALLEL)	|	VoC_sub16_rr(REG1,REG1,REG3,DEFAULT)
0xE0044259,	//0x1bc2		VoC_lw16i_short(REG4,0x0,IN_PARALLEL)	|	VoC_sub16_rr(REG1,REG1,REG3,DEFAULT)
0x17A41804,	//0x1bc4		VoC_lw16i_set_inc(REG0,0x17a4,0x1)
0xE0157F05,	//0x1bc6		VoC_lw16i_short(REG5,0x1,IN_PARALLEL)	|	VoC_movreg32(ACC1,REG01,DEFAULT)
0xF9F3708C,	//0x1bc8		VoC_shru16_ri(REG3,0xfffffffe,IN_PARALLEL)	|	VoC_lw16i_short(RL6_LO,0x4,DEFAULT)
0x606DDFC5,	//0x1bca		VoC_movreg16(RL6_HI,REG3,DEFAULT)	|	VoC_push16(REG5,DEFAULT)
0x0A83DF42,	//0x1bcc		VoC_lw16i(REG3,0xff)(lo)	|	VoC_push32(REG45,IN_PARALLEL)
0xFFC000FF,	//0x1bce		VoC_NAD	|	VoC_lw16i(REG3,0xff)(hi)
0x1BEA2E31,	//0x1bd0		VoC_loop_r(1,REG6)
0xE0095898,	//0x1bd2		VoC_lw16i_short(ACC0_HI,0x0,IN_PARALLEL)	|	VoC_lw16inc_p(ACC0_LO,REG1,DEFAULT)
0xF6465408,	//0x1bd4		VoC_movreg16(REG6,REG2,IN_PARALLEL)	|	VoC_mac32inc_pp(REG1,REG0,DEFAULT)
0xD408D408,	//0x1bd6		VoC_mac32inc_pp(REG1,REG0,DEFAULT)	|	VoC_mac32inc_pp(REG1,REG0,DEFAULT)
0x5308D408,	//0x1bd8		VoC_mac32_pp(REG1,REG0,DEFAULT)	|	VoC_mac32inc_pp(REG1,REG0,DEFAULT)
0xE7CACA30,	//0x1bda		VoC_loop_r_short(REG7,DEFAULT)	|	VoC_sub32_rr(REG01,REG01,RL6,IN_PARALLEL)
0xFF225899,	//0x1bdc		VoC_movreg32(REG45,ACC0,IN_PARALLEL)	|	VoC_lw16inc_p(ACC0_HI,REG1,DEFAULT)
0xFA845408,	//0x1bde		VoC_shr32_ri(ACC0,0x10,IN_PARALLEL)	|	VoC_mac32inc_pp(REG1,REG0,DEFAULT)
0xD408D408,	//0x1be0		VoC_mac32inc_pp(REG1,REG0,DEFAULT)	|	VoC_mac32inc_pp(REG1,REG0,DEFAULT)
0x5308D408,	//0x1be2		VoC_mac32_pp(REG1,REG0,DEFAULT)	|	VoC_mac32inc_pp(REG1,REG0,DEFAULT)
0xDCA4CA30,	//0x1be4		VoC_sw16inc_p(REG4,REG2,DEFAULT)	|	VoC_sub32_rr(REG01,REG01,RL6,IN_PARALLEL)
		//0x1be5		VoC_endloop0
0xD90A5612,	//0x1be6		VoC_lw32_sd(REG45,0x0,IN_PARALLEL)	|	VoC_lw16_sd(REG2,0x0,DEFAULT)
0xC8A84192,	//0x1be8		VoC_add32_rr(REG01,REG45,ACC1,IN_PARALLEL)	|	VoC_add16_rr(REG2,REG6,REG2,DEFAULT)
		//0x1bea		VoC_endloop1
0x5F82FF05,	//0x1bea		VoC_pop16(REG2,DEFAULT)	|	VoC_movreg32(ACC1,REG01,DEFAULT)
0xE580DF02,	//0x1bec		VoC_return	|	VoC_pop32(REG45,IN_PARALLEL)
		//0x1bee		CS_get_block_luma_20
0xF6526071,	//0x1bee		VoC_movreg16(INC2,REG2,IN_PARALLEL)	|	VoC_movreg16(INC1,REG3,DEFAULT)
0xE0046002,	//0x1bf0		VoC_lw16i_short(REG4,0x0,IN_PARALLEL)	|	VoC_movreg16(REG2,REG0,DEFAULT)
0xE10E4259,	//0x1bf2		VoC_lw16i_short(RL7_LO,0x10,IN_PARALLEL)	|	VoC_sub16_rr(REG1,REG1,REG3,DEFAULT)
0xE00F4259,	//0x1bf4		VoC_lw16i_short(RL7_HI,0x0,IN_PARALLEL)	|	VoC_sub16_rr(REG1,REG1,REG3,DEFAULT)
0x17A41804,	//0x1bf6		VoC_lw16i_set_inc(REG0,0x17a4,0x1)
0xE0157F05,	//0x1bf8		VoC_lw16i_short(REG5,0x1,IN_PARALLEL)	|	VoC_movreg32(ACC1,REG01,DEFAULT)
0xF9F3708C,	//0x1bfa		VoC_shru16_ri(REG3,0xfffffffe,IN_PARALLEL)	|	VoC_lw16i_short(RL6_LO,0x4,DEFAULT)
0x606DDFC5,	//0x1bfc		VoC_movreg16(RL6_HI,REG3,DEFAULT)	|	VoC_push16(REG5,DEFAULT)
0x0A83DF42,	//0x1bfe		VoC_lw16i(REG3,0xff)(lo)	|	VoC_push32(REG45,IN_PARALLEL)
0xFFC000FF,	//0x1c00		VoC_NAD	|	VoC_lw16i(REG3,0xff)(hi)
0x1C1E2E31,	//0x1c02		VoC_loop_r(1,REG6)
0xE0095898,	//0x1c04		VoC_lw16i_short(ACC0_HI,0x0,IN_PARALLEL)	|	VoC_lw16inc_p(ACC0_LO,REG1,DEFAULT)
0xF6465408,	//0x1c06		VoC_movreg16(REG6,REG2,IN_PARALLEL)	|	VoC_mac32inc_pp(REG1,REG0,DEFAULT)
0xD408D408,	//0x1c08		VoC_mac32inc_pp(REG1,REG0,DEFAULT)	|	VoC_mac32inc_pp(REG1,REG0,DEFAULT)
0x5308D408,	//0x1c0a		VoC_mac32_pp(REG1,REG0,DEFAULT)	|	VoC_mac32inc_pp(REG1,REG0,DEFAULT)
0xE7CCCA30,	//0x1c0c		VoC_loop_r_short(REG7,DEFAULT)	|	VoC_sub32_rr(REG01,REG01,RL6,IN_PARALLEL)
0xC93A5899,	//0x1c0e		VoC_add32_rr(REG45,ACC0,RL7,IN_PARALLEL)	|	VoC_lw16inc_p(ACC0_HI,REG1,DEFAULT)
0xFA845408,	//0x1c10		VoC_shr32_ri(ACC0,0x10,IN_PARALLEL)	|	VoC_mac32inc_pp(REG1,REG0,DEFAULT)
0xFA2A5408,	//0x1c12		VoC_shr32_ri(REG45,0x5,IN_PARALLEL)	|	VoC_mac32inc_pp(REG1,REG0,DEFAULT)
0xDEDC5408,	//0x1c14		VoC_clipu16_rr(REG4,REG3,IN_PARALLEL)	|	VoC_mac32inc_pp(REG1,REG0,DEFAULT)
0x5308D408,	//0x1c16		VoC_mac32_pp(REG1,REG0,DEFAULT)	|	VoC_mac32inc_pp(REG1,REG0,DEFAULT)
0xDCA4CA30,	//0x1c18		VoC_sw16inc_p(REG4,REG2,DEFAULT)	|	VoC_sub32_rr(REG01,REG01,RL6,IN_PARALLEL)
		//0x1c19		VoC_endloop0
0xD90A5612,	//0x1c1a		VoC_lw32_sd(REG45,0x0,IN_PARALLEL)	|	VoC_lw16_sd(REG2,0x0,DEFAULT)
0xC8A84192,	//0x1c1c		VoC_add32_rr(REG01,REG45,ACC1,IN_PARALLEL)	|	VoC_add16_rr(REG2,REG6,REG2,DEFAULT)
		//0x1c1e		VoC_endloop1
0x5F82FF05,	//0x1c1e		VoC_pop16(REG2,DEFAULT)	|	VoC_movreg32(ACC1,REG01,DEFAULT)
0xE580DF02,	//0x1c20		VoC_return	|	VoC_pop32(REG45,IN_PARALLEL)
		//0x1c22		CS_get_block_luma
0x1604DFE9,	//0x1c22		VoC_and16_ri(REG4,0x3)(lo)	|	VoC_push16(RA,DEFAULT)
0x16050003,	//0x1c24		VoC_and16_ri(REG5,0x3)(lo)	|	VoC_and16_ri(REG4,0x3)(hi)
0xF9F50003,	//0x1c26		VoC_shru16_ri(REG5,0xfffffffe,DEFAULT)	|	VoC_and16_ri(REG5,0x3)(hi)
0x31C4C12C,	//0x1c28		VoC_bnez16_r(get_luma_01,REG4)(lo)	|	VoC_add16_rr(REG4,REG4,REG5,DEFAULT)
0xFF0F1C3E,	//0x1c2a		VoC_movreg32(RL7,REG23,DEFAULT)	|	VoC_bnez16_r(get_luma_01,REG4)(hi)
0xF0087051,	//0x1c2c		VoC_lw16i_short(INC0,0x2,IN_PARALLEL)	|	VoC_lw16i_short(INC1,0x2,DEFAULT)
0xFF06790E,	//0x1c2e		VoC_movreg32(RL6,REG01,IN_PARALLEL)	|	VoC_shru16_ri(REG6,0x1,DEFAULT)
0x1C3B2E39,	//0x1c30		VoC_loop_r(1,REG7)
0xE209C9BE,	//0x1c32		VoC_aligninc_pp(REG1,REG1,DEFAULT)	|	VoC_add32_rr(RL6,RL6,RL7,DEFAULT)
0xD8995898,	//0x1c34		VoC_lw16inc_p(ACC0_HI,REG1,IN_PARALLEL)	|	VoC_lw16inc_p(ACC0_LO,REG1,DEFAULT)
0xE783FFC0,	//0x1c36		VoC_loop_r_short(REG6,DEFAULT)	|	VoC_NAD
0xD8995898,	//0x1c38		VoC_lw16inc_p(ACC0_HI,REG1,IN_PARALLEL)	|	VoC_lw16inc_p(ACC0_LO,REG1,DEFAULT)
		//0x1c3a		VoC_endloop0
0xFF30DDC4,	//0x1c3a		VoC_movreg32(REG01,RL6,DEFAULT)	|	VoC_sw32inc_p(ACC0,REG0,DEFAULT)
		//0x1c3b		VoC_endloop1
0x1DA82B00,	//0x1c3c		VoC_jump_lg(get_luma_end)
		//0x1c3e		get_luma_01
0x482C4504,	//0x1c3e		VoC_bne16_rd(get_luma_02,REG4,0x482c)
0xDF415FC0,	//0x1c40		VoC_push32(REG23,IN_PARALLEL)	|	VoC_push16(REG0,DEFAULT)
0xDF435FC1,	//0x1c42		VoC_push32(REG67,IN_PARALLEL)	|	VoC_push16(REG1,DEFAULT)
0x1B8C2B80,	//0x1c44		VoC_jal(CS_get_block_luma_02)
0xDF035F81,	//0x1c46		VoC_pop32(REG67,IN_PARALLEL)	|	VoC_pop16(REG1,DEFAULT)
0xDF015F80,	//0x1c48		VoC_pop32(REG23,IN_PARALLEL)	|	VoC_pop16(REG0,DEFAULT)
0x1AA22B80,	//0x1c4a		VoC_jal(CS_get_block_luma_Avg)
0x1DA82B00,	//0x1c4c		VoC_jump_lg(get_luma_end)
		//0x1c4e		get_luma_02
0x482D4434,	//0x1c4e		VoC_bne16_rd(get_luma_03,REG4,0x482d)
0x1B8C2B80,	//0x1c50		VoC_jal(CS_get_block_luma_02)
0x1DA82B00,	//0x1c52		VoC_jump_lg(get_luma_end)
		//0x1c54		get_luma_03
0x49A94514,	//0x1c54		VoC_bne16_rd(get_luma_10,REG4,0x49a9)
0xDF415FC0,	//0x1c56		VoC_push32(REG23,IN_PARALLEL)	|	VoC_push16(REG0,DEFAULT)
0xDF435FC1,	//0x1c58		VoC_push32(REG67,IN_PARALLEL)	|	VoC_push16(REG1,DEFAULT)
0x1B8C2B80,	//0x1c5a		VoC_jal(CS_get_block_luma_02)
0xDF035F81,	//0x1c5c		VoC_pop32(REG67,IN_PARALLEL)	|	VoC_pop16(REG1,DEFAULT)
0x482C0709,	//0x1c5e		VoC_add16_rd(REG1,REG1,0x482c)
0xDF015F80,	//0x1c60		VoC_pop32(REG23,IN_PARALLEL)	|	VoC_pop16(REG0,DEFAULT)
0x1AA22B80,	//0x1c62		VoC_jal(CS_get_block_luma_Avg)
0x1DA82B00,	//0x1c64		VoC_jump_lg(get_luma_end)
		//0x1c66		get_luma_10
0x482E4504,	//0x1c66		VoC_bne16_rd(get_luma_11,REG4,0x482e)
0xDF415FC0,	//0x1c68		VoC_push32(REG23,IN_PARALLEL)	|	VoC_push16(REG0,DEFAULT)
0xDF435FC1,	//0x1c6a		VoC_push32(REG67,IN_PARALLEL)	|	VoC_push16(REG1,DEFAULT)
0x1BEE2B80,	//0x1c6c		VoC_jal(CS_get_block_luma_20)
0xDF035F81,	//0x1c6e		VoC_pop32(REG67,IN_PARALLEL)	|	VoC_pop16(REG1,DEFAULT)
0xDF015F80,	//0x1c70		VoC_pop32(REG23,IN_PARALLEL)	|	VoC_pop16(REG0,DEFAULT)
0x1AA22B80,	//0x1c72		VoC_jal(CS_get_block_luma_Avg)
0x1DA82B00,	//0x1c74		VoC_jump_lg(get_luma_end)
		//0x1c76		get_luma_11
0x482F45A4,	//0x1c76		VoC_bne16_rd(get_luma_12,REG4,0x482f)
0xDF415FC0,	//0x1c78		VoC_push32(REG23,IN_PARALLEL)	|	VoC_push16(REG0,DEFAULT)
0xDF435FC1,	//0x1c7a		VoC_push32(REG67,IN_PARALLEL)	|	VoC_push16(REG1,DEFAULT)
0x1B8C2B80,	//0x1c7c		VoC_jal(CS_get_block_luma_02)
0x5E400A80,	//0x1c7e		VoC_lw16i(REG0,0x5e40)
0xD90B5F81,	//0x1c80		VoC_lw32_sd(REG67,0x0,IN_PARALLEL)	|	VoC_pop16(REG1,DEFAULT)
0xDFC05911,	//0x1c82		VoC_push16(REG0,IN_PARALLEL)	|	VoC_lw32_sd(REG23,0x1,DEFAULT)
0xFFC07202,	//0x1c84		VoC_NAD(IN_PARALLEL)	|	VoC_lw16i_short(REG2,0x10,DEFAULT)
0x1BEE2B80,	//0x1c86		VoC_jal(CS_get_block_luma_20)
0xDF035F81,	//0x1c88		VoC_pop32(REG67,IN_PARALLEL)	|	VoC_pop16(REG1,DEFAULT)
0xDF015F80,	//0x1c8a		VoC_pop32(REG23,IN_PARALLEL)	|	VoC_pop16(REG0,DEFAULT)
0xFFC07203,	//0x1c8c		VoC_NAD(IN_PARALLEL)	|	VoC_lw16i_short(REG3,0x10,DEFAULT)
0x1AA22B80,	//0x1c8e		VoC_jal(CS_get_block_luma_Avg)
0x1DA82B00,	//0x1c90		VoC_jump_lg(get_luma_end)
		//0x1c92		get_luma_12
0x48304024,	//0x1c92		VoC_be16_rd(get_luma_12_go,REG4,0x4830)
0x1CB42B00,	//0x1c94		VoC_jump_lg(get_luma_13)
		//0x1c96		get_luma_12_go
0xDF415FC0,	//0x1c96		VoC_push32(REG23,IN_PARALLEL)	|	VoC_push16(REG0,DEFAULT)
0xDF434259,	//0x1c98		VoC_push32(REG67,IN_PARALLEL)	|	VoC_sub16_rr(REG1,REG1,REG3,DEFAULT)
0xE1024259,	//0x1c9a		VoC_lw16i_short(REG2,0x10,IN_PARALLEL)	|	VoC_sub16_rr(REG1,REG1,REG3,DEFAULT)
0x482F073F,	//0x1c9c		VoC_add16_rd(REG7,REG7,0x482f)
0x5E400A80,	//0x1c9e		VoC_lw16i(REG0,0x5e40)
0x1B5C2B80,	//0x1ca0		VoC_jal(CS_get_block_luma_hor_temp)
0x5610D90B,	//0x1ca2		VoC_lw16_sd(REG0,0x0,DEFAULT)	|	VoC_lw32_sd(REG67,0x0,DEFAULT)
0xF203D911,	//0x1ca4		VoC_lw16i_short(REG3,0x10,DEFAULT)	|	VoC_lw32_sd(REG23,0x1,IN_PARALLEL)
0x5E600A81,	//0x1ca6		VoC_lw16i(REG1,0x5e60)
0x1AF42B80,	//0x1ca8		VoC_jal(CS_get_block_luma_ver_22)
0xDF035F80,	//0x1caa		VoC_pop32(REG67,IN_PARALLEL)	|	VoC_pop16(REG0,DEFAULT)
0xF203DF01,	//0x1cac		VoC_lw16i_short(REG3,0x10,DEFAULT)	|	VoC_pop32(REG23,DEFAULT)
0x5E600A81,	//0x1cae		VoC_lw16i(REG1,0x5e60)
0x1AC22B80,	//0x1cb0		VoC_jal(CS_get_block_luma_Avg_temp)
0x1DA82B00,	//0x1cb2		VoC_jump_lg(get_luma_end)
		//0x1cb4		get_luma_13
0x483145B4,	//0x1cb4		VoC_bne16_rd(get_luma_20,REG4,0x4831)
0xDF415FC0,	//0x1cb6		VoC_push32(REG23,IN_PARALLEL)	|	VoC_push16(REG0,DEFAULT)
0xDF435FC1,	//0x1cb8		VoC_push32(REG67,IN_PARALLEL)	|	VoC_push16(REG1,DEFAULT)
0x1B8C2B80,	//0x1cba		VoC_jal(CS_get_block_luma_02)
0x5E400A80,	//0x1cbc		VoC_lw16i(REG0,0x5e40)
0xD90B5F81,	//0x1cbe		VoC_lw32_sd(REG67,0x0,IN_PARALLEL)	|	VoC_pop16(REG1,DEFAULT)
0xDFC05911,	//0x1cc0		VoC_push16(REG0,IN_PARALLEL)	|	VoC_lw32_sd(REG23,0x1,DEFAULT)
0x0709F202,	//0x1cc2		VoC_add16_rd(REG1,REG1,0x482c)(lo)	|	VoC_lw16i_short(REG2,0x10,DEFAULT)
0xFFC0482C,	//0x1cc4		VoC_NAD	|	VoC_add16_rd(REG1,REG1,0x482c)(hi)
0x1BEE2B80,	//0x1cc6		VoC_jal(CS_get_block_luma_20)
0xDF035F81,	//0x1cc8		VoC_pop32(REG67,IN_PARALLEL)	|	VoC_pop16(REG1,DEFAULT)
0xDF015F80,	//0x1cca		VoC_pop32(REG23,IN_PARALLEL)	|	VoC_pop16(REG0,DEFAULT)
0xFFC07203,	//0x1ccc		VoC_NAD(IN_PARALLEL)	|	VoC_lw16i_short(REG3,0x10,DEFAULT)
0x1AA22B80,	//0x1cce		VoC_jal(CS_get_block_luma_Avg)
0x1DA82B00,	//0x1cd0		VoC_jump_lg(get_luma_end)
		//0x1cd2		get_luma_20
0x483D4434,	//0x1cd2		VoC_bne16_rd(get_luma_21,REG4,0x483d)
0x1BEE2B80,	//0x1cd4		VoC_jal(CS_get_block_luma_20)
0x1DA82B00,	//0x1cd6		VoC_jump_lg(get_luma_end)
		//0x1cd8		get_luma_21
0x483C4024,	//0x1cd8		VoC_be16_rd(get_luma_21_go,REG4,0x483c)
0x1CFA2B00,	//0x1cda		VoC_jump_lg(get_luma_22)
		//0x1cdc		get_luma_21_go
0xDF415FC0,	//0x1cdc		VoC_push32(REG23,IN_PARALLEL)	|	VoC_push16(REG0,DEFAULT)
0xE1625F43,	//0x1cde		VoC_lw16i_short(REG2,0x16,IN_PARALLEL)	|	VoC_push32(REG67,DEFAULT)
0x482D0789,	//0x1ce0		VoC_sub16_rd(REG1,REG1,0x482d)
0x482F0736,	//0x1ce2		VoC_add16_rd(REG6,REG6,0x482f)
0x5E400A80,	//0x1ce4		VoC_lw16i(REG0,0x5e40)
0x1BBE2B80,	//0x1ce6		VoC_jal(CS_get_block_luma_ver_temp)
0x5610D90B,	//0x1ce8		VoC_lw16_sd(REG0,0x0,DEFAULT)	|	VoC_lw32_sd(REG67,0x0,DEFAULT)
0xF2C3D911,	//0x1cea		VoC_lw16i_short(REG3,0x16,DEFAULT)	|	VoC_lw32_sd(REG23,0x1,IN_PARALLEL)
0x5E420A81,	//0x1cec		VoC_lw16i(REG1,0x5e42)
0x1B282B80,	//0x1cee		VoC_jal(CS_get_block_luma_hor_22)
0xDF035F80,	//0x1cf0		VoC_pop32(REG67,IN_PARALLEL)	|	VoC_pop16(REG0,DEFAULT)
0xF2C3DF01,	//0x1cf2		VoC_lw16i_short(REG3,0x16,DEFAULT)	|	VoC_pop32(REG23,DEFAULT)
0x5E420A81,	//0x1cf4		VoC_lw16i(REG1,0x5e42)
0x1AC22B80,	//0x1cf6		VoC_jal(CS_get_block_luma_Avg_temp)
0x1DA82B00,	//0x1cf8		VoC_jump_lg(get_luma_end)
		//0x1cfa		get_luma_22
0x486845A4,	//0x1cfa		VoC_bne16_rd(get_luma_23,REG4,0x4868)
0xDF415FC0,	//0x1cfc		VoC_push32(REG23,IN_PARALLEL)	|	VoC_push16(REG0,DEFAULT)
0xDF435FC1,	//0x1cfe		VoC_push32(REG67,IN_PARALLEL)	|	VoC_push16(REG1,DEFAULT)
0x4259C259,	//0x1d00		VoC_sub16_rr(REG1,REG1,REG3,DEFAULT)	|	VoC_sub16_rr(REG1,REG1,REG3,DEFAULT)
0x073FE102,	//0x1d02		VoC_add16_rd(REG7,REG7,0x482f)(lo)	|	VoC_lw16i_short(REG2,0x10,IN_PARALLEL)
0x0A80482F,	//0x1d04		VoC_lw16i(REG0,0x5e40)(lo)	|	VoC_add16_rd(REG7,REG7,0x482f)(hi)
0xFFC05E40,	//0x1d06		VoC_NAD	|	VoC_lw16i(REG0,0x5e40)(hi)
0x1B5C2B80,	//0x1d08		VoC_jal(CS_get_block_luma_hor_temp)
0xDF035F81,	//0x1d0a		VoC_pop32(REG67,IN_PARALLEL)	|	VoC_pop16(REG1,DEFAULT)
0xDF015F80,	//0x1d0c		VoC_pop32(REG23,IN_PARALLEL)	|	VoC_pop16(REG0,DEFAULT)
0x0A81F203,	//0x1d0e		VoC_lw16i(REG1,0x5e60)(lo)	|	VoC_lw16i_short(REG3,0x10,DEFAULT)
0xFFC05E60,	//0x1d10		VoC_NAD	|	VoC_lw16i(REG1,0x5e60)(hi)
0x1AF42B80,	//0x1d12		VoC_jal(CS_get_block_luma_ver_22)
0x1DA82B00,	//0x1d14		VoC_jump_lg(get_luma_end)
		//0x1d16		get_luma_23
0x48344024,	//0x1d16		VoC_be16_rd(get_luma_23_go,REG4,0x4834)
0x1D382B00,	//0x1d18		VoC_jump_lg(get_luma_30)
		//0x1d1a		get_luma_23_go
0xDF415FC0,	//0x1d1a		VoC_push32(REG23,IN_PARALLEL)	|	VoC_push16(REG0,DEFAULT)
0xE1625F43,	//0x1d1c		VoC_lw16i_short(REG2,0x16,IN_PARALLEL)	|	VoC_push32(REG67,DEFAULT)
0x482D0789,	//0x1d1e		VoC_sub16_rd(REG1,REG1,0x482d)
0x482F0736,	//0x1d20		VoC_add16_rd(REG6,REG6,0x482f)
0x5E400A80,	//0x1d22		VoC_lw16i(REG0,0x5e40)
0x1BBE2B80,	//0x1d24		VoC_jal(CS_get_block_luma_ver_temp)
0x5610D90B,	//0x1d26		VoC_lw16_sd(REG0,0x0,DEFAULT)	|	VoC_lw32_sd(REG67,0x0,DEFAULT)
0xF2C3D911,	//0x1d28		VoC_lw16i_short(REG3,0x16,DEFAULT)	|	VoC_lw32_sd(REG23,0x1,IN_PARALLEL)
0x5E420A81,	//0x1d2a		VoC_lw16i(REG1,0x5e42)
0x1B282B80,	//0x1d2c		VoC_jal(CS_get_block_luma_hor_22)
0xDF035F80,	//0x1d2e		VoC_pop32(REG67,IN_PARALLEL)	|	VoC_pop16(REG0,DEFAULT)
0xF2C3DF01,	//0x1d30		VoC_lw16i_short(REG3,0x16,DEFAULT)	|	VoC_pop32(REG23,DEFAULT)
0x5E430A81,	//0x1d32		VoC_lw16i(REG1,0x5e43)
0x1AC22B80,	//0x1d34		VoC_jal(CS_get_block_luma_Avg_temp)
0x1DA82B00,	//0x1d36		VoC_jump_lg(get_luma_end)
		//0x1d38		get_luma_30
0x35A5F185,	//0x1d38		VoC_bne16_rr(get_luma_31,REG4,REG5)(lo)	|	VoC_lw16i_short(REG5,0xc,DEFAULT)
0x5FC01D4C,	//0x1d3a		VoC_push16(REG0,DEFAULT)	|	VoC_bne16_rr(get_luma_31,REG4,REG5)(hi)
0x5FC1DF41,	//0x1d3c		VoC_push16(REG1,DEFAULT)	|	VoC_push32(REG23,IN_PARALLEL)
0xFFC0DF43,	//0x1d3e		VoC_NAD	|	VoC_push32(REG67,IN_PARALLEL)
0x1BEE2B80,	//0x1d40		VoC_jal(CS_get_block_luma_20)
0xDF035F81,	//0x1d42		VoC_pop32(REG67,IN_PARALLEL)	|	VoC_pop16(REG1,DEFAULT)
0xDF015F80,	//0x1d44		VoC_pop32(REG23,IN_PARALLEL)	|	VoC_pop16(REG0,DEFAULT)
0xFFC04059,	//0x1d46		VoC_NAD(IN_PARALLEL)	|	VoC_add16_rr(REG1,REG1,REG3,DEFAULT)
0x1AA22B80,	//0x1d48		VoC_jal(CS_get_block_luma_Avg)
0x1DA82B00,	//0x1d4a		VoC_jump_lg(get_luma_end)
		//0x1d4c		get_luma_31
0x35A5F1A5,	//0x1d4c		VoC_bne16_rr(get_luma_32,REG4,REG5)(lo)	|	VoC_lw16i_short(REG5,0xd,DEFAULT)
0x5FC01D6A,	//0x1d4e		VoC_push16(REG0,DEFAULT)	|	VoC_bne16_rr(get_luma_32,REG4,REG5)(hi)
0x5FC1DF41,	//0x1d50		VoC_push16(REG1,DEFAULT)	|	VoC_push32(REG23,IN_PARALLEL)
0xFFC0DF43,	//0x1d52		VoC_NAD	|	VoC_push32(REG67,IN_PARALLEL)
0x1BEE2B80,	//0x1d54		VoC_jal(CS_get_block_luma_20)
0x5E400A80,	//0x1d56		VoC_lw16i(REG0,0x5e40)
0xD90B5F81,	//0x1d58		VoC_lw32_sd(REG67,0x0,IN_PARALLEL)	|	VoC_pop16(REG1,DEFAULT)
0xDFC05911,	//0x1d5a		VoC_push16(REG0,IN_PARALLEL)	|	VoC_lw32_sd(REG23,0x1,DEFAULT)
0xC0597202,	//0x1d5c		VoC_add16_rr(REG1,REG1,REG3,IN_PARALLEL)	|	VoC_lw16i_short(REG2,0x10,DEFAULT)
0x1B8C2B80,	//0x1d5e		VoC_jal(CS_get_block_luma_02)
0xDF035F81,	//0x1d60		VoC_pop32(REG67,IN_PARALLEL)	|	VoC_pop16(REG1,DEFAULT)
0xDF015F80,	//0x1d62		VoC_pop32(REG23,IN_PARALLEL)	|	VoC_pop16(REG0,DEFAULT)
0xFFC07203,	//0x1d64		VoC_NAD(IN_PARALLEL)	|	VoC_lw16i_short(REG3,0x10,DEFAULT)
0x1AA22B80,	//0x1d66		VoC_jal(CS_get_block_luma_Avg)
0x1DA82B00,	//0x1d68		VoC_jump_lg(get_luma_end)
		//0x1d6a		get_luma_32
0x49004024,	//0x1d6a		VoC_be16_rd(get_luma_32_go,REG4,0x4900)
0x1D8C2B00,	//0x1d6c		VoC_jump_lg(get_luma_33)
		//0x1d6e		get_luma_32_go
0xDF415FC0,	//0x1d6e		VoC_push32(REG23,IN_PARALLEL)	|	VoC_push16(REG0,DEFAULT)
0xDF434259,	//0x1d70		VoC_push32(REG67,IN_PARALLEL)	|	VoC_sub16_rr(REG1,REG1,REG3,DEFAULT)
0xE1024259,	//0x1d72		VoC_lw16i_short(REG2,0x10,IN_PARALLEL)	|	VoC_sub16_rr(REG1,REG1,REG3,DEFAULT)
0x482F073F,	//0x1d74		VoC_add16_rd(REG7,REG7,0x482f)
0x5E400A80,	//0x1d76		VoC_lw16i(REG0,0x5e40)
0x1B5C2B80,	//0x1d78		VoC_jal(CS_get_block_luma_hor_temp)
0x5610D90B,	//0x1d7a		VoC_lw16_sd(REG0,0x0,DEFAULT)	|	VoC_lw32_sd(REG67,0x0,DEFAULT)
0xF203D911,	//0x1d7c		VoC_lw16i_short(REG3,0x10,DEFAULT)	|	VoC_lw32_sd(REG23,0x1,IN_PARALLEL)
0x5E600A81,	//0x1d7e		VoC_lw16i(REG1,0x5e60)
0x1AF42B80,	//0x1d80		VoC_jal(CS_get_block_luma_ver_22)
0xDF035F80,	//0x1d82		VoC_pop32(REG67,IN_PARALLEL)	|	VoC_pop16(REG0,DEFAULT)
0xF203DF01,	//0x1d84		VoC_lw16i_short(REG3,0x10,DEFAULT)	|	VoC_pop32(REG23,DEFAULT)
0x5E700A81,	//0x1d86		VoC_lw16i(REG1,0x5e70)
0x1AC22B80,	//0x1d88		VoC_jal(CS_get_block_luma_Avg_temp)
0xFFC065DE,	//0x1d8a		VoC_NAD(IN_PARALLEL)	|	VoC_jump(get_luma_end)
		//0x1d8c		get_luma_33
0x487445A4,	//0x1d8c		VoC_bne16_rd(get_luma_end,REG4,0x4874)
0xDF415FC0,	//0x1d8e		VoC_push32(REG23,IN_PARALLEL)	|	VoC_push16(REG0,DEFAULT)
0xDF435FC1,	//0x1d90		VoC_push32(REG67,IN_PARALLEL)	|	VoC_push16(REG1,DEFAULT)
0x482C0709,	//0x1d92		VoC_add16_rd(REG1,REG1,0x482c)
0x1BEE2B80,	//0x1d94		VoC_jal(CS_get_block_luma_20)
0x5E400A80,	//0x1d96		VoC_lw16i(REG0,0x5e40)
0xD90B5F81,	//0x1d98		VoC_lw32_sd(REG67,0x0,IN_PARALLEL)	|	VoC_pop16(REG1,DEFAULT)
0xDFC05911,	//0x1d9a		VoC_push16(REG0,IN_PARALLEL)	|	VoC_lw32_sd(REG23,0x1,DEFAULT)
0xC0597202,	//0x1d9c		VoC_add16_rr(REG1,REG1,REG3,IN_PARALLEL)	|	VoC_lw16i_short(REG2,0x10,DEFAULT)
0x1B8C2B80,	//0x1d9e		VoC_jal(CS_get_block_luma_02)
0xDF035F81,	//0x1da0		VoC_pop32(REG67,IN_PARALLEL)	|	VoC_pop16(REG1,DEFAULT)
0xDF015F80,	//0x1da2		VoC_pop32(REG23,IN_PARALLEL)	|	VoC_pop16(REG0,DEFAULT)
0x2B80F203,	//0x1da4		VoC_jal(CS_get_block_luma_Avg)(lo)	|	VoC_lw16i_short(REG3,0x10,DEFAULT)
0xE5C11AA2,	//0x1da6		VoC_jump(get_luma_end)	|	VoC_jal(CS_get_block_luma_Avg)(hi)
		//0x1da8		get_luma_end
0xFFC0DFA9,	//0x1da8		VoC_NOP	|	VoC_pop16(RA,DEFAULT)
0xDFE9E580,	//0x1daa		VoC_push16(RA,DEFAULT)	|	VoC_return
		//0x1dab		CS_get_block_chroma
0x00071604,	//0x1dac		VoC_and16_ri(REG4,0x7)
0x00071605,	//0x1dae		VoC_and16_ri(REG5,0x7)
0x1DC43342,	//0x1db0		VoC_bnez32_r(get_chroma_hor,REG45)
0x7051FF0F,	//0x1db2		VoC_lw16i_short(INC1,0x2,DEFAULT)	|	VoC_movreg32(RL7,REG23,DEFAULT)
0x790EF008,	//0x1db4		VoC_shru16_ri(REG6,0x1,DEFAULT)	|	VoC_lw16i_short(INC0,0x2,IN_PARALLEL)
0x2E39FF06,	//0x1db6		VoC_loop_r(1,REG7)(lo)	|	VoC_movreg32(RL6,REG01,IN_PARALLEL)
0xC9BE1DC1,	//0x1db8		VoC_add32_rr(RL6,RL6,RL7,DEFAULT)	|	VoC_loop_r(1,REG7)(hi)
0x5898E209,	//0x1dba		VoC_lw16inc_p(ACC0_LO,REG1,DEFAULT)	|	VoC_aligninc_pp(REG1,REG1,DEFAULT)
0xE783D899,	//0x1dbc		VoC_loop_r_short(REG6,DEFAULT)	|	VoC_lw16inc_p(ACC0_HI,REG1,IN_PARALLEL)
0xD8995898,	//0x1dbe		VoC_lw16inc_p(ACC0_HI,REG1,IN_PARALLEL)	|	VoC_lw16inc_p(ACC0_LO,REG1,DEFAULT)
		//0x1dc0		VoC_endloop0
0xFF30DDC4,	//0x1dc0		VoC_movreg32(REG01,RL6,DEFAULT)	|	VoC_sw32inc_p(ACC0,REG0,DEFAULT)
		//0x1dc1		VoC_endloop1
0x1E392B00,	//0x1dc2		VoC_jump_lg(get_chroma_end)
		//0x1dc4		get_chroma_hor
0x1DE231C5,	//0x1dc4		VoC_bnez16_r(get_chroma_ver,REG5)
0xE0827F0F,	//0x1dc6		VoC_lw16i_short(REG2,0x8,IN_PARALLEL)	|	VoC_movreg32(RL7,REG23,DEFAULT)
0xC4A342A2,	//0x1dc8		VoC_mult16_rr(REG3,REG2,REG4,IN_PARALLEL)	|	VoC_sub16_rr(REG2,REG2,REG4,DEFAULT)
0xF9EA7F06,	//0x1dca		VoC_shru16_ri(REG2,0xfffffffd,IN_PARALLEL)	|	VoC_movreg32(RL6,REG01,DEFAULT)
0xF0047031,	//0x1dcc		VoC_lw16i_short(INC0,0x1,IN_PARALLEL)	|	VoC_lw16i_short(INC1,0x1,DEFAULT)
0x0A8AFF45,	//0x1dce		VoC_lw16i(ACC1_LO,0x20)(lo)	|	VoC_lw32z(ACC1,DEFAULT)
0x2E390020,	//0x1dd0		VoC_loop_r(1,REG7)(lo)	|	VoC_lw16i(ACC1_LO,0x20)(hi)
0xFF2C1DDE,	//0x1dd2		VoC_movreg32(ACC0,ACC1,DEFAULT)	|	VoC_loop_r(1,REG7)(hi)
0x5019D111,	//0x1dd4		VoC_mac32_rp(REG3,REG1,DEFAULT)	|	VoC_mac32inc_rp(REG2,REG1,DEFAULT)
0xE786C9BE,	//0x1dd6		VoC_loop_r_short(REG6,DEFAULT)	|	VoC_add32_rr(RL6,RL6,RL7,IN_PARALLEL)
0xFF2C7F22,	//0x1dd8		VoC_movreg32(ACC0,ACC1,IN_PARALLEL)	|	VoC_movreg32(REG45,ACC0,DEFAULT)
0xFC325111,	//0x1dda		VoC_shru32_ri(REG45,0x6,IN_PARALLEL)	|	VoC_mac32inc_rp(REG2,REG1,DEFAULT)
0xDC84D019,	//0x1ddc		VoC_sw16inc_p(REG4,REG0,DEFAULT)	|	VoC_mac32_rp(REG3,REG1,DEFAULT)
		//0x1ddd		VoC_endloop0
		//0x1dde		VoC_endloop1
0x2B00FF30,	//0x1dde		VoC_jump_lg(get_chroma_end)(lo)	|	VoC_movreg32(REG01,RL6,DEFAULT)
0xFFC01E39,	//0x1de0		VoC_NAD	|	VoC_jump_lg(get_chroma_end)(hi)
		//0x1de2		get_chroma_ver
0x1E0431C4,	//0x1de2		VoC_bnez16_r(get_chroma_diag,REG4)
0xFF067F0F,	//0x1de4		VoC_movreg32(RL6,REG01,IN_PARALLEL)	|	VoC_movreg32(RL7,REG23,DEFAULT)
0xFF457031,	//0x1de6		VoC_lw32z(ACC1,IN_PARALLEL)	|	VoC_lw16i_short(INC1,0x1,DEFAULT)
0xF6E27107,	//0x1de8		VoC_movreg16(REG2,REG7,IN_PARALLEL)	|	VoC_lw16i_short(REG7,0x8,DEFAULT)
0xC5EF43EB,	//0x1dea		VoC_mult16_rr(REG7,REG7,REG5,IN_PARALLEL)	|	VoC_sub16_rr(REG3,REG7,REG5,DEFAULT)
0xF00479EB,	//0x1dec		VoC_lw16i_short(INC0,0x1,IN_PARALLEL)	|	VoC_shru16_ri(REG3,0xfffffffd,DEFAULT)
0xFF3A7032,	//0x1dee		VoC_movreg32(REG45,RL7,IN_PARALLEL)	|	VoC_lw16i_short(INC2,0x1,DEFAULT)
0x00200A8A,	//0x1df0		VoC_lw16i(ACC1_LO,0x20)
0x1E002E11,	//0x1df2		VoC_loop_r(1,REG2)
0xC06A7F2C,	//0x1df4		VoC_add16_rr(REG2,REG1,REG5,IN_PARALLEL)	|	VoC_movreg32(ACC0,ACC1,DEFAULT)
0x513AD119,	//0x1df6		VoC_mac32inc_rp(REG7,REG2,DEFAULT)	|	VoC_mac32inc_rp(REG3,REG1,DEFAULT)
0xE786C996,	//0x1df8		VoC_loop_r_short(REG6,DEFAULT)	|	VoC_add32_rr(RL6,RL6,REG45,IN_PARALLEL)
0xFF2C7F27,	//0x1dfa		VoC_movreg32(ACC0,ACC1,IN_PARALLEL)	|	VoC_movreg32(RL7,ACC0,DEFAULT)
0xFC375119,	//0x1dfc		VoC_shru32_ri(RL7,0x6,IN_PARALLEL)	|	VoC_mac32inc_rp(REG3,REG1,DEFAULT)
0xDC8ED13A,	//0x1dfe		VoC_sw16inc_p(RL7_LO,REG0,DEFAULT)	|	VoC_mac32inc_rp(REG7,REG2,DEFAULT)
		//0x1dff		VoC_endloop0
		//0x1e00		VoC_endloop1
0x2B00FF30,	//0x1e00		VoC_jump_lg(get_chroma_end)(lo)	|	VoC_movreg32(REG01,RL6,DEFAULT)
0xFFC01E39,	//0x1e02		VoC_NAD	|	VoC_jump_lg(get_chroma_end)(hi)
		//0x1e04		get_chroma_diag
0xFF067F0F,	//0x1e04		VoC_movreg32(RL6,REG01,IN_PARALLEL)	|	VoC_movreg32(RL7,REG23,DEFAULT)
0x483D0B22,	//0x1e06		VoC_sub16_dr(REG2,0x483d,REG4)
0xC52944A8,	//0x1e08		VoC_mult16_rr(REG1,REG4,REG5,IN_PARALLEL)	|	VoC_mult16_rr(REG0,REG2,REG5,DEFAULT)
0x483D0B2B,	//0x1e0a		VoC_sub16_dr(REG3,0x483d,REG5)
0xC5194498,	//0x1e0c		VoC_mult16_rr(REG1,REG4,REG3,IN_PARALLEL)	|	VoC_mult16_rr(REG0,REG2,REG3,DEFAULT)
0x180C1580,	//0x1e0e		VoC_sw32_d(REG01,0x180c)
0x180A1807,	//0x1e10		VoC_lw16i_set_inc(REG3,0x180a,0x1)
0x180A1580,	//0x1e12		VoC_sw32_d(REG01,0x180a)
0xF0047031,	//0x1e14		VoC_lw16i_short(INC0,0x1,IN_PARALLEL)	|	VoC_lw16i_short(INC1,0x1,DEFAULT)
0xF6E27F45,	//0x1e16		VoC_movreg16(REG2,REG7,IN_PARALLEL)	|	VoC_lw32z(ACC1,DEFAULT)
0xF0066067,	//0x1e18		VoC_lw16i_short(INC2,0x1,IN_PARALLEL)	|	VoC_movreg16(REG7,REG3,DEFAULT)
0x00200A8A,	//0x1e1a		VoC_lw16i(ACC1_LO,0x20)
0xFF3A7F30,	//0x1e1c		VoC_movreg32(REG45,RL7,IN_PARALLEL)	|	VoC_movreg32(REG01,RL6,DEFAULT)
0x482C07B6,	//0x1e1e		VoC_sub16_rd(REG6,REG6,0x482c)
0x1E382E11,	//0x1e20		VoC_loop_r(1,REG2)
0xC06A7F2C,	//0x1e22		VoC_add16_rr(REG2,REG1,REG5,IN_PARALLEL)	|	VoC_movreg32(ACC0,ACC1,DEFAULT)
0x5319D419,	//0x1e24		VoC_mac32_pp(REG3,REG1,DEFAULT)	|	VoC_mac32inc_pp(REG3,REG1,DEFAULT)
0x541ADE18,	//0x1e26		VoC_mac32inc_pp(REG3,REG2,DEFAULT)	|	VoC_inc_p(REG3,IN_PARALLEL)
0x531AF6E3,	//0x1e28		VoC_mac32_pp(REG3,REG2,DEFAULT)	|	VoC_movreg16(REG3,REG7,IN_PARALLEL)
0xE78AC996,	//0x1e2a		VoC_loop_r_short(REG6,DEFAULT)	|	VoC_add32_rr(RL6,RL6,REG45,IN_PARALLEL)
0xFF2C7F27,	//0x1e2c		VoC_movreg32(ACC0,ACC1,IN_PARALLEL)	|	VoC_movreg32(RL7,ACC0,DEFAULT)
0xFC375419,	//0x1e2e		VoC_shru32_ri(RL7,0x6,IN_PARALLEL)	|	VoC_mac32inc_pp(REG3,REG1,DEFAULT)
0xDE185319,	//0x1e30		VoC_inc_p(REG3,IN_PARALLEL)	|	VoC_mac32_pp(REG3,REG1,DEFAULT)
0xF6E3541A,	//0x1e32		VoC_movreg16(REG3,REG7,IN_PARALLEL)	|	VoC_mac32inc_pp(REG3,REG2,DEFAULT)
0xDC8ED31A,	//0x1e34		VoC_sw16inc_p(RL7_LO,REG0,DEFAULT)	|	VoC_mac32_pp(REG3,REG2,DEFAULT)
		//0x1e35		VoC_endloop0
0xFF30FC34,	//0x1e36		VoC_movreg32(REG01,RL6,DEFAULT)	|	VoC_shru32_ri(ACC0,0x6,DEFAULT)
		//0x1e38		VoC_endloop1
0xDFA9DC08,	//0x1e38		VoC_pop16(RA,DEFAULT)	|	VoC_sw16_p(ACC0_LO,REG0,DEFAULT)
		//0x1e39		get_chroma_end
0xE580FFC0,	//0x1e3a		VoC_return	|	VoC_NOP
		//0x1e3c		CS_emulated_edge_mc
0x1E523186,	//0x1e3c		VoC_bez16_r(H264_YCBCR_BLOCK_MC_EXP_VER,REG6)
0x1E463206,	//0x1e3e		VoC_bltz16_r(H264_YCBCR_BLOCK_MC_EXP_LEFT,REG6)
0xF0044332,	//0x1e40		VoC_lw16i_short(INC0,0x1,IN_PARALLEL)	|	VoC_sub16_rr(REG2,REG4,REG6,DEFAULT)
0x482C0792,	//0x1e42		VoC_sub16_rd(REG2,REG2,0x482c)
0xE5C5C052,	//0x1e44		VoC_jump(H264_YCBCR_BLOCK_MC_EXP_HOR_FILL)	|	VoC_add16_rr(REG2,REG1,REG2,DEFAULT)
		//0x1e46		H264_YCBCR_BLOCK_MC_EXP_LEFT
0x7FFF1606,	//0x1e46		VoC_and16_ri(REG6,0x7fff)
0xF3FC4072,	//0x1e48		VoC_lw16i_short(INC0,0xffffffff,IN_PARALLEL)	|	VoC_add16_rr(REG2,REG1,REG6,DEFAULT)
		//0x1e4a		H264_YCBCR_BLOCK_MC_EXP_HOR_FILL
0x1E512E29,	//0x1e4a		VoC_loop_r(1,REG5)
0xD82AE040,	//0x1e4c		VoC_lw16_p(ACC1_LO,REG2,DEFAULT)	|	VoC_movreg16(REG0,REG2,DEFAULT)
0xDE006782,	//0x1e4e		VoC_inc_p(REG0,IN_PARALLEL)	|	VoC_loop_r_short(REG6,DEFAULT)
		//0x1e50		VoC_endloop0
0xC09ADC8A,	//0x1e50		VoC_add16_rr(REG2,REG2,REG3,DEFAULT)	|	VoC_sw16inc_p(ACC1_LO,REG0,DEFAULT)
		//0x1e51		VoC_endloop1
		//0x1e52		H264_YCBCR_BLOCK_MC_EXP_VER
0x1E6D3187,	//0x1e52		VoC_bez16_r(H264_YCBCR_BLOCK_MC_EXP_END,REG7)
0x1E5C3207,	//0x1e54		VoC_bltz16_r(H264_YCBCR_BLOCK_MC_EXP_TOP,REG7)
0xF006437A,	//0x1e56		VoC_lw16i_short(INC2,0x1,IN_PARALLEL)	|	VoC_sub16_rr(REG2,REG5,REG7,DEFAULT)
0xC258C49A,	//0x1e58		VoC_sub16_rr(REG0,REG1,REG3,DEFAULT)	|	VoC_mult16_rr(REG2,REG2,REG3,DEFAULT)
0xE5C9C012,	//0x1e5a		VoC_jump(H264_YCBCR_BLOCK_MC_EXP_VER_FILL)	|	VoC_add16_rr(REG2,REG0,REG2,DEFAULT)
		//0x1e5c		H264_YCBCR_BLOCK_MC_EXP_TOP
0x7FFF1607,	//0x1e5c		VoC_and16_ri(REG7,0x7fff)
0x7032C5DA,	//0x1e5e		VoC_lw16i_short(INC2,0x1,DEFAULT)	|	VoC_mult16_rr(REG2,REG7,REG3,DEFAULT)
0x421BE000,	//0x1e60		VoC_sub16_rr(REG3,REG0,REG3,DEFAULT)	|	VoC_lw16i_short(REG0,0x0,IN_PARALLEL)
0xFFC0C052,	//0x1e62		VoC_NAD	|	VoC_add16_rr(REG2,REG1,REG2,IN_PARALLEL)
		//0x1e64		H264_YCBCR_BLOCK_MC_EXP_VER_FILL
0x1E6B2E21,	//0x1e64		VoC_loop_r(1,REG4)
0x67C3C098,	//0x1e66		VoC_loop_r_short(REG7,DEFAULT)	|	VoC_add16_rr(REG0,REG2,REG3,DEFAULT)
0xC018D82A,	//0x1e68		VoC_add16_rr(REG0,REG0,REG3,DEFAULT)	|	VoC_lw16_p(ACC1_LO,REG2,IN_PARALLEL)
		//0x1e6a		VoC_endloop0
0xDE10DC0A,	//0x1e6a		VoC_inc_p(REG2,DEFAULT)	|	VoC_sw16_p(ACC1_LO,REG0,DEFAULT)
		//0x1e6b		VoC_endloop1
0xE580DE43,	//0x1e6c		VoC_return	|	VoC_abs16_r(REG3,DEFAULT)
		//0x1e6d		H264_YCBCR_BLOCK_MC_EXP_END
		//0x1e6e		CS_h264_YCbCr_block_mc_part
0x6C05DFE9,	//0x1e6e		VoC_bez16_d(DMA_Input_Ref_Y_Block_Done,0x5fa0)(lo)	|	VoC_push16(RA,DEFAULT)
0xFFC05FA0,	//0x1e70		VoC_NAD	|	VoC_bez16_d(DMA_Input_Ref_Y_Block_Done,0x5fa0)(hi)
0x02402B80,	//0x1e72		VoC_jal(Dma_Last_Cmd_Wait)
		//0x1e74		DMA_Input_Ref_Y_Block_Done
0x5FA21405,	//0x1e74		VoC_lw16_d(REG5,0x5fa2)
0x5FA11406,	//0x1e76		VoC_lw16_d(REG6,0x5fa1)
0x5FA11505,	//0x1e78		VoC_sw16_d(REG5,0x5fa1)
0x5FA21506,	//0x1e7a		VoC_sw16_d(REG6,0x5fa2)
0x02742B80,	//0x1e7c		VoC_jal(DMA_In_Refer_Y)
0x1E843284,	//0x1e7e		VoC_bgtz32_r(DMA_MC_Y_Prefetch_Done,ACC0)
0x5FA56C04,	//0x1e80		VoC_bez16_d(DMA_MC_Y_Prefetch_Done,0x5fa5)
0x02472B80,	//0x1e82		VoC_jal(DMA_Out_Recon_Y)
		//0x1e84		DMA_MC_Y_Prefetch_Done
0x19D22008,	//0x1e84		VoC_lw16d_set_inc(REG0,0x19d2,0x2)
0x59C3F061,	//0x1e86		VoC_lw32inc_p(REG67,REG0,DEFAULT)	|	VoC_lw16i_short(REG1,0x3,DEFAULT)
0x6431E083,	//0x1e88		VoC_and16_rr(REG1,REG6,DEFAULT)	|	VoC_lw16i_short(REG3,0x8,IN_PARALLEL)
0xD9C2D9C3,	//0x1e8a		VoC_lw32inc_p(REG45,REG0,DEFAULT)	|	VoC_lw32inc_p(REG67,REG0,IN_PARALLEL)
0x17161583,	//0x1e8c		VoC_sw32_d(REG67,0x1716)
0xC0F359C4,	//0x1e8e		VoC_add16_rr(REG3,REG3,REG6,IN_PARALLEL)	|	VoC_lw32inc_p(ACC0,REG0,DEFAULT)
0x5FA10709,	//0x1e90		VoC_add16_rd(REG1,REG1,0x5fa1)
0x19D21500,	//0x1e92		VoC_sw16_d(REG0,0x19d2)
0x1EB63304,	//0x1e94		VoC_bez32_r(H264_YCBCR_BLOCK_MC_Y,ACC0)
0xE0505F42,	//0x1e96		VoC_lw16i_short(REG0,0x5,IN_PARALLEL)	|	VoC_push32(REG45,DEFAULT)
0xC0345F43,	//0x1e98		VoC_add16_rr(REG4,REG0,REG6,IN_PARALLEL)	|	VoC_push32(REG67,DEFAULT)
0xFF23403D,	//0x1e9a		VoC_movreg32(REG67,ACC0,IN_PARALLEL)	|	VoC_add16_rr(REG5,REG0,REG7,DEFAULT)
0x1E3C2B80,	//0x1e9c		VoC_jal(CS_emulated_edge_mc)
0x00000ACA,	//0x1e9e		VoC_lw16i(ACC1_LO,0x8000)
0xF74B7F22,	//0x1ea0		VoC_movreg16(ACC1_HI,ACC1_LO,IN_PARALLEL)	|	VoC_movreg32(REG45,ACC0,DEFAULT)
0xF9FC64E5,	//0x1ea2		VoC_shru16_ri(REG4,0xffffffff,IN_PARALLEL)	|	VoC_and32_rr(ACC1,ACC0,DEFAULT)
0xE0197028,	//0x1ea4		VoC_lw16i_short(ACC0_HI,0x1,IN_PARALLEL)	|	VoC_lw16i_short(ACC0_LO,0x1,DEFAULT)
0xF9FD652C,	//0x1ea6		VoC_shru16_ri(REG5,0xffffffff,IN_PARALLEL)	|	VoC_or32_rr(ACC0,ACC1,DEFAULT)
0x48304C24,	//0x1ea8		VoC_bnlt16_rd(block_mc_cb_hor_exp_end,REG4,0x4830)
0xFFC07008,	//0x1eaa		VoC_NAD(IN_PARALLEL)	|	VoC_lw16i_short(ACC0_LO,0x0,DEFAULT)
		//0x1eac		block_mc_cb_hor_exp_end
0x48304C25,	//0x1eac		VoC_bnlt16_rd(block_mc_cb_ver_exp_end,REG5,0x4830)
0xFFC07009,	//0x1eae		VoC_NAD(IN_PARALLEL)	|	VoC_lw16i_short(ACC0_HI,0x0,DEFAULT)
		//0x1eb0		block_mc_cb_ver_exp_end
0x17211508,	//0x1eb0		VoC_sw16_d(ACC0_LO,0x1721)
0x17221509,	//0x1eb2		VoC_sw16_d(ACC0_HI,0x1722)
0xDF02DF03,	//0x1eb4		VoC_pop32(REG45,DEFAULT)	|	VoC_pop32(REG67,DEFAULT)
		//0x1eb6		H264_YCBCR_BLOCK_MC_Y
0xE0204059,	//0x1eb6		VoC_lw16i_short(REG0,0x2,IN_PARALLEL)	|	VoC_add16_rr(REG1,REG1,REG3,DEFAULT)
0xDF424041,	//0x1eb8		VoC_push32(REG45,IN_PARALLEL)	|	VoC_add16_rr(REG1,REG1,REG0,DEFAULT)
0xDF444059,	//0x1eba		VoC_push32(ACC0,IN_PARALLEL)	|	VoC_add16_rr(REG1,REG1,REG3,DEFAULT)
0x2004F282,	//0x1ebc		VoC_lw16d_set_inc(REG0,0x1725,0x1)(lo)	|	VoC_lw16i_short(REG2,0x14,DEFAULT)
0xFFC01725,	//0x1ebe		VoC_NAD	|	VoC_lw16d_set_inc(REG0,0x1725,0x1)(hi)
0x1C222B80,	//0x1ec0		VoC_jal(CS_get_block_luma)
0x5FA06C04,	//0x1ec2		VoC_bez16_d(DMA_MC_Y_Wait_End,0x5fa0)
0x02402B80,	//0x1ec4		VoC_jal(Dma_Last_Cmd_Wait)
		//0x1ec6		DMA_MC_Y_Wait_End
0x5FA41405,	//0x1ec6		VoC_lw16_d(REG5,0x5fa4)
0x5FA31406,	//0x1ec8		VoC_lw16_d(REG6,0x5fa3)
0x5FA31505,	//0x1eca		VoC_sw16_d(REG5,0x5fa3)
0x5FA41506,	//0x1ecc		VoC_sw16_d(REG6,0x5fa4)
0x02982B80,	//0x1ece		VoC_jal(DMA_In_Refer_UV)
0x19D32008,	//0x1ed0		VoC_lw16d_set_inc(REG0,0x19d3,0x2)
0xD90C70E3,	//0x1ed2		VoC_lw32_sd(ACC0,0x0,IN_PARALLEL)	|	VoC_lw16i_short(REG3,0x7,DEFAULT)
0x59C3D9C2,	//0x1ed4		VoC_lw32inc_p(REG67,REG0,DEFAULT)	|	VoC_lw32inc_p(REG45,REG0,DEFAULT)
0x6421E031,	//0x1ed6		VoC_and16_rr(REG1,REG4,DEFAULT)	|	VoC_lw16i_short(REG1,0x3,IN_PARALLEL)
0x1500C0F3,	//0x1ed8		VoC_sw16_d(REG0,0x19d3)(lo)	|	VoC_add16_rr(REG3,REG3,REG6,IN_PARALLEL)
0x164319D3,	//0x1eda		VoC_and16_ri(REG3,0xfffc)(lo)	|	VoC_sw16_d(REG0,0x19d3)(hi)
0x07097FFC,	//0x1edc		VoC_add16_rd(REG1,REG1,0x5fa3)(lo)	|	VoC_and16_ri(REG3,0xfffc)(hi)
0x33045FA3,	//0x1ede		VoC_bez32_r(H264_YCBCR_BLOCK_MC_Cb,ACC0)(lo)	|	VoC_add16_rd(REG1,REG1,0x5fa3)(hi)
0x5F431EEA,	//0x1ee0		VoC_push32(REG67,DEFAULT)	|	VoC_bez32_r(H264_YCBCR_BLOCK_MC_Cb,ACC0)(hi)
0x4184E010,	//0x1ee2		VoC_add16_rr(REG4,REG6,REG0,DEFAULT)	|	VoC_lw16i_short(REG0,0x1,IN_PARALLEL)
0xFF23C1C5,	//0x1ee4		VoC_movreg32(REG67,ACC0,DEFAULT)	|	VoC_add16_rr(REG5,REG7,REG0,IN_PARALLEL)
0x1E3C2B80,	//0x1ee6		VoC_jal(CS_emulated_edge_mc)
0xFFC05F03,	//0x1ee8		VoC_NAD(IN_PARALLEL)	|	VoC_pop32(REG67,DEFAULT)
		//0x1eea		H264_YCBCR_BLOCK_MC_Cb
0x17262004,	//0x1eea		VoC_lw16d_set_inc(REG0,0x1726,0x1)
0xD9127182,	//0x1eec		VoC_lw32_sd(REG45,0x1,IN_PARALLEL)	|	VoC_lw16i_short(REG2,0xc,DEFAULT)
0x1DAB2B80,	//0x1eee		VoC_jal(CS_get_block_chroma)
0x02402B80,	//0x1ef0		VoC_jal(Dma_Last_Cmd_Wait)
0x5FA41405,	//0x1ef2		VoC_lw16_d(REG5,0x5fa4)
0x5FA31406,	//0x1ef4		VoC_lw16_d(REG6,0x5fa3)
0x5FA31505,	//0x1ef6		VoC_sw16_d(REG5,0x5fa3)
0x5FA41506,	//0x1ef8		VoC_sw16_d(REG6,0x5fa4)
0x02982B80,	//0x1efa		VoC_jal(DMA_In_Refer_UV)
0x1F023284,	//0x1efc		VoC_bgtz32_r(DMA_MC_Uv_Block_Done,ACC0)
0x5FA56C04,	//0x1efe		VoC_bez16_d(DMA_MC_Uv_Block_Done,0x5fa5)
0x025D2B80,	//0x1f00		VoC_jal(DMA_Out_Recon_UV)
		//0x1f02		DMA_MC_Uv_Block_Done
0x19D32008,	//0x1f02		VoC_lw16d_set_inc(REG0,0x19d3,0x2)
0xDF0470E3,	//0x1f04		VoC_pop32(ACC0,IN_PARALLEL)	|	VoC_lw16i_short(REG3,0x7,DEFAULT)
0x59C3D9C2,	//0x1f06		VoC_lw32inc_p(REG67,REG0,DEFAULT)	|	VoC_lw32inc_p(REG45,REG0,DEFAULT)
0x6421E031,	//0x1f08		VoC_and16_rr(REG1,REG4,DEFAULT)	|	VoC_lw16i_short(REG1,0x3,IN_PARALLEL)
0x1500C0F3,	//0x1f0a		VoC_sw16_d(REG0,0x19d3)(lo)	|	VoC_add16_rr(REG3,REG3,REG6,IN_PARALLEL)
0x164319D3,	//0x1f0c		VoC_and16_ri(REG3,0xfffc)(lo)	|	VoC_sw16_d(REG0,0x19d3)(hi)
0x07097FFC,	//0x1f0e		VoC_add16_rd(REG1,REG1,0x5fa3)(lo)	|	VoC_and16_ri(REG3,0xfffc)(hi)
0x33045FA3,	//0x1f10		VoC_bez32_r(H264_YCBCR_BLOCK_MC_Cr,ACC0)(lo)	|	VoC_add16_rd(REG1,REG1,0x5fa3)(hi)
0x5F431F1C,	//0x1f12		VoC_push32(REG67,DEFAULT)	|	VoC_bez32_r(H264_YCBCR_BLOCK_MC_Cr,ACC0)(hi)
0x4184E010,	//0x1f14		VoC_add16_rr(REG4,REG6,REG0,DEFAULT)	|	VoC_lw16i_short(REG0,0x1,IN_PARALLEL)
0xFF23C1C5,	//0x1f16		VoC_movreg32(REG67,ACC0,DEFAULT)	|	VoC_add16_rr(REG5,REG7,REG0,IN_PARALLEL)
0x1E3C2B80,	//0x1f18		VoC_jal(CS_emulated_edge_mc)
0xFFC05F03,	//0x1f1a		VoC_NAD(IN_PARALLEL)	|	VoC_pop32(REG67,DEFAULT)
		//0x1f1c		H264_YCBCR_BLOCK_MC_Cr
0x17272004,	//0x1f1c		VoC_lw16d_set_inc(REG0,0x1727,0x1)
0xDF027182,	//0x1f1e		VoC_pop32(REG45,IN_PARALLEL)	|	VoC_lw16i_short(REG2,0xc,DEFAULT)
0x1DAB2B80,	//0x1f20		VoC_jal(CS_get_block_chroma)
0xFFC0DFA9,	//0x1f22		VoC_NOP	|	VoC_pop16(RA,DEFAULT)
0xFFC06580,	//0x1f24		VoC_NAD(IN_PARALLEL)	|	VoC_return
		//0x1f26		CS_BiDir_Motion_Avg
0xF6607F0F,	//0x1f26		VoC_movreg16(REG0,REG3,IN_PARALLEL)	|	VoC_movreg32(RL7,REG23,DEFAULT)
0x1F362E39,	//0x1f28		VoC_loop_r(1,REG7)
0xC9F71312,	//0x1f2a		VoC_add32_rr(RL7,RL7,RL6,IN_PARALLEL)	|	VoC_add32inc_rp(REG45,ACC0,REG2,DEFAULT)
0xFFC0929A,	//0x1f2c		VoC_NAD	|	VoC_add32inc_rp(REG45,REG45,REG3,DEFAULT)
0xF80C6785,	//0x1f2e		VoC_shr16_ri(REG4,0x1,IN_PARALLEL)	|	VoC_loop_r_short(REG6,DEFAULT)
0xF80D1315,	//0x1f30		VoC_shr16_ri(REG5,0x1,IN_PARALLEL)	|	VoC_add32inc_rp(ACC1,ACC0,REG2,DEFAULT)
0x5DC2935A,	//0x1f32		VoC_sw32inc_p(REG45,REG0,DEFAULT)	|	VoC_add32inc_rp(REG45,ACC1,REG3,DEFAULT)
		//0x1f33		VoC_endloop0
0xFF39F80C,	//0x1f34		VoC_movreg32(REG23,RL7,DEFAULT)	|	VoC_shr16_ri(REG4,0x1,IN_PARALLEL)
		//0x1f36		VoC_endloop1
0xE580E060,	//0x1f36		VoC_return	|	VoC_movreg16(REG0,REG3,DEFAULT)
		//0x1f38		CS_weight_h264_pixels
0xF64C604D,	//0x1f38		VoC_movreg16(RL6_LO,REG2,IN_PARALLEL)	|	VoC_movreg16(RL6_HI,REG2,DEFAULT)
0x1F443185,	//0x1f3a		VoC_bez16_r(log2_denom_shift_end,REG5)
0x494E0B2A,	//0x1f3c		VoC_sub16_dr(REG2,0x494e,REG5)
0xE0127814,	//0x1f3e		VoC_lw16i_short(REG2,0x1,IN_PARALLEL)	|	VoC_shr16_ri(REG4,0x2,DEFAULT)
0xFE0AC351,	//0x1f40		VoC_shr16_rr(REG2,REG1,DEFAULT)	|	VoC_sub16_rr(REG1,REG5,REG2,DEFAULT)
0xFFC04114,	//0x1f42		VoC_NAD(IN_PARALLEL)	|	VoC_add16_rr(REG4,REG4,REG2,DEFAULT)
		//0x1f44		log2_denom_shift_end
0xF68A790E,	//0x1f44		VoC_movreg16(ACC1_LO,REG4,IN_PARALLEL)	|	VoC_shru16_ri(REG6,0x1,DEFAULT)
0xF68660CB,	//0x1f46		VoC_movreg16(REG6,REG4,IN_PARALLEL)	|	VoC_movreg16(ACC1_HI,REG6,DEFAULT)
0xF0056001,	//0x1f48		VoC_lw16i_short(INC1,0x1,IN_PARALLEL)	|	VoC_movreg16(REG1,REG0,DEFAULT)
0xFF077030,	//0x1f4a		VoC_movreg32(RL7,REG01,IN_PARALLEL)	|	VoC_lw16i_short(INC0,0x1,DEFAULT)
0x00FF0A84,	//0x1f4c		VoC_lw16i(REG4,0xff)
0x1F622E39,	//0x1f4e		VoC_loop_r(1,REG7)
0x8AC2C9F7,	//0x1f50		VoC_mult16inc_rp(REG2,REG3,REG0,DEFAULT)	|	VoC_add32_rr(RL7,RL7,RL6,DEFAULT)
0xC0B28AC7,	//0x1f52		VoC_add16_rr(REG2,REG2,REG6,DEFAULT)	|	VoC_mult16inc_rp(REG7,REG3,REG0,DEFAULT)
0xF76641F7,	//0x1f54		VoC_movreg16(REG6,ACC1_HI,IN_PARALLEL)	|	VoC_add16_rr(REG7,REG7,REG6,DEFAULT)
0xF746678A,	//0x1f56		VoC_movreg16(REG6,ACC1_LO,IN_PARALLEL)	|	VoC_loop_r_short(REG6,DEFAULT)
0xFE2F7E2A,	//0x1f58		VoC_shr16_rr(REG7,REG5,IN_PARALLEL)	|	VoC_shr16_rr(REG2,REG5,DEFAULT)
0xDEE20AC2,	//0x1f5a		VoC_clipu16_rr(REG2,REG4,IN_PARALLEL)	|	VoC_mult16inc_rp(REG2,REG3,REG0,DEFAULT)
0xDEE70AC7,	//0x1f5c		VoC_clipu16_rr(REG7,REG4,IN_PARALLEL)	|	VoC_mult16inc_rp(REG7,REG3,REG0,DEFAULT)
0xC0B25C92,	//0x1f5e		VoC_add16_rr(REG2,REG2,REG6,IN_PARALLEL)	|	VoC_sw16inc_p(REG2,REG1,DEFAULT)
		//0x1f60		VoC_endloop0
0xC1F75C97,	//0x1f60		VoC_add16_rr(REG7,REG7,REG6,IN_PARALLEL)	|	VoC_sw16inc_p(REG7,REG1,DEFAULT)
		//0x1f62		VoC_endloop1
0xE580FF38,	//0x1f62		VoC_return	|	VoC_movreg32(REG01,RL7,DEFAULT)
		//0x1f64		CS_biweight_h264_pixels
0xF0067020,	//0x1f64		VoC_lw16i_short(INC2,0x1,IN_PARALLEL)	|	VoC_lw16i_short(REG0,0x1,DEFAULT)
0xF0074104,	//0x1f66		VoC_lw16i_short(INC3,0x1,IN_PARALLEL)	|	VoC_add16_rr(REG4,REG4,REG0,DEFAULT)
0xFF0F6444,	//0x1f68		VoC_movreg32(RL7,REG23,IN_PARALLEL)	|	VoC_or16_rr(REG4,REG0,DEFAULT)
0x494E0B29,	//0x1f6a		VoC_sub16_dr(REG1,0x494e,REG5)
0xC1457E0C,	//0x1f6c		VoC_add16_rr(REG5,REG5,REG0,IN_PARALLEL)	|	VoC_shr16_rr(REG4,REG1,DEFAULT)
0x60A81805,	//0x1f6e		VoC_lw16i_set_inc(REG1,0x60a8,0x1)
0xF004608B,	//0x1f70		VoC_lw16i_short(INC0,0x1,IN_PARALLEL)	|	VoC_movreg16(ACC1_HI,REG4,DEFAULT)
0xFA854386,	//0x1f72		VoC_shr32_ri(ACC1,0x10,IN_PARALLEL)	|	VoC_sub16_rr(REG6,REG6,REG0,DEFAULT)
0x00FF0A84,	//0x1f74		VoC_lw16i(REG4,0xff)
0x5FC1DFC6,	//0x1f76		VoC_push16(REG1,DEFAULT)	|	VoC_push16(REG6,DEFAULT)
0x2E39F7E0,	//0x1f78		VoC_loop_r(1,REG7)(lo)	|	VoC_movreg16(REG0,RL7_HI,IN_PARALLEL)
0x9ECC1F91,	//0x1f7a		VoC_multf32inc_pp(ACC0,REG3,REG1,DEFAULT)	|	VoC_loop_r(1,REG7)(hi)
0x492B9E8C,	//0x1f7c		VoC_add32_rr(REG67,ACC0,ACC1,DEFAULT)	|	VoC_multf32inc_pp(ACC0,REG2,REG1,DEFAULT)
0x48E4D611,	//0x1f7e		VoC_add32_rr(ACC0,REG67,ACC0,DEFAULT)	|	VoC_lw16_sd(REG1,0x0,IN_PARALLEL)
0xFFC0D626,	//0x1f80		VoC_NAD	|	VoC_lw16_sd(REG6,0x1,IN_PARALLEL)
0xFF236789,	//0x1f82		VoC_movreg32(REG67,ACC0,IN_PARALLEL)	|	VoC_loop_r_short(REG6,DEFAULT)
0xFEAB1ECC,	//0x1f84		VoC_shr32_rr(REG67,REG5,IN_PARALLEL)	|	VoC_multf32inc_pp(ACC0,REG3,REG1,DEFAULT)
0xDEE61E8C,	//0x1f86		VoC_clipu16_rr(REG6,REG4,IN_PARALLEL)	|	VoC_multf32inc_pp(ACC0,REG2,REG1,DEFAULT)
0xD611492B,	//0x1f88		VoC_lw16_sd(REG1,0x0,IN_PARALLEL)	|	VoC_add32_rr(REG67,ACC0,ACC1,DEFAULT)
0xC8E3DC86,	//0x1f8a		VoC_add32_rr(REG67,REG67,ACC0,DEFAULT)	|	VoC_sw16inc_p(REG6,REG0,DEFAULT)
		//0x1f8b		VoC_endloop0
0xFEAB49F7,	//0x1f8c		VoC_shr32_rr(REG67,REG5,IN_PARALLEL)	|	VoC_add32_rr(RL7,RL7,RL6,DEFAULT)
0xDEE67F39,	//0x1f8e		VoC_clipu16_rr(REG6,REG4,IN_PARALLEL)	|	VoC_movreg32(REG23,RL7,DEFAULT)
0xDC06E1E0,	//0x1f90		VoC_sw16_p(REG6,REG0,DEFAULT)	|	VoC_movreg16(REG0,RL7_HI,DEFAULT)
		//0x1f91		VoC_endloop1
0xDF86DF86,	//0x1f92		VoC_pop16(REG6,DEFAULT)	|	VoC_pop16(REG6,DEFAULT)
0xDFE9E580,	//0x1f94		VoC_push16(RA,DEFAULT)	|	VoC_return
		//0x1f95		CS_h264_YCbCr_block_mc
0x207A6C04,	//0x1f96		VoC_bez16_d(block_mc_check_list1,0x207a)
0x1E6E2B80,	//0x1f98		VoC_jal(CS_h264_YCbCr_block_mc_part)
		//0x1f9a		block_mc_check_list1
0x207B6E04,	//0x1f9a		VoC_bnez16_d(block_mc_list1,0x207b)
0x206E2B00,	//0x1f9c		VoC_jump_lg(block_mc_single_dir)
		//0x1f9e		block_mc_list1
0x207A6C12,	//0x1f9e		VoC_bez16_d(block_mc_list1_go,0x207a)
0x17251407,	//0x1fa0		VoC_lw16_d(REG7,0x1725)
0x17261484,	//0x1fa2		VoC_lw32_d(ACC0,0x1726)
0x1E3A0A86,	//0x1fa4		VoC_lw16i(REG6,0x1e3a)
0x1F7A0A8A,	//0x1fa6		VoC_lw16i(ACC1_LO,0x1f7a)
0x1FDA0A8B,	//0x1fa8		VoC_lw16i(ACC1_HI,0x1fda)
0xDF445FC7,	//0x1faa		VoC_push32(ACC0,IN_PARALLEL)	|	VoC_push16(REG7,DEFAULT)
0x17251506,	//0x1fac		VoC_sw16_d(REG6,0x1725)
0x17261585,	//0x1fae		VoC_sw32_d(ACC1,0x1726)
		//0x1fb0		block_mc_list1_go
0x1E6E2B80,	//0x1fb0		VoC_jal(CS_h264_YCbCr_block_mc_part)
0x207A6E04,	//0x1fb2		VoC_bnez16_d(block_mc_bi_dir,0x207a)
0x206E2B00,	//0x1fb4		VoC_jump_lg(block_mc_single_dir)
		//0x1fb6		block_mc_bi_dir
0x180E6E20,	//0x1fb6		VoC_bnez16_d(block_mc_bi_dir_weight,0x180e)
		//0x1fb8		block_mc_bi_dir_std
0x17161483,	//0x1fb8		VoC_lw32_d(REG67,0x1716)
0x1725200A,	//0x1fba		VoC_lw16d_set_inc(REG2,0x1725,0x2)
0xF00B5F83,	//0x1fbc		VoC_lw16i_short(INC3,0x2,IN_PARALLEL)	|	VoC_pop16(REG3,DEFAULT)
0xE14C728D,	//0x1fbe		VoC_lw16i_short(RL6_LO,0x14,IN_PARALLEL)	|	VoC_lw16i_short(RL6_HI,0x14,DEFAULT)
0xF008790E,	//0x1fc0		VoC_lw16i_short(INC0,0x2,IN_PARALLEL)	|	VoC_shru16_ri(REG6,0x1,DEFAULT)
0xE0187029,	//0x1fc2		VoC_lw16i_short(ACC0_LO,0x1,IN_PARALLEL)	|	VoC_lw16i_short(ACC0_HI,0x1,DEFAULT)
0x1F262B80,	//0x1fc4		VoC_jal(CS_BiDir_Motion_Avg)
0xFC0B590D,	//0x1fc6		VoC_shru32_ri(REG67,0x1,IN_PARALLEL)	|	VoC_lw32_sd(ACC1,0x0,DEFAULT)
0xE0CC718D,	//0x1fc8		VoC_lw16i_short(RL6_LO,0xc,IN_PARALLEL)	|	VoC_lw16i_short(RL6_HI,0xc,DEFAULT)
0x1726200A,	//0x1fca		VoC_lw16d_set_inc(REG2,0x1726,0x2)
0x2B80E143,	//0x1fcc		VoC_jal(CS_BiDir_Motion_Avg)(lo)	|	VoC_movreg16(REG3,ACC1_LO,DEFAULT)
0xDF011F26,	//0x1fce		VoC_pop32(REG23,DEFAULT)	|	VoC_jal(CS_BiDir_Motion_Avg)(hi)
0x1727200A,	//0x1fd0		VoC_lw16d_set_inc(REG2,0x1727,0x2)
0x1F262B80,	//0x1fd2		VoC_jal(CS_BiDir_Motion_Avg)
0x20C62B00,	//0x1fd4		VoC_jump_lg(block_mc_end)
		//0x1fd6		block_mc_bi_dir_weight
0x17241405,	//0x1fd6		VoC_lw16_d(REG5,0x1724)
0x0248072D,	//0x1fd8		VoC_add16_rd(REG5,REG5,0x248)
0x002CF041,	//0x1fda		VoC_add16_pd(REG4,REG5,0x52e)(lo)	|	VoC_lw16i_short(REG1,0x2,DEFAULT)
0x002D052E,	//0x1fdc		VoC_add16_pd(REG5,REG5,0x52f)(lo)	|	VoC_add16_pd(REG4,REG5,0x52e)(hi)
0xD844052F,	//0x1fde		VoC_lw16_p(REG4,REG4,DEFAULT)	|	VoC_add16_pd(REG5,REG5,0x52f)(hi)
0x4029D855,	//0x1fe0		VoC_be16_rd(block_mc_bi_dir_use_weight_2,REG1,0x180e)(lo)	|	VoC_lw16_p(REG5,REG5,DEFAULT)
0x2B00180E,	//0x1fe2		VoC_jump_lg(block_mc_bi_dir_use_weight_1)(lo)	|	VoC_be16_rd(block_mc_bi_dir_use_weight_2,REG1,0x180e)(hi)
0xFFC02018,	//0x1fe4		VoC_NAD	|	VoC_jump_lg(block_mc_bi_dir_use_weight_1)(hi)
		//0x1fe6		block_mc_bi_dir_use_weight_2
0x18D20A81,	//0x1fe6		VoC_lw16i(REG1,0x18d2)
0xC12CF9E4,	//0x1fe8		VoC_add16_rr(REG4,REG4,REG5,DEFAULT)	|	VoC_shru16_ri(REG4,0xfffffffc,DEFAULT)
0xFFC0C10C,	//0x1fea		VoC_NOP	|	VoC_add16_rr(REG4,REG4,REG1,DEFAULT)
0x4424D844,	//0x1fec		VoC_bne16_rd(block_mc_bi_dir_weight_2_go,REG4,0x48e3)(lo)	|	VoC_lw16_p(REG4,REG4,DEFAULT)
0x2B0048E3,	//0x1fee		VoC_jump_lg(block_mc_bi_dir_std)(lo)	|	VoC_bne16_rd(block_mc_bi_dir_weight_2_go,REG4,0x48e3)(hi)
0xDF831FB8,	//0x1ff0		VoC_pop16(REG3,DEFAULT)	|	VoC_jump_lg(block_mc_bi_dir_std)(hi)
		//0x1ff1		block_mc_bi_dir_weight_2_go
0x48D70B25,	//0x1ff2		VoC_sub16_dr(REG5,0x48d7,REG4)
0xE14C728D,	//0x1ff4		VoC_lw16i_short(RL6_LO,0x14,IN_PARALLEL)	|	VoC_lw16i_short(RL6_HI,0x14,DEFAULT)
0x60A81582,	//0x1ff6		VoC_sw32_d(REG45,0x60a8)
0xE0557004,	//0x1ff8		VoC_lw16i_short(REG5,0x5,IN_PARALLEL)	|	VoC_lw16i_short(REG4,0x0,DEFAULT)
0x17251402,	//0x1ffa		VoC_lw16_d(REG2,0x1725)
0x17161483,	//0x1ffc		VoC_lw32_d(REG67,0x1716)
0x1F642B80,	//0x1ffe		VoC_jal(CS_biweight_h264_pixels)
0x17161483,	//0x2000		VoC_lw32_d(REG67,0x1716)
0xFC0B5909,	//0x2002		VoC_shru32_ri(REG67,0x1,IN_PARALLEL)	|	VoC_lw32_sd(REG23,0x0,DEFAULT)
0xE0CC718D,	//0x2004		VoC_lw16i_short(RL6_LO,0xc,IN_PARALLEL)	|	VoC_lw16i_short(RL6_HI,0xc,DEFAULT)
0xE0557004,	//0x2006		VoC_lw16i_short(REG5,0x5,IN_PARALLEL)	|	VoC_lw16i_short(REG4,0x0,DEFAULT)
0xDF436043,	//0x2008		VoC_push32(REG67,IN_PARALLEL)	|	VoC_movreg16(REG3,REG2,DEFAULT)
0x17261402,	//0x200a		VoC_lw16_d(REG2,0x1726)
0x1F642B80,	//0x200c		VoC_jal(CS_biweight_h264_pixels)
0xE0555F03,	//0x200e		VoC_lw16i_short(REG5,0x5,IN_PARALLEL)	|	VoC_pop32(REG67,DEFAULT)
0xE0045F01,	//0x2010		VoC_lw16i_short(REG4,0x0,IN_PARALLEL)	|	VoC_pop32(REG23,DEFAULT)
0x17271402,	//0x2012		VoC_lw16_d(REG2,0x1727)
0x1F642B80,	//0x2014		VoC_jal(CS_biweight_h264_pixels)
0x20C62B00,	//0x2016		VoC_jump_lg(block_mc_end)
		//0x2018		block_mc_bi_dir_use_weight_1
0x4029F021,	//0x2018		VoC_be16_rd(block_mc_bi_dir_weight_1_go,REG1,0x180e)(lo)	|	VoC_lw16i_short(REG1,0x1,DEFAULT)
0x2B00180E,	//0x201a		VoC_jump_lg(block_mc_bi_dir_std)(lo)	|	VoC_be16_rd(block_mc_bi_dir_weight_1_go,REG1,0x180e)(hi)
0xFFC01FB8,	//0x201c		VoC_NAD	|	VoC_jump_lg(block_mc_bi_dir_std)(hi)
		//0x201e		block_mc_bi_dir_weight_1_go
0x18120A80,	//0x201e		VoC_lw16i(REG0,0x1812)
0x18220A81,	//0x2020		VoC_lw16i(REG1,0x1822)
0xE14D4810,	//0x2022		VoC_lw16i_short(RL6_HI,0x14,IN_PARALLEL)	|	VoC_add32_rr(REG01,REG01,REG45,DEFAULT)
0x18320A82,	//0x2024		VoC_lw16i(REG2,0x1832)
0x18420A83,	//0x2026		VoC_lw16i(REG3,0x1842)
0xE14C5800,	//0x2028		VoC_lw16i_short(RL6_LO,0x14,IN_PARALLEL)	|	VoC_lw16_p(REG0,REG0,DEFAULT)
0xC8515811,	//0x202a		VoC_add32_rr(REG23,REG23,REG45,IN_PARALLEL)	|	VoC_lw16_p(REG1,REG1,DEFAULT)
0x17161483,	//0x202c		VoC_lw32_d(REG67,0x1716)
0xFDFA5822,	//0x202e		VoC_shru32_ri(REG45,0xffffffff,IN_PARALLEL)	|	VoC_lw16_p(REG2,REG2,DEFAULT)
0x5F83809C,	//0x2030		VoC_pop16(REG3,DEFAULT)	|	VoC_add16_rp(REG4,REG2,REG3,DEFAULT)
0x1580DF42,	//0x2032		VoC_sw32_d(REG01,0x60a8)(lo)	|	VoC_push32(REG45,IN_PARALLEL)
0x140560A8,	//0x2034		VoC_lw16_d(REG5,0x1810)(lo)	|	VoC_sw32_d(REG01,0x60a8)(hi)
0x14021810,	//0x2036		VoC_lw16_d(REG2,0x1725)(lo)	|	VoC_lw16_d(REG5,0x1810)(hi)
0x2B801725,	//0x2038		VoC_jal(CS_biweight_h264_pixels)(lo)	|	VoC_lw16_d(REG2,0x1725)(hi)
0xDF021F64,	//0x203a		VoC_pop32(REG45,DEFAULT)	|	VoC_jal(CS_biweight_h264_pixels)(hi)
0x18520A80,	//0x203c		VoC_lw16i(REG0,0x1852)
0x18720A81,	//0x203e		VoC_lw16i(REG1,0x1872)
0xE0CD4810,	//0x2040		VoC_lw16i_short(RL6_HI,0xc,IN_PARALLEL)	|	VoC_add32_rr(REG01,REG01,REG45,DEFAULT)
0x18920A82,	//0x2042		VoC_lw16i(REG2,0x1892)
0x18B20A83,	//0x2044		VoC_lw16i(REG3,0x18b2)
0xE0CC5980,	//0x2046		VoC_lw16i_short(RL6_LO,0xc,IN_PARALLEL)	|	VoC_lw32_p(REG01,REG0,DEFAULT)
0xC851598C,	//0x2048		VoC_add32_rr(REG23,REG23,REG45,IN_PARALLEL)	|	VoC_lw32_p(ACC0,REG1,DEFAULT)
0xF6286101,	//0x204a		VoC_movreg16(ACC0_LO,REG1,IN_PARALLEL)	|	VoC_movreg16(REG1,ACC0_LO,DEFAULT)
0xD99AD993,	//0x204c		VoC_lw32_p(REG45,REG3,DEFAULT)	|	VoC_lw32_p(REG67,REG2,DEFAULT)
0xD909489A,	//0x204e		VoC_lw32_sd(REG23,0x0,IN_PARALLEL)	|	VoC_add32_rr(REG45,REG45,REG67,DEFAULT)
0x17161483,	//0x2050		VoC_lw32_d(REG67,0x1716)
0xFC0B6043,	//0x2052		VoC_shru32_ri(REG67,0x1,IN_PARALLEL)	|	VoC_movreg16(REG3,REG2,DEFAULT)
0x60A81580,	//0x2054		VoC_sw32_d(REG01,0x60a8)
0xDFC55F44,	//0x2056		VoC_push16(REG5,IN_PARALLEL)	|	VoC_push32(ACC0,DEFAULT)
0x18101405,	//0x2058		VoC_lw16_d(REG5,0x1810)
0x17261402,	//0x205a		VoC_lw16_d(REG2,0x1726)
0x1F642B80,	//0x205c		VoC_jal(CS_biweight_h264_pixels)
0xDF845F00,	//0x205e		VoC_pop16(REG4,IN_PARALLEL)	|	VoC_pop32(REG01,DEFAULT)
0x17161483,	//0x2060		VoC_lw32_d(REG67,0x1716)
0xFC0B5F01,	//0x2062		VoC_shru32_ri(REG67,0x1,IN_PARALLEL)	|	VoC_pop32(REG23,DEFAULT)
0x60A81580,	//0x2064		VoC_sw32_d(REG01,0x60a8)
0x17271402,	//0x2066		VoC_lw16_d(REG2,0x1727)
0x18101405,	//0x2068		VoC_lw16_d(REG5,0x1810)
0x1F642B80,	//0x206a		VoC_jal(CS_biweight_h264_pixels)
0x20C62B00,	//0x206c		VoC_jump_lg(block_mc_end)
		//0x206e		block_mc_single_dir
0x4029F021,	//0x206e		VoC_be16_rd(block_mc_single_weight,REG1,0x180e)(lo)	|	VoC_lw16i_short(REG1,0x1,DEFAULT)
0x2B00180E,	//0x2070		VoC_jump_lg(block_mc_end)(lo)	|	VoC_be16_rd(block_mc_single_weight,REG1,0x180e)(hi)
0xFFC020C6,	//0x2072		VoC_NAD	|	VoC_jump_lg(block_mc_end)(hi)
		//0x2074		block_mc_single_weight
0x17241405,	//0x2074		VoC_lw16_d(REG5,0x1724)
0x0248072D,	//0x2076		VoC_add16_rd(REG5,REG5,0x248)
0x207A6C0A,	//0x2078		VoC_bez16_d(block_mc_weight_refn1,0x207a)
0x052E002D,	//0x207a		VoC_add16_pd(REG5,REG5,0x52e)
0x18120A83,	//0x207c		VoC_lw16i(REG3,0x1812)
0x18320A84,	//0x207e		VoC_lw16i(REG4,0x1832)
0xFFC065C8,	//0x2080		VoC_NAD(IN_PARALLEL)	|	VoC_jump(block_mc_weight_refn_end)
		//0x2082		block_mc_weight_refn1
0x052F002D,	//0x2082		VoC_add16_pd(REG5,REG5,0x52f)
0x18220A83,	//0x2084		VoC_lw16i(REG3,0x1822)
0x18420A84,	//0x2086		VoC_lw16i(REG4,0x1842)
		//0x2088		block_mc_weight_refn_end
0x17241505,	//0x2088		VoC_sw16_d(REG5,0x1724)
0x812C00EB,	//0x208a		VoC_add16_rp(REG4,REG4,REG5,IN_PARALLEL)	|	VoC_add16_rp(REG3,REG3,REG5,DEFAULT)
0x18101405,	//0x208c		VoC_lw16_d(REG5,0x1810)
0xD8337282,	//0x208e		VoC_lw16_p(REG3,REG3,IN_PARALLEL)	|	VoC_lw16i_short(REG2,0x14,DEFAULT)
0x1400D844,	//0x2090		VoC_lw16_d(REG0,0x1725)(lo)	|	VoC_lw16_p(REG4,REG4,DEFAULT)
0x14831725,	//0x2092		VoC_lw32_d(REG67,0x1716)(lo)	|	VoC_lw16_d(REG0,0x1725)(hi)
0xFFC01716,	//0x2094		VoC_NAD	|	VoC_lw32_d(REG67,0x1716)(hi)
0x1F382B80,	//0x2096		VoC_jal(CS_weight_h264_pixels)
0x18526C2E,	//0x2098		VoC_bez16_d(block_mc_end,0x1852)
0x17241405,	//0x209a		VoC_lw16_d(REG5,0x1724)
0x207A6C08,	//0x209c		VoC_bez16_d(block_mc_chroma_weight_refn1,0x207a)
0x18520A83,	//0x209e		VoC_lw16i(REG3,0x1852)
0x18920A84,	//0x20a0		VoC_lw16i(REG4,0x1892)
0xFFC065C6,	//0x20a2		VoC_NAD(IN_PARALLEL)	|	VoC_jump(block_mc_chroma_weight_refn_end)
		//0x20a4		block_mc_chroma_weight_refn1
0x18720A83,	//0x20a4		VoC_lw16i(REG3,0x1872)
0x18B20A84,	//0x20a6		VoC_lw16i(REG4,0x18b2)
		//0x20a8		block_mc_chroma_weight_refn_end
0x79FDD855,	//0x20a8		VoC_shru16_ri(REG5,0xffffffff,DEFAULT)	|	VoC_lw16_p(REG5,REG5,DEFAULT)
0x40EBE0C2,	//0x20aa		VoC_add16_rr(REG3,REG3,REG5,DEFAULT)	|	VoC_lw16i_short(REG2,0xc,IN_PARALLEL)
0x1400C12C,	//0x20ac		VoC_lw16_d(REG0,0x1726)(lo)	|	VoC_add16_rr(REG4,REG4,REG5,IN_PARALLEL)
0xD99C1726,	//0x20ae		VoC_lw32_p(ACC0,REG3,DEFAULT)	|	VoC_lw16_d(REG0,0x1726)(hi)
0x60A8D9A2,	//0x20b0		VoC_movreg16(ACC0_LO,REG5,DEFAULT)	|	VoC_lw32_p(REG45,REG4,DEFAULT)
0x1405F703,	//0x20b2		VoC_lw16_d(REG5,0x1811)(lo)	|	VoC_movreg16(REG3,ACC0_LO,IN_PARALLEL)
0x14831811,	//0x20b4		VoC_lw32_d(REG67,0x1716)(lo)	|	VoC_lw16_d(REG5,0x1811)(hi)
0x7C0B1716,	//0x20b6		VoC_shru32_ri(REG67,0x1,DEFAULT)	|	VoC_lw32_d(REG67,0x1716)(hi)
0x2B80DF44,	//0x20b8		VoC_jal(CS_weight_h264_pixels)(lo)	|	VoC_push32(ACC0,IN_PARALLEL)
0xDF041F38,	//0x20ba		VoC_pop32(ACC0,DEFAULT)	|	VoC_jal(CS_weight_h264_pixels)(hi)
0xF7046123,	//0x20bc		VoC_movreg16(REG4,ACC0_LO,IN_PARALLEL)	|	VoC_movreg16(REG3,ACC0_HI,DEFAULT)
0x17271400,	//0x20be		VoC_lw16_d(REG0,0x1727)
0x17161483,	//0x20c0		VoC_lw32_d(REG67,0x1716)
0xE0C27C0B,	//0x20c2		VoC_lw16i_short(REG2,0xc,IN_PARALLEL)	|	VoC_shru32_ri(REG67,0x1,DEFAULT)
0x1F382B80,	//0x20c4		VoC_jal(CS_weight_h264_pixels)
		//0x20c6		block_mc_end
0xF030DFA9,	//0x20c6		VoC_lw16i_short(INC0,0x1,DEFAULT)	|	VoC_pop16(RA,DEFAULT)
0xFFC06580,	//0x20c8		VoC_NAD(IN_PARALLEL)	|	VoC_return
		//0x20ca		CS_h264_mc
0x02391401,	//0x20ca		VoC_lw16_d(REG1,0x239)
0xF6205FE9,	//0x20cc		VoC_movreg16(REG0,REG1,IN_PARALLEL)	|	VoC_push16(RA,DEFAULT)
0x00401601,	//0x20ce		VoC_and16_ri(REG1,0x40)
0x212431C1,	//0x20d0		VoC_bnez16_r(H264_MC_IS_8x8,REG1)
0x10000A83,	//0x20d2		VoC_lw16i(REG3,0x1000)
0xF9F36062,	//0x20d4		VoC_shru16_ri(REG3,0xfffffffe,IN_PARALLEL)	|	VoC_movreg16(REG2,REG3,DEFAULT)
0xE403E402,	//0x20d6		VoC_and16_rr(REG3,REG0,DEFAULT)	|	VoC_and16_rr(REG2,REG0,DEFAULT)
0x207A1502,	//0x20d8		VoC_sw16_d(REG2,0x207a)
0x207B1503,	//0x20da		VoC_sw16_d(REG3,0x207b)
0x0A85F004,	//0x20dc		VoC_lw16i(REG5,0xb10)(lo)	|	VoC_lw16i_short(REG4,0x0,DEFAULT)
0x0A820B10,	//0x20de		VoC_lw16i(REG2,0xc80)(lo)	|	VoC_lw16i(REG5,0xb10)(hi)
0x0A830C80,	//0x20e0		VoC_lw16i(REG3,0xd10)(lo)	|	VoC_lw16i(REG2,0xc80)(hi)
0x15820D10,	//0x20e2		VoC_sw32_d(REG45,0x1724)(lo)	|	VoC_lw16i(REG3,0xd10)(hi)
0x15811724,	//0x20e4		VoC_sw32_d(REG23,0x1726)(lo)	|	VoC_sw32_d(REG45,0x1724)(hi)
0xFFC01726,	//0x20e6		VoC_NAD	|	VoC_sw32_d(REG23,0x1726)(hi)
0x1F952B80,	//0x20e8		VoC_jal(CS_h264_YCbCr_block_mc)
0x02391400,	//0x20ea		VoC_lw16_d(REG0,0x239)
0x00081600,	//0x20ec		VoC_and16_ri(REG0,0x8)
0x20F23180,	//0x20ee		VoC_bez16_r(H264_MC_part1,REG0)
0x21E22B00,	//0x20f0		VoC_jump_lg(H264_MC_DONE)
		//0x20f2		H264_MC_part1
0x20000A83,	//0x20f2		VoC_lw16i(REG3,0x2000)
0xF9F36062,	//0x20f4		VoC_shru16_ri(REG3,0xfffffffe,IN_PARALLEL)	|	VoC_movreg16(REG2,REG3,DEFAULT)
0x02392802,	//0x20f6		VoC_and16_rd(REG2,0x239)
0x02392803,	//0x20f8		VoC_and16_rd(REG3,0x239)
0x207A1502,	//0x20fa		VoC_sw16_d(REG2,0x207a)
0x207B1503,	//0x20fc		VoC_sw16_d(REG3,0x207b)
0x02391400,	//0x20fe		VoC_lw16_d(REG0,0x239)
0x00101600,	//0x2100		VoC_and16_ri(REG0,0x10)
0x21143180,	//0x2102		VoC_bez16_r(H264_MC_IS_8x16,REG0)
0x0A85F104,	//0x2104		VoC_lw16i(REG5,0xbb0)(lo)	|	VoC_lw16i_short(REG4,0x8,DEFAULT)
0x0A820BB0,	//0x2106		VoC_lw16i(REG2,0xcb0)(lo)	|	VoC_lw16i(REG5,0xbb0)(hi)
0x0A830CB0,	//0x2108		VoC_lw16i(REG3,0xd40)(lo)	|	VoC_lw16i(REG2,0xcb0)(hi)
0x15820D40,	//0x210a		VoC_sw32_d(REG45,0x1724)(lo)	|	VoC_lw16i(REG3,0xd40)(hi)
0x15811724,	//0x210c		VoC_sw32_d(REG23,0x1726)(lo)	|	VoC_sw32_d(REG45,0x1724)(hi)
0xFFC01726,	//0x210e		VoC_NAD	|	VoC_sw32_d(REG23,0x1726)(hi)
0x1F952B80,	//0x2110		VoC_jal(CS_h264_YCbCr_block_mc)
0x21E22B00,	//0x2112		VoC_jump_lg(H264_MC_DONE)
		//0x2114		H264_MC_IS_8x16
0x0A85F084,	//0x2114		VoC_lw16i(REG5,0xb18)(lo)	|	VoC_lw16i_short(REG4,0x4,DEFAULT)
0x0A820B18,	//0x2116		VoC_lw16i(REG2,0xc84)(lo)	|	VoC_lw16i(REG5,0xb18)(hi)
0x0A830C84,	//0x2118		VoC_lw16i(REG3,0xd14)(lo)	|	VoC_lw16i(REG2,0xc84)(hi)
0x15820D14,	//0x211a		VoC_sw32_d(REG45,0x1724)(lo)	|	VoC_lw16i(REG3,0xd14)(hi)
0x15811724,	//0x211c		VoC_sw32_d(REG23,0x1726)(lo)	|	VoC_sw32_d(REG45,0x1724)(hi)
0xFFC01726,	//0x211e		VoC_NAD	|	VoC_sw32_d(REG23,0x1726)(hi)
0x1F952B80,	//0x2120		VoC_jal(CS_h264_YCbCr_block_mc)
0x21E22B00,	//0x2122		VoC_jump_lg(H264_MC_DONE)
		//0x2124		H264_MC_IS_8x8
0x00001804,	//0x2124		VoC_lw16i_set_inc(REG0,0x0,0x1)
		//0x2126		H264_MC_SUB_LOOP1
0x02350A81,	//0x2126		VoC_lw16i(REG1,0x235)
0xF6046003,	//0x2128		VoC_movreg16(REG4,REG0,IN_PARALLEL)	|	VoC_movreg16(REG3,REG0,DEFAULT)
0xE0124041,	//0x212a		VoC_lw16i_short(REG2,0x1,IN_PARALLEL)	|	VoC_add16_rr(REG1,REG1,REG0,DEFAULT)
0xE0226413,	//0x212c		VoC_lw16i_short(REG2,0x2,IN_PARALLEL)	|	VoC_and16_rr(REG3,REG2,DEFAULT)
0xF8EB6414,	//0x212e		VoC_shr16_ri(REG3,0xfffffffd,IN_PARALLEL)	|	VoC_and16_rr(REG4,REG2,DEFAULT)
0xD81178F4,	//0x2130		VoC_lw16_p(REG1,REG1,IN_PARALLEL)	|	VoC_shr16_ri(REG4,0xfffffffe,DEFAULT)
0x10000A87,	//0x2132		VoC_lw16i(REG7,0x1000)
0xF9F760E6,	//0x2134		VoC_shru16_ri(REG7,0xfffffffe,IN_PARALLEL)	|	VoC_movreg16(REG6,REG7,DEFAULT)
0xE40FE40E,	//0x2136		VoC_and16_rr(REG7,REG1,DEFAULT)	|	VoC_and16_rr(REG6,REG1,DEFAULT)
0x207A1506,	//0x2138		VoC_sw16_d(REG6,0x207a)
0x207B1507,	//0x213a		VoC_sw16_d(REG7,0x207b)
0xE0C77286,	//0x213c		VoC_lw16i_short(REG7,0xc,IN_PARALLEL)	|	VoC_lw16i_short(REG6,0x14,DEFAULT)
0xF80C4532,	//0x213e		VoC_shr16_ri(REG4,0x1,IN_PARALLEL)	|	VoC_mult16_rr(REG2,REG4,REG6,DEFAULT)
0x0B100A85,	//0x2140		VoC_lw16i(REG5,0xb10)
0xF90B409A,	//0x2142		VoC_shru16_ri(REG3,0x1,IN_PARALLEL)	|	VoC_add16_rr(REG2,REG2,REG3,DEFAULT)
0xC53A4155,	//0x2144		VoC_mult16_rr(REG2,REG4,REG7,IN_PARALLEL)	|	VoC_add16_rr(REG5,REG5,REG2,DEFAULT)
0x0C800A86,	//0x2146		VoC_lw16i(REG6,0xc80)
0x0D100A87,	//0x2148		VoC_lw16i(REG7,0xd10)
0xE082409B,	//0x214a		VoC_lw16i_short(REG2,0x8,IN_PARALLEL)	|	VoC_add16_rr(REG3,REG2,REG3,DEFAULT)
0x640AC19E,	//0x214c		VoC_and16_rr(REG2,REG1,DEFAULT)	|	VoC_add16_rr(REG6,REG6,REG3,DEFAULT)
0x3182C1DF,	//0x214e		VoC_bez16_r(H264_MC_IS_SUB8X4,REG2)(lo)	|	VoC_add16_rr(REG7,REG7,REG3,IN_PARALLEL)
0x5FC0215E,	//0x2150		VoC_push16(REG0,DEFAULT)	|	VoC_bez16_r(H264_MC_IS_SUB8X4,REG2)(hi)
0x1505F9F0,	//0x2152		VoC_sw16_d(REG5,0x1725)(lo)	|	VoC_shru16_ri(REG0,0xfffffffe,IN_PARALLEL)
0x15831725,	//0x2154		VoC_sw32_d(REG67,0x1726)(lo)	|	VoC_sw16_d(REG5,0x1725)(hi)
0x15001726,	//0x2156		VoC_sw16_d(REG0,0x1724)(lo)	|	VoC_sw32_d(REG67,0x1726)(hi)
0x2B801724,	//0x2158		VoC_jal(CS_h264_YCbCr_block_mc)(lo)	|	VoC_sw16_d(REG0,0x1724)(hi)
0xDF801F95,	//0x215a		VoC_pop16(REG0,DEFAULT)	|	VoC_jal(CS_h264_YCbCr_block_mc)(hi)
0x21DE2B00,	//0x215c		VoC_jump_lg(H264_MC_SUB_LOOP1_END)
		//0x215e		H264_MC_IS_SUB8X4
0xE40AF202,	//0x215e		VoC_and16_rr(REG2,REG1,DEFAULT)	|	VoC_lw16i_short(REG2,0x10,DEFAULT)
0x21863182,	//0x2160		VoC_bez16_r(H264_MC_IS_SUB4X8,REG2)
0xDF435FC5,	//0x2162		VoC_push32(REG67,IN_PARALLEL)	|	VoC_push16(REG5,DEFAULT)
0xF9F05FC0,	//0x2164		VoC_shru16_ri(REG0,0xfffffffe,IN_PARALLEL)	|	VoC_push16(REG0,DEFAULT)
0x17251505,	//0x2166		VoC_sw16_d(REG5,0x1725)
0x17261583,	//0x2168		VoC_sw32_d(REG67,0x1726)
0x17241500,	//0x216a		VoC_sw16_d(REG0,0x1724)
0x1F952B80,	//0x216c		VoC_jal(CS_h264_YCbCr_block_mc)
0x5F85DF80,	//0x216e		VoC_pop16(REG5,DEFAULT)	|	VoC_pop16(REG0,DEFAULT)
0x0A82DF03,	//0x2170		VoC_lw16i(REG2,0x50)(lo)	|	VoC_pop32(REG67,IN_PARALLEL)
0x41550050,	//0x2172		VoC_add16_rr(REG5,REG5,REG2,DEFAULT)	|	VoC_lw16i(REG2,0x50)(hi)
0x4196E182,	//0x2174		VoC_add16_rr(REG6,REG6,REG2,DEFAULT)	|	VoC_lw16i_short(REG2,0x18,IN_PARALLEL)
0x5FC0C1D7,	//0x2176		VoC_push16(REG0,DEFAULT)	|	VoC_add16_rr(REG7,REG7,REG2,IN_PARALLEL)
0x0700F9F0,	//0x2178		VoC_add16_rd(REG0,REG0,0x482d)(lo)	|	VoC_shru16_ri(REG0,0xfffffffe,IN_PARALLEL)
0x1505482D,	//0x217a		VoC_sw16_d(REG5,0x1725)(lo)	|	VoC_add16_rd(REG0,REG0,0x482d)(hi)
0x15831725,	//0x217c		VoC_sw32_d(REG67,0x1726)(lo)	|	VoC_sw16_d(REG5,0x1725)(hi)
0x15001726,	//0x217e		VoC_sw16_d(REG0,0x1724)(lo)	|	VoC_sw32_d(REG67,0x1726)(hi)
0x2B801724,	//0x2180		VoC_jal(CS_h264_YCbCr_block_mc)(lo)	|	VoC_sw16_d(REG0,0x1724)(hi)
0xDF801F95,	//0x2182		VoC_pop16(REG0,DEFAULT)	|	VoC_jal(CS_h264_YCbCr_block_mc)(hi)
0x21DE2B00,	//0x2184		VoC_jump_lg(H264_MC_SUB_LOOP1_END)
		//0x2186		H264_MC_IS_SUB4X8
0x00200A82,	//0x2186		VoC_lw16i(REG2,0x20)
0x3182E40A,	//0x2188		VoC_bez16_r(H264_MC_IS_SUB4X4,REG2)(lo)	|	VoC_and16_rr(REG2,REG1,DEFAULT)
0x5FC521B0,	//0x218a		VoC_push16(REG5,DEFAULT)	|	VoC_bez16_r(H264_MC_IS_SUB4X4,REG2)(hi)
0x5FC0DF43,	//0x218c		VoC_push16(REG0,DEFAULT)	|	VoC_push32(REG67,IN_PARALLEL)
0x1505F9F0,	//0x218e		VoC_sw16_d(REG5,0x1725)(lo)	|	VoC_shru16_ri(REG0,0xfffffffe,IN_PARALLEL)
0x15831725,	//0x2190		VoC_sw32_d(REG67,0x1726)(lo)	|	VoC_sw16_d(REG5,0x1725)(hi)
0x15001726,	//0x2192		VoC_sw16_d(REG0,0x1724)(lo)	|	VoC_sw32_d(REG67,0x1726)(hi)
0xFFC01724,	//0x2194		VoC_NAD	|	VoC_sw16_d(REG0,0x1724)(hi)
0x1F952B80,	//0x2196		VoC_jal(CS_h264_YCbCr_block_mc)
0xE0425F80,	//0x2198		VoC_lw16i_short(REG2,0x4,IN_PARALLEL)	|	VoC_pop16(REG0,DEFAULT)
0xDF035F85,	//0x219a		VoC_pop32(REG67,IN_PARALLEL)	|	VoC_pop16(REG5,DEFAULT)
0xF90A4155,	//0x219c		VoC_shru16_ri(REG2,0x1,IN_PARALLEL)	|	VoC_add16_rr(REG5,REG5,REG2,DEFAULT)
0xC1D74196,	//0x219e		VoC_add16_rr(REG7,REG7,REG2,IN_PARALLEL)	|	VoC_add16_rr(REG6,REG6,REG2,DEFAULT)
0xF9F05FC0,	//0x21a0		VoC_shru16_ri(REG0,0xfffffffe,IN_PARALLEL)	|	VoC_push16(REG0,DEFAULT)
0x482C0700,	//0x21a2		VoC_add16_rd(REG0,REG0,0x482c)
0x17251505,	//0x21a4		VoC_sw16_d(REG5,0x1725)
0x17261583,	//0x21a6		VoC_sw32_d(REG67,0x1726)
0x17241500,	//0x21a8		VoC_sw16_d(REG0,0x1724)
0x1F952B80,	//0x21aa		VoC_jal(CS_h264_YCbCr_block_mc)
0x2B00DF80,	//0x21ac		VoC_jump_lg(H264_MC_SUB_LOOP1_END)(lo)	|	VoC_pop16(REG0,DEFAULT)
0xFFC021DE,	//0x21ae		VoC_NAD	|	VoC_jump_lg(H264_MC_SUB_LOOP1_END)(hi)
		//0x21b0		H264_MC_IS_SUB4X4
0xDF435FC5,	//0x21b0		VoC_push32(REG67,IN_PARALLEL)	|	VoC_push16(REG5,DEFAULT)
0x00001805,	//0x21b2		VoC_lw16i_set_inc(REG1,0x0,0x1)
		//0x21b4		H264_MC_SUB_LOOP2
0xF9F05F40,	//0x21b4		VoC_shru16_ri(REG0,0xfffffffe,IN_PARALLEL)	|	VoC_push32(REG01,DEFAULT)
0x1505C008,	//0x21b6		VoC_sw16_d(REG5,0x1725)(lo)	|	VoC_add16_rr(REG0,REG0,REG1,DEFAULT)
0x15831725,	//0x21b8		VoC_sw32_d(REG67,0x1726)(lo)	|	VoC_sw16_d(REG5,0x1725)(hi)
0x15001726,	//0x21ba		VoC_sw16_d(REG0,0x1724)(lo)	|	VoC_sw32_d(REG67,0x1726)(hi)
0xFFC01724,	//0x21bc		VoC_NAD	|	VoC_sw16_d(REG0,0x1724)(hi)
0x1F952B80,	//0x21be		VoC_jal(CS_h264_YCbCr_block_mc)
0xF0055F00,	//0x21c0		VoC_lw16i_short(INC1,0x1,IN_PARALLEL)	|	VoC_pop32(REG01,DEFAULT)
0xE0C77286,	//0x21c2		VoC_lw16i_short(REG7,0xc,IN_PARALLEL)	|	VoC_lw16i_short(REG6,0x14,DEFAULT)
0x4D39DE08,	//0x21c4		VoC_bnlt16_rd(H264_MC_IS_SUB4X4_END,REG1,0x482e)(lo)	|	VoC_inc_p(REG1,DEFAULT)
0x6022482E,	//0x21c6		VoC_movreg16(REG2,REG1,DEFAULT)	|	VoC_bnlt16_rd(H264_MC_IS_SUB4X4_END,REG1,0x482e)(hi)
0x1602F623,	//0x21c8		VoC_and16_ri(REG2,0x1)(lo)	|	VoC_movreg16(REG3,REG1,IN_PARALLEL)
0x16030001,	//0x21ca		VoC_and16_ri(REG3,0x2)(lo)	|	VoC_and16_ri(REG2,0x1)(hi)
0xF9F20002,	//0x21cc		VoC_shru16_ri(REG2,0xfffffffe,DEFAULT)	|	VoC_and16_ri(REG3,0x2)(hi)
0x44F4F9FB,	//0x21ce		VoC_mult16_rr(REG4,REG3,REG6,DEFAULT)	|	VoC_shru16_ri(REG3,0xffffffff,DEFAULT)
0x5615F90B,	//0x21d0		VoC_lw16_sd(REG5,0x0,DEFAULT)	|	VoC_shru16_ri(REG3,0x1,IN_PARALLEL)
0x4114C4FB,	//0x21d2		VoC_add16_rr(REG4,REG4,REG2,DEFAULT)	|	VoC_mult16_rr(REG3,REG3,REG7,IN_PARALLEL)
0x4165D90B,	//0x21d4		VoC_add16_rr(REG5,REG5,REG4,DEFAULT)	|	VoC_lw32_sd(REG67,0x0,IN_PARALLEL)
0xC0D3F90A,	//0x21d6		VoC_add16_rr(REG3,REG3,REG2,DEFAULT)	|	VoC_shru16_ri(REG2,0x1,IN_PARALLEL)
0xC1DFC19E,	//0x21d8		VoC_add16_rr(REG7,REG7,REG3,DEFAULT)	|	VoC_add16_rr(REG6,REG6,REG3,DEFAULT)
0x21B42B00,	//0x21da		VoC_jump_lg(H264_MC_SUB_LOOP2)
		//0x21dc		H264_MC_IS_SUB4X4_END
0xDF035F85,	//0x21dc		VoC_pop32(REG67,IN_PARALLEL)	|	VoC_pop16(REG5,DEFAULT)
		//0x21de		H264_MC_SUB_LOOP1_END
0xE0415E00,	//0x21de		VoC_lw16i_short(REG1,0x4,IN_PARALLEL)	|	VoC_inc_p(REG0,DEFAULT)
0x21263408,	//0x21e0		VoC_bgt16_rr(H264_MC_SUB_LOOP1,REG1,REG0)
		//0x21e2		H264_MC_DONE
0xFFC0DFA9,	//0x21e2		VoC_NOP	|	VoC_pop16(RA,DEFAULT)
0xFFC06580,	//0x21e4		VoC_NAD(IN_PARALLEL)	|	VoC_return
		//0x21e6		H264_mb_LeftPixel_update
0xC2386787,	//0x21e6		VoC_sub16_rr(REG0,REG0,REG7,IN_PARALLEL)	|	VoC_loop_r_short(REG6,DEFAULT)
0xC03859DC,	//0x21e8		VoC_add16_rr(REG0,REG0,REG7,IN_PARALLEL)	|	VoC_lw32inc_p(ACC0,REG3,DEFAULT)
0x5DC4D9DD,	//0x21ea		VoC_sw32inc_p(ACC0,REG0,DEFAULT)	|	VoC_lw32inc_p(ACC1,REG3,DEFAULT)
0xDDC5C0FB,	//0x21ec		VoC_sw32inc_p(ACC1,REG0,DEFAULT)	|	VoC_add16_rr(REG3,REG3,REG7,IN_PARALLEL)
		//0x21ed		VoC_endloop0
0xE580C038,	//0x21ee		VoC_return	|	VoC_add16_rr(REG0,REG0,REG7,DEFAULT)
		//0x21f0		H264_mb_TopAndLeftPixel_update
0xF00B403B,	//0x21f0		VoC_lw16i_short(INC3,0x2,IN_PARALLEL)	|	VoC_add16_rr(REG3,REG0,REG7,DEFAULT)
0xE0467050,	//0x21f2		VoC_lw16i_short(REG6,0x4,IN_PARALLEL)	|	VoC_lw16i_short(INC0,0x2,DEFAULT)
0xF0094034,	//0x21f4		VoC_lw16i_short(INC1,0x2,IN_PARALLEL)	|	VoC_add16_rr(REG4,REG0,REG6,DEFAULT)
0xF00A5FE9,	//0x21f6		VoC_lw16i_short(INC2,0x2,IN_PARALLEL)	|	VoC_push16(RA,DEFAULT)
0x21E62B80,	//0x21f8		VoC_jal(H264_mb_LeftPixel_update)
0xE0255FC3,	//0x21fa		VoC_lw16i_short(REG5,0x2,IN_PARALLEL)	|	VoC_push16(REG3,DEFAULT)
0x5FC7DFC0,	//0x21fc		VoC_push16(REG7,DEFAULT)	|	VoC_push16(REG0,DEFAULT)
0x083BF80F,	//0x21fe		VoC_mult16_rd(REG3,REG7,0x222)(lo)	|	VoC_shr16_ri(REG7,0x1,IN_PARALLEL)
0x083E0222,	//0x2200		VoC_mult16_rd(REG6,REG7,0x21c)(lo)	|	VoC_mult16_rd(REG3,REG7,0x222)(hi)
0xC09A021C,	//0x2202		VoC_add16_rr(REG2,REG2,REG3,DEFAULT)	|	VoC_mult16_rd(REG6,REG7,0x21c)(hi)
0x220C3183,	//0x2204		VoC_bez16_r(H264_MB_X_BE_0,REG3)
0xC2BB6080,	//0x2206		VoC_sub16_rr(REG3,REG2,REG7,IN_PARALLEL)	|	VoC_movreg16(REG0,REG4,DEFAULT)
0xC1AE7084,	//0x2208		VoC_add16_rr(REG6,REG6,REG5,IN_PARALLEL)	|	VoC_lw16i_short(REG4,0x4,DEFAULT)
0xFFC065C8,	//0x220a		VoC_NAD(IN_PARALLEL)	|	VoC_jump(H264_NEXT_TOP_ADDR_END)
		//0x220c		H264_MB_X_BE_0
0xC0B36080,	//0x220c		VoC_add16_rr(REG3,REG2,REG6,IN_PARALLEL)	|	VoC_movreg16(REG0,REG4,DEFAULT)
0xC1EF42FB,	//0x220e		VoC_add16_rr(REG7,REG7,REG5,IN_PARALLEL)	|	VoC_sub16_rr(REG3,REG3,REG7,DEFAULT)
0xFFC07004,	//0x2210		VoC_NAD(IN_PARALLEL)	|	VoC_lw16i_short(REG4,0x0,DEFAULT)
		//0x2212		H264_NEXT_TOP_ADDR_END
0xF80F40AA,	//0x2212		VoC_shr16_ri(REG7,0x1,IN_PARALLEL)	|	VoC_add16_rr(REG2,REG2,REG5,DEFAULT)
0x22332C09,	//0x2214		VoC_loop_i(0x1,0x4)
0x222F2E38,	//0x2216		VoC_loop_r(0,REG7)
0xFF1759CC,	//0x2218		VoC_movreg32(RL7,REG45,IN_PARALLEL)	|	VoC_lw32inc_p(ACC0,REG1,DEFAULT)
0xF70459CD,	//0x221a		VoC_movreg16(REG4,ACC0_LO,IN_PARALLEL)	|	VoC_lw32inc_p(ACC1,REG1,DEFAULT)
0xF74559D6,	//0x221c		VoC_movreg16(REG5,ACC1_LO,IN_PARALLEL)	|	VoC_lw32inc_p(RL6,REG2,DEFAULT)
0xF9C579C4,	//0x221e		VoC_shru16_ri(REG5,0xfffffff8,IN_PARALLEL)	|	VoC_shru16_ri(REG4,0xfffffff8,DEFAULT)
0xF6AA6088,	//0x2220		VoC_movreg16(ACC1_LO,REG5,IN_PARALLEL)	|	VoC_movreg16(ACC0_LO,REG4,DEFAULT)
0xFDC57C44,	//0x2222		VoC_shru32_ri(ACC1,0xfffffff8,IN_PARALLEL)	|	VoC_shru32_ri(ACC0,0x8,DEFAULT)
0xF784652C,	//0x2224		VoC_movreg16(REG4,RL6_LO,IN_PARALLEL)	|	VoC_or32_rr(ACC0,ACC1,DEFAULT)
0xE0057C46,	//0x2226		VoC_lw16i_short(REG5,0x0,IN_PARALLEL)	|	VoC_shru32_ri(RL6,0x8,DEFAULT)
0xDDDC7DC2,	//0x2228		VoC_sw32inc_p(ACC0,REG3,IN_PARALLEL)	|	VoC_shru32_ri(REG45,0xfffffff8,DEFAULT)
0x7F16F944,	//0x222a		VoC_movreg32(RL6,REG45,DEFAULT)	|	VoC_shru16_ri(REG4,0x8,DEFAULT)
0xF944FF32,	//0x222c		VoC_shru16_ri(REG4,0x8,DEFAULT)	|	VoC_movreg32(REG45,RL6,IN_PARALLEL)
0x5DC2DDC6,	//0x222e		VoC_sw32inc_p(REG45,REG0,DEFAULT)	|	VoC_sw32inc_p(RL6,REG0,DEFAULT)
		//0x222f		VoC_endloop0
0x4020FF3A,	//0x2230		VoC_add16_rr(REG0,REG0,REG4,DEFAULT)	|	VoC_movreg32(REG45,RL7,IN_PARALLEL)
0x40B2C061,	//0x2232		VoC_add16_rr(REG2,REG2,REG6,DEFAULT)	|	VoC_add16_rr(REG1,REG1,REG4,IN_PARALLEL)
		//0x2233		VoC_endloop1
0xDF87C0F3,	//0x2234		VoC_pop16(REG7,DEFAULT)	|	VoC_add16_rr(REG3,REG3,REG6,IN_PARALLEL)
0xF6E65F80,	//0x2236		VoC_movreg16(REG6,REG7,IN_PARALLEL)	|	VoC_pop16(REG0,DEFAULT)
0x2B80DF83,	//0x2238		VoC_jal(H264_mb_LeftPixel_update)(lo)	|	VoC_pop16(REG3,DEFAULT)
0xDFA921E6,	//0x223a		VoC_pop16(RA,DEFAULT)	|	VoC_jal(H264_mb_LeftPixel_update)(hi)
0xE580FFC0,	//0x223c		VoC_return	|	VoC_NOP
		//0x223e		CS_hl_decode_mb_internal
0x0A80DFE9,	//0x223e		VoC_lw16i(REG0,0xabc)(lo)	|	VoC_push16(RA,DEFAULT)
0x0A810ABC,	//0x2240		VoC_lw16i(REG1,0xbfc)(lo)	|	VoC_lw16i(REG0,0xabc)(hi)
0x0A820BFC,	//0x2242		VoC_lw16i(REG2,0xf26)(lo)	|	VoC_lw16i(REG1,0xbfc)(hi)
0xF2070F26,	//0x2244		VoC_lw16i_short(REG7,0x10,DEFAULT)	|	VoC_lw16i(REG2,0xf26)(hi)
0x21F02B80,	//0x2246		VoC_jal(H264_mb_TopAndLeftPixel_update)
0x0C4C0A80,	//0x2248		VoC_lw16i(REG0,0xc4c)
0x0CAC0A81,	//0x224a		VoC_lw16i(REG1,0xcac)
0x13160A82,	//0x224c		VoC_lw16i(REG2,0x1316)
0xFFC07107,	//0x224e		VoC_NAD(IN_PARALLEL)	|	VoC_lw16i_short(REG7,0x8,DEFAULT)
0x21F02B80,	//0x2250		VoC_jal(H264_mb_TopAndLeftPixel_update)
0x0CDC0A80,	//0x2252		VoC_lw16i(REG0,0xcdc)
0x0D3C0A81,	//0x2254		VoC_lw16i(REG1,0xd3c)
0x15160A82,	//0x2256		VoC_lw16i(REG2,0x1516)
0xFFC07107,	//0x2258		VoC_NAD(IN_PARALLEL)	|	VoC_lw16i_short(REG7,0x8,DEFAULT)
0x21F02B80,	//0x225a		VoC_jal(H264_mb_TopAndLeftPixel_update)
0xE0077202,	//0x225c		VoC_lw16i_short(REG7,0x0,IN_PARALLEL)	|	VoC_lw16i_short(REG2,0x10,DEFAULT)
0x02220812,	//0x225e		VoC_mult16_rd(REG2,REG2,0x222)
0x1C5A1804,	//0x2260		VoC_lw16i_set_inc(REG0,0x1c5a,0x1)
0x1809C010,	//0x2262		VoC_lw16i_set_inc(REG1,0x5730,0x2)(lo)	|	VoC_add16_rr(REG0,REG0,REG2,DEFAULT)
0x58845730,	//0x2264		VoC_lw16inc_p(REG4,REG0,DEFAULT)	|	VoC_lw16i_set_inc(REG1,0x5730,0x2)(hi)
0xFFC0E005,	//0x2266		VoC_NAD	|	VoC_lw16i_short(REG5,0x0,IN_PARALLEL)
0xD886692A,	//0x2268		VoC_lw16inc_p(REG6,REG0,IN_PARALLEL)	|	VoC_loop_i_short(0x9,DEFAULT)
0xFDC37DC2,	//0x226a		VoC_shru32_ri(REG67,0xfffffff8,IN_PARALLEL)	|	VoC_shru32_ri(REG45,0xfffffff8,DEFAULT)
0xF9467944,	//0x226c		VoC_shru16_ri(REG6,0x8,IN_PARALLEL)	|	VoC_shru16_ri(REG4,0x8,DEFAULT)
0xE0055884,	//0x226e		VoC_lw16i_short(REG5,0x0,IN_PARALLEL)	|	VoC_lw16inc_p(REG4,REG0,DEFAULT)
0xD8865DCA,	//0x2270		VoC_lw16inc_p(REG6,REG0,IN_PARALLEL)	|	VoC_sw32inc_p(REG45,REG1,DEFAULT)
		//0x2272		VoC_endloop0
0xE0075DCB,	//0x2272		VoC_lw16i_short(REG7,0x0,IN_PARALLEL)	|	VoC_sw32inc_p(REG67,REG1,DEFAULT)
0x2804F0E4,	//0x2274		VoC_and16_rd(REG4,0x239)(lo)	|	VoC_lw16i_short(REG4,0x7,DEFAULT)
0x31840239,	//0x2276		VoC_bez16_r(INTERNAL120,REG4)(lo)	|	VoC_and16_rd(REG4,0x239)(hi)
0x6C052436,	//0x2278		VoC_bez16_d(DMA_Output_Rec_Y_End,0x5fa5)(lo)	|	VoC_bez16_r(INTERNAL120,REG4)(hi)
0xFFC05FA5,	//0x227a		VoC_NAD	|	VoC_bez16_d(DMA_Output_Rec_Y_End,0x5fa5)(hi)
0x02472B80,	//0x227c		VoC_jal(DMA_Out_Recon_Y)
		//0x227e		DMA_Output_Rec_Y_End
0x02116C06,	//0x227e		VoC_bez16_d(INTERNAL101,0x211)
0xFFC07025,	//0x2280		VoC_NAD(IN_PARALLEL)	|	VoC_lw16i_short(REG5,0x1,DEFAULT)
0x14CF2B80,	//0x2282		VoC_jal(CS_xchg_mb_border)
		//0x2284		INTERNAL101
0x00001804,	//0x2284		VoC_lw16i_set_inc(REG0,0x0,0x1)
0x02441401,	//0x2286		VoC_lw16_d(REG1,0x244)
0x22943581,	//0x2288		VoC_bne16_rr(INTERNAL102,REG0,REG1)
0x0C801808,	//0x228a		VoC_lw16i_set_inc(REG0,0xc80,0x2)
0x15F62B80,	//0x228c		VoC_jal(CS_pred8x8_dc_c)
0x0D101808,	//0x228e		VoC_lw16i_set_inc(REG0,0xd10,0x2)
0x15F62B80,	//0x2290		VoC_jal(CS_pred8x8_dc_c)
0x22E22B00,	//0x2292		VoC_jump_lg(INTERNAL108)
		//0x2294		INTERNAL102
0x3581DE00,	//0x2294		VoC_bne16_rr(INTERNAL103,REG0,REG1)(lo)	|	VoC_inc_p(REG0,DEFAULT)
0x180822A2,	//0x2296		VoC_lw16i_set_inc(REG0,0xc80,0x2)(lo)	|	VoC_bne16_rr(INTERNAL103,REG0,REG1)(hi)
0xFFC00C80,	//0x2298		VoC_NAD	|	VoC_lw16i_set_inc(REG0,0xc80,0x2)(hi)
0x162D2B80,	//0x229a		VoC_jal(CS_pred8x8_horizontal_c)
0x0D101808,	//0x229c		VoC_lw16i_set_inc(REG0,0xd10,0x2)
0x162D2B80,	//0x229e		VoC_jal(CS_pred8x8_horizontal_c)
0x22E22B00,	//0x22a0		VoC_jump_lg(INTERNAL108)
		//0x22a2		INTERNAL103
0x3581DE00,	//0x22a2		VoC_bne16_rr(INTERNAL104,REG0,REG1)(lo)	|	VoC_inc_p(REG0,DEFAULT)
0x180822B0,	//0x22a4		VoC_lw16i_set_inc(REG0,0xc80,0x2)(lo)	|	VoC_bne16_rr(INTERNAL104,REG0,REG1)(hi)
0xFFC00C80,	//0x22a6		VoC_NAD	|	VoC_lw16i_set_inc(REG0,0xc80,0x2)(hi)
0x16B82B80,	//0x22a8		VoC_jal(CS_pred8x8_vertical_c)
0x0D101808,	//0x22aa		VoC_lw16i_set_inc(REG0,0xd10,0x2)
0x16B82B80,	//0x22ac		VoC_jal(CS_pred8x8_vertical_c)
0x22E22B00,	//0x22ae		VoC_jump_lg(INTERNAL108)
		//0x22b0		INTERNAL104
0x3581DE00,	//0x22b0		VoC_bne16_rr(INTERNAL105,REG0,REG1)(lo)	|	VoC_inc_p(REG0,DEFAULT)
0x180822BE,	//0x22b2		VoC_lw16i_set_inc(REG0,0xc80,0x2)(lo)	|	VoC_bne16_rr(INTERNAL105,REG0,REG1)(hi)
0xFFC00C80,	//0x22b4		VoC_NAD	|	VoC_lw16i_set_inc(REG0,0xc80,0x2)(hi)
0x163C2B80,	//0x22b6		VoC_jal(CS_pred8x8_plane_c)
0x0D101808,	//0x22b8		VoC_lw16i_set_inc(REG0,0xd10,0x2)
0x163C2B80,	//0x22ba		VoC_jal(CS_pred8x8_plane_c)
0x22E22B00,	//0x22bc		VoC_jump_lg(INTERNAL108)
		//0x22be		INTERNAL105
0x3581DE00,	//0x22be		VoC_bne16_rr(INTERNAL106,REG0,REG1)(lo)	|	VoC_inc_p(REG0,DEFAULT)
0x180822CB,	//0x22c0		VoC_lw16i_set_inc(REG0,0xc80,0x2)(lo)	|	VoC_bne16_rr(INTERNAL106,REG0,REG1)(hi)
0xFFC00C80,	//0x22c2		VoC_NAD	|	VoC_lw16i_set_inc(REG0,0xc80,0x2)(hi)
0x15992B80,	//0x22c4		VoC_jal(CS_pred8x8_left_dc_c)
0x0D101808,	//0x22c6		VoC_lw16i_set_inc(REG0,0xd10,0x2)
0x15992B80,	//0x22c8		VoC_jal(CS_pred8x8_left_dc_c)
0xDE00E5D8,	//0x22ca		VoC_inc_p(REG0,DEFAULT)	|	VoC_jump(INTERNAL108)
		//0x22cb		INTERNAL106
0x22D83581,	//0x22cc		VoC_bne16_rr(INTERNAL107,REG0,REG1)
0x0C801808,	//0x22ce		VoC_lw16i_set_inc(REG0,0xc80,0x2)
0x15D82B80,	//0x22d0		VoC_jal(CS_pred8x8_top_dc_c)
0x0D101808,	//0x22d2		VoC_lw16i_set_inc(REG0,0xd10,0x2)
0x15D82B80,	//0x22d4		VoC_jal(CS_pred8x8_top_dc_c)
0xFFC065CC,	//0x22d6		VoC_NAD(IN_PARALLEL)	|	VoC_jump(INTERNAL108)
		//0x22d8		INTERNAL107
0x0C801809,	//0x22d8		VoC_lw16i_set_inc(REG1,0xc80,0x2)
0x155A2B80,	//0x22da		VoC_jal(CS_pred8x8_128_dc_c)
0x0D101809,	//0x22dc		VoC_lw16i_set_inc(REG1,0xd10,0x2)
0x155A2B80,	//0x22de		VoC_jal(CS_pred8x8_128_dc_c)
0xFFC065C2,	//0x22e0		VoC_NAD(IN_PARALLEL)	|	VoC_jump(INTERNAL108)
		//0x22e2		INTERNAL108
0x02391404,	//0x22e2		VoC_lw16_d(REG4,0x239)
0x4028F020,	//0x22e4		VoC_be16_rd(NOT_INTERNAL109,REG0,0x239)(lo)	|	VoC_lw16i_short(REG0,0x1,DEFAULT)
0x2B000239,	//0x22e6		VoC_jump_lg(INTERNAL109)(lo)	|	VoC_be16_rd(NOT_INTERNAL109,REG0,0x239)(hi)
0xFFC02390,	//0x22e8		VoC_NAD	|	VoC_jump_lg(INTERNAL109)(hi)
		//0x22ea		NOT_INTERNAL109
0x03FE1804,	//0x22ea		VoC_lw16i_set_inc(REG0,0x3fe,0x1)
0x00001805,	//0x22ec		VoC_lw16i_set_inc(REG1,0x0,0x1)
0x024E0A86,	//0x22ee		VoC_lw16i(REG6,0x24e)
0x47401806,	//0x22f0		VoC_lw16i_set_inc(REG2,0x4740,0x1)
0x4758180B,	//0x22f2		VoC_lw16i_set_inc(REG3,0x4758,0x2)
0x17161500,	//0x22f4		VoC_sw16_d(REG0,0x1716)
0x022F1404,	//0x22f6		VoC_lw16_d(REG4,0x22f)
0x1506F005,	//0x22f8		VoC_sw16_d(REG6,0x17a2)(lo)	|	VoC_lw16i_short(REG5,0x0,DEFAULT)
0x158217A2,	//0x22fa		VoC_sw32_d(REG45,0x177a)(lo)	|	VoC_sw16_d(REG6,0x17a2)(hi)
0xF200177A,	//0x22fc		VoC_lw16i_short(REG0,0x10,DEFAULT)	|	VoC_sw32_d(REG45,0x177a)(hi)
		//0x22fe		INTERNAL111
0x24283508,	//0x22fe		VoC_be16_rr(INTERNAL119,REG1,REG0)
0xF00B5F40,	//0x2300		VoC_lw16i_short(INC3,0x2,IN_PARALLEL)	|	VoC_push32(REG01,DEFAULT)
0x072ED8A5,	//0x2302		VoC_add16_rd(REG6,REG5,0x1716)(lo)	|	VoC_lw16inc_p(REG5,REG2,DEFAULT)
0xD8B41716,	//0x2304		VoC_lw16inc_p(REG4,REG3,DEFAULT)	|	VoC_add16_rd(REG6,REG5,0x1716)(hi)
0xDF41DFC5,	//0x2306		VoC_push32(REG23,DEFAULT)	|	VoC_push16(REG5,DEFAULT)
0x0B100A82,	//0x2308		VoC_lw16i(REG2,0xb10)
0xD864C0A2,	//0x230a		VoC_lw16_p(REG4,REG6,DEFAULT)	|	VoC_add16_rr(REG2,REG2,REG4,DEFAULT)
0x1804DFC2,	//0x230c		VoC_lw16i_set_inc(REG0,0x0,0x1)(lo)	|	VoC_push16(REG2,DEFAULT)
0x35840000,	//0x230e		VoC_bne16_rr(PRED44_01,REG0,REG4)(lo)	|	VoC_lw16i_set_inc(REG0,0x0,0x1)(hi)
0xFFC02316,	//0x2310		VoC_NAD	|	VoC_bne16_rr(PRED44_01,REG0,REG4)(hi)
0x18AC2B80,	//0x2312		VoC_jal(CS_pred4x4_vertical_c)
0x23642B00,	//0x2314		VoC_jump_lg(PRED44_END)
		//0x2316		PRED44_01
0x3584DE00,	//0x2316		VoC_bne16_rr(PRED44_02,REG0,REG4)(lo)	|	VoC_inc_p(REG0,DEFAULT)
0xFFC0231E,	//0x2318		VoC_NAD	|	VoC_bne16_rr(PRED44_02,REG0,REG4)(hi)
0x19182B80,	//0x231a		VoC_jal(CS_pred4x4_horizontal_c)
0x23642B00,	//0x231c		VoC_jump_lg(PRED44_END)
		//0x231e		PRED44_02
0x3584DE00,	//0x231e		VoC_bne16_rr(PRED44_03,REG0,REG4)(lo)	|	VoC_inc_p(REG0,DEFAULT)
0xFFC02326,	//0x2320		VoC_NAD	|	VoC_bne16_rr(PRED44_03,REG0,REG4)(hi)
0x18202B80,	//0x2322		VoC_jal(CS_pred4x4_dc_c)
0x23642B00,	//0x2324		VoC_jump_lg(PRED44_END)
		//0x2326		PRED44_03
0x3584DE00,	//0x2326		VoC_bne16_rr(PRED44_04,REG0,REG4)(lo)	|	VoC_inc_p(REG0,DEFAULT)
0xFFC02330,	//0x2328		VoC_NAD	|	VoC_bne16_rr(PRED44_04,REG0,REG4)(hi)
0x1A2C2B80,	//0x232a		VoC_jal(CS_PRED44_37)
0x19272B80,	//0x232c		VoC_jal(CS_pred4x4_down_left_c)
0x23642B00,	//0x232e		VoC_jump_lg(PRED44_END)
		//0x2330		PRED44_04
0x3584DE00,	//0x2330		VoC_bne16_rr(PRED44_05,REG0,REG4)(lo)	|	VoC_inc_p(REG0,DEFAULT)
0xFFC02338,	//0x2332		VoC_NAD	|	VoC_bne16_rr(PRED44_05,REG0,REG4)(hi)
0x17B22B80,	//0x2334		VoC_jal(CS_pred4x4_down_right_c)
0x23642B00,	//0x2336		VoC_jump_lg(PRED44_END)
		//0x2338		PRED44_05
0x3584DE00,	//0x2338		VoC_bne16_rr(PRED44_06,REG0,REG4)(lo)	|	VoC_inc_p(REG0,DEFAULT)
0xFFC02340,	//0x233a		VoC_NAD	|	VoC_bne16_rr(PRED44_06,REG0,REG4)(hi)
0x19882B80,	//0x233c		VoC_jal(CS_pred4x4_vertical_right_c)
0x23642B00,	//0x233e		VoC_jump_lg(PRED44_END)
		//0x2340		PRED44_06
0x3584DE00,	//0x2340		VoC_bne16_rr(PRED44_07,REG0,REG4)(lo)	|	VoC_inc_p(REG0,DEFAULT)
0x2B802346,	//0x2342		VoC_jal(CS_pred4x4_horizontal_down_c)(lo)	|	VoC_bne16_rr(PRED44_07,REG0,REG4)(hi)
0xE5DF1834,	//0x2344		VoC_jump(PRED44_END)	|	VoC_jal(CS_pred4x4_horizontal_down_c)(hi)
		//0x2346		PRED44_07
0x3584DE00,	//0x2346		VoC_bne16_rr(PRED44_08,REG0,REG4)(lo)	|	VoC_inc_p(REG0,DEFAULT)
0xFFC0234F,	//0x2348		VoC_NAD	|	VoC_bne16_rr(PRED44_08,REG0,REG4)(hi)
0x1A2C2B80,	//0x234a		VoC_jal(CS_PRED44_37)
0x18B82B80,	//0x234c		VoC_jal(CS_pred4x4_vertical_left_c)
0xDE00E5D6,	//0x234e		VoC_inc_p(REG0,DEFAULT)	|	VoC_jump(PRED44_END)
		//0x234f		PRED44_08
0x23553584,	//0x2350		VoC_bne16_rr(PRED44_09,REG0,REG4)
0x19ED2B80,	//0x2352		VoC_jal(CS_pred4x4_horizontal_up_c)
0xDE00E5D0,	//0x2354		VoC_inc_p(REG0,DEFAULT)	|	VoC_jump(PRED44_END)
		//0x2355		PRED44_09
0x235B3584,	//0x2356		VoC_bne16_rr(PRED44_0a,REG0,REG4)
0x17942B80,	//0x2358		VoC_jal(CS_pred4x4_left_dc_c)
0xDE00E5CA,	//0x235a		VoC_inc_p(REG0,DEFAULT)	|	VoC_jump(PRED44_END)
		//0x235b		PRED44_0a
0x23623584,	//0x235c		VoC_bne16_rr(PRED44_0b,REG0,REG4)
0x17A32B80,	//0x235e		VoC_jal(CS_pred4x4_top_dc_c)
0xFFC065C4,	//0x2360		VoC_NAD(IN_PARALLEL)	|	VoC_jump(PRED44_END)
		//0x2362		PRED44_0b
0x178A2B80,	//0x2362		VoC_jal(CS_pred4x4_128_dc_c)
		//0x2364		PRED44_END
0x03CE0A80,	//0x2364		VoC_lw16i(REG0,0x3ce)
0xDF85DF82,	//0x2366		VoC_pop16(REG5,DEFAULT)	|	VoC_pop16(REG2,DEFAULT)
0x1403C145,	//0x2368		VoC_lw16_d(REG3,0x17a2)(lo)	|	VoC_add16_rr(REG5,REG5,REG0,DEFAULT)
0x585517A2,	//0x236a		VoC_lw16_p(REG5,REG5,DEFAULT)	|	VoC_lw16_d(REG3,0x17a2)(hi)
0xF204E016,	//0x236c		VoC_lw16i_short(REG4,0x10,DEFAULT)	|	VoC_lw16i_short(REG6,0x1,IN_PARALLEL)
0x5837C11C,	//0x236e		VoC_lw16_p(REG7,REG3,DEFAULT)	|	VoC_add16_rr(REG4,REG4,REG3,DEFAULT)
0x1504F043,	//0x2370		VoC_sw16_d(REG4,0x17a2)(lo)	|	VoC_lw16i_short(INC3,0x10,IN_PARALLEL)
0x318517A2,	//0x2372		VoC_bez16_r(INTERNAL110,REG5)(lo)	|	VoC_sw16_d(REG4,0x17a2)(hi)
0x35AE2384,	//0x2374		VoC_bne16_rr(INTERNAL1101,REG5,REG6)(lo)	|	VoC_bez16_r(INTERNAL110,REG5)(hi)
0x31872380,	//0x2376		VoC_bez16_r(INTERNAL1101,REG7)(lo)	|	VoC_bne16_rr(INTERNAL1101,REG5,REG6)(hi)
0x0A862380,	//0x2378		VoC_lw16i(REG6,0xff)(lo)	|	VoC_bez16_r(INTERNAL1101,REG7)(hi)
0x58B500FF,	//0x237a		VoC_lw16inc_p(REG5,REG3,DEFAULT)	|	VoC_lw16i(REG6,0xff)(hi)
0x2B80E14C,	//0x237c		VoC_jal(CS_ff_h264_idct_dc_add_c)(lo)	|	VoC_lw16i_short(RL6_LO,0x14,IN_PARALLEL)
0xE5C51566,	//0x237e		VoC_jump(INTERNAL110)	|	VoC_jal(CS_ff_h264_idct_dc_add_c)(hi)
		//0x2380		INTERNAL1101
0xFFC0728C,	//0x2380		VoC_NAD(IN_PARALLEL)	|	VoC_lw16i_short(RL6_LO,0x14,DEFAULT)
0x1A4E2B80,	//0x2382		VoC_jal(CS_idct_internal)
		//0x2384		INTERNAL110
0xE0175F01,	//0x2384		VoC_lw16i_short(REG7,0x1,IN_PARALLEL)	|	VoC_pop32(REG23,DEFAULT)
0x177A1482,	//0x2386		VoC_lw32_d(REG45,0x177a)
0xFBFA5F00,	//0x2388		VoC_shr32_ri(REG45,0xffffffff,IN_PARALLEL)	|	VoC_pop32(REG01,DEFAULT)
0xF0064079,	//0x238a		VoC_lw16i_short(INC2,0x1,IN_PARALLEL)	|	VoC_add16_rr(REG1,REG1,REG7,DEFAULT)
0x177A1582,	//0x238c		VoC_sw32_d(REG45,0x177a)
0x22FE2B00,	//0x238e		VoC_jump_lg(INTERNAL111)
		//0x2390		INTERNAL109
0x00001804,	//0x2390		VoC_lw16i_set_inc(REG0,0x0,0x1)
0x02451401,	//0x2392		VoC_lw16_d(REG1,0x245)
0x239A3581,	//0x2394		VoC_bne16_rr(INTERNAL112,REG0,REG1)
0x16DE2B80,	//0x2396		VoC_jal(CS_pred16x16_dc_c)
0x23BC2B00,	//0x2398		VoC_jump_lg(INTERNAL118)
		//0x239a		INTERNAL112
0x3581DE00,	//0x239a		VoC_bne16_rr(INTERNAL113,REG0,REG1)(lo)	|	VoC_inc_p(REG0,DEFAULT)
0x2B8023A0,	//0x239c		VoC_jal(CS_pred16x16_horizontal_c)(lo)	|	VoC_bne16_rr(INTERNAL113,REG0,REG1)(hi)
0xE5DD16F8,	//0x239e		VoC_jump(INTERNAL118)	|	VoC_jal(CS_pred16x16_horizontal_c)(hi)
		//0x23a0		INTERNAL113
0x3581DE00,	//0x23a0		VoC_bne16_rr(INTERNAL114,REG0,REG1)(lo)	|	VoC_inc_p(REG0,DEFAULT)
0x2B8023A6,	//0x23a2		VoC_jal(CS_pred16x16_vertical_c)(lo)	|	VoC_bne16_rr(INTERNAL114,REG0,REG1)(hi)
0xE5D716C8,	//0x23a4		VoC_jump(INTERNAL118)	|	VoC_jal(CS_pred16x16_vertical_c)(hi)
		//0x23a6		INTERNAL114
0x3581DE00,	//0x23a6		VoC_bne16_rr(INTERNAL115,REG0,REG1)(lo)	|	VoC_inc_p(REG0,DEFAULT)
0x2B8023AC,	//0x23a8		VoC_jal(CS_pred16x16_plane_compat_c)(lo)	|	VoC_bne16_rr(INTERNAL115,REG0,REG1)(hi)
0xE5D1171A,	//0x23aa		VoC_jump(INTERNAL118)	|	VoC_jal(CS_pred16x16_plane_compat_c)(hi)
		//0x23ac		INTERNAL115
0x3581DE00,	//0x23ac		VoC_bne16_rr(INTERNAL116,REG0,REG1)(lo)	|	VoC_inc_p(REG0,DEFAULT)
0x2B8023B2,	//0x23ae		VoC_jal(CS_pred16x16_left_dc_c)(lo)	|	VoC_bne16_rr(INTERNAL116,REG0,REG1)(hi)
0xE5CB15B2,	//0x23b0		VoC_jump(INTERNAL118)	|	VoC_jal(CS_pred16x16_left_dc_c)(hi)
		//0x23b2		INTERNAL116
0x3581DE00,	//0x23b2		VoC_bne16_rr(INTERNAL117,REG0,REG1)(lo)	|	VoC_inc_p(REG0,DEFAULT)
0x2B8023B8,	//0x23b4		VoC_jal(CS_pred16x16_top_dc_c)(lo)	|	VoC_bne16_rr(INTERNAL117,REG0,REG1)(hi)
0xE5C51704,	//0x23b6		VoC_jump(INTERNAL118)	|	VoC_jal(CS_pred16x16_top_dc_c)(hi)
		//0x23b8		INTERNAL117
0x0B101808,	//0x23b8		VoC_lw16i_set_inc(REG0,0xb10,0x2)
0x15C82B80,	//0x23ba		VoC_jal(CS_pred16x16_128_dc_c)
		//0x23bc		INTERNAL118
0x00100A86,	//0x23bc		VoC_lw16i(REG6,0x10)
0x02180836,	//0x23be		VoC_mult16_rd(REG6,REG6,0x218)
0x49E20A87,	//0x23c0		VoC_lw16i(REG7,0x49e2)
0x0A90C1BE,	//0x23c2		VoC_lw16i(INC0,0x10)(lo)	|	VoC_add16_rr(REG6,REG6,REG7,DEFAULT)
0x0A850010,	//0x23c4		VoC_lw16i(REG5,0x24e)(lo)	|	VoC_lw16i(INC0,0x10)(hi)
0xF213024E,	//0x23c6		VoC_lw16i_short(INC3,0x10,DEFAULT)	|	VoC_lw16i(REG5,0x24e)(hi)
0x1806D86C,	//0x23c8		VoC_lw16i_set_inc(REG2,0x473c,0x1)(lo)	|	VoC_lw16_p(RL6_LO,REG6,DEFAULT)
0x1809473C,	//0x23ca		VoC_lw16i_set_inc(REG1,0x1782,0x2)(lo)	|	VoC_lw16i_set_inc(REG2,0x473c,0x1)(hi)
0xFFC01782,	//0x23cc		VoC_NAD	|	VoC_lw16i_set_inc(REG1,0x1782,0x2)(hi)
0x23E82C08,	//0x23ce		VoC_loop_i(0x0,0x4)
0xDFC558A4,	//0x23d0		VoC_push16(REG5,IN_PARALLEL)	|	VoC_lw16inc_p(REG4,REG2,DEFAULT)
0xC160F8FC,	//0x23d2		VoC_add16_rr(REG0,REG5,REG4,DEFAULT)	|	VoC_shr16_ri(REG4,0xffffffff,DEFAULT)
0x473E0703,	//0x23d4		VoC_add16_rd(REG3,REG0,0x473e)
0x815CD885,	//0x23d6		VoC_add16_rp(REG4,REG5,REG3,DEFAULT)	|	VoC_lw16inc_p(REG5,REG0,DEFAULT)
0xD887875D,	//0x23d8		VoC_lw16inc_p(REG7,REG0,DEFAULT)	|	VoC_sub16inc_rp(REG5,REG5,REG3,DEFAULT)
0x158285DE,	//0x23da		VoC_sw32_d(REG45,0x1780)(lo)	|	VoC_sub16_rp(REG6,REG7,REG3,DEFAULT)
0x83DF1780,	//0x23dc		VoC_add16inc_rp(REG7,REG7,REG3,DEFAULT)	|	VoC_sw32_d(REG45,0x1780)(hi)
0x1780073C,	//0x23de		VoC_add16_rd(REG4,REG7,0x1780)
0x17810735,	//0x23e0		VoC_add16_rd(REG5,REG6,0x1781)
0x17810B34,	//0x23e2		VoC_sub16_dr(REG4,0x1781,REG6)
0x0B3DDDCA,	//0x23e4		VoC_sub16_dr(REG5,0x1780,REG7)(lo)	|	VoC_sw32inc_p(REG45,REG1,DEFAULT)
0xDF851780,	//0x23e6		VoC_pop16(REG5,DEFAULT)	|	VoC_sub16_dr(REG5,0x1780,REG7)(hi)
		//0x23e8		VoC_endloop0
0xFF47DDCA,	//0x23e8		VoC_lw32z(RL7,DEFAULT)	|	VoC_sw32inc_p(REG45,REG1,DEFAULT)
0x00000ACE,	//0x23ea		VoC_lw16i(RL7_LO,0x8000)
0xF5A16181,	//0x23ec		VoC_lw16i_short(FORMAT32,0xfffffff4,IN_PARALLEL)	|	VoC_movreg16(REG1,RL6_LO,DEFAULT)
0x17821812,	//0x23ee		VoC_lw16i_set_inc(REG2,0x1782,0x4)
0x178A1813,	//0x23f0		VoC_lw16i_set_inc(REG3,0x178a,0x4)
0x17921804,	//0x23f2		VoC_lw16i_set_inc(REG0,0x1792,0x1)
0x24102C08,	//0x23f4		VoC_loop_i(0x0,0x4)
0xD8A45F41,	//0x23f6		VoC_lw16inc_p(REG4,REG2,IN_PARALLEL)	|	VoC_push32(REG23,DEFAULT)
0x871F011E,	//0x23f8		VoC_sub16inc_rp(REG7,REG4,REG3,IN_PARALLEL)	|	VoC_add16_rp(REG6,REG4,REG3,DEFAULT)
0x051DD8A4,	//0x23fa		VoC_sub16_rp(REG5,REG4,REG3,DEFAULT)	|	VoC_lw16inc_p(REG4,REG2,DEFAULT)
0x41A4811C,	//0x23fc		VoC_add16_rr(REG4,REG6,REG4,DEFAULT)	|	VoC_add16_rp(REG4,REG4,REG3,IN_PARALLEL)
0x4E21C3A6,	//0x23fe		VoC_mac32_rr(REG4,REG1,DEFAULT)	|	VoC_sub16_rr(REG6,REG6,REG4,IN_PARALLEL)
0x41EDFF3C,	//0x2400		VoC_add16_rr(REG5,REG7,REG5,DEFAULT)	|	VoC_movreg32(ACC0,RL7,IN_PARALLEL)
0x4E29C3EF,	//0x2402		VoC_mac32_rr(REG5,REG1,DEFAULT)	|	VoC_sub16_rr(REG7,REG7,REG5,IN_PARALLEL)
0x5C89FF3C,	//0x2404		VoC_sw16inc_p(ACC0_HI,REG0,DEFAULT)	|	VoC_movreg32(ACC0,RL7,IN_PARALLEL)
0x7F3DE014,	//0x2406		VoC_movreg32(ACC1,RL7,DEFAULT)	|	VoC_lw16i_short(REG4,0x1,IN_PARALLEL)
0x4E31CE39,	//0x2408		VoC_mac32_rr(REG6,REG1,DEFAULT)	|	VoC_mac32_rr(REG7,REG1,IN_PARALLEL)
0x5C89FF3C,	//0x240a		VoC_sw16inc_p(ACC0_HI,REG0,DEFAULT)	|	VoC_movreg32(ACC0,RL7,IN_PARALLEL)
0xDC8BDF01,	//0x240c		VoC_sw16inc_p(ACC1_HI,REG0,DEFAULT)	|	VoC_pop32(REG23,IN_PARALLEL)
0xC0E340A2,	//0x240e		VoC_add16_rr(REG3,REG3,REG4,IN_PARALLEL)	|	VoC_add16_rr(REG2,REG2,REG4,DEFAULT)
		//0x2410		VoC_endloop0
0xF019DC89,	//0x2410		VoC_lw16i_short(FORMAT32,0x0,DEFAULT)	|	VoC_sw16inc_p(ACC0_HI,REG0,DEFAULT)
0x17921804,	//0x2412		VoC_lw16i_set_inc(REG0,0x1792,0x1)
0x024E0A83,	//0x2414		VoC_lw16i(REG3,0x24e)
0x473C1805,	//0x2416		VoC_lw16i_set_inc(REG1,0x473c,0x1)
0x473C1806,	//0x2418		VoC_lw16i_set_inc(REG2,0x473c,0x1)
0x24262C09,	//0x241a		VoC_loop_i(0x1,0x4)
0xD8A5D894,	//0x241c		VoC_lw16inc_p(REG5,REG2,DEFAULT)	|	VoC_lw16inc_p(REG4,REG1,DEFAULT)
0x24252C08,	//0x241e		VoC_loop_i(0x0,0x4)
0xC11E78FD,	//0x2420		VoC_add16_rr(REG6,REG4,REG3,IN_PARALLEL)	|	VoC_shr16_ri(REG5,0xffffffff,DEFAULT)
0xD88641AD,	//0x2422		VoC_lw16inc_p(REG6,REG0,IN_PARALLEL)	|	VoC_add16_rr(REG5,REG6,REG5,DEFAULT)
0xDC56D8A5,	//0x2424		VoC_sw16_p(REG6,REG5,DEFAULT)	|	VoC_lw16inc_p(REG5,REG2,DEFAULT)
		//0x2425		VoC_endloop0
		//0x2426		VoC_endloop1
0x473C1806,	//0x2426		VoC_lw16i_set_inc(REG2,0x473c,0x1)
		//0x2428		INTERNAL119
0x5FA06C04,	//0x2428		VoC_bez16_d(DMA_Output_Rec_Y_Wait_End,0x5fa0)
0x02402B80,	//0x242a		VoC_jal(Dma_Last_Cmd_Wait)
		//0x242c		DMA_Output_Rec_Y_Wait_End
0x5FA56C04,	//0x242c		VoC_bez16_d(DMA_Intra_Output_Rec_End,0x5fa5)
0x025D2B80,	//0x242e		VoC_jal(DMA_Out_Recon_UV)
		//0x2430		DMA_Intra_Output_Rec_End
0x02116C08,	//0x2430		VoC_bez16_d(INTERNAL121,0x211)
0x2B80F005,	//0x2432		VoC_jal(CS_xchg_mb_border)(lo)	|	VoC_lw16i_short(REG5,0x0,DEFAULT)
0xE5C314CF,	//0x2434		VoC_jump(INTERNAL121)	|	VoC_jal(CS_xchg_mb_border)(hi)
		//0x2436		INTERNAL120
0x20CA2B80,	//0x2436		VoC_jal(CS_h264_mc)
		//0x2438		INTERNAL121
0x02391404,	//0x2438		VoC_lw16_d(REG4,0x239)
0x00011604,	//0x243a		VoC_and16_ri(REG4,0x1)
0x249E31C4,	//0x243c		VoC_bnez16_r(INTERNAL122,REG4)
0x47401804,	//0x243e		VoC_lw16i_set_inc(REG0,0x4740,0x1)
0x024E1883,	//0x2440		VoC_lw16i_set_inc(REG3,0x24e,0x10)
0x47581809,	//0x2442		VoC_lw16i_set_inc(REG1,0x4758,0x2)
0x00FF0A86,	//0x2444		VoC_lw16i(REG6,0xff)
0xE1057004,	//0x2446		VoC_lw16i_short(REG5,0x10,IN_PARALLEL)	|	VoC_lw16i_short(REG4,0x0,DEFAULT)
0x02391402,	//0x2448		VoC_lw16_d(REG2,0x239)
0x00021602,	//0x244a		VoC_and16_ri(REG2,0x2)
0x24743182,	//0x244c		VoC_bez16_r(INTERNAL1125,REG2)
		//0x244e		INTERNAL1124
0x249F3525,	//0x244e		VoC_be16_rr(INTERNAL125,REG4,REG5)
0x180ADF42,	//0x2450		VoC_lw16i_set_inc(REG2,0xb10,0x2)(lo)	|	VoC_push32(REG45,DEFAULT)
0x0A870B10,	//0x2452		VoC_lw16i(REG7,0x3ce)(lo)	|	VoC_lw16i_set_inc(REG2,0xb10,0x2)(hi)
0xD88503CE,	//0x2454		VoC_lw16inc_p(REG5,REG0,DEFAULT)	|	VoC_lw16i(REG7,0x3ce)(hi)
0xD894C17D,	//0x2456		VoC_lw16inc_p(REG4,REG1,DEFAULT)	|	VoC_add16_rr(REG5,REG5,REG7,DEFAULT)
0x5F40D855,	//0x2458		VoC_push32(REG01,DEFAULT)	|	VoC_lw16_p(REG5,REG5,DEFAULT)
0x3185C0A2,	//0x245a		VoC_bez16_r(INTERNAL123,REG5)(lo)	|	VoC_add16_rr(REG2,REG2,REG4,IN_PARALLEL)
0x5FC32466,	//0x245c		VoC_push16(REG3,DEFAULT)	|	VoC_bez16_r(INTERNAL123,REG5)(hi)
0x2B80E14C,	//0x245e		VoC_jal(CS_idct_internal)(lo)	|	VoC_lw16i_short(RL6_LO,0x14,IN_PARALLEL)
0xDF831A4E,	//0x2460		VoC_pop16(REG3,DEFAULT)	|	VoC_jal(CS_idct_internal)(hi)
0xF0097030,	//0x2462		VoC_lw16i_short(INC1,0x2,IN_PARALLEL)	|	VoC_lw16i_short(INC0,0x1,DEFAULT)
0xE5C7DE18,	//0x2464		VoC_jump(INTERNAL124)	|	VoC_inc_p(REG3,DEFAULT)
		//0x2466		INTERNAL123
0x3185D8B5,	//0x2466		VoC_bez16_r(INTERNAL124,REG5)(lo)	|	VoC_lw16inc_p(REG5,REG3,DEFAULT)
0xF28C246C,	//0x2468		VoC_lw16i_short(RL6_LO,0x14,DEFAULT)	|	VoC_bez16_r(INTERNAL124,REG5)(hi)
0x15662B80,	//0x246a		VoC_jal(CS_ff_h264_idct_dc_add_c)
		//0x246c		INTERNAL124
0xDFC65F00,	//0x246c		VoC_push16(REG6,IN_PARALLEL)	|	VoC_pop32(REG01,DEFAULT)
0xE0165F02,	//0x246e		VoC_lw16i_short(REG6,0x1,IN_PARALLEL)	|	VoC_pop32(REG45,DEFAULT)
0xDF864134,	//0x2470		VoC_pop16(REG6,IN_PARALLEL)	|	VoC_add16_rr(REG4,REG4,REG6,DEFAULT)
0x244E2B00,	//0x2472		VoC_jump_lg(INTERNAL1124)
		//0x2474		INTERNAL1125
0x249F3525,	//0x2474		VoC_be16_rr(INTERNAL125,REG4,REG5)
0x180ADF42,	//0x2476		VoC_lw16i_set_inc(REG2,0xb10,0x2)(lo)	|	VoC_push32(REG45,DEFAULT)
0x0A870B10,	//0x2478		VoC_lw16i(REG7,0x3ce)(lo)	|	VoC_lw16i_set_inc(REG2,0xb10,0x2)(hi)
0xD88503CE,	//0x247a		VoC_lw16inc_p(REG5,REG0,DEFAULT)	|	VoC_lw16i(REG7,0x3ce)(hi)
0xD894C17D,	//0x247c		VoC_lw16inc_p(REG4,REG1,DEFAULT)	|	VoC_add16_rr(REG5,REG5,REG7,DEFAULT)
0x5F40D855,	//0x247e		VoC_push32(REG01,DEFAULT)	|	VoC_lw16_p(REG5,REG5,DEFAULT)
0x3185C0A2,	//0x2480		VoC_bez16_r(INTERNAL1127,REG5)(lo)	|	VoC_add16_rr(REG2,REG2,REG4,IN_PARALLEL)
0xF0242495,	//0x2482		VoC_lw16i_short(REG4,0x1,DEFAULT)	|	VoC_bez16_r(INTERNAL1127,REG5)(hi)
0x248E35AC,	//0x2484		VoC_bne16_rr(INTERNAL1126,REG5,REG4)
0x3185D835,	//0x2486		VoC_bez16_r(INTERNAL1126,REG5)(lo)	|	VoC_lw16_p(REG5,REG3,DEFAULT)
0xF28C248E,	//0x2488		VoC_lw16i_short(RL6_LO,0x14,DEFAULT)	|	VoC_bez16_r(INTERNAL1126,REG5)(hi)
0x15662B80,	//0x248a		VoC_jal(CS_ff_h264_idct_dc_add_c)
0xFFC065C9,	//0x248c		VoC_NAD(IN_PARALLEL)	|	VoC_jump(INTERNAL1127)
		//0x248e		INTERNAL1126
0xE14C5FC3,	//0x248e		VoC_lw16i_short(RL6_LO,0x14,IN_PARALLEL)	|	VoC_push16(REG3,DEFAULT)
0x1A4E2B80,	//0x2490		VoC_jal(CS_idct_internal)
0x7030DF83,	//0x2492		VoC_lw16i_short(INC0,0x1,DEFAULT)	|	VoC_pop16(REG3,DEFAULT)
0xDE18F009,	//0x2494		VoC_inc_p(REG3,DEFAULT)	|	VoC_lw16i_short(INC1,0x2,IN_PARALLEL)
		//0x2495		INTERNAL1127
0xDFC65F00,	//0x2496		VoC_push16(REG6,IN_PARALLEL)	|	VoC_pop32(REG01,DEFAULT)
0xE0165F02,	//0x2498		VoC_lw16i_short(REG6,0x1,IN_PARALLEL)	|	VoC_pop32(REG45,DEFAULT)
0xDF864134,	//0x249a		VoC_pop16(REG6,IN_PARALLEL)	|	VoC_add16_rr(REG4,REG4,REG6,DEFAULT)
0x24742B00,	//0x249c		VoC_jump_lg(INTERNAL1125)
		//0x249e		INTERNAL122
0xFF44FFC0,	//0x249e		VoC_lw32z(ACC0,DEFAULT)	|	VoC_NOP
		//0x249f		INTERNAL125
0x0A86FF43,	//0x24a0		VoC_lw16i(REG6,0x10)(lo)	|	VoC_lw32z(REG67,DEFAULT)
0x08340010,	//0x24a2		VoC_mult16_rd(REG4,REG6,0x228)(lo)	|	VoC_lw16i(REG6,0x10)(hi)
0x08360228,	//0x24a4		VoC_mult16_rd(REG6,REG6,0x229)(lo)	|	VoC_mult16_rd(REG4,REG6,0x228)(hi)
0x0A810229,	//0x24a6		VoC_lw16i(REG1,0x49e2)(lo)	|	VoC_mult16_rd(REG6,REG6,0x229)(hi)
0xC10C49E2,	//0x24a8		VoC_add16_rr(REG4,REG4,REG1,DEFAULT)	|	VoC_lw16i(REG1,0x49e2)(hi)
0x1880C18E,	//0x24aa		VoC_lw16i_set_inc(REG0,0x34e,0x10)(lo)	|	VoC_add16_rr(REG6,REG6,REG1,DEFAULT)
0xD866034E,	//0x24ac		VoC_lw16_p(REG6,REG6,DEFAULT)	|	VoC_lw16i_set_inc(REG0,0x34e,0x10)(hi)
0xDFC6D842,	//0x24ae		VoC_push16(REG6,DEFAULT)	|	VoC_lw16_p(REG2,REG4,DEFAULT)
0x15802B80,	//0x24b0		VoC_jal(CS_chroma_dc_dequant_idct_c)
0x038E1880,	//0x24b2		VoC_lw16i_set_inc(REG0,0x38e,0x10)
0xFFC05F82,	//0x24b4		VoC_NAD(IN_PARALLEL)	|	VoC_pop16(REG2,DEFAULT)
0x15802B80,	//0x24b6		VoC_jal(CS_chroma_dc_dequant_idct_c)
0x47501804,	//0x24b8		VoC_lw16i_set_inc(REG0,0x4750,0x1)
0x034E1883,	//0x24ba		VoC_lw16i_set_inc(REG3,0x34e,0x10)
0x47781809,	//0x24bc		VoC_lw16i_set_inc(REG1,0x4778,0x2)
0x00FF0A86,	//0x24be		VoC_lw16i(REG6,0xff)
0xE0457004,	//0x24c0		VoC_lw16i_short(REG5,0x4,IN_PARALLEL)	|	VoC_lw16i_short(REG4,0x0,DEFAULT)
		//0x24c2		INTERNAL141
0x24E83525,	//0x24c2		VoC_be16_rr(INTERNAL142,REG4,REG5)
0xF0095F42,	//0x24c4		VoC_lw16i_short(INC1,0x2,IN_PARALLEL)	|	VoC_push32(REG45,DEFAULT)
0x03CE0A87,	//0x24c6		VoC_lw16i(REG7,0x3ce)
0x0C80180A,	//0x24c8		VoC_lw16i_set_inc(REG2,0xc80,0x2)
0xC17DD885,	//0x24ca		VoC_add16_rr(REG5,REG5,REG7,DEFAULT)	|	VoC_lw16inc_p(REG5,REG0,DEFAULT)
0xD855D894,	//0x24cc		VoC_lw16_p(REG5,REG5,DEFAULT)	|	VoC_lw16inc_p(REG4,REG1,DEFAULT)
0xC0A25F40,	//0x24ce		VoC_add16_rr(REG2,REG2,REG4,IN_PARALLEL)	|	VoC_push32(REG01,DEFAULT)
0x24DA3185,	//0x24d0		VoC_bez16_r(INTERNAL127,REG5)
0xE0CC5FC3,	//0x24d2		VoC_lw16i_short(RL6_LO,0xc,IN_PARALLEL)	|	VoC_push16(REG3,DEFAULT)
0x1A4E2B80,	//0x24d4		VoC_jal(CS_idct_internal)
0xF030DF83,	//0x24d6		VoC_lw16i_short(INC0,0x1,DEFAULT)	|	VoC_pop16(REG3,DEFAULT)
0xE5C7DE18,	//0x24d8		VoC_jump(INTERNAL128)	|	VoC_inc_p(REG3,DEFAULT)
		//0x24da		INTERNAL127
0x3185D8B5,	//0x24da		VoC_bez16_r(INTERNAL128,REG5)(lo)	|	VoC_lw16inc_p(REG5,REG3,DEFAULT)
0xF18C24E0,	//0x24dc		VoC_lw16i_short(RL6_LO,0xc,DEFAULT)	|	VoC_bez16_r(INTERNAL128,REG5)(hi)
0x15662B80,	//0x24de		VoC_jal(CS_ff_h264_idct_dc_add_c)
		//0x24e0		INTERNAL128
0xDFC75F00,	//0x24e0		VoC_push16(REG7,IN_PARALLEL)	|	VoC_pop32(REG01,DEFAULT)
0xE0175F02,	//0x24e2		VoC_lw16i_short(REG7,0x1,IN_PARALLEL)	|	VoC_pop32(REG45,DEFAULT)
0xDF87413C,	//0x24e4		VoC_pop16(REG7,IN_PARALLEL)	|	VoC_add16_rr(REG4,REG4,REG7,DEFAULT)
0x24C22B00,	//0x24e6		VoC_jump_lg(INTERNAL141)
		//0x24e8		INTERNAL142
0xE0457004,	//0x24e8		VoC_lw16i_short(REG5,0x4,IN_PARALLEL)	|	VoC_lw16i_short(REG4,0x0,DEFAULT)
		//0x24ea		INTERNAL140
0x25123525,	//0x24ea		VoC_be16_rr(INTERNAL139,REG4,REG5)
0xF0045F42,	//0x24ec		VoC_lw16i_short(INC0,0x1,IN_PARALLEL)	|	VoC_push32(REG45,DEFAULT)
0x0D100A82,	//0x24ee		VoC_lw16i(REG2,0xd10)
0x03CE0A87,	//0x24f0		VoC_lw16i(REG7,0x3ce)
0xF0095885,	//0x24f2		VoC_lw16i_short(INC1,0x2,IN_PARALLEL)	|	VoC_lw16inc_p(REG5,REG0,DEFAULT)
0xD894C17D,	//0x24f4		VoC_lw16inc_p(REG4,REG1,DEFAULT)	|	VoC_add16_rr(REG5,REG5,REG7,DEFAULT)
0x5F40D855,	//0x24f6		VoC_push32(REG01,DEFAULT)	|	VoC_lw16_p(REG5,REG5,DEFAULT)
0x3185C0A2,	//0x24f8		VoC_bez16_r(INTERNAL137,REG5)(lo)	|	VoC_add16_rr(REG2,REG2,REG4,IN_PARALLEL)
0x5FC32503,	//0x24fa		VoC_push16(REG3,DEFAULT)	|	VoC_bez16_r(INTERNAL137,REG5)(hi)
0x2B80E0CC,	//0x24fc		VoC_jal(CS_idct_internal)(lo)	|	VoC_lw16i_short(RL6_LO,0xc,IN_PARALLEL)
0xDF831A4E,	//0x24fe		VoC_pop16(REG3,DEFAULT)	|	VoC_jal(CS_idct_internal)(hi)
0xDE18FFC0,	//0x2500		VoC_inc_p(REG3,DEFAULT)	|	VoC_NOP
0xD8B5E5C8,	//0x2502		VoC_lw16inc_p(REG5,REG3,DEFAULT)	|	VoC_jump(INTERNAL138)
		//0x2503		INTERNAL137
0x250A3185,	//0x2504		VoC_bez16_r(INTERNAL138,REG5)
0xFFC0718C,	//0x2506		VoC_NAD(IN_PARALLEL)	|	VoC_lw16i_short(RL6_LO,0xc,DEFAULT)
0x15662B80,	//0x2508		VoC_jal(CS_ff_h264_idct_dc_add_c)
		//0x250a		INTERNAL138
0xDFC75F00,	//0x250a		VoC_push16(REG7,IN_PARALLEL)	|	VoC_pop32(REG01,DEFAULT)
0xE0175F02,	//0x250c		VoC_lw16i_short(REG7,0x1,IN_PARALLEL)	|	VoC_pop32(REG45,DEFAULT)
0xDF87413C,	//0x250e		VoC_pop16(REG7,IN_PARALLEL)	|	VoC_add16_rr(REG4,REG4,REG7,DEFAULT)
0x24EA2B00,	//0x2510		VoC_jump_lg(INTERNAL140)
		//0x2512		INTERNAL139
0x15282B80,	//0x2512		VoC_jal(CS_backup_mb_border)
0x5FA06C04,	//0x2514		VoC_bez16_d(DMA_Output_Rec_Cb_Wait_End,0x5fa0)
0x02402B80,	//0x2516		VoC_jal(Dma_Last_Cmd_Wait)
		//0x2518		DMA_Output_Rec_Cb_Wait_End
0x02116E04,	//0x2518		VoC_bnez16_d(NOT_INTERNAL129,0x211)
0xFFC065C8,	//0x251a		VoC_NAD(IN_PARALLEL)	|	VoC_jump(INTERNAL129)
		//0x251c		NOT_INTERNAL129
0x02391407,	//0x251c		VoC_lw16_d(REG7,0x239)
0xFFC07026,	//0x251e		VoC_NAD(IN_PARALLEL)	|	VoC_lw16i_short(REG6,0x1,DEFAULT)
0x052B2B80,	//0x2520		VoC_jal(CS_fill_caches)
		//0x2522		INTERNAL129
0x57301809,	//0x2522		VoC_lw16i_set_inc(REG1,0x5730,0x2)
0x1C5A1808,	//0x2524		VoC_lw16i_set_inc(REG0,0x1c5a,0x2)
0xD9CA7202,	//0x2526		VoC_lw32inc_p(REG45,REG1,IN_PARALLEL)	|	VoC_lw16i_short(REG2,0x10,DEFAULT)
0x02220812,	//0x2528		VoC_mult16_rd(REG2,REG2,0x222)
0xFFC0D9CB,	//0x252a		VoC_NAD	|	VoC_lw32inc_p(REG67,REG1,DEFAULT)
0xC0106909,	//0x252c		VoC_add16_rr(REG0,REG0,REG2,IN_PARALLEL)	|	VoC_loop_i_short(0x8,DEFAULT)
0xF9C779C5,	//0x252e		VoC_shru16_ri(REG7,0xfffffff8,IN_PARALLEL)	|	VoC_shru16_ri(REG5,0xfffffff8,DEFAULT)
0xE477E46C,	//0x2530		VoC_or16_rr(REG7,REG6,DEFAULT)	|	VoC_or16_rr(REG4,REG5,DEFAULT)
0xD9CA6086,	//0x2532		VoC_lw32inc_p(REG45,REG1,IN_PARALLEL)	|	VoC_movreg16(REG6,REG4,DEFAULT)
0xDDC3D9CB,	//0x2534		VoC_sw32inc_p(REG67,REG0,DEFAULT)	|	VoC_lw32inc_p(REG67,REG1,DEFAULT)
		//0x2535		VoC_endloop0
0x41601484,	//0x2536		VoC_lw32_d(ACC0,0x4160)
0x00010A84,	//0x2538		VoC_lw16i(REG4,0x1)
0x59741584,	//0x253a		VoC_sw32_d(ACC0,0x5974)
0x5FA51504,	//0x253c		VoC_sw16_d(REG4,0x5fa5)
0x41641484,	//0x253e		VoC_lw32_d(ACC0,0x4164)
0x066E0A82,	//0x2540		VoC_lw16i(REG2,0x66e)
0x59761584,	//0x2542		VoC_sw32_d(ACC0,0x5976)
0x5FA61502,	//0x2544		VoC_sw16_d(REG2,0x5fa6)
0x025D2B80,	//0x2546		VoC_jal(DMA_Out_Recon_UV)
0x41621484,	//0x2548		VoC_lw32_d(ACC0,0x4162)
0x2C720A82,	//0x254a		VoC_lw16i(REG2,0x2c72)
0x59761584,	//0x254c		VoC_sw32_d(ACC0,0x5976)
0x5FA61502,	//0x254e		VoC_sw16_d(REG2,0x5fa6)
0x0ABC1808,	//0x2550		VoC_lw16i_set_inc(REG0,0xabc,0x2)
0x57541809,	//0x2552		VoC_lw16i_set_inc(REG1,0x5754,0x2)
0xD9C2D9C1,	//0x2554		VoC_lw32inc_p(REG45,REG0,DEFAULT)	|	VoC_lw32inc_p(REG23,REG0,DEFAULT)
0x255A2CC8,	//0x2556		VoC_loop_i(0x0,0x64)
0xDDC959C1,	//0x2558		VoC_sw32inc_p(REG23,REG1,IN_PARALLEL)	|	VoC_lw32inc_p(REG23,REG0,DEFAULT)
		//0x255a		VoC_endloop0
0xDDCA59C2,	//0x255a		VoC_sw32inc_p(REG45,REG1,IN_PARALLEL)	|	VoC_lw32inc_p(REG45,REG0,DEFAULT)
0x0C4C1808,	//0x255c		VoC_lw16i_set_inc(REG0,0xc4c,0x2)
0x58E41809,	//0x255e		VoC_lw16i_set_inc(REG1,0x58e4,0x2)
0xD9C2D9C1,	//0x2560		VoC_lw32inc_p(REG45,REG0,DEFAULT)	|	VoC_lw32inc_p(REG23,REG0,DEFAULT)
0x25662C48,	//0x2562		VoC_loop_i(0x0,0x24)
0xDDC959C1,	//0x2564		VoC_sw32inc_p(REG23,REG1,IN_PARALLEL)	|	VoC_lw32inc_p(REG23,REG0,DEFAULT)
		//0x2566		VoC_endloop0
0xDDCA59C2,	//0x2566		VoC_sw32inc_p(REG45,REG1,IN_PARALLEL)	|	VoC_lw32inc_p(REG45,REG0,DEFAULT)
0x02402B80,	//0x2568		VoC_jal(Dma_Last_Cmd_Wait)
0xFFC0DFA9,	//0x256a		VoC_NOP	|	VoC_pop16(RA,DEFAULT)
0xFFC06580,	//0x256c		VoC_NAD(IN_PARALLEL)	|	VoC_return
		//0x256e		CS_init_table
0x49060A82,	//0x256e		VoC_lw16i(REG2,0x4906)
0x47400A85,	//0x2570		VoC_lw16i(REG5,0x4740)
0x03CE0A86,	//0x2572		VoC_lw16i(REG6,0x3ce)
0x02481505,	//0x2574		VoC_sw16_d(REG5,0x248)
0x02491506,	//0x2576		VoC_sw16_d(REG6,0x249)
0x05561809,	//0x2578		VoC_lw16i_set_inc(REG1,0x556,0x2)
0x02471502,	//0x257a		VoC_sw16_d(REG2,0x247)
0x447A180A,	//0x257c		VoC_lw16i_set_inc(REG2,0x447a,0x2)
0x020D1508,	//0x257e		VoC_sw16_d(ACC0_LO,0x20d)
0x25852C17,	//0x2580		VoC_loop_i(0x1,0xb)
0x25842C40,	//0x2582		VoC_loop_i(0x0,0x20)
		//0x2584		VoC_endloop0
0xFFC0DDCC,	//0x2584		VoC_NOP	|	VoC_sw32inc_p(ACC0,REG1,DEFAULT)
		//0x2585		VoC_endloop1
0x00010A84,	//0x2586		VoC_lw16i(REG4,0x1)
0x258E3184,	//0x2588		VoC_bez16_r(CS_init_table_mb_type_table_end,REG4)
0x258C2E20,	//0x258a		VoC_loop_r(0,REG4)
		//0x258c		VoC_endloop0
0xFFC05DCC,	//0x258c		VoC_NAD(IN_PARALLEL)	|	VoC_sw32inc_p(ACC0,REG1,DEFAULT)
		//0x258e		CS_init_table_mb_type_table_end
0x25932C17,	//0x258e		VoC_loop_i(0x1,0xb)
0x25922C40,	//0x2590		VoC_loop_i(0x0,0x20)
		//0x2592		VoC_endloop0
0xFFC0DDD5,	//0x2592		VoC_NOP	|	VoC_sw32inc_p(ACC1,REG2,DEFAULT)
		//0x2593		VoC_endloop1
0x00000A84,	//0x2594		VoC_lw16i(REG4,0x0)
0x259C3184,	//0x2596		VoC_bez16_r(CS_init_table_slice_table_end,REG4)
0x259A2E20,	//0x2598		VoC_loop_r(0,REG4)
		//0x259a		VoC_endloop0
0xFFC05DD5,	//0x259a		VoC_NAD(IN_PARALLEL)	|	VoC_sw32inc_p(ACC1,REG2,DEFAULT)
		//0x259c		CS_init_table_slice_table_end
0x03FE1809,	//0x259c		VoC_lw16i_set_inc(REG1,0x3fe,0x2)
0x25A02C28,	//0x259e		VoC_loop_i(0x0,0x14)
		//0x25a0		VoC_endloop0
0xDFC0DDCC,	//0x25a0		VoC_push16(REG0,DEFAULT)	|	VoC_sw32inc_p(ACC0,REG1,DEFAULT)
0x048E0A84,	//0x25a2		VoC_lw16i(REG4,0x48e)
0x05060A84,	//0x25a4		VoC_lw16i(REG4,0x506)
0x052E1504,	//0x25a6		VoC_sw16_d(REG4,0x52e)
0x052F1504,	//0x25a8		VoC_sw16_d(REG4,0x52f)
0x043E0A84,	//0x25aa		VoC_lw16i(REG4,0x43e)
0x04B60A84,	//0x25ac		VoC_lw16i(REG4,0x4b6)
0x05301504,	//0x25ae		VoC_sw16_d(REG4,0x530)
0x05311504,	//0x25b0		VoC_sw16_d(REG4,0x531)
0x17A31805,	//0x25b2		VoC_lw16i_set_inc(REG1,0x17a3,0x1)
0xEFB37022,	//0x25b4		VoC_lw16i_short(REG3,0xfffffffb,IN_PARALLEL)	|	VoC_lw16i_short(REG2,0x1,DEFAULT)
0xDC92F284,	//0x25b6		VoC_sw16inc_p(REG2,REG1,DEFAULT)	|	VoC_lw16i_short(REG4,0x14,DEFAULT)
0xDC94DC93,	//0x25b8		VoC_sw16inc_p(REG4,REG1,DEFAULT)	|	VoC_sw16inc_p(REG3,REG1,DEFAULT)
0xDC93DC94,	//0x25ba		VoC_sw16inc_p(REG3,REG1,DEFAULT)	|	VoC_sw16inc_p(REG4,REG1,DEFAULT)
0x0A8EDC92,	//0x25bc		VoC_lw16i(RL7_LO,0x818)(lo)	|	VoC_sw16inc_p(REG2,REG1,DEFAULT)
0x0A8F0818,	//0x25be		VoC_lw16i(RL7_HI,0x0)(lo)	|	VoC_lw16i(RL7_LO,0x818)(hi)
0x18040000,	//0x25c0		VoC_lw16i_set_inc(REG0,0x0,0x1)(lo)	|	VoC_lw16i(RL7_HI,0x0)(hi)
0x14060000,	//0x25c2		VoC_lw16_d(REG6,0x21d)(lo)	|	VoC_lw16i_set_inc(REG0,0x0,0x1)(hi)
0x1404021D,	//0x25c4		VoC_lw16_d(REG4,0x21c)(lo)	|	VoC_lw16_d(REG6,0x21d)(hi)
0x6085021C,	//0x25c6		VoC_movreg16(REG5,REG4,DEFAULT)	|	VoC_lw16_d(REG4,0x21c)(hi)
0xF9FDE033,	//0x25c8		VoC_shru16_ri(REG5,0xffffffff,DEFAULT)	|	VoC_lw16i_short(REG3,0x3,IN_PARALLEL)
0xC15D79F4,	//0x25ca		VoC_add16_rr(REG5,REG5,REG3,IN_PARALLEL)	|	VoC_shru16_ri(REG4,0xfffffffe,DEFAULT)
0xF9F5F915,	//0x25cc		VoC_shru16_ri(REG5,0xfffffffe,DEFAULT)	|	VoC_shru16_ri(REG5,0x2,DEFAULT)
0x02331504,	//0x25ce		VoC_sw16_d(REG4,0x233)
0x02341505,	//0x25d0		VoC_sw16_d(REG5,0x234)
0x25E72E31,	//0x25d2		VoC_loop_r(1,REG6)
0x00001805,	//0x25d4		VoC_lw16i_set_inc(REG1,0x0,0x1)
0x021C1407,	//0x25d6		VoC_lw16_d(REG7,0x21c)
0x25E52E38,	//0x25d8		VoC_loop_r(0,REG7)
0x02130803,	//0x25da		VoC_mult16_rd(REG3,REG0,0x213)
0xC42FC426,	//0x25dc		VoC_mult16_rr(REG7,REG0,REG5,DEFAULT)	|	VoC_mult16_rr(REG6,REG0,REG4,DEFAULT)
0xC18E40CB,	//0x25de		VoC_add16_rr(REG6,REG6,REG1,IN_PARALLEL)	|	VoC_add16_rr(REG3,REG3,REG1,DEFAULT)
0xC1CF6062,	//0x25e0		VoC_add16_rr(REG7,REG7,REG1,IN_PARALLEL)	|	VoC_movreg16(REG2,REG3,DEFAULT)
0xF9F64879,	//0x25e2		VoC_shru16_ri(REG6,0xfffffffe,IN_PARALLEL)	|	VoC_add32_rr(REG23,REG23,RL7,DEFAULT)
0x5C26F9FF,	//0x25e4		VoC_sw16_p(REG6,REG2,DEFAULT)	|	VoC_shru16_ri(REG7,0xffffffff,DEFAULT)
		//0x25e5		VoC_endloop0
0xDE00DE08,	//0x25e6		VoC_inc_p(REG0,DEFAULT)	|	VoC_inc_p(REG1,IN_PARALLEL)
		//0x25e7		VoC_endloop1
0xFFC0DF80,	//0x25e8		VoC_NOP	|	VoC_pop16(REG0,DEFAULT)
0xFFC06580,	//0x25ea		VoC_NAD(IN_PARALLEL)	|	VoC_return
		//0x25ec		Flush_motion_cache_lines
0x203A1807,	//0x25ec		VoC_lw16i_set_inc(REG3,0x203a,0x1)
0x5FA9180A,	//0x25ee		VoC_lw16i_set_inc(REG2,0x5fa9,0x2)
0x26022C05,	//0x25f0		VoC_loop_i(0x1,0x2)
0x02340712,	//0x25f2		VoC_add16_rd(REG2,REG2,0x234)
0x021C1401,	//0x25f4		VoC_lw16_d(REG1,0x21c)
0xD8A4F909,	//0x25f6		VoC_lw16inc_p(REG4,REG2,DEFAULT)	|	VoC_shru16_ri(REG1,0x1,DEFAULT)
0xFFC058A5,	//0x25f8		VoC_NAD(IN_PARALLEL)	|	VoC_lw16inc_p(REG5,REG2,DEFAULT)
0x25FE2E08,	//0x25fa		VoC_loop_r(0,REG1)
0xDCB458A4,	//0x25fc		VoC_sw16inc_p(REG4,REG3,IN_PARALLEL)	|	VoC_lw16inc_p(REG4,REG2,DEFAULT)
		//0x25fe		VoC_endloop0
0xDCB558A5,	//0x25fe		VoC_sw16inc_p(REG5,REG3,IN_PARALLEL)	|	VoC_lw16inc_p(REG5,REG2,DEFAULT)
0x205A1807,	//0x2600		VoC_lw16i_set_inc(REG3,0x205a,0x1)
		//0x2602		VoC_endloop1
0x6029180A,	//0x2602		VoC_lw16i_set_inc(REG2,0x6029,0x2)
0x50000A8F,	//0x2604		VoC_lw16i(RL7_HI,0x5000)
0x2FD40A82,	//0x2606		VoC_lw16i(REG2,0x2fd4)
0x40901485,	//0x2608		VoC_lw32_d(ACC1,0x4090)
0x02341403,	//0x260a		VoC_lw16_d(REG3,0x234)
0x02231401,	//0x260c		VoC_lw16_d(REG1,0x223)
0xE00E79F9,	//0x260e		VoC_lw16i_short(RL7_LO,0x0,IN_PARALLEL)	|	VoC_shru16_ri(REG1,0xffffffff,DEFAULT)
0xCC5C790B,	//0x2610		VoC_multf32_rr(ACC0,REG1,REG3,IN_PARALLEL)	|	VoC_shru16_ri(REG3,0x1,DEFAULT)
0x02191401,	//0x2612		VoC_lw16_d(REG1,0x219)
0xC92DE64F,	//0x2614		VoC_add32_rr(ACC1,ACC0,ACC1,DEFAULT)	|	VoC_loop_r_short(REG1,DEFAULT)
0x1542E53D,	//0x2616		VoC_sw16_d(REG2,0xffc3)(lo)	|	VoC_or32_rr(ACC1,RL7,DEFAULT)
0x15437FC3,	//0x2618		VoC_sw16_d(REG3,0xffc2)(lo)	|	VoC_sw16_d(REG2,0xffc3)(hi)
0x15C57FC2,	//0x261a		VoC_sw32_d(ACC1,0xffc4)(lo)	|	VoC_sw16_d(REG3,0xffc2)(hi)
0xDE807FC4,	//0x261c		VoC_cfg(0x0)	|	VoC_sw32_d(ACC1,0xffc4)(hi)
0x1794FFC0,	//0x261e		VoC_cfg_lg(0x8,)(lo)	|	VoC_NOP
0x14850008,	//0x2620		VoC_lw32_d(ACC1,0x4092)(lo)	|	VoC_cfg_lg(0x8,)(hi)
0x0A824092,	//0x2622		VoC_lw16i(REG2,0x3014)(lo)	|	VoC_lw32_d(ACC1,0x4092)(hi)
		//0x2623		VoC_endloop0
0x14033014,	//0x2624		VoC_lw16_d(REG3,0x213)(lo)	|	VoC_lw16i(REG2,0x3014)(hi)
0x081C0213,	//0x2626		VoC_mult16_rd(REG4,REG3,0x223)(lo)	|	VoC_lw16_d(REG3,0x213)(hi)
0x0A820223,	//0x2628		VoC_lw16i(REG2,0x597)(lo)	|	VoC_mult16_rd(REG4,REG3,0x223)(hi)
0x40A20597,	//0x262a		VoC_add16_rr(REG2,REG2,REG4,DEFAULT)	|	VoC_lw16i(REG2,0x597)(hi)
0x790AE005,	//0x262c		VoC_shru16_ri(REG2,0x1,DEFAULT)	|	VoC_lw16i_short(REG5,0x0,IN_PARALLEL)
0x0912F9FC,	//0x262e		VoC_add32_rd(REG45,REG45,0x409e)(lo)	|	VoC_shru16_ri(REG4,0xffffffff,IN_PARALLEL)
0xFC12409E,	//0x2630		VoC_shru32_ri(REG45,0x2,DEFAULT)	|	VoC_add32_rd(REG45,REG45,0x409e)(hi)
0xFDF2F90B,	//0x2632		VoC_shru32_ri(REG45,0xfffffffe,DEFAULT)	|	VoC_shru16_ri(REG3,0x1,DEFAULT)
0x40001685,	//0x2634		VoC_or16_ri(REG5,0x4000)
0x7FC31542,	//0x2636		VoC_sw16_d(REG2,0xffc3)
0x7FC21543,	//0x2638		VoC_sw16_d(REG3,0xffc2)
0x7FC415C2,	//0x263a		VoC_sw32_d(REG45,0xffc4)
0xFFC0DE80,	//0x263c		VoC_NOP	|	VoC_cfg(0x0)
0x00081794,	//0x263e		VoC_cfg_lg(0x8,)
0xDFE9E580,	//0x2640		VoC_push16(RA,DEFAULT)	|	VoC_return
		//0x2641		CS_decode_slice
0x00090A9C,	//0x2642		VoC_lw16i(WRAP0,0x9)
0x00000A9D,	//0x2644		VoC_lw16i(WRAP1,0x0)
0x00000A9E,	//0x2646		VoC_lw16i(WRAP2,0x0)
0x00000A9F,	//0x2648		VoC_lw16i(WRAP3,0x0)
0xF4017018,	//0x264a		VoC_lw16i_short(FORMAT32,0x0,IN_PARALLEL)	|	VoC_lw16i_short(FORMAT16,0x0,DEFAULT)
0xEFFB77EA,	//0x264c		VoC_lw16i_short(ACC1_HI,0xffffffff,IN_PARALLEL)	|	VoC_lw16i_short(ACC1_LO,0xffffffff,DEFAULT)
0x150AFF44,	//0x264e		VoC_sw16_d(ACC1_LO,0x20e)(lo)	|	VoC_lw32z(ACC0,DEFAULT)
0x6C19020E,	//0x2650		VoC_bez16_d(CS_decode_slice_Begin,0x20d)(lo)	|	VoC_sw16_d(ACC1_LO,0x20e)(hi)
0x2B80020D,	//0x2652		VoC_jal(CS_init_table)(lo)	|	VoC_bez16_d(CS_decode_slice_Begin,0x20d)(hi)
0xF000256E,	//0x2654		VoC_lw16i_short(REG0,0x0,DEFAULT)	|	VoC_jal(CS_init_table)(hi)
0x59780A81,	//0x2656		VoC_lw16i(REG1,0x5978)
0x5FA01500,	//0x2658		VoC_sw16_d(REG0,0x5fa0)
0x5FA51500,	//0x265a		VoC_sw16_d(REG0,0x5fa5)
0x5BDC0A81,	//0x265c		VoC_lw16i(REG1,0x5bdc)
0x5FA11501,	//0x265e		VoC_sw16_d(REG1,0x5fa1)
0x5B700A81,	//0x2660		VoC_lw16i(REG1,0x5b70)
0x5FA21501,	//0x2662		VoC_sw16_d(REG1,0x5fa2)
0x5DD40A81,	//0x2664		VoC_lw16i(REG1,0x5dd4)
0x5FA31501,	//0x2666		VoC_sw16_d(REG1,0x5fa3)
0x5FA41501,	//0x2668		VoC_sw16_d(REG1,0x5fa4)
		//0x266a		CS_decode_slice_Begin
0x020A1584,	//0x266a		VoC_sw32_d(ACC0,0x20a)
0x02041486,	//0x266c		VoC_lw32_d(RL6,0x204)
0x02071508,	//0x266e		VoC_sw16_d(ACC0_LO,0x207)
0x020C1508,	//0x2670		VoC_sw16_d(ACC0_LO,0x20c)
0x0206141B,	//0x2672		VoC_lw16_d(BITCACHE,0x206)
0x00000A80,	//0x2674		VoC_lw16i(REG0,0x0)
0x02BA2B80,	//0x2676		VoC_jal(H264_dma_bs)
0x1482F021,	//0x2678		VoC_lw32_d(REG45,0x222)(lo)	|	VoC_lw16i_short(REG1,0x1,DEFAULT)
0x15010222,	//0x267a		VoC_sw16_d(REG1,0x207)(lo)	|	VoC_lw32_d(REG45,0x222)(hi)
0xFFC00207,	//0x267c		VoC_NAD	|	VoC_sw16_d(REG1,0x207)(hi)
		//0x267e		CS_decode_slice_start
0x02221582,	//0x267e		VoC_sw32_d(REG45,0x222)
0x020A1481,	//0x2680		VoC_lw32_d(REG23,0x20a)
0x02086431,	//0x2682		VoC_bnlt32_rd(H264_BS_OVER,REG23,0x208)
0x02BA2B80,	//0x2684		VoC_jal(H264_dma_bs)
0xE5C5F13C,	//0x2686		VoC_jump(CS_decode_slice_go)	|	VoC_lw16i_short(WRAP0,0x9,DEFAULT)
		//0x2688		H264_BS_OVER
0x020E6804,	//0x2688		VoC_bgtz16_d(CS_decode_slice_go,0x20e)
0x26B02B00,	//0x268a		VoC_jump_lg(CS_decode_slice_exit)
		//0x268c		CS_decode_slice_go
0x11882B80,	//0x268c		VoC_jal(CS_decode_mb_cavlc)
0x02E02B80,	//0x268e		VoC_jal(H264_bs_consume_update)
0xF4045FDB,	//0x2690		VoC_lw16i_short(WRAP0,0x0,IN_PARALLEL)	|	VoC_push16(BITCACHE,DEFAULT)
0xDFC05F46,	//0x2692		VoC_push16(REG0,IN_PARALLEL)	|	VoC_push32(RL6,DEFAULT)
0x269C3206,	//0x2694		VoC_bltz16_r(CS_decode_slice_100,REG6)
0x14452B80,	//0x2696		VoC_jal(CS_hl_decode_mb_internal_prepare)
0x223E2B80,	//0x2698		VoC_jal(CS_hl_decode_mb_internal)
0x06082B80,	//0x269a		VoC_jal(CS_write_back_non_zero_count)
		//0x269c		CS_decode_slice_100
0x5F9BDF80,	//0x269c		VoC_pop16(BITCACHE,DEFAULT)	|	VoC_pop16(REG0,DEFAULT)
0x1482DF06,	//0x269e		VoC_lw32_d(REG45,0x222)(lo)	|	VoC_pop32(RL6,IN_PARALLEL)
0x07240222,	//0x26a0		VoC_add16_rd(REG4,REG4,0x482c)(lo)	|	VoC_lw32_d(REG45,0x222)(hi)
0x489C482C,	//0x26a2		VoC_blt16_rd(CS_decode_slice_start2,REG4,0x21c)(lo)	|	VoC_add16_rd(REG4,REG4,0x482c)(hi)
0xDF42021C,	//0x26a4		VoC_push32(REG45,DEFAULT)	|	VoC_blt16_rd(CS_decode_slice_start2,REG4,0x21c)(hi)
0x25EC2B80,	//0x26a6		VoC_jal(Flush_motion_cache_lines)
0xF004DF02,	//0x26a8		VoC_lw16i_short(REG4,0x0,DEFAULT)	|	VoC_pop32(REG45,DEFAULT)
0x482C072D,	//0x26aa		VoC_add16_rd(REG5,REG5,0x482c)
0x021D4C25,	//0x26ac		VoC_bnlt16_rd(CS_decode_slice_exit,REG5,0x21d)
		//0x26ae		CS_decode_slice_start2
0x267E2B00,	//0x26ae		VoC_jump_lg(CS_decode_slice_start)
		//0x26b0		CS_decode_slice_exit
0x5FA56C0A,	//0x26b0		VoC_bez16_d(DMA_Output_Last_MB_End,0x5fa5)
0x02472B80,	//0x26b2		VoC_jal(DMA_Out_Recon_Y)
0x02402B80,	//0x26b4		VoC_jal(Dma_Last_Cmd_Wait)
0x025D2B80,	//0x26b6		VoC_jal(DMA_Out_Recon_UV)
0x02402B80,	//0x26b8		VoC_jal(Dma_Last_Cmd_Wait)
		//0x26ba		DMA_Output_Last_MB_End
0xFFC0DFA9,	//0x26ba		VoC_NOP	|	VoC_pop16(RA,DEFAULT)
0xFFC0E580,	//0x26bc		VoC_NAD	|	VoC_return
