		//0x0100		VoC_code_section_1
		//0x0100		YUV_ROTATE_SEND_DMA_CMD
0x1540E53C,	//0x0100		VoC_sw16_d(REG0,0xffc8)(lo)	|	VoC_or32_rr(ACC0,RL7,DEFAULT)
0x15417FC8,	//0x0102		VoC_sw16_d(REG1,0xffc9)(lo)	|	VoC_sw16_d(REG0,0xffc8)(hi)
0x15427FC9,	//0x0104		VoC_sw16_d(REG2,0xffc3)(lo)	|	VoC_sw16_d(REG1,0xffc9)(hi)
0x15437FC3,	//0x0106		VoC_sw16_d(REG3,0xffc2)(lo)	|	VoC_sw16_d(REG2,0xffc3)(hi)
0x15C47FC2,	//0x0108		VoC_sw32_d(ACC0,0xffc4)(lo)	|	VoC_sw16_d(REG3,0xffc2)(hi)
0xE5807FC4,	//0x010a		VoC_return	|	VoC_sw32_d(ACC0,0xffc4)(hi)
		//0x010c		YUV_ROTATE_WAIT_DMA_DONE
0xFFC0DE80,	//0x010c		VoC_NOP	|	VoC_cfg(0x0)
0x00081794,	//0x010e		VoC_cfg_lg(0x8,)
0xFFC06580,	//0x0110		VoC_NAD(IN_PARALLEL)	|	VoC_return
		//0x0112		VOC_YUV420_rotate
0xFF475FE9,	//0x0112		VoC_lw32z(RL7,IN_PARALLEL)	|	VoC_push16(RA,DEFAULT)
0xF405701C,	//0x0114		VoC_lw16i_short(WRAP1,0x0,IN_PARALLEL)	|	VoC_lw16i_short(WRAP0,0x0,DEFAULT)
0xF407701E,	//0x0116		VoC_lw16i_short(WRAP3,0x0,IN_PARALLEL)	|	VoC_lw16i_short(WRAP2,0x0,DEFAULT)
0x00081480,	//0x0118		VoC_lw32_d(REG01,0x8)
0x0A82FF03,	//0x011a		VoC_lw16i(REG2,0x11)(lo)	|	VoC_movreg32(REG67,REG01,DEFAULT)
0x0A830011,	//0x011c		VoC_lw16i(REG3,0x41)(lo)	|	VoC_lw16i(REG2,0x11)(hi)
0x70240041,	//0x011e		VoC_lw16i_short(REG4,0x1,DEFAULT)	|	VoC_lw16i(REG3,0x41)(hi)
0x6020E015,	//0x0120		VoC_movreg16(REG0,REG1,DEFAULT)	|	VoC_lw16i_short(REG5,0x1,IN_PARALLEL)
0x781EF601,	//0x0122		VoC_shr16_ri(REG6,0x3,DEFAULT)	|	VoC_movreg16(REG1,REG0,IN_PARALLEL)
0x1580F81F,	//0x0124		VoC_sw32_d(REG01,0xa)(lo)	|	VoC_shr16_ri(REG7,0x3,IN_PARALLEL)
0x1583000A,	//0x0126		VoC_sw32_d(REG67,0x10)(lo)	|	VoC_sw32_d(REG01,0xa)(hi)
0xC5BE0010,	//0x0128		VoC_mult16_rr(REG6,REG6,REG7,DEFAULT)	|	VoC_sw32_d(REG67,0x10)(hi)
0x000E1587,	//0x012a		VoC_sw32_d(RL7,0xe)
0x41D21502,	//0x012c		VoC_sw16_d(REG2,0x41d2)
0x41D31503,	//0x012e		VoC_sw16_d(REG3,0x41d3)
0x41D41582,	//0x0130		VoC_sw32_d(REG45,0x41d4)
0x0012150E,	//0x0132		VoC_sw16_d(RL7_LO,0x12)
0x00131506,	//0x0134		VoC_sw16_d(REG6,0x13)
0x00001484,	//0x0136		VoC_lw32_d(ACC0,0x0)
0x000D1400,	//0x0138		VoC_lw16_d(REG0,0xd)
0x20150A82,	//0x013a		VoC_lw16i(REG2,0x2015)
0xF8087101,	//0x013c		VoC_shr16_ri(REG0,0x1,IN_PARALLEL)	|	VoC_lw16i_short(REG1,0x8,DEFAULT)
0x4218F083,	//0x013e		VoC_sub16_rr(REG0,REG0,REG3,DEFAULT)	|	VoC_lw16i_short(REG3,0x4,DEFAULT)
0x0A8FE00E,	//0x0140		VoC_lw16i(RL7_HI,0x1000)(lo)	|	VoC_lw16i_short(RL7_LO,0x0,IN_PARALLEL)
0xFFC01000,	//0x0142		VoC_NAD	|	VoC_lw16i(RL7_HI,0x1000)(hi)
0x01002B80,	//0x0144		VoC_jal(YUV_ROTATE_SEND_DMA_CMD)
0x010C2B80,	//0x0146		VoC_jal(YUV_ROTATE_WAIT_DMA_DONE)
		//0x0148		YUV_ROTATE_loop_start
0x00121404,	//0x0148		VoC_lw16_d(REG4,0x12)
0x00134824,	//0x014a		VoC_blt16_rd(YUV_ROTATE_MBA_lt_MBAmax,REG4,0x13)
0x027C2B00,	//0x014c		VoC_jump_lg(YUV_ROTATE_end)
		//0x014e		YUV_ROTATE_MBA_lt_MBAmax
0x00001805,	//0x014e		VoC_lw16i_set_inc(REG1,0x0,0x1)
0x00121400,	//0x0150		VoC_lw16_d(REG0,0x12)
0x00101403,	//0x0152		VoC_lw16_d(REG3,0x10)
0xF5E16005,	//0x0154		VoC_lw16i_short(FORMAT32,0xfffffffc,IN_PARALLEL)	|	VoC_movreg16(REG5,REG0,DEFAULT)
		//0x0156		YUV_ROTATE_xypos_MBA_loop
0xF6A0435D,	//0x0156		VoC_movreg16(REG0,REG5,IN_PARALLEL)	|	VoC_sub16_rr(REG5,REG5,REG3,DEFAULT)
0x00104820,	//0x0158		VoC_blt16_rd(YUV_ROTATE_xypos_MBA_loop_end,REG0,0x10)
0xE5FBDE08,	//0x015a		VoC_jump(YUV_ROTATE_xypos_MBA_loop)	|	VoC_inc_p(REG1,DEFAULT)
		//0x015c		YUV_ROTATE_xypos_MBA_loop_end
0x1580F030,	//0x015c		VoC_sw32_d(REG01,0xe)(lo)	|	VoC_lw16i_short(INC0,0x1,DEFAULT)
0x1484000E,	//0x015e		VoC_lw32_d(ACC0,0x0)(lo)	|	VoC_sw32_d(REG01,0xe)(hi)
0x07240000,	//0x0160		VoC_add16_rd(REG4,REG4,0x41d4)(lo)	|	VoC_lw32_d(ACC0,0x0)(hi)
0xDE0041D4,	//0x0162		VoC_inc_p(REG0,DEFAULT)	|	VoC_add16_rd(REG4,REG4,0x41d4)(hi)
0x00104490,	//0x0164		VoC_bne16_rd(YUV_ROTATE_dma_in_next,REG0,0x10)
0xE0005E08,	//0x0166		VoC_lw16i_short(REG0,0x0,IN_PARALLEL)	|	VoC_inc_p(REG1,DEFAULT)
0x00114431,	//0x0168		VoC_bne16_rd(YUV_ROTATE_dma_in_next,REG1,0x11)
0x41D51500,	//0x016a		VoC_sw16_d(REG0,0x41d5)
0xFFC065DA,	//0x016c		VoC_NAD(IN_PARALLEL)	|	VoC_jump(YUV_ROTATE_dma_in_over)
		//0x016e		YUV_ROTATE_dma_in_next
0x00011604,	//0x016e		VoC_and16_ri(REG4,0x1)
0x000D0E08,	//0x0170		VoC_mac32_rd(REG1,0xd)
0xF4017001,	//0x0172		VoC_lw16i_short(FORMAT32,0x0,IN_PARALLEL)	|	VoC_lw16i_short(REG1,0x0,DEFAULT)
0x4904FBE0,	//0x0174		VoC_add32_rr(ACC0,ACC0,REG01,DEFAULT)	|	VoC_shr32_ri(REG01,0xfffffffc,DEFAULT)
0x1400F8D4,	//0x0176		VoC_lw16_d(REG0,0xd)(lo)	|	VoC_shr16_ri(REG4,0xfffffffa,IN_PARALLEL)
0x0A82000D,	//0x0178		VoC_lw16i(REG2,0x2015)(lo)	|	VoC_lw16_d(REG0,0xd)(hi)
0x71012015,	//0x017a		VoC_lw16i_short(REG1,0x8,DEFAULT)	|	VoC_lw16i(REG2,0x2015)(hi)
0x7083F808,	//0x017c		VoC_lw16i_short(REG3,0x4,DEFAULT)	|	VoC_shr16_ri(REG0,0x1,IN_PARALLEL)
0x4218C0A2,	//0x017e		VoC_sub16_rr(REG0,REG0,REG3,DEFAULT)	|	VoC_add16_rr(REG2,REG2,REG4,IN_PARALLEL)
0x0A8FE00E,	//0x0180		VoC_lw16i(RL7_HI,0x1000)(lo)	|	VoC_lw16i_short(RL7_LO,0x0,IN_PARALLEL)
0xFFC01000,	//0x0182		VoC_NAD	|	VoC_lw16i(RL7_HI,0x1000)(hi)
0x01002B80,	//0x0184		VoC_jal(YUV_ROTATE_SEND_DMA_CMD)
		//0x0186		YUV_ROTATE_dma_in_over
0x00121405,	//0x0186		VoC_lw16_d(REG5,0x12)
0x000C1404,	//0x0188		VoC_lw16_d(REG4,0xc)
0x00011605,	//0x018a		VoC_and16_ri(REG5,0x1)
0x3204F8CD,	//0x018c		VoC_bltz16_r(YUV_ROTATE_left_90,REG4)(lo)	|	VoC_shr16_ri(REG5,0xfffffff9,DEFAULT)
0x18080202,	//0x018e		VoC_lw16i_set_inc(REG0,0x402a,0x2)(lo)	|	VoC_bltz16_r(YUV_ROTATE_left_90,REG4)(hi)
0x1821402A,	//0x0190		VoC_lw16i_set_inc(REG1,0x1b,0x8)(lo)	|	VoC_lw16i_set_inc(REG0,0x402a,0x2)(hi)
0x1812001B,	//0x0192		VoC_lw16i_set_inc(REG2,0x41ad,0x4)(lo)	|	VoC_lw16i_set_inc(REG1,0x1b,0x8)(hi)
0x181341AD,	//0x0194		VoC_lw16i_set_inc(REG3,0x41c1,0x4)(lo)	|	VoC_lw16i_set_inc(REG2,0x41ad,0x4)(hi)
0xC02841C1,	//0x0196		VoC_add16_rr(REG0,REG0,REG5,DEFAULT)	|	VoC_lw16i_set_inc(REG3,0x41c1,0x4)(hi)
0x01B82C09,	//0x0198		VoC_loop_i(0x1,0x4)
0x01A62C04,	//0x019a		VoC_loop_i(0x0,0x2)
0xD9C3D9C2,	//0x019c		VoC_lw32inc_p(REG67,REG0,DEFAULT)	|	VoC_lw32inc_p(REG45,REG0,DEFAULT)
0xD9C7D9C6,	//0x019e		VoC_lw32inc_p(RL7,REG0,DEFAULT)	|	VoC_lw32inc_p(RL6,REG0,DEFAULT)
0xDCB75C94,	//0x01a0		VoC_sw16inc_p(REG7,REG3,IN_PARALLEL)	|	VoC_sw16inc_p(REG4,REG1,DEFAULT)
0xDCA55C96,	//0x01a2		VoC_sw16inc_p(REG5,REG2,IN_PARALLEL)	|	VoC_sw16inc_p(REG6,REG1,DEFAULT)
0xDCBF5C9C,	//0x01a4		VoC_sw16inc_p(RL7_HI,REG3,IN_PARALLEL)	|	VoC_sw16inc_p(RL6_LO,REG1,DEFAULT)
		//0x01a6		VoC_endloop0
0xDCAD5C9E,	//0x01a6		VoC_sw16inc_p(RL6_HI,REG2,IN_PARALLEL)	|	VoC_sw16inc_p(RL7_LO,REG1,DEFAULT)
0x41D30789,	//0x01a8		VoC_sub16_rd(REG1,REG1,0x41d3)
0x01B32C04,	//0x01aa		VoC_loop_i(0x0,0x2)
0xD885D884,	//0x01ac		VoC_lw16inc_p(REG5,REG0,DEFAULT)	|	VoC_lw16inc_p(REG4,REG0,DEFAULT)
0xD8865C94,	//0x01ae		VoC_lw16inc_p(REG6,REG0,IN_PARALLEL)	|	VoC_sw16inc_p(REG4,REG1,DEFAULT)
0xD8875C95,	//0x01b0		VoC_lw16inc_p(REG7,REG0,IN_PARALLEL)	|	VoC_sw16inc_p(REG5,REG1,DEFAULT)
0xDC97DC96,	//0x01b2		VoC_sw16inc_p(REG7,REG1,DEFAULT)	|	VoC_sw16inc_p(REG6,REG1,DEFAULT)
		//0x01b3		VoC_endloop0
0x41D20792,	//0x01b4		VoC_sub16_rd(REG2,REG2,0x41d2)
0x41D2079B,	//0x01b6		VoC_sub16_rd(REG3,REG3,0x41d2)
		//0x01b8		VoC_endloop1
0x41D30789,	//0x01b8		VoC_sub16_rd(REG1,REG1,0x41d3)
0xF5E97027,	//0x01ba		VoC_lw16i_short(FORMAT32,0xfffffffd,IN_PARALLEL)	|	VoC_lw16i_short(REG7,0x1,DEFAULT)
0x000E1482,	//0x01bc		VoC_lw32_d(REG45,0xe)
0x00110B3F,	//0x01be		VoC_sub16_dr(REG7,0x11,REG7)
0xF68543EC,	//0x01c0		VoC_movreg16(REG5,REG4,IN_PARALLEL)	|	VoC_sub16_rr(REG4,REG7,REG5,DEFAULT)
0x00021484,	//0x01c2		VoC_lw32_d(ACC0,0x2)
0x000A0E28,	//0x01c4		VoC_mac32_rd(REG5,0xa)
0xE0057F13,	//0x01c6		VoC_lw16i_short(REG5,0x0,IN_PARALLEL)	|	VoC_movreg32(REG67,REG45,DEFAULT)
0xF5F97BEA,	//0x01c8		VoC_lw16i_short(FORMAT32,0xffffffff,IN_PARALLEL)	|	VoC_shr32_ri(REG45,0xfffffffd,DEFAULT)
0x0A3DC914,	//0x01ca		VoC_multf32_rd(ACC1,REG7,0xa)(lo)	|	VoC_add32_rr(ACC0,ACC0,REG45,DEFAULT)
0x7007000A,	//0x01cc		VoC_lw16i_short(REG7,0x0,DEFAULT)	|	VoC_multf32_rd(ACC1,REG7,0xa)(hi)
0xFBF3F401,	//0x01ce		VoC_shr32_ri(REG67,0xfffffffe,DEFAULT)	|	VoC_lw16i_short(FORMAT32,0x0,IN_PARALLEL)
0x6C05C95D,	//0x01d0		VoC_bez16_d(YUV_ROTATE_dma_in_no_wait0,0x41d5)(lo)	|	VoC_add32_rr(ACC1,ACC1,REG67,DEFAULT)
0xFFC041D5,	//0x01d2		VoC_NAD	|	VoC_bez16_d(YUV_ROTATE_dma_in_no_wait0,0x41d5)(hi)
0x010C2B80,	//0x01d4		VoC_jal(YUV_ROTATE_WAIT_DMA_DONE)
		//0x01d6		YUV_ROTATE_dma_in_no_wait0
0x000A0A82,	//0x01d6		VoC_lw16i(REG2,0xa)
0x000A1400,	//0x01d8		VoC_lw16_d(REG0,0xa)
0xE0237101,	//0x01da		VoC_lw16i_short(REG3,0x2,IN_PARALLEL)	|	VoC_lw16i_short(REG1,0x8,DEFAULT)
0xE00E7810,	//0x01dc		VoC_lw16i_short(RL7_LO,0x0,IN_PARALLEL)	|	VoC_shr16_ri(REG0,0x2,DEFAULT)
0x0A8FC218,	//0x01de		VoC_lw16i(RL7_HI,0x5000)(lo)	|	VoC_sub16_rr(REG0,REG0,REG3,DEFAULT)
0xFFC05000,	//0x01e0		VoC_NAD	|	VoC_lw16i(RL7_HI,0x5000)(hi)
0x01002B80,	//0x01e2		VoC_jal(YUV_ROTATE_SEND_DMA_CMD)
0x010C2B80,	//0x01e4		VoC_jal(YUV_ROTATE_WAIT_DMA_DONE)
0x0004092C,	//0x01e6		VoC_add32_rd(ACC0,ACC1,0x4)
0x20D50A82,	//0x01e8		VoC_lw16i(REG2,0x20d5)
0x000A1400,	//0x01ea		VoC_lw16_d(REG0,0xa)
0xE0137081,	//0x01ec		VoC_lw16i_short(REG3,0x1,IN_PARALLEL)	|	VoC_lw16i_short(REG1,0x4,DEFAULT)
0xE00E7818,	//0x01ee		VoC_lw16i_short(RL7_LO,0x0,IN_PARALLEL)	|	VoC_shr16_ri(REG0,0x3,DEFAULT)
0x0A8FC218,	//0x01f0		VoC_lw16i(RL7_HI,0x5000)(lo)	|	VoC_sub16_rr(REG0,REG0,REG3,DEFAULT)
0xFFC05000,	//0x01f2		VoC_NAD	|	VoC_lw16i(RL7_HI,0x5000)(hi)
0x01002B80,	//0x01f4		VoC_jal(YUV_ROTATE_SEND_DMA_CMD)
0x010C2B80,	//0x01f6		VoC_jal(YUV_ROTATE_WAIT_DMA_DONE)
0x0006092C,	//0x01f8		VoC_add32_rd(ACC0,ACC1,0x6)
0x20DF0A82,	//0x01fa		VoC_lw16i(REG2,0x20df)
0x01002B80,	//0x01fc		VoC_jal(YUV_ROTATE_SEND_DMA_CMD)
0x010C2B80,	//0x01fe		VoC_jal(YUV_ROTATE_WAIT_DMA_DONE)
0x02742B00,	//0x0200		VoC_jump_lg(YUV_ROTATE_next_block)
		//0x0202		YUV_ROTATE_left_90
0x402A1808,	//0x0202		VoC_lw16i_set_inc(REG0,0x402a,0x2)
0x004C1FA1,	//0x0204		VoC_lw16i_set_inc(REG1,0x4c,0xfffffff8)
0x41B61FB2,	//0x0206		VoC_lw16i_set_inc(REG2,0x41b6,0xfffffffc)
0x41CA1FB3,	//0x0208		VoC_lw16i_set_inc(REG3,0x41ca,0xfffffffc)
0xFFC04028,	//0x020a		VoC_NAD(IN_PARALLEL)	|	VoC_add16_rr(REG0,REG0,REG5,DEFAULT)
0x022C2C09,	//0x020c		VoC_loop_i(0x1,0x4)
0x021A2C04,	//0x020e		VoC_loop_i(0x0,0x2)
0xD9C3D9C2,	//0x0210		VoC_lw32inc_p(REG67,REG0,DEFAULT)	|	VoC_lw32inc_p(REG45,REG0,DEFAULT)
0xD9C7D9C6,	//0x0212		VoC_lw32inc_p(RL7,REG0,DEFAULT)	|	VoC_lw32inc_p(RL6,REG0,DEFAULT)
0xDCB75C94,	//0x0214		VoC_sw16inc_p(REG7,REG3,IN_PARALLEL)	|	VoC_sw16inc_p(REG4,REG1,DEFAULT)
0xDCA55C96,	//0x0216		VoC_sw16inc_p(REG5,REG2,IN_PARALLEL)	|	VoC_sw16inc_p(REG6,REG1,DEFAULT)
0xDCBF5C9C,	//0x0218		VoC_sw16inc_p(RL7_HI,REG3,IN_PARALLEL)	|	VoC_sw16inc_p(RL6_LO,REG1,DEFAULT)
		//0x021a		VoC_endloop0
0xDCAD5C9E,	//0x021a		VoC_sw16inc_p(RL6_HI,REG2,IN_PARALLEL)	|	VoC_sw16inc_p(RL7_LO,REG1,DEFAULT)
0x41D30709,	//0x021c		VoC_add16_rd(REG1,REG1,0x41d3)
0x02272C04,	//0x021e		VoC_loop_i(0x0,0x2)
0xD885D884,	//0x0220		VoC_lw16inc_p(REG5,REG0,DEFAULT)	|	VoC_lw16inc_p(REG4,REG0,DEFAULT)
0xD8865C94,	//0x0222		VoC_lw16inc_p(REG6,REG0,IN_PARALLEL)	|	VoC_sw16inc_p(REG4,REG1,DEFAULT)
0xD8875C95,	//0x0224		VoC_lw16inc_p(REG7,REG0,IN_PARALLEL)	|	VoC_sw16inc_p(REG5,REG1,DEFAULT)
0xDC97DC96,	//0x0226		VoC_sw16inc_p(REG7,REG1,DEFAULT)	|	VoC_sw16inc_p(REG6,REG1,DEFAULT)
		//0x0227		VoC_endloop0
0x41D20712,	//0x0228		VoC_add16_rd(REG2,REG2,0x41d2)
0x41D2071B,	//0x022a		VoC_add16_rd(REG3,REG3,0x41d2)
		//0x022c		VoC_endloop1
0x41D30709,	//0x022c		VoC_add16_rd(REG1,REG1,0x41d3)
0xF5E97027,	//0x022e		VoC_lw16i_short(FORMAT32,0xfffffffd,IN_PARALLEL)	|	VoC_lw16i_short(REG7,0x1,DEFAULT)
0x000E1482,	//0x0230		VoC_lw32_d(REG45,0xe)
0x00100B3F,	//0x0232		VoC_sub16_dr(REG7,0x10,REG7)
0xF6A443E5,	//0x0234		VoC_movreg16(REG4,REG5,IN_PARALLEL)	|	VoC_sub16_rr(REG5,REG7,REG4,DEFAULT)
0x00021484,	//0x0236		VoC_lw32_d(ACC0,0x2)
0x000A0E28,	//0x0238		VoC_mac32_rd(REG5,0xa)
0xE0057F13,	//0x023a		VoC_lw16i_short(REG5,0x0,IN_PARALLEL)	|	VoC_movreg32(REG67,REG45,DEFAULT)
0xF5F97BEA,	//0x023c		VoC_lw16i_short(FORMAT32,0xffffffff,IN_PARALLEL)	|	VoC_shr32_ri(REG45,0xfffffffd,DEFAULT)
0x0A3DC914,	//0x023e		VoC_multf32_rd(ACC1,REG7,0xa)(lo)	|	VoC_add32_rr(ACC0,ACC0,REG45,DEFAULT)
0x7007000A,	//0x0240		VoC_lw16i_short(REG7,0x0,DEFAULT)	|	VoC_multf32_rd(ACC1,REG7,0xa)(hi)
0xFBF3F401,	//0x0242		VoC_shr32_ri(REG67,0xfffffffe,DEFAULT)	|	VoC_lw16i_short(FORMAT32,0x0,IN_PARALLEL)
0x6C05C95D,	//0x0244		VoC_bez16_d(YUV_ROTATE_dma_in_no_wait1,0x41d5)(lo)	|	VoC_add32_rr(ACC1,ACC1,REG67,DEFAULT)
0xFFC041D5,	//0x0246		VoC_NAD	|	VoC_bez16_d(YUV_ROTATE_dma_in_no_wait1,0x41d5)(hi)
0x010C2B80,	//0x0248		VoC_jal(YUV_ROTATE_WAIT_DMA_DONE)
		//0x024a		YUV_ROTATE_dma_in_no_wait1
0x000A0A82,	//0x024a		VoC_lw16i(REG2,0xa)
0x000A1400,	//0x024c		VoC_lw16_d(REG0,0xa)
0xE0237101,	//0x024e		VoC_lw16i_short(REG3,0x2,IN_PARALLEL)	|	VoC_lw16i_short(REG1,0x8,DEFAULT)
0xE00E7810,	//0x0250		VoC_lw16i_short(RL7_LO,0x0,IN_PARALLEL)	|	VoC_shr16_ri(REG0,0x2,DEFAULT)
0x0A8FC218,	//0x0252		VoC_lw16i(RL7_HI,0x5000)(lo)	|	VoC_sub16_rr(REG0,REG0,REG3,DEFAULT)
0xFFC05000,	//0x0254		VoC_NAD	|	VoC_lw16i(RL7_HI,0x5000)(hi)
0x01002B80,	//0x0256		VoC_jal(YUV_ROTATE_SEND_DMA_CMD)
0x010C2B80,	//0x0258		VoC_jal(YUV_ROTATE_WAIT_DMA_DONE)
0x0004092C,	//0x025a		VoC_add32_rd(ACC0,ACC1,0x4)
0x20D50A82,	//0x025c		VoC_lw16i(REG2,0x20d5)
0x000A1400,	//0x025e		VoC_lw16_d(REG0,0xa)
0xE0137081,	//0x0260		VoC_lw16i_short(REG3,0x1,IN_PARALLEL)	|	VoC_lw16i_short(REG1,0x4,DEFAULT)
0xE00E7818,	//0x0262		VoC_lw16i_short(RL7_LO,0x0,IN_PARALLEL)	|	VoC_shr16_ri(REG0,0x3,DEFAULT)
0x0A8FC218,	//0x0264		VoC_lw16i(RL7_HI,0x5000)(lo)	|	VoC_sub16_rr(REG0,REG0,REG3,DEFAULT)
0xFFC05000,	//0x0266		VoC_NAD	|	VoC_lw16i(RL7_HI,0x5000)(hi)
0x01002B80,	//0x0268		VoC_jal(YUV_ROTATE_SEND_DMA_CMD)
0x010C2B80,	//0x026a		VoC_jal(YUV_ROTATE_WAIT_DMA_DONE)
0x0006092C,	//0x026c		VoC_add32_rd(ACC0,ACC1,0x6)
0x20DF0A82,	//0x026e		VoC_lw16i(REG2,0x20df)
0x01002B80,	//0x0270		VoC_jal(YUV_ROTATE_SEND_DMA_CMD)
0x010C2B80,	//0x0272		VoC_jal(YUV_ROTATE_WAIT_DMA_DONE)
		//0x0274		YUV_ROTATE_next_block
0x0724F024,	//0x0274		VoC_add16_rd(REG4,REG4,0x12)(lo)	|	VoC_lw16i_short(REG4,0x1,DEFAULT)
0xFFC00012,	//0x0276		VoC_NOP	|	VoC_add16_rd(REG4,REG4,0x12)(hi)
0x00121504,	//0x0278		VoC_sw16_d(REG4,0x12)
0x01482B00,	//0x027a		VoC_jump_lg(YUV_ROTATE_loop_start)
		//0x027c		YUV_ROTATE_end
0xFFC0DFA9,	//0x027c		VoC_NOP	|	VoC_pop16(RA,DEFAULT)
0xFFC06580,	//0x027e		VoC_NAD(IN_PARALLEL)	|	VoC_return
		//0x0280		VOC_RGB565_rotate
0xFF475FE9,	//0x0280		VoC_lw32z(RL7,IN_PARALLEL)	|	VoC_push16(RA,DEFAULT)
0xE0157024,	//0x0282		VoC_lw16i_short(REG5,0x1,IN_PARALLEL)	|	VoC_lw16i_short(REG4,0x1,DEFAULT)
0xF405701C,	//0x0284		VoC_lw16i_short(WRAP1,0x0,IN_PARALLEL)	|	VoC_lw16i_short(WRAP0,0x0,DEFAULT)
0xF407701E,	//0x0286		VoC_lw16i_short(WRAP3,0x0,IN_PARALLEL)	|	VoC_lw16i_short(WRAP2,0x0,DEFAULT)
0x00681480,	//0x0288		VoC_lw32_d(REG01,0x68)
0x6020FF03,	//0x028a		VoC_movreg16(REG0,REG1,DEFAULT)	|	VoC_movreg32(REG67,REG01,DEFAULT)
0x781EF601,	//0x028c		VoC_shr16_ri(REG6,0x3,DEFAULT)	|	VoC_movreg16(REG1,REG0,IN_PARALLEL)
0x1580F81F,	//0x028e		VoC_sw32_d(REG01,0x6a)(lo)	|	VoC_shr16_ri(REG7,0x3,IN_PARALLEL)
0x1583006A,	//0x0290		VoC_sw32_d(REG67,0x70)(lo)	|	VoC_sw32_d(REG01,0x6a)(hi)
0xC5BE0070,	//0x0292		VoC_mult16_rr(REG6,REG6,REG7,DEFAULT)	|	VoC_sw32_d(REG67,0x70)(hi)
0x006E1587,	//0x0294		VoC_sw32_d(RL7,0x6e)
0x0072150E,	//0x0296		VoC_sw16_d(RL7_LO,0x72)
0x42961582,	//0x0298		VoC_sw32_d(REG45,0x4296)
0x00731506,	//0x029a		VoC_sw16_d(REG6,0x73)
0x006D1400,	//0x029c		VoC_lw16_d(REG0,0x6d)
0x00641484,	//0x029e		VoC_lw32_d(ACC0,0x64)
0xE0817808,	//0x02a0		VoC_lw16i_short(REG1,0x8,IN_PARALLEL)	|	VoC_shr16_ri(REG0,0x1,DEFAULT)
0x20EB0A82,	//0x02a2		VoC_lw16i(REG2,0x20eb)
0xFF477083,	//0x02a4		VoC_lw32z(RL7,IN_PARALLEL)	|	VoC_lw16i_short(REG3,0x4,DEFAULT)
0xFFC04218,	//0x02a6		VoC_NAD(IN_PARALLEL)	|	VoC_sub16_rr(REG0,REG0,REG3,DEFAULT)
0x01002B80,	//0x02a8		VoC_jal(YUV_ROTATE_SEND_DMA_CMD)
0x010C2B80,	//0x02aa		VoC_jal(YUV_ROTATE_WAIT_DMA_DONE)
		//0x02ac		rgb_rotate_loop_start
0x00721404,	//0x02ac		VoC_lw16_d(REG4,0x72)
0x00734824,	//0x02ae		VoC_blt16_rd(rgb_rotate_mba_lt_mbamax,REG4,0x73)
0x03822B00,	//0x02b0		VoC_jump_lg(rgb_rotate_end)
		//0x02b2		rgb_rotate_mba_lt_mbamax
0x00001805,	//0x02b2		VoC_lw16i_set_inc(REG1,0x0,0x1)
0x00721400,	//0x02b4		VoC_lw16_d(REG0,0x72)
0x00701403,	//0x02b6		VoC_lw16_d(REG3,0x70)
0xF5E16005,	//0x02b8		VoC_lw16i_short(FORMAT32,0xfffffffc,IN_PARALLEL)	|	VoC_movreg16(REG5,REG0,DEFAULT)
		//0x02ba		rgb_rotate_mba_loop
0xF6A0435D,	//0x02ba		VoC_movreg16(REG0,REG5,IN_PARALLEL)	|	VoC_sub16_rr(REG5,REG5,REG3,DEFAULT)
0x00704820,	//0x02bc		VoC_blt16_rd(rgb_rotate_mba_loop_end,REG0,0x70)
0xE5FBDE08,	//0x02be		VoC_jump(rgb_rotate_mba_loop)	|	VoC_inc_p(REG1,DEFAULT)
		//0x02c0		rgb_rotate_mba_loop_end
0xE0137030,	//0x02c0		VoC_lw16i_short(REG3,0x1,IN_PARALLEL)	|	VoC_lw16i_short(INC0,0x1,DEFAULT)
0x006E1580,	//0x02c2		VoC_sw32_d(REG01,0x6e)
0x00641484,	//0x02c4		VoC_lw32_d(ACC0,0x64)
0xDE00411C,	//0x02c6		VoC_inc_p(REG0,IN_PARALLEL)	|	VoC_add16_rr(REG4,REG4,REG3,DEFAULT)
0x00704890,	//0x02c8		VoC_blt16_rd(rgb_rotate_dma_next,REG0,0x70)
0xE0005E08,	//0x02ca		VoC_lw16i_short(REG0,0x0,IN_PARALLEL)	|	VoC_inc_p(REG1,DEFAULT)
0x00714831,	//0x02cc		VoC_blt16_rd(rgb_rotate_dma_next,REG1,0x71)
0x42961500,	//0x02ce		VoC_sw16_d(REG0,0x4296)
0xFFC065D8,	//0x02d0		VoC_NAD(IN_PARALLEL)	|	VoC_jump(rgb_rotate_dma_over)
		//0x02d2		rgb_rotate_dma_next
0x00011604,	//0x02d2		VoC_and16_ri(REG4,0x1)
0x006D0E08,	//0x02d4		VoC_mac32_rd(REG1,0x6d)
0xF4017001,	//0x02d6		VoC_lw16i_short(FORMAT32,0x0,IN_PARALLEL)	|	VoC_lw16i_short(REG1,0x0,DEFAULT)
0xF8DC7BE0,	//0x02d8		VoC_shr16_ri(REG4,0xfffffffb,IN_PARALLEL)	|	VoC_shr32_ri(REG01,0xfffffffc,DEFAULT)
0x1400C904,	//0x02da		VoC_lw16_d(REG0,0x6d)(lo)	|	VoC_add32_rr(ACC0,ACC0,REG01,DEFAULT)
0x0A82006D,	//0x02dc		VoC_lw16i(REG2,0x20eb)(lo)	|	VoC_lw16_d(REG0,0x6d)(hi)
0x710120EB,	//0x02de		VoC_lw16i_short(REG1,0x8,DEFAULT)	|	VoC_lw16i(REG2,0x20eb)(hi)
0x7083F808,	//0x02e0		VoC_lw16i_short(REG3,0x4,DEFAULT)	|	VoC_shr16_ri(REG0,0x1,IN_PARALLEL)
0x4218C0A2,	//0x02e2		VoC_sub16_rr(REG0,REG0,REG3,DEFAULT)	|	VoC_add16_rr(REG2,REG2,REG4,IN_PARALLEL)
0xFFC0FF47,	//0x02e4		VoC_NAD	|	VoC_lw32z(RL7,IN_PARALLEL)
0x01002B80,	//0x02e6		VoC_jal(YUV_ROTATE_SEND_DMA_CMD)
		//0x02e8		rgb_rotate_dma_over
0x00721405,	//0x02e8		VoC_lw16_d(REG5,0x72)
0x006C1404,	//0x02ea		VoC_lw16_d(REG4,0x6c)
0x00011605,	//0x02ec		VoC_and16_ri(REG5,0x1)
0x3204F8D5,	//0x02ee		VoC_bltz16_r(rgb_rotate_left_90,REG4)(lo)	|	VoC_shr16_ri(REG5,0xfffffffa,DEFAULT)
0x1808033A,	//0x02f0		VoC_lw16i_set_inc(REG0,0x41d6,0x2)(lo)	|	VoC_bltz16_r(rgb_rotate_left_90,REG4)(hi)
0x180941D6,	//0x02f2		VoC_lw16i_set_inc(REG1,0x41de,0x2)(lo)	|	VoC_lw16i_set_inc(REG0,0x41d6,0x2)(hi)
0x182241DE,	//0x02f4		VoC_lw16i_set_inc(REG2,0x7a,0x8)(lo)	|	VoC_lw16i_set_inc(REG1,0x41de,0x2)(hi)
0x4028007A,	//0x02f6		VoC_add16_rr(REG0,REG0,REG5,DEFAULT)	|	VoC_lw16i_set_inc(REG2,0x7a,0x8)(hi)
0xFFC0C069,	//0x02f8		VoC_NAD	|	VoC_add16_rr(REG1,REG1,REG5,IN_PARALLEL)
0x030E2C09,	//0x02fa		VoC_loop_i(0x1,0x4)
0x03092C04,	//0x02fc		VoC_loop_i(0x0,0x2)
0xD9CAD9C3,	//0x02fe		VoC_lw32inc_p(REG45,REG1,DEFAULT)	|	VoC_lw32inc_p(REG67,REG0,DEFAULT)
0xD9CED9C7,	//0x0300		VoC_lw32inc_p(RL6,REG1,DEFAULT)	|	VoC_lw32inc_p(RL7,REG0,DEFAULT)
0xF6A660C5,	//0x0302		VoC_movreg16(REG6,REG5,IN_PARALLEL)	|	VoC_movreg16(REG5,REG6,DEFAULT)
0xF7AE61CD,	//0x0304		VoC_movreg16(RL7_LO,RL6_HI,IN_PARALLEL)	|	VoC_movreg16(RL6_HI,RL7_LO,DEFAULT)
0xDDD3DDD2,	//0x0306		VoC_sw32inc_p(REG67,REG2,DEFAULT)	|	VoC_sw32inc_p(REG45,REG2,DEFAULT)
0xDDD7DDD6,	//0x0308		VoC_sw32inc_p(RL7,REG2,DEFAULT)	|	VoC_sw32inc_p(RL6,REG2,DEFAULT)
		//0x0309		VoC_endloop0
0x00420A84,	//0x030a		VoC_lw16i(REG4,0x42)
0xC2A27105,	//0x030c		VoC_sub16_rr(REG2,REG2,REG4,IN_PARALLEL)	|	VoC_lw16i_short(REG5,0x8,DEFAULT)
		//0x030e		VoC_endloop1
0xC0694028,	//0x030e		VoC_add16_rr(REG1,REG1,REG5,IN_PARALLEL)	|	VoC_add16_rr(REG0,REG0,REG5,DEFAULT)
0xF5E17027,	//0x0310		VoC_lw16i_short(FORMAT32,0xfffffffc,IN_PARALLEL)	|	VoC_lw16i_short(REG7,0x1,DEFAULT)
0x006E1482,	//0x0312		VoC_lw32_d(REG45,0x6e)
0x00710B3F,	//0x0314		VoC_sub16_dr(REG7,0x71,REG7)
0xF68543EC,	//0x0316		VoC_movreg16(REG5,REG4,IN_PARALLEL)	|	VoC_sub16_rr(REG4,REG7,REG5,DEFAULT)
0x00661484,	//0x0318		VoC_lw32_d(ACC0,0x66)
0x006A0E28,	//0x031a		VoC_mac32_rd(REG5,0x6a)
0xF4017005,	//0x031c		VoC_lw16i_short(FORMAT32,0x0,IN_PARALLEL)	|	VoC_lw16i_short(REG5,0x0,DEFAULT)
0xC914FBE2,	//0x031e		VoC_add32_rr(ACC0,ACC0,REG45,DEFAULT)	|	VoC_shr32_ri(REG45,0xfffffffc,DEFAULT)
0x42966C04,	//0x0320		VoC_bez16_d(rgb_rotate_dma_no_waiting0,0x4296)
0x010C2B80,	//0x0322		VoC_jal(YUV_ROTATE_WAIT_DMA_DONE)
		//0x0324		rgb_rotate_dma_no_waiting0
0x006A1400,	//0x0324		VoC_lw16_d(REG0,0x6a)
0x003A0A82,	//0x0326		VoC_lw16i(REG2,0x3a)
0xE0147808,	//0x0328		VoC_lw16i_short(REG4,0x1,IN_PARALLEL)	|	VoC_shr16_ri(REG0,0x1,DEFAULT)
0x00720724,	//0x032a		VoC_add16_rd(REG4,REG4,0x72)
0xE0437101,	//0x032c		VoC_lw16i_short(REG3,0x4,IN_PARALLEL)	|	VoC_lw16i_short(REG1,0x8,DEFAULT)
0xE00E4218,	//0x032e		VoC_lw16i_short(RL7_LO,0x0,IN_PARALLEL)	|	VoC_sub16_rr(REG0,REG0,REG3,DEFAULT)
0x00721504,	//0x0330		VoC_sw16_d(REG4,0x72)
0x40000A8F,	//0x0332		VoC_lw16i(RL7_HI,0x4000)
0x01002B80,	//0x0334		VoC_jal(YUV_ROTATE_SEND_DMA_CMD)
0x010C2B80,	//0x0336		VoC_jal(YUV_ROTATE_WAIT_DMA_DONE)
0x02AC2B00,	//0x0338		VoC_jump_lg(rgb_rotate_loop_start)
		//0x033a		rgb_rotate_left_90
0x41D61808,	//0x033a		VoC_lw16i_set_inc(REG0,0x41d6,0x2)
0x41DE1809,	//0x033c		VoC_lw16i_set_inc(REG1,0x41de,0x2)
0x00AC1FA2,	//0x033e		VoC_lw16i_set_inc(REG2,0xac,0xfffffff8)
0xC0694028,	//0x0340		VoC_add16_rr(REG1,REG1,REG5,IN_PARALLEL)	|	VoC_add16_rr(REG0,REG0,REG5,DEFAULT)
0x03562C09,	//0x0342		VoC_loop_i(0x1,0x4)
0x03512C04,	//0x0344		VoC_loop_i(0x0,0x2)
0xD9CBD9C2,	//0x0346		VoC_lw32inc_p(REG67,REG1,DEFAULT)	|	VoC_lw32inc_p(REG45,REG0,DEFAULT)
0xD9CFD9C6,	//0x0348		VoC_lw32inc_p(RL7,REG1,DEFAULT)	|	VoC_lw32inc_p(RL6,REG0,DEFAULT)
0xF6A660C5,	//0x034a		VoC_movreg16(REG6,REG5,IN_PARALLEL)	|	VoC_movreg16(REG5,REG6,DEFAULT)
0xF7AE61CD,	//0x034c		VoC_movreg16(RL7_LO,RL6_HI,IN_PARALLEL)	|	VoC_movreg16(RL6_HI,RL7_LO,DEFAULT)
0xDDD3DDD2,	//0x034e		VoC_sw32inc_p(REG67,REG2,DEFAULT)	|	VoC_sw32inc_p(REG45,REG2,DEFAULT)
0xDDD7DDD6,	//0x0350		VoC_sw32inc_p(RL7,REG2,DEFAULT)	|	VoC_sw32inc_p(RL6,REG2,DEFAULT)
		//0x0351		VoC_endloop0
0x00420A84,	//0x0352		VoC_lw16i(REG4,0x42)
0xC0A27105,	//0x0354		VoC_add16_rr(REG2,REG2,REG4,IN_PARALLEL)	|	VoC_lw16i_short(REG5,0x8,DEFAULT)
		//0x0356		VoC_endloop1
0xC0694028,	//0x0356		VoC_add16_rr(REG1,REG1,REG5,IN_PARALLEL)	|	VoC_add16_rr(REG0,REG0,REG5,DEFAULT)
0xF5E17027,	//0x0358		VoC_lw16i_short(FORMAT32,0xfffffffc,IN_PARALLEL)	|	VoC_lw16i_short(REG7,0x1,DEFAULT)
0x006E1482,	//0x035a		VoC_lw32_d(REG45,0x6e)
0x00700B3F,	//0x035c		VoC_sub16_dr(REG7,0x70,REG7)
0xC3E560A4,	//0x035e		VoC_sub16_rr(REG5,REG7,REG4,IN_PARALLEL)	|	VoC_movreg16(REG4,REG5,DEFAULT)
0x00661484,	//0x0360		VoC_lw32_d(ACC0,0x66)
0x006A0E28,	//0x0362		VoC_mac32_rd(REG5,0x6a)
0xF4017005,	//0x0364		VoC_lw16i_short(FORMAT32,0x0,IN_PARALLEL)	|	VoC_lw16i_short(REG5,0x0,DEFAULT)
0xC914FBE2,	//0x0366		VoC_add32_rr(ACC0,ACC0,REG45,DEFAULT)	|	VoC_shr32_ri(REG45,0xfffffffc,DEFAULT)
0x42966C04,	//0x0368		VoC_bez16_d(rgb_rotate_no_wait_last_dma,0x4296)
0x010C2B80,	//0x036a		VoC_jal(YUV_ROTATE_WAIT_DMA_DONE)
		//0x036c		rgb_rotate_no_wait_last_dma
0x006A1400,	//0x036c		VoC_lw16_d(REG0,0x6a)
0x003A0A82,	//0x036e		VoC_lw16i(REG2,0x3a)
0xE0147808,	//0x0370		VoC_lw16i_short(REG4,0x1,IN_PARALLEL)	|	VoC_shr16_ri(REG0,0x1,DEFAULT)
0x00720724,	//0x0372		VoC_add16_rd(REG4,REG4,0x72)
0xE0437101,	//0x0374		VoC_lw16i_short(REG3,0x4,IN_PARALLEL)	|	VoC_lw16i_short(REG1,0x8,DEFAULT)
0xE00E4218,	//0x0376		VoC_lw16i_short(RL7_LO,0x0,IN_PARALLEL)	|	VoC_sub16_rr(REG0,REG0,REG3,DEFAULT)
0x00721504,	//0x0378		VoC_sw16_d(REG4,0x72)
0x40000A8F,	//0x037a		VoC_lw16i(RL7_HI,0x4000)
0x01002B80,	//0x037c		VoC_jal(YUV_ROTATE_SEND_DMA_CMD)
0x010C2B80,	//0x037e		VoC_jal(YUV_ROTATE_WAIT_DMA_DONE)
0x02AC2B00,	//0x0380		VoC_jump_lg(rgb_rotate_loop_start)
		//0x0382		rgb_rotate_end
0xFFC0DFA9,	//0x0382		VoC_NOP	|	VoC_pop16(RA,DEFAULT)
0xFFC0E580,	//0x0384		VoC_NAD	|	VoC_return
