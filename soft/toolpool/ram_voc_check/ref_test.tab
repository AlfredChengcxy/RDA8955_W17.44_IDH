		//0x0000		VoC_code_section_0
		//0x0000		voc2_nonreg_test
0x01981584,	//0x0000		VoC_sw32_d(ACC0,0x198)
0x019A1585,	//0x0002		VoC_sw32_d(ACC1,0x19a)
0x40000A81,	//0x0004		VoC_lw16i(REG1,0x4000)
0x00000A82,	//0x0006		VoC_lw16i(REG2,0x0)
0xF0067031,	//0x0008		VoC_lw16i_short(INC2,0x1,IN_PARALLEL)	|	VoC_lw16i_short(INC1,0x1,DEFAULT)
0x00112D90,	//0x000a		VoC_loop_i(0x0,0xc8)
0xFFC0E043,	//0x000c		VoC_NOP	|	VoC_movreg16(REG3,REG2,DEFAULT)
0xE023DCA3,	//0x000e		VoC_movreg16(REG3,REG1,DEFAULT)	|	VoC_sw16inc_p(REG3,REG2,DEFAULT)
0xDC93FFC0,	//0x0010		VoC_sw16inc_p(REG3,REG1,DEFAULT)	|	VoC_NOP
		//0x0011		VoC_endloop0
0x00010A82,	//0x0012		VoC_lw16i(REG2,0x1)
0x1502FFC0,	//0x0014		VoC_sw16_d(REG2,0x197)(lo)	|	VoC_NOP
0x15020197,	//0x0016		VoC_sw16_d(REG2,0x196)(lo)	|	VoC_sw16_d(REG2,0x197)(hi)
0xF7F80196,	//0x0018		VoC_lw16i_short(FORMAT16,0xffffffff,DEFAULT)	|	VoC_sw16_d(REG2,0x196)(hi)
0x0A81F7F9,	//0x001a		VoC_lw16i(REG1,0x2)(lo)	|	VoC_lw16i_short(FORMAT32,0xffffffff,DEFAULT)
0x0A820002,	//0x001c		VoC_lw16i(REG2,0x1)(lo)	|	VoC_lw16i(REG1,0x2)(hi)
0xC2510001,	//0x001e		VoC_sub16_rr(REG1,REG1,REG2,DEFAULT)	|	VoC_lw16i(REG2,0x1)(hi)
		//0x001f		LABEL_JUMP_BACK
0x00243181,	//0x0020		VoC_bez16_r(LABEL_START,REG1)
0xFFC065FD,	//0x0022		VoC_NAD(IN_PARALLEL)	|	VoC_jump(LABEL_JUMP_BACK)
		//0x0024		LABEL_START
0x17452B80,	//0x0024		VoC_jal(push_all)
0x0A80E022,	//0x0026		VoC_lw16i(REG0,0x0)(lo)	|	VoC_movreg16(REG2,REG1,DEFAULT)
0x2B800000,	//0x0028		VoC_jal(result_check16)(lo)	|	VoC_lw16i(REG0,0x0)(hi)
0xF03016B0,	//0x002a		VoC_lw16i_short(INC0,0x1,DEFAULT)	|	VoC_jal(result_check16)(hi)
0x40020A80,	//0x002c		VoC_lw16i(REG0,0x4002)
0x40030A81,	//0x002e		VoC_lw16i(REG1,0x4003)
0xD501FF44,	//0x0030		VoC_bimac32inc_pp(REG0,REG1)	|	VoC_lw32z(ACC0,DEFAULT)
0x17452B80,	//0x0032		VoC_jal(push_all)
0x0A80E102,	//0x0034		VoC_lw16i(REG0,0x18)(lo)	|	VoC_movreg16(REG2,ACC0_LO,DEFAULT)
0x2B800018,	//0x0036		VoC_jal(result_check16)(lo)	|	VoC_lw16i(REG0,0x18)(hi)
0xF00016B0,	//0x0038		VoC_lw16i_short(REG0,0x0,DEFAULT)	|	VoC_jal(result_check16)(hi)
0x40010A81,	//0x003a		VoC_lw16i(REG1,0x4001)
0x00011806,	//0x003c		VoC_lw16i_set_inc(REG2,0x1,0x1)
0x7FFF0AC2,	//0x003e		VoC_lw16i(REG2,0xffffffff)
0xDE10FFC0,	//0x0040		VoC_inc_p(REG2,DEFAULT)	|	VoC_NOP
0x40000A83,	//0x0042		VoC_lw16i(REG3,0x4000)
0x6051F030,	//0x0044		VoC_movreg16(INC1,REG2,DEFAULT)	|	VoC_lw16i_short(INC0,0x1,DEFAULT)
0x0057F007,	//0x0046		VoC_add16_rp(REG7,REG1,REG2,DEFAULT)	|	VoC_lw16i_short(INC3,0x1,IN_PARALLEL)
0x03D7805E,	//0x0048		VoC_add16inc_rp(REG7,REG7,REG2,DEFAULT)	|	VoC_add16_rp(REG6,REG1,REG3,IN_PARALLEL)
0x05D7839E,	//0x004a		VoC_sub16_rp(REG7,REG7,REG2,DEFAULT)	|	VoC_add16inc_rp(REG6,REG6,REG3,IN_PARALLEL)
0x07D7859E,	//0x004c		VoC_sub16inc_rp(REG7,REG7,REG2,DEFAULT)	|	VoC_sub16_rp(REG6,REG6,REG3,IN_PARALLEL)
0x09D7879E,	//0x004e		VoC_mult16_rp(REG7,REG7,REG2,DEFAULT)	|	VoC_sub16inc_rp(REG6,REG6,REG3,IN_PARALLEL)
0xFFC0899E,	//0x0050		VoC_NOP	|	VoC_mult16_rp(REG6,REG6,REG3,IN_PARALLEL)
0x8B9E0BD7,	//0x0052		VoC_mult16inc_rp(REG6,REG6,REG3,IN_PARALLEL)	|	VoC_mult16inc_rp(REG7,REG7,REG2,DEFAULT)
0x0DD7FFC0,	//0x0054		VoC_multf16_rp(REG7,REG7,REG2,DEFAULT)	|	VoC_NOP
0xFFC08D9E,	//0x0056		VoC_NOP	|	VoC_multf16_rp(REG6,REG6,REG3,IN_PARALLEL)
0x8F9E0FD7,	//0x0058		VoC_multf16inc_rp(REG6,REG6,REG3,IN_PARALLEL)	|	VoC_multf16inc_rp(REG7,REG7,REG2,DEFAULT)
0x17452B80,	//0x005a		VoC_jal(push_all)
0x0AC0FF19,	//0x005c		VoC_lw16i(REG0,0xdffc)(lo)	|	VoC_movreg32(REG23,REG67,DEFAULT)
0x0A815FFC,	//0x005e		VoC_lw16i(REG1,0x0)(lo)	|	VoC_lw16i(REG0,0xdffc)(hi)
0xFFC00000,	//0x0060		VoC_NAD	|	VoC_lw16i(REG1,0x0)(hi)
0x168C2B80,	//0x0062		VoC_jal(result_check32)
0xF00B7052,	//0x0064		VoC_lw16i_short(INC3,0x2,IN_PARALLEL)	|	VoC_lw16i_short(INC2,0x2,DEFAULT)
0x901A1013,	//0x0066		VoC_add32_rp(REG45,REG01,REG3,IN_PARALLEL)	|	VoC_add32_rp(REG67,REG01,REG2,DEFAULT)
0x929A12D3,	//0x0068		VoC_add32inc_rp(REG45,REG45,REG3,IN_PARALLEL)	|	VoC_add32inc_rp(REG67,REG67,REG2,DEFAULT)
0x949A14D3,	//0x006a		VoC_sub32_rp(REG45,REG45,REG3,IN_PARALLEL)	|	VoC_sub32_rp(REG67,REG67,REG2,DEFAULT)
0x969A16D3,	//0x006c		VoC_sub32inc_rp(REG45,REG45,REG3,IN_PARALLEL)	|	VoC_sub32inc_rp(REG67,REG67,REG2,DEFAULT)
0x17452B80,	//0x006e		VoC_jal(push_all)
0x0AC0FF19,	//0x0070		VoC_lw16i(REG0,0xfffc)(lo)	|	VoC_movreg32(REG23,REG67,DEFAULT)
0x0A817FFC,	//0x0072		VoC_lw16i(REG1,0x3ffc)(lo)	|	VoC_lw16i(REG0,0xfffc)(hi)
0xFFC03FFC,	//0x0074		VoC_NAD	|	VoC_lw16i(REG1,0x3ffc)(hi)
0x168C2B80,	//0x0076		VoC_jal(result_check32)
0x17452B80,	//0x0078		VoC_jal(push_all)
0x0A80FF11,	//0x007a		VoC_lw16i(REG0,0x7ff3)(lo)	|	VoC_movreg32(REG23,REG45,DEFAULT)
0x0AC17FF3,	//0x007c		VoC_lw16i(REG1,0xfff1)(lo)	|	VoC_lw16i(REG0,0x7ff3)(hi)
0xFFC07FF1,	//0x007e		VoC_NAD	|	VoC_lw16i(REG1,0xfff1)(hi)
0x168C2B80,	//0x0080		VoC_jal(result_check32)
0x00010A81,	//0x0082		VoC_lw16i(REG1,0x1)
0xFF427F43,	//0x0084		VoC_lw32z(REG45,IN_PARALLEL)	|	VoC_lw32z(REG67,DEFAULT)
0x985F1856,	//0x0086		VoC_multf32_rp(RL7,REG1,REG3,IN_PARALLEL)	|	VoC_multf32_rp(RL6,REG1,REG2,DEFAULT)
0x48F3FFC0,	//0x0088		VoC_add32_rr(REG67,REG67,RL6,DEFAULT)	|	VoC_NOP
0x1A56C9D2,	//0x008a		VoC_multf32inc_rp(RL6,REG1,REG2,DEFAULT)	|	VoC_add32_rr(REG45,RL7,REG45,IN_PARALLEL)
0xFFC09A5F,	//0x008c		VoC_NOP	|	VoC_multf32inc_rp(RL7,REG1,REG3,IN_PARALLEL)
0xC9D248F3,	//0x008e		VoC_add32_rr(REG45,RL7,REG45,IN_PARALLEL)	|	VoC_add32_rr(REG67,REG67,RL6,DEFAULT)
0x7F449E9E,	//0x0090		VoC_lw32z(ACC0,DEFAULT)	|	VoC_multf32inc_pp(RL6,REG2,REG3,DEFAULT)
0xFFC09E9F,	//0x0092		VoC_NOP	|	VoC_multf32inc_pp(RL7,REG2,REG3,IN_PARALLEL)
0xC9D248F3,	//0x0094		VoC_add32_rr(REG45,RL7,REG45,IN_PARALLEL)	|	VoC_add32_rr(REG67,REG67,RL6,DEFAULT)
0xFF441C9E,	//0x0096		VoC_lw32z(ACC0,IN_PARALLEL)	|	VoC_multf32_pp(RL6,REG2,REG3,DEFAULT)
0x48F3FFC0,	//0x0098		VoC_add32_rr(REG67,REG67,RL6,DEFAULT)	|	VoC_NOP
0xFFC09C9F,	//0x009a		VoC_NOP	|	VoC_multf32_pp(RL7,REG2,REG3,IN_PARALLEL)
0x2B80C9D2,	//0x009c		VoC_jal(push_all)(lo)	|	VoC_add32_rr(REG45,RL7,REG45,DEFAULT)
0xFF191745,	//0x009e		VoC_movreg32(REG23,REG67,DEFAULT)	|	VoC_jal(push_all)(hi)
0x02700A80,	//0x00a0		VoC_lw16i(REG0,0x270)
0x000C0A81,	//0x00a2		VoC_lw16i(REG1,0xc)
0x168C2B80,	//0x00a4		VoC_jal(result_check32)
0x17452B80,	//0x00a6		VoC_jal(push_all)
0x0A80FF11,	//0x00a8		VoC_lw16i(REG0,0x2c8)(lo)	|	VoC_movreg32(REG23,REG45,DEFAULT)
0x0A8102C8,	//0x00aa		VoC_lw16i(REG1,0xe)(lo)	|	VoC_lw16i(REG0,0x2c8)(hi)
0x2B80000E,	//0x00ac		VoC_jal(result_check32)(lo)	|	VoC_lw16i(REG1,0xe)(hi)
0xFF40168C,	//0x00ae		VoC_lw32z(REG01,DEFAULT)	|	VoC_jal(result_check32)(hi)
0x4180A09E,	//0x00b0		VoC_add16_rr(REG0,REG6,REG0,DEFAULT)	|	VoC_add16_pp(REG6,REG2,REG3,DEFAULT)
0x229EA09F,	//0x00b2		VoC_add16inc_pp(REG6,REG2,REG3,DEFAULT)	|	VoC_add16_pp(REG7,REG2,REG3,IN_PARALLEL)
0x4180C1C9,	//0x00b4		VoC_add16_rr(REG0,REG6,REG0,DEFAULT)	|	VoC_add16_rr(REG1,REG7,REG1,IN_PARALLEL)
0x249EA2D7,	//0x00b6		VoC_sub16_pp(REG6,REG2,REG3,DEFAULT)	|	VoC_add16inc_pp(REG7,REG3,REG2,IN_PARALLEL)
0x4180C1C9,	//0x00b8		VoC_add16_rr(REG0,REG6,REG0,DEFAULT)	|	VoC_add16_rr(REG1,REG7,REG1,IN_PARALLEL)
0x269EA49F,	//0x00ba		VoC_sub16inc_pp(REG6,REG2,REG3,DEFAULT)	|	VoC_sub16_pp(REG7,REG2,REG3,IN_PARALLEL)
0x4180C1C9,	//0x00bc		VoC_add16_rr(REG0,REG6,REG0,DEFAULT)	|	VoC_add16_rr(REG1,REG7,REG1,IN_PARALLEL)
0x289EA6D7,	//0x00be		VoC_mult16_pp(REG6,REG2,REG3,DEFAULT)	|	VoC_sub16inc_pp(REG7,REG3,REG2,IN_PARALLEL)
0xFFC0C1C9,	//0x00c0		VoC_NOP	|	VoC_add16_rr(REG1,REG7,REG1,IN_PARALLEL)
0xA89F4180,	//0x00c2		VoC_mult16_pp(REG7,REG2,REG3,IN_PARALLEL)	|	VoC_add16_rr(REG0,REG6,REG0,DEFAULT)
0x17452B80,	//0x00c4		VoC_jal(push_all)
0x0A80FF01,	//0x00c6		VoC_lw16i(REG0,0x7ffe)(lo)	|	VoC_movreg32(REG23,REG01,DEFAULT)
0x0A817FFE,	//0x00c8		VoC_lw16i(REG1,0x7fff)(lo)	|	VoC_lw16i(REG0,0x7ffe)(hi)
0x2B807FFF,	//0x00ca		VoC_jal(result_check32)(lo)	|	VoC_lw16i(REG1,0x7fff)(hi)
0xDC32168C,	//0x00cc		VoC_sw16_p(REG2,REG3,DEFAULT)	|	VoC_jal(result_check32)(hi)
0x00000A80,	//0x00ce		VoC_lw16i(REG0,0x0)
0x00000A81,	//0x00d0		VoC_lw16i(REG1,0x0)
0xC1C92A9E,	//0x00d2		VoC_add16_rr(REG1,REG7,REG1,IN_PARALLEL)	|	VoC_mult16inc_pp(REG6,REG2,REG3,DEFAULT)
0x4180FFC0,	//0x00d4		VoC_add16_rr(REG0,REG6,REG0,DEFAULT)	|	VoC_NOP
0xFFC0AAD7,	//0x00d6		VoC_NOP	|	VoC_mult16inc_pp(REG7,REG3,REG2,IN_PARALLEL)
0xC1C92C9E,	//0x00d8		VoC_add16_rr(REG1,REG7,REG1,IN_PARALLEL)	|	VoC_multf16_pp(REG6,REG2,REG3,DEFAULT)
0x4180FFC0,	//0x00da		VoC_add16_rr(REG0,REG6,REG0,DEFAULT)	|	VoC_NOP
0xFFC0AC9F,	//0x00dc		VoC_NOP	|	VoC_multf16_pp(REG7,REG2,REG3,IN_PARALLEL)
0xC1C92E9E,	//0x00de		VoC_add16_rr(REG1,REG7,REG1,IN_PARALLEL)	|	VoC_multf16inc_pp(REG6,REG2,REG3,DEFAULT)
0x4180FFC0,	//0x00e0		VoC_add16_rr(REG0,REG6,REG0,DEFAULT)	|	VoC_NOP
0xC1C9AED7,	//0x00e2		VoC_add16_rr(REG1,REG7,REG1,DEFAULT)	|	VoC_multf16inc_pp(REG7,REG3,REG2,IN_PARALLEL)
0x17452B80,	//0x00e4		VoC_jal(push_all)
0x0A80FF01,	//0x00e6		VoC_lw16i(REG0,0x1fe)(lo)	|	VoC_movreg32(REG23,REG01,DEFAULT)
0x0A8101FE,	//0x00e8		VoC_lw16i(REG1,0x7fff)(lo)	|	VoC_lw16i(REG0,0x1fe)(hi)
0xFFC07FFF,	//0x00ea		VoC_NAD	|	VoC_lw16i(REG1,0x7fff)(hi)
0x168C2B80,	//0x00ec		VoC_jal(result_check32)
0xFF427F43,	//0x00ee		VoC_lw32z(REG45,IN_PARALLEL)	|	VoC_lw32z(REG67,DEFAULT)
0x499BB09E,	//0x00f0		VoC_add32_rr(REG67,RL6,REG67,DEFAULT)	|	VoC_add32_pp(RL6,REG2,REG3,DEFAULT)
0x329EB09F,	//0x00f2		VoC_add32inc_pp(RL6,REG2,REG3,DEFAULT)	|	VoC_add32_pp(RL7,REG2,REG3,IN_PARALLEL)
0x499BC8BA,	//0x00f4		VoC_add32_rr(REG67,RL6,REG67,DEFAULT)	|	VoC_add32_rr(REG45,REG45,RL7,IN_PARALLEL)
0x349EB29F,	//0x00f6		VoC_sub32_pp(RL6,REG2,REG3,DEFAULT)	|	VoC_add32inc_pp(RL7,REG2,REG3,IN_PARALLEL)
0x48F3C8BA,	//0x00f8		VoC_add32_rr(REG67,REG67,RL6,DEFAULT)	|	VoC_add32_rr(REG45,REG45,RL7,IN_PARALLEL)
0x369EB49F,	//0x00fa		VoC_sub32inc_pp(RL6,REG2,REG3,DEFAULT)	|	VoC_sub32_pp(RL7,REG2,REG3,IN_PARALLEL)
0x48F3C8BA,	//0x00fc		VoC_add32_rr(REG67,REG67,RL6,DEFAULT)	|	VoC_add32_rr(REG45,REG45,RL7,IN_PARALLEL)
0xC9D2B69F,	//0x00fe		VoC_add32_rr(REG45,RL7,REG45,DEFAULT)	|	VoC_sub32inc_pp(RL7,REG2,REG3,IN_PARALLEL)
0x17452B80,	//0x0100		VoC_jal(push_all)
0x0A80FF19,	//0x0102		VoC_lw16i(REG0,0x7fff)(lo)	|	VoC_movreg32(REG23,REG67,DEFAULT)
0x0AC17FFF,	//0x0104		VoC_lw16i(REG1,0xffff)(lo)	|	VoC_lw16i(REG0,0x7fff)(hi)
0xFFC07FFF,	//0x0106		VoC_NAD	|	VoC_lw16i(REG1,0xffff)(hi)
0x168C2B80,	//0x0108		VoC_jal(result_check32)
0x17452B80,	//0x010a		VoC_jal(push_all)
0x0A80FF11,	//0x010c		VoC_lw16i(REG0,0x7fff)(lo)	|	VoC_movreg32(REG23,REG45,DEFAULT)
0x0AC17FFF,	//0x010e		VoC_lw16i(REG1,0xffff)(lo)	|	VoC_lw16i(REG0,0x7fff)(hi)
0xFFC07FFF,	//0x0110		VoC_NAD	|	VoC_lw16i(REG1,0xffff)(hi)
0x168C2B80,	//0x0112		VoC_jal(result_check32)
0x00010A81,	//0x0114		VoC_lw16i(REG1,0x1)
0xB8CE388F,	//0x0116		VoC_sub16_pr(REG6,REG3,REG1,IN_PARALLEL)	|	VoC_sub16_pr(REG7,REG2,REG1,DEFAULT)
0xBACE3ABF,	//0x0118		VoC_sub16inc_pr(REG6,REG3,REG1,IN_PARALLEL)	|	VoC_sub16inc_pr(REG7,REG2,REG7,DEFAULT)
0xBCDA3C9B,	//0x011a		VoC_sub32_pr(REG45,REG3,REG67,IN_PARALLEL)	|	VoC_sub32_pr(REG67,REG2,REG67,DEFAULT)
0xBED23E9B,	//0x011c		VoC_sub32inc_pr(REG45,REG3,REG45,IN_PARALLEL)	|	VoC_sub32inc_pr(REG67,REG2,REG67,DEFAULT)
0x17452B80,	//0x011e		VoC_jal(push_all)
0x0A80FF19,	//0x0120		VoC_lw16i(REG0,0x4025)(lo)	|	VoC_movreg32(REG23,REG67,DEFAULT)
0x0A814025,	//0x0122		VoC_lw16i(REG1,0x1)(lo)	|	VoC_lw16i(REG0,0x4025)(hi)
0xFFC00001,	//0x0124		VoC_NAD	|	VoC_lw16i(REG1,0x1)(hi)
0x168C2B80,	//0x0126		VoC_jal(result_check32)
0x17452B80,	//0x0128		VoC_jal(push_all)
0x0A80FF11,	//0x012a		VoC_lw16i(REG0,0x4025)(lo)	|	VoC_movreg32(REG23,REG45,DEFAULT)
0x0A814025,	//0x012c		VoC_lw16i(REG1,0x1)(lo)	|	VoC_lw16i(REG0,0x4025)(hi)
0x2B800001,	//0x012e		VoC_jal(result_check32)(lo)	|	VoC_lw16i(REG1,0x1)(hi)
0xFF43168C,	//0x0130		VoC_lw32z(REG67,DEFAULT)	|	VoC_jal(result_check32)(hi)
0x00020A81,	//0x0132		VoC_lw16i(REG1,0x2)
0xC0174016,	//0x0134		VoC_add16_rr(REG7,REG0,REG2,IN_PARALLEL)	|	VoC_add16_rr(REG6,REG0,REG2,DEFAULT)
0xC3D74396,	//0x0136		VoC_sub16_rr(REG7,REG7,REG2,IN_PARALLEL)	|	VoC_sub16_rr(REG6,REG6,REG2,DEFAULT)
0xC5CF458E,	//0x0138		VoC_mult16_rr(REG7,REG7,REG1,IN_PARALLEL)	|	VoC_mult16_rr(REG6,REG6,REG1,DEFAULT)
0x479EFFC0,	//0x013a		VoC_multf16_rr(REG6,REG6,REG3,DEFAULT)	|	VoC_NOP
0x2B80C7DF,	//0x013c		VoC_jal(push_all)(lo)	|	VoC_multf16_rr(REG7,REG7,REG3,IN_PARALLEL)
0xFF191745,	//0x013e		VoC_movreg32(REG23,REG67,DEFAULT)	|	VoC_jal(push_all)(hi)
0x01FF0A80,	//0x0140		VoC_lw16i(REG0,0x1ff)
0x01FF0A81,	//0x0142		VoC_lw16i(REG1,0x1ff)
0x168C2B80,	//0x0144		VoC_jal(result_check32)
0xCABA4AF3,	//0x0146		VoC_sub32_rr(REG45,REG45,RL7,IN_PARALLEL)	|	VoC_sub32_rr(REG67,REG67,RL6,DEFAULT)
0xCC9F4C9E,	//0x0148		VoC_multf32_rr(RL7,REG2,REG3,IN_PARALLEL)	|	VoC_multf32_rr(RL6,REG2,REG3,DEFAULT)
0x4833FFC0,	//0x014a		VoC_add32_rr(REG67,REG01,RL6,DEFAULT)	|	VoC_NOP
0x2B80C83A,	//0x014c		VoC_jal(push_all)(lo)	|	VoC_add32_rr(REG45,REG01,RL7,IN_PARALLEL)
0xFF191745,	//0x014e		VoC_movreg32(REG23,REG67,DEFAULT)	|	VoC_jal(push_all)(hi)
0x0FC60A80,	//0x0150		VoC_lw16i(REG0,0xfc6)
0x00170A81,	//0x0152		VoC_lw16i(REG1,0x17)
0x168C2B80,	//0x0154		VoC_jal(result_check32)
0x17452B80,	//0x0156		VoC_jal(push_all)
0x0A80FF11,	//0x0158		VoC_lw16i(REG0,0xfc6)(lo)	|	VoC_movreg32(REG23,REG45,DEFAULT)
0x0A810FC6,	//0x015a		VoC_lw16i(REG1,0x17)(lo)	|	VoC_lw16i(REG0,0xfc6)(hi)
0xFFC00017,	//0x015c		VoC_NAD	|	VoC_lw16i(REG1,0x17)(hi)
0x168C2B80,	//0x015e		VoC_jal(result_check32)
0xFF457F44,	//0x0160		VoC_lw32z(ACC1,IN_PARALLEL)	|	VoC_lw32z(ACC0,DEFAULT)
0xCE0A4E0A,	//0x0162		VoC_mac32_rr(REG1,REG2,IN_PARALLEL)	|	VoC_mac32_rr(REG1,REG2,DEFAULT)
0xCF0B4E8B,	//0x0164		VoC_msu32_rr(REG1,REG3,IN_PARALLEL)	|	VoC_msu32_rr(REG1,REG3,DEFAULT)
0x17452B80,	//0x0166		VoC_jal(push_all)
0x0A80FF21,	//0x0168		VoC_lw16i(REG0,0x0)(lo)	|	VoC_movreg32(REG23,ACC0,DEFAULT)
0x0AC10000,	//0x016a		VoC_lw16i(REG1,0xffff)(lo)	|	VoC_lw16i(REG0,0x0)(hi)
0xFFC07FFF,	//0x016c		VoC_NAD	|	VoC_lw16i(REG1,0xffff)(hi)
0x168C2B80,	//0x016e		VoC_jal(result_check32)
0x17452B80,	//0x0170		VoC_jal(push_all)
0x0A80FF29,	//0x0172		VoC_lw16i(REG0,0x0)(lo)	|	VoC_movreg32(REG23,ACC1,DEFAULT)
0x0AC10000,	//0x0174		VoC_lw16i(REG1,0xffff)(lo)	|	VoC_lw16i(REG0,0x0)(hi)
0x2B807FFF,	//0x0176		VoC_jal(result_check32)(lo)	|	VoC_lw16i(REG1,0xffff)(hi)
0xCF10168C,	//0x0178		VoC_bimac32_rr(REG23,REG01)	|	VoC_jal(result_check32)(hi)
0x500ACFA6,	//0x017a		VoC_mac32_rp(REG1,REG2,DEFAULT)	|	VoC_bimsu32_rr(REG45,REG67)
0x510AD00B,	//0x017c		VoC_mac32inc_rp(REG1,REG2,DEFAULT)	|	VoC_mac32_rp(REG1,REG3,IN_PARALLEL)
0x2B80D10B,	//0x017e		VoC_jal(push_all)(lo)	|	VoC_mac32inc_rp(REG1,REG3,IN_PARALLEL)
0xFF211745,	//0x0180		VoC_movreg32(REG23,ACC0,DEFAULT)	|	VoC_jal(push_all)(hi)
0x0AE60A80,	//0x0182		VoC_lw16i(REG0,0xae6)
0x7E0F0AC1,	//0x0184		VoC_lw16i(REG1,0xfe0f)
0x168C2B80,	//0x0186		VoC_jal(result_check32)
0x17452B80,	//0x0188		VoC_jal(push_all)
0x0A80FF29,	//0x018a		VoC_lw16i(REG0,0x150)(lo)	|	VoC_movreg32(REG23,ACC1,DEFAULT)
0x0A810150,	//0x018c		VoC_lw16i(REG1,0x1)(lo)	|	VoC_lw16i(REG0,0x150)(hi)
0xFFC00001,	//0x018e		VoC_NAD	|	VoC_lw16i(REG1,0x1)(hi)
0x168C2B80,	//0x0190		VoC_jal(result_check32)
0xD08B508A,	//0x0192		VoC_msu32_rp(REG1,REG3,IN_PARALLEL)	|	VoC_msu32_rp(REG1,REG2,DEFAULT)
0xD18B518A,	//0x0194		VoC_msu32inc_rp(REG1,REG3,IN_PARALLEL)	|	VoC_msu32inc_rp(REG1,REG2,DEFAULT)
0xD2A3D222,	//0x0196		VoC_bimsu32inc_rp(REG45,REG3)	|	VoC_bimac32inc_rp(REG45,REG2)
0xFF435313,	//0x0198		VoC_lw32z(REG67,IN_PARALLEL)	|	VoC_mac32_pp(REG2,REG3,DEFAULT)
0xD2137F43,	//0x019a		VoC_mac32_pp(REG2,REG3,IN_PARALLEL)	|	VoC_lw32z(REG67,DEFAULT)
0x17452B80,	//0x019c		VoC_jal(push_all)
0x0AC0FF21,	//0x019e		VoC_lw16i(REG0,0x9b86)(lo)	|	VoC_movreg32(REG23,ACC0,DEFAULT)
0x0AC11B86,	//0x01a0		VoC_lw16i(REG1,0xf638)(lo)	|	VoC_lw16i(REG0,0x9b86)(hi)
0xFFC07638,	//0x01a2		VoC_NAD	|	VoC_lw16i(REG1,0xf638)(hi)
0x168C2B80,	//0x01a4		VoC_jal(result_check32)
0x17452B80,	//0x01a6		VoC_jal(push_all)
0x0A80FF29,	//0x01a8		VoC_lw16i(REG0,0x11f0)(lo)	|	VoC_movreg32(REG23,ACC1,DEFAULT)
0x0A8111F0,	//0x01aa		VoC_lw16i(REG1,0x17)(lo)	|	VoC_lw16i(REG0,0x11f0)(hi)
0xFFC00017,	//0x01ac		VoC_NAD	|	VoC_lw16i(REG1,0x17)(hi)
0x168C2B80,	//0x01ae		VoC_jal(result_check32)
0xFF435393,	//0x01b0		VoC_lw32z(REG67,IN_PARALLEL)	|	VoC_msu32_pp(REG2,REG3,DEFAULT)
0xD3137F43,	//0x01b2		VoC_msu32_pp(REG2,REG3,IN_PARALLEL)	|	VoC_lw32z(REG67,DEFAULT)
0x5E10FFC0,	//0x01b4		VoC_inc_p(REG2,DEFAULT)	|	VoC_NOP
0x5413DE18,	//0x01b6		VoC_mac32inc_pp(REG2,REG3,DEFAULT)	|	VoC_inc_p(REG3,IN_PARALLEL)
0x7F43FF43,	//0x01b8		VoC_lw32z(REG67,DEFAULT)	|	VoC_lw32z(REG67,IN_PARALLEL)
0x5493D413,	//0x01ba		VoC_msu32inc_pp(REG2,REG3,DEFAULT)	|	VoC_mac32inc_pp(REG2,REG3,IN_PARALLEL)
0x7F43FF43,	//0x01bc		VoC_lw32z(REG67,DEFAULT)	|	VoC_lw32z(REG67,IN_PARALLEL)
0xD513D513,	//0x01be		VoC_bimac32inc_pp(REG2,REG3)	|	VoC_msu32inc_pp(REG2,REG3,IN_PARALLEL)
0x2B80D593,	//0x01c0		VoC_jal(push_all)(lo)	|	VoC_bimsu32inc_pp(REG2,REG3)
0xFF211745,	//0x01c2		VoC_movreg32(REG23,ACC0,DEFAULT)	|	VoC_jal(push_all)(hi)
0x028E0AC0,	//0x01c4		VoC_lw16i(REG0,0x828e)
0x761C0AC1,	//0x01c6		VoC_lw16i(REG1,0xf61c)
0x168C2B80,	//0x01c8		VoC_jal(result_check32)
0x17452B80,	//0x01ca		VoC_jal(push_all)
0x0AC0FF29,	//0x01cc		VoC_lw16i(REG0,0xfc90)(lo)	|	VoC_movreg32(REG23,ACC1,DEFAULT)
0x0AC17C90,	//0x01ce		VoC_lw16i(REG1,0xfffc)(lo)	|	VoC_lw16i(REG0,0xfc90)(hi)
0xFFC07FFC,	//0x01d0		VoC_NAD	|	VoC_lw16i(REG1,0xfffc)(hi)
0x168C2B80,	//0x01d2		VoC_jal(result_check32)
0x00020A87,	//0x01d4		VoC_lw16i(REG7,0x2)
0xF6F27F25,	//0x01d6		VoC_movreg16(INC2,REG7,IN_PARALLEL)	|	VoC_movreg32(ACC1,ACC0,DEFAULT)
0xE213FFC0,	//0x01d8		VoC_aligninc_pp(REG2,REG3,DEFAULT)	|	VoC_NOP
0x01DC2C0A,	//0x01da		VoC_loop_i(0x0,0x5)
		//0x01dc		VoC_endloop0
0x2B80D513,	//0x01dc		VoC_jal(push_all)(lo)	|	VoC_bimac32inc_pp(REG2,REG3)
0xFF211745,	//0x01de		VoC_movreg32(REG23,ACC0,DEFAULT)	|	VoC_jal(push_all)(hi)
0x5CB00A80,	//0x01e0		VoC_lw16i(REG0,0x5cb0)
0x776A0AC1,	//0x01e2		VoC_lw16i(REG1,0xf76a)
0x168C2B80,	//0x01e4		VoC_jal(result_check32)
0x17452B80,	//0x01e6		VoC_jal(push_all)
0x0AC0FF29,	//0x01e8		VoC_lw16i(REG0,0x828e)(lo)	|	VoC_movreg32(REG23,ACC1,DEFAULT)
0x0AC1028E,	//0x01ea		VoC_lw16i(REG1,0xf61c)(lo)	|	VoC_lw16i(REG0,0x828e)(hi)
0xFFC0761C,	//0x01ec		VoC_NAD	|	VoC_lw16i(REG1,0xf61c)(hi)
0x168C2B80,	//0x01ee		VoC_jal(result_check32)
0x00010A87,	//0x01f0		VoC_lw16i(REG7,0x1)
0xFFC0C1D2,	//0x01f2		VoC_NOP	|	VoC_add16_rr(REG2,REG7,REG2,DEFAULT)
0x2C0BE213,	//0x01f4		VoC_loop_i(0x1,0x5)(lo)	|	VoC_aligninc_pp(REG2,REG3,DEFAULT)
0xD51301F7,	//0x01f6		VoC_bimac32inc_pp(REG2,REG3)	|	VoC_loop_i(0x1,0x5)(hi)
		//0x01f7		VoC_endloop1
0x17452B80,	//0x01f8		VoC_jal(push_all)
0x0AC0FF21,	//0x01fa		VoC_lw16i(REG0,0xac84)(lo)	|	VoC_movreg32(REG23,ACC0,DEFAULT)
0x0AC12C84,	//0x01fc		VoC_lw16i(REG1,0xf8ef)(lo)	|	VoC_lw16i(REG0,0xac84)(hi)
0xFFC078EF,	//0x01fe		VoC_NAD	|	VoC_lw16i(REG1,0xf8ef)(hi)
0x168C2B80,	//0x0200		VoC_jal(result_check32)
0x17452B80,	//0x0202		VoC_jal(push_all)
0x0AC0FF29,	//0x0204		VoC_lw16i(REG0,0x828e)(lo)	|	VoC_movreg32(REG23,ACC1,DEFAULT)
0x0AC1028E,	//0x0206		VoC_lw16i(REG1,0xf61c)(lo)	|	VoC_lw16i(REG0,0x828e)(hi)
0xFFC0761C,	//0x0208		VoC_NAD	|	VoC_lw16i(REG1,0xf61c)(hi)
0x168C2B80,	//0x020a		VoC_jal(result_check32)
0x00050A87,	//0x020c		VoC_lw16i(REG7,0x5)
0xFFC0C1DB,	//0x020e		VoC_NOP	|	VoC_add16_rr(REG3,REG7,REG3,DEFAULT)
0x2E38E213,	//0x0210		VoC_loop_r(0,REG7)(lo)	|	VoC_aligninc_pp(REG2,REG3,DEFAULT)
0xD5130213,	//0x0212		VoC_bimac32inc_pp(REG2,REG3)	|	VoC_loop_r(0,REG7)(hi)
		//0x0213		VoC_endloop0
0x17452B80,	//0x0214		VoC_jal(push_all)
0x0AC0FF21,	//0x0216		VoC_lw16i(REG0,0xacf2)(lo)	|	VoC_movreg32(REG23,ACC0,DEFAULT)
0x0AC12CF2,	//0x0218		VoC_lw16i(REG1,0xfab1)(lo)	|	VoC_lw16i(REG0,0xacf2)(hi)
0xFFC07AB1,	//0x021a		VoC_NAD	|	VoC_lw16i(REG1,0xfab1)(hi)
0x168C2B80,	//0x021c		VoC_jal(result_check32)
0x17452B80,	//0x021e		VoC_jal(push_all)
0x0AC0FF29,	//0x0220		VoC_lw16i(REG0,0x828e)(lo)	|	VoC_movreg32(REG23,ACC1,DEFAULT)
0x0AC1028E,	//0x0222		VoC_lw16i(REG1,0xf61c)(lo)	|	VoC_lw16i(REG0,0x828e)(hi)
0xFFC0761C,	//0x0224		VoC_NAD	|	VoC_lw16i(REG1,0xf61c)(hi)
0x168C2B80,	//0x0226		VoC_jal(result_check32)
0xF3FA77D3,	//0x0228		VoC_lw16i_short(INC2,0xfffffffe,IN_PARALLEL)	|	VoC_lw16i_short(INC3,0xfffffffe,DEFAULT)
0xE213FFC0,	//0x022a		VoC_aligninc_pp(REG2,REG3,DEFAULT)	|	VoC_NOP
0xD513E7C1,	//0x022c		VoC_bimac32inc_pp(REG2,REG3)	|	VoC_loop_r_short(REG7,DEFAULT)
		//0x022d		VoC_endloop0
0x17452B80,	//0x022e		VoC_jal(push_all)
0x0AC0FF21,	//0x0230		VoC_lw16i(REG0,0xd880)(lo)	|	VoC_movreg32(REG23,ACC0,DEFAULT)
0x0AC15880,	//0x0232		VoC_lw16i(REG1,0xfc82)(lo)	|	VoC_lw16i(REG0,0xd880)(hi)
0xFFC07C82,	//0x0234		VoC_NAD	|	VoC_lw16i(REG1,0xfc82)(hi)
0x168C2B80,	//0x0236		VoC_jal(result_check32)
0x17452B80,	//0x0238		VoC_jal(push_all)
0x0AC0FF29,	//0x023a		VoC_lw16i(REG0,0x828e)(lo)	|	VoC_movreg32(REG23,ACC1,DEFAULT)
0x0AC1028E,	//0x023c		VoC_lw16i(REG1,0xf61c)(lo)	|	VoC_lw16i(REG0,0x828e)(hi)
0x2B80761C,	//0x023e		VoC_jal(result_check32)(lo)	|	VoC_lw16i(REG1,0xf61c)(hi)
0xC1D2168C,	//0x0240		VoC_add16_rr(REG2,REG7,REG2,DEFAULT)	|	VoC_jal(result_check32)(hi)
0xE212FFC0,	//0x0242		VoC_aligninc_pp(REG2,REG2,DEFAULT)	|	VoC_NOP
0xD212E8A1,	//0x0244		VoC_bimac32inc_rp(REG23,REG2)	|	VoC_loop_i_short(0x5,DEFAULT)
		//0x0245		VoC_endloop0
0x17452B80,	//0x0246		VoC_jal(push_all)
0x0AC0FF21,	//0x0248		VoC_lw16i(REG0,0xa806)(lo)	|	VoC_movreg32(REG23,ACC0,DEFAULT)
0x0AC12806,	//0x024a		VoC_lw16i(REG1,0xfd5e)(lo)	|	VoC_lw16i(REG0,0xa806)(hi)
0x2B807D5E,	//0x024c		VoC_jal(result_check32)(lo)	|	VoC_lw16i(REG1,0xfd5e)(hi)
0xFF40168C,	//0x024e		VoC_lw32z(REG01,DEFAULT)	|	VoC_jal(result_check32)(hi)
0xE5C3F030,	//0x0250		VoC_jump(LABEL_JUMP)	|	VoC_lw16i_short(INC0,0x1,DEFAULT)
0xFFC05E00,	//0x0252		VoC_NAD(IN_PARALLEL)	|	VoC_inc_p(REG0,DEFAULT)
		//0x0254		LABEL_JUMP
0x17452B80,	//0x0254		VoC_jal(push_all)
0x0A80E002,	//0x0256		VoC_lw16i(REG0,0x0)(lo)	|	VoC_movreg16(REG2,REG0,DEFAULT)
0x2B800000,	//0x0258		VoC_jal(result_check16)(lo)	|	VoC_lw16i(REG0,0x0)(hi)
0xFFC016B0,	//0x025a		VoC_NOP	|	VoC_jal(result_check16)(hi)
0x0B372B00,	//0x025c		VoC_jump_lg(LABEL_LJUMP1)
		//0x025e		LABEL_LJUMP2
0x2B80FFC0,	//0x025e		VoC_jal(push_all)(lo)	|	VoC_NOP
0xE0021745,	//0x0260		VoC_movreg16(REG2,REG0,DEFAULT)	|	VoC_jal(push_all)(hi)
0x00010A80,	//0x0262		VoC_lw16i(REG0,0x1)
0x16B02B80,	//0x0264		VoC_jal(result_check16)
0x003C0A80,	//0x0266		VoC_lw16i(REG0,0x3c)
0x7052F030,	//0x0268		VoC_lw16i_short(INC2,0x2,DEFAULT)	|	VoC_lw16i_short(INC0,0x1,DEFAULT)
0x5827F00B,	//0x026a		VoC_lw16_p(REG7,REG2,DEFAULT)	|	VoC_lw16i_short(INC3,0x2,IN_PARALLEL)
0xE437D836,	//0x026c		VoC_and16_rr(REG7,REG6,DEFAULT)	|	VoC_lw16_p(REG6,REG3,IN_PARALLEL)
0xDC87FFC0,	//0x026e		VoC_sw16inc_p(REG7,REG0,DEFAULT)	|	VoC_NOP
0x17452B80,	//0x0270		VoC_jal(push_all)
0x0A80E0E2,	//0x0272		VoC_lw16i(REG0,0x50)(lo)	|	VoC_movreg16(REG2,REG7,DEFAULT)
0xFFC00050,	//0x0274		VoC_NAD	|	VoC_lw16i(REG0,0x50)(hi)
0x16B02B80,	//0x0276		VoC_jal(result_check16)
0x17452B80,	//0x0278		VoC_jal(push_all)
0x0A80E002,	//0x027a		VoC_lw16i(REG0,0x3d)(lo)	|	VoC_movreg16(REG2,REG0,DEFAULT)
0xFFC0003D,	//0x027c		VoC_NAD	|	VoC_lw16i(REG0,0x3d)(hi)
0x16B02B80,	//0x027e		VoC_jal(result_check16)
0xEFF558A6,	//0x0280		VoC_lw16i_short(REG5,0xffffffff,IN_PARALLEL)	|	VoC_lw16inc_p(REG6,REG2,DEFAULT)
0xFE2FE477,	//0x0282		VoC_shr16_rr(REG7,REG5,DEFAULT)	|	VoC_or16_rr(REG7,REG6,DEFAULT)
0xE4B7D8A6,	//0x0284		VoC_xor16_rr(REG7,REG6,DEFAULT)	|	VoC_lw16inc_p(REG6,REG2,DEFAULT)
0x7F2CE386,	//0x0286		VoC_movreg32(ACC0,ACC1,DEFAULT)	|	VoC_not16_r(REG6,DEFAULT)
0xE0E6FE2F,	//0x0288		VoC_movreg16(REG6,REG7,DEFAULT)	|	VoC_shr16_rr(REG7,REG5,IN_PARALLEL)
0xFFC0FE2E,	//0x028a		VoC_NOP	|	VoC_shr16_rr(REG6,REG5,DEFAULT)
0xDC8660C7,	//0x028c		VoC_sw16inc_p(REG6,REG0,IN_PARALLEL)	|	VoC_movreg16(REG7,REG6,DEFAULT)
0x2B80FFC0,	//0x028e		VoC_jal(push_all)(lo)	|	VoC_NOP
0xE0021745,	//0x0290		VoC_movreg16(REG2,REG0,DEFAULT)	|	VoC_jal(push_all)(hi)
0x003E0A80,	//0x0292		VoC_lw16i(REG0,0x3e)
0x16B02B80,	//0x0294		VoC_jal(result_check16)
0x17452B80,	//0x0296		VoC_jal(push_all)
0x0A80E0C2,	//0x0298		VoC_lw16i(REG0,0x3c8)(lo)	|	VoC_movreg16(REG2,REG6,DEFAULT)
0xFFC003C8,	//0x029a		VoC_NAD	|	VoC_lw16i(REG0,0x3c8)(hi)
0x16B02B80,	//0x029c		VoC_jal(result_check16)
0xFF3D5997,	//0x029e		VoC_movreg32(ACC1,RL7,IN_PARALLEL)	|	VoC_lw32_p(RL7,REG2,DEFAULT)
0x7F3DE4EF,	//0x02a0		VoC_movreg32(ACC1,RL7,DEFAULT)	|	VoC_and32_rr(RL7,ACC1,DEFAULT)
0xE52ED9D6,	//0x02a2		VoC_or32_rr(RL6,ACC1,DEFAULT)	|	VoC_lw32inc_p(RL6,REG2,IN_PARALLEL)
0xE57ED997,	//0x02a4		VoC_xor32_rr(RL6,RL7,DEFAULT)	|	VoC_lw32_p(RL7,REG2,DEFAULT)
0xD9D77F34,	//0x02a6		VoC_lw32inc_p(RL7,REG2,IN_PARALLEL)	|	VoC_movreg32(ACC0,RL6,DEFAULT)
0x003E0A82,	//0x02a8		VoC_lw16i(REG2,0x3e)
0x17452B80,	//0x02aa		VoC_jal(push_all)
0x0A80FF21,	//0x02ac		VoC_lw16i(REG0,0x2)(lo)	|	VoC_movreg32(REG23,ACC0,DEFAULT)
0x0A810002,	//0x02ae		VoC_lw16i(REG1,0x2)(lo)	|	VoC_lw16i(REG0,0x2)(hi)
0xFFC00002,	//0x02b0		VoC_NAD	|	VoC_lw16i(REG1,0x2)(hi)
0x168C2B80,	//0x02b2		VoC_jal(result_check32)
0x00400A82,	//0x02b4		VoC_lw16i(REG2,0x40)
0xFFC0F052,	//0x02b6		VoC_NOP	|	VoC_lw16i_short(INC2,0x2,DEFAULT)
0xDDD47F25,	//0x02b8		VoC_sw32inc_p(ACC0,REG2,IN_PARALLEL)	|	VoC_movreg32(ACC1,ACC0,DEFAULT)
0xFFC0DDD7,	//0x02ba		VoC_NOP	|	VoC_sw32inc_p(RL7,REG2,DEFAULT)
0xDD957F44,	//0x02bc		VoC_sw32_p(ACC1,REG2,IN_PARALLEL)	|	VoC_lw32z(ACC0,DEFAULT)
0xFEAFE3C7,	//0x02be		VoC_shr32_rr(RL7,REG5,DEFAULT)	|	VoC_not32_r(RL7,DEFAULT)
0xFEAF7F3E,	//0x02c0		VoC_shr32_rr(RL7,REG5,IN_PARALLEL)	|	VoC_movreg32(RL6,RL7,DEFAULT)
0xF80F780E,	//0x02c2		VoC_shr16_ri(REG7,0x1,IN_PARALLEL)	|	VoC_shr16_ri(REG6,0x1,DEFAULT)
0xFBFF7BFE,	//0x02c4		VoC_shr32_ri(RL7,0xffffffff,IN_PARALLEL)	|	VoC_shr32_ri(RL6,0xffffffff,DEFAULT)
0x1586FFC0,	//0x02c6		VoC_sw32_d(RL6,0x44)(lo)	|	VoC_NOP
0x15870044,	//0x02c8		VoC_sw32_d(RL7,0x46)(lo)	|	VoC_sw32_d(RL6,0x44)(hi)
0xFFC00046,	//0x02ca		VoC_NAD	|	VoC_sw32_d(RL7,0x46)(hi)
0x17452B80,	//0x02cc		VoC_jal(push_all)
0x00400A87,	//0x02ce		VoC_lw16i(REG7,0x40)
0xD9B9FFC0,	//0x02d0		VoC_lw32_p(REG23,REG7,DEFAULT)	|	VoC_NOP
0x00020A80,	//0x02d2		VoC_lw16i(REG0,0x2)
0x00020A81,	//0x02d4		VoC_lw16i(REG1,0x2)
0x168C2B80,	//0x02d6		VoC_jal(result_check32)
0x17452B80,	//0x02d8		VoC_jal(push_all)
0x00420A87,	//0x02da		VoC_lw16i(REG7,0x42)
0xD9B9FFC0,	//0x02dc		VoC_lw32_p(REG23,REG7,DEFAULT)	|	VoC_NOP
0x00560A80,	//0x02de		VoC_lw16i(REG0,0x56)
0x00570A81,	//0x02e0		VoC_lw16i(REG1,0x57)
0x168C2B80,	//0x02e2		VoC_jal(result_check32)
0x17452B80,	//0x02e4		VoC_jal(push_all)
0x00440A87,	//0x02e6		VoC_lw16i(REG7,0x44)
0xD9B9FFC0,	//0x02e8		VoC_lw32_p(REG23,REG7,DEFAULT)	|	VoC_NOP
0x7EA40AC0,	//0x02ea		VoC_lw16i(REG0,0xfea4)
0x7EA30AC1,	//0x02ec		VoC_lw16i(REG1,0xfea3)
0x168C2B80,	//0x02ee		VoC_jal(result_check32)
0x17452B80,	//0x02f0		VoC_jal(push_all)
0x00460A87,	//0x02f2		VoC_lw16i(REG7,0x46)
0xD9B9FFC0,	//0x02f4		VoC_lw32_p(REG23,REG7,DEFAULT)	|	VoC_NOP
0x7D480AC0,	//0x02f6		VoC_lw16i(REG0,0xfd48)
0x7D470AC1,	//0x02f8		VoC_lw16i(REG1,0xfd47)
0x168C2B80,	//0x02fa		VoC_jal(result_check32)
0xDF415FC0,	//0x02fc		VoC_push32(REG23,IN_PARALLEL)	|	VoC_push16(REG0,DEFAULT)
0xC09A5E00,	//0x02fe		VoC_add16_rr(REG2,REG2,REG3,IN_PARALLEL)	|	VoC_inc_p(REG0,DEFAULT)
0xDF015F80,	//0x0300		VoC_pop32(REG23,IN_PARALLEL)	|	VoC_pop16(REG0,DEFAULT)
0x17452B80,	//0x0302		VoC_jal(push_all)
0x0A80FF19,	//0x0304		VoC_lw16i(REG0,0x1e4)(lo)	|	VoC_movreg32(REG23,REG67,DEFAULT)
0x0A8101E4,	//0x0306		VoC_lw16i(REG1,0x1e4)(lo)	|	VoC_lw16i(REG0,0x1e4)(hi)
0xFFC001E4,	//0x0308		VoC_NAD	|	VoC_lw16i(REG1,0x1e4)(hi)
0x168C2B80,	//0x030a		VoC_jal(result_check32)
0x17452B80,	//0x030c		VoC_jal(push_all)
0x00440A80,	//0x030e		VoC_lw16i(REG0,0x44)
0x40590A81,	//0x0310		VoC_lw16i(REG1,0x4059)
0x168C2B80,	//0x0312		VoC_jal(result_check32)
0x00000A87,	//0x0314		VoC_lw16i(REG7,0x0)
0x1507FFC0,	//0x0316		VoC_sw16_d(REG7,0x4c)(lo)	|	VoC_NOP
0xDFC3004C,	//0x0318		VoC_push16(REG3,DEFAULT)	|	VoC_sw16_d(REG7,0x4c)(hi)
0x00002007,	//0x031a		VoC_lw16d_set_inc(REG3,0x0,0x1)
0x17452B80,	//0x031c		VoC_jal(push_all)
0x0A80E022,	//0x031e		VoC_lw16i(REG0,0x0)(lo)	|	VoC_movreg16(REG2,REG1,DEFAULT)
0x2B800000,	//0x0320		VoC_jal(result_check16)(lo)	|	VoC_lw16i(REG0,0x0)(hi)
0xDF8316B0,	//0x0322		VoC_pop16(REG3,DEFAULT)	|	VoC_jal(result_check16)(hi)
0x0C1FFFC0,	//0x0324		VoC_sub16_dp(REG7,0x1,REG3)(lo)	|	VoC_NOP
0xE0E60001,	//0x0326		VoC_movreg16(REG6,REG7,DEFAULT)	|	VoC_sub16_dp(REG7,0x1,REG3)(hi)
0x00020C9F,	//0x0328		VoC_sub16inc_dp(REG7,0x2,REG3)
0x001FC1BE,	//0x032a		VoC_add16_pd(REG7,REG3,0x3)(lo)	|	VoC_add16_rr(REG6,REG6,REG7,DEFAULT)
0xC1BE0003,	//0x032c		VoC_add16_rr(REG6,REG6,REG7,DEFAULT)	|	VoC_add16_pd(REG7,REG3,0x3)(hi)
0x0004009F,	//0x032e		VoC_add16inc_pd(REG7,REG3,0x4)
0x011FC1BE,	//0x0330		VoC_sub16_pd(REG7,REG3,0x5)(lo)	|	VoC_add16_rr(REG6,REG6,REG7,DEFAULT)
0xC1BE0005,	//0x0332		VoC_add16_rr(REG6,REG6,REG7,DEFAULT)	|	VoC_sub16_pd(REG7,REG3,0x5)(hi)
0x0006019F,	//0x0334		VoC_sub16inc_pd(REG7,REG3,0x6)
0x2B80C1BE,	//0x0336		VoC_jal(push_all)(lo)	|	VoC_add16_rr(REG6,REG6,REG7,DEFAULT)
0xE0C21745,	//0x0338		VoC_movreg16(REG2,REG6,DEFAULT)	|	VoC_jal(push_all)(hi)
0x7FFF0A80,	//0x033a		VoC_lw16i(REG0,0x7fff)
0x16B02B80,	//0x033c		VoC_jal(result_check16)
0x0002021F,	//0x033e		VoC_mult16_pd(REG7,REG3,0x2)
0xC1BEFFC0,	//0x0340		VoC_add16_rr(REG6,REG6,REG7,DEFAULT)	|	VoC_NOP
0x0001029F,	//0x0342		VoC_mult16inc_pd(REG7,REG3,0x1)
0xC1BEFFC0,	//0x0344		VoC_add16_rr(REG6,REG6,REG7,DEFAULT)	|	VoC_NOP
0x0009031F,	//0x0346		VoC_multf16_pd(REG7,REG3,0x9)
0x039FC1BE,	//0x0348		VoC_multf16inc_pd(REG7,REG3,0xa)(lo)	|	VoC_add16_rr(REG6,REG6,REG7,DEFAULT)
0xFFC0000A,	//0x034a		VoC_NOP	|	VoC_multf16inc_pd(REG7,REG3,0xa)(hi)
0x1404C1BE,	//0x034c		VoC_lw16_d(REG4,0x17)(lo)	|	VoC_add16_rr(REG6,REG6,REG7,DEFAULT)
0x0B270017,	//0x034e		VoC_sub16_dr(REG7,0xb,REG4)(lo)	|	VoC_lw16_d(REG4,0x17)(hi)
0xC1BE000B,	//0x0350		VoC_add16_rr(REG6,REG6,REG7,DEFAULT)	|	VoC_sub16_dr(REG7,0xb,REG4)(hi)
0x000C0727,	//0x0352		VoC_add16_rd(REG7,REG4,0xc)
0x07A7C1BE,	//0x0354		VoC_sub16_rd(REG7,REG4,0xd)(lo)	|	VoC_add16_rr(REG6,REG6,REG7,DEFAULT)
0xC1BE000D,	//0x0356		VoC_add16_rr(REG6,REG6,REG7,DEFAULT)	|	VoC_sub16_rd(REG7,REG4,0xd)(hi)
0x000E0827,	//0x0358		VoC_mult16_rd(REG7,REG4,0xe)
0xC1BEFFC0,	//0x035a		VoC_add16_rr(REG6,REG6,REG7,DEFAULT)	|	VoC_NOP
0x000F08A7,	//0x035c		VoC_multf16_rd(REG7,REG4,0xf)
0xC1BEFFC0,	//0x035e		VoC_add16_rr(REG6,REG6,REG7,DEFAULT)	|	VoC_NOP
0x17452B80,	//0x0360		VoC_jal(push_all)
0x0A80E0C2,	//0x0362		VoC_lw16i(REG0,0x7fff)(lo)	|	VoC_movreg16(REG2,REG6,DEFAULT)
0xFFC07FFF,	//0x0364		VoC_NAD	|	VoC_lw16i(REG0,0x7fff)(hi)
0x16B02B80,	//0x0366		VoC_jal(result_check16)
0x00112806,	//0x0368		VoC_and16_rd(REG6,0x11)
0x00122886,	//0x036a		VoC_or16_rd(REG6,0x12)
0x00132906,	//0x036c		VoC_xor16_rd(REG6,0x13)
0x00141606,	//0x036e		VoC_and16_ri(REG6,0x14)
0x00151686,	//0x0370		VoC_or16_ri(REG6,0x15)
0x00161706,	//0x0372		VoC_xor16_ri(REG6,0x16)
0x17452B80,	//0x0374		VoC_jal(push_all)
0x0A80E0C2,	//0x0376		VoC_lw16i(REG0,0x3)(lo)	|	VoC_movreg16(REG2,REG6,DEFAULT)
0x2B800003,	//0x0378		VoC_jal(result_check16)(lo)	|	VoC_lw16i(REG0,0x3)(hi)
0xF05316B0,	//0x037a		VoC_lw16i_short(INC3,0x2,DEFAULT)	|	VoC_jal(result_check16)(hi)
0x00000D1F,	//0x037c		VoC_sub32_dp(RL7,0x0,REG3)
0x0D9FC9F6,	//0x037e		VoC_sub32inc_dp(RL7,0x2,REG3)(lo)	|	VoC_add32_rr(RL6,RL7,RL6,DEFAULT)
0xC9F60002,	//0x0380		VoC_add32_rr(RL6,RL7,RL6,DEFAULT)	|	VoC_sub32inc_dp(RL7,0x2,REG3)(hi)
0x0004061F,	//0x0382		VoC_multf32_pd(RL7,REG3,0x4)
0xC9F6FFC0,	//0x0384		VoC_add32_rr(RL6,RL7,RL6,DEFAULT)	|	VoC_NOP
0x0006069F,	//0x0386		VoC_multf32inc_pd(RL7,REG3,0x6)
0xC9F6FFC0,	//0x0388		VoC_add32_rr(RL6,RL7,RL6,DEFAULT)	|	VoC_NOP
0x0008041F,	//0x038a		VoC_add32_pd(RL7,REG3,0x8)
0x049FC9F6,	//0x038c		VoC_add32inc_pd(RL7,REG3,0xa)(lo)	|	VoC_add32_rr(RL6,RL7,RL6,DEFAULT)
0xC9F6000A,	//0x038e		VoC_add32_rr(RL6,RL7,RL6,DEFAULT)	|	VoC_add32inc_pd(RL7,REG3,0xa)(hi)
0x000C051F,	//0x0390		VoC_sub32_pd(RL7,REG3,0xc)
0x059FC9F6,	//0x0392		VoC_sub32inc_pd(RL7,REG3,0xe)(lo)	|	VoC_add32_rr(RL6,RL7,RL6,DEFAULT)
0xC9F6000E,	//0x0394		VoC_add32_rr(RL6,RL7,RL6,DEFAULT)	|	VoC_sub32inc_pd(RL7,REG3,0xe)(hi)
0x00101483,	//0x0396		VoC_lw32_d(REG67,0x10)
0x00120B9F,	//0x0398		VoC_sub32_dr(RL7,0x12,REG67)
0x091FC9F6,	//0x039a		VoC_add32_rd(RL7,REG67,0x14)(lo)	|	VoC_add32_rr(RL6,RL7,RL6,DEFAULT)
0xC9F60014,	//0x039c		VoC_add32_rr(RL6,RL7,RL6,DEFAULT)	|	VoC_add32_rd(RL7,REG67,0x14)(hi)
0x0016099F,	//0x039e		VoC_sub32_rd(RL7,REG67,0x16)
0x0A3FC9F6,	//0x03a0		VoC_multf32_rd(RL7,REG7,0x18)(lo)	|	VoC_add32_rr(RL6,RL7,RL6,DEFAULT)
0xFFC00018,	//0x03a2		VoC_NOP	|	VoC_multf32_rd(RL7,REG7,0x18)(hi)
0xFF34C9F6,	//0x03a4		VoC_movreg32(ACC0,RL6,DEFAULT)	|	VoC_add32_rr(RL6,RL7,RL6,DEFAULT)
0x001A0E38,	//0x03a6		VoC_mac32_rd(REG7,0x1a)
0x001C0F38,	//0x03a8		VoC_msu32_rd(REG7,0x1c)
0x001E1018,	//0x03aa		VoC_mac32_pd(REG3,0x1e)
0x00201118,	//0x03ac		VoC_mac32inc_pd(REG3,0x20)
0x00221218,	//0x03ae		VoC_msu32_pd(REG3,0x22)
0x00241318,	//0x03b0		VoC_msu32inc_pd(REG3,0x24)
0x17452B80,	//0x03b2		VoC_jal(push_all)
0x0AC0FF21,	//0x03b4		VoC_lw16i(REG0,0xc71f)(lo)	|	VoC_movreg32(REG23,ACC0,DEFAULT)
0x0A81471F,	//0x03b6		VoC_lw16i(REG1,0x7fdc)(lo)	|	VoC_lw16i(REG0,0xc71f)(hi)
0xFFC07FDC,	//0x03b8		VoC_NAD	|	VoC_lw16i(REG1,0x7fdc)(hi)
0x168C2B80,	//0x03ba		VoC_jal(result_check32)
0x00262984,	//0x03bc		VoC_and32_rd(ACC0,0x26)
0x00282A04,	//0x03be		VoC_or32_rd(ACC0,0x28)
0x002A2A84,	//0x03c0		VoC_xor32_rd(ACC0,0x2a)
0x17452B80,	//0x03c2		VoC_jal(push_all)
0x0A80FF21,	//0x03c4		VoC_lw16i(REG0,0x4)(lo)	|	VoC_movreg32(REG23,ACC0,DEFAULT)
0x0A810004,	//0x03c6		VoC_lw16i(REG1,0x6)(lo)	|	VoC_lw16i(REG0,0x4)(hi)
0xFFC00006,	//0x03c8		VoC_NAD	|	VoC_lw16i(REG1,0x6)(hi)
0x168C2B80,	//0x03ca		VoC_jal(result_check32)
0xF00B7052,	//0x03cc		VoC_lw16i_short(INC3,0x2,IN_PARALLEL)	|	VoC_lw16i_short(INC2,0x2,DEFAULT)
0x0A96E213,	//0x03ce		VoC_lw16i(STATUS,0x4)(lo)	|	VoC_aligninc_pp(REG2,REG3,DEFAULT)
0x0A960004,	//0x03d0		VoC_lw16i(STATUS,0x48)(lo)	|	VoC_lw16i(STATUS,0x4)(hi)
0x2C0A0048,	//0x03d2		VoC_loop_i(0x0,0x5)(lo)	|	VoC_lw16i(STATUS,0x48)(hi)
0xD51303D5,	//0x03d4		VoC_bimac32inc_pp(REG2,REG3)	|	VoC_loop_i(0x0,0x5)(hi)
		//0x03d5		VoC_endloop0
0x0A96FFC0,	//0x03d6		VoC_lw16i(STATUS,0x8)(lo)	|	VoC_NOP
0x2B800008,	//0x03d8		VoC_jal(push_all)(lo)	|	VoC_lw16i(STATUS,0x8)(hi)
0xFF211745,	//0x03da		VoC_movreg32(REG23,ACC0,DEFAULT)	|	VoC_jal(push_all)(hi)
0x649F0AC0,	//0x03dc		VoC_lw16i(REG0,0xe49f)
0x7CA40AC1,	//0x03de		VoC_lw16i(REG1,0xfca4)
0x168C2B80,	//0x03e0		VoC_jal(result_check32)
0x00500A96,	//0x03e2		VoC_lw16i(STATUS,0x50)
0x2B80DF46,	//0x03e4		VoC_jal(CII_func)(lo)	|	VoC_push32(RL6,DEFAULT)
0xDF060B3B,	//0x03e6		VoC_pop32(RL6,DEFAULT)	|	VoC_jal(CII_func)(hi)
0xF7F8FFC0,	//0x03e8		VoC_lw16i_short(FORMAT16,0xffffffff,DEFAULT)	|	VoC_NOP
0x0E800A80,	//0x03ea		VoC_lw16i(REG0,0xe80)
0x00100A96,	//0x03ec		VoC_lw16i(STATUS,0x10)
0xC6054604,	//0x03ee		VoC_multf16_rr(REG5,REG0,REG0,IN_PARALLEL)	|	VoC_multf16_rr(REG4,REG0,REG0,DEFAULT)
0x00500A96,	//0x03f0		VoC_lw16i(STATUS,0x50)
0xC6074606,	//0x03f2		VoC_multf16_rr(REG7,REG0,REG0,IN_PARALLEL)	|	VoC_multf16_rr(REG6,REG0,REG0,DEFAULT)
0x00100A96,	//0x03f4		VoC_lw16i(STATUS,0x10)
0x17452B80,	//0x03f6		VoC_jal(push_all)
0xC3AB43E2,	//0x03f8		VoC_sub16_rr(REG3,REG6,REG5,IN_PARALLEL)	|	VoC_sub16_rr(REG2,REG7,REG4,DEFAULT)
0x00010A80,	//0x03fa		VoC_lw16i(REG0,0x1)
0x00010A81,	//0x03fc		VoC_lw16i(REG1,0x1)
0x168C2B80,	//0x03fe		VoC_jal(result_check32)
0x1804F05C,	//0x0400		VoC_lw16i_set_inc(REG0,0x2,0x1)(lo)	|	VoC_lw16i_short(WRAP0,0x2,DEFAULT)
0xFFC00002,	//0x0402		VoC_NOP	|	VoC_lw16i_set_inc(REG0,0x2,0x1)(hi)
0xDE00DE00,	//0x0404		VoC_inc_p(REG0,DEFAULT)	|	VoC_inc_p(REG0,DEFAULT)
0xDE00DE00,	//0x0406		VoC_inc_p(REG0,DEFAULT)	|	VoC_inc_p(REG0,DEFAULT)
0x17452B80,	//0x0408		VoC_jal(push_all)
0x0A80E002,	//0x040a		VoC_lw16i(REG0,0x2)(lo)	|	VoC_movreg16(REG2,REG0,DEFAULT)
0xFFC00002,	//0x040c		VoC_NAD	|	VoC_lw16i(REG0,0x2)(hi)
0x16B02B80,	//0x040e		VoC_jal(result_check16)
0x00001805,	//0x0410		VoC_lw16i_set_inc(REG1,0x0,0x1)
0xF403701D,	//0x0412		VoC_lw16i_short(BITCACHE,0x0,IN_PARALLEL)	|	VoC_lw16i_short(WRAP1,0x0,DEFAULT)
0x4DEF0AC2,	//0x0414		VoC_lw16i(REG2,0xcdef)
0xDC92FFC0,	//0x0416		VoC_sw16inc_p(REG2,REG1,DEFAULT)	|	VoC_NOP
0xDC92DC92,	//0x0418		VoC_sw16inc_p(REG2,REG1,DEFAULT)	|	VoC_sw16inc_p(REG2,REG1,DEFAULT)
0xE0015C92,	//0x041a		VoC_lw16i_short(REG1,0x0,IN_PARALLEL)	|	VoC_sw16inc_p(REG2,REG1,DEFAULT)
0xE241FFC0,	//0x041c		VoC_lbinc_p(REG1)	|	VoC_NOP
0xE284E241,	//0x041e		VoC_rbinc_i(REG4,0x1,DEFAULT)	|	VoC_lbinc_p(REG1)
0xE28EE289,	//0x0420		VoC_rbinc_i(REG6,0x3,DEFAULT)	|	VoC_rbinc_i(REG5,0x2,DEFAULT)
0xE241E293,	//0x0422		VoC_lbinc_p(REG1)	|	VoC_rbinc_i(REG7,0x4,DEFAULT)
0xE299E294,	//0x0424		VoC_rbinc_i(REG5,0x6,DEFAULT)	|	VoC_rbinc_i(REG4,0x5,DEFAULT)
0xE2A3E29E,	//0x0426		VoC_rbinc_i(REG7,0x8,DEFAULT)	|	VoC_rbinc_i(REG6,0x7,DEFAULT)
0xE241E241,	//0x0428		VoC_lbinc_p(REG1)	|	VoC_lbinc_p(REG1)
0xFFC0DFDB,	//0x042a		VoC_NOP	|	VoC_push16(BITCACHE,DEFAULT)
0x2B80DF80,	//0x042c		VoC_jal(push_all)(lo)	|	VoC_pop16(REG0,DEFAULT)
0xFF011745,	//0x042e		VoC_movreg32(REG23,REG01,DEFAULT)	|	VoC_jal(push_all)(hi)
0x00140A80,	//0x0430		VoC_lw16i(REG0,0x14)
0x00030A81,	//0x0432		VoC_lw16i(REG1,0x3)
0x168C2B80,	//0x0434		VoC_jal(result_check32)
0x17452B80,	//0x0436		VoC_jal(push_all)
0x0A80FF11,	//0x0438		VoC_lw16i(REG0,0x6)(lo)	|	VoC_movreg32(REG23,REG45,DEFAULT)
0x0A810006,	//0x043a		VoC_lw16i(REG1,0x3d)(lo)	|	VoC_lw16i(REG0,0x6)(hi)
0xFFC0003D,	//0x043c		VoC_NAD	|	VoC_lw16i(REG1,0x3d)(hi)
0x168C2B80,	//0x043e		VoC_jal(result_check32)
0x17452B80,	//0x0440		VoC_jal(push_all)
0x0A80FF19,	//0x0442		VoC_lw16i(REG0,0x7c)(lo)	|	VoC_movreg32(REG23,REG67,DEFAULT)
0x0A81007C,	//0x0444		VoC_lw16i(REG1,0x0)(lo)	|	VoC_lw16i(REG0,0x7c)(hi)
0x2B800000,	//0x0446		VoC_jal(result_check32)(lo)	|	VoC_lw16i(REG1,0x0)(hi)
0xE2CC168C,	//0x0448		VoC_rb_i(REG4,0x3,DEFAULT)	|	VoC_jal(result_check32)(hi)
0xE362F083,	//0x044a		VoC_rb_r(REG6,REG4,DEFAULT)	|	VoC_lw16i_short(REG3,0x4,DEFAULT)
0xFFC0E31B,	//0x044c		VoC_NOP	|	VoC_rbinc_r(REG7,REG3,DEFAULT)
0xFFC0DFDB,	//0x044e		VoC_NOP	|	VoC_push16(BITCACHE,DEFAULT)
0x2B80DF85,	//0x0450		VoC_jal(push_all)(lo)	|	VoC_pop16(REG5,DEFAULT)
0xFF111745,	//0x0452		VoC_movreg32(REG23,REG45,DEFAULT)	|	VoC_jal(push_all)(hi)
0x00060A80,	//0x0454		VoC_lw16i(REG0,0x6)
0x00100A81,	//0x0456		VoC_lw16i(REG1,0x10)
0x168C2B80,	//0x0458		VoC_jal(result_check32)
0x17452B80,	//0x045a		VoC_jal(push_all)
0x0A80FF19,	//0x045c		VoC_lw16i(REG0,0x37)(lo)	|	VoC_movreg32(REG23,REG67,DEFAULT)
0x0A810037,	//0x045e		VoC_lw16i(REG1,0xd)(lo)	|	VoC_lw16i(REG0,0x37)(hi)
0x2B80000D,	//0x0460		VoC_jal(result_check32)(lo)	|	VoC_lw16i(REG1,0xd)(hi)
0xF01B168C,	//0x0462		VoC_lw16i_short(BITCACHE,0x0,DEFAULT)	|	VoC_jal(result_check32)(hi)
0x00001805,	//0x0464		VoC_lw16i_set_inc(REG1,0x0,0x1)
0xE241F003,	//0x0466		VoC_lbinc_p(REG1)	|	VoC_lw16i_short(REG3,0x0,DEFAULT)
0x046B3183,	//0x0468		VoC_bez16_r(lbinc_seq_test1,REG3)
0xE241E241,	//0x046a		VoC_lbinc_p(REG1)	|	VoC_lbinc_p(REG1)
		//0x046b		lbinc_seq_test1
0xF01BE022,	//0x046c		VoC_lw16i_short(BITCACHE,0x0,DEFAULT)	|	VoC_movreg16(REG2,REG1,DEFAULT)
0x00001805,	//0x046e		VoC_lw16i_set_inc(REG1,0x0,0x1)
0xE241FFC0,	//0x0470		VoC_lbinc_p(REG1)	|	VoC_NOP
0x04753183,	//0x0472		VoC_bez16_r(lbinc_seq_test2,REG3)
0xE241E284,	//0x0474		VoC_lbinc_p(REG1)	|	VoC_rbinc_i(REG4,0x1,DEFAULT)
		//0x0475		lbinc_seq_test2
0xFFC06023,	//0x0476		VoC_NAD(IN_PARALLEL)	|	VoC_movreg16(REG3,REG1,DEFAULT)
0x17452B80,	//0x0478		VoC_jal(push_all)
0x00020A80,	//0x047a		VoC_lw16i(REG0,0x2)
0x00020A81,	//0x047c		VoC_lw16i(REG1,0x2)
0x168C2B80,	//0x047e		VoC_jal(result_check32)
0xF40477DA,	//0x0480		VoC_lw16i_short(WRAP0,0x0,IN_PARALLEL)	|	VoC_lw16i_short(FORMATX,0xfffffffe,DEFAULT)
0xFF457F44,	//0x0482		VoC_lw32z(ACC1,IN_PARALLEL)	|	VoC_lw32z(ACC0,DEFAULT)
0x04000A80,	//0x0484		VoC_lw16i(REG0,0x400)
0x03FF0A81,	//0x0486		VoC_lw16i(REG1,0x3ff)
0x02000A82,	//0x0488		VoC_lw16i(REG2,0x200)
0x01FF0A83,	//0x048a		VoC_lw16i(REG3,0x1ff)
0xCE804E40,	//0x048c		VoC_macX_rr(REG0,REG0,IN_PARALLEL)	|	VoC_macX_rr(REG0,REG0,DEFAULT)
0xCF894EC9,	//0x048e		VoC_msuX_rr(REG1,REG1,IN_PARALLEL)	|	VoC_msuX_rr(REG1,REG1,DEFAULT)
0xCFD2CF40,	//0x0490		VoC_bimsuX_rr(REG23,REG23)	|	VoC_bimacX_rr(REG01,REG01)
0x17452B80,	//0x0492		VoC_jal(push_all)
0x0A80FF21,	//0x0494		VoC_lw16i(REG0,0xffc)(lo)	|	VoC_movreg32(REG23,ACC0,DEFAULT)
0x0A810FFC,	//0x0496		VoC_lw16i(REG1,0x60)(lo)	|	VoC_lw16i(REG0,0xffc)(hi)
0xFFC00060,	//0x0498		VoC_NAD	|	VoC_lw16i(REG1,0x60)(hi)
0x168C2B80,	//0x049a		VoC_jal(result_check32)
0x17452B80,	//0x049c		VoC_jal(push_all)
0x0A80FF29,	//0x049e		VoC_lw16i(REG0,0x1ffc)(lo)	|	VoC_movreg32(REG23,ACC1,DEFAULT)
0x0A811FFC,	//0x04a0		VoC_lw16i(REG1,0x0)(lo)	|	VoC_lw16i(REG0,0x1ffc)(hi)
0xFFC00000,	//0x04a2		VoC_NAD	|	VoC_lw16i(REG1,0x0)(hi)
0x168C2B80,	//0x04a4		VoC_jal(result_check32)
0x00001808,	//0x04a6		VoC_lw16i_set_inc(REG0,0x0,0x2)
0x00011805,	//0x04a8		VoC_lw16i_set_inc(REG1,0x1,0x1)
0x0002180A,	//0x04aa		VoC_lw16i_set_inc(REG2,0x2,0x2)
0x00031807,	//0x04ac		VoC_lw16i_set_inc(REG3,0x3,0x1)
0x04000A84,	//0x04ae		VoC_lw16i(REG4,0x400)
0x03FF0A85,	//0x04b0		VoC_lw16i(REG5,0x3ff)
0x02000A86,	//0x04b2		VoC_lw16i(REG6,0x200)
0x01FF0A87,	//0x04b4		VoC_lw16i(REG7,0x1ff)
0xFF457F44,	//0x04b6		VoC_lw32z(ACC1,IN_PARALLEL)	|	VoC_lw32z(ACC0,DEFAULT)
0x00001582,	//0x04b8		VoC_sw32_d(REG45,0x0)
0x00021583,	//0x04ba		VoC_sw32_d(REG67,0x2)
0xD0605060,	//0x04bc		VoC_macX_rp(REG4,REG0,IN_PARALLEL)	|	VoC_macX_rp(REG4,REG0,DEFAULT)
0xD0E950E9,	//0x04be		VoC_msuX_rp(REG5,REG1,IN_PARALLEL)	|	VoC_msuX_rp(REG5,REG1,DEFAULT)
0xD2F2D260,	//0x04c0		VoC_bimsuXinc_rp(REG67,REG2)	|	VoC_bimacXinc_rp(REG45,REG0)
0x0002180A,	//0x04c2		VoC_lw16i_set_inc(REG2,0x2,0x2)
0xD1605160,	//0x04c4		VoC_macXinc_rp(REG4,REG0,IN_PARALLEL)	|	VoC_macXinc_rp(REG4,REG0,DEFAULT)
0xD1EA51EA,	//0x04c6		VoC_msuXinc_rp(REG5,REG2,IN_PARALLEL)	|	VoC_msuXinc_rp(REG5,REG2,DEFAULT)
0x17452B80,	//0x04c8		VoC_jal(push_all)
0x0A80FF21,	//0x04ca		VoC_lw16i(REG0,0x17fc)(lo)	|	VoC_movreg32(REG23,ACC0,DEFAULT)
0x0A8117FC,	//0x04cc		VoC_lw16i(REG1,0x60)(lo)	|	VoC_lw16i(REG0,0x17fc)(hi)
0xFFC00060,	//0x04ce		VoC_NAD	|	VoC_lw16i(REG1,0x60)(hi)
0x168C2B80,	//0x04d0		VoC_jal(result_check32)
0x17452B80,	//0x04d2		VoC_jal(push_all)
0x0A80FF29,	//0x04d4		VoC_lw16i(REG0,0x27f8)(lo)	|	VoC_movreg32(REG23,ACC1,DEFAULT)
0x0A8127F8,	//0x04d6		VoC_lw16i(REG1,0x0)(lo)	|	VoC_lw16i(REG0,0x27f8)(hi)
0xFFC00000,	//0x04d8		VoC_NAD	|	VoC_lw16i(REG1,0x0)(hi)
0x168C2B80,	//0x04da		VoC_jal(result_check32)
0x04000A84,	//0x04dc		VoC_lw16i(REG4,0x400)
0x03FF0A85,	//0x04de		VoC_lw16i(REG5,0x3ff)
0x02000A86,	//0x04e0		VoC_lw16i(REG6,0x200)
0x01FF0A87,	//0x04e2		VoC_lw16i(REG7,0x1ff)
0x00001808,	//0x04e4		VoC_lw16i_set_inc(REG0,0x0,0x2)
0x00011805,	//0x04e6		VoC_lw16i_set_inc(REG1,0x1,0x1)
0x0002180A,	//0x04e8		VoC_lw16i_set_inc(REG2,0x2,0x2)
0x00031807,	//0x04ea		VoC_lw16i_set_inc(REG3,0x3,0x1)
0xFF457F44,	//0x04ec		VoC_lw32z(ACC1,IN_PARALLEL)	|	VoC_lw32z(ACC0,DEFAULT)
0x00001582,	//0x04ee		VoC_sw32_d(REG45,0x0)
0x00021583,	//0x04f0		VoC_sw32_d(REG67,0x2)
0xD2805340,	//0x04f2		VoC_macX_pp(REG0,REG0,IN_PARALLEL)	|	VoC_macX_pp(REG0,REG0,DEFAULT)
0xD38953C9,	//0x04f4		VoC_msuX_pp(REG1,REG1,IN_PARALLEL)	|	VoC_msuX_pp(REG1,REG1,DEFAULT)
0xD5D2D540,	//0x04f6		VoC_bimsuXinc_pp(REG2,REG2)	|	VoC_bimacXinc_pp(REG0,REG0)
0xFFC0F000,	//0x04f8		VoC_NOP	|	VoC_lw16i_short(REG0,0x0,DEFAULT)
0xD4805440,	//0x04fa		VoC_macXinc_pp(REG0,REG0,IN_PARALLEL)	|	VoC_macXinc_pp(REG0,REG0,DEFAULT)
0xD58054C0,	//0x04fc		VoC_msuXinc_pp(REG0,REG0,IN_PARALLEL)	|	VoC_msuXinc_pp(REG0,REG0,DEFAULT)
0x17452B80,	//0x04fe		VoC_jal(push_all)
0x0A80FF21,	//0x0500		VoC_lw16i(REG0,0xffc)(lo)	|	VoC_movreg32(REG23,ACC0,DEFAULT)
0x0A810FFC,	//0x0502		VoC_lw16i(REG1,0x90)(lo)	|	VoC_lw16i(REG0,0xffc)(hi)
0xFFC00090,	//0x0504		VoC_NAD	|	VoC_lw16i(REG1,0x90)(hi)
0x168C2B80,	//0x0506		VoC_jal(result_check32)
0x17452B80,	//0x0508		VoC_jal(push_all)
0x0A80FF29,	//0x050a		VoC_lw16i(REG0,0xffc)(lo)	|	VoC_movreg32(REG23,ACC1,DEFAULT)
0x0A810FFC,	//0x050c		VoC_lw16i(REG1,0x30)(lo)	|	VoC_lw16i(REG0,0xffc)(hi)
0xFFC00030,	//0x050e		VoC_NAD	|	VoC_lw16i(REG1,0x30)(hi)
0x168C2B80,	//0x0510		VoC_jal(result_check32)
0x43210A80,	//0x0512		VoC_lw16i(REG0,0x4321)
0x07650AC1,	//0x0514		VoC_lw16i(REG1,0x8765)
0x790AFF01,	//0x0516		VoC_shru16_ri(REG2,0x1,DEFAULT)	|	VoC_movreg32(REG23,REG01,DEFAULT)
0xFFC0F90B,	//0x0518		VoC_NAD	|	VoC_shru16_ri(REG3,0x1,IN_PARALLEL)
0x17452B80,	//0x051a		VoC_jal(push_all)
0x21900A80,	//0x051c		VoC_lw16i(REG0,0x2190)
0x43B20A81,	//0x051e		VoC_lw16i(REG1,0x43b2)
0x168C2B80,	//0x0520		VoC_jal(result_check32)
0x79FAFF01,	//0x0522		VoC_shru16_ri(REG2,0xffffffff,DEFAULT)	|	VoC_movreg32(REG23,REG01,DEFAULT)
0xFFC0F9FB,	//0x0524		VoC_NAD	|	VoC_shru16_ri(REG3,0xffffffff,IN_PARALLEL)
0x17452B80,	//0x0526		VoC_jal(push_all)
0x06420AC0,	//0x0528		VoC_lw16i(REG0,0x8642)
0x0ECA0A81,	//0x052a		VoC_lw16i(REG1,0xeca)
0x168C2B80,	//0x052c		VoC_jal(result_check32)
0xF6056024,	//0x052e		VoC_movreg16(REG5,REG0,IN_PARALLEL)	|	VoC_movreg16(REG4,REG1,DEFAULT)
0x7C09FF01,	//0x0530		VoC_shru32_ri(REG23,0x1,DEFAULT)	|	VoC_movreg32(REG23,REG01,DEFAULT)
0xFFC0FC0A,	//0x0532		VoC_NAD	|	VoC_shru32_ri(REG45,0x1,IN_PARALLEL)
0x17452B80,	//0x0534		VoC_jal(push_all)
0x21900AC0,	//0x0536		VoC_lw16i(REG0,0xa190)
0x43B20A81,	//0x0538		VoC_lw16i(REG1,0x43b2)
0x168C2B80,	//0x053a		VoC_jal(result_check32)
0x17452B80,	//0x053c		VoC_jal(push_all)
0x0AC0FF11,	//0x053e		VoC_lw16i(REG0,0xc3b2)(lo)	|	VoC_movreg32(REG23,REG45,DEFAULT)
0x0A8143B2,	//0x0540		VoC_lw16i(REG1,0x2190)(lo)	|	VoC_lw16i(REG0,0xc3b2)(hi)
0xFFC02190,	//0x0542		VoC_NAD	|	VoC_lw16i(REG1,0x2190)(hi)
0x168C2B80,	//0x0544		VoC_jal(result_check32)
0xF6056024,	//0x0546		VoC_movreg16(REG5,REG0,IN_PARALLEL)	|	VoC_movreg16(REG4,REG1,DEFAULT)
0x7DF9FF01,	//0x0548		VoC_shru32_ri(REG23,0xffffffff,DEFAULT)	|	VoC_movreg32(REG23,REG01,DEFAULT)
0xFFC0FDFA,	//0x054a		VoC_NAD	|	VoC_shru32_ri(REG45,0xffffffff,IN_PARALLEL)
0x17452B80,	//0x054c		VoC_jal(push_all)
0x06420AC0,	//0x054e		VoC_lw16i(REG0,0x8642)
0x0ECA0A81,	//0x0550		VoC_lw16i(REG1,0xeca)
0x168C2B80,	//0x0552		VoC_jal(result_check32)
0x17452B80,	//0x0554		VoC_jal(push_all)
0x0A80FF11,	//0x0556		VoC_lw16i(REG0,0xeca)(lo)	|	VoC_movreg32(REG23,REG45,DEFAULT)
0x0AC10ECA,	//0x0558		VoC_lw16i(REG1,0x8643)(lo)	|	VoC_lw16i(REG0,0xeca)(hi)
0xFFC00643,	//0x055a		VoC_NAD	|	VoC_lw16i(REG1,0x8643)(hi)
0x168C2B80,	//0x055c		VoC_jal(result_check32)
0x00600A96,	//0x055e		VoC_lw16i(STATUS,0x60)
0x71230A80,	//0x0560		VoC_lw16i(REG0,0x7123)
0xCC01F799,	//0x0562		VoC_multf32_rr(REG23,REG0,REG0,DEFAULT)	|	VoC_lw16i_short(FORMAT32,0xfffffffc,DEFAULT)
0x17452B80,	//0x0564		VoC_jal(push_all)
0x00200A96,	//0x0566		VoC_lw16i(STATUS,0x20)
0x2C900AC0,	//0x0568		VoC_lw16i(REG0,0xac90)
0x1FFE0A81,	//0x056a		VoC_lw16i(REG1,0x1ffe)
0x168C2B80,	//0x056c		VoC_jal(result_check32)
0x03FF0A87,	//0x056e		VoC_lw16i(REG7,0x3ff)
0x7FDE0AC2,	//0x0570		VoC_lw16i(REG2,0xffffffde)
0x00190A83,	//0x0572		VoC_lw16i(REG3,0x19)
0x05000A84,	//0x0574		VoC_lw16i(REG4,0x500)
0x7B000AC5,	//0x0576		VoC_lw16i(REG5,0xfffffb00)
0xDEBA6128,	//0x0578		VoC_clip16_rr(REG2,REG7,IN_PARALLEL)	|	VoC_movreg16(ACC0_LO,ACC0_HI,DEFAULT)
0xDEBB6128,	//0x057a		VoC_clip16_rr(REG3,REG7,IN_PARALLEL)	|	VoC_movreg16(ACC0_LO,ACC0_HI,DEFAULT)
0xDEBC6128,	//0x057c		VoC_clip16_rr(REG4,REG7,IN_PARALLEL)	|	VoC_movreg16(ACC0_LO,ACC0_HI,DEFAULT)
0xDEBD6128,	//0x057e		VoC_clip16_rr(REG5,REG7,IN_PARALLEL)	|	VoC_movreg16(ACC0_LO,ACC0_HI,DEFAULT)
0x17452B80,	//0x0580		VoC_jal(push_all)
0x7FDE0AC0,	//0x0582		VoC_lw16i(REG0,0xffffffde)
0x00190A81,	//0x0584		VoC_lw16i(REG1,0x19)
0x168C2B80,	//0x0586		VoC_jal(result_check32)
0x17452B80,	//0x0588		VoC_jal(push_all)
0x0A80FF11,	//0x058a		VoC_lw16i(REG0,0x3ff)(lo)	|	VoC_movreg32(REG23,REG45,DEFAULT)
0x0AC103FF,	//0x058c		VoC_lw16i(REG1,0xfc00)(lo)	|	VoC_lw16i(REG0,0x3ff)(hi)
0xFFC07C00,	//0x058e		VoC_NAD	|	VoC_lw16i(REG1,0xfc00)(hi)
0x168C2B80,	//0x0590		VoC_jal(result_check32)
0x03FF0A87,	//0x0592		VoC_lw16i(REG7,0x3ff)
0x7FDE0AC2,	//0x0594		VoC_lw16i(REG2,0xffffffde)
0x00190A83,	//0x0596		VoC_lw16i(REG3,0x19)
0x05000A84,	//0x0598		VoC_lw16i(REG4,0x500)
0x7B000AC5,	//0x059a		VoC_lw16i(REG5,0xfffffb00)
0xDEFA6128,	//0x059c		VoC_clipu16_rr(REG2,REG7,IN_PARALLEL)	|	VoC_movreg16(ACC0_LO,ACC0_HI,DEFAULT)
0xDEFB6128,	//0x059e		VoC_clipu16_rr(REG3,REG7,IN_PARALLEL)	|	VoC_movreg16(ACC0_LO,ACC0_HI,DEFAULT)
0xDEFC6128,	//0x05a0		VoC_clipu16_rr(REG4,REG7,IN_PARALLEL)	|	VoC_movreg16(ACC0_LO,ACC0_HI,DEFAULT)
0xDEFD6128,	//0x05a2		VoC_clipu16_rr(REG5,REG7,IN_PARALLEL)	|	VoC_movreg16(ACC0_LO,ACC0_HI,DEFAULT)
0x17452B80,	//0x05a4		VoC_jal(push_all)
0x00000A80,	//0x05a6		VoC_lw16i(REG0,0x0)
0x00190A81,	//0x05a8		VoC_lw16i(REG1,0x19)
0x168C2B80,	//0x05aa		VoC_jal(result_check32)
0x17452B80,	//0x05ac		VoC_jal(push_all)
0x0A80FF11,	//0x05ae		VoC_lw16i(REG0,0x3ff)(lo)	|	VoC_movreg32(REG23,REG45,DEFAULT)
0x0A8103FF,	//0x05b0		VoC_lw16i(REG1,0x0)(lo)	|	VoC_lw16i(REG0,0x3ff)(hi)
0xFFC00000,	//0x05b2		VoC_NAD	|	VoC_lw16i(REG1,0x0)(hi)
0x168C2B80,	//0x05b4		VoC_jal(result_check32)
0x7FFF0A82,	//0x05b6		VoC_lw16i(REG2,0x7fff)
0x00000AC3,	//0x05b8		VoC_lw16i(REG3,0x8000)
0x00010AC4,	//0x05ba		VoC_lw16i(REG4,0x8001)
0x00190A85,	//0x05bc		VoC_lw16i(REG5,0x19)
0xDE435E42,	//0x05be		VoC_abs16_r(REG3,IN_PARALLEL)	|	VoC_abs16_r(REG2,DEFAULT)
0xDE455E44,	//0x05c0		VoC_abs16_r(REG5,IN_PARALLEL)	|	VoC_abs16_r(REG4,DEFAULT)
0x7FFF0A80,	//0x05c2		VoC_lw16i(REG0,0x7fff)
0x7FFF0A81,	//0x05c4		VoC_lw16i(REG1,0x7fff)
0x17452B80,	//0x05c6		VoC_jal(push_all)
0x168C2B80,	//0x05c8		VoC_jal(result_check32)
0x17452B80,	//0x05ca		VoC_jal(push_all)
0x0A80FF11,	//0x05cc		VoC_lw16i(REG0,0x7fff)(lo)	|	VoC_movreg32(REG23,REG45,DEFAULT)
0x0A817FFF,	//0x05ce		VoC_lw16i(REG1,0x19)(lo)	|	VoC_lw16i(REG0,0x7fff)(hi)
0xFFC00019,	//0x05d0		VoC_NAD	|	VoC_lw16i(REG1,0x19)(hi)
0x168C2B80,	//0x05d2		VoC_jal(result_check32)
0x00020AD7,	//0x05d4		VoC_lw16i(NULL,0x8002)
0x7FFF0A86,	//0x05d6		VoC_lw16i(REG6,0x7fff)
0x00000AC7,	//0x05d8		VoC_lw16i(REG7,0x8000)
0x00010A84,	//0x05da		VoC_lw16i(REG4,0x1)
0x00010A85,	//0x05dc		VoC_lw16i(REG5,0x1)
0xC8D54AD4,	//0x05de		VoC_add32_rr(ACC1,REG67,REG45,IN_PARALLEL)	|	VoC_sub32_rr(ACC0,REG67,REG45,DEFAULT)
0x7FFE0A80,	//0x05e0		VoC_lw16i(REG0,0x7ffe)
0x00000AC1,	//0x05e2		VoC_lw16i(REG1,0x8000)
0xFFC07F21,	//0x05e4		VoC_NAD(IN_PARALLEL)	|	VoC_movreg32(REG23,ACC0,DEFAULT)
0x17452B80,	//0x05e6		VoC_jal(push_all)
0x168C2B80,	//0x05e8		VoC_jal(result_check32)
0x17452B80,	//0x05ea		VoC_jal(push_all)
0x0A80FF29,	//0x05ec		VoC_lw16i(REG0,0x7fff)(lo)	|	VoC_movreg32(REG23,ACC1,DEFAULT)
0x0AC17FFF,	//0x05ee		VoC_lw16i(REG1,0x8001)(lo)	|	VoC_lw16i(REG0,0x7fff)(hi)
0xFFC00001,	//0x05f0		VoC_NAD	|	VoC_lw16i(REG1,0x8001)(hi)
0x168C2B80,	//0x05f2		VoC_jal(result_check32)
0xCAD548D4,	//0x05f4		VoC_sub32_rr(ACC1,REG67,REG45,IN_PARALLEL)	|	VoC_add32_rr(ACC0,REG67,REG45,DEFAULT)
0x7FFE0A80,	//0x05f6		VoC_lw16i(REG0,0x7ffe)
0x00000AC1,	//0x05f8		VoC_lw16i(REG1,0x8000)
0xFFC07F29,	//0x05fa		VoC_NAD(IN_PARALLEL)	|	VoC_movreg32(REG23,ACC1,DEFAULT)
0x17452B80,	//0x05fc		VoC_jal(push_all)
0x168C2B80,	//0x05fe		VoC_jal(result_check32)
0x17452B80,	//0x0600		VoC_jal(push_all)
0x0A80FF21,	//0x0602		VoC_lw16i(REG0,0x7fff)(lo)	|	VoC_movreg32(REG23,ACC0,DEFAULT)
0x0AC17FFF,	//0x0604		VoC_lw16i(REG1,0x8001)(lo)	|	VoC_lw16i(REG0,0x7fff)(hi)
0xFFC00001,	//0x0606		VoC_NAD	|	VoC_lw16i(REG1,0x8001)(hi)
0x168C2B80,	//0x0608		VoC_jal(result_check32)
0x7FFF0A87,	//0x060a		VoC_lw16i(REG7,0x7fff)
0x00000AC6,	//0x060c		VoC_lw16i(REG6,0x8000)
0x00010A85,	//0x060e		VoC_lw16i(REG5,0x1)
0x00010A84,	//0x0610		VoC_lw16i(REG4,0x1)
0xC8D54AD4,	//0x0612		VoC_add32_rr(ACC1,REG67,REG45,IN_PARALLEL)	|	VoC_sub32_rr(ACC0,REG67,REG45,DEFAULT)
0x7FFE0A81,	//0x0614		VoC_lw16i(REG1,0x7ffe)
0x00000AC0,	//0x0616		VoC_lw16i(REG0,0x8000)
0xFFC07F21,	//0x0618		VoC_NAD(IN_PARALLEL)	|	VoC_movreg32(REG23,ACC0,DEFAULT)
0x17452B80,	//0x061a		VoC_jal(push_all)
0x168C2B80,	//0x061c		VoC_jal(result_check32)
0x17452B80,	//0x061e		VoC_jal(push_all)
0x0A81FF29,	//0x0620		VoC_lw16i(REG1,0x7fff)(lo)	|	VoC_movreg32(REG23,ACC1,DEFAULT)
0x0AC07FFF,	//0x0622		VoC_lw16i(REG0,0x8001)(lo)	|	VoC_lw16i(REG1,0x7fff)(hi)
0xFFC00001,	//0x0624		VoC_NAD	|	VoC_lw16i(REG0,0x8001)(hi)
0x168C2B80,	//0x0626		VoC_jal(result_check32)
0xCAD548D4,	//0x0628		VoC_sub32_rr(ACC1,REG67,REG45,IN_PARALLEL)	|	VoC_add32_rr(ACC0,REG67,REG45,DEFAULT)
0x7FFE0A81,	//0x062a		VoC_lw16i(REG1,0x7ffe)
0x00000AC0,	//0x062c		VoC_lw16i(REG0,0x8000)
0xFFC07F29,	//0x062e		VoC_NAD(IN_PARALLEL)	|	VoC_movreg32(REG23,ACC1,DEFAULT)
0x17452B80,	//0x0630		VoC_jal(push_all)
0x168C2B80,	//0x0632		VoC_jal(result_check32)
0x17452B80,	//0x0634		VoC_jal(push_all)
0x0A81FF21,	//0x0636		VoC_lw16i(REG1,0x7fff)(lo)	|	VoC_movreg32(REG23,ACC0,DEFAULT)
0x0AC07FFF,	//0x0638		VoC_lw16i(REG0,0x8001)(lo)	|	VoC_lw16i(REG1,0x7fff)(hi)
0xFFC00001,	//0x063a		VoC_NAD	|	VoC_lw16i(REG0,0x8001)(hi)
0x168C2B80,	//0x063c		VoC_jal(result_check32)
0xC1EB41A2,	//0x063e		VoC_add16_rr(REG3,REG7,REG5,IN_PARALLEL)	|	VoC_add16_rr(REG2,REG6,REG4,DEFAULT)
0x17452B80,	//0x0640		VoC_jal(push_all)
0x7FFF0A81,	//0x0642		VoC_lw16i(REG1,0x7fff)
0x00010AC0,	//0x0644		VoC_lw16i(REG0,0x8001)
0x168C2B80,	//0x0646		VoC_jal(result_check32)
0xC3EB43A2,	//0x0648		VoC_sub16_rr(REG3,REG7,REG5,IN_PARALLEL)	|	VoC_sub16_rr(REG2,REG6,REG4,DEFAULT)
0x17452B80,	//0x064a		VoC_jal(push_all)
0x7FFE0A81,	//0x064c		VoC_lw16i(REG1,0x7ffe)
0x00000AC0,	//0x064e		VoC_lw16i(REG0,0x8000)
0x168C2B80,	//0x0650		VoC_jal(result_check32)
0x00020A97,	//0x0652		VoC_lw16i(NULL,0x2)
0x00030AD7,	//0x0654		VoC_lw16i(NULL,0x8003)
0x7FFF0A86,	//0x0656		VoC_lw16i(REG6,0x7fff)
0x00000AC7,	//0x0658		VoC_lw16i(REG7,0x8000)
0x00010A84,	//0x065a		VoC_lw16i(REG4,0x1)
0x00010A85,	//0x065c		VoC_lw16i(REG5,0x1)
0xC8D5CAD4,	//0x065e		VoC_add32_rr(ACC1,REG67,REG45,DEFAULT)	|	VoC_sub32_rr(ACC0,REG67,REG45,DEFAULT)
0x7FFE0A80,	//0x0660		VoC_lw16i(REG0,0x7ffe)
0x7FFF0A81,	//0x0662		VoC_lw16i(REG1,0x7fff)
0xFFC07F21,	//0x0664		VoC_NAD(IN_PARALLEL)	|	VoC_movreg32(REG23,ACC0,DEFAULT)
0x17452B80,	//0x0666		VoC_jal(push_all)
0x168C2B80,	//0x0668		VoC_jal(result_check32)
0x17452B80,	//0x066a		VoC_jal(push_all)
0x0A80FF29,	//0x066c		VoC_lw16i(REG0,0x7fff)(lo)	|	VoC_movreg32(REG23,ACC1,DEFAULT)
0x0A817FFF,	//0x066e		VoC_lw16i(REG1,0x7fff)(lo)	|	VoC_lw16i(REG0,0x7fff)(hi)
0x2B807FFF,	//0x0670		VoC_jal(result_check32)(lo)	|	VoC_lw16i(REG1,0x7fff)(hi)
0xC8D4168C,	//0x0672		VoC_add32_rr(ACC0,REG67,REG45,DEFAULT)	|	VoC_jal(result_check32)(hi)
0x0A80CAD5,	//0x0674		VoC_lw16i(REG0,0x7ffe)(lo)	|	VoC_sub32_rr(ACC1,REG67,REG45,DEFAULT)
0x0A817FFE,	//0x0676		VoC_lw16i(REG1,0x7fff)(lo)	|	VoC_lw16i(REG0,0x7ffe)(hi)
0xFF297FFF,	//0x0678		VoC_movreg32(REG23,ACC1,DEFAULT)	|	VoC_lw16i(REG1,0x7fff)(hi)
0x17452B80,	//0x067a		VoC_jal(push_all)
0x168C2B80,	//0x067c		VoC_jal(result_check32)
0x17452B80,	//0x067e		VoC_jal(push_all)
0x0A80FF21,	//0x0680		VoC_lw16i(REG0,0x7fff)(lo)	|	VoC_movreg32(REG23,ACC0,DEFAULT)
0x0A817FFF,	//0x0682		VoC_lw16i(REG1,0x7fff)(lo)	|	VoC_lw16i(REG0,0x7fff)(hi)
0xFFC07FFF,	//0x0684		VoC_NAD	|	VoC_lw16i(REG1,0x7fff)(hi)
0x168C2B80,	//0x0686		VoC_jal(result_check32)
0x7FFF0A87,	//0x0688		VoC_lw16i(REG7,0x7fff)
0x00000AC6,	//0x068a		VoC_lw16i(REG6,0x8000)
0x00010A85,	//0x068c		VoC_lw16i(REG5,0x1)
0x00010A84,	//0x068e		VoC_lw16i(REG4,0x1)
0xC8D5CAD4,	//0x0690		VoC_add32_rr(ACC1,REG67,REG45,DEFAULT)	|	VoC_sub32_rr(ACC0,REG67,REG45,DEFAULT)
0x7FFE0A81,	//0x0692		VoC_lw16i(REG1,0x7ffe)
0x7FFF0A80,	//0x0694		VoC_lw16i(REG0,0x7fff)
0xFFC07F21,	//0x0696		VoC_NAD(IN_PARALLEL)	|	VoC_movreg32(REG23,ACC0,DEFAULT)
0x17452B80,	//0x0698		VoC_jal(push_all)
0x168C2B80,	//0x069a		VoC_jal(result_check32)
0x17452B80,	//0x069c		VoC_jal(push_all)
0x0A81FF29,	//0x069e		VoC_lw16i(REG1,0x7fff)(lo)	|	VoC_movreg32(REG23,ACC1,DEFAULT)
0x0A807FFF,	//0x06a0		VoC_lw16i(REG0,0x7fff)(lo)	|	VoC_lw16i(REG1,0x7fff)(hi)
0x2B807FFF,	//0x06a2		VoC_jal(result_check32)(lo)	|	VoC_lw16i(REG0,0x7fff)(hi)
0xC8D4168C,	//0x06a4		VoC_add32_rr(ACC0,REG67,REG45,DEFAULT)	|	VoC_jal(result_check32)(hi)
0x0A81CAD5,	//0x06a6		VoC_lw16i(REG1,0x7ffe)(lo)	|	VoC_sub32_rr(ACC1,REG67,REG45,DEFAULT)
0x0A807FFE,	//0x06a8		VoC_lw16i(REG0,0x7fff)(lo)	|	VoC_lw16i(REG1,0x7ffe)(hi)
0xFF297FFF,	//0x06aa		VoC_movreg32(REG23,ACC1,DEFAULT)	|	VoC_lw16i(REG0,0x7fff)(hi)
0x17452B80,	//0x06ac		VoC_jal(push_all)
0x168C2B80,	//0x06ae		VoC_jal(result_check32)
0x17452B80,	//0x06b0		VoC_jal(push_all)
0x0A81FF21,	//0x06b2		VoC_lw16i(REG1,0x7fff)(lo)	|	VoC_movreg32(REG23,ACC0,DEFAULT)
0x0A807FFF,	//0x06b4		VoC_lw16i(REG0,0x7fff)(lo)	|	VoC_lw16i(REG1,0x7fff)(hi)
0xFFC07FFF,	//0x06b6		VoC_NAD	|	VoC_lw16i(REG0,0x7fff)(hi)
0x168C2B80,	//0x06b8		VoC_jal(result_check32)
0xC1EB41A2,	//0x06ba		VoC_add16_rr(REG3,REG7,REG5,IN_PARALLEL)	|	VoC_add16_rr(REG2,REG6,REG4,DEFAULT)
0x17452B80,	//0x06bc		VoC_jal(push_all)
0x7FFF0A81,	//0x06be		VoC_lw16i(REG1,0x7fff)
0x00010AC0,	//0x06c0		VoC_lw16i(REG0,0x8001)
0x168C2B80,	//0x06c2		VoC_jal(result_check32)
0xC3EB43A2,	//0x06c4		VoC_sub16_rr(REG3,REG7,REG5,IN_PARALLEL)	|	VoC_sub16_rr(REG2,REG6,REG4,DEFAULT)
0x17452B80,	//0x06c6		VoC_jal(push_all)
0x7FFE0A81,	//0x06c8		VoC_lw16i(REG1,0x7ffe)
0x00000AC0,	//0x06ca		VoC_lw16i(REG0,0x8000)
0x168C2B80,	//0x06cc		VoC_jal(result_check32)
0x00030A97,	//0x06ce		VoC_lw16i(NULL,0x3)
0x00040AD7,	//0x06d0		VoC_lw16i(NULL,0x8004)
0x00070A84,	//0x06d2		VoC_lw16i(REG4,0x7)
0x00040A85,	//0x06d4		VoC_lw16i(REG5,0x4)
0x10000A86,	//0x06d6		VoC_lw16i(REG6,0x1000)
0x10000A87,	//0x06d8		VoC_lw16i(REG7,0x1000)
0x10000A8E,	//0x06da		VoC_lw16i(RL7_LO,0x1000)
0x10000A8F,	//0x06dc		VoC_lw16i(RL7_HI,0x1000)
0xF8277826,	//0x06de		VoC_shr16_ri(REG7,0x4,IN_PARALLEL)	|	VoC_shr16_ri(REG6,0x4,DEFAULT)
0x10000A80,	//0x06e0		VoC_lw16i(REG0,0x1000)
0x01000A81,	//0x06e2		VoC_lw16i(REG1,0x100)
0xFFC07F19,	//0x06e4		VoC_NAD(IN_PARALLEL)	|	VoC_movreg32(REG23,REG67,DEFAULT)
0x17452B80,	//0x06e6		VoC_jal(push_all)
0x168C2B80,	//0x06e8		VoC_jal(result_check32)
0x01000A80,	//0x06ea		VoC_lw16i(REG0,0x100)
0x10000A81,	//0x06ec		VoC_lw16i(REG1,0x1000)
0xFFC07F39,	//0x06ee		VoC_NAD(IN_PARALLEL)	|	VoC_movreg32(REG23,RL7,DEFAULT)
0x17452B80,	//0x06f0		VoC_jal(push_all)
0x168C2B80,	//0x06f2		VoC_jal(result_check32)
0xFE2F7E2E,	//0x06f4		VoC_shr16_rr(REG7,REG5,IN_PARALLEL)	|	VoC_shr16_rr(REG6,REG5,DEFAULT)
0x10000A80,	//0x06f6		VoC_lw16i(REG0,0x1000)
0x00100A81,	//0x06f8		VoC_lw16i(REG1,0x10)
0xFFC07F19,	//0x06fa		VoC_NAD(IN_PARALLEL)	|	VoC_movreg32(REG23,REG67,DEFAULT)
0x17452B80,	//0x06fc		VoC_jal(push_all)
0x168C2B80,	//0x06fe		VoC_jal(result_check32)
0x00100A80,	//0x0700		VoC_lw16i(REG0,0x10)
0x10000A81,	//0x0702		VoC_lw16i(REG1,0x1000)
0xFFC07F39,	//0x0704		VoC_NAD(IN_PARALLEL)	|	VoC_movreg32(REG23,RL7,DEFAULT)
0x17452B80,	//0x0706		VoC_jal(push_all)
0x168C2B80,	//0x0708		VoC_jal(result_check32)
0xF9AF79AE,	//0x070a		VoC_shru16_ri(REG7,0xfffffff5,IN_PARALLEL)	|	VoC_shru16_ri(REG6,0xfffffff5,DEFAULT)
0x10000A80,	//0x070c		VoC_lw16i(REG0,0x1000)
0x00000AC1,	//0x070e		VoC_lw16i(REG1,0x8000)
0xFFC07F19,	//0x0710		VoC_NAD(IN_PARALLEL)	|	VoC_movreg32(REG23,REG67,DEFAULT)
0x17452B80,	//0x0712		VoC_jal(push_all)
0x168C2B80,	//0x0714		VoC_jal(result_check32)
0x00000AC0,	//0x0716		VoC_lw16i(REG0,0x8000)
0x10000A81,	//0x0718		VoC_lw16i(REG1,0x1000)
0xFFC07F39,	//0x071a		VoC_NAD(IN_PARALLEL)	|	VoC_movreg32(REG23,RL7,DEFAULT)
0x17452B80,	//0x071c		VoC_jal(push_all)
0x168C2B80,	//0x071e		VoC_jal(result_check32)
0xFE677E66,	//0x0720		VoC_shru16_rr(REG7,REG4,IN_PARALLEL)	|	VoC_shru16_rr(REG6,REG4,DEFAULT)
0x10000A80,	//0x0722		VoC_lw16i(REG0,0x1000)
0x01000A81,	//0x0724		VoC_lw16i(REG1,0x100)
0xFFC07F19,	//0x0726		VoC_NAD(IN_PARALLEL)	|	VoC_movreg32(REG23,REG67,DEFAULT)
0x17452B80,	//0x0728		VoC_jal(push_all)
0x168C2B80,	//0x072a		VoC_jal(result_check32)
0x01000A80,	//0x072c		VoC_lw16i(REG0,0x100)
0x10000A81,	//0x072e		VoC_lw16i(REG1,0x1000)
0xFFC07F39,	//0x0730		VoC_NAD(IN_PARALLEL)	|	VoC_movreg32(REG23,RL7,DEFAULT)
0x17452B80,	//0x0732		VoC_jal(push_all)
0x168C2B80,	//0x0734		VoC_jal(result_check32)
0xDEE743AE,	//0x0736		VoC_clipu16_rr(REG7,REG4,IN_PARALLEL)	|	VoC_sub16_rr(REG6,REG6,REG5,DEFAULT)
0x0FFC0A80,	//0x0738		VoC_lw16i(REG0,0xffc)
0x00070A81,	//0x073a		VoC_lw16i(REG1,0x7)
0xFFC07F19,	//0x073c		VoC_NAD(IN_PARALLEL)	|	VoC_movreg32(REG23,REG67,DEFAULT)
0x17452B80,	//0x073e		VoC_jal(push_all)
0x168C2B80,	//0x0740		VoC_jal(result_check32)
0x01000A80,	//0x0742		VoC_lw16i(REG0,0x100)
0x10000A81,	//0x0744		VoC_lw16i(REG1,0x1000)
0xFFC07F39,	//0x0746		VoC_NAD(IN_PARALLEL)	|	VoC_movreg32(REG23,RL7,DEFAULT)
0x17452B80,	//0x0748		VoC_jal(push_all)
0x168C2B80,	//0x074a		VoC_jal(result_check32)
0xDEAF41AE,	//0x074c		VoC_clip16_rr(REG7,REG5,IN_PARALLEL)	|	VoC_add16_rr(REG6,REG6,REG5,DEFAULT)
0x10000A80,	//0x074e		VoC_lw16i(REG0,0x1000)
0x00040A81,	//0x0750		VoC_lw16i(REG1,0x4)
0xFFC07F19,	//0x0752		VoC_NAD(IN_PARALLEL)	|	VoC_movreg32(REG23,REG67,DEFAULT)
0x17452B80,	//0x0754		VoC_jal(push_all)
0x168C2B80,	//0x0756		VoC_jal(result_check32)
0x01000A80,	//0x0758		VoC_lw16i(REG0,0x100)
0x10000A81,	//0x075a		VoC_lw16i(REG1,0x1000)
0xFFC07F39,	//0x075c		VoC_NAD(IN_PARALLEL)	|	VoC_movreg32(REG23,RL7,DEFAULT)
0x17452B80,	//0x075e		VoC_jal(push_all)
0x168C2B80,	//0x0760		VoC_jal(result_check32)
0x00040A97,	//0x0762		VoC_lw16i(NULL,0x4)
0x00080AD7,	//0x0764		VoC_lw16i(NULL,0x8008)
0x00070A84,	//0x0766		VoC_lw16i(REG4,0x7)
0x00040A85,	//0x0768		VoC_lw16i(REG5,0x4)
0x10000A86,	//0x076a		VoC_lw16i(REG6,0x1000)
0x10000A87,	//0x076c		VoC_lw16i(REG7,0x1000)
0x10000A8E,	//0x076e		VoC_lw16i(RL7_LO,0x1000)
0x10000A8F,	//0x0770		VoC_lw16i(RL7_HI,0x1000)
0xF8277826,	//0x0772		VoC_shr16_ri(REG7,0x4,IN_PARALLEL)	|	VoC_shr16_ri(REG6,0x4,DEFAULT)
0x10000A81,	//0x0774		VoC_lw16i(REG1,0x1000)
0x01000A80,	//0x0776		VoC_lw16i(REG0,0x100)
0xFFC07F19,	//0x0778		VoC_NAD(IN_PARALLEL)	|	VoC_movreg32(REG23,REG67,DEFAULT)
0x17452B80,	//0x077a		VoC_jal(push_all)
0x168C2B80,	//0x077c		VoC_jal(result_check32)
0x01000A81,	//0x077e		VoC_lw16i(REG1,0x100)
0x10000A80,	//0x0780		VoC_lw16i(REG0,0x1000)
0xFFC07F39,	//0x0782		VoC_NAD(IN_PARALLEL)	|	VoC_movreg32(REG23,RL7,DEFAULT)
0x17452B80,	//0x0784		VoC_jal(push_all)
0x168C2B80,	//0x0786		VoC_jal(result_check32)
0xFE2F7E2E,	//0x0788		VoC_shr16_rr(REG7,REG5,IN_PARALLEL)	|	VoC_shr16_rr(REG6,REG5,DEFAULT)
0x10000A81,	//0x078a		VoC_lw16i(REG1,0x1000)
0x00100A80,	//0x078c		VoC_lw16i(REG0,0x10)
0xFFC07F19,	//0x078e		VoC_NAD(IN_PARALLEL)	|	VoC_movreg32(REG23,REG67,DEFAULT)
0x17452B80,	//0x0790		VoC_jal(push_all)
0x168C2B80,	//0x0792		VoC_jal(result_check32)
0x00100A81,	//0x0794		VoC_lw16i(REG1,0x10)
0x10000A80,	//0x0796		VoC_lw16i(REG0,0x1000)
0xFFC07F39,	//0x0798		VoC_NAD(IN_PARALLEL)	|	VoC_movreg32(REG23,RL7,DEFAULT)
0x17452B80,	//0x079a		VoC_jal(push_all)
0x168C2B80,	//0x079c		VoC_jal(result_check32)
0xF9AF79AE,	//0x079e		VoC_shru16_ri(REG7,0xfffffff5,IN_PARALLEL)	|	VoC_shru16_ri(REG6,0xfffffff5,DEFAULT)
0x10000A81,	//0x07a0		VoC_lw16i(REG1,0x1000)
0x00000AC0,	//0x07a2		VoC_lw16i(REG0,0x8000)
0xFFC07F19,	//0x07a4		VoC_NAD(IN_PARALLEL)	|	VoC_movreg32(REG23,REG67,DEFAULT)
0x17452B80,	//0x07a6		VoC_jal(push_all)
0x168C2B80,	//0x07a8		VoC_jal(result_check32)
0x00000AC1,	//0x07aa		VoC_lw16i(REG1,0x8000)
0x10000A80,	//0x07ac		VoC_lw16i(REG0,0x1000)
0xFFC07F39,	//0x07ae		VoC_NAD(IN_PARALLEL)	|	VoC_movreg32(REG23,RL7,DEFAULT)
0x17452B80,	//0x07b0		VoC_jal(push_all)
0x168C2B80,	//0x07b2		VoC_jal(result_check32)
0xFE677E66,	//0x07b4		VoC_shru16_rr(REG7,REG4,IN_PARALLEL)	|	VoC_shru16_rr(REG6,REG4,DEFAULT)
0x10000A81,	//0x07b6		VoC_lw16i(REG1,0x1000)
0x01000A80,	//0x07b8		VoC_lw16i(REG0,0x100)
0xFFC07F19,	//0x07ba		VoC_NAD(IN_PARALLEL)	|	VoC_movreg32(REG23,REG67,DEFAULT)
0x17452B80,	//0x07bc		VoC_jal(push_all)
0x168C2B80,	//0x07be		VoC_jal(result_check32)
0x01000A81,	//0x07c0		VoC_lw16i(REG1,0x100)
0x10000A80,	//0x07c2		VoC_lw16i(REG0,0x1000)
0xFFC07F39,	//0x07c4		VoC_NAD(IN_PARALLEL)	|	VoC_movreg32(REG23,RL7,DEFAULT)
0x17452B80,	//0x07c6		VoC_jal(push_all)
0x168C2B80,	//0x07c8		VoC_jal(result_check32)
0xDEE743AE,	//0x07ca		VoC_clipu16_rr(REG7,REG4,IN_PARALLEL)	|	VoC_sub16_rr(REG6,REG6,REG5,DEFAULT)
0x10000A81,	//0x07cc		VoC_lw16i(REG1,0x1000)
0x00FC0A80,	//0x07ce		VoC_lw16i(REG0,0xfc)
0xFFC07F19,	//0x07d0		VoC_NAD(IN_PARALLEL)	|	VoC_movreg32(REG23,REG67,DEFAULT)
0x17452B80,	//0x07d2		VoC_jal(push_all)
0x168C2B80,	//0x07d4		VoC_jal(result_check32)
0x00070A81,	//0x07d6		VoC_lw16i(REG1,0x7)
0x10000A80,	//0x07d8		VoC_lw16i(REG0,0x1000)
0xFFC07F39,	//0x07da		VoC_NAD(IN_PARALLEL)	|	VoC_movreg32(REG23,RL7,DEFAULT)
0x17452B80,	//0x07dc		VoC_jal(push_all)
0x168C2B80,	//0x07de		VoC_jal(result_check32)
0xDEAF41AE,	//0x07e0		VoC_clip16_rr(REG7,REG5,IN_PARALLEL)	|	VoC_add16_rr(REG6,REG6,REG5,DEFAULT)
0x10000A81,	//0x07e2		VoC_lw16i(REG1,0x1000)
0x01000A80,	//0x07e4		VoC_lw16i(REG0,0x100)
0xFFC07F19,	//0x07e6		VoC_NAD(IN_PARALLEL)	|	VoC_movreg32(REG23,REG67,DEFAULT)
0x17452B80,	//0x07e8		VoC_jal(push_all)
0x168C2B80,	//0x07ea		VoC_jal(result_check32)
0x00040A81,	//0x07ec		VoC_lw16i(REG1,0x4)
0x10000A80,	//0x07ee		VoC_lw16i(REG0,0x1000)
0xFFC07F39,	//0x07f0		VoC_NAD(IN_PARALLEL)	|	VoC_movreg32(REG23,RL7,DEFAULT)
0x17452B80,	//0x07f2		VoC_jal(push_all)
0x168C2B80,	//0x07f4		VoC_jal(result_check32)
0x00080A97,	//0x07f6		VoC_lw16i(NULL,0x8)
0x000C0AD7,	//0x07f8		VoC_lw16i(NULL,0x800c)
0x10000A86,	//0x07fa		VoC_lw16i(REG6,0x1000)
0x10000A87,	//0x07fc		VoC_lw16i(REG7,0x1000)
0x10000A8E,	//0x07fe		VoC_lw16i(RL7_LO,0x1000)
0x10000A8F,	//0x0800		VoC_lw16i(RL7_HI,0x1000)
0xF8277826,	//0x0802		VoC_shr16_ri(REG7,0x4,IN_PARALLEL)	|	VoC_shr16_ri(REG6,0x4,DEFAULT)
0x10000A80,	//0x0804		VoC_lw16i(REG0,0x1000)
0x10000A81,	//0x0806		VoC_lw16i(REG1,0x1000)
0xFFC07F19,	//0x0808		VoC_NAD(IN_PARALLEL)	|	VoC_movreg32(REG23,REG67,DEFAULT)
0x17452B80,	//0x080a		VoC_jal(push_all)
0x168C2B80,	//0x080c		VoC_jal(result_check32)
0x01000A80,	//0x080e		VoC_lw16i(REG0,0x100)
0x01000A81,	//0x0810		VoC_lw16i(REG1,0x100)
0xFFC07F39,	//0x0812		VoC_NAD(IN_PARALLEL)	|	VoC_movreg32(REG23,RL7,DEFAULT)
0x17452B80,	//0x0814		VoC_jal(push_all)
0x168C2B80,	//0x0816		VoC_jal(result_check32)
0xFE2F7E2E,	//0x0818		VoC_shr16_rr(REG7,REG5,IN_PARALLEL)	|	VoC_shr16_rr(REG6,REG5,DEFAULT)
0x10000A80,	//0x081a		VoC_lw16i(REG0,0x1000)
0x10000A81,	//0x081c		VoC_lw16i(REG1,0x1000)
0xFFC07F19,	//0x081e		VoC_NAD(IN_PARALLEL)	|	VoC_movreg32(REG23,REG67,DEFAULT)
0x17452B80,	//0x0820		VoC_jal(push_all)
0x168C2B80,	//0x0822		VoC_jal(result_check32)
0x00100A80,	//0x0824		VoC_lw16i(REG0,0x10)
0x00100A81,	//0x0826		VoC_lw16i(REG1,0x10)
0xFFC07F39,	//0x0828		VoC_NAD(IN_PARALLEL)	|	VoC_movreg32(REG23,RL7,DEFAULT)
0x17452B80,	//0x082a		VoC_jal(push_all)
0x168C2B80,	//0x082c		VoC_jal(result_check32)
0xF9AF79AE,	//0x082e		VoC_shru16_ri(REG7,0xfffffff5,IN_PARALLEL)	|	VoC_shru16_ri(REG6,0xfffffff5,DEFAULT)
0x10000A80,	//0x0830		VoC_lw16i(REG0,0x1000)
0x10000A81,	//0x0832		VoC_lw16i(REG1,0x1000)
0xFFC07F19,	//0x0834		VoC_NAD(IN_PARALLEL)	|	VoC_movreg32(REG23,REG67,DEFAULT)
0x17452B80,	//0x0836		VoC_jal(push_all)
0x168C2B80,	//0x0838		VoC_jal(result_check32)
0x00000AC0,	//0x083a		VoC_lw16i(REG0,0x8000)
0x00000AC1,	//0x083c		VoC_lw16i(REG1,0x8000)
0xFFC07F39,	//0x083e		VoC_NAD(IN_PARALLEL)	|	VoC_movreg32(REG23,RL7,DEFAULT)
0x17452B80,	//0x0840		VoC_jal(push_all)
0x168C2B80,	//0x0842		VoC_jal(result_check32)
0xFE677E66,	//0x0844		VoC_shru16_rr(REG7,REG4,IN_PARALLEL)	|	VoC_shru16_rr(REG6,REG4,DEFAULT)
0x10000A80,	//0x0846		VoC_lw16i(REG0,0x1000)
0x10000A81,	//0x0848		VoC_lw16i(REG1,0x1000)
0xFFC07F19,	//0x084a		VoC_NAD(IN_PARALLEL)	|	VoC_movreg32(REG23,REG67,DEFAULT)
0x17452B80,	//0x084c		VoC_jal(push_all)
0x168C2B80,	//0x084e		VoC_jal(result_check32)
0x01000A80,	//0x0850		VoC_lw16i(REG0,0x100)
0x01000A81,	//0x0852		VoC_lw16i(REG1,0x100)
0xFFC07F39,	//0x0854		VoC_NAD(IN_PARALLEL)	|	VoC_movreg32(REG23,RL7,DEFAULT)
0x17452B80,	//0x0856		VoC_jal(push_all)
0x168C2B80,	//0x0858		VoC_jal(result_check32)
0xDEE743AE,	//0x085a		VoC_clipu16_rr(REG7,REG4,IN_PARALLEL)	|	VoC_sub16_rr(REG6,REG6,REG5,DEFAULT)
0x0FFC0A80,	//0x085c		VoC_lw16i(REG0,0xffc)
0x10000A81,	//0x085e		VoC_lw16i(REG1,0x1000)
0xFFC07F19,	//0x0860		VoC_NAD(IN_PARALLEL)	|	VoC_movreg32(REG23,REG67,DEFAULT)
0x17452B80,	//0x0862		VoC_jal(push_all)
0x168C2B80,	//0x0864		VoC_jal(result_check32)
0x01000A80,	//0x0866		VoC_lw16i(REG0,0x100)
0x00070A81,	//0x0868		VoC_lw16i(REG1,0x7)
0xFFC07F39,	//0x086a		VoC_NAD(IN_PARALLEL)	|	VoC_movreg32(REG23,RL7,DEFAULT)
0x17452B80,	//0x086c		VoC_jal(push_all)
0x168C2B80,	//0x086e		VoC_jal(result_check32)
0xDEAF41AE,	//0x0870		VoC_clip16_rr(REG7,REG5,IN_PARALLEL)	|	VoC_add16_rr(REG6,REG6,REG5,DEFAULT)
0x10000A80,	//0x0872		VoC_lw16i(REG0,0x1000)
0x10000A81,	//0x0874		VoC_lw16i(REG1,0x1000)
0xFFC07F19,	//0x0876		VoC_NAD(IN_PARALLEL)	|	VoC_movreg32(REG23,REG67,DEFAULT)
0x17452B80,	//0x0878		VoC_jal(push_all)
0x168C2B80,	//0x087a		VoC_jal(result_check32)
0x01000A80,	//0x087c		VoC_lw16i(REG0,0x100)
0x00040A81,	//0x087e		VoC_lw16i(REG1,0x4)
0xFFC07F39,	//0x0880		VoC_NAD(IN_PARALLEL)	|	VoC_movreg32(REG23,RL7,DEFAULT)
0x17452B80,	//0x0882		VoC_jal(push_all)
0x168C2B80,	//0x0884		VoC_jal(result_check32)
0x000C0A97,	//0x0886		VoC_lw16i(NULL,0xc)
0x00001808,	//0x0888		VoC_lw16i_set_inc(REG0,0x0,0x2)
0x7EC80A8F,	//0x088a		VoC_lw16i(RL7_HI,0x7ec8)
0x03470A8E,	//0x088c		VoC_lw16i(RL7_LO,0x347)
0x44420ACF,	//0x088e		VoC_lw16i(RL7_HI,0xc442)
0x0A8EDDC7,	//0x0890		VoC_lw16i(RL7_LO,0x7881)(lo)	|	VoC_sw32inc_p(RL7,REG0,DEFAULT)
0x0A8F7881,	//0x0892		VoC_lw16i(RL7_HI,0x7d16)(lo)	|	VoC_lw16i(RL7_LO,0x7881)(hi)
0xDDC77D16,	//0x0894		VoC_sw32inc_p(RL7,REG0,DEFAULT)	|	VoC_lw16i(RL7_HI,0x7d16)(hi)
0x6BCE0A8E,	//0x0896		VoC_lw16i(RL7_LO,0x6bce)
0x761B0A8F,	//0x0898		VoC_lw16i(RL7_HI,0x761b)
0x0A8EDDC7,	//0x089a		VoC_lw16i(RL7_LO,0x7043)(lo)	|	VoC_sw32inc_p(RL7,REG0,DEFAULT)
0x0A8F7043,	//0x089c		VoC_lw16i(RL7_HI,0x4638)(lo)	|	VoC_lw16i(RL7_LO,0x7043)(hi)
0xDDC74638,	//0x089e		VoC_sw32inc_p(RL7,REG0,DEFAULT)	|	VoC_lw16i(RL7_HI,0x4638)(hi)
0x69850A8E,	//0x08a0		VoC_lw16i(RL7_LO,0x6985)
0x341B0A8F,	//0x08a2		VoC_lw16i(RL7_HI,0x341b)
0x0A8EDDC7,	//0x08a4		VoC_lw16i(RL7_LO,0x4cdb)(lo)	|	VoC_sw32inc_p(RL7,REG0,DEFAULT)
0x0A8F4CDB,	//0x08a6		VoC_lw16i(RL7_HI,0x552e)(lo)	|	VoC_lw16i(RL7_LO,0x4cdb)(hi)
0xDDC7552E,	//0x08a8		VoC_sw32inc_p(RL7,REG0,DEFAULT)	|	VoC_lw16i(RL7_HI,0x552e)(hi)
0x27870A8E,	//0x08aa		VoC_lw16i(RL7_LO,0x2787)
0x75C70ACF,	//0x08ac		VoC_lw16i(RL7_HI,0xf5c7)
0x0A8EDDC7,	//0x08ae		VoC_lw16i(RL7_LO,0x6157)(lo)	|	VoC_sw32inc_p(RL7,REG0,DEFAULT)
0x0A8F6157,	//0x08b0		VoC_lw16i(RL7_HI,0x38a0)(lo)	|	VoC_lw16i(RL7_LO,0x6157)(hi)
0xDDC738A0,	//0x08b2		VoC_sw32inc_p(RL7,REG0,DEFAULT)	|	VoC_lw16i(RL7_HI,0x38a0)(hi)
0x42770A8E,	//0x08b4		VoC_lw16i(RL7_LO,0x4277)
0x01860A8F,	//0x08b6		VoC_lw16i(RL7_HI,0x186)
0x0ACEDDC7,	//0x08b8		VoC_lw16i(RL7_LO,0xb589)(lo)	|	VoC_sw32inc_p(RL7,REG0,DEFAULT)
0x0A8F3589,	//0x08ba		VoC_lw16i(RL7_HI,0x1355)(lo)	|	VoC_lw16i(RL7_LO,0xb589)(hi)
0xDDC71355,	//0x08bc		VoC_sw32inc_p(RL7,REG0,DEFAULT)	|	VoC_lw16i(RL7_HI,0x1355)(hi)
0x4DF70A8E,	//0x08be		VoC_lw16i(RL7_LO,0x4df7)
0x77230A8F,	//0x08c0		VoC_lw16i(RL7_HI,0x7723)
0x0ACEDDC7,	//0x08c2		VoC_lw16i(RL7_LO,0x8788)(lo)	|	VoC_sw32inc_p(RL7,REG0,DEFAULT)
0x0A8F0788,	//0x08c4		VoC_lw16i(RL7_HI,0x1dbc)(lo)	|	VoC_lw16i(RL7_LO,0x8788)(hi)
0xDDC71DBC,	//0x08c6		VoC_sw32inc_p(RL7,REG0,DEFAULT)	|	VoC_lw16i(RL7_HI,0x1dbc)(hi)
0x4F320A8E,	//0x08c8		VoC_lw16i(RL7_LO,0x4f32)
0x464F0ACF,	//0x08ca		VoC_lw16i(RL7_HI,0xc64f)
0x0ACEDDC7,	//0x08cc		VoC_lw16i(RL7_LO,0xc530)(lo)	|	VoC_sw32inc_p(RL7,REG0,DEFAULT)
0x0A8F4530,	//0x08ce		VoC_lw16i(RL7_HI,0x2066)(lo)	|	VoC_lw16i(RL7_LO,0xc530)(hi)
0xDDC72066,	//0x08d0		VoC_sw32inc_p(RL7,REG0,DEFAULT)	|	VoC_lw16i(RL7_HI,0x2066)(hi)
0x40540A8E,	//0x08d2		VoC_lw16i(RL7_LO,0x4054)
0x331B0A8F,	//0x08d4		VoC_lw16i(RL7_HI,0x331b)
0x0ACEDDC7,	//0x08d6		VoC_lw16i(RL7_LO,0x939d)(lo)	|	VoC_sw32inc_p(RL7,REG0,DEFAULT)
0x0ACF139D,	//0x08d8		VoC_lw16i(RL7_HI,0xfd89)(lo)	|	VoC_lw16i(RL7_LO,0x939d)(hi)
0xDDC77D89,	//0x08da		VoC_sw32inc_p(RL7,REG0,DEFAULT)	|	VoC_lw16i(RL7_HI,0xfd89)(hi)
0x100C0ACE,	//0x08dc		VoC_lw16i(RL7_LO,0x900c)
0x59820A8F,	//0x08de		VoC_lw16i(RL7_HI,0x5982)
0x0ACEDDC7,	//0x08e0		VoC_lw16i(RL7_LO,0xcbb4)(lo)	|	VoC_sw32inc_p(RL7,REG0,DEFAULT)
0x0A8F4BB4,	//0x08e2		VoC_lw16i(RL7_HI,0x2680)(lo)	|	VoC_lw16i(RL7_LO,0xcbb4)(hi)
0xDDC72680,	//0x08e4		VoC_sw32inc_p(RL7,REG0,DEFAULT)	|	VoC_lw16i(RL7_HI,0x2680)(hi)
0x21110ACE,	//0x08e6		VoC_lw16i(RL7_LO,0xa111)
0x24DD0ACF,	//0x08e8		VoC_lw16i(RL7_HI,0xa4dd)
0x0A8EDDC7,	//0x08ea		VoC_lw16i(RL7_LO,0x789a)(lo)	|	VoC_sw32inc_p(RL7,REG0,DEFAULT)
0x0A8F789A,	//0x08ec		VoC_lw16i(RL7_HI,0x2146)(lo)	|	VoC_lw16i(RL7_LO,0x789a)(hi)
0xDDC72146,	//0x08ee		VoC_sw32inc_p(RL7,REG0,DEFAULT)	|	VoC_lw16i(RL7_HI,0x2146)(hi)
0x47990A8E,	//0x08f0		VoC_lw16i(RL7_LO,0x4799)
0x566D0ACF,	//0x08f2		VoC_lw16i(RL7_HI,0xd66d)
0x0A8EDDC7,	//0x08f4		VoC_lw16i(RL7_LO,0x5a3b)(lo)	|	VoC_sw32inc_p(RL7,REG0,DEFAULT)
0x0A8F5A3B,	//0x08f6		VoC_lw16i(RL7_HI,0xcfe)(lo)	|	VoC_lw16i(RL7_LO,0x5a3b)(hi)
0xDDC70CFE,	//0x08f8		VoC_sw32inc_p(RL7,REG0,DEFAULT)	|	VoC_lw16i(RL7_HI,0xcfe)(hi)
0x4FE30A8E,	//0x08fa		VoC_lw16i(RL7_LO,0x4fe3)
0x03D50ACF,	//0x08fc		VoC_lw16i(RL7_HI,0x83d5)
0x0A8EDDC7,	//0x08fe		VoC_lw16i(RL7_LO,0x65c4)(lo)	|	VoC_sw32inc_p(RL7,REG0,DEFAULT)
0x0A8F65C4,	//0x0900		VoC_lw16i(RL7_HI,0x136e)(lo)	|	VoC_lw16i(RL7_LO,0x65c4)(hi)
0xDDC7136E,	//0x0902		VoC_sw32inc_p(RL7,REG0,DEFAULT)	|	VoC_lw16i(RL7_HI,0x136e)(hi)
0x76AF0ACE,	//0x0904		VoC_lw16i(RL7_LO,0xf6af)
0x149C0ACF,	//0x0906		VoC_lw16i(RL7_HI,0x949c)
0x0A8EDDC7,	//0x0908		VoC_lw16i(RL7_LO,0x4129)(lo)	|	VoC_sw32inc_p(RL7,REG0,DEFAULT)
0x0ACF4129,	//0x090a		VoC_lw16i(RL7_HI,0xfc7e)(lo)	|	VoC_lw16i(RL7_LO,0x4129)(hi)
0xDDC77C7E,	//0x090c		VoC_sw32inc_p(RL7,REG0,DEFAULT)	|	VoC_lw16i(RL7_HI,0xfc7e)(hi)
0x6DC10A8E,	//0x090e		VoC_lw16i(RL7_LO,0x6dc1)
0x47AF0ACF,	//0x0910		VoC_lw16i(RL7_HI,0xc7af)
0x0ACEDDC7,	//0x0912		VoC_lw16i(RL7_LO,0xcba1)(lo)	|	VoC_sw32inc_p(RL7,REG0,DEFAULT)
0x0ACF4BA1,	//0x0914		VoC_lw16i(RL7_HI,0x9325)(lo)	|	VoC_lw16i(RL7_LO,0xcba1)(hi)
0xDDC71325,	//0x0916		VoC_sw32inc_p(RL7,REG0,DEFAULT)	|	VoC_lw16i(RL7_HI,0x9325)(hi)
0x1CBE0ACE,	//0x0918		VoC_lw16i(RL7_LO,0x9cbe)
0x5BDF0A8F,	//0x091a		VoC_lw16i(RL7_HI,0x5bdf)
0x0A8EDDC7,	//0x091c		VoC_lw16i(RL7_LO,0x2dde)(lo)	|	VoC_sw32inc_p(RL7,REG0,DEFAULT)
0x0A8F2DDE,	//0x091e		VoC_lw16i(RL7_HI,0x5cf4)(lo)	|	VoC_lw16i(RL7_LO,0x2dde)(hi)
0xDDC75CF4,	//0x0920		VoC_sw32inc_p(RL7,REG0,DEFAULT)	|	VoC_lw16i(RL7_HI,0x5cf4)(hi)
0x5FDE0A8E,	//0x0922		VoC_lw16i(RL7_LO,0x5fde)
0x7A080A8F,	//0x0924		VoC_lw16i(RL7_HI,0x7a08)
0x0ACEDDC7,	//0x0926		VoC_lw16i(RL7_LO,0xab5b)(lo)	|	VoC_sw32inc_p(RL7,REG0,DEFAULT)
0xFFC02B5B,	//0x0928		VoC_NOP	|	VoC_lw16i(RL7_LO,0xab5b)(hi)
0x1484DDC7,	//0x092a		VoC_lw32_d(ACC0,0x198)(lo)	|	VoC_sw32inc_p(RL7,REG0,DEFAULT)
0x14860198,	//0x092c		VoC_lw32_d(RL6,0x19a)(lo)	|	VoC_lw32_d(ACC0,0x198)(hi)
0x1792019A,	//0x092e		VoC_cfg_lg(0x8,)(lo)	|	VoC_lw32_d(RL6,0x19a)(hi)
0x0ACE0008,	//0x0930		VoC_lw16i(RL7_LO,0xd11a)(lo)	|	VoC_cfg_lg(0x8,)(hi)
0x0ACF511A,	//0x0932		VoC_lw16i(RL7_HI,0xd11a)(lo)	|	VoC_lw16i(RL7_LO,0xd11a)(hi)
0x1781511A,	//0x0934		VoC_cfg_lg(0x0,CFG_DMA_WRAP)(lo)	|	VoC_lw16i(RL7_HI,0xd11a)(hi)
0x17820000,	//0x0936		VoC_cfg_lg(0x20,CFG_DMA_SIZE)(lo)	|	VoC_cfg_lg(0x0,CFG_DMA_WRAP)(hi)
0x17830020,	//0x0938		VoC_cfg_lg(0x40,CFG_DMA_LADDR)(lo)	|	VoC_cfg_lg(0x20,CFG_DMA_SIZE)(hi)
0x15C40040,	//0x093a		VoC_sw32_d(ACC0,0xffc4)(lo)	|	VoC_cfg_lg(0x40,CFG_DMA_LADDR)(hi)
0xDE807FC4,	//0x093c		VoC_cfg(0x0)	|	VoC_sw32_d(ACC0,0xffc4)(hi)
0x1794FFC0,	//0x093e		VoC_cfg_lg(0x8,)(lo)	|	VoC_NOP
0x18080008,	//0x0940		VoC_lw16i_set_inc(REG0,0x0,0x2)(lo)	|	VoC_cfg_lg(0x8,)(hi)
0x18090000,	//0x0942		VoC_lw16i_set_inc(REG1,0x80,0x2)(lo)	|	VoC_lw16i_set_inc(REG0,0x0,0x2)(hi)
0x0A820080,	//0x0944		VoC_lw16i(REG2,0x20)(lo)	|	VoC_lw16i_set_inc(REG1,0x80,0x2)(hi)
0xFFC00020,	//0x0946		VoC_NAD	|	VoC_lw16i(REG2,0x20)(hi)
0x16D42B80,	//0x0948		VoC_jal(result_dma_check)
0x00000A8A,	//0x094a		VoC_lw16i(ACC1_LO,0x0)
0x40000A8B,	//0x094c		VoC_lw16i(ACC1_HI,0x4000)
0xFFC0E535,	//0x094e		VoC_NOP	|	VoC_or32_rr(ACC1,RL6,DEFAULT)
0x00201782,	//0x0950		VoC_cfg_lg(0x20,CFG_DMA_SIZE)
0x00001783,	//0x0952		VoC_cfg_lg(0x0,CFG_DMA_LADDR)
0x7FC415C5,	//0x0954		VoC_sw32_d(ACC1,0xffc4)
0xFFC0DE80,	//0x0956		VoC_NOP	|	VoC_cfg(0x0)
0x00081794,	//0x0958		VoC_cfg_lg(0x8,)
0x00201782,	//0x095a		VoC_cfg_lg(0x20,CFG_DMA_SIZE)
0x00801783,	//0x095c		VoC_cfg_lg(0x80,CFG_DMA_LADDR)
0x7FC415C6,	//0x095e		VoC_sw32_d(RL6,0xffc4)
0xFFC0DE80,	//0x0960		VoC_NOP	|	VoC_cfg(0x0)
0x00081794,	//0x0962		VoC_cfg_lg(0x8,)
0x00001808,	//0x0964		VoC_lw16i_set_inc(REG0,0x0,0x2)
0x01001809,	//0x0966		VoC_lw16i_set_inc(REG1,0x100,0x2)
0x00200A82,	//0x0968		VoC_lw16i(REG2,0x20)
0x16D42B80,	//0x096a		VoC_jal(result_dma_check)
0x00061781,	//0x096c		VoC_cfg_lg(0x6,CFG_DMA_WRAP)
0x00201782,	//0x096e		VoC_cfg_lg(0x20,CFG_DMA_SIZE)
0x00411783,	//0x0970		VoC_cfg_lg(0x41,CFG_DMA_LADDR)
0x7FC415C4,	//0x0972		VoC_sw32_d(ACC0,0xffc4)
0xFFC0DE80,	//0x0974		VoC_NOP	|	VoC_cfg(0x0)
0x00081794,	//0x0976		VoC_cfg_lg(0x8,)
0x1808F0DD,	//0x0978		VoC_lw16i_set_inc(REG0,0x0,0x2)(lo)	|	VoC_lw16i_short(WRAP1,0x6,DEFAULT)
0x18090000,	//0x097a		VoC_lw16i_set_inc(REG1,0x82,0x2)(lo)	|	VoC_lw16i_set_inc(REG0,0x0,0x2)(hi)
0x0A820082,	//0x097c		VoC_lw16i(REG2,0x20)(lo)	|	VoC_lw16i_set_inc(REG1,0x82,0x2)(hi)
0x2B800020,	//0x097e		VoC_jal(result_dma_check)(lo)	|	VoC_lw16i(REG2,0x20)(hi)
0xF01D16D4,	//0x0980		VoC_lw16i_short(WRAP1,0x0,DEFAULT)	|	VoC_jal(result_dma_check)(hi)
0x00000A8A,	//0x0982		VoC_lw16i(ACC1_LO,0x0)
0x40000A8B,	//0x0984		VoC_lw16i(ACC1_HI,0x4000)
0xFFC0E535,	//0x0986		VoC_NOP	|	VoC_or32_rr(ACC1,RL6,DEFAULT)
0x00061781,	//0x0988		VoC_cfg_lg(0x6,CFG_DMA_WRAP)
0x00201782,	//0x098a		VoC_cfg_lg(0x20,CFG_DMA_SIZE)
0x00031783,	//0x098c		VoC_cfg_lg(0x3,CFG_DMA_LADDR)
0x7FC415C5,	//0x098e		VoC_sw32_d(ACC1,0xffc4)
0xFFC0DE80,	//0x0990		VoC_NOP	|	VoC_cfg(0x0)
0x00081794,	//0x0992		VoC_cfg_lg(0x8,)
0x00001781,	//0x0994		VoC_cfg_lg(0x0,CFG_DMA_WRAP)
0x00201782,	//0x0996		VoC_cfg_lg(0x20,CFG_DMA_SIZE)
0x00801783,	//0x0998		VoC_cfg_lg(0x80,CFG_DMA_LADDR)
0x7FC415C6,	//0x099a		VoC_sw32_d(RL6,0xffc4)
0xFFC0DE80,	//0x099c		VoC_NOP	|	VoC_cfg(0x0)
0x00081794,	//0x099e		VoC_cfg_lg(0x8,)
0x1808F0DC,	//0x09a0		VoC_lw16i_set_inc(REG0,0x6,0x2)(lo)	|	VoC_lw16i_short(WRAP0,0x6,DEFAULT)
0x18090006,	//0x09a2		VoC_lw16i_set_inc(REG1,0x100,0x2)(lo)	|	VoC_lw16i_set_inc(REG0,0x6,0x2)(hi)
0x0A820100,	//0x09a4		VoC_lw16i(REG2,0x20)(lo)	|	VoC_lw16i_set_inc(REG1,0x100,0x2)(hi)
0x2B800020,	//0x09a6		VoC_jal(result_dma_check)(lo)	|	VoC_lw16i(REG2,0x20)(hi)
0xF01C16D4,	//0x09a8		VoC_lw16i_short(WRAP0,0x0,DEFAULT)	|	VoC_jal(result_dma_check)(hi)
0x00000A8A,	//0x09aa		VoC_lw16i(ACC1_LO,0x0)
0x00000ACB,	//0x09ac		VoC_lw16i(ACC1_HI,0xffff8000)
0xFFC0E525,	//0x09ae		VoC_NOP	|	VoC_or32_rr(ACC1,ACC0,DEFAULT)
0x7FC415C5,	//0x09b0		VoC_sw32_d(ACC1,0xffc4)
0x14C1FFC0,	//0x09b2		VoC_lw32_d(REG23,0xffc6)(lo)	|	VoC_NOP
0xFFC07FC6,	//0x09b4		VoC_NAD	|	VoC_lw32_d(REG23,0xffc6)(hi)
0x17452B80,	//0x09b6		VoC_jal(push_all)
0x03470A80,	//0x09b8		VoC_lw16i(REG0,0x347)
0x7EC80A81,	//0x09ba		VoC_lw16i(REG1,0x7ec8)
0x168C2B80,	//0x09bc		VoC_jal(result_check32)
0x12340A80,	//0x09be		VoC_lw16i(REG0,0x1234)
0x7EDC0AC1,	//0x09c0		VoC_lw16i(REG1,0xfedc)
0x15C0FFC0,	//0x09c2		VoC_sw32_d(REG01,0xffc6)(lo)	|	VoC_NOP
0x0A8A7FC6,	//0x09c4		VoC_lw16i(ACC1_LO,0x0)(lo)	|	VoC_sw32_d(REG01,0xffc6)(hi)
0x0ACB0000,	//0x09c6		VoC_lw16i(ACC1_HI,0xffffc000)(lo)	|	VoC_lw16i(ACC1_LO,0x0)(hi)
0xE5354000,	//0x09c8		VoC_or32_rr(ACC1,RL6,DEFAULT)	|	VoC_lw16i(ACC1_HI,0xffffc000)(hi)
0x15C5FFC0,	//0x09ca		VoC_sw32_d(ACC1,0xffc4)(lo)	|	VoC_NOP
0x0A8A7FC4,	//0x09cc		VoC_lw16i(ACC1_LO,0x0)(lo)	|	VoC_sw32_d(ACC1,0xffc4)(hi)
0x0ACB0000,	//0x09ce		VoC_lw16i(ACC1_HI,0xffff8000)(lo)	|	VoC_lw16i(ACC1_LO,0x0)(hi)
0xE5350000,	//0x09d0		VoC_or32_rr(ACC1,RL6,DEFAULT)	|	VoC_lw16i(ACC1_HI,0xffff8000)(hi)
0x7FC615C5,	//0x09d2		VoC_sw32_d(ACC1,0xffc6)
0x7FC415C5,	//0x09d4		VoC_sw32_d(ACC1,0xffc4)
0x14C1FFC0,	//0x09d6		VoC_lw32_d(REG23,0xffc6)(lo)	|	VoC_NOP
0xFFC07FC6,	//0x09d8		VoC_NAD	|	VoC_lw32_d(REG23,0xffc6)(hi)
0x17452B80,	//0x09da		VoC_jal(push_all)
0x168C2B80,	//0x09dc		VoC_jal(result_check32)
0x00000A8A,	//0x09de		VoC_lw16i(ACC1_LO,0x0)
0x10000A8B,	//0x09e0		VoC_lw16i(ACC1_HI,0x1000)
0x1782E525,	//0x09e2		VoC_cfg_lg(0x20,CFG_DMA_SIZE)(lo)	|	VoC_or32_rr(ACC1,ACC0,DEFAULT)
0x17830020,	//0x09e4		VoC_cfg_lg(0x40,CFG_DMA_LADDR)(lo)	|	VoC_cfg_lg(0x20,CFG_DMA_SIZE)(hi)
0x15C50040,	//0x09e6		VoC_sw32_d(ACC1,0xffc4)(lo)	|	VoC_cfg_lg(0x40,CFG_DMA_LADDR)(hi)
0xDE807FC4,	//0x09e8		VoC_cfg(0x0)	|	VoC_sw32_d(ACC1,0xffc4)(hi)
0x1794FFC0,	//0x09ea		VoC_cfg_lg(0x8,)(lo)	|	VoC_NOP
0x18040008,	//0x09ec		VoC_lw16i_set_inc(REG0,0x0,0x1)(lo)	|	VoC_cfg_lg(0x8,)(hi)
0x18090000,	//0x09ee		VoC_lw16i_set_inc(REG1,0x80,0x2)(lo)	|	VoC_lw16i_set_inc(REG0,0x0,0x1)(hi)
0x0A820080,	//0x09f0		VoC_lw16i(REG2,0x40)(lo)	|	VoC_lw16i_set_inc(REG1,0x80,0x2)(hi)
0xFFC00040,	//0x09f2		VoC_NAD	|	VoC_lw16i(REG2,0x40)(hi)
0x16EE2B80,	//0x09f4		VoC_jal(result_s2b_unsigned_check)
0x00000A8A,	//0x09f6		VoC_lw16i(ACC1_LO,0x0)
0x30000A8B,	//0x09f8		VoC_lw16i(ACC1_HI,0x3000)
0x1782E525,	//0x09fa		VoC_cfg_lg(0x20,CFG_DMA_SIZE)(lo)	|	VoC_or32_rr(ACC1,ACC0,DEFAULT)
0x17830020,	//0x09fc		VoC_cfg_lg(0x40,CFG_DMA_LADDR)(lo)	|	VoC_cfg_lg(0x20,CFG_DMA_SIZE)(hi)
0x15C50040,	//0x09fe		VoC_sw32_d(ACC1,0xffc4)(lo)	|	VoC_cfg_lg(0x40,CFG_DMA_LADDR)(hi)
0xDE807FC4,	//0x0a00		VoC_cfg(0x0)	|	VoC_sw32_d(ACC1,0xffc4)(hi)
0x1794FFC0,	//0x0a02		VoC_cfg_lg(0x8,)(lo)	|	VoC_NOP
0x18040008,	//0x0a04		VoC_lw16i_set_inc(REG0,0x0,0x1)(lo)	|	VoC_cfg_lg(0x8,)(hi)
0x18090000,	//0x0a06		VoC_lw16i_set_inc(REG1,0x80,0x2)(lo)	|	VoC_lw16i_set_inc(REG0,0x0,0x1)(hi)
0x0A820080,	//0x0a08		VoC_lw16i(REG2,0x40)(lo)	|	VoC_lw16i_set_inc(REG1,0x80,0x2)(hi)
0xFFC00040,	//0x0a0a		VoC_NAD	|	VoC_lw16i(REG2,0x40)(hi)
0x170C2B80,	//0x0a0c		VoC_jal(result_s2b_signed_check)
0x00000A8A,	//0x0a0e		VoC_lw16i(ACC1_LO,0x0)
0x50000A8B,	//0x0a10		VoC_lw16i(ACC1_HI,0x5000)
0x1782E535,	//0x0a12		VoC_cfg_lg(0x10,CFG_DMA_SIZE)(lo)	|	VoC_or32_rr(ACC1,RL6,DEFAULT)
0x17830010,	//0x0a14		VoC_cfg_lg(0x0,CFG_DMA_LADDR)(lo)	|	VoC_cfg_lg(0x10,CFG_DMA_SIZE)(hi)
0x15C50000,	//0x0a16		VoC_sw32_d(ACC1,0xffc4)(lo)	|	VoC_cfg_lg(0x0,CFG_DMA_LADDR)(hi)
0xDE807FC4,	//0x0a18		VoC_cfg(0x0)	|	VoC_sw32_d(ACC1,0xffc4)(hi)
0x1794FFC0,	//0x0a1a		VoC_cfg_lg(0x8,)(lo)	|	VoC_NOP
0x17820008,	//0x0a1c		VoC_cfg_lg(0x10,CFG_DMA_SIZE)(lo)	|	VoC_cfg_lg(0x8,)(hi)
0x17830010,	//0x0a1e		VoC_cfg_lg(0x80,CFG_DMA_LADDR)(lo)	|	VoC_cfg_lg(0x10,CFG_DMA_SIZE)(hi)
0x15C60080,	//0x0a20		VoC_sw32_d(RL6,0xffc4)(lo)	|	VoC_cfg_lg(0x80,CFG_DMA_LADDR)(hi)
0xDE807FC4,	//0x0a22		VoC_cfg(0x0)	|	VoC_sw32_d(RL6,0xffc4)(hi)
0x1794FFC0,	//0x0a24		VoC_cfg_lg(0x8,)(lo)	|	VoC_NOP
0x18080008,	//0x0a26		VoC_lw16i_set_inc(REG0,0x0,0x2)(lo)	|	VoC_cfg_lg(0x8,)(hi)
0x18050000,	//0x0a28		VoC_lw16i_set_inc(REG1,0x100,0x1)(lo)	|	VoC_lw16i_set_inc(REG0,0x0,0x2)(hi)
0x0A820100,	//0x0a2a		VoC_lw16i(REG2,0x20)(lo)	|	VoC_lw16i_set_inc(REG1,0x100,0x1)(hi)
0xFFC00020,	//0x0a2c		VoC_NAD	|	VoC_lw16i(REG2,0x20)(hi)
0x172A2B80,	//0x0a2e		VoC_jal(result_s2b_write_check)
0x00041788,	//0x0a30		VoC_cfg_lg(0x4,CFG_FIFO_DATA_LO)
0x00041782,	//0x0a32		VoC_cfg_lg(0x4,CFG_DMA_SIZE)
0x00041789,	//0x0a34		VoC_cfg_lg(0x4,CFG_FIFO_DATA_HI)
0x00401783,	//0x0a36		VoC_cfg_lg(0x40,CFG_DMA_LADDR)
0x7FC415C4,	//0x0a38		VoC_sw32_d(ACC0,0xffc4)
0xFFC0DE80,	//0x0a3a		VoC_NOP	|	VoC_cfg(0x0)
0x00081794,	//0x0a3c		VoC_cfg_lg(0x8,)
0x00001808,	//0x0a3e		VoC_lw16i_set_inc(REG0,0x0,0x2)
0x00801809,	//0x0a40		VoC_lw16i_set_inc(REG1,0x80,0x2)
0x0A482C09,	//0x0a42		VoC_loop_i(0x1,0x4)
0x2B80F082,	//0x0a44		VoC_jal(result_dma_check)(lo)	|	VoC_lw16i_short(REG2,0x4,DEFAULT)
0xF10216D4,	//0x0a46		VoC_lw16i_short(REG2,0x8,DEFAULT)	|	VoC_jal(result_dma_check)(hi)
		//0x0a48		VoC_endloop1
0x0A8AC010,	//0x0a48		VoC_lw16i(ACC1_LO,0x0)(lo)	|	VoC_add16_rr(REG0,REG0,REG2,DEFAULT)
0x0A8B0000,	//0x0a4a		VoC_lw16i(ACC1_HI,0x4000)(lo)	|	VoC_lw16i(ACC1_LO,0x0)(hi)
0xE5354000,	//0x0a4c		VoC_or32_rr(ACC1,RL6,DEFAULT)	|	VoC_lw16i(ACC1_HI,0x4000)(hi)
0x00021788,	//0x0a4e		VoC_cfg_lg(0x2,CFG_FIFO_DATA_LO)
0x00061782,	//0x0a50		VoC_cfg_lg(0x6,CFG_DMA_SIZE)
0x00031789,	//0x0a52		VoC_cfg_lg(0x3,CFG_FIFO_DATA_HI)
0x00001783,	//0x0a54		VoC_cfg_lg(0x0,CFG_DMA_LADDR)
0x7FC415C5,	//0x0a56		VoC_sw32_d(ACC1,0xffc4)
0xFFC0DE80,	//0x0a58		VoC_NOP	|	VoC_cfg(0x0)
0x00081794,	//0x0a5a		VoC_cfg_lg(0x8,)
0x00181782,	//0x0a5c		VoC_cfg_lg(0x18,CFG_DMA_SIZE)
0x00801783,	//0x0a5e		VoC_cfg_lg(0x80,CFG_DMA_LADDR)
0x7FC415C6,	//0x0a60		VoC_sw32_d(RL6,0xffc4)
0xFFC0DE80,	//0x0a62		VoC_NOP	|	VoC_cfg(0x0)
0x00081794,	//0x0a64		VoC_cfg_lg(0x8,)
0x00001808,	//0x0a66		VoC_lw16i_set_inc(REG0,0x0,0x2)
0x01001809,	//0x0a68		VoC_lw16i_set_inc(REG1,0x100,0x2)
0x0A702C07,	//0x0a6a		VoC_loop_i(0x1,0x3)
0x2B80F0C2,	//0x0a6c		VoC_jal(result_dma_check)(lo)	|	VoC_lw16i_short(REG2,0x6,DEFAULT)
0xF08216D4,	//0x0a6e		VoC_lw16i_short(REG2,0x4,DEFAULT)	|	VoC_jal(result_dma_check)(hi)
		//0x0a70		VoC_endloop1
0x0A8AC051,	//0x0a70		VoC_lw16i(ACC1_LO,0x0)(lo)	|	VoC_add16_rr(REG1,REG1,REG2,DEFAULT)
0x0A8B0000,	//0x0a72		VoC_lw16i(ACC1_HI,0x1000)(lo)	|	VoC_lw16i(ACC1_LO,0x0)(hi)
0xE5251000,	//0x0a74		VoC_or32_rr(ACC1,ACC0,DEFAULT)	|	VoC_lw16i(ACC1_HI,0x1000)(hi)
0x00031788,	//0x0a76		VoC_cfg_lg(0x3,CFG_FIFO_DATA_LO)
0x00051782,	//0x0a78		VoC_cfg_lg(0x5,CFG_DMA_SIZE)
0x00041789,	//0x0a7a		VoC_cfg_lg(0x4,CFG_FIFO_DATA_HI)
0x00401783,	//0x0a7c		VoC_cfg_lg(0x40,CFG_DMA_LADDR)
0x7FC415C5,	//0x0a7e		VoC_sw32_d(ACC1,0xffc4)
0xFFC0DE80,	//0x0a80		VoC_NOP	|	VoC_cfg(0x0)
0x00081794,	//0x0a82		VoC_cfg_lg(0x8,)
0x00001804,	//0x0a84		VoC_lw16i_set_inc(REG0,0x0,0x1)
0x00801809,	//0x0a86		VoC_lw16i_set_inc(REG1,0x80,0x2)
0x0A8F2C09,	//0x0a88		VoC_loop_i(0x1,0x4)
0x000A0A82,	//0x0a8a		VoC_lw16i(REG2,0xa)
0x16EE2B80,	//0x0a8c		VoC_jal(result_s2b_unsigned_check)
0xC010F0C2,	//0x0a8e		VoC_add16_rr(REG0,REG0,REG2,DEFAULT)	|	VoC_lw16i_short(REG2,0x6,DEFAULT)
		//0x0a8f		VoC_endloop1
0x00000A8A,	//0x0a90		VoC_lw16i(ACC1_LO,0x0)
0x30000A8B,	//0x0a92		VoC_lw16i(ACC1_HI,0x3000)
0x1788E525,	//0x0a94		VoC_cfg_lg(0x1,CFG_FIFO_DATA_LO)(lo)	|	VoC_or32_rr(ACC1,ACC0,DEFAULT)
0x17820001,	//0x0a96		VoC_cfg_lg(0x3,CFG_DMA_SIZE)(lo)	|	VoC_cfg_lg(0x1,CFG_FIFO_DATA_LO)(hi)
0x17890003,	//0x0a98		VoC_cfg_lg(0x8,CFG_FIFO_DATA_HI)(lo)	|	VoC_cfg_lg(0x3,CFG_DMA_SIZE)(hi)
0x17830008,	//0x0a9a		VoC_cfg_lg(0x40,CFG_DMA_LADDR)(lo)	|	VoC_cfg_lg(0x8,CFG_FIFO_DATA_HI)(hi)
0x15C50040,	//0x0a9c		VoC_sw32_d(ACC1,0xffc4)(lo)	|	VoC_cfg_lg(0x40,CFG_DMA_LADDR)(hi)
0xDE807FC4,	//0x0a9e		VoC_cfg(0x0)	|	VoC_sw32_d(ACC1,0xffc4)(hi)
0x1794FFC0,	//0x0aa0		VoC_cfg_lg(0x8,)(lo)	|	VoC_NOP
0x18040008,	//0x0aa2		VoC_lw16i_set_inc(REG0,0x0,0x1)(lo)	|	VoC_cfg_lg(0x8,)(hi)
0x18090000,	//0x0aa4		VoC_lw16i_set_inc(REG1,0x80,0x2)(lo)	|	VoC_lw16i_set_inc(REG0,0x0,0x1)(hi)
0xFFC00080,	//0x0aa6		VoC_NAD	|	VoC_lw16i_set_inc(REG1,0x80,0x2)(hi)
0x0AAF2C11,	//0x0aa8		VoC_loop_i(0x1,0x8)
0x00060A82,	//0x0aaa		VoC_lw16i(REG2,0x6)
0x170C2B80,	//0x0aac		VoC_jal(result_s2b_signed_check)
0xC010F042,	//0x0aae		VoC_add16_rr(REG0,REG0,REG2,DEFAULT)	|	VoC_lw16i_short(REG2,0x2,DEFAULT)
		//0x0aaf		VoC_endloop1
0x00000A8A,	//0x0ab0		VoC_lw16i(ACC1_LO,0x0)
0x50000A8B,	//0x0ab2		VoC_lw16i(ACC1_HI,0x5000)
0x1788E535,	//0x0ab4		VoC_cfg_lg(0x2,CFG_FIFO_DATA_LO)(lo)	|	VoC_or32_rr(ACC1,RL6,DEFAULT)
0x17820002,	//0x0ab6		VoC_cfg_lg(0x2,CFG_DMA_SIZE)(lo)	|	VoC_cfg_lg(0x2,CFG_FIFO_DATA_LO)(hi)
0x17890002,	//0x0ab8		VoC_cfg_lg(0x8,CFG_FIFO_DATA_HI)(lo)	|	VoC_cfg_lg(0x2,CFG_DMA_SIZE)(hi)
0x17830008,	//0x0aba		VoC_cfg_lg(0x0,CFG_DMA_LADDR)(lo)	|	VoC_cfg_lg(0x8,CFG_FIFO_DATA_HI)(hi)
0x15C50000,	//0x0abc		VoC_sw32_d(ACC1,0xffc4)(lo)	|	VoC_cfg_lg(0x0,CFG_DMA_LADDR)(hi)
0xDE807FC4,	//0x0abe		VoC_cfg(0x0)	|	VoC_sw32_d(ACC1,0xffc4)(hi)
0x1794FFC0,	//0x0ac0		VoC_cfg_lg(0x8,)(lo)	|	VoC_NOP
0x17820008,	//0x0ac2		VoC_cfg_lg(0x20,CFG_DMA_SIZE)(lo)	|	VoC_cfg_lg(0x8,)(hi)
0x17830020,	//0x0ac4		VoC_cfg_lg(0x80,CFG_DMA_LADDR)(lo)	|	VoC_cfg_lg(0x20,CFG_DMA_SIZE)(hi)
0x15C60080,	//0x0ac6		VoC_sw32_d(RL6,0xffc4)(lo)	|	VoC_cfg_lg(0x80,CFG_DMA_LADDR)(hi)
0xDE807FC4,	//0x0ac8		VoC_cfg(0x0)	|	VoC_sw32_d(RL6,0xffc4)(hi)
0x1794FFC0,	//0x0aca		VoC_cfg_lg(0x8,)(lo)	|	VoC_NOP
0x18080008,	//0x0acc		VoC_lw16i_set_inc(REG0,0x0,0x2)(lo)	|	VoC_cfg_lg(0x8,)(hi)
0x18050000,	//0x0ace		VoC_lw16i_set_inc(REG1,0x100,0x1)(lo)	|	VoC_lw16i_set_inc(REG0,0x0,0x2)(hi)
0x2C110100,	//0x0ad0		VoC_loop_i(0x1,0x8)(lo)	|	VoC_lw16i_set_inc(REG1,0x100,0x1)(hi)
0xF0820AD7,	//0x0ad2		VoC_lw16i_short(REG2,0x4,DEFAULT)	|	VoC_loop_i(0x1,0x8)(hi)
0x172A2B80,	//0x0ad4		VoC_jal(result_s2b_write_check)
0xC051F082,	//0x0ad6		VoC_add16_rr(REG1,REG1,REG2,DEFAULT)	|	VoC_lw16i_short(REG2,0x4,DEFAULT)
		//0x0ad7		VoC_endloop1
0x43210A80,	//0x0ad8		VoC_lw16i(REG0,0x4321)
0x07650AC1,	//0x0ada		VoC_lw16i(REG1,0x8765)
0xE0037082,	//0x0adc		VoC_lw16i_short(REG3,0x0,IN_PARALLEL)	|	VoC_lw16i_short(REG2,0x4,DEFAULT)
0x7FC615C0,	//0x0ade		VoC_sw32_d(REG01,0xffc6)
0x00000A8A,	//0x0ae0		VoC_lw16i(ACC1_LO,0x0)
0x40000ACB,	//0x0ae2		VoC_lw16i(ACC1_HI,0xffffc000)
0x0A88E535,	//0x0ae4		VoC_lw16i(ACC0_LO,0x0)(lo)	|	VoC_or32_rr(ACC1,RL6,DEFAULT)
0x0AC90000,	//0x0ae6		VoC_lw16i(ACC0_HI,0xffffc000)(lo)	|	VoC_lw16i(ACC0_LO,0x0)(hi)
0xE5344000,	//0x0ae8		VoC_or32_rr(ACC0,RL6,DEFAULT)	|	VoC_lw16i(ACC0_HI,0xffffc000)(hi)
0x15C5C90C,	//0x0aea		VoC_sw32_d(ACC1,0xffc4)(lo)	|	VoC_add32_rr(ACC0,ACC0,REG23,DEFAULT)
0xFFC07FC4,	//0x0aec		VoC_NOP	|	VoC_sw32_d(ACC1,0xffc4)(hi)
0x15C4FFC0,	//0x0aee		VoC_sw32_d(ACC0,0xffc4)(lo)	|	VoC_NOP
0x0A8A7FC4,	//0x0af0		VoC_lw16i(ACC1_LO,0x0)(lo)	|	VoC_sw32_d(ACC0,0xffc4)(hi)
0x0ACB0000,	//0x0af2		VoC_lw16i(ACC1_HI,0xffff8000)(lo)	|	VoC_lw16i(ACC1_LO,0x0)(hi)
0xE5350000,	//0x0af4		VoC_or32_rr(ACC1,RL6,DEFAULT)	|	VoC_lw16i(ACC1_HI,0xffff8000)(hi)
0x15C5C94C,	//0x0af6		VoC_sw32_d(ACC1,0xffc6)(lo)	|	VoC_add32_rr(ACC0,ACC1,REG23,DEFAULT)
0x15C57FC6,	//0x0af8		VoC_sw32_d(ACC1,0xffc4)(lo)	|	VoC_sw32_d(ACC1,0xffc6)(hi)
0xFFC07FC4,	//0x0afa		VoC_NOP	|	VoC_sw32_d(ACC1,0xffc4)(hi)
0x7FC614C1,	//0x0afc		VoC_lw32_d(REG23,0xffc6)
0x17452B80,	//0x0afe		VoC_jal(push_all)
0x168C2B80,	//0x0b00		VoC_jal(result_check32)
0x7FC615C5,	//0x0b02		VoC_sw32_d(ACC1,0xffc6)
0x7FC415C4,	//0x0b04		VoC_sw32_d(ACC0,0xffc4)
0x14C1FFC0,	//0x0b06		VoC_lw32_d(REG23,0xffc6)(lo)	|	VoC_NOP
0xFFC07FC6,	//0x0b08		VoC_NAD	|	VoC_lw32_d(REG23,0xffc6)(hi)
0x17452B80,	//0x0b0a		VoC_jal(push_all)
0x168C2B80,	//0x0b0c		VoC_jal(result_check32)
0x40010ACE,	//0x0b0e		VoC_lw16i(RL7_LO,0xc001)
0x40010ACF,	//0x0b10		VoC_lw16i(RL7_HI,0xc001)
0x00101792,	//0x0b12		VoC_cfg_lg(0x10,)
0x40010AC0,	//0x0b14		VoC_lw16i(REG0,0xc001)
0x40010AC1,	//0x0b16		VoC_lw16i(REG1,0xc001)
0x40010AC2,	//0x0b18		VoC_lw16i(REG2,0xc001)
0x40010AC3,	//0x0b1a		VoC_lw16i(REG3,0xc001)
0x40010AC4,	//0x0b1c		VoC_lw16i(REG4,0xc001)
0x40010AC5,	//0x0b1e		VoC_lw16i(REG5,0xc001)
0x40010AC6,	//0x0b20		VoC_lw16i(REG6,0xc001)
0x40010AC7,	//0x0b22		VoC_lw16i(REG7,0xc001)
0x0AC0DE80,	//0x0b24		VoC_lw16i(REG0,0xc003)(lo)	|	VoC_cfg(0x0)
0x0AC14003,	//0x0b26		VoC_lw16i(REG1,0xc003)(lo)	|	VoC_lw16i(REG0,0xc003)(hi)
0x0AC24003,	//0x0b28		VoC_lw16i(REG2,0xc003)(lo)	|	VoC_lw16i(REG1,0xc003)(hi)
0x0AC34003,	//0x0b2a		VoC_lw16i(REG3,0xc003)(lo)	|	VoC_lw16i(REG2,0xc003)(hi)
0x0AC44003,	//0x0b2c		VoC_lw16i(REG4,0xc003)(lo)	|	VoC_lw16i(REG3,0xc003)(hi)
0x0AC54003,	//0x0b2e		VoC_lw16i(REG5,0xc003)(lo)	|	VoC_lw16i(REG4,0xc003)(hi)
0x0AC64003,	//0x0b30		VoC_lw16i(REG6,0xc003)(lo)	|	VoC_lw16i(REG5,0xc003)(hi)
0x0AC74003,	//0x0b32		VoC_lw16i(REG7,0xc003)(lo)	|	VoC_lw16i(REG6,0xc003)(hi)
0xDEA74003,	//0x0b34		VoC_cfg(0x27)	|	VoC_lw16i(REG7,0xc003)(hi)
0xDE00DE94,	//0x0b36		VoC_inc_p(REG0,DEFAULT)	|	VoC_cfg(0x14)
		//0x0b37		LABEL_LJUMP1
0x025E2B00,	//0x0b38		VoC_jump_lg(LABEL_LJUMP2)
0xDFE9FFC0,	//0x0b3a		VoC_push16(RA,DEFAULT)	|	VoC_NOP
		//0x0b3b		CII_func
0x0A96F030,	//0x0b3c		VoC_lw16i(STATUS,0x41)(lo)	|	VoC_lw16i_short(INC0,0x1,DEFAULT)
0x2E800041,	//0x0b3e		VoC_boe0z16_r(LABEL_BOE0Z16_R)(lo)	|	VoC_lw16i(STATUS,0x41)(hi)
0xDE000B42,	//0x0b40		VoC_inc_p(REG0,DEFAULT)	|	VoC_boe0z16_r(LABEL_BOE0Z16_R)(hi)
		//0x0b42		LABEL_BOE0Z16_R
0x2B80DE00,	//0x0b42		VoC_jal(push_all)(lo)	|	VoC_inc_p(REG0,DEFAULT)
0xE0021745,	//0x0b44		VoC_movreg16(REG2,REG0,DEFAULT)	|	VoC_jal(push_all)(hi)
0x00400A80,	//0x0b46		VoC_lw16i(REG0,0x40)
0x16B02B80,	//0x0b48		VoC_jal(result_check16)
0x00010A96,	//0x0b4a		VoC_lw16i(STATUS,0x1)
0x0B4F2E80,	//0x0b4c		VoC_boe0z16_r(LABEL_BOE0Z16_R1)
0xDE00DE00,	//0x0b4e		VoC_inc_p(REG0,DEFAULT)	|	VoC_inc_p(REG0,DEFAULT)
		//0x0b4f		LABEL_BOE0Z16_R1
0x17452B80,	//0x0b50		VoC_jal(push_all)
0x0A80E002,	//0x0b52		VoC_lw16i(REG0,0x41)(lo)	|	VoC_movreg16(REG2,REG0,DEFAULT)
0xFFC00041,	//0x0b54		VoC_NAD	|	VoC_lw16i(REG0,0x41)(hi)
0x16B02B80,	//0x0b56		VoC_jal(result_check16)
0x00410A96,	//0x0b58		VoC_lw16i(STATUS,0x41)
0x0B5D2F00,	//0x0b5a		VoC_bnoe0z16_r(LABEL_BNOE0Z16_R)
0xDE00DE00,	//0x0b5c		VoC_inc_p(REG0,DEFAULT)	|	VoC_inc_p(REG0,DEFAULT)
		//0x0b5d		LABEL_BNOE0Z16_R
0x17452B80,	//0x0b5e		VoC_jal(push_all)
0x0A80E002,	//0x0b60		VoC_lw16i(REG0,0x42)(lo)	|	VoC_movreg16(REG2,REG0,DEFAULT)
0xFFC00042,	//0x0b62		VoC_NAD	|	VoC_lw16i(REG0,0x42)(hi)
0x16B02B80,	//0x0b64		VoC_jal(result_check16)
0x00010A96,	//0x0b66		VoC_lw16i(STATUS,0x1)
0x0B6B2F00,	//0x0b68		VoC_bnoe0z16_r(LABEL_BNOE0Z16_R1)
0xDE00DE00,	//0x0b6a		VoC_inc_p(REG0,DEFAULT)	|	VoC_inc_p(REG0,DEFAULT)
		//0x0b6b		LABEL_BNOE0Z16_R1
0x17452B80,	//0x0b6c		VoC_jal(push_all)
0x0A80E002,	//0x0b6e		VoC_lw16i(REG0,0x44)(lo)	|	VoC_movreg16(REG2,REG0,DEFAULT)
0xFFC00044,	//0x0b70		VoC_NAD	|	VoC_lw16i(REG0,0x44)(hi)
0x16B02B80,	//0x0b72		VoC_jal(result_check16)
0x00420A96,	//0x0b74		VoC_lw16i(STATUS,0x42)
0x0B792F80,	//0x0b76		VoC_boe1z16_r(LABEL_BOE1Z16_R)
0xDE00DE00,	//0x0b78		VoC_inc_p(REG0,DEFAULT)	|	VoC_inc_p(REG0,DEFAULT)
		//0x0b79		LABEL_BOE1Z16_R
0x17452B80,	//0x0b7a		VoC_jal(push_all)
0x0A80E002,	//0x0b7c		VoC_lw16i(REG0,0x46)(lo)	|	VoC_movreg16(REG2,REG0,DEFAULT)
0xFFC00046,	//0x0b7e		VoC_NAD	|	VoC_lw16i(REG0,0x46)(hi)
0x16B02B80,	//0x0b80		VoC_jal(result_check16)
0x00020A96,	//0x0b82		VoC_lw16i(STATUS,0x2)
0x0B872F80,	//0x0b84		VoC_boe1z16_r(LABEL_BOE1Z16_R1)
0xDE00DE00,	//0x0b86		VoC_inc_p(REG0,DEFAULT)	|	VoC_inc_p(REG0,DEFAULT)
		//0x0b87		LABEL_BOE1Z16_R1
0x17452B80,	//0x0b88		VoC_jal(push_all)
0x0A80E002,	//0x0b8a		VoC_lw16i(REG0,0x47)(lo)	|	VoC_movreg16(REG2,REG0,DEFAULT)
0xFFC00047,	//0x0b8c		VoC_NAD	|	VoC_lw16i(REG0,0x47)(hi)
0x16B02B80,	//0x0b8e		VoC_jal(result_check16)
0x00420A96,	//0x0b90		VoC_lw16i(STATUS,0x42)
0x0B953000,	//0x0b92		VoC_bnoe1z16_r(LABEL_BNOE1Z16_R)
0xDE00DE00,	//0x0b94		VoC_inc_p(REG0,DEFAULT)	|	VoC_inc_p(REG0,DEFAULT)
		//0x0b95		LABEL_BNOE1Z16_R
0x17452B80,	//0x0b96		VoC_jal(push_all)
0x0A80E002,	//0x0b98		VoC_lw16i(REG0,0x48)(lo)	|	VoC_movreg16(REG2,REG0,DEFAULT)
0xFFC00048,	//0x0b9a		VoC_NAD	|	VoC_lw16i(REG0,0x48)(hi)
0x16B02B80,	//0x0b9c		VoC_jal(result_check16)
0x00020A96,	//0x0b9e		VoC_lw16i(STATUS,0x2)
0x0BA33000,	//0x0ba0		VoC_bnoe1z16_r(LABEL_BNOE1Z16_R1)
0xDE00DE00,	//0x0ba2		VoC_inc_p(REG0,DEFAULT)	|	VoC_inc_p(REG0,DEFAULT)
		//0x0ba3		LABEL_BNOE1Z16_R1
0x17452B80,	//0x0ba4		VoC_jal(push_all)
0x0A80E002,	//0x0ba6		VoC_lw16i(REG0,0x4a)(lo)	|	VoC_movreg16(REG2,REG0,DEFAULT)
0xFFC0004A,	//0x0ba8		VoC_NAD	|	VoC_lw16i(REG0,0x4a)(hi)
0x16B02B80,	//0x0baa		VoC_jal(result_check16)
0x00440A96,	//0x0bac		VoC_lw16i(STATUS,0x44)
0x0BB23080,	//0x0bae		VoC_bcz16_r(LABEL_BCZ16_R)
0xFFC05E00,	//0x0bb0		VoC_NAD(IN_PARALLEL)	|	VoC_inc_p(REG0,DEFAULT)
		//0x0bb2		LABEL_BCZ16_R
0x17452B80,	//0x0bb2		VoC_jal(push_all)
0x0A80E002,	//0x0bb4		VoC_lw16i(REG0,0x4b)(lo)	|	VoC_movreg16(REG2,REG0,DEFAULT)
0xFFC0004B,	//0x0bb6		VoC_NAD	|	VoC_lw16i(REG0,0x4b)(hi)
0x16B02B80,	//0x0bb8		VoC_jal(result_check16)
0x00040A96,	//0x0bba		VoC_lw16i(STATUS,0x4)
0x0BC03080,	//0x0bbc		VoC_bcz16_r(LABEL_BCZ16_R1)
0xFFC05E00,	//0x0bbe		VoC_NAD(IN_PARALLEL)	|	VoC_inc_p(REG0,DEFAULT)
		//0x0bc0		LABEL_BCZ16_R1
0x17452B80,	//0x0bc0		VoC_jal(push_all)
0x0A80E002,	//0x0bc2		VoC_lw16i(REG0,0x4b)(lo)	|	VoC_movreg16(REG2,REG0,DEFAULT)
0xFFC0004B,	//0x0bc4		VoC_NAD	|	VoC_lw16i(REG0,0x4b)(hi)
0x16B02B80,	//0x0bc6		VoC_jal(result_check16)
0x00440A96,	//0x0bc8		VoC_lw16i(STATUS,0x44)
0x0BCE30C0,	//0x0bca		VoC_bncz16_r(LABEL_BNCZ16_R)
0xFFC05E00,	//0x0bcc		VoC_NAD(IN_PARALLEL)	|	VoC_inc_p(REG0,DEFAULT)
		//0x0bce		LABEL_BNCZ16_R
0x17452B80,	//0x0bce		VoC_jal(push_all)
0x0A80E002,	//0x0bd0		VoC_lw16i(REG0,0x4b)(lo)	|	VoC_movreg16(REG2,REG0,DEFAULT)
0xFFC0004B,	//0x0bd2		VoC_NAD	|	VoC_lw16i(REG0,0x4b)(hi)
0x16B02B80,	//0x0bd4		VoC_jal(result_check16)
0x00040A96,	//0x0bd6		VoC_lw16i(STATUS,0x4)
0x0BDC30C0,	//0x0bd8		VoC_bncz16_r(LABEL_BNCZ16_R1)
0xFFC05E00,	//0x0bda		VoC_NAD(IN_PARALLEL)	|	VoC_inc_p(REG0,DEFAULT)
		//0x0bdc		LABEL_BNCZ16_R1
0x17452B80,	//0x0bdc		VoC_jal(push_all)
0x0A80E002,	//0x0bde		VoC_lw16i(REG0,0x4c)(lo)	|	VoC_movreg16(REG2,REG0,DEFAULT)
0xFFC0004C,	//0x0be0		VoC_NAD	|	VoC_lw16i(REG0,0x4c)(hi)
0x16B02B80,	//0x0be2		VoC_jal(result_check16)
0x00000A86,	//0x0be4		VoC_lw16i(REG6,0x0)
0x00010A87,	//0x0be6		VoC_lw16i(REG7,0x1)
0x0BEC3106,	//0x0be8		VoC_bgtz16_r(LABEL_BGTZ16_R,REG6)
0xFFC05E00,	//0x0bea		VoC_NAD(IN_PARALLEL)	|	VoC_inc_p(REG0,DEFAULT)
		//0x0bec		LABEL_BGTZ16_R
0x17452B80,	//0x0bec		VoC_jal(push_all)
0x0A80E002,	//0x0bee		VoC_lw16i(REG0,0x4d)(lo)	|	VoC_movreg16(REG2,REG0,DEFAULT)
0xFFC0004D,	//0x0bf0		VoC_NAD	|	VoC_lw16i(REG0,0x4d)(hi)
0x16B02B80,	//0x0bf2		VoC_jal(result_check16)
0x0BF83107,	//0x0bf4		VoC_bgtz16_r(LABEL_BGTZ16_R1,REG7)
0xFFC05E00,	//0x0bf6		VoC_NAD(IN_PARALLEL)	|	VoC_inc_p(REG0,DEFAULT)
		//0x0bf8		LABEL_BGTZ16_R1
0x17452B80,	//0x0bf8		VoC_jal(push_all)
0x0A80E002,	//0x0bfa		VoC_lw16i(REG0,0x4d)(lo)	|	VoC_movreg16(REG2,REG0,DEFAULT)
0xFFC0004D,	//0x0bfc		VoC_NAD	|	VoC_lw16i(REG0,0x4d)(hi)
0x16B02B80,	//0x0bfe		VoC_jal(result_check16)
0x0C043147,	//0x0c00		VoC_bngtz16_r(LABEL_BNGTZ16_R,REG7)
0xFFC05E00,	//0x0c02		VoC_NAD(IN_PARALLEL)	|	VoC_inc_p(REG0,DEFAULT)
		//0x0c04		LABEL_BNGTZ16_R
0x17452B80,	//0x0c04		VoC_jal(push_all)
0x0A80E002,	//0x0c06		VoC_lw16i(REG0,0x4e)(lo)	|	VoC_movreg16(REG2,REG0,DEFAULT)
0xFFC0004E,	//0x0c08		VoC_NAD	|	VoC_lw16i(REG0,0x4e)(hi)
0x16B02B80,	//0x0c0a		VoC_jal(result_check16)
0x0C103146,	//0x0c0c		VoC_bngtz16_r(LABEL_BNGTZ16_R1,REG6)
0xFFC05E00,	//0x0c0e		VoC_NAD(IN_PARALLEL)	|	VoC_inc_p(REG0,DEFAULT)
		//0x0c10		LABEL_BNGTZ16_R1
0x17452B80,	//0x0c10		VoC_jal(push_all)
0x0A80E002,	//0x0c12		VoC_lw16i(REG0,0x4e)(lo)	|	VoC_movreg16(REG2,REG0,DEFAULT)
0xFFC0004E,	//0x0c14		VoC_NAD	|	VoC_lw16i(REG0,0x4e)(hi)
0x16B02B80,	//0x0c16		VoC_jal(result_check16)
0x0C1C3187,	//0x0c18		VoC_bez16_r(LABEL_BEZ16_R,REG7)
0xFFC05E00,	//0x0c1a		VoC_NAD(IN_PARALLEL)	|	VoC_inc_p(REG0,DEFAULT)
		//0x0c1c		LABEL_BEZ16_R
0x17452B80,	//0x0c1c		VoC_jal(push_all)
0x0A80E002,	//0x0c1e		VoC_lw16i(REG0,0x4f)(lo)	|	VoC_movreg16(REG2,REG0,DEFAULT)
0xFFC0004F,	//0x0c20		VoC_NAD	|	VoC_lw16i(REG0,0x4f)(hi)
0x16B02B80,	//0x0c22		VoC_jal(result_check16)
0x0C283186,	//0x0c24		VoC_bez16_r(LABEL_BEZ16_R1,REG6)
0xFFC05E00,	//0x0c26		VoC_NAD(IN_PARALLEL)	|	VoC_inc_p(REG0,DEFAULT)
		//0x0c28		LABEL_BEZ16_R1
0x17452B80,	//0x0c28		VoC_jal(push_all)
0x0A80E002,	//0x0c2a		VoC_lw16i(REG0,0x4f)(lo)	|	VoC_movreg16(REG2,REG0,DEFAULT)
0xFFC0004F,	//0x0c2c		VoC_NAD	|	VoC_lw16i(REG0,0x4f)(hi)
0x16B02B80,	//0x0c2e		VoC_jal(result_check16)
0x0C3431C7,	//0x0c30		VoC_bnez16_r(LABEL_BNEZ16_R,REG7)
0xFFC05E00,	//0x0c32		VoC_NAD(IN_PARALLEL)	|	VoC_inc_p(REG0,DEFAULT)
		//0x0c34		LABEL_BNEZ16_R
0x17452B80,	//0x0c34		VoC_jal(push_all)
0x0A80E002,	//0x0c36		VoC_lw16i(REG0,0x4f)(lo)	|	VoC_movreg16(REG2,REG0,DEFAULT)
0xFFC0004F,	//0x0c38		VoC_NAD	|	VoC_lw16i(REG0,0x4f)(hi)
0x16B02B80,	//0x0c3a		VoC_jal(result_check16)
0x0C4031C6,	//0x0c3c		VoC_bnez16_r(LABEL_BNEZ16_R1,REG6)
0xFFC05E00,	//0x0c3e		VoC_NAD(IN_PARALLEL)	|	VoC_inc_p(REG0,DEFAULT)
		//0x0c40		LABEL_BNEZ16_R1
0x17452B80,	//0x0c40		VoC_jal(push_all)
0x0A80E002,	//0x0c42		VoC_lw16i(REG0,0x50)(lo)	|	VoC_movreg16(REG2,REG0,DEFAULT)
0xFFC00050,	//0x0c44		VoC_NAD	|	VoC_lw16i(REG0,0x50)(hi)
0x16B02B80,	//0x0c46		VoC_jal(result_check16)
0x0C4C3247,	//0x0c48		VoC_bnltz16_r(LABEL_BNLTZ16_R,REG7)
0xFFC05E00,	//0x0c4a		VoC_NAD(IN_PARALLEL)	|	VoC_inc_p(REG0,DEFAULT)
		//0x0c4c		LABEL_BNLTZ16_R
0x17452B80,	//0x0c4c		VoC_jal(push_all)
0x0A80E002,	//0x0c4e		VoC_lw16i(REG0,0x50)(lo)	|	VoC_movreg16(REG2,REG0,DEFAULT)
0xFFC00050,	//0x0c50		VoC_NAD	|	VoC_lw16i(REG0,0x50)(hi)
0x16B02B80,	//0x0c52		VoC_jal(result_check16)
0x0C583246,	//0x0c54		VoC_bnltz16_r(LABEL_BNLTZ16_R1,REG6)
0xFFC05E00,	//0x0c56		VoC_NAD(IN_PARALLEL)	|	VoC_inc_p(REG0,DEFAULT)
		//0x0c58		LABEL_BNLTZ16_R1
0x17452B80,	//0x0c58		VoC_jal(push_all)
0x0A80E002,	//0x0c5a		VoC_lw16i(REG0,0x50)(lo)	|	VoC_movreg16(REG2,REG0,DEFAULT)
0xFFC00050,	//0x0c5c		VoC_NAD	|	VoC_lw16i(REG0,0x50)(hi)
0x16B02B80,	//0x0c5e		VoC_jal(result_check16)
0x0C643207,	//0x0c60		VoC_bltz16_r(LABEL_BLTZ16_R,REG7)
0xFFC05E00,	//0x0c62		VoC_NAD(IN_PARALLEL)	|	VoC_inc_p(REG0,DEFAULT)
		//0x0c64		LABEL_BLTZ16_R
0x17452B80,	//0x0c64		VoC_jal(push_all)
0x0A80E002,	//0x0c66		VoC_lw16i(REG0,0x51)(lo)	|	VoC_movreg16(REG2,REG0,DEFAULT)
0xFFC00051,	//0x0c68		VoC_NAD	|	VoC_lw16i(REG0,0x51)(hi)
0x16B02B80,	//0x0c6a		VoC_jal(result_check16)
0x0C703206,	//0x0c6c		VoC_bltz16_r(LABEL_BLTZ16_R1,REG6)
0xFFC05E00,	//0x0c6e		VoC_NAD(IN_PARALLEL)	|	VoC_inc_p(REG0,DEFAULT)
		//0x0c70		LABEL_BLTZ16_R1
0x17452B80,	//0x0c70		VoC_jal(push_all)
0x0A80E002,	//0x0c72		VoC_lw16i(REG0,0x52)(lo)	|	VoC_movreg16(REG2,REG0,DEFAULT)
0xFFC00052,	//0x0c74		VoC_NAD	|	VoC_lw16i(REG0,0x52)(hi)
0x16B02B80,	//0x0c76		VoC_jal(result_check16)
0x0C7C3283,	//0x0c78		VoC_bgtz32_r(LABEL_BGTZ32_R,REG67)
0xFFC05E00,	//0x0c7a		VoC_NAD(IN_PARALLEL)	|	VoC_inc_p(REG0,DEFAULT)
		//0x0c7c		LABEL_BGTZ32_R
0x17452B80,	//0x0c7c		VoC_jal(push_all)
0x0A80E002,	//0x0c7e		VoC_lw16i(REG0,0x52)(lo)	|	VoC_movreg16(REG2,REG0,DEFAULT)
0xFFC00052,	//0x0c80		VoC_NAD	|	VoC_lw16i(REG0,0x52)(hi)
0x16B02B80,	//0x0c82		VoC_jal(result_check16)
0x00000A87,	//0x0c84		VoC_lw16i(REG7,0x0)
0x0C8A3282,	//0x0c86		VoC_bgtz32_r(LABEL_BGTZ32_R1,REG45)
0xFFC05E00,	//0x0c88		VoC_NAD(IN_PARALLEL)	|	VoC_inc_p(REG0,DEFAULT)
		//0x0c8a		LABEL_BGTZ32_R1
0x17452B80,	//0x0c8a		VoC_jal(push_all)
0x0A80E002,	//0x0c8c		VoC_lw16i(REG0,0x53)(lo)	|	VoC_movreg16(REG2,REG0,DEFAULT)
0xFFC00053,	//0x0c8e		VoC_NAD	|	VoC_lw16i(REG0,0x53)(hi)
0x16B02B80,	//0x0c90		VoC_jal(result_check16)
0x0C9632C3,	//0x0c92		VoC_bngtz32_r(LABEL_BNGTZ32_R,REG67)
0xFFC05E00,	//0x0c94		VoC_NAD(IN_PARALLEL)	|	VoC_inc_p(REG0,DEFAULT)
		//0x0c96		LABEL_BNGTZ32_R
0x17452B80,	//0x0c96		VoC_jal(push_all)
0x0A80E002,	//0x0c98		VoC_lw16i(REG0,0x53)(lo)	|	VoC_movreg16(REG2,REG0,DEFAULT)
0xFFC00053,	//0x0c9a		VoC_NAD	|	VoC_lw16i(REG0,0x53)(hi)
0x16B02B80,	//0x0c9c		VoC_jal(result_check16)
0x00010A87,	//0x0c9e		VoC_lw16i(REG7,0x1)
0x0CA432C3,	//0x0ca0		VoC_bngtz32_r(LABEL_BNGTZ32_R1,REG67)
0xFFC05E00,	//0x0ca2		VoC_NAD(IN_PARALLEL)	|	VoC_inc_p(REG0,DEFAULT)
		//0x0ca4		LABEL_BNGTZ32_R1
0x17452B80,	//0x0ca4		VoC_jal(push_all)
0x0A80E002,	//0x0ca6		VoC_lw16i(REG0,0x54)(lo)	|	VoC_movreg16(REG2,REG0,DEFAULT)
0xFFC00054,	//0x0ca8		VoC_NAD	|	VoC_lw16i(REG0,0x54)(hi)
0x16B02B80,	//0x0caa		VoC_jal(result_check16)
0x0CB03303,	//0x0cac		VoC_bez32_r(LABEL_BEZ32_R,REG67)
0xFFC05E00,	//0x0cae		VoC_NAD(IN_PARALLEL)	|	VoC_inc_p(REG0,DEFAULT)
		//0x0cb0		LABEL_BEZ32_R
0x17452B80,	//0x0cb0		VoC_jal(push_all)
0x0A80E002,	//0x0cb2		VoC_lw16i(REG0,0x55)(lo)	|	VoC_movreg16(REG2,REG0,DEFAULT)
0xFFC00055,	//0x0cb4		VoC_NAD	|	VoC_lw16i(REG0,0x55)(hi)
0x16B02B80,	//0x0cb6		VoC_jal(result_check16)
0x00000A87,	//0x0cb8		VoC_lw16i(REG7,0x0)
0x0CBE3303,	//0x0cba		VoC_bez32_r(LABEL_BEZ32_R1,REG67)
0xFFC05E00,	//0x0cbc		VoC_NAD(IN_PARALLEL)	|	VoC_inc_p(REG0,DEFAULT)
		//0x0cbe		LABEL_BEZ32_R1
0x17452B80,	//0x0cbe		VoC_jal(push_all)
0x0A80E002,	//0x0cc0		VoC_lw16i(REG0,0x55)(lo)	|	VoC_movreg16(REG2,REG0,DEFAULT)
0xFFC00055,	//0x0cc2		VoC_NAD	|	VoC_lw16i(REG0,0x55)(hi)
0x16B02B80,	//0x0cc4		VoC_jal(result_check16)
0x0CCA3343,	//0x0cc6		VoC_bnez32_r(LABEL_BNEZ32_R,REG67)
0xFFC05E00,	//0x0cc8		VoC_NAD(IN_PARALLEL)	|	VoC_inc_p(REG0,DEFAULT)
		//0x0cca		LABEL_BNEZ32_R
0x17452B80,	//0x0cca		VoC_jal(push_all)
0x0A80E002,	//0x0ccc		VoC_lw16i(REG0,0x56)(lo)	|	VoC_movreg16(REG2,REG0,DEFAULT)
0xFFC00056,	//0x0cce		VoC_NAD	|	VoC_lw16i(REG0,0x56)(hi)
0x16B02B80,	//0x0cd0		VoC_jal(result_check16)
0x0CD633C3,	//0x0cd2		VoC_bnltz32_r(LABEL_BNLTZ32_R,REG67)
0xFFC05E00,	//0x0cd4		VoC_NAD(IN_PARALLEL)	|	VoC_inc_p(REG0,DEFAULT)
		//0x0cd6		LABEL_BNLTZ32_R
0x17452B80,	//0x0cd6		VoC_jal(push_all)
0x0A80E002,	//0x0cd8		VoC_lw16i(REG0,0x56)(lo)	|	VoC_movreg16(REG2,REG0,DEFAULT)
0xFFC00056,	//0x0cda		VoC_NAD	|	VoC_lw16i(REG0,0x56)(hi)
0x16B02B80,	//0x0cdc		VoC_jal(result_check16)
0x7FFF0AC7,	//0x0cde		VoC_lw16i(REG7,0xffffffff)
0x0CE433C3,	//0x0ce0		VoC_bnltz32_r(LABEL_BNLTZ32_R1,REG67)
0xFFC05E00,	//0x0ce2		VoC_NAD(IN_PARALLEL)	|	VoC_inc_p(REG0,DEFAULT)
		//0x0ce4		LABEL_BNLTZ32_R1
0x17452B80,	//0x0ce4		VoC_jal(push_all)
0x0A80E002,	//0x0ce6		VoC_lw16i(REG0,0x57)(lo)	|	VoC_movreg16(REG2,REG0,DEFAULT)
0xFFC00057,	//0x0ce8		VoC_NAD	|	VoC_lw16i(REG0,0x57)(hi)
0x16B02B80,	//0x0cea		VoC_jal(result_check16)
0x0CF03383,	//0x0cec		VoC_bltz32_r(LABEL_BLTZ32_R,REG67)
0xFFC05E00,	//0x0cee		VoC_NAD(IN_PARALLEL)	|	VoC_inc_p(REG0,DEFAULT)
		//0x0cf0		LABEL_BLTZ32_R
0x17452B80,	//0x0cf0		VoC_jal(push_all)
0x0A80E002,	//0x0cf2		VoC_lw16i(REG0,0x57)(lo)	|	VoC_movreg16(REG2,REG0,DEFAULT)
0xFFC00057,	//0x0cf4		VoC_NAD	|	VoC_lw16i(REG0,0x57)(hi)
0x16B02B80,	//0x0cf6		VoC_jal(result_check16)
0x00000A87,	//0x0cf8		VoC_lw16i(REG7,0x0)
0x0CFE3383,	//0x0cfa		VoC_bltz32_r(LABEL_BLTZ32_R1,REG67)
0xFFC05E00,	//0x0cfc		VoC_NAD(IN_PARALLEL)	|	VoC_inc_p(REG0,DEFAULT)
		//0x0cfe		LABEL_BLTZ32_R1
0x17452B80,	//0x0cfe		VoC_jal(push_all)
0x0A80E002,	//0x0d00		VoC_lw16i(REG0,0x58)(lo)	|	VoC_movreg16(REG2,REG0,DEFAULT)
0xFFC00058,	//0x0d02		VoC_NAD	|	VoC_lw16i(REG0,0x58)(hi)
0x16B02B80,	//0x0d04		VoC_jal(result_check16)
0x0D0A3437,	//0x0d06		VoC_bgt16_rr(LABEL_BGT16_RR,REG6,REG7)
0xFFC05E00,	//0x0d08		VoC_NAD(IN_PARALLEL)	|	VoC_inc_p(REG0,DEFAULT)
		//0x0d0a		LABEL_BGT16_RR
0x17452B80,	//0x0d0a		VoC_jal(push_all)
0x0A80E002,	//0x0d0c		VoC_lw16i(REG0,0x59)(lo)	|	VoC_movreg16(REG2,REG0,DEFAULT)
0xFFC00059,	//0x0d0e		VoC_NAD	|	VoC_lw16i(REG0,0x59)(hi)
0x16B02B80,	//0x0d10		VoC_jal(result_check16)
0x7FFF0AC7,	//0x0d12		VoC_lw16i(REG7,0xffffffff)
0x0D183437,	//0x0d14		VoC_bgt16_rr(LABEL_BGT16_RR1,REG6,REG7)
0xFFC05E00,	//0x0d16		VoC_NAD(IN_PARALLEL)	|	VoC_inc_p(REG0,DEFAULT)
		//0x0d18		LABEL_BGT16_RR1
0x17452B80,	//0x0d18		VoC_jal(push_all)
0x0A80E002,	//0x0d1a		VoC_lw16i(REG0,0x59)(lo)	|	VoC_movreg16(REG2,REG0,DEFAULT)
0xFFC00059,	//0x0d1c		VoC_NAD	|	VoC_lw16i(REG0,0x59)(hi)
0x16B02B80,	//0x0d1e		VoC_jal(result_check16)
0x0D2434B7,	//0x0d20		VoC_bngt16_rr(LABEL_BNGT16_RR,REG6,REG7)
0xFFC05E00,	//0x0d22		VoC_NAD(IN_PARALLEL)	|	VoC_inc_p(REG0,DEFAULT)
		//0x0d24		LABEL_BNGT16_RR
0x17452B80,	//0x0d24		VoC_jal(push_all)
0x0A80E002,	//0x0d26		VoC_lw16i(REG0,0x5a)(lo)	|	VoC_movreg16(REG2,REG0,DEFAULT)
0xFFC0005A,	//0x0d28		VoC_NAD	|	VoC_lw16i(REG0,0x5a)(hi)
0x16B02B80,	//0x0d2a		VoC_jal(result_check16)
0x00000A87,	//0x0d2c		VoC_lw16i(REG7,0x0)
0x0D3234B7,	//0x0d2e		VoC_bngt16_rr(LABEL_BNGT16_RR1,REG6,REG7)
0xFFC05E00,	//0x0d30		VoC_NAD(IN_PARALLEL)	|	VoC_inc_p(REG0,DEFAULT)
		//0x0d32		LABEL_BNGT16_RR1
0x17452B80,	//0x0d32		VoC_jal(push_all)
0x0A80E002,	//0x0d34		VoC_lw16i(REG0,0x5a)(lo)	|	VoC_movreg16(REG2,REG0,DEFAULT)
0xFFC0005A,	//0x0d36		VoC_NAD	|	VoC_lw16i(REG0,0x5a)(hi)
0x16B02B80,	//0x0d38		VoC_jal(result_check16)
0x0D3E3537,	//0x0d3a		VoC_be16_rr(LABEL_BE16_RR,REG6,REG7)
0xFFC05E00,	//0x0d3c		VoC_NAD(IN_PARALLEL)	|	VoC_inc_p(REG0,DEFAULT)
		//0x0d3e		LABEL_BE16_RR
0x17452B80,	//0x0d3e		VoC_jal(push_all)
0x0A80E002,	//0x0d40		VoC_lw16i(REG0,0x5a)(lo)	|	VoC_movreg16(REG2,REG0,DEFAULT)
0xFFC0005A,	//0x0d42		VoC_NAD	|	VoC_lw16i(REG0,0x5a)(hi)
0x16B02B80,	//0x0d44		VoC_jal(result_check16)
0x00010A87,	//0x0d46		VoC_lw16i(REG7,0x1)
0x0D4C3537,	//0x0d48		VoC_be16_rr(LABEL_BE16_RR1,REG6,REG7)
0xFFC05E00,	//0x0d4a		VoC_NAD(IN_PARALLEL)	|	VoC_inc_p(REG0,DEFAULT)
		//0x0d4c		LABEL_BE16_RR1
0x17452B80,	//0x0d4c		VoC_jal(push_all)
0x0A80E002,	//0x0d4e		VoC_lw16i(REG0,0x5b)(lo)	|	VoC_movreg16(REG2,REG0,DEFAULT)
0xFFC0005B,	//0x0d50		VoC_NAD	|	VoC_lw16i(REG0,0x5b)(hi)
0x16B02B80,	//0x0d52		VoC_jal(result_check16)
0x0D5835B7,	//0x0d54		VoC_bne16_rr(LABEL_BNE16_RR,REG6,REG7)
0xFFC05E00,	//0x0d56		VoC_NAD(IN_PARALLEL)	|	VoC_inc_p(REG0,DEFAULT)
		//0x0d58		LABEL_BNE16_RR
0x17452B80,	//0x0d58		VoC_jal(push_all)
0x0A80E002,	//0x0d5a		VoC_lw16i(REG0,0x5b)(lo)	|	VoC_movreg16(REG2,REG0,DEFAULT)
0xFFC0005B,	//0x0d5c		VoC_NAD	|	VoC_lw16i(REG0,0x5b)(hi)
0x16B02B80,	//0x0d5e		VoC_jal(result_check16)
0xFF467F1F,	//0x0d60		VoC_lw32z(RL6,IN_PARALLEL)	|	VoC_movreg32(RL7,REG67,DEFAULT)
0x0D663637,	//0x0d62		VoC_bgt32_rr(LABEL_BGT32_RR,RL6,RL7)
0xFFC05E00,	//0x0d64		VoC_NAD(IN_PARALLEL)	|	VoC_inc_p(REG0,DEFAULT)
		//0x0d66		LABEL_BGT32_RR
0x17452B80,	//0x0d66		VoC_jal(push_all)
0x0A80E002,	//0x0d68		VoC_lw16i(REG0,0x5c)(lo)	|	VoC_movreg16(REG2,REG0,DEFAULT)
0xFFC0005C,	//0x0d6a		VoC_NAD	|	VoC_lw16i(REG0,0x5c)(hi)
0x16B02B80,	//0x0d6c		VoC_jal(result_check16)
0x0D7236B7,	//0x0d6e		VoC_bngt32_rr(LABEL_BNGT32_RR,RL6,RL7)
0xFFC05E00,	//0x0d70		VoC_NAD(IN_PARALLEL)	|	VoC_inc_p(REG0,DEFAULT)
		//0x0d72		LABEL_BNGT32_RR
0x17452B80,	//0x0d72		VoC_jal(push_all)
0x0A80E002,	//0x0d74		VoC_lw16i(REG0,0x5c)(lo)	|	VoC_movreg16(REG2,REG0,DEFAULT)
0xFFC0005C,	//0x0d76		VoC_NAD	|	VoC_lw16i(REG0,0x5c)(hi)
0x16B02B80,	//0x0d78		VoC_jal(result_check16)
0x0D7E3737,	//0x0d7a		VoC_be32_rr(LABEL_BE32_RR,RL6,RL7)
0xFFC05E00,	//0x0d7c		VoC_NAD(IN_PARALLEL)	|	VoC_inc_p(REG0,DEFAULT)
		//0x0d7e		LABEL_BE32_RR
0x17452B80,	//0x0d7e		VoC_jal(push_all)
0x0A80E002,	//0x0d80		VoC_lw16i(REG0,0x5d)(lo)	|	VoC_movreg16(REG2,REG0,DEFAULT)
0xFFC0005D,	//0x0d82		VoC_NAD	|	VoC_lw16i(REG0,0x5d)(hi)
0x16B02B80,	//0x0d84		VoC_jal(result_check16)
0x0D8A37B7,	//0x0d86		VoC_bne32_rr(LABEL_BNE32_RR,RL6,RL7)
0xFFC05E00,	//0x0d88		VoC_NAD(IN_PARALLEL)	|	VoC_inc_p(REG0,DEFAULT)
		//0x0d8a		LABEL_BNE32_RR
0x17452B80,	//0x0d8a		VoC_jal(push_all)
0x0A80E002,	//0x0d8c		VoC_lw16i(REG0,0x5d)(lo)	|	VoC_movreg16(REG2,REG0,DEFAULT)
0xFFC0005D,	//0x0d8e		VoC_NAD	|	VoC_lw16i(REG0,0x5d)(hi)
0x16B02B80,	//0x0d90		VoC_jal(result_check16)
0x00023827,	//0x0d92		VoC_bgt16_rd(LABEL_BGT16_RD,REG7,0x2)
0xFFC05E00,	//0x0d94		VoC_NAD(IN_PARALLEL)	|	VoC_inc_p(REG0,DEFAULT)
		//0x0d96		LABEL_BGT16_RD
0x17452B80,	//0x0d96		VoC_jal(push_all)
0x0A80E002,	//0x0d98		VoC_lw16i(REG0,0x5e)(lo)	|	VoC_movreg16(REG2,REG0,DEFAULT)
0xFFC0005E,	//0x0d9a		VoC_NAD	|	VoC_lw16i(REG0,0x5e)(hi)
0x16B02B80,	//0x0d9c		VoC_jal(result_check16)
0x00023C27,	//0x0d9e		VoC_bngt16_rd(LABEL_BNGT16_RD,REG7,0x2)
0xFFC05E00,	//0x0da0		VoC_NAD(IN_PARALLEL)	|	VoC_inc_p(REG0,DEFAULT)
		//0x0da2		LABEL_BNGT16_RD
0x17452B80,	//0x0da2		VoC_jal(push_all)
0x0A80E002,	//0x0da4		VoC_lw16i(REG0,0x5e)(lo)	|	VoC_movreg16(REG2,REG0,DEFAULT)
0xFFC0005E,	//0x0da6		VoC_NAD	|	VoC_lw16i(REG0,0x5e)(hi)
0x16B02B80,	//0x0da8		VoC_jal(result_check16)
0x00014027,	//0x0daa		VoC_be16_rd(LABEL_BE16_RD,REG7,0x1)
0xFFC05E00,	//0x0dac		VoC_NAD(IN_PARALLEL)	|	VoC_inc_p(REG0,DEFAULT)
		//0x0dae		LABEL_BE16_RD
0x17452B80,	//0x0dae		VoC_jal(push_all)
0x0A80E002,	//0x0db0		VoC_lw16i(REG0,0x5e)(lo)	|	VoC_movreg16(REG2,REG0,DEFAULT)
0xFFC0005E,	//0x0db2		VoC_NAD	|	VoC_lw16i(REG0,0x5e)(hi)
0x16B02B80,	//0x0db4		VoC_jal(result_check16)
0x00014427,	//0x0db6		VoC_bne16_rd(LABEL_BNE16_RD,REG7,0x1)
0xFFC05E00,	//0x0db8		VoC_NAD(IN_PARALLEL)	|	VoC_inc_p(REG0,DEFAULT)
		//0x0dba		LABEL_BNE16_RD
0x17452B80,	//0x0dba		VoC_jal(push_all)
0x0A80E002,	//0x0dbc		VoC_lw16i(REG0,0x5f)(lo)	|	VoC_movreg16(REG2,REG0,DEFAULT)
0xFFC0005F,	//0x0dbe		VoC_NAD	|	VoC_lw16i(REG0,0x5f)(hi)
0x16B02B80,	//0x0dc0		VoC_jal(result_check16)
0x00014827,	//0x0dc2		VoC_blt16_rd(LABEL_BLT16_RD,REG7,0x1)
0xFFC05E00,	//0x0dc4		VoC_NAD(IN_PARALLEL)	|	VoC_inc_p(REG0,DEFAULT)
		//0x0dc6		LABEL_BLT16_RD
0x17452B80,	//0x0dc6		VoC_jal(push_all)
0x0A80E002,	//0x0dc8		VoC_lw16i(REG0,0x60)(lo)	|	VoC_movreg16(REG2,REG0,DEFAULT)
0xFFC00060,	//0x0dca		VoC_NAD	|	VoC_lw16i(REG0,0x60)(hi)
0x16B02B80,	//0x0dcc		VoC_jal(result_check16)
0x00014C27,	//0x0dce		VoC_bnlt16_rd(LABEL_BNLT16_RD,REG7,0x1)
0xFFC05E00,	//0x0dd0		VoC_NAD(IN_PARALLEL)	|	VoC_inc_p(REG0,DEFAULT)
		//0x0dd2		LABEL_BNLT16_RD
0x17452B80,	//0x0dd2		VoC_jal(push_all)
0x0A80E002,	//0x0dd4		VoC_lw16i(REG0,0x60)(lo)	|	VoC_movreg16(REG2,REG0,DEFAULT)
0xFFC00060,	//0x0dd6		VoC_NAD	|	VoC_lw16i(REG0,0x60)(hi)
0x16B02B80,	//0x0dd8		VoC_jal(result_check16)
0x00005023,	//0x0dda		VoC_bgt32_rd(LABEL_BGT32_RD,REG67,0x0)
0xFFC05E00,	//0x0ddc		VoC_NAD(IN_PARALLEL)	|	VoC_inc_p(REG0,DEFAULT)
		//0x0dde		LABEL_BGT32_RD
0x17452B80,	//0x0dde		VoC_jal(push_all)
0x0A80E002,	//0x0de0		VoC_lw16i(REG0,0x61)(lo)	|	VoC_movreg16(REG2,REG0,DEFAULT)
0xFFC00061,	//0x0de2		VoC_NAD	|	VoC_lw16i(REG0,0x61)(hi)
0x16B02B80,	//0x0de4		VoC_jal(result_check16)
0x00005423,	//0x0de6		VoC_bngt32_rd(LABEL_BNGT32_RD,REG67,0x0)
0xFFC05E00,	//0x0de8		VoC_NAD(IN_PARALLEL)	|	VoC_inc_p(REG0,DEFAULT)
		//0x0dea		LABEL_BNGT32_RD
0x17452B80,	//0x0dea		VoC_jal(push_all)
0x0A80E002,	//0x0dec		VoC_lw16i(REG0,0x61)(lo)	|	VoC_movreg16(REG2,REG0,DEFAULT)
0xFFC00061,	//0x0dee		VoC_NAD	|	VoC_lw16i(REG0,0x61)(hi)
0x16B02B80,	//0x0df0		VoC_jal(result_check16)
0x00005823,	//0x0df2		VoC_be32_rd(LABEL_BE32_RD,REG67,0x0)
0xFFC05E00,	//0x0df4		VoC_NAD(IN_PARALLEL)	|	VoC_inc_p(REG0,DEFAULT)
		//0x0df6		LABEL_BE32_RD
0x17452B80,	//0x0df6		VoC_jal(push_all)
0x0A80E002,	//0x0df8		VoC_lw16i(REG0,0x61)(lo)	|	VoC_movreg16(REG2,REG0,DEFAULT)
0xFFC00061,	//0x0dfa		VoC_NAD	|	VoC_lw16i(REG0,0x61)(hi)
0x16B02B80,	//0x0dfc		VoC_jal(result_check16)
0x00005C23,	//0x0dfe		VoC_bne32_rd(LABEL_BNE32_RD,REG67,0x0)
0xFFC05E00,	//0x0e00		VoC_NAD(IN_PARALLEL)	|	VoC_inc_p(REG0,DEFAULT)
		//0x0e02		LABEL_BNE32_RD
0x17452B80,	//0x0e02		VoC_jal(push_all)
0x0A80E002,	//0x0e04		VoC_lw16i(REG0,0x62)(lo)	|	VoC_movreg16(REG2,REG0,DEFAULT)
0xFFC00062,	//0x0e06		VoC_NAD	|	VoC_lw16i(REG0,0x62)(hi)
0x16B02B80,	//0x0e08		VoC_jal(result_check16)
0x00006023,	//0x0e0a		VoC_blt32_rd(LABEL_BLT32_RD,REG67,0x0)
0xFFC05E00,	//0x0e0c		VoC_NAD(IN_PARALLEL)	|	VoC_inc_p(REG0,DEFAULT)
		//0x0e0e		LABEL_BLT32_RD
0x17452B80,	//0x0e0e		VoC_jal(push_all)
0x0A80E002,	//0x0e10		VoC_lw16i(REG0,0x63)(lo)	|	VoC_movreg16(REG2,REG0,DEFAULT)
0xFFC00063,	//0x0e12		VoC_NAD	|	VoC_lw16i(REG0,0x63)(hi)
0x16B02B80,	//0x0e14		VoC_jal(result_check16)
0x00006423,	//0x0e16		VoC_bnlt32_rd(LABEL_BNLT32_RD,REG67,0x0)
0xFFC05E00,	//0x0e18		VoC_NAD(IN_PARALLEL)	|	VoC_inc_p(REG0,DEFAULT)
		//0x0e1a		LABEL_BNLT32_RD
0x17452B80,	//0x0e1a		VoC_jal(push_all)
0x0A80E002,	//0x0e1c		VoC_lw16i(REG0,0x63)(lo)	|	VoC_movreg16(REG2,REG0,DEFAULT)
0xFFC00063,	//0x0e1e		VoC_NAD	|	VoC_lw16i(REG0,0x63)(hi)
0x16B02B80,	//0x0e20		VoC_jal(result_check16)
0x00016804,	//0x0e22		VoC_bgtz16_d(LABEL_BGTZ16_D,0x1)
0xFFC05E00,	//0x0e24		VoC_NAD(IN_PARALLEL)	|	VoC_inc_p(REG0,DEFAULT)
		//0x0e26		LABEL_BGTZ16_D
0x17452B80,	//0x0e26		VoC_jal(push_all)
0x0A80E002,	//0x0e28		VoC_lw16i(REG0,0x63)(lo)	|	VoC_movreg16(REG2,REG0,DEFAULT)
0xFFC00063,	//0x0e2a		VoC_NAD	|	VoC_lw16i(REG0,0x63)(hi)
0x16B02B80,	//0x0e2c		VoC_jal(result_check16)
0x00016A04,	//0x0e2e		VoC_bngtz16_d(LABEL_BNGTZ16_D,0x1)
0xFFC05E00,	//0x0e30		VoC_NAD(IN_PARALLEL)	|	VoC_inc_p(REG0,DEFAULT)
		//0x0e32		LABEL_BNGTZ16_D
0x17452B80,	//0x0e32		VoC_jal(push_all)
0x0A80E002,	//0x0e34		VoC_lw16i(REG0,0x64)(lo)	|	VoC_movreg16(REG2,REG0,DEFAULT)
0xFFC00064,	//0x0e36		VoC_NAD	|	VoC_lw16i(REG0,0x64)(hi)
0x16B02B80,	//0x0e38		VoC_jal(result_check16)
0x00016C04,	//0x0e3a		VoC_bez16_d(LABEL_BEZ16_D,0x1)
0xFFC05E00,	//0x0e3c		VoC_NAD(IN_PARALLEL)	|	VoC_inc_p(REG0,DEFAULT)
		//0x0e3e		LABEL_BEZ16_D
0x17452B80,	//0x0e3e		VoC_jal(push_all)
0x0A80E002,	//0x0e40		VoC_lw16i(REG0,0x65)(lo)	|	VoC_movreg16(REG2,REG0,DEFAULT)
0xFFC00065,	//0x0e42		VoC_NAD	|	VoC_lw16i(REG0,0x65)(hi)
0x16B02B80,	//0x0e44		VoC_jal(result_check16)
0x00016E04,	//0x0e46		VoC_bnez16_d(LABEL_BNEZ16_D,0x1)
0xFFC05E00,	//0x0e48		VoC_NAD(IN_PARALLEL)	|	VoC_inc_p(REG0,DEFAULT)
		//0x0e4a		LABEL_BNEZ16_D
0x17452B80,	//0x0e4a		VoC_jal(push_all)
0x0A80E002,	//0x0e4c		VoC_lw16i(REG0,0x65)(lo)	|	VoC_movreg16(REG2,REG0,DEFAULT)
0xFFC00065,	//0x0e4e		VoC_NAD	|	VoC_lw16i(REG0,0x65)(hi)
0x16B02B80,	//0x0e50		VoC_jal(result_check16)
0x00017004,	//0x0e52		VoC_bltz16_d(LABEL_BLTZ16_D,0x1)
0xFFC05E00,	//0x0e54		VoC_NAD(IN_PARALLEL)	|	VoC_inc_p(REG0,DEFAULT)
		//0x0e56		LABEL_BLTZ16_D
0x17452B80,	//0x0e56		VoC_jal(push_all)
0x0A80E002,	//0x0e58		VoC_lw16i(REG0,0x66)(lo)	|	VoC_movreg16(REG2,REG0,DEFAULT)
0xFFC00066,	//0x0e5a		VoC_NAD	|	VoC_lw16i(REG0,0x66)(hi)
0x16B02B80,	//0x0e5c		VoC_jal(result_check16)
0x00017204,	//0x0e5e		VoC_bnltz16_d(LABEL_BNLTZ16_D,0x1)
0xFFC05E00,	//0x0e60		VoC_NAD(IN_PARALLEL)	|	VoC_inc_p(REG0,DEFAULT)
		//0x0e62		LABEL_BNLTZ16_D
0x17452B80,	//0x0e62		VoC_jal(push_all)
0x0A80E002,	//0x0e64		VoC_lw16i(REG0,0x66)(lo)	|	VoC_movreg16(REG2,REG0,DEFAULT)
0xFFC00066,	//0x0e66		VoC_NAD	|	VoC_lw16i(REG0,0x66)(hi)
0x16B02B80,	//0x0e68		VoC_jal(result_check16)
0x00007404,	//0x0e6a		VoC_bgtz32_d(LABEL_BGTZ32_D,0x0)
0xFFC05E00,	//0x0e6c		VoC_NAD(IN_PARALLEL)	|	VoC_inc_p(REG0,DEFAULT)
		//0x0e6e		LABEL_BGTZ32_D
0x17452B80,	//0x0e6e		VoC_jal(push_all)
0x0A80E002,	//0x0e70		VoC_lw16i(REG0,0x66)(lo)	|	VoC_movreg16(REG2,REG0,DEFAULT)
0xFFC00066,	//0x0e72		VoC_NAD	|	VoC_lw16i(REG0,0x66)(hi)
0x16B02B80,	//0x0e74		VoC_jal(result_check16)
0x00007604,	//0x0e76		VoC_bngtz32_d(LABEL_BNGTZ32_D,0x0)
0xFFC05E00,	//0x0e78		VoC_NAD(IN_PARALLEL)	|	VoC_inc_p(REG0,DEFAULT)
		//0x0e7a		LABEL_BNGTZ32_D
0x17452B80,	//0x0e7a		VoC_jal(push_all)
0x0A80E002,	//0x0e7c		VoC_lw16i(REG0,0x67)(lo)	|	VoC_movreg16(REG2,REG0,DEFAULT)
0xFFC00067,	//0x0e7e		VoC_NAD	|	VoC_lw16i(REG0,0x67)(hi)
0x16B02B80,	//0x0e80		VoC_jal(result_check16)
0x00007804,	//0x0e82		VoC_bez32_d(LABEL_BEZ32_D,0x0)
0xFFC05E00,	//0x0e84		VoC_NAD(IN_PARALLEL)	|	VoC_inc_p(REG0,DEFAULT)
		//0x0e86		LABEL_BEZ32_D
0x17452B80,	//0x0e86		VoC_jal(push_all)
0x0A80E002,	//0x0e88		VoC_lw16i(REG0,0x68)(lo)	|	VoC_movreg16(REG2,REG0,DEFAULT)
0xFFC00068,	//0x0e8a		VoC_NAD	|	VoC_lw16i(REG0,0x68)(hi)
0x16B02B80,	//0x0e8c		VoC_jal(result_check16)
0x00007A04,	//0x0e8e		VoC_bnez32_d(LABEL_BNEZ32_D,0x0)
0xFFC05E00,	//0x0e90		VoC_NAD(IN_PARALLEL)	|	VoC_inc_p(REG0,DEFAULT)
		//0x0e92		LABEL_BNEZ32_D
0x17452B80,	//0x0e92		VoC_jal(push_all)
0x0A80E002,	//0x0e94		VoC_lw16i(REG0,0x68)(lo)	|	VoC_movreg16(REG2,REG0,DEFAULT)
0xFFC00068,	//0x0e96		VoC_NAD	|	VoC_lw16i(REG0,0x68)(hi)
0x16B02B80,	//0x0e98		VoC_jal(result_check16)
0x00007C04,	//0x0e9a		VoC_bltz32_d(LABEL_BLTZ32_D,0x0)
0xFFC05E00,	//0x0e9c		VoC_NAD(IN_PARALLEL)	|	VoC_inc_p(REG0,DEFAULT)
		//0x0e9e		LABEL_BLTZ32_D
0x17452B80,	//0x0e9e		VoC_jal(push_all)
0x0A80E002,	//0x0ea0		VoC_lw16i(REG0,0x69)(lo)	|	VoC_movreg16(REG2,REG0,DEFAULT)
0xFFC00069,	//0x0ea2		VoC_NAD	|	VoC_lw16i(REG0,0x69)(hi)
0x16B02B80,	//0x0ea4		VoC_jal(result_check16)
0x00007E04,	//0x0ea6		VoC_bnltz32_d(LABEL_BNLTZ32_D,0x0)
0xFFC05E00,	//0x0ea8		VoC_NAD(IN_PARALLEL)	|	VoC_inc_p(REG0,DEFAULT)
		//0x0eaa		LABEL_BNLTZ32_D
0x17452B80,	//0x0eaa		VoC_jal(push_all)
0x0A80E002,	//0x0eac		VoC_lw16i(REG0,0x69)(lo)	|	VoC_movreg16(REG2,REG0,DEFAULT)
0xFFC00069,	//0x0eae		VoC_NAD	|	VoC_lw16i(REG0,0x69)(hi)
0x16B02B80,	//0x0eb0		VoC_jal(result_check16)
0x7FFF0AC0,	//0x0eb2		VoC_lw16i(REG0,0xffffffff)
		//0x0eb4		LABEL_JUMP3
0xDE00FFC0,	//0x0eb4		VoC_inc_p(REG0,DEFAULT)	|	VoC_NOP
0x0EB43180,	//0x0eb6		VoC_bez16_r(LABEL_JUMP3,REG0)
0x7FFF0A81,	//0x0eb8		VoC_lw16i(REG1,0x7fff)
0x00010A82,	//0x0eba		VoC_lw16i(REG2,0x1)
0x00010AC3,	//0x0ebc		VoC_lw16i(REG3,0x8001)
0x00020A84,	//0x0ebe		VoC_lw16i(REG4,0x2)
0xC2E54051,	//0x0ec0		VoC_sub16_rr(REG5,REG3,REG4,IN_PARALLEL)	|	VoC_add16_rr(REG1,REG1,REG2,DEFAULT)
0xFFC0FFC0,	//0x0ec2		VoC_NOP	|	VoC_NOP
0xDF41DF40,	//0x0ec4		VoC_push32(REG23,DEFAULT)	|	VoC_push32(REG01,DEFAULT)
0xDF43DF42,	//0x0ec6		VoC_push32(REG67,DEFAULT)	|	VoC_push32(REG45,DEFAULT)
0x0A80E022,	//0x0ec8		VoC_lw16i(REG0,0x7fff)(lo)	|	VoC_movreg16(REG2,REG1,DEFAULT)
0x2B807FFF,	//0x0eca		VoC_jal(result_check16)(lo)	|	VoC_lw16i(REG0,0x7fff)(hi)
0xFFC016B0,	//0x0ecc		VoC_NOP	|	VoC_jal(result_check16)(hi)
0xDF41DF40,	//0x0ece		VoC_push32(REG23,DEFAULT)	|	VoC_push32(REG01,DEFAULT)
0xDF43DF42,	//0x0ed0		VoC_push32(REG67,DEFAULT)	|	VoC_push32(REG45,DEFAULT)
0x0AC0E0A2,	//0x0ed2		VoC_lw16i(REG0,0x8000)(lo)	|	VoC_movreg16(REG2,REG5,DEFAULT)
0xFFC00000,	//0x0ed4		VoC_NAD	|	VoC_lw16i(REG0,0x8000)(hi)
0x16B02B80,	//0x0ed6		VoC_jal(result_check16)
0x0EDB2E80,	//0x0ed8		VoC_boe0z16_r(LABEL_OVF0)
0xFFC0DE00,	//0x0eda		VoC_NOP	|	VoC_inc_p(REG0,DEFAULT)
		//0x0edb		LABEL_OVF0
0xDF41DF40,	//0x0edc		VoC_push32(REG23,DEFAULT)	|	VoC_push32(REG01,DEFAULT)
0xDF43DF42,	//0x0ede		VoC_push32(REG67,DEFAULT)	|	VoC_push32(REG45,DEFAULT)
0x0A80E002,	//0x0ee0		VoC_lw16i(REG0,0x2)(lo)	|	VoC_movreg16(REG2,REG0,DEFAULT)
0xFFC00002,	//0x0ee2		VoC_NAD	|	VoC_lw16i(REG0,0x2)(hi)
0x16B02B80,	//0x0ee4		VoC_jal(result_check16)
0x00010A80,	//0x0ee6		VoC_lw16i(REG0,0x1)
0x0EEB2F80,	//0x0ee8		VoC_boe1z16_r(LABEL_OVF1)
0xFFC0DE00,	//0x0eea		VoC_NOP	|	VoC_inc_p(REG0,DEFAULT)
		//0x0eeb		LABEL_OVF1
0xDF40FFC0,	//0x0eec		VoC_push32(REG01,DEFAULT)	|	VoC_NOP
0xDF42DF41,	//0x0eee		VoC_push32(REG45,DEFAULT)	|	VoC_push32(REG23,DEFAULT)
0xE002DF43,	//0x0ef0		VoC_movreg16(REG2,REG0,DEFAULT)	|	VoC_push32(REG67,DEFAULT)
0x00020A80,	//0x0ef2		VoC_lw16i(REG0,0x2)
0x16B02B80,	//0x0ef4		VoC_jal(result_check16)
0x00010A96,	//0x0ef6		VoC_lw16i(STATUS,0x1)
0x00020A96,	//0x0ef8		VoC_lw16i(STATUS,0x2)
0x7FFF0AC6,	//0x0efa		VoC_lw16i(REG6,0xffff)
0x7FFF0A87,	//0x0efc		VoC_lw16i(REG7,0x7fff)
0x00000A84,	//0x0efe		VoC_lw16i(REG4,0x0)
0x00010A85,	//0x0f00		VoC_lw16i(REG5,0x1)
0xFFC0C898,	//0x0f02		VoC_NOP	|	VoC_add32_rr(REG01,REG45,REG67,DEFAULT)
0xDF40FFC0,	//0x0f04		VoC_push32(REG01,DEFAULT)	|	VoC_NOP
0xDF42DF41,	//0x0f06		VoC_push32(REG45,DEFAULT)	|	VoC_push32(REG23,DEFAULT)
0xFF01DF43,	//0x0f08		VoC_movreg32(REG23,REG01,DEFAULT)	|	VoC_push32(REG67,DEFAULT)
0x7FFF0AC0,	//0x0f0a		VoC_lw16i(REG0,0xffff)
0x7FFF0A81,	//0x0f0c		VoC_lw16i(REG1,0x7fff)
0x168C2B80,	//0x0f0e		VoC_jal(result_check32)
0x00000A86,	//0x0f10		VoC_lw16i(REG6,0x0)
0x00000AC7,	//0x0f12		VoC_lw16i(REG7,0x8000)
0x00000A84,	//0x0f14		VoC_lw16i(REG4,0x0)
0x00010A85,	//0x0f16		VoC_lw16i(REG5,0x1)
0xCAD07F44,	//0x0f18		VoC_sub32_rr(REG01,REG67,REG45,IN_PARALLEL)	|	VoC_lw32z(ACC0,DEFAULT)
0xFFC0FFC0,	//0x0f1a		VoC_NOP	|	VoC_NOP
0xDF41DF40,	//0x0f1c		VoC_push32(REG23,DEFAULT)	|	VoC_push32(REG01,DEFAULT)
0xDF43DF42,	//0x0f1e		VoC_push32(REG67,DEFAULT)	|	VoC_push32(REG45,DEFAULT)
0x0A80FF01,	//0x0f20		VoC_lw16i(REG0,0x0)(lo)	|	VoC_movreg32(REG23,REG01,DEFAULT)
0x0AC10000,	//0x0f22		VoC_lw16i(REG1,0x8000)(lo)	|	VoC_lw16i(REG0,0x0)(hi)
0xFFC00000,	//0x0f24		VoC_NAD	|	VoC_lw16i(REG1,0x8000)(hi)
0x168C2B80,	//0x0f26		VoC_jal(result_check32)
0x0F2B2E80,	//0x0f28		VoC_boe0z16_r(LABEL_OVF2)
0xFFC0DE00,	//0x0f2a		VoC_NOP	|	VoC_inc_p(REG0,DEFAULT)
		//0x0f2b		LABEL_OVF2
0xDF40FFC0,	//0x0f2c		VoC_push32(REG01,DEFAULT)	|	VoC_NOP
0xDF42DF41,	//0x0f2e		VoC_push32(REG45,DEFAULT)	|	VoC_push32(REG23,DEFAULT)
0xE002DF43,	//0x0f30		VoC_movreg16(REG2,REG0,DEFAULT)	|	VoC_push32(REG67,DEFAULT)
0x00010A80,	//0x0f32		VoC_lw16i(REG0,0x1)
0x16B02B80,	//0x0f34		VoC_jal(result_check16)
0x0F392F80,	//0x0f36		VoC_boe1z16_r(LABEL_OVF3)
0xFFC0DE00,	//0x0f38		VoC_NOP	|	VoC_inc_p(REG0,DEFAULT)
		//0x0f39		LABEL_OVF3
0xDF41DF40,	//0x0f3a		VoC_push32(REG23,DEFAULT)	|	VoC_push32(REG01,DEFAULT)
0xDF43DF42,	//0x0f3c		VoC_push32(REG67,DEFAULT)	|	VoC_push32(REG45,DEFAULT)
0x0A80E002,	//0x0f3e		VoC_lw16i(REG0,0x2)(lo)	|	VoC_movreg16(REG2,REG0,DEFAULT)
0xFFC00002,	//0x0f40		VoC_NAD	|	VoC_lw16i(REG0,0x2)(hi)
0x16B02B80,	//0x0f42		VoC_jal(result_check16)
0x00010A96,	//0x0f44		VoC_lw16i(STATUS,0x1)
0x00000AC6,	//0x0f46		VoC_lw16i(REG6,0x8000)
0x00000AC7,	//0x0f48		VoC_lw16i(REG7,0x8000)
0xFFC0C5B9,	//0x0f4a		VoC_NOP	|	VoC_mult16_rr(REG1,REG6,REG7,DEFAULT)
0xDF41DF40,	//0x0f4c		VoC_push32(REG23,DEFAULT)	|	VoC_push32(REG01,DEFAULT)
0xDF43DF42,	//0x0f4e		VoC_push32(REG67,DEFAULT)	|	VoC_push32(REG45,DEFAULT)
0x0A80E002,	//0x0f50		VoC_lw16i(REG0,0x2)(lo)	|	VoC_movreg16(REG2,REG0,DEFAULT)
0xFFC00002,	//0x0f52		VoC_NAD	|	VoC_lw16i(REG0,0x2)(hi)
0x16B02B80,	//0x0f54		VoC_jal(result_check16)
0x0F592E80,	//0x0f56		VoC_boe0z16_r(LABEL_OVF4)
0xFFC0DE00,	//0x0f58		VoC_NOP	|	VoC_inc_p(REG0,DEFAULT)
		//0x0f59		LABEL_OVF4
0xDF41DF40,	//0x0f5a		VoC_push32(REG23,DEFAULT)	|	VoC_push32(REG01,DEFAULT)
0xDF43DF42,	//0x0f5c		VoC_push32(REG67,DEFAULT)	|	VoC_push32(REG45,DEFAULT)
0x0A80E002,	//0x0f5e		VoC_lw16i(REG0,0x3)(lo)	|	VoC_movreg16(REG2,REG0,DEFAULT)
0xFFC00003,	//0x0f60		VoC_NAD	|	VoC_lw16i(REG0,0x3)(hi)
0x16B02B80,	//0x0f62		VoC_jal(result_check16)
0x00010A96,	//0x0f64		VoC_lw16i(STATUS,0x1)
0x7FFF0A86,	//0x0f66		VoC_lw16i(REG6,0x7fff)
0x00000AC7,	//0x0f68		VoC_lw16i(REG7,0x8000)
0xFFC0C5B9,	//0x0f6a		VoC_NOP	|	VoC_mult16_rr(REG1,REG6,REG7,DEFAULT)
0xDF41DF40,	//0x0f6c		VoC_push32(REG23,DEFAULT)	|	VoC_push32(REG01,DEFAULT)
0xDF43DF42,	//0x0f6e		VoC_push32(REG67,DEFAULT)	|	VoC_push32(REG45,DEFAULT)
0x0AC0E022,	//0x0f70		VoC_lw16i(REG0,0x8000)(lo)	|	VoC_movreg16(REG2,REG1,DEFAULT)
0xFFC00000,	//0x0f72		VoC_NAD	|	VoC_lw16i(REG0,0x8000)(hi)
0x16B02B80,	//0x0f74		VoC_jal(result_check16)
0x0F792F00,	//0x0f76		VoC_bnoe0z16_r(LABEL_OVF5)
0xFFC0DE00,	//0x0f78		VoC_NOP	|	VoC_inc_p(REG0,DEFAULT)
		//0x0f79		LABEL_OVF5
0xDF41DF40,	//0x0f7a		VoC_push32(REG23,DEFAULT)	|	VoC_push32(REG01,DEFAULT)
0xDF43DF42,	//0x0f7c		VoC_push32(REG67,DEFAULT)	|	VoC_push32(REG45,DEFAULT)
0x0A80E002,	//0x0f7e		VoC_lw16i(REG0,0x3)(lo)	|	VoC_movreg16(REG2,REG0,DEFAULT)
0xFFC00003,	//0x0f80		VoC_NAD	|	VoC_lw16i(REG0,0x3)(hi)
0x16B02B80,	//0x0f82		VoC_jal(result_check16)
0x00010A96,	//0x0f84		VoC_lw16i(STATUS,0x1)
0x00020A96,	//0x0f86		VoC_lw16i(STATUS,0x2)
0x00000AC6,	//0x0f88		VoC_lw16i(REG6,0x8000)
0x00000AC7,	//0x0f8a		VoC_lw16i(REG7,0x8000)
0xFFC0CDB9,	//0x0f8c		VoC_NOP	|	VoC_multf32_rr(REG23,REG6,REG7,DEFAULT)
0xDF41DF40,	//0x0f8e		VoC_push32(REG23,DEFAULT)	|	VoC_push32(REG01,DEFAULT)
0xDF43DF42,	//0x0f90		VoC_push32(REG67,DEFAULT)	|	VoC_push32(REG45,DEFAULT)
0x7FFF0AC0,	//0x0f92		VoC_lw16i(REG0,0xffff)
0x7FFF0A81,	//0x0f94		VoC_lw16i(REG1,0x7fff)
0x168C2B80,	//0x0f96		VoC_jal(result_check32)
0x00000AC6,	//0x0f98		VoC_lw16i(REG6,0x8000)
0x7FFF0A87,	//0x0f9a		VoC_lw16i(REG7,0x7fff)
0xCDB97F44,	//0x0f9c		VoC_multf32_rr(REG23,REG6,REG7,IN_PARALLEL)	|	VoC_lw32z(ACC0,DEFAULT)
0xDF40FFC0,	//0x0f9e		VoC_push32(REG01,DEFAULT)	|	VoC_NOP
0xDF42DF41,	//0x0fa0		VoC_push32(REG45,DEFAULT)	|	VoC_push32(REG23,DEFAULT)
0x0A80DF43,	//0x0fa2		VoC_lw16i(REG0,0x0)(lo)	|	VoC_push32(REG67,DEFAULT)
0x0AC10000,	//0x0fa4		VoC_lw16i(REG1,0x8001)(lo)	|	VoC_lw16i(REG0,0x0)(hi)
0xFFC00001,	//0x0fa6		VoC_NAD	|	VoC_lw16i(REG1,0x8001)(hi)
0x168C2B80,	//0x0fa8		VoC_jal(result_check32)
0x0FAD2F00,	//0x0faa		VoC_bnoe0z16_r(LABEL_OVF6)
0xFFC0DE00,	//0x0fac		VoC_NOP	|	VoC_inc_p(REG0,DEFAULT)
		//0x0fad		LABEL_OVF6
0xDF41DF40,	//0x0fae		VoC_push32(REG23,DEFAULT)	|	VoC_push32(REG01,DEFAULT)
0xDF43DF42,	//0x0fb0		VoC_push32(REG67,DEFAULT)	|	VoC_push32(REG45,DEFAULT)
0x0A80E002,	//0x0fb2		VoC_lw16i(REG0,0x3)(lo)	|	VoC_movreg16(REG2,REG0,DEFAULT)
0xFFC00003,	//0x0fb4		VoC_NAD	|	VoC_lw16i(REG0,0x3)(hi)
0x16B02B80,	//0x0fb6		VoC_jal(result_check16)
0x0FBB3000,	//0x0fb8		VoC_bnoe1z16_r(LABEL_OVF7)
0xFFC0DE00,	//0x0fba		VoC_NOP	|	VoC_inc_p(REG0,DEFAULT)
		//0x0fbb		LABEL_OVF7
0xDF41DF40,	//0x0fbc		VoC_push32(REG23,DEFAULT)	|	VoC_push32(REG01,DEFAULT)
0xDF43DF42,	//0x0fbe		VoC_push32(REG67,DEFAULT)	|	VoC_push32(REG45,DEFAULT)
0x0A80E002,	//0x0fc0		VoC_lw16i(REG0,0x4)(lo)	|	VoC_movreg16(REG2,REG0,DEFAULT)
0xFFC00004,	//0x0fc2		VoC_NAD	|	VoC_lw16i(REG0,0x4)(hi)
0x16B02B80,	//0x0fc4		VoC_jal(result_check16)
0x00010A96,	//0x0fc6		VoC_lw16i(STATUS,0x1)
0x40000A81,	//0x0fc8		VoC_lw16i(REG1,0x4000)
0xFFC0F8F9,	//0x0fca		VoC_NOP	|	VoC_shr16_ri(REG1,0xffffffff,DEFAULT)
0xDF41DF40,	//0x0fcc		VoC_push32(REG23,DEFAULT)	|	VoC_push32(REG01,DEFAULT)
0xDF43DF42,	//0x0fce		VoC_push32(REG67,DEFAULT)	|	VoC_push32(REG45,DEFAULT)
0x0A80E022,	//0x0fd0		VoC_lw16i(REG0,0x7fff)(lo)	|	VoC_movreg16(REG2,REG1,DEFAULT)
0xFFC07FFF,	//0x0fd2		VoC_NAD	|	VoC_lw16i(REG0,0x7fff)(hi)
0x16B02B80,	//0x0fd4		VoC_jal(result_check16)
0x0FD92F00,	//0x0fd6		VoC_bnoe0z16_r(LABEL_OVF8)
0xFFC0DE00,	//0x0fd8		VoC_NOP	|	VoC_inc_p(REG0,DEFAULT)
		//0x0fd9		LABEL_OVF8
0xDF41DF40,	//0x0fda		VoC_push32(REG23,DEFAULT)	|	VoC_push32(REG01,DEFAULT)
0xDF43DF42,	//0x0fdc		VoC_push32(REG67,DEFAULT)	|	VoC_push32(REG45,DEFAULT)
0x0A80E002,	//0x0fde		VoC_lw16i(REG0,0x4)(lo)	|	VoC_movreg16(REG2,REG0,DEFAULT)
0xFFC00004,	//0x0fe0		VoC_NAD	|	VoC_lw16i(REG0,0x4)(hi)
0x16B02B80,	//0x0fe2		VoC_jal(result_check16)
0x00010A96,	//0x0fe4		VoC_lw16i(STATUS,0x1)
0x00010AC1,	//0x0fe6		VoC_lw16i(REG1,0x8001)
0xFFC0F8F9,	//0x0fe8		VoC_NOP	|	VoC_shr16_ri(REG1,0xffffffff,DEFAULT)
0xDF41DF40,	//0x0fea		VoC_push32(REG23,DEFAULT)	|	VoC_push32(REG01,DEFAULT)
0xDF43DF42,	//0x0fec		VoC_push32(REG67,DEFAULT)	|	VoC_push32(REG45,DEFAULT)
0x0AC0E022,	//0x0fee		VoC_lw16i(REG0,0x8000)(lo)	|	VoC_movreg16(REG2,REG1,DEFAULT)
0xFFC00000,	//0x0ff0		VoC_NAD	|	VoC_lw16i(REG0,0x8000)(hi)
0x16B02B80,	//0x0ff2		VoC_jal(result_check16)
0x0FF72F00,	//0x0ff4		VoC_bnoe0z16_r(LABEL_OVF9)
0xFFC0DE00,	//0x0ff6		VoC_NOP	|	VoC_inc_p(REG0,DEFAULT)
		//0x0ff7		LABEL_OVF9
0xDF41DF40,	//0x0ff8		VoC_push32(REG23,DEFAULT)	|	VoC_push32(REG01,DEFAULT)
0xDF43DF42,	//0x0ffa		VoC_push32(REG67,DEFAULT)	|	VoC_push32(REG45,DEFAULT)
0x0A80E002,	//0x0ffc		VoC_lw16i(REG0,0x4)(lo)	|	VoC_movreg16(REG2,REG0,DEFAULT)
0xFFC00004,	//0x0ffe		VoC_NAD	|	VoC_lw16i(REG0,0x4)(hi)
0x16B02B80,	//0x1000		VoC_jal(result_check16)
0x00010A96,	//0x1002		VoC_lw16i(STATUS,0x1)
0x00000A82,	//0x1004		VoC_lw16i(REG2,0x0)
0x00010AC3,	//0x1006		VoC_lw16i(REG3,0x8001)
0xFFC0FBF9,	//0x1008		VoC_NOP	|	VoC_shr32_ri(REG23,0xffffffff,DEFAULT)
0xDF41DF40,	//0x100a		VoC_push32(REG23,DEFAULT)	|	VoC_push32(REG01,DEFAULT)
0xDF43DF42,	//0x100c		VoC_push32(REG67,DEFAULT)	|	VoC_push32(REG45,DEFAULT)
0x00000A80,	//0x100e		VoC_lw16i(REG0,0x0)
0x00000AC1,	//0x1010		VoC_lw16i(REG1,0x8000)
0x16B02B80,	//0x1012		VoC_jal(result_check16)
0x10172F00,	//0x1014		VoC_bnoe0z16_r(LABEL_OVF10)
0xFFC0DE00,	//0x1016		VoC_NOP	|	VoC_inc_p(REG0,DEFAULT)
		//0x1017		LABEL_OVF10
0xDF41DF40,	//0x1018		VoC_push32(REG23,DEFAULT)	|	VoC_push32(REG01,DEFAULT)
0xDF43DF42,	//0x101a		VoC_push32(REG67,DEFAULT)	|	VoC_push32(REG45,DEFAULT)
0x0A80E002,	//0x101c		VoC_lw16i(REG0,0x4)(lo)	|	VoC_movreg16(REG2,REG0,DEFAULT)
0x2B800004,	//0x101e		VoC_jal(result_check16)(lo)	|	VoC_lw16i(REG0,0x4)(hi)
0xDE0016B0,	//0x1020		VoC_inc_p(REG0,DEFAULT)	|	VoC_jal(result_check16)(hi)
0x00410A96,	//0x1022		VoC_lw16i(STATUS,0x41)
0x10282E80,	//0x1024		VoC_boe0z16_r(LABEL_BOE0Z16_R2)
0x00B31500,	//0x1026		VoC_sw16_d(REG0,0xb3)
		//0x1028		LABEL_BOE0Z16_R2
0xDF40DE00,	//0x1028		VoC_push32(REG01,DEFAULT)	|	VoC_inc_p(REG0,DEFAULT)
0xDF42DF41,	//0x102a		VoC_push32(REG45,DEFAULT)	|	VoC_push32(REG23,DEFAULT)
0xE002DF43,	//0x102c		VoC_movreg16(REG2,REG0,DEFAULT)	|	VoC_push32(REG67,DEFAULT)
0x00060A80,	//0x102e		VoC_lw16i(REG0,0x6)
0x16B02B80,	//0x1030		VoC_jal(result_check16)
0x00B31400,	//0x1032		VoC_lw16_d(REG0,0xb3)
0xDF40FFC0,	//0x1034		VoC_push32(REG01,DEFAULT)	|	VoC_NOP
0xDF42DF41,	//0x1036		VoC_push32(REG45,DEFAULT)	|	VoC_push32(REG23,DEFAULT)
0xE002DF43,	//0x1038		VoC_movreg16(REG2,REG0,DEFAULT)	|	VoC_push32(REG67,DEFAULT)
0x00050A80,	//0x103a		VoC_lw16i(REG0,0x5)
0x16B02B80,	//0x103c		VoC_jal(result_check16)
0x0A96DE00,	//0x103e		VoC_lw16i(STATUS,0x1)(lo)	|	VoC_inc_p(REG0,DEFAULT)
0x2E800001,	//0x1040		VoC_boe0z16_r(LABEL_BOE0Z16_R3)(lo)	|	VoC_lw16i(STATUS,0x1)(hi)
0x1500104C,	//0x1042		VoC_sw16_d(REG0,0xb3)(lo)	|	VoC_boe0z16_r(LABEL_BOE0Z16_R3)(hi)
0x0AC000B3,	//0x1044		VoC_lw16i(REG0,0xbad0)(lo)	|	VoC_sw16_d(REG0,0xb3)(hi)
0x0AC13AD0,	//0x1046		VoC_lw16i(REG1,0xbad0)(lo)	|	VoC_lw16i(REG0,0xbad0)(hi)
0x17923AD0,	//0x1048		VoC_cfg_lg(0x0,)(lo)	|	VoC_lw16i(REG1,0xbad0)(hi)
0xDE940000,	//0x104a		VoC_cfg(0x14)	|	VoC_cfg_lg(0x0,)(hi)
		//0x104c		LABEL_BOE0Z16_R3
0xFFC0DE00,	//0x104c		VoC_NOP	|	VoC_inc_p(REG0,DEFAULT)
0xDF41DF40,	//0x104e		VoC_push32(REG23,DEFAULT)	|	VoC_push32(REG01,DEFAULT)
0xDF43DF42,	//0x1050		VoC_push32(REG67,DEFAULT)	|	VoC_push32(REG45,DEFAULT)
0x0A80E002,	//0x1052		VoC_lw16i(REG0,0x7)(lo)	|	VoC_movreg16(REG2,REG0,DEFAULT)
0xFFC00007,	//0x1054		VoC_NAD	|	VoC_lw16i(REG0,0x7)(hi)
0x16B02B80,	//0x1056		VoC_jal(result_check16)
0x00B31400,	//0x1058		VoC_lw16_d(REG0,0xb3)
0xDF40FFC0,	//0x105a		VoC_push32(REG01,DEFAULT)	|	VoC_NOP
0xDF42DF41,	//0x105c		VoC_push32(REG45,DEFAULT)	|	VoC_push32(REG23,DEFAULT)
0xE002DF43,	//0x105e		VoC_movreg16(REG2,REG0,DEFAULT)	|	VoC_push32(REG67,DEFAULT)
0x00050A80,	//0x1060		VoC_lw16i(REG0,0x5)
0x16B02B80,	//0x1062		VoC_jal(result_check16)
0x0A81FF40,	//0x1064		VoC_lw16i(REG1,0x1)(lo)	|	VoC_lw32z(REG01,DEFAULT)
0xDE000001,	//0x1066		VoC_inc_p(REG0,DEFAULT)	|	VoC_lw16i(REG1,0x1)(hi)
0x00410A96,	//0x1068		VoC_lw16i(STATUS,0x41)
0x106D2E80,	//0x106a		VoC_boe0z16_r(LABEL_BOE0Z16_R4)
0xFFC0CE01,	//0x106c		VoC_NOP	|	VoC_mac32_rr(REG0,REG1,DEFAULT)
		//0x106d		LABEL_BOE0Z16_R4
0xDF41DF40,	//0x106e		VoC_push32(REG23,DEFAULT)	|	VoC_push32(REG01,DEFAULT)
0xDF43DF42,	//0x1070		VoC_push32(REG67,DEFAULT)	|	VoC_push32(REG45,DEFAULT)
0x0A80FF21,	//0x1072		VoC_lw16i(REG0,0x2)(lo)	|	VoC_movreg32(REG23,ACC0,DEFAULT)
0x0A810002,	//0x1074		VoC_lw16i(REG1,0x0)(lo)	|	VoC_lw16i(REG0,0x2)(hi)
0x2B800000,	//0x1076		VoC_jal(result_check32)(lo)	|	VoC_lw16i(REG1,0x0)(hi)
0xDE00168C,	//0x1078		VoC_inc_p(REG0,DEFAULT)	|	VoC_jal(result_check32)(hi)
0x00010A96,	//0x107a		VoC_lw16i(STATUS,0x1)
0x107F2E80,	//0x107c		VoC_boe0z16_r(LABEL_BOE0Z16_R5)
0xFFC0CE01,	//0x107e		VoC_NOP	|	VoC_mac32_rr(REG0,REG1,DEFAULT)
		//0x107f		LABEL_BOE0Z16_R5
0xDF41DF40,	//0x1080		VoC_push32(REG23,DEFAULT)	|	VoC_push32(REG01,DEFAULT)
0xDF43DF42,	//0x1082		VoC_push32(REG67,DEFAULT)	|	VoC_push32(REG45,DEFAULT)
0x0A80FF21,	//0x1084		VoC_lw16i(REG0,0x2)(lo)	|	VoC_movreg32(REG23,ACC0,DEFAULT)
0x0A810002,	//0x1086		VoC_lw16i(REG1,0x0)(lo)	|	VoC_lw16i(REG0,0x2)(hi)
0xFFC00000,	//0x1088		VoC_NAD	|	VoC_lw16i(REG1,0x0)(hi)
0x168C2B80,	//0x108a		VoC_jal(result_check32)
0x7FFF0A87,	//0x108c		VoC_lw16i(REG7,0x7fff)
0x00020A86,	//0x108e		VoC_lw16i(REG6,0x2)
0xC1BE41F7,	//0x1090		VoC_add16_rr(REG6,REG6,REG7,IN_PARALLEL)	|	VoC_add16_rr(REG7,REG7,REG6,DEFAULT)
0x00000A86,	//0x1092		VoC_lw16i(REG6,0x0)
0x00010A87,	//0x1094		VoC_lw16i(REG7,0x1)
0x00000A80,	//0x1096		VoC_lw16i(REG0,0x0)
0x40000A81,	//0x1098		VoC_lw16i(REG1,0x4000)
0xF0057030,	//0x109a		VoC_lw16i_short(INC1,0x1,IN_PARALLEL)	|	VoC_lw16i_short(INC0,0x1,DEFAULT)
0x10A12CC8,	//0x109c		VoC_loop_i(0x0,0x64)
0x5C96DC86,	//0x109e		VoC_sw16inc_p(REG6,REG1,DEFAULT)	|	VoC_sw16inc_p(REG6,REG0,DEFAULT)
0xFFC0C1BE,	//0x10a0		VoC_NOP	|	VoC_add16_rr(REG6,REG6,REG7,IN_PARALLEL)
		//0x10a1		VoC_endloop0
0x00010A80,	//0x10a2		VoC_lw16i(REG0,0x1)
0x00020A81,	//0x10a4		VoC_lw16i(REG1,0x2)
0x40610A82,	//0x10a6		VoC_lw16i(REG2,0x4061)
0x40600A83,	//0x10a8		VoC_lw16i(REG3,0x4060)
0xF0097050,	//0x10aa		VoC_lw16i_short(INC1,0x2,IN_PARALLEL)	|	VoC_lw16i_short(INC0,0x2,DEFAULT)
0xF3FB77D2,	//0x10ac		VoC_lw16i_short(INC3,0xfffffffe,IN_PARALLEL)	|	VoC_lw16i_short(INC2,0xfffffffe,DEFAULT)
0xE212E200,	//0x10ae		VoC_aligninc_pp(REG2,REG2,DEFAULT)	|	VoC_aligninc_pp(REG0,REG0,DEFAULT)
0x00020A84,	//0x10b0		VoC_lw16i(REG4,0x2)
0x00000A85,	//0x10b2		VoC_lw16i(REG5,0x0)
0x10B92C28,	//0x10b4		VoC_loop_i(0x0,0x14)
0xD221D220,	//0x10b6		VoC_bimac32inc_rp(REG45,REG1)	|	VoC_bimac32inc_rp(REG45,REG0)
0xD223D222,	//0x10b8		VoC_bimac32inc_rp(REG45,REG3)	|	VoC_bimac32inc_rp(REG45,REG2)
		//0x10b9		VoC_endloop0
0xDF40FFC0,	//0x10ba		VoC_push32(REG01,DEFAULT)	|	VoC_NOP
0xDF42DF41,	//0x10bc		VoC_push32(REG45,DEFAULT)	|	VoC_push32(REG23,DEFAULT)
0xFF21DF43,	//0x10be		VoC_movreg32(REG23,ACC0,DEFAULT)	|	VoC_push32(REG67,DEFAULT)
0x3D420A80,	//0x10c0		VoC_lw16i(REG0,0x3d42)
0x00000A81,	//0x10c2		VoC_lw16i(REG1,0x0)
0x168C2B80,	//0x10c4		VoC_jal(result_check32)
0x10CA2E80,	//0x10c6		VoC_boe0z16_r(LABEL_OVF_RESTE0)
0xFFC05E00,	//0x10c8		VoC_NAD(IN_PARALLEL)	|	VoC_inc_p(REG0,DEFAULT)
		//0x10ca		LABEL_OVF_RESTE0
0x10CD2F80,	//0x10ca		VoC_boe1z16_r(LABEL_OVF_RESTE1)
0xFFC0DE08,	//0x10cc		VoC_NOP	|	VoC_inc_p(REG1,DEFAULT)
		//0x10cd		LABEL_OVF_RESTE1
0xDF41DF40,	//0x10ce		VoC_push32(REG23,DEFAULT)	|	VoC_push32(REG01,DEFAULT)
0xDF43DF42,	//0x10d0		VoC_push32(REG67,DEFAULT)	|	VoC_push32(REG45,DEFAULT)
0x0A80FF01,	//0x10d2		VoC_lw16i(REG0,0x2d)(lo)	|	VoC_movreg32(REG23,REG01,DEFAULT)
0x0A81002D,	//0x10d4		VoC_lw16i(REG1,0x2c)(lo)	|	VoC_lw16i(REG0,0x2d)(hi)
0xFFC0002C,	//0x10d6		VoC_NAD	|	VoC_lw16i(REG1,0x2c)(hi)
0x168C2B80,	//0x10d8		VoC_jal(result_check32)
0x00000A86,	//0x10da		VoC_lw16i(REG6,0x0)
0x00440A96,	//0x10dc		VoC_lw16i(STATUS,0x44)
0x00000A80,	//0x10de		VoC_lw16i(REG0,0x0)
0x40000A81,	//0x10e0		VoC_lw16i(REG1,0x4000)
0x10E62C28,	//0x10e2		VoC_loop_i(0x0,0x14)
0xFFC0AA0F,	//0x10e4		VoC_NOP	|	VoC_mult16inc_pp(REG7,REG0,REG1,DEFAULT)
		//0x10e6		VoC_endloop0
0x3080C1BE,	//0x10e6		VoC_bcz16_r(LABEL_CARRY_RESTE0)(lo)	|	VoC_add16_rr(REG6,REG6,REG7,DEFAULT)
0xDE0010EA,	//0x10e8		VoC_inc_p(REG0,DEFAULT)	|	VoC_bcz16_r(LABEL_CARRY_RESTE0)(hi)
		//0x10ea		LABEL_CARRY_RESTE0
0xFFC0E0C1,	//0x10ea		VoC_NOP	|	VoC_movreg16(REG1,REG6,DEFAULT)
0xDF41DF40,	//0x10ec		VoC_push32(REG23,DEFAULT)	|	VoC_push32(REG01,DEFAULT)
0xDF43DF42,	//0x10ee		VoC_push32(REG67,DEFAULT)	|	VoC_push32(REG45,DEFAULT)
0x0A80FF01,	//0x10f0		VoC_lw16i(REG0,0x2a)(lo)	|	VoC_movreg32(REG23,REG01,DEFAULT)
0x0A81002A,	//0x10f2		VoC_lw16i(REG1,0x2698)(lo)	|	VoC_lw16i(REG0,0x2a)(hi)
0xFFC02698,	//0x10f4		VoC_NAD	|	VoC_lw16i(REG1,0x2698)(hi)
0x168C2B80,	//0x10f6		VoC_jal(result_check32)
0x402A0A81,	//0x10f8		VoC_lw16i(REG1,0x402a)
0x0A96FFC0,	//0x10fa		VoC_lw16i(STATUS,0x48)(lo)	|	VoC_NOP
0xB0080048,	//0x10fc		VoC_add32_pp(REG01,REG0,REG1,DEFAULT)	|	VoC_lw16i(STATUS,0x48)(hi)
0x00080A96,	//0x10fe		VoC_lw16i(STATUS,0x8)
0x11033080,	//0x1100		VoC_bcz16_r(LABEL_CARRY_RESTE1)
0xFFC0DE00,	//0x1102		VoC_NOP	|	VoC_inc_p(REG0,DEFAULT)
		//0x1103		LABEL_CARRY_RESTE1
0xDF41DF40,	//0x1104		VoC_push32(REG23,DEFAULT)	|	VoC_push32(REG01,DEFAULT)
0xDF43DF42,	//0x1106		VoC_push32(REG67,DEFAULT)	|	VoC_push32(REG45,DEFAULT)
0x0A80FF01,	//0x1108		VoC_lw16i(REG0,0x55)(lo)	|	VoC_movreg32(REG23,REG01,DEFAULT)
0x0A810055,	//0x110a		VoC_lw16i(REG1,0x56)(lo)	|	VoC_lw16i(REG0,0x55)(hi)
0xFFC00056,	//0x110c		VoC_NAD	|	VoC_lw16i(REG1,0x56)(hi)
0x168C2B80,	//0x110e		VoC_jal(result_check32)
0x7FFF0A80,	//0x1110		VoC_lw16i(REG0,0x7fff)
0x00020A81,	//0x1112		VoC_lw16i(REG1,0x2)
0x00010A96,	//0x1114		VoC_lw16i(STATUS,0x1)
0x00020A96,	//0x1116		VoC_lw16i(STATUS,0x2)
0x00040A96,	//0x1118		VoC_lw16i(STATUS,0x4)
0xC0087007,	//0x111a		VoC_add16_rr(REG0,REG0,REG1,IN_PARALLEL)	|	VoC_lw16i_short(REG7,0x0,DEFAULT)
0xDE087007,	//0x111c		VoC_inc_p(REG1,IN_PARALLEL)	|	VoC_lw16i_short(REG7,0x0,DEFAULT)
0xDF407007,	//0x111e		VoC_push32(REG01,IN_PARALLEL)	|	VoC_lw16i_short(REG7,0x0,DEFAULT)
0xDF007007,	//0x1120		VoC_pop32(REG01,IN_PARALLEL)	|	VoC_lw16i_short(REG7,0x0,DEFAULT)
0x7007FFC0,	//0x1122		VoC_lw16i_short(REG7,0x0,DEFAULT)	|	VoC_NOP
0x7007DFC0,	//0x1124		VoC_lw16i_short(REG7,0x0,DEFAULT)	|	VoC_push16(REG0,IN_PARALLEL)
0x7007DFC1,	//0x1126		VoC_lw16i_short(REG7,0x0,DEFAULT)	|	VoC_push16(REG1,IN_PARALLEL)
0x7007DF81,	//0x1128		VoC_lw16i_short(REG7,0x0,DEFAULT)	|	VoC_pop16(REG1,IN_PARALLEL)
0xFFC0DF80,	//0x112a		VoC_NOP	|	VoC_pop16(REG0,IN_PARALLEL)
0xDF41DF40,	//0x112c		VoC_push32(REG23,DEFAULT)	|	VoC_push32(REG01,DEFAULT)
0xDF43DF42,	//0x112e		VoC_push32(REG67,DEFAULT)	|	VoC_push32(REG45,DEFAULT)
0x0A80FF01,	//0x1130		VoC_lw16i(REG0,0x7fff)(lo)	|	VoC_movreg32(REG23,REG01,DEFAULT)
0x0A817FFF,	//0x1132		VoC_lw16i(REG1,0x4)(lo)	|	VoC_lw16i(REG0,0x7fff)(hi)
0xFFC00004,	//0x1134		VoC_NAD	|	VoC_lw16i(REG1,0x4)(hi)
0x168C2B80,	//0x1136		VoC_jal(result_check32)
0x00010A96,	//0x1138		VoC_lw16i(STATUS,0x1)
0xE05168A6,	//0x113a		VoC_lw16i_short(REG1,0x5,IN_PARALLEL)	|	VoC_loop_i_short(0x5,DEFAULT)
0xC0497007,	//0x113c		VoC_add16_rr(REG1,REG1,REG1,IN_PARALLEL)	|	VoC_lw16i_short(REG7,0x0,DEFAULT)
0xE0227007,	//0x113e		VoC_lw16i_short(REG2,0x2,IN_PARALLEL)	|	VoC_lw16i_short(REG7,0x0,DEFAULT)
		//0x1140		VoC_endloop0
0xCE0A7007,	//0x1140		VoC_mac32_rr(REG1,REG2,IN_PARALLEL)	|	VoC_lw16i_short(REG7,0x0,DEFAULT)
0xDF40FFC0,	//0x1142		VoC_push32(REG01,DEFAULT)	|	VoC_NOP
0xDF42DF41,	//0x1144		VoC_push32(REG45,DEFAULT)	|	VoC_push32(REG23,DEFAULT)
0xFF29DF43,	//0x1146		VoC_movreg32(REG23,ACC1,DEFAULT)	|	VoC_push32(REG67,DEFAULT)
0x04DA0A80,	//0x1148		VoC_lw16i(REG0,0x4da)
0x00020A81,	//0x114a		VoC_lw16i(REG1,0x2)
0x168C2B80,	//0x114c		VoC_jal(result_check32)
0x00000A80,	//0x114e		VoC_lw16i(REG0,0x0)
0x11542E80,	//0x1150		VoC_boe0z16_r(LABEL_OVF_RESTE3)
0xFFC05E00,	//0x1152		VoC_NAD(IN_PARALLEL)	|	VoC_inc_p(REG0,DEFAULT)
		//0x1154		LABEL_OVF_RESTE3
0x11572F80,	//0x1154		VoC_boe1z16_r(LABEL_OVF_RESTE4)
0xFFC0DE08,	//0x1156		VoC_NOP	|	VoC_inc_p(REG1,DEFAULT)
		//0x1157		LABEL_OVF_RESTE4
0xDF41DF40,	//0x1158		VoC_push32(REG23,DEFAULT)	|	VoC_push32(REG01,DEFAULT)
0xDF43DF42,	//0x115a		VoC_push32(REG67,DEFAULT)	|	VoC_push32(REG45,DEFAULT)
0x0A80FF01,	//0x115c		VoC_lw16i(REG0,0x0)(lo)	|	VoC_movreg32(REG23,REG01,DEFAULT)
0x0A810000,	//0x115e		VoC_lw16i(REG1,0xa2)(lo)	|	VoC_lw16i(REG0,0x0)(hi)
0xFFC000A2,	//0x1160		VoC_NAD	|	VoC_lw16i(REG1,0xa2)(hi)
0x168C2B80,	//0x1162		VoC_jal(result_check32)
0x00020A96,	//0x1164		VoC_lw16i(STATUS,0x2)
0x7FFF0A81,	//0x1166		VoC_lw16i(REG1,0x7fff)
0x7FFF0A82,	//0x1168		VoC_lw16i(REG2,0x7fff)
0xCE0A7007,	//0x116a		VoC_mac32_rr(REG1,REG2,IN_PARALLEL)	|	VoC_lw16i_short(REG7,0x0,DEFAULT)
0x116F2F80,	//0x116c		VoC_boe1z16_r(LABEL_OVF_RESTE5)
0xFFC0DE00,	//0x116e		VoC_NOP	|	VoC_inc_p(REG0,DEFAULT)
		//0x116f		LABEL_OVF_RESTE5
0xDF41DF40,	//0x1170		VoC_push32(REG23,DEFAULT)	|	VoC_push32(REG01,DEFAULT)
0xDF43DF42,	//0x1172		VoC_push32(REG67,DEFAULT)	|	VoC_push32(REG45,DEFAULT)
0x0A80FF01,	//0x1174		VoC_lw16i(REG0,0x0)(lo)	|	VoC_movreg32(REG23,REG01,DEFAULT)
0x0A810000,	//0x1176		VoC_lw16i(REG1,0x7fff)(lo)	|	VoC_lw16i(REG0,0x0)(hi)
0xFFC07FFF,	//0x1178		VoC_NAD	|	VoC_lw16i(REG1,0x7fff)(hi)
0x168C2B80,	//0x117a		VoC_jal(result_check32)
0x00020A96,	//0x117c		VoC_lw16i(STATUS,0x2)
0x00200A80,	//0x117e		VoC_lw16i(REG0,0x20)
0x00100A81,	//0x1180		VoC_lw16i(REG1,0x10)
0xF8187067,	//0x1182		VoC_shr16_ri(REG0,0x3,IN_PARALLEL)	|	VoC_lw16i_short(REG7,0x3,DEFAULT)
0xF8197067,	//0x1184		VoC_shr16_ri(REG1,0x3,IN_PARALLEL)	|	VoC_lw16i_short(REG7,0x3,DEFAULT)
0xFB807067,	//0x1186		VoC_shr32_ri(REG01,0xfffffff0,IN_PARALLEL)	|	VoC_lw16i_short(REG7,0x3,DEFAULT)
0xFEB87067,	//0x1188		VoC_shr32_rr(REG01,REG7,IN_PARALLEL)	|	VoC_lw16i_short(REG7,0x3,DEFAULT)
0xDF40FFC0,	//0x118a		VoC_push32(REG01,DEFAULT)	|	VoC_NOP
0xDF42DF41,	//0x118c		VoC_push32(REG45,DEFAULT)	|	VoC_push32(REG23,DEFAULT)
0xFF01DF43,	//0x118e		VoC_movreg32(REG23,REG01,DEFAULT)	|	VoC_push32(REG67,DEFAULT)
0x7FFF0AC0,	//0x1190		VoC_lw16i(REG0,0xffff)
0x0FFF0A81,	//0x1192		VoC_lw16i(REG1,0xfff)
0x168C2B80,	//0x1194		VoC_jal(result_check32)
0xFB807067,	//0x1196		VoC_shr32_ri(REG01,0xfffffff0,IN_PARALLEL)	|	VoC_lw16i_short(REG7,0x3,DEFAULT)
0x00020A96,	//0x1198		VoC_lw16i(STATUS,0x2)
0x00010A80,	//0x119a		VoC_lw16i(REG0,0x1)
0x5E00FFC0,	//0x119c		VoC_inc_p(REG0,DEFAULT)	|	VoC_NOP
0x2F80DE08,	//0x119e		VoC_boe1z16_r(LABEL_OVF_RESTE7)(lo)	|	VoC_inc_p(REG1,IN_PARALLEL)
0x5E0011A3,	//0x11a0		VoC_inc_p(REG0,DEFAULT)	|	VoC_boe1z16_r(LABEL_OVF_RESTE7)(hi)
0xFFC0DE08,	//0x11a2		VoC_NOP	|	VoC_inc_p(REG1,IN_PARALLEL)
		//0x11a3		LABEL_OVF_RESTE7
0xDF41DF40,	//0x11a4		VoC_push32(REG23,DEFAULT)	|	VoC_push32(REG01,DEFAULT)
0xDF43DF42,	//0x11a6		VoC_push32(REG67,DEFAULT)	|	VoC_push32(REG45,DEFAULT)
0x0A80FF01,	//0x11a8		VoC_lw16i(REG0,0x3)(lo)	|	VoC_movreg32(REG23,REG01,DEFAULT)
0x0AC10003,	//0x11aa		VoC_lw16i(REG1,0x8001)(lo)	|	VoC_lw16i(REG0,0x3)(hi)
0xFFC00001,	//0x11ac		VoC_NAD	|	VoC_lw16i(REG1,0x8001)(hi)
0x168C2B80,	//0x11ae		VoC_jal(result_check32)
0xE0217040,	//0x11b0		VoC_lw16i_short(REG1,0x2,IN_PARALLEL)	|	VoC_lw16i_short(REG0,0x2,DEFAULT)
0x00480A96,	//0x11b2		VoC_lw16i(STATUS,0x48)
0x00440A96,	//0x11b4		VoC_lw16i(STATUS,0x44)
0x11B82C0A,	//0x11b6		VoC_loop_i(0x0,0x5)
		//0x11b8		VoC_endloop0
0xCE017007,	//0x11b8		VoC_mac32_rr(REG0,REG1,IN_PARALLEL)	|	VoC_lw16i_short(REG7,0x0,DEFAULT)
0x00080A96,	//0x11ba		VoC_lw16i(STATUS,0x8)
0xDF40FFC0,	//0x11bc		VoC_push32(REG01,DEFAULT)	|	VoC_NOP
0xDF42DF41,	//0x11be		VoC_push32(REG45,DEFAULT)	|	VoC_push32(REG23,DEFAULT)
0xFF29DF43,	//0x11c0		VoC_movreg32(REG23,ACC1,DEFAULT)	|	VoC_push32(REG67,DEFAULT)
0x7FFF0AC0,	//0x11c2		VoC_lw16i(REG0,0xffff)
0x7FFF0A81,	//0x11c4		VoC_lw16i(REG1,0x7fff)
0x168C2B80,	//0x11c6		VoC_jal(result_check32)
0x00030A80,	//0x11c8		VoC_lw16i(REG0,0x3)
0x00030A81,	//0x11ca		VoC_lw16i(REG1,0x3)
0x00030A82,	//0x11cc		VoC_lw16i(REG2,0x3)
0x00030A83,	//0x11ce		VoC_lw16i(REG3,0x3)
0x00480A96,	//0x11d0		VoC_lw16i(STATUS,0x48)
0x00040A96,	//0x11d2		VoC_lw16i(STATUS,0x4)
0x11D83701,	//0x11d4		VoC_be32_rr(LABEL_TEST_BECARRY,REG01,REG23)
0xFFC05E00,	//0x11d6		VoC_NAD(IN_PARALLEL)	|	VoC_inc_p(REG0,DEFAULT)
		//0x11d8		LABEL_TEST_BECARRY
0x00080A96,	//0x11d8		VoC_lw16i(STATUS,0x8)
0xDF40FFC0,	//0x11da		VoC_push32(REG01,DEFAULT)	|	VoC_NOP
0xDF42DF41,	//0x11dc		VoC_push32(REG45,DEFAULT)	|	VoC_push32(REG23,DEFAULT)
0xFF01DF43,	//0x11de		VoC_movreg32(REG23,REG01,DEFAULT)	|	VoC_push32(REG67,DEFAULT)
0x00030A80,	//0x11e0		VoC_lw16i(REG0,0x3)
0x00030A81,	//0x11e2		VoC_lw16i(REG1,0x3)
0x168C2B80,	//0x11e4		VoC_jal(result_check32)
0x7FFF0AC0,	//0x11e6		VoC_lw16i(REG0,0xffff)
0x7FFF0AC1,	//0x11e8		VoC_lw16i(REG1,0xffff)
0xFA787007,	//0x11ea		VoC_shr32_ri(REG01,0xf,IN_PARALLEL)	|	VoC_lw16i_short(REG7,0x0,DEFAULT)
0xDF40FFC0,	//0x11ec		VoC_push32(REG01,DEFAULT)	|	VoC_NOP
0xDF42DF41,	//0x11ee		VoC_push32(REG45,DEFAULT)	|	VoC_push32(REG23,DEFAULT)
0xFF01DF43,	//0x11f0		VoC_movreg32(REG23,REG01,DEFAULT)	|	VoC_push32(REG67,DEFAULT)
0x7FFF0AC0,	//0x11f2		VoC_lw16i(REG0,0xffff)
0x7FFF0AC1,	//0x11f4		VoC_lw16i(REG1,0xffff)
0x168C2B80,	//0x11f6		VoC_jal(result_check32)
0x00000A81,	//0x11f8		VoC_lw16i(REG1,0x0)
0x00010A80,	//0x11fa		VoC_lw16i(REG0,0x1)
0x0A96FF41,	//0x11fc		VoC_lw16i(STATUS,0x48)(lo)	|	VoC_lw32z(REG23,DEFAULT)
0x0A960048,	//0x11fe		VoC_lw16i(STATUS,0x44)(lo)	|	VoC_lw16i(STATUS,0x48)(hi)
0xCA400044,	//0x1200		VoC_sub32_rr(REG01,REG23,REG01,DEFAULT)	|	VoC_lw16i(STATUS,0x44)(hi)
0x00080A96,	//0x1202		VoC_lw16i(STATUS,0x8)
0x12073080,	//0x1204		VoC_bcz16_r(CARRY_1)
0xFFC0DE08,	//0x1206		VoC_NOP	|	VoC_inc_p(REG1,DEFAULT)
		//0x1207		CARRY_1
0xDF41DF40,	//0x1208		VoC_push32(REG23,DEFAULT)	|	VoC_push32(REG01,DEFAULT)
0xDF43DF42,	//0x120a		VoC_push32(REG67,DEFAULT)	|	VoC_push32(REG45,DEFAULT)
0x0AC0FF01,	//0x120c		VoC_lw16i(REG0,0xffff)(lo)	|	VoC_movreg32(REG23,REG01,DEFAULT)
0x0AC17FFF,	//0x120e		VoC_lw16i(REG1,0xffff)(lo)	|	VoC_lw16i(REG0,0xffff)(hi)
0xFFC07FFF,	//0x1210		VoC_NAD	|	VoC_lw16i(REG1,0xffff)(hi)
0x168C2B80,	//0x1212		VoC_jal(result_check32)
0x00000A81,	//0x1214		VoC_lw16i(REG1,0x0)
0x00000A80,	//0x1216		VoC_lw16i(REG0,0x0)
0x0A96FF41,	//0x1218		VoC_lw16i(STATUS,0x48)(lo)	|	VoC_lw32z(REG23,DEFAULT)
0x0A960048,	//0x121a		VoC_lw16i(STATUS,0x44)(lo)	|	VoC_lw16i(STATUS,0x48)(hi)
0xCA400044,	//0x121c		VoC_sub32_rr(REG01,REG23,REG01,DEFAULT)	|	VoC_lw16i(STATUS,0x44)(hi)
0x00080A96,	//0x121e		VoC_lw16i(STATUS,0x8)
0x12233080,	//0x1220		VoC_bcz16_r(CARRY_2)
0xFFC0DE08,	//0x1222		VoC_NOP	|	VoC_inc_p(REG1,DEFAULT)
		//0x1223		CARRY_2
0xDF41DF40,	//0x1224		VoC_push32(REG23,DEFAULT)	|	VoC_push32(REG01,DEFAULT)
0xDF43DF42,	//0x1226		VoC_push32(REG67,DEFAULT)	|	VoC_push32(REG45,DEFAULT)
0x0A80FF01,	//0x1228		VoC_lw16i(REG0,0x0)(lo)	|	VoC_movreg32(REG23,REG01,DEFAULT)
0x0A810000,	//0x122a		VoC_lw16i(REG1,0x2)(lo)	|	VoC_lw16i(REG0,0x0)(hi)
0xFFC00002,	//0x122c		VoC_NAD	|	VoC_lw16i(REG1,0x2)(hi)
0x168C2B80,	//0x122e		VoC_jal(result_check32)
0x00030A80,	//0x1230		VoC_lw16i(REG0,0x3)
0x40020A81,	//0x1232		VoC_lw16i(REG1,0x4002)
0xF7D1F050,	//0x1234		VoC_lw16i_short(INC1,0xfffffffe,DEFAULT)	|	VoC_lw16i_short(INC0,0x2,DEFAULT)
0xC0526201,	//0x1236		VoC_add16_rr(REG2,REG1,REG2,IN_PARALLEL)	|	VoC_aligninc_pp(REG0,REG1,DEFAULT)
0x123A2C02,	//0x1238		VoC_loop_i(0x0,0x1)
		//0x123a		VoC_endloop0
0xFFC0FFC0,	//0x123a		VoC_NOP	|	VoC_NOP
0xDF41DF40,	//0x123c		VoC_push32(REG23,DEFAULT)	|	VoC_push32(REG01,DEFAULT)
0xDF43DF42,	//0x123e		VoC_push32(REG67,DEFAULT)	|	VoC_push32(REG45,DEFAULT)
0x0A80FF01,	//0x1240		VoC_lw16i(REG0,0x5)(lo)	|	VoC_movreg32(REG23,REG01,DEFAULT)
0x0A810005,	//0x1242		VoC_lw16i(REG1,0x4002)(lo)	|	VoC_lw16i(REG0,0x5)(hi)
0x2B804002,	//0x1244		VoC_jal(result_check32)(lo)	|	VoC_lw16i(REG1,0x4002)(hi)
0xFFC0168C,	//0x1246		VoC_NOP	|	VoC_jal(result_check32)(hi)
0xDF41DF40,	//0x1248		VoC_push32(REG23,DEFAULT)	|	VoC_push32(REG01,DEFAULT)
0xDF43DF42,	//0x124a		VoC_push32(REG67,DEFAULT)	|	VoC_push32(REG45,DEFAULT)
0x40020A80,	//0x124c		VoC_lw16i(REG0,0x4002)
0x00000A81,	//0x124e		VoC_lw16i(REG1,0x0)
0x168C2B80,	//0x1250		VoC_jal(result_check32)
0xF1FD7007,	//0x1252		VoC_lw16i_short(INC1,0x7f,IN_PARALLEL)	|	VoC_lw16i_short(REG7,0x0,DEFAULT)
0x820F820F,	//0x1254		VoC_add16inc_rp(REG7,REG0,REG1,DEFAULT)	|	VoC_add16inc_rp(REG7,REG0,REG1,DEFAULT)
0xDF40FFC0,	//0x1256		VoC_push32(REG01,DEFAULT)	|	VoC_NOP
0xDF42DF41,	//0x1258		VoC_push32(REG45,DEFAULT)	|	VoC_push32(REG23,DEFAULT)
0xFF01DF43,	//0x125a		VoC_movreg32(REG23,REG01,DEFAULT)	|	VoC_push32(REG67,DEFAULT)
0x00050A80,	//0x125c		VoC_lw16i(REG0,0x5)
0x407F0A81,	//0x125e		VoC_lw16i(REG1,0x407f)
0x168C2B80,	//0x1260		VoC_jal(result_check32)
0x00100A96,	//0x1262		VoC_lw16i(STATUS,0x10)
0xC642F5B8,	//0x1264		VoC_multf16_rr(REG2,REG1,REG0,DEFAULT)	|	VoC_lw16i_short(FORMAT16,0xffffffed,DEFAULT)
0x0A96FFC0,	//0x1266		VoC_lw16i(STATUS,0x50)(lo)	|	VoC_NOP
0xDF400050,	//0x1268		VoC_push32(REG01,DEFAULT)	|	VoC_lw16i(STATUS,0x50)(hi)
0xDF42DF41,	//0x126a		VoC_push32(REG45,DEFAULT)	|	VoC_push32(REG23,DEFAULT)
0x0A80DF43,	//0x126c		VoC_lw16i(REG0,0x7fff)(lo)	|	VoC_push32(REG67,DEFAULT)
0x0A817FFF,	//0x126e		VoC_lw16i(REG1,0x0)(lo)	|	VoC_lw16i(REG0,0x7fff)(hi)
0xFFC00000,	//0x1270		VoC_NAD	|	VoC_lw16i(REG1,0x0)(hi)
0x168C2B80,	//0x1272		VoC_jal(result_check32)
0x00030A81,	//0x1274		VoC_lw16i(REG1,0x3)
0x00010A82,	//0x1276		VoC_lw16i(REG2,0x1)
0x127D2C06,	//0x1278		VoC_loop_i(0x0,0x3)
0x3181C251,	//0x127a		VoC_bez16_r(LOOP_BRAN_1,REG1)(lo)	|	VoC_sub16_rr(REG1,REG1,REG2,DEFAULT)
0xFFC0127E,	//0x127c		VoC_NAD	|	VoC_bez16_r(LOOP_BRAN_1,REG1)(hi)
		//0x127d		VoC_endloop0
		//0x127e		LOOP_BRAN_1
0x12802C04,	//0x127e		VoC_loop_i(0x0,0x2)
		//0x1280		VoC_endloop0
0xFFC0C092,	//0x1280		VoC_NOP	|	VoC_add16_rr(REG2,REG2,REG2,DEFAULT)
0xDF41DF40,	//0x1282		VoC_push32(REG23,DEFAULT)	|	VoC_push32(REG01,DEFAULT)
0xDF43DF42,	//0x1284		VoC_push32(REG67,DEFAULT)	|	VoC_push32(REG45,DEFAULT)
0x00040A80,	//0x1286		VoC_lw16i(REG0,0x4)
0x00000A81,	//0x1288		VoC_lw16i(REG1,0x0)
0x168C2B80,	//0x128a		VoC_jal(result_check32)
0x128E2E10,	//0x128c		VoC_loop_r(0,REG2)
		//0x128e		VoC_endloop0
0xFFC0C092,	//0x128e		VoC_NOP	|	VoC_add16_rr(REG2,REG2,REG2,DEFAULT)
0xDF41DF40,	//0x1290		VoC_push32(REG23,DEFAULT)	|	VoC_push32(REG01,DEFAULT)
0xDF43DF42,	//0x1292		VoC_push32(REG67,DEFAULT)	|	VoC_push32(REG45,DEFAULT)
0x00400A80,	//0x1294		VoC_lw16i(REG0,0x40)
0x00000A81,	//0x1296		VoC_lw16i(REG1,0x0)
0x168C2B80,	//0x1298		VoC_jal(result_check32)
0x00020A81,	//0x129a		VoC_lw16i(REG1,0x2)
0xCC41F7B9,	//0x129c		VoC_multf32_rr(REG23,REG1,REG0,DEFAULT)	|	VoC_lw16i_short(FORMAT32,0xfffffffd,DEFAULT)
0xDF40FFC0,	//0x129e		VoC_push32(REG01,DEFAULT)	|	VoC_NOP
0xDF42DF41,	//0x12a0		VoC_push32(REG45,DEFAULT)	|	VoC_push32(REG23,DEFAULT)
0x0A80DF43,	//0x12a2		VoC_lw16i(REG0,0x50)(lo)	|	VoC_push32(REG67,DEFAULT)
0x0A810050,	//0x12a4		VoC_lw16i(REG1,0x0)(lo)	|	VoC_lw16i(REG0,0x50)(hi)
0x2B800000,	//0x12a6		VoC_jal(result_check32)(lo)	|	VoC_lw16i(REG1,0x0)(hi)
0x808A168C,	//0x12a8		VoC_add16_rp(REG2,REG2,REG1,DEFAULT)	|	VoC_jal(result_check32)(hi)
0x40011402,	//0x12aa		VoC_lw16_d(REG2,0x4001)
0xDF40FFC0,	//0x12ac		VoC_push32(REG01,DEFAULT)	|	VoC_NOP
0xDF42DF41,	//0x12ae		VoC_push32(REG45,DEFAULT)	|	VoC_push32(REG23,DEFAULT)
0x0A80DF43,	//0x12b0		VoC_lw16i(REG0,0x1)(lo)	|	VoC_push32(REG67,DEFAULT)
0x0A810001,	//0x12b2		VoC_lw16i(REG1,0x0)(lo)	|	VoC_lw16i(REG0,0x1)(hi)
0x2B800000,	//0x12b4		VoC_jal(result_check32)(lo)	|	VoC_lw16i(REG1,0x0)(hi)
0xDE08168C,	//0x12b6		VoC_inc_p(REG1,DEFAULT)	|	VoC_jal(result_check32)(hi)
0xFFC0D812,	//0x12b8		VoC_NOP	|	VoC_lw16_p(REG2,REG1,DEFAULT)
0xDF41DF40,	//0x12ba		VoC_push32(REG23,DEFAULT)	|	VoC_push32(REG01,DEFAULT)
0xDF43DF42,	//0x12bc		VoC_push32(REG67,DEFAULT)	|	VoC_push32(REG45,DEFAULT)
0x00810A80,	//0x12be		VoC_lw16i(REG0,0x81)
0x00000A81,	//0x12c0		VoC_lw16i(REG1,0x0)
0x168C2B80,	//0x12c2		VoC_jal(result_check32)
0x12CB2C02,	//0x12c4		VoC_loop_i(0x0,0x1)
0x12CA2C03,	//0x12c6		VoC_loop_i(0x1,0x1)
0x12CC31C1,	//0x12c8		VoC_bnez16_r(LOOP_BRAN_2,REG1)
		//0x12ca		VoC_endloop1
0xFFC0FFC0,	//0x12ca		VoC_NOP	|	VoC_NAD
		//0x12cb		VoC_endloop0
		//0x12cc		LOOP_BRAN_2
0x12D12C02,	//0x12cc		VoC_loop_i(0x0,0x1)
0x12D02C03,	//0x12ce		VoC_loop_i(0x1,0x1)
		//0x12d0		VoC_endloop1
0xFFC0C049,	//0x12d0		VoC_NOP	|	VoC_add16_rr(REG1,REG1,REG1,DEFAULT)
		//0x12d1		VoC_endloop0
0xDF40FFC0,	//0x12d2		VoC_push32(REG01,DEFAULT)	|	VoC_NOP
0xDF42DF41,	//0x12d4		VoC_push32(REG45,DEFAULT)	|	VoC_push32(REG23,DEFAULT)
0xE022DF43,	//0x12d6		VoC_movreg16(REG2,REG1,DEFAULT)	|	VoC_push32(REG67,DEFAULT)
0x01020A80,	//0x12d8		VoC_lw16i(REG0,0x102)
0x00000A81,	//0x12da		VoC_lw16i(REG1,0x0)
0x168C2B80,	//0x12dc		VoC_jal(result_check32)
0x00020A81,	//0x12de		VoC_lw16i(REG1,0x2)
0x00010A82,	//0x12e0		VoC_lw16i(REG2,0x1)
0x12E72C06,	//0x12e2		VoC_loop_i(0x0,0x3)
0x3181C251,	//0x12e4		VoC_bez16_r(LOOP_BRAN_5,REG1)(lo)	|	VoC_sub16_rr(REG1,REG1,REG2,DEFAULT)
0xFFC012E8,	//0x12e6		VoC_NAD	|	VoC_bez16_r(LOOP_BRAN_5,REG1)(hi)
		//0x12e7		VoC_endloop0
		//0x12e8		LOOP_BRAN_5
0x12EA2C06,	//0x12e8		VoC_loop_i(0x0,0x3)
		//0x12ea		VoC_endloop0
0xFFC0C092,	//0x12ea		VoC_NOP	|	VoC_add16_rr(REG2,REG2,REG2,DEFAULT)
0xDF41DF40,	//0x12ec		VoC_push32(REG23,DEFAULT)	|	VoC_push32(REG01,DEFAULT)
0xDF43DF42,	//0x12ee		VoC_push32(REG67,DEFAULT)	|	VoC_push32(REG45,DEFAULT)
0x00080A80,	//0x12f0		VoC_lw16i(REG0,0x8)
0x00000A81,	//0x12f2		VoC_lw16i(REG1,0x0)
0x168C2B80,	//0x12f4		VoC_jal(result_check32)
0x00020A87,	//0x12f6		VoC_lw16i(REG7,0x2)
0x00010A86,	//0x12f8		VoC_lw16i(REG6,0x1)
0x0A87FF1C,	//0x12fa		VoC_lw16i(REG7,0x4)(lo)	|	VoC_movreg32(ACC0,REG67,DEFAULT)
0x0A860004,	//0x12fc		VoC_lw16i(REG6,0x3)(lo)	|	VoC_lw16i(REG7,0x4)(hi)
0xFF1D0003,	//0x12fe		VoC_movreg32(ACC1,REG67,DEFAULT)	|	VoC_lw16i(REG6,0x3)(hi)
0x00060A87,	//0x1300		VoC_lw16i(REG7,0x6)
0x00050A86,	//0x1302		VoC_lw16i(REG6,0x5)
0x0A87FF1E,	//0x1304		VoC_lw16i(REG7,0x8)(lo)	|	VoC_movreg32(RL6,REG67,DEFAULT)
0x0A860008,	//0x1306		VoC_lw16i(REG6,0x7)(lo)	|	VoC_lw16i(REG7,0x8)(hi)
0xFF1F0007,	//0x1308		VoC_movreg32(RL7,REG67,DEFAULT)	|	VoC_lw16i(REG6,0x7)(hi)
0x00001804,	//0x130a		VoC_lw16i_set_inc(REG0,0x0,0x1)
0xDC88FFC0,	//0x130c		VoC_sw16inc_p(ACC0_LO,REG0,DEFAULT)	|	VoC_NOP
0xDC8ADC89,	//0x130e		VoC_sw16inc_p(ACC1_LO,REG0,DEFAULT)	|	VoC_sw16inc_p(ACC0_HI,REG0,DEFAULT)
0xDC8CDC8B,	//0x1310		VoC_sw16inc_p(RL6_LO,REG0,DEFAULT)	|	VoC_sw16inc_p(ACC1_HI,REG0,DEFAULT)
0xDC0EDC8D,	//0x1312		VoC_sw16_p(RL7_LO,REG0,DEFAULT)	|	VoC_sw16inc_p(RL6_HI,REG0,DEFAULT)
0x0008150F,	//0x1314		VoC_sw16_d(RL7_HI,0x8)
0x00091507,	//0x1316		VoC_sw16_d(REG7,0x9)
0x000A1506,	//0x1318		VoC_sw16_d(REG6,0xa)
0x00001804,	//0x131a		VoC_lw16i_set_inc(REG0,0x0,0x1)
0xD88AFFC0,	//0x131c		VoC_lw16inc_p(ACC1_LO,REG0,DEFAULT)	|	VoC_NOP
0xD888D88B,	//0x131e		VoC_lw16inc_p(ACC0_LO,REG0,DEFAULT)	|	VoC_lw16inc_p(ACC1_HI,REG0,DEFAULT)
0xD88ED889,	//0x1320		VoC_lw16inc_p(RL7_LO,REG0,DEFAULT)	|	VoC_lw16inc_p(ACC0_HI,REG0,DEFAULT)
0xD80CD88F,	//0x1322		VoC_lw16_p(RL6_LO,REG0,DEFAULT)	|	VoC_lw16inc_p(RL7_HI,REG0,DEFAULT)
0x0008140D,	//0x1324		VoC_lw16_d(RL6_HI,0x8)
0x00091407,	//0x1326		VoC_lw16_d(REG7,0x9)
0x000A1406,	//0x1328		VoC_lw16_d(REG6,0xa)
0xDF40FFC0,	//0x132a		VoC_push32(REG01,DEFAULT)	|	VoC_NOP
0xDF42DF41,	//0x132c		VoC_push32(REG45,DEFAULT)	|	VoC_push32(REG23,DEFAULT)
0x0A80DF43,	//0x132e		VoC_lw16i(REG0,0x1)(lo)	|	VoC_push32(REG67,DEFAULT)
0x0A810001,	//0x1330		VoC_lw16i(REG1,0x2)(lo)	|	VoC_lw16i(REG0,0x1)(hi)
0xFF290002,	//0x1332		VoC_movreg32(REG23,ACC1,DEFAULT)	|	VoC_lw16i(REG1,0x2)(hi)
0x168C2B80,	//0x1334		VoC_jal(result_check32)
0xDF40FFC0,	//0x1336		VoC_push32(REG01,DEFAULT)	|	VoC_NOP
0xDF42DF41,	//0x1338		VoC_push32(REG45,DEFAULT)	|	VoC_push32(REG23,DEFAULT)
0x0A80DF43,	//0x133a		VoC_lw16i(REG0,0x3)(lo)	|	VoC_push32(REG67,DEFAULT)
0x0A810003,	//0x133c		VoC_lw16i(REG1,0x4)(lo)	|	VoC_lw16i(REG0,0x3)(hi)
0xFF210004,	//0x133e		VoC_movreg32(REG23,ACC0,DEFAULT)	|	VoC_lw16i(REG1,0x4)(hi)
0x168C2B80,	//0x1340		VoC_jal(result_check32)
0xDF40FFC0,	//0x1342		VoC_push32(REG01,DEFAULT)	|	VoC_NOP
0xDF42DF41,	//0x1344		VoC_push32(REG45,DEFAULT)	|	VoC_push32(REG23,DEFAULT)
0x0A80DF43,	//0x1346		VoC_lw16i(REG0,0x5)(lo)	|	VoC_push32(REG67,DEFAULT)
0x0A810005,	//0x1348		VoC_lw16i(REG1,0x6)(lo)	|	VoC_lw16i(REG0,0x5)(hi)
0xFF390006,	//0x134a		VoC_movreg32(REG23,RL7,DEFAULT)	|	VoC_lw16i(REG1,0x6)(hi)
0x168C2B80,	//0x134c		VoC_jal(result_check32)
0xDF40FFC0,	//0x134e		VoC_push32(REG01,DEFAULT)	|	VoC_NOP
0xDF42DF41,	//0x1350		VoC_push32(REG45,DEFAULT)	|	VoC_push32(REG23,DEFAULT)
0x0A80DF43,	//0x1352		VoC_lw16i(REG0,0x7)(lo)	|	VoC_push32(REG67,DEFAULT)
0x0A810007,	//0x1354		VoC_lw16i(REG1,0x8)(lo)	|	VoC_lw16i(REG0,0x7)(hi)
0xFF310008,	//0x1356		VoC_movreg32(REG23,RL6,DEFAULT)	|	VoC_lw16i(REG1,0x8)(hi)
0x168C2B80,	//0x1358		VoC_jal(result_check32)
0xDF40FFC0,	//0x135a		VoC_push32(REG01,DEFAULT)	|	VoC_NOP
0xDF42DF41,	//0x135c		VoC_push32(REG45,DEFAULT)	|	VoC_push32(REG23,DEFAULT)
0x0A80DF43,	//0x135e		VoC_lw16i(REG0,0x7)(lo)	|	VoC_push32(REG67,DEFAULT)
0x0A810007,	//0x1360		VoC_lw16i(REG1,0x8)(lo)	|	VoC_lw16i(REG0,0x7)(hi)
0xFF190008,	//0x1362		VoC_movreg32(REG23,REG67,DEFAULT)	|	VoC_lw16i(REG1,0x8)(hi)
0x168C2B80,	//0x1364		VoC_jal(result_check32)
0x00020A87,	//0x1366		VoC_lw16i(REG7,0x2)
0x00010A86,	//0x1368		VoC_lw16i(REG6,0x1)
0x0A87FF1C,	//0x136a		VoC_lw16i(REG7,0x4)(lo)	|	VoC_movreg32(ACC0,REG67,DEFAULT)
0x0A860004,	//0x136c		VoC_lw16i(REG6,0x3)(lo)	|	VoC_lw16i(REG7,0x4)(hi)
0xFF1D0003,	//0x136e		VoC_movreg32(ACC1,REG67,DEFAULT)	|	VoC_lw16i(REG6,0x3)(hi)
0x00060A87,	//0x1370		VoC_lw16i(REG7,0x6)
0x00050A86,	//0x1372		VoC_lw16i(REG6,0x5)
0x0A87FF1E,	//0x1374		VoC_lw16i(REG7,0x8)(lo)	|	VoC_movreg32(RL6,REG67,DEFAULT)
0x0A860008,	//0x1376		VoC_lw16i(REG6,0x7)(lo)	|	VoC_lw16i(REG7,0x8)(hi)
0xFF1F0007,	//0x1378		VoC_movreg32(RL7,REG67,DEFAULT)	|	VoC_lw16i(REG6,0x7)(hi)
0x000A0A87,	//0x137a		VoC_lw16i(REG7,0xa)
0x00090A86,	//0x137c		VoC_lw16i(REG6,0x9)
0xDFC9DFC8,	//0x137e		VoC_push16(ACC0_HI,DEFAULT)	|	VoC_push16(ACC0_LO,DEFAULT)
0xDFCBDFCA,	//0x1380		VoC_push16(ACC1_HI,DEFAULT)	|	VoC_push16(ACC1_LO,DEFAULT)
0xDFCDDFCC,	//0x1382		VoC_push16(RL6_HI,DEFAULT)	|	VoC_push16(RL6_LO,DEFAULT)
0xDFCFDFCE,	//0x1384		VoC_push16(RL7_HI,DEFAULT)	|	VoC_push16(RL7_LO,DEFAULT)
0xDFC7DFC6,	//0x1386		VoC_push16(REG7,DEFAULT)	|	VoC_push16(REG6,DEFAULT)
0xDF89DF88,	//0x1388		VoC_pop16(ACC0_HI,DEFAULT)	|	VoC_pop16(ACC0_LO,DEFAULT)
0xDF8BDF8A,	//0x138a		VoC_pop16(ACC1_HI,DEFAULT)	|	VoC_pop16(ACC1_LO,DEFAULT)
0xDF8DDF8C,	//0x138c		VoC_pop16(RL6_HI,DEFAULT)	|	VoC_pop16(RL6_LO,DEFAULT)
0xDF8FDF8E,	//0x138e		VoC_pop16(RL7_HI,DEFAULT)	|	VoC_pop16(RL7_LO,DEFAULT)
0xDF87DF86,	//0x1390		VoC_pop16(REG7,DEFAULT)	|	VoC_pop16(REG6,DEFAULT)
0xDF40FFC0,	//0x1392		VoC_push32(REG01,DEFAULT)	|	VoC_NOP
0xDF42DF41,	//0x1394		VoC_push32(REG45,DEFAULT)	|	VoC_push32(REG23,DEFAULT)
0x0A80DF43,	//0x1396		VoC_lw16i(REG0,0x2)(lo)	|	VoC_push32(REG67,DEFAULT)
0x0A810002,	//0x1398		VoC_lw16i(REG1,0x1)(lo)	|	VoC_lw16i(REG0,0x2)(hi)
0xFF190001,	//0x139a		VoC_movreg32(REG23,REG67,DEFAULT)	|	VoC_lw16i(REG1,0x1)(hi)
0x168C2B80,	//0x139c		VoC_jal(result_check32)
0xDF40FFC0,	//0x139e		VoC_push32(REG01,DEFAULT)	|	VoC_NOP
0xDF42DF41,	//0x13a0		VoC_push32(REG45,DEFAULT)	|	VoC_push32(REG23,DEFAULT)
0x0A80DF43,	//0x13a2		VoC_lw16i(REG0,0x4)(lo)	|	VoC_push32(REG67,DEFAULT)
0x0A810004,	//0x13a4		VoC_lw16i(REG1,0x3)(lo)	|	VoC_lw16i(REG0,0x4)(hi)
0xFF390003,	//0x13a6		VoC_movreg32(REG23,RL7,DEFAULT)	|	VoC_lw16i(REG1,0x3)(hi)
0x168C2B80,	//0x13a8		VoC_jal(result_check32)
0xDF40FFC0,	//0x13aa		VoC_push32(REG01,DEFAULT)	|	VoC_NOP
0xDF42DF41,	//0x13ac		VoC_push32(REG45,DEFAULT)	|	VoC_push32(REG23,DEFAULT)
0x0A80DF43,	//0x13ae		VoC_lw16i(REG0,0x6)(lo)	|	VoC_push32(REG67,DEFAULT)
0x0A810006,	//0x13b0		VoC_lw16i(REG1,0x5)(lo)	|	VoC_lw16i(REG0,0x6)(hi)
0xFF310005,	//0x13b2		VoC_movreg32(REG23,RL6,DEFAULT)	|	VoC_lw16i(REG1,0x5)(hi)
0x168C2B80,	//0x13b4		VoC_jal(result_check32)
0xDF40FFC0,	//0x13b6		VoC_push32(REG01,DEFAULT)	|	VoC_NOP
0xDF42DF41,	//0x13b8		VoC_push32(REG45,DEFAULT)	|	VoC_push32(REG23,DEFAULT)
0x0A80DF43,	//0x13ba		VoC_lw16i(REG0,0x8)(lo)	|	VoC_push32(REG67,DEFAULT)
0x0A810008,	//0x13bc		VoC_lw16i(REG1,0x7)(lo)	|	VoC_lw16i(REG0,0x8)(hi)
0xFF290007,	//0x13be		VoC_movreg32(REG23,ACC1,DEFAULT)	|	VoC_lw16i(REG1,0x7)(hi)
0x168C2B80,	//0x13c0		VoC_jal(result_check32)
0xDF40FFC0,	//0x13c2		VoC_push32(REG01,DEFAULT)	|	VoC_NOP
0xDF42DF41,	//0x13c4		VoC_push32(REG45,DEFAULT)	|	VoC_push32(REG23,DEFAULT)
0x0A80DF43,	//0x13c6		VoC_lw16i(REG0,0xa)(lo)	|	VoC_push32(REG67,DEFAULT)
0x0A81000A,	//0x13c8		VoC_lw16i(REG1,0x9)(lo)	|	VoC_lw16i(REG0,0xa)(hi)
0xFF210009,	//0x13ca		VoC_movreg32(REG23,ACC0,DEFAULT)	|	VoC_lw16i(REG1,0x9)(hi)
0x168C2B80,	//0x13cc		VoC_jal(result_check32)
0x10000A80,	//0x13ce		VoC_lw16i(REG0,0x1000)
0xDFC0FFC0,	//0x13d0		VoC_push16(REG0,DEFAULT)	|	VoC_NOP
0x20000A81,	//0x13d2		VoC_lw16i(REG1,0x2000)
0xDFC1FFC0,	//0x13d4		VoC_push16(REG1,DEFAULT)	|	VoC_NOP
0xDF85DFEA,	//0x13d6		VoC_pop16(REG5,DEFAULT)	|	VoC_push16(SP16,DEFAULT)
0x00010A83,	//0x13d8		VoC_lw16i(REG3,0x1)
0xFFC0C15D,	//0x13da		VoC_NOP	|	VoC_add16_rr(REG5,REG5,REG3,DEFAULT)
0xDFAADFC5,	//0x13dc		VoC_pop16(SP16,DEFAULT)	|	VoC_push16(REG5,DEFAULT)
0x30000A81,	//0x13de		VoC_lw16i(REG1,0x3000)
0xDFC1FFC0,	//0x13e0		VoC_push16(REG1,DEFAULT)	|	VoC_NOP
0xDF82DF83,	//0x13e2		VoC_pop16(REG2,DEFAULT)	|	VoC_pop16(REG3,DEFAULT)
0xDF40FFC0,	//0x13e4		VoC_push32(REG01,DEFAULT)	|	VoC_NOP
0xDF42DF41,	//0x13e6		VoC_push32(REG45,DEFAULT)	|	VoC_push32(REG23,DEFAULT)
0x0A80DF43,	//0x13e8		VoC_lw16i(REG0,0x1000)(lo)	|	VoC_push32(REG67,DEFAULT)
0x0A811000,	//0x13ea		VoC_lw16i(REG1,0x3000)(lo)	|	VoC_lw16i(REG0,0x1000)(hi)
0xFFC03000,	//0x13ec		VoC_NAD	|	VoC_lw16i(REG1,0x3000)(hi)
0x168C2B80,	//0x13ee		VoC_jal(result_check32)
0x10000A80,	//0x13f0		VoC_lw16i(REG0,0x1000)
0x20000A81,	//0x13f2		VoC_lw16i(REG1,0x2000)
0xDF40FFC0,	//0x13f4		VoC_push32(REG01,DEFAULT)	|	VoC_NOP
0xDF85DFEB,	//0x13f6		VoC_pop16(REG5,DEFAULT)	|	VoC_push16(SP32,DEFAULT)
0x00020A83,	//0x13f8		VoC_lw16i(REG3,0x2)
0xDFABDFC5,	//0x13fa		VoC_pop16(SP32,DEFAULT)	|	VoC_push16(REG5,DEFAULT)
0xDF01FFC0,	//0x13fc		VoC_pop32(REG23,DEFAULT)	|	VoC_NOP
0xDF40FFC0,	//0x13fe		VoC_push32(REG01,DEFAULT)	|	VoC_NOP
0xDF42DF41,	//0x1400		VoC_push32(REG45,DEFAULT)	|	VoC_push32(REG23,DEFAULT)
0x0A80DF43,	//0x1402		VoC_lw16i(REG0,0x1000)(lo)	|	VoC_push32(REG67,DEFAULT)
0x0A811000,	//0x1404		VoC_lw16i(REG1,0x2000)(lo)	|	VoC_lw16i(REG0,0x1000)(hi)
0xFFC02000,	//0x1406		VoC_NAD	|	VoC_lw16i(REG1,0x2000)(hi)
0x168C2B80,	//0x1408		VoC_jal(result_check32)
0x0075152A,	//0x140a		VoC_sw16_d(SP16,0x75)
0x0076152B,	//0x140c		VoC_sw16_d(SP32,0x76)
0xF0047020,	//0x140e		VoC_lw16i_short(INC0,0x1,IN_PARALLEL)	|	VoC_lw16i_short(REG0,0x1,DEFAULT)
0x14142C1E,	//0x1410		VoC_loop_i(0x0,0xf)
0xDE00DFC0,	//0x1412		VoC_inc_p(REG0,DEFAULT)	|	VoC_push16(REG0,DEFAULT)
		//0x1414		VoC_endloop0
0xD612FFC0,	//0x1414		VoC_lw16_sd(REG2,0x0,DEFAULT)	|	VoC_NOP
0xD6F37F44,	//0x1416		VoC_lw16_sd(REG3,0xe,IN_PARALLEL)	|	VoC_lw32z(ACC0,DEFAULT)
0xDF40FFC0,	//0x1418		VoC_push32(REG01,DEFAULT)	|	VoC_NOP
0xDF42DF41,	//0x141a		VoC_push32(REG45,DEFAULT)	|	VoC_push32(REG23,DEFAULT)
0x0A80DF43,	//0x141c		VoC_lw16i(REG0,0xf)(lo)	|	VoC_push32(REG67,DEFAULT)
0x0A81000F,	//0x141e		VoC_lw16i(REG1,0x1)(lo)	|	VoC_lw16i(REG0,0xf)(hi)
0xFFC00001,	//0x1420		VoC_NAD	|	VoC_lw16i(REG1,0x1)(hi)
0x168C2B80,	//0x1422		VoC_jal(result_check32)
0x56780A80,	//0x1424		VoC_lw16i(REG0,0x5678)
0xDA40FFC0,	//0x1426		VoC_sw16_sd(REG0,0x3,DEFAULT)	|	VoC_NOP
0xDA607F44,	//0x1428		VoC_sw16_sd(REG0,0x5,IN_PARALLEL)	|	VoC_lw32z(ACC0,DEFAULT)
0xDF80DF80,	//0x142a		VoC_pop16(REG0,DEFAULT)	|	VoC_pop16(REG0,DEFAULT)
0xDF82DF80,	//0x142c		VoC_pop16(REG2,DEFAULT)	|	VoC_pop16(REG0,DEFAULT)
0xDF83DF80,	//0x142e		VoC_pop16(REG3,DEFAULT)	|	VoC_pop16(REG0,DEFAULT)
0xDF40FFC0,	//0x1430		VoC_push32(REG01,DEFAULT)	|	VoC_NOP
0xDF42DF41,	//0x1432		VoC_push32(REG45,DEFAULT)	|	VoC_push32(REG23,DEFAULT)
0x0A80DF43,	//0x1434		VoC_lw16i(REG0,0x5678)(lo)	|	VoC_push32(REG67,DEFAULT)
0x0A815678,	//0x1436		VoC_lw16i(REG1,0x5678)(lo)	|	VoC_lw16i(REG0,0x5678)(hi)
0xFFC05678,	//0x1438		VoC_NAD	|	VoC_lw16i(REG1,0x5678)(hi)
0x168C2B80,	//0x143a		VoC_jal(result_check32)
0x143E2C12,	//0x143c		VoC_loop_i(0x0,0x9)
		//0x143e		VoC_endloop0
0x0A80DF80,	//0x143e		VoC_lw16i(REG0,0x0)(lo)	|	VoC_pop16(REG0,DEFAULT)
0x0A810000,	//0x1440		VoC_lw16i(REG1,0x1)(lo)	|	VoC_lw16i(REG0,0x0)(hi)
0xF0500001,	//0x1442		VoC_lw16i_short(INC0,0x2,DEFAULT)	|	VoC_lw16i(REG1,0x1)(hi)
0x2C1EF051,	//0x1444		VoC_loop_i(0x0,0xf)(lo)	|	VoC_lw16i_short(INC1,0x2,DEFAULT)
0xDF40144B,	//0x1446		VoC_push32(REG01,DEFAULT)	|	VoC_loop_i(0x0,0xf)(hi)
0x5E00FFC0,	//0x1448		VoC_inc_p(REG0,DEFAULT)	|	VoC_NOP
0xFFC0DE08,	//0x144a		VoC_NOP	|	VoC_inc_p(REG1,IN_PARALLEL)
		//0x144b		VoC_endloop0
0xFFC0D919,	//0x144c		VoC_NOP	|	VoC_lw32_sd(REG23,0x2,DEFAULT)
0xDF41DF40,	//0x144e		VoC_push32(REG23,DEFAULT)	|	VoC_push32(REG01,DEFAULT)
0xDF43DF42,	//0x1450		VoC_push32(REG67,DEFAULT)	|	VoC_push32(REG45,DEFAULT)
0x00180A80,	//0x1452		VoC_lw16i(REG0,0x18)
0x00190A81,	//0x1454		VoC_lw16i(REG1,0x19)
0x168C2B80,	//0x1456		VoC_jal(result_check32)
0xFFC0D941,	//0x1458		VoC_NOP	|	VoC_lw32_sd(REG23,0x7,DEFAULT)
0xDF41DF40,	//0x145a		VoC_push32(REG23,DEFAULT)	|	VoC_push32(REG01,DEFAULT)
0xDF43DF42,	//0x145c		VoC_push32(REG67,DEFAULT)	|	VoC_push32(REG45,DEFAULT)
0x000E0A80,	//0x145e		VoC_lw16i(REG0,0xe)
0x000F0A81,	//0x1460		VoC_lw16i(REG1,0xf)
0x168C2B80,	//0x1462		VoC_jal(result_check32)
0x000E0A80,	//0x1464		VoC_lw16i(REG0,0xe)
0x000F0A81,	//0x1466		VoC_lw16i(REG1,0xf)
0xDD30FFC0,	//0x1468		VoC_sw32_sd(REG01,0x5,DEFAULT)	|	VoC_NOP
0xDF00DF00,	//0x146a		VoC_pop32(REG01,DEFAULT)	|	VoC_pop32(REG01,DEFAULT)
0xDF00DF00,	//0x146c		VoC_pop32(REG01,DEFAULT)	|	VoC_pop32(REG01,DEFAULT)
0xDF01DF00,	//0x146e		VoC_pop32(REG23,DEFAULT)	|	VoC_pop32(REG01,DEFAULT)
0xDF40FFC0,	//0x1470		VoC_push32(REG01,DEFAULT)	|	VoC_NOP
0xDF42DF41,	//0x1472		VoC_push32(REG45,DEFAULT)	|	VoC_push32(REG23,DEFAULT)
0x0A80DF43,	//0x1474		VoC_lw16i(REG0,0xe)(lo)	|	VoC_push32(REG67,DEFAULT)
0x0A81000E,	//0x1476		VoC_lw16i(REG1,0xf)(lo)	|	VoC_lw16i(REG0,0xe)(hi)
0xFFC0000F,	//0x1478		VoC_NAD	|	VoC_lw16i(REG1,0xf)(hi)
0x168C2B80,	//0x147a		VoC_jal(result_check32)
0x147E2C12,	//0x147c		VoC_loop_i(0x0,0x9)
		//0x147e		VoC_endloop0
0x152ADF00,	//0x147e		VoC_sw16_d(SP16,0x77)(lo)	|	VoC_pop32(REG01,DEFAULT)
0x152B0077,	//0x1480		VoC_sw16_d(SP32,0x78)(lo)	|	VoC_sw16_d(SP16,0x77)(hi)
0x14000078,	//0x1482		VoC_lw16_d(REG0,0x75)(lo)	|	VoC_sw16_d(SP32,0x78)(hi)
0x14010075,	//0x1484		VoC_lw16_d(REG1,0x76)(lo)	|	VoC_lw16_d(REG0,0x75)(hi)
0x14020076,	//0x1486		VoC_lw16_d(REG2,0x77)(lo)	|	VoC_lw16_d(REG1,0x76)(hi)
0x14030077,	//0x1488		VoC_lw16_d(REG3,0x78)(lo)	|	VoC_lw16_d(REG2,0x77)(hi)
0xFFC00078,	//0x148a		VoC_NOP	|	VoC_lw16_d(REG3,0x78)(hi)
0xDF41DF40,	//0x148c		VoC_push32(REG23,DEFAULT)	|	VoC_push32(REG01,DEFAULT)
0xDF43DF42,	//0x148e		VoC_push32(REG67,DEFAULT)	|	VoC_push32(REG45,DEFAULT)
0x168C2B80,	//0x1490		VoC_jal(result_check32)
0x12340A80,	//0x1492		VoC_lw16i(REG0,0x1234)
0x12210A81,	//0x1494		VoC_lw16i(REG1,0x1221)
0x00771500,	//0x1496		VoC_sw16_d(REG0,0x77)
0x00781501,	//0x1498		VoC_sw16_d(REG1,0x78)
0x0078142A,	//0x149a		VoC_lw16_d(SP16,0x78)
0x0077142B,	//0x149c		VoC_lw16_d(SP32,0x77)
0x0078152A,	//0x149e		VoC_sw16_d(SP16,0x78)
0x0077152B,	//0x14a0		VoC_sw16_d(SP32,0x77)
0x00781403,	//0x14a2		VoC_lw16_d(REG3,0x78)
0x00771402,	//0x14a4		VoC_lw16_d(REG2,0x77)
0x0075142A,	//0x14a6		VoC_lw16_d(SP16,0x75)
0x0076142B,	//0x14a8		VoC_lw16_d(SP32,0x76)
0xDF40FFC0,	//0x14aa		VoC_push32(REG01,DEFAULT)	|	VoC_NOP
0xDF42DF41,	//0x14ac		VoC_push32(REG45,DEFAULT)	|	VoC_push32(REG23,DEFAULT)
0xFFC05F43,	//0x14ae		VoC_NAD(IN_PARALLEL)	|	VoC_push32(REG67,DEFAULT)
0x168C2B80,	//0x14b0		VoC_jal(result_check32)
0x46000A80,	//0x14b2		VoC_lw16i(REG0,0x4600)
0x0A81F030,	//0x14b4		VoC_lw16i(REG1,0x0)(lo)	|	VoC_lw16i_short(INC0,0x1,DEFAULT)
0xF0310000,	//0x14b6		VoC_lw16i_short(INC1,0x1,DEFAULT)	|	VoC_lw16i(REG1,0x0)(hi)
0x14BB2CA0,	//0x14b8		VoC_loop_i(0x0,0x50)
0xDE08DC81,	//0x14ba		VoC_inc_p(REG1,DEFAULT)	|	VoC_sw16inc_p(REG1,REG0,DEFAULT)
		//0x14bb		VoC_endloop0
0x46000A80,	//0x14bc		VoC_lw16i(REG0,0x4600)
0x00010A82,	//0x14be		VoC_lw16i(REG2,0x1)
0x00010A83,	//0x14c0		VoC_lw16i(REG3,0x1)
0x14C52C50,	//0x14c2		VoC_loop_i(0x0,0x28)
0xD118D110,	//0x14c4		VoC_mac32inc_rp(REG3,REG0,DEFAULT)	|	VoC_mac32inc_rp(REG2,REG0,DEFAULT)
		//0x14c5		VoC_endloop0
0xFFC0FFC0,	//0x14c6		VoC_NOP	|	VoC_NOP
0xFFC0C929,	//0x14c8		VoC_NOP	|	VoC_add32_rr(REG23,ACC0,ACC1,DEFAULT)
0xDF41DF40,	//0x14ca		VoC_push32(REG23,DEFAULT)	|	VoC_push32(REG01,DEFAULT)
0xDF43DF42,	//0x14cc		VoC_push32(REG67,DEFAULT)	|	VoC_push32(REG45,DEFAULT)
0x62C80A80,	//0x14ce		VoC_lw16i(REG0,0x62c8)
0x00070A81,	//0x14d0		VoC_lw16i(REG1,0x7)
0x168C2B80,	//0x14d2		VoC_jal(result_check32)
0x00030A80,	//0x14d4		VoC_lw16i(REG0,0x3)
0x00030A81,	//0x14d6		VoC_lw16i(REG1,0x3)
0x00030A82,	//0x14d8		VoC_lw16i(REG2,0x3)
0x00030A83,	//0x14da		VoC_lw16i(REG3,0x3)
0x00480A96,	//0x14dc		VoC_lw16i(STATUS,0x48)
0x00440A96,	//0x14de		VoC_lw16i(STATUS,0x44)
0x14E43701,	//0x14e0		VoC_be32_rr(LABEL_TEST_BECARRY1,REG01,REG23)
0xFFC05E00,	//0x14e2		VoC_NAD(IN_PARALLEL)	|	VoC_inc_p(REG0,DEFAULT)
		//0x14e4		LABEL_TEST_BECARRY1
0x00080A96,	//0x14e4		VoC_lw16i(STATUS,0x8)
0xDF40FFC0,	//0x14e6		VoC_push32(REG01,DEFAULT)	|	VoC_NOP
0xDF42DF41,	//0x14e8		VoC_push32(REG45,DEFAULT)	|	VoC_push32(REG23,DEFAULT)
0xFF01DF43,	//0x14ea		VoC_movreg32(REG23,REG01,DEFAULT)	|	VoC_push32(REG67,DEFAULT)
0x00030A80,	//0x14ec		VoC_lw16i(REG0,0x3)
0x00030A81,	//0x14ee		VoC_lw16i(REG1,0x3)
0x168C2B80,	//0x14f0		VoC_jal(result_check32)
0x46400A80,	//0x14f2		VoC_lw16i(REG0,0x4640)
0x7FFE0AC2,	//0x14f4		VoC_lw16i(REG2,0xfffffffe)
0x00000A83,	//0x14f6		VoC_lw16i(REG3,0x0)
0x2C14E050,	//0x14f8		VoC_loop_i(0x0,0xa)(lo)	|	VoC_movreg16(INC0,REG2,DEFAULT)
0x80C314FB,	//0x14fa		VoC_add16_rp(REG3,REG3,REG0,DEFAULT)	|	VoC_loop_i(0x0,0xa)(hi)
		//0x14fb		VoC_endloop0
0xDF40FFC0,	//0x14fc		VoC_push32(REG01,DEFAULT)	|	VoC_NOP
0xDF42DF41,	//0x14fe		VoC_push32(REG45,DEFAULT)	|	VoC_push32(REG23,DEFAULT)
0x0AC0DF43,	//0x1500		VoC_lw16i(REG0,0xfffffffe)(lo)	|	VoC_push32(REG67,DEFAULT)
0x0A817FFE,	//0x1502		VoC_lw16i(REG1,0x280)(lo)	|	VoC_lw16i(REG0,0xfffffffe)(hi)
0xFFC00280,	//0x1504		VoC_NAD	|	VoC_lw16i(REG1,0x280)(hi)
0x168C2B80,	//0x1506		VoC_jal(result_check32)
0x46000A80,	//0x1508		VoC_lw16i(REG0,0x4600)
0x0A83F090,	//0x150a		VoC_lw16i(REG3,0x0)(lo)	|	VoC_lw16i_short(INC0,0x4,DEFAULT)
0x0A840000,	//0x150c		VoC_lw16i(REG4,0x0)(lo)	|	VoC_lw16i(REG3,0x0)(hi)
0xE2000000,	//0x150e		VoC_aligninc_pp(REG0,REG0,DEFAULT)	|	VoC_lw16i(REG4,0x0)(hi)
0x15122C0A,	//0x1510		VoC_loop_i(0x0,0x5)
		//0x1512		VoC_endloop0
0x830402C3,	//0x1512		VoC_add16inc_rp(REG4,REG4,REG0,IN_PARALLEL)	|	VoC_add16inc_rp(REG3,REG3,REG0,DEFAULT)
0xFFC0C0E3,	//0x1514		VoC_NOP	|	VoC_add16_rr(REG3,REG3,REG4,DEFAULT)
0xDF41DF40,	//0x1516		VoC_push32(REG23,DEFAULT)	|	VoC_push32(REG01,DEFAULT)
0xDF43DF42,	//0x1518		VoC_push32(REG67,DEFAULT)	|	VoC_push32(REG45,DEFAULT)
0x7FFE0AC0,	//0x151a		VoC_lw16i(REG0,0xfffe)
0x00550A81,	//0x151c		VoC_lw16i(REG1,0x55)
0x168C2B80,	//0x151e		VoC_jal(result_check32)
0x46010A80,	//0x1520		VoC_lw16i(REG0,0x4601)
0x0A83F090,	//0x1522		VoC_lw16i(REG3,0x0)(lo)	|	VoC_lw16i_short(INC0,0x4,DEFAULT)
0x0A840000,	//0x1524		VoC_lw16i(REG4,0x0)(lo)	|	VoC_lw16i(REG3,0x0)(hi)
0xE2000000,	//0x1526		VoC_aligninc_pp(REG0,REG0,DEFAULT)	|	VoC_lw16i(REG4,0x0)(hi)
0x152A2C0A,	//0x1528		VoC_loop_i(0x0,0x5)
		//0x152a		VoC_endloop0
0x830402C3,	//0x152a		VoC_add16inc_rp(REG4,REG4,REG0,IN_PARALLEL)	|	VoC_add16inc_rp(REG3,REG3,REG0,DEFAULT)
0xFFC0C0E3,	//0x152c		VoC_NOP	|	VoC_add16_rr(REG3,REG3,REG4,DEFAULT)
0xDF41DF40,	//0x152e		VoC_push32(REG23,DEFAULT)	|	VoC_push32(REG01,DEFAULT)
0xDF43DF42,	//0x1530		VoC_push32(REG67,DEFAULT)	|	VoC_push32(REG45,DEFAULT)
0x7FFE0AC0,	//0x1532		VoC_lw16i(REG0,0xfffe)
0x00690A81,	//0x1534		VoC_lw16i(REG1,0x69)
0x168C2B80,	//0x1536		VoC_jal(result_check32)
0x46280A80,	//0x1538		VoC_lw16i(REG0,0x4628)
0x0A83F790,	//0x153a		VoC_lw16i(REG3,0x0)(lo)	|	VoC_lw16i_short(INC0,0xfffffffc,DEFAULT)
0x0A840000,	//0x153c		VoC_lw16i(REG4,0x0)(lo)	|	VoC_lw16i(REG3,0x0)(hi)
0xE2000000,	//0x153e		VoC_aligninc_pp(REG0,REG0,DEFAULT)	|	VoC_lw16i(REG4,0x0)(hi)
0x15422C0A,	//0x1540		VoC_loop_i(0x0,0x5)
		//0x1542		VoC_endloop0
0x830402C3,	//0x1542		VoC_add16inc_rp(REG4,REG4,REG0,IN_PARALLEL)	|	VoC_add16inc_rp(REG3,REG3,REG0,DEFAULT)
0xFFC0C0E3,	//0x1544		VoC_NOP	|	VoC_add16_rr(REG3,REG3,REG4,DEFAULT)
0xDF41DF40,	//0x1546		VoC_push32(REG23,DEFAULT)	|	VoC_push32(REG01,DEFAULT)
0xDF43DF42,	//0x1548		VoC_push32(REG67,DEFAULT)	|	VoC_push32(REG45,DEFAULT)
0x7FFE0AC0,	//0x154a		VoC_lw16i(REG0,0xfffe)
0x01310A81,	//0x154c		VoC_lw16i(REG1,0x131)
0x168C2B80,	//0x154e		VoC_jal(result_check32)
0x46270A80,	//0x1550		VoC_lw16i(REG0,0x4627)
0x0A83F790,	//0x1552		VoC_lw16i(REG3,0x0)(lo)	|	VoC_lw16i_short(INC0,0xfffffffc,DEFAULT)
0x0A840000,	//0x1554		VoC_lw16i(REG4,0x0)(lo)	|	VoC_lw16i(REG3,0x0)(hi)
0xE2000000,	//0x1556		VoC_aligninc_pp(REG0,REG0,DEFAULT)	|	VoC_lw16i(REG4,0x0)(hi)
0x155A2C0A,	//0x1558		VoC_loop_i(0x0,0x5)
		//0x155a		VoC_endloop0
0x830402C3,	//0x155a		VoC_add16inc_rp(REG4,REG4,REG0,IN_PARALLEL)	|	VoC_add16inc_rp(REG3,REG3,REG0,DEFAULT)
0xFFC0C0E3,	//0x155c		VoC_NOP	|	VoC_add16_rr(REG3,REG3,REG4,DEFAULT)
0xDF41DF40,	//0x155e		VoC_push32(REG23,DEFAULT)	|	VoC_push32(REG01,DEFAULT)
0xDF43DF42,	//0x1560		VoC_push32(REG67,DEFAULT)	|	VoC_push32(REG45,DEFAULT)
0x7FFE0AC0,	//0x1562		VoC_lw16i(REG0,0xfffe)
0x01310A81,	//0x1564		VoC_lw16i(REG1,0x131)
0x168C2B80,	//0x1566		VoC_jal(result_check32)
0x46000A80,	//0x1568		VoC_lw16i(REG0,0x4600)
0x0A83F090,	//0x156a		VoC_lw16i(REG3,0x0)(lo)	|	VoC_lw16i_short(INC0,0x4,DEFAULT)
0x0A840000,	//0x156c		VoC_lw16i(REG4,0x0)(lo)	|	VoC_lw16i(REG3,0x0)(hi)
0xE2000000,	//0x156e		VoC_aligninc_pp(REG0,REG0,DEFAULT)	|	VoC_lw16i(REG4,0x0)(hi)
0x15722C0A,	//0x1570		VoC_loop_i(0x0,0x5)
		//0x1572		VoC_endloop0
0xBA2402C3,	//0x1572		VoC_sub16inc_pr(REG4,REG0,REG4,IN_PARALLEL)	|	VoC_add16inc_rp(REG3,REG3,REG0,DEFAULT)
0xFFC0C0E3,	//0x1574		VoC_NOP	|	VoC_add16_rr(REG3,REG3,REG4,DEFAULT)
0xDF41DF40,	//0x1576		VoC_push32(REG23,DEFAULT)	|	VoC_push32(REG01,DEFAULT)
0xDF43DF42,	//0x1578		VoC_push32(REG67,DEFAULT)	|	VoC_push32(REG45,DEFAULT)
0x7FFE0AC0,	//0x157a		VoC_lw16i(REG0,0xfffe)
0x00310A81,	//0x157c		VoC_lw16i(REG1,0x31)
0x168C2B80,	//0x157e		VoC_jal(result_check32)
0x46010A80,	//0x1580		VoC_lw16i(REG0,0x4601)
0x0A83F090,	//0x1582		VoC_lw16i(REG3,0x0)(lo)	|	VoC_lw16i_short(INC0,0x4,DEFAULT)
0x0A840000,	//0x1584		VoC_lw16i(REG4,0x0)(lo)	|	VoC_lw16i(REG3,0x0)(hi)
0xE2000000,	//0x1586		VoC_aligninc_pp(REG0,REG0,DEFAULT)	|	VoC_lw16i(REG4,0x0)(hi)
0x158A2C0A,	//0x1588		VoC_loop_i(0x0,0x5)
		//0x158a		VoC_endloop0
0xBA2402C3,	//0x158a		VoC_sub16inc_pr(REG4,REG0,REG4,IN_PARALLEL)	|	VoC_add16inc_rp(REG3,REG3,REG0,DEFAULT)
0xFFC0C0E3,	//0x158c		VoC_NOP	|	VoC_add16_rr(REG3,REG3,REG4,DEFAULT)
0xDF41DF40,	//0x158e		VoC_push32(REG23,DEFAULT)	|	VoC_push32(REG01,DEFAULT)
0xDF43DF42,	//0x1590		VoC_push32(REG67,DEFAULT)	|	VoC_push32(REG45,DEFAULT)
0x7FFE0AC0,	//0x1592		VoC_lw16i(REG0,0xfffe)
0x00390A81,	//0x1594		VoC_lw16i(REG1,0x39)
0x168C2B80,	//0x1596		VoC_jal(result_check32)
0x46280A80,	//0x1598		VoC_lw16i(REG0,0x4628)
0x0A83F790,	//0x159a		VoC_lw16i(REG3,0x0)(lo)	|	VoC_lw16i_short(INC0,0xfffffffc,DEFAULT)
0x0A840000,	//0x159c		VoC_lw16i(REG4,0x0)(lo)	|	VoC_lw16i(REG3,0x0)(hi)
0xE2000000,	//0x159e		VoC_aligninc_pp(REG0,REG0,DEFAULT)	|	VoC_lw16i(REG4,0x0)(hi)
0x15A22C0A,	//0x15a0		VoC_loop_i(0x0,0x5)
		//0x15a2		VoC_endloop0
0xBA2402C3,	//0x15a2		VoC_sub16inc_pr(REG4,REG0,REG4,IN_PARALLEL)	|	VoC_add16inc_rp(REG3,REG3,REG0,DEFAULT)
0xFFC0C0E3,	//0x15a4		VoC_NOP	|	VoC_add16_rr(REG3,REG3,REG4,DEFAULT)
0xDF41DF40,	//0x15a6		VoC_push32(REG23,DEFAULT)	|	VoC_push32(REG01,DEFAULT)
0xDF43DF42,	//0x15a8		VoC_push32(REG67,DEFAULT)	|	VoC_push32(REG45,DEFAULT)
0x7FFE0AC0,	//0x15aa		VoC_lw16i(REG0,0xfffe)
0x00BD0A81,	//0x15ac		VoC_lw16i(REG1,0xbd)
0x168C2B80,	//0x15ae		VoC_jal(result_check32)
0x46270A80,	//0x15b0		VoC_lw16i(REG0,0x4627)
0x0A83F790,	//0x15b2		VoC_lw16i(REG3,0x0)(lo)	|	VoC_lw16i_short(INC0,0xfffffffc,DEFAULT)
0x0A840000,	//0x15b4		VoC_lw16i(REG4,0x0)(lo)	|	VoC_lw16i(REG3,0x0)(hi)
0xE2000000,	//0x15b6		VoC_aligninc_pp(REG0,REG0,DEFAULT)	|	VoC_lw16i(REG4,0x0)(hi)
0x15BA2C0A,	//0x15b8		VoC_loop_i(0x0,0x5)
		//0x15ba		VoC_endloop0
0xBA2402C3,	//0x15ba		VoC_sub16inc_pr(REG4,REG0,REG4,IN_PARALLEL)	|	VoC_add16inc_rp(REG3,REG3,REG0,DEFAULT)
0xFFC0C0E3,	//0x15bc		VoC_NOP	|	VoC_add16_rr(REG3,REG3,REG4,DEFAULT)
0xDF41DF40,	//0x15be		VoC_push32(REG23,DEFAULT)	|	VoC_push32(REG01,DEFAULT)
0xDF43DF42,	//0x15c0		VoC_push32(REG67,DEFAULT)	|	VoC_push32(REG45,DEFAULT)
0x7FFE0AC0,	//0x15c2		VoC_lw16i(REG0,0xfffe)
0x00B90A81,	//0x15c4		VoC_lw16i(REG1,0xb9)
0x168C2B80,	//0x15c6		VoC_jal(result_check32)
0x46000A80,	//0x15c8		VoC_lw16i(REG0,0x4600)
0x0A83F090,	//0x15ca		VoC_lw16i(REG3,0x0)(lo)	|	VoC_lw16i_short(INC0,0x4,DEFAULT)
0x0A840000,	//0x15cc		VoC_lw16i(REG4,0x0)(lo)	|	VoC_lw16i(REG3,0x0)(hi)
0xE2000000,	//0x15ce		VoC_aligninc_pp(REG0,REG0,DEFAULT)	|	VoC_lw16i(REG4,0x0)(hi)
0x15D22C0A,	//0x15d0		VoC_loop_i(0x0,0x5)
		//0x15d2		VoC_endloop0
0x82C30104,	//0x15d2		VoC_add16inc_rp(REG3,REG3,REG0,IN_PARALLEL)	|	VoC_add16_rp(REG4,REG4,REG0,DEFAULT)
0xFFC0C0E3,	//0x15d4		VoC_NOP	|	VoC_add16_rr(REG3,REG3,REG4,DEFAULT)
0xDF41DF40,	//0x15d6		VoC_push32(REG23,DEFAULT)	|	VoC_push32(REG01,DEFAULT)
0xDF43DF42,	//0x15d8		VoC_push32(REG67,DEFAULT)	|	VoC_push32(REG45,DEFAULT)
0x7FFE0AC0,	//0x15da		VoC_lw16i(REG0,0xfffe)
0x00500A81,	//0x15dc		VoC_lw16i(REG1,0x50)
0x168C2B80,	//0x15de		VoC_jal(result_check32)
0x46010A80,	//0x15e0		VoC_lw16i(REG0,0x4601)
0x0A83F090,	//0x15e2		VoC_lw16i(REG3,0x0)(lo)	|	VoC_lw16i_short(INC0,0x4,DEFAULT)
0x0A840000,	//0x15e4		VoC_lw16i(REG4,0x0)(lo)	|	VoC_lw16i(REG3,0x0)(hi)
0xE2000000,	//0x15e6		VoC_aligninc_pp(REG0,REG0,DEFAULT)	|	VoC_lw16i(REG4,0x0)(hi)
0x15EA2C0A,	//0x15e8		VoC_loop_i(0x0,0x5)
		//0x15ea		VoC_endloop0
0x810402C3,	//0x15ea		VoC_add16_rp(REG4,REG4,REG0,IN_PARALLEL)	|	VoC_add16inc_rp(REG3,REG3,REG0,DEFAULT)
0xFFC0C0E3,	//0x15ec		VoC_NOP	|	VoC_add16_rr(REG3,REG3,REG4,DEFAULT)
0xDF41DF40,	//0x15ee		VoC_push32(REG23,DEFAULT)	|	VoC_push32(REG01,DEFAULT)
0xDF43DF42,	//0x15f0		VoC_push32(REG67,DEFAULT)	|	VoC_push32(REG45,DEFAULT)
0x7FFE0AC0,	//0x15f2		VoC_lw16i(REG0,0xfffe)
0x005A0A81,	//0x15f4		VoC_lw16i(REG1,0x5a)
0x168C2B80,	//0x15f6		VoC_jal(result_check32)
0x46280A80,	//0x15f8		VoC_lw16i(REG0,0x4628)
0x0A83F790,	//0x15fa		VoC_lw16i(REG3,0x0)(lo)	|	VoC_lw16i_short(INC0,0xfffffffc,DEFAULT)
0x0A840000,	//0x15fc		VoC_lw16i(REG4,0x0)(lo)	|	VoC_lw16i(REG3,0x0)(hi)
0xE2000000,	//0x15fe		VoC_aligninc_pp(REG0,REG0,DEFAULT)	|	VoC_lw16i(REG4,0x0)(hi)
0x16022C0A,	//0x1600		VoC_loop_i(0x0,0x5)
		//0x1602		VoC_endloop0
0x810402C3,	//0x1602		VoC_add16_rp(REG4,REG4,REG0,IN_PARALLEL)	|	VoC_add16inc_rp(REG3,REG3,REG0,DEFAULT)
0xFFC0C0E3,	//0x1604		VoC_NOP	|	VoC_add16_rr(REG3,REG3,REG4,DEFAULT)
0xDF41DF40,	//0x1606		VoC_push32(REG23,DEFAULT)	|	VoC_push32(REG01,DEFAULT)
0xDF43DF42,	//0x1608		VoC_push32(REG67,DEFAULT)	|	VoC_push32(REG45,DEFAULT)
0x7FFE0AC0,	//0x160a		VoC_lw16i(REG0,0xfffe)
0x01400A81,	//0x160c		VoC_lw16i(REG1,0x140)
0x168C2B80,	//0x160e		VoC_jal(result_check32)
0x46270A80,	//0x1610		VoC_lw16i(REG0,0x4627)
0x0A83F790,	//0x1612		VoC_lw16i(REG3,0x0)(lo)	|	VoC_lw16i_short(INC0,0xfffffffc,DEFAULT)
0x0A840000,	//0x1614		VoC_lw16i(REG4,0x0)(lo)	|	VoC_lw16i(REG3,0x0)(hi)
0xE2000000,	//0x1616		VoC_aligninc_pp(REG0,REG0,DEFAULT)	|	VoC_lw16i(REG4,0x0)(hi)
0x161A2C0A,	//0x1618		VoC_loop_i(0x0,0x5)
		//0x161a		VoC_endloop0
0x810402C3,	//0x161a		VoC_add16_rp(REG4,REG4,REG0,IN_PARALLEL)	|	VoC_add16inc_rp(REG3,REG3,REG0,DEFAULT)
0xFFC0C0E3,	//0x161c		VoC_NOP	|	VoC_add16_rr(REG3,REG3,REG4,DEFAULT)
0xDF41DF40,	//0x161e		VoC_push32(REG23,DEFAULT)	|	VoC_push32(REG01,DEFAULT)
0xDF43DF42,	//0x1620		VoC_push32(REG67,DEFAULT)	|	VoC_push32(REG45,DEFAULT)
0x7FFE0AC0,	//0x1622		VoC_lw16i(REG0,0xfffe)
0x01360A81,	//0x1624		VoC_lw16i(REG1,0x136)
0x168C2B80,	//0x1626		VoC_jal(result_check32)
0x46000A80,	//0x1628		VoC_lw16i(REG0,0x4600)
0x0A83F090,	//0x162a		VoC_lw16i(REG3,0x0)(lo)	|	VoC_lw16i_short(INC0,0x4,DEFAULT)
0x0A840000,	//0x162c		VoC_lw16i(REG4,0x0)(lo)	|	VoC_lw16i(REG3,0x0)(hi)
0xE2000000,	//0x162e		VoC_aligninc_pp(REG0,REG0,DEFAULT)	|	VoC_lw16i(REG4,0x0)(hi)
0x16322C0A,	//0x1630		VoC_loop_i(0x0,0x5)
		//0x1632		VoC_endloop0
0x830400C3,	//0x1632		VoC_add16inc_rp(REG4,REG4,REG0,IN_PARALLEL)	|	VoC_add16_rp(REG3,REG3,REG0,DEFAULT)
0xFFC0C0E3,	//0x1634		VoC_NOP	|	VoC_add16_rr(REG3,REG3,REG4,DEFAULT)
0xDF41DF40,	//0x1636		VoC_push32(REG23,DEFAULT)	|	VoC_push32(REG01,DEFAULT)
0xDF43DF42,	//0x1638		VoC_push32(REG67,DEFAULT)	|	VoC_push32(REG45,DEFAULT)
0x7FFE0AC0,	//0x163a		VoC_lw16i(REG0,0xfffe)
0x00500A81,	//0x163c		VoC_lw16i(REG1,0x50)
0x168C2B80,	//0x163e		VoC_jal(result_check32)
0x46010A80,	//0x1640		VoC_lw16i(REG0,0x4601)
0x0A83F090,	//0x1642		VoC_lw16i(REG3,0x0)(lo)	|	VoC_lw16i_short(INC0,0x4,DEFAULT)
0x0A840000,	//0x1644		VoC_lw16i(REG4,0x0)(lo)	|	VoC_lw16i(REG3,0x0)(hi)
0xE2000000,	//0x1646		VoC_aligninc_pp(REG0,REG0,DEFAULT)	|	VoC_lw16i(REG4,0x0)(hi)
0x164A2C0A,	//0x1648		VoC_loop_i(0x0,0x5)
		//0x164a		VoC_endloop0
0x830400C3,	//0x164a		VoC_add16inc_rp(REG4,REG4,REG0,IN_PARALLEL)	|	VoC_add16_rp(REG3,REG3,REG0,DEFAULT)
0xFFC0C0E3,	//0x164c		VoC_NOP	|	VoC_add16_rr(REG3,REG3,REG4,DEFAULT)
0xDF41DF40,	//0x164e		VoC_push32(REG23,DEFAULT)	|	VoC_push32(REG01,DEFAULT)
0xDF43DF42,	//0x1650		VoC_push32(REG67,DEFAULT)	|	VoC_push32(REG45,DEFAULT)
0x7FFE0AC0,	//0x1652		VoC_lw16i(REG0,0xfffe)
0x005A0A81,	//0x1654		VoC_lw16i(REG1,0x5a)
0x168C2B80,	//0x1656		VoC_jal(result_check32)
0x46280A80,	//0x1658		VoC_lw16i(REG0,0x4628)
0x0A83F790,	//0x165a		VoC_lw16i(REG3,0x0)(lo)	|	VoC_lw16i_short(INC0,0xfffffffc,DEFAULT)
0x0A840000,	//0x165c		VoC_lw16i(REG4,0x0)(lo)	|	VoC_lw16i(REG3,0x0)(hi)
0xE2000000,	//0x165e		VoC_aligninc_pp(REG0,REG0,DEFAULT)	|	VoC_lw16i(REG4,0x0)(hi)
0x16622C0A,	//0x1660		VoC_loop_i(0x0,0x5)
		//0x1662		VoC_endloop0
0x830400C3,	//0x1662		VoC_add16inc_rp(REG4,REG4,REG0,IN_PARALLEL)	|	VoC_add16_rp(REG3,REG3,REG0,DEFAULT)
0xFFC0C0E3,	//0x1664		VoC_NOP	|	VoC_add16_rr(REG3,REG3,REG4,DEFAULT)
0xDF41DF40,	//0x1666		VoC_push32(REG23,DEFAULT)	|	VoC_push32(REG01,DEFAULT)
0xDF43DF42,	//0x1668		VoC_push32(REG67,DEFAULT)	|	VoC_push32(REG45,DEFAULT)
0x7FFE0AC0,	//0x166a		VoC_lw16i(REG0,0xfffe)
0x01400A81,	//0x166c		VoC_lw16i(REG1,0x140)
0x168C2B80,	//0x166e		VoC_jal(result_check32)
0x46270A80,	//0x1670		VoC_lw16i(REG0,0x4627)
0x0A83F790,	//0x1672		VoC_lw16i(REG3,0x0)(lo)	|	VoC_lw16i_short(INC0,0xfffffffc,DEFAULT)
0x0A840000,	//0x1674		VoC_lw16i(REG4,0x0)(lo)	|	VoC_lw16i(REG3,0x0)(hi)
0xE2000000,	//0x1676		VoC_aligninc_pp(REG0,REG0,DEFAULT)	|	VoC_lw16i(REG4,0x0)(hi)
0x167A2C0A,	//0x1678		VoC_loop_i(0x0,0x5)
		//0x167a		VoC_endloop0
0x830400C3,	//0x167a		VoC_add16inc_rp(REG4,REG4,REG0,IN_PARALLEL)	|	VoC_add16_rp(REG3,REG3,REG0,DEFAULT)
0xFFC0C0E3,	//0x167c		VoC_NOP	|	VoC_add16_rr(REG3,REG3,REG4,DEFAULT)
0xDF41DF40,	//0x167e		VoC_push32(REG23,DEFAULT)	|	VoC_push32(REG01,DEFAULT)
0xDF43DF42,	//0x1680		VoC_push32(REG67,DEFAULT)	|	VoC_push32(REG45,DEFAULT)
0x7FFE0AC0,	//0x1682		VoC_lw16i(REG0,0xfffe)
0x01360A81,	//0x1684		VoC_lw16i(REG1,0x136)
0x168C2B80,	//0x1686		VoC_jal(result_check32)
0xFFC0DFA9,	//0x1688		VoC_NOP	|	VoC_pop16(RA,DEFAULT)
0xFFC06580,	//0x168a		VoC_NAD(IN_PARALLEL)	|	VoC_return
		//0x168c		result_check32
0x01961405,	//0x168c		VoC_lw16_d(REG5,0x196)
0x0197072D,	//0x168e		VoC_add16_rd(REG5,REG5,0x197)
0x1505FFC0,	//0x1690		VoC_sw16_d(REG5,0x196)(lo)	|	VoC_NOP
0x37010196,	//0x1692		VoC_be32_rr(LABEL_GOOD32,REG01,REG23)(lo)	|	VoC_sw16_d(REG5,0x196)(hi)
0x0AC416A4,	//0x1694		VoC_lw16i(REG4,0xbad0)(lo)	|	VoC_be32_rr(LABEL_GOOD32,REG01,REG23)(hi)
0x0AC53AD0,	//0x1696		VoC_lw16i(REG5,0xbad0)(lo)	|	VoC_lw16i(REG4,0xbad0)(hi)
0x17923AD0,	//0x1698		VoC_cfg_lg(0x0,)(lo)	|	VoC_lw16i(REG5,0xbad0)(hi)
0x15800000,	//0x169a		VoC_sw32_d(REG01,0x192)(lo)	|	VoC_cfg_lg(0x0,)(hi)
0x15810192,	//0x169c		VoC_sw32_d(REG23,0x194)(lo)	|	VoC_sw32_d(REG01,0x192)(hi)
0x15820194,	//0x169e		VoC_sw32_d(REG45,0x190)(lo)	|	VoC_sw32_d(REG23,0x194)(hi)
0x14070190,	//0x16a0		VoC_lw16_d(REG7,0x196)(lo)	|	VoC_sw32_d(REG45,0x190)(hi)
0xDE940196,	//0x16a2		VoC_cfg(0x14)	|	VoC_lw16_d(REG7,0x196)(hi)
		//0x16a4		LABEL_GOOD32
0x40010AC4,	//0x16a4		VoC_lw16i(REG4,0xc001)
0x40010AC5,	//0x16a6		VoC_lw16i(REG5,0xc001)
0x1582FFC0,	//0x16a8		VoC_sw32_d(REG45,0x190)(lo)	|	VoC_NOP
0xDF030190,	//0x16aa		VoC_pop32(REG67,DEFAULT)	|	VoC_sw32_d(REG45,0x190)(hi)
0xDF01DF02,	//0x16ac		VoC_pop32(REG23,DEFAULT)	|	VoC_pop32(REG45,DEFAULT)
0xE580DF00,	//0x16ae		VoC_return	|	VoC_pop32(REG01,DEFAULT)
		//0x16b0		result_check16
0x01961405,	//0x16b0		VoC_lw16_d(REG5,0x196)
0x0197072D,	//0x16b2		VoC_add16_rd(REG5,REG5,0x197)
0x1505FFC0,	//0x16b4		VoC_sw16_d(REG5,0x196)(lo)	|	VoC_NOP
0x35020196,	//0x16b6		VoC_be16_rr(LABEL_GOOD16,REG0,REG2)(lo)	|	VoC_sw16_d(REG5,0x196)(hi)
0x0AC416C8,	//0x16b8		VoC_lw16i(REG4,0xbad0)(lo)	|	VoC_be16_rr(LABEL_GOOD16,REG0,REG2)(hi)
0x0AC53AD0,	//0x16ba		VoC_lw16i(REG5,0xbad0)(lo)	|	VoC_lw16i(REG4,0xbad0)(hi)
0x17923AD0,	//0x16bc		VoC_cfg_lg(0x0,)(lo)	|	VoC_lw16i(REG5,0xbad0)(hi)
0x15000000,	//0x16be		VoC_sw16_d(REG0,0x192)(lo)	|	VoC_cfg_lg(0x0,)(hi)
0x15020192,	//0x16c0		VoC_sw16_d(REG2,0x194)(lo)	|	VoC_sw16_d(REG0,0x192)(hi)
0x15820194,	//0x16c2		VoC_sw32_d(REG45,0x190)(lo)	|	VoC_sw16_d(REG2,0x194)(hi)
0x14070190,	//0x16c4		VoC_lw16_d(REG7,0x196)(lo)	|	VoC_sw32_d(REG45,0x190)(hi)
0xDE940196,	//0x16c6		VoC_cfg(0x14)	|	VoC_lw16_d(REG7,0x196)(hi)
		//0x16c8		LABEL_GOOD16
0x40010AC4,	//0x16c8		VoC_lw16i(REG4,0xc001)
0x40010AC5,	//0x16ca		VoC_lw16i(REG5,0xc001)
0x1582FFC0,	//0x16cc		VoC_sw32_d(REG45,0x190)(lo)	|	VoC_NOP
0xDF030190,	//0x16ce		VoC_pop32(REG67,DEFAULT)	|	VoC_sw32_d(REG45,0x190)(hi)
0xDF01DF02,	//0x16d0		VoC_pop32(REG23,DEFAULT)	|	VoC_pop32(REG45,DEFAULT)
0xE580DF00,	//0x16d2		VoC_return	|	VoC_pop32(REG01,DEFAULT)
		//0x16d4		result_dma_check
0x16DA2E10,	//0x16d4		VoC_loop_r(0,REG2)
0xD9CAD9C1,	//0x16d6		VoC_lw32inc_p(REG45,REG1,DEFAULT)	|	VoC_lw32inc_p(REG23,REG0,DEFAULT)
0x16DC378A,	//0x16d8		VoC_bne32_rr(bad_dma_res,REG23,REG45)
		//0x16da		VoC_endloop0
0xE5CDFFC0,	//0x16da		VoC_jump(good_dma_res)	|	VoC_NOP
		//0x16dc		bad_dma_res
0x3AD00AC4,	//0x16dc		VoC_lw16i(REG4,0xbad0)
0x3AD00AC5,	//0x16de		VoC_lw16i(REG5,0xbad0)
0x3AD00ACE,	//0x16e0		VoC_lw16i(RL7_LO,0xbad0)
0x3AD00ACF,	//0x16e2		VoC_lw16i(RL7_HI,0xbad0)
0x00001792,	//0x16e4		VoC_cfg_lg(0x0,)
0xFFC05E94,	//0x16e6		VoC_NAD(IN_PARALLEL)	|	VoC_cfg(0x14)
		//0x16e8		good_dma_res
0x40010AC4,	//0x16e8		VoC_lw16i(REG4,0xc001)
0x40010AC5,	//0x16ea		VoC_lw16i(REG5,0xc001)
0xFFC06580,	//0x16ec		VoC_NAD(IN_PARALLEL)	|	VoC_return
		//0x16ee		result_s2b_unsigned_check
0x16F82E10,	//0x16ee		VoC_loop_r(0,REG2)
0xD8035882,	//0x16f0		VoC_lw16_p(REG3,REG0,IN_PARALLEL)	|	VoC_lw16inc_p(REG2,REG0,DEFAULT)
0xF94379C2,	//0x16f2		VoC_shru16_ri(REG3,0x8,IN_PARALLEL)	|	VoC_shru16_ri(REG2,0xfffffff8,DEFAULT)
0xF94259CA,	//0x16f4		VoC_shru16_ri(REG2,0x8,IN_PARALLEL)	|	VoC_lw32inc_p(REG45,REG1,DEFAULT)
0x16FA378A,	//0x16f6		VoC_bne32_rr(bad_dma_res_s2b_unsigned,REG23,REG45)
		//0x16f8		VoC_endloop0
0xE5CDFFC0,	//0x16f8		VoC_jump(good_dma_res_s2b_unsigned)	|	VoC_NOP
		//0x16fa		bad_dma_res_s2b_unsigned
0x3AD00AC4,	//0x16fa		VoC_lw16i(REG4,0xbad0)
0x3AD00AC5,	//0x16fc		VoC_lw16i(REG5,0xbad0)
0x3AD00ACE,	//0x16fe		VoC_lw16i(RL7_LO,0xbad0)
0x3AD00ACF,	//0x1700		VoC_lw16i(RL7_HI,0xbad0)
0x00001792,	//0x1702		VoC_cfg_lg(0x0,)
0xFFC05E94,	//0x1704		VoC_NAD(IN_PARALLEL)	|	VoC_cfg(0x14)
		//0x1706		good_dma_res_s2b_unsigned
0x40010AC4,	//0x1706		VoC_lw16i(REG4,0xc001)
0x40010AC5,	//0x1708		VoC_lw16i(REG5,0xc001)
0xFFC06580,	//0x170a		VoC_NAD(IN_PARALLEL)	|	VoC_return
		//0x170c		result_s2b_signed_check
0x17162E10,	//0x170c		VoC_loop_r(0,REG2)
0xD8035882,	//0x170e		VoC_lw16_p(REG3,REG0,IN_PARALLEL)	|	VoC_lw16inc_p(REG2,REG0,DEFAULT)
0xF84379C2,	//0x1710		VoC_shr16_ri(REG3,0x8,IN_PARALLEL)	|	VoC_shru16_ri(REG2,0xfffffff8,DEFAULT)
0xF84259CA,	//0x1712		VoC_shr16_ri(REG2,0x8,IN_PARALLEL)	|	VoC_lw32inc_p(REG45,REG1,DEFAULT)
0x1718378A,	//0x1714		VoC_bne32_rr(bad_dma_res_s2b_signed,REG23,REG45)
		//0x1716		VoC_endloop0
0xE5CDFFC0,	//0x1716		VoC_jump(good_dma_res_s2b_signed)	|	VoC_NOP
		//0x1718		bad_dma_res_s2b_signed
0x3AD00AC4,	//0x1718		VoC_lw16i(REG4,0xbad0)
0x3AD00AC5,	//0x171a		VoC_lw16i(REG5,0xbad0)
0x3AD00ACE,	//0x171c		VoC_lw16i(RL7_LO,0xbad0)
0x3AD00ACF,	//0x171e		VoC_lw16i(RL7_HI,0xbad0)
0x00001792,	//0x1720		VoC_cfg_lg(0x0,)
0xFFC05E94,	//0x1722		VoC_NAD(IN_PARALLEL)	|	VoC_cfg(0x14)
		//0x1724		good_dma_res_s2b_signed
0x40010AC4,	//0x1724		VoC_lw16i(REG4,0xc001)
0x40010AC5,	//0x1726		VoC_lw16i(REG5,0xc001)
0xFFC06580,	//0x1728		VoC_NAD(IN_PARALLEL)	|	VoC_return
		//0x172a		result_s2b_write_check
0x17322E10,	//0x172a		VoC_loop_r(0,REG2)
0xF9C2D9C1,	//0x172c		VoC_shru16_ri(REG2,0xfffffff8,DEFAULT)	|	VoC_lw32inc_p(REG23,REG0,DEFAULT)
0xFC415894,	//0x172e		VoC_shru32_ri(REG23,0x8,IN_PARALLEL)	|	VoC_lw16inc_p(REG4,REG1,DEFAULT)
0x17343594,	//0x1730		VoC_bne16_rr(bad_dma_res_s2b_write,REG2,REG4)
		//0x1732		VoC_endloop0
0xE5CDFFC0,	//0x1732		VoC_jump(good_dma_res_s2b_write)	|	VoC_NOP
		//0x1734		bad_dma_res_s2b_write
0x3AD00AC4,	//0x1734		VoC_lw16i(REG4,0xbad0)
0x3AD00AC5,	//0x1736		VoC_lw16i(REG5,0xbad0)
0x3AD00ACE,	//0x1738		VoC_lw16i(RL7_LO,0xbad0)
0x3AD00ACF,	//0x173a		VoC_lw16i(RL7_HI,0xbad0)
0x00001792,	//0x173c		VoC_cfg_lg(0x0,)
0xFFC05E94,	//0x173e		VoC_NAD(IN_PARALLEL)	|	VoC_cfg(0x14)
		//0x1740		good_dma_res_s2b_write
0x40010AC4,	//0x1740		VoC_lw16i(REG4,0xc001)
0x40010AC5,	//0x1742		VoC_lw16i(REG5,0xc001)
0xDF40E580,	//0x1744		VoC_push32(REG01,DEFAULT)	|	VoC_return
		//0x1745		push_all
0xDF42DF41,	//0x1746		VoC_push32(REG45,DEFAULT)	|	VoC_push32(REG23,DEFAULT)
0xE580DF43,	//0x1748		VoC_return	|	VoC_push32(REG67,DEFAULT)
