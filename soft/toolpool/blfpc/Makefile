## Makefile automatically generated by NewTest.pl ##
# For more information on the different variables, and others you
# may define, see $(SOFT_DIR)/Makefile.skel and/or read the doc
## --------------Don't change the line below------------------ ##
include $(SOFT_WORKDIR)/env/compilation/compilevars.mk

LOCAL_NAME := toolpool/blfpc

LOCAL_API_DEPENDS := \
    platform \
    platform/base/common \
    platform/chip/defs \
    platform/edrv/aud \
    platform/edrv/pmd \
    platform/edrv/memd

LOCAL_MODULE_DEPENDS := platform/chip/bootloader

ifeq "$(GOKE_FLASH_TOOL_SUPPORT)" "y"
LOCAL_MODULE_DEPENDS := $(LOCAL_MODULE_DEPENDS) toolpool/blfpc/goke_flash_tool
LOCAL_EXPORT_FLAG += GOKE_FLASH_TOOL_SUPPORT
endif

IS_ENTRY_POINT := yes
BOOTLOADER := yes

# Check if it is a USB flash programmer
ifeq "$(FASTPF_USE_USB)" "1"
LOCAL_EXPORT_FLAG += FASTPF_USE_USB
LOCAL_BATCH_NAME := usb
else
LOCAL_EXPORT_FLAG += FASTPF_USE_HOST
LOCAL_BATCH_NAME := host
endif

LOCAL_EXPORT_FLAG += BOOTLOADER
LOCAL_EXPORT_FLAG += MEMD_FLSH_MODEL=${FLSH_MODEL}

# Generate the revision (version) file automatically during the make process.
AUTO_GEN_REVISION_HEADER := yes

# We always want to compile the flash programmer as a Ramrun.
export CT_RAMRUN := 1

# Do not include ROM content in the final elf file
export ROM_IN_FLASH_ELF := 0

# Do not generate BCPU image
export NO_BCPU_IMAGE := 1

# Special linker to get everything in internal sram.
LINKER_MASTER := blramrun.ld

C_SRC := $(wildcard *.c)
S_SRC := $(wildcard *.S)
C++_SRC := $(wildcard *.cpp)

include $(SOFT_WORKDIR)/env/compilation/compilerules.mk

FLSHPROG_INSTALL_DIR := ${SOFT_WORKDIR}/toolpool/plugins/fastpf/flash_programmers
FLSHPROG_CT_ASIC ?= ${CT_ASIC}
TARGET_RAMRUN_LOD_FILE ?= ${LOCAL_BATCH_NAME}_${FLSHPROG_CT_ASIC}_${FLSH_MODEL}

flshprog_install_ff:
	@${ECHO} "INSTALL           ${LOCAL_BATCH_NAME}_${CT_TARGET}_ramrun.lod"
	mkdir -p ${FLSHPROG_INSTALL_DIR}
	cp ${LODBASE}ramrun.lod ${FLSHPROG_INSTALL_DIR}/${TARGET_RAMRUN_LOD_FILE}_ramrun.lod
